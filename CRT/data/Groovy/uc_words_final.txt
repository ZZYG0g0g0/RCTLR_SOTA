namespac navig like node root namespac doc namespac xsd new namespac http xsd def root 91 93 def e root 91 93 91 93 
project coin propos binari liter find attach patch allow liter intern chang allow compil creat correct int 
develop ast transform often difficult check particular transform perform necessari exampl would like type check verifi type checker perform work particular ast node contain metadata infer type check current requir compil trickeri propos add ast transform allow embed test exampl could test field ast transform way import asttest valu def owner assert x field int x 
similarili match method matcher matchesparti method return true string match pattern charact could make string match pattern 
snipset def option def deep deep field deep fail error signatur method applic argument type valu possibl solut submap dump spread sleep long 
retriev node xml easi way clone node process without chang origin xml current use workaround def clonednod new xmlparser xmlnode would lot easi node object copi constructor clone would support 
add annot closur paramet allow document method resolv closur exampl exec execut foo arg bar baz class project execresult exec delegatesto execspec closur closur 
process l println work bufferedinputstream add gettext inputstream would nice 
provid mock support pure mean proxymetaclass interceptor extern mock librari need long make use rang closur demand behaviour allow strict loos expect term sequenc depend demand specif effect method call 
current observ version map list miss set 
compil class script along standard compil process idea use modul within class script defin 
log annot current allow chang name logger instanc class support chang log categori log categori seem hardcod fulli qualifi name annot class would nice possibl chang categori exampl packag common categori class myclass would allow specifi custom categori use log configur specifi level especi grail framework special compon servic control use custom log categori default prefix compon use log annot break convent log configur compon effect chang 
discuss would nice immut transform add copywith method take map return new instanc immut class true class person string first last def p new person tim yate return instanc def q first tim assert p return new instanc def be first alic assert p assert alic assert yate 
basic implement equival transform griffon 
need kind reflect api trait program reason trait runtim exampl one thing need know spock whether method accord java reflect declar class x actual declar class inherit trait 
provid contain dgm method primit array alreadi count size method primit array contain iscas method java programm familiar contain provid approach 
iter list object tail drop take init dropright takeright miss add patch method name scala 
would great altern form min closur return valu compar rather comparison often tri choos desir element list express comput desir right x x lt gt wordi need write desir express twice also need explicit argument closur would great maxv could write maxv maximum valu similarli minv trivial implement use global function def minv l closur f return x f x lt gt f 
send pull request github method name haskel scala kotlin use index index implement public static intrang getindic list self return new intrang fals 0 usag 
remov duplic entri collect 
gt analog collect empti map gt evalu fals 
pleas see attach new suggest featur groovyjdk provid test case demonstr featur pleas feel free provid feedback hein 
transform captur group someth els assert 2 4 6 8 1 2 3 4 p digit 2 new method string public static string replaceal string self string regex closur closur matcher matcher regex self stringbuff sb new stringbuff string foundtext 0 0 sb foundtext sb return els return self 
implement iscas closur like public boolean iscas object candid return call candid let closur play switch case like switchtest void testswitchwithclosur switch 0 case true break default assert fals switch 0 case fals assert fals switch 0 case 0 break default assert fals switch 0 case candid gt candid 0 break default assert fals way switch logic 
use object1 object2 inconveni suggest object2 object2 object2 object2 
add basescript transform allow set base script class directli script say without compil option pull request 
gpath syntax support xml namespac xmlparser class creat special name xml element namespac elementnam gpath node select support format xml namespac commonli use xml world gpath would benefit use transpar way node whether bind namespac 
result size implement stringbuff size also implement stringbuild platform 
support annot local variabl declar syntact legal annot local variabl ast produc carri annot use case ast builder either like annot local variabl like astsourc def sourc println compil new date annot properti within closur declarationexpress like def result new astbuild phase astsourc sourc println compil new date getannot method probabl add declarationexpress support 
find closur findal closur method realli use would also good list indexof closur list indexof int startindex closur startindex tell index start look int list indicesofal closur return type may also list lt integ gt whatev list lastindexof closur jdk sometim import know element fullfil give condit list 
new file input gt new file gt lt lt input 
add abil custom truth ie way boolean coercion happen let user abl defin asboolean method type way use myobject myobject evalu boolean ad method 
let code new method extend core jdk class among foo 
use script languag script defin use option access current line number attach patch defin new variabl count hold line number current file pars patch file 
write script languag help sometim automat access array contain current line split accord pattern patch add commandlin option implement take option paramet split pattern use split pattern singl space patch file 
regroup element accord closur criterion insid map index valu criterion def expect def list 91 1 quot quot 2 quot b quot 93 def result assert 91 1 2 93 result 91 integ 93 assert 91 quot quot quot b quot 93 result 91 string 93 assert 91 93 result 91 bigdecim 93 assert 3 
execut script via would sometim use defin method begin method end execut exactli begin loop start end loop end file process exampl def begin def end println c c split 91 0 93 91 93 result 39 follow 1 2 3 4 1 2 3 4 5 1 2 3 4 5 6 1 2 3 4 5 6 7 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 9 patch provid function addit singular patch necessari happi provid 
part attract languag jrubi flexibl method dispatch part metaprogram self javascript style prototyp base oop addit class like protoobject class attach possibl prototyp base oop protoobject possibl write script like one creat prototyp object def p new protoobject add method self gt println hello self creat anoth object def new protoobject println hello world set prototyp p proto p print hello world call proto protoobject class similar expando expando set current object deleg closur 8211 therefor work properti multithread protoobject class pass first argument closur besid closur deleg use method search within closur code properti access direct user write anyway explicit self first argument probabl okay 
delet directori includ subdirectori tediou task method file like deleterecurs would realli help current use alreadi quti nice code like def datadir new file path def dir delet els dir lt lt delet directori could new file dir similar 
provid way get result addit 2 map eg assert term map semant would take prioriti duplic key leav right consid java blindli add element give map perhap right side take preced assert other think origin email thread 
work map two scenario want special default valu key exist ie null want creat new object key exist propos syntax def map new hashmap defaultvalu xxx x assert assert xxx map 91 93 x new assert x new assert 1 assert map 91 93 new x assert x new assert 1 assert abstract specifi constant valu closur creat map get valu key exist constant return result run closur miss key paramet closur note check key exist suffici check whether return null map contain null valu implement note suggest implement use wrapper defaultvaluemap handl default case method get simpli forward wrap map get look like public object get object key containskey key return defaultvalu return key open question happen closur return null mayb new pair add case want add new except 
file gdk follow method void eachdir closur void eachfil closur void eachfilematch filter closur void eachfilerecurs closur coher would good void eachdirmatch filter closur void eachdirrecurs closur see discuss dev mail list 
synchron express 
would good oo lt lt object shorthand object 
wii current input output gt similar suggest mirror object variant oi oo gt would make set proxi type object socket streamlin 
john wilson suggest improv syntax catch sever except suggest java would think trivial tri field field somefield somevalu catch securityexcept nosuchfieldexcept e someth els except 
def list assert set set 
need add support propertymiss well methodmiss exampl getter string name gt setter string name object valu gt 
tri use xmlslurper process xml nest element text need get text one level time text method return text childrend see anyth would bring back local sampl consol gt def model new xmlslurper lt amodel gt lt apar bubba gt text lt achild gt child text lt gt lt gt lt gt gt 91 0 93 gt gt result textchild text 
transpos method like rubi transpos method array python zip method expect behaviour assert assert transpos 91 39 39 39 b 39 93 91 1 2 3 93 assert transpos 91 1 2 3 93 91 4 5 6 93 assert transpos 91 1 2 3 93 91 4 5 93 91 9 93 91 6 7 8 93 assert transpos 91 1 2 3 93 assert transpos 
observablemap fire propertychangeev put putal call work decor map none pass argument wrap hashmap jochen suggest closur may option use discrimin properti may fire event valu chang use construct observ expando follow code filter method add expando def bean new expando new observablemap instanceof closur java trigger previou valu null trigger previousvalu newvalu hello trigger valu closur idem even valu chang 
would nice support subscript access bitset object def bitset new bitset bitset true bitset true def valu bitset def subset bitset 
current list invok method item list would use also support list invok method item list recurs list within list def assert 2 assert animallist assert animallist 
would cool keyword could use coerc string enum valu sinc current throw except add function impact exist code 
recent come across situat want initi jce certif directli url want def cfurl def cf def newrootcert put asid fact method return closur return valu go creat separ jira current withinputstream method url could someth like work around rather groovi way def newrootcert attach patch add test find exist test matter sure good way handl would 
hi talk jame like idea add simpl closur c easili run thing new thread exampl thread process long run process someth els run 
mock class dynam method properti one exampl grail domain object would use implement domain specif method want mock gorm method 
frequent run across situat want creat map two equal size list use one list key second list valu mayb miss someth seem find compact way requir loop intermedi variabl good come add method map list keylist list valuelist gt assert int lt keylist valuelist deleg allow call puteach map pass two equal size list assert 91 93 91 39 key1 39 39 key2 39 39 key3 39 93 91 39 value1 39 39 value2 39 39 value3 39 93 91 39 key1 39 39 value1 39 39 key2 39 39 value2 39 39 key3 39 39 value3 39 93 sinc seem gener use might someth worth add base gdk 
mani method gdk could reflect gener collect exampl add two plu obtain element getat affect runtim semant respect method make power static analyz possibl 
new bindabl annot great reduc amount boilerpl code requir bean next logic step ident annot appli one attribut tell properti defin ident busi key bean object equal hashcod tostr would behav accordingli may relat sure mark fix 
allow use compil flag enabl type check class method except class method annot typeuncheck annot anoth antonym typecheck nottypecheck runtimetypecheck testinproduct youneedextraunittestsforthi larg project hundr class want type check 99 code would much boilerpl rememb put typecheck annot everi class would also requir we refactor method contain dynam code separ class satisfi typecheck contract would well compil flag revers type check contract everyth type check except class method explicitli mark allow dynam code discuss guillaum laforg talk gr8conf 2012 copenhagen agre would good addit open jira ticket anoth audienc member request well 
observablelist provid similar behavior list also fire event whenev element add remov clear multi via allal removeal retainal 
gdk conveni method wrap simpledateformat new date probabl add calendar would complimentari pars method appropri 
jira document fact annot write discuss still debat whether move contrib area issu updat chang make cheer paul 
base mail list feedback seem like split worthwhil partit almost easili replic use groupbi mayb worth function findal return accept reject element two list 
current possibl creat instanc method file new file line println current add static method thread process long run process 
current suggest use packagescop ast macro 
provid conveni encodebase64 method byte would even conveni also encodehex method byte see encodebase64 apach common codec project provid implement hex encod would also trivial implement scratch featur would immens conveni work checksum 
explain follow thread scal provid stripmargin method string help overal situat someth fanci cover default behavior user roll impl link scala api doc 
suggest introduc new ast transform inheritconstructor place class class annot inherit constructor super class exampl class int arg string arg inheritconstructor class b extend class b equal class b extend b super b int arg super arg b string arg super arg think use especi defin except 
make work regular express much easi java still coupl hole implement attach patch add coupl simpl method make regular express much easi use one common use case search string regular express pattern match find someth match valu current recommend way creat matcher use index work match might find assert 10292 new york ny 10292 5 91 0 93 tri string actual match regular express get indexoutofboundexcept safe need check match requir entir string match see string actual def new york ny 5 91 0 93 def zip zip also inconsist behavior regular express happen captur group return array contain match captur group forc index array actual get match want assert c foo car baz 91 0 93 91 1 93 alreadi add closur awar replac method string class patch add complimentari find method string return string match closur without need worri matcher object array index either call without closur get full find match back even group assert 10292 new york ny 10292 5 safe return null match find clean boilerpl safeti check quit bit user check null use truth want def zip new york ny 5 return null zip want work captur group manipul valu pass closur find method pass full match well captur group collect base regular express method work captur group match pass closur assert bar foo bar baz match gt return match one captur group assert b foo bar baz match firstlett gt return firstlett mani captur group pass closur full match assert 2339999 adsf adsf 3 3 4 match areacod exchang stationnumb gt assert match assert null areacod assert 233 exchang assert 9999 stationnumb return exchang stationnumb patch also includ number unit test exercis demonstr function get traffic blog post explan regular express think person struggl bit current implement think patch make work regular express much easi intuit 
age ago write spell checker give help inform case missingmethodexept miss properti except throw recent pick finish patch use reflect find miss method low edit distanc rel request method also use edit distanc method rank method probabl solut display first perform impact isol properti method constructor know case impact work program take consider unit test partial era complet metric coverag current weak miss method gt 10 error signatur method static applic argument type valu 91 10 93 possibl solut valueof valueof int valueof int gt miss constructor new integ new object error could find match constructor possibl solut int miss constructor new error properti xy class possibl solut x 
swing model follow name standard common oper like get int set int element clear provid iter method make sens request enhanc swing class model addit method bridg gap use method port 
pleas add option grape gener ivi depend command line like option exampl command grape resolv poi could gener follow output lt depend poi gt lt depend gt 
file conveni method like file eachlin file spliteachlin other way specifi encod read exampl file eachlin string charset closur c method courc write new inputstreamread new fileinputstream new file charset propos add encod method gdk enhanc method use like new file arg println refer write emc definit method encod like c gt new inputstreamread new fileinputstream deleg c gdk equival method enough 
current need edit make grape awar new maven2 repositori address add new annot graperesolv http grab 
inputstream url file gettext method byte patch add method getbyt ex file url http bytearrayinputstream 91 93 byte 
sometim troubleshoot issu help know class compil one version run incompat version current class compil leav sign version behind annot introduc store version subsequ retriev know origin class 
see 
current equal extend array list set map exampl assert pass assert set set fail surpris ungroovi would nice equal set map drawback would make equal inconsist lookup result two set equal yield differ result hand problem alreadi exist list equal map one could avoid lookup inconsist use equal valu would good discuss propos 
sometim want curri left hand side alway fake rewrit revers method closur manual function languag support curri right arbitrari index rcurri method allow exampl like def divid b gt b def halver 2 assert halver 8 4 ncurri method would allow exampl curri middl paramet three argument method curri middl param util method collect binarysearch list list object key compar c def catsearch amp 1 cat def result catsearch mylist mycompar 
iter date interv current possibl use follow code def start new gregoriancalendar 2010 1 def end new gregoriancalendar 2010 31 def current start current lt end println current follow style number iter groovi code end println start println propos implement upto lt lt date end closur c gt def next deleg next lt end next downto lt lt date start closur c gt def next deleg next gt start next next 
unix tr translat command would good support someth similar translat similar tr achiev use regular express notat requir much compact implement much effici 
kind code write set use engin often fairli similar syntact sugar might improv look code polyglot scenario 
would use support assert hello hello 
use nix shell replac would use support follow assert assert 1234567 8 assert x assert x 
minor use conveni concurr scenario would use synchron annot similar offer project lombok make easi follow good practic without rememb rule 
regard thread user list take n method would realli use addit codebas assum work similar languag def assert 0 assert 1 assert 4 method work collect string map lazili iter reader inputstream 
mister jami mccrindl suggest new socket server socket closur closur jami idea method 
would use support someth like f compos gt gt oper closur def twice gt 2 def inc b gt b 1 def f inc gt gt twice def g x gt twice inc x longhand equival assert f 10 22 assert g 10 22 def string2char def p integ amp tohexstr gt gt string2char gt gt charact amp touppercas assert p 15 f def multipli b gt b def ident gt def sq ident gt gt multipli assert 1 5 sq 
implement closur memoiz like gpar 
add support withreadlock withwritelock declar synchron per discuss commit look feedback code import public class resourceprovid privat final map lt string string gt datum new hashmap lt string string gt withreadlock public string getresourc string key throw except return key withwritelock public void refresh throw except resourc memori becom code import import public class resourceprovid privat final readwritelock reentrantlock new reentrantreadwritelock privat final map lt string string gt datum new hashmap lt string string gt public string getresourc string key throw except tri return key final public void refresh throw except tri resourc memori final also specifi lock like import public class resourceprovid privat final readwritelock mylock new reentrantreadwritelock privat final map lt string string gt datum new hashmap lt string string gt withreadlock mylock public string getresourc string key throw except return key withwritelock mylock public void refresh throw except resourc memori case code becom public class resourceprovid privat final readwritelock mylock new reentrantreadwritelock privat final map lt string string gt datum new hashmap lt string string gt public string getresourc string key throw except tri return key final public void refresh throw except tri resourc memori final 
add trampolin capabl closur avoid stackoverflowexcept use closur lot recurs call patch contribut vã ¡ clav 
follow discuss ast transform allow transpar script interrupt worker thread interrupt add thread interrupt check sever point code closur differ type loop method first statement attach file preliminari implement propag compilationunit yet find properli simpl script use test feel free review patch 
dgm min map map closur closur shorthand closur likewis max 
write ast transform allow user creat custom interrupt condit instead check threadinterrupt attach patch complet document date test case attach use discuss 
would handi sort method map properti would sort sinc someth commonli do possibl implement properti class might look like new treemap deleg exampl usag would 
current flag error normal public field disallow 
provid slurper builder pars creat json payload issu initi trigger discuss around add json support 
pleas see would nice http 
similarli may want like file well etc 
describ thread user list implement groupbi receiv list array closur criterion group would use make nest group def group def expect 22 33 33 assert group assert group assert group null groupbi one closur criterion would behav like current implement groupbi 
whole idea similar exist great lazi annot differ concept instead appli field appli method thu provid wide field use appli getter serv altern lazi appli method provid lazi thu elimin need heavi refactor certain situat simpli let user add annot method suggest could work cach createx new 1 2 3 get transform privat createx result createx new 1 2 3 createx createx result null return els synchron createx result null createx result createx return createx result whole thing could extend cach differ result method depend argument topic discuss 
immut annot list know effect immut class way provid extens list class name vouch particular field immut possibl way implement might look like exampl immut class person string name knownimmut myuuid id knownimmut immut class person string name mydat dob muuuid id 
