package org infinispan stream impl import java util Abstract Map import java util Array Deque import java util Collection import java util Collections import java util Hash Set import java util Queue import java util Set import java util concurrent Executor import java util concurrent Time Unit import java util concurrent atomic Atomic Boolean import java util concurrent atomic Atomic Reference Array import java util function Binary Operator import java util function Consumer import java util function Function import java util function Predicate import java util function Supplier import java util stream Base Stream import java util stream Collectors import java util stream Stream import org infinispan Cache Stream import org infinispan commons Cache Exception import org infinispan commons util concurrent Concurrent Hash Set import org infinispan container entries Cache Entry import org infinispan distribution Distribution Manager import org infinispan distribution Localized Cache Topology import org infinispan distribution ch Consistent Hash import org infinispan distribution ch Key Partitioner import org infinispan factories Component Registry import org infinispan partitionhandling impl Partition Handling Manager import org infinispan remoting transport Address import org infinispan statetransfer State Transfer Lock import org infinispan stream impl intops Intermediate Operation import org infinispan stream impl termop Segment Retrying Operation import org infinispan stream impl termop Single Run Operation import org infinispan stream impl termop object Flat Map Iterator Operation import org infinispan stream impl termop object Map Iterator Operation import org infinispan stream impl termop object No Map Iterator Operation import org infinispan util Range Set import org infinispan util concurrent Timeout Exception import org infinispan util logging Log import org infinispan util logging Log Factory Abstract stream that provides all of the common functionality required for all types of Streams including the various primitive types param The type returned by the stream param The stream interface public abstract class Abstract Cache Stream extends Base Stream extends implements Base Stream protected final Log log Log Factory get Log get Class protected final Queue Intermediate Operation intermediate Operations protected final Address local Address protected final Distribution Manager dm protected final Supplier Cache Stream Cache Entry supplier protected final Cluster Stream Manager csm protected final boolean include Loader protected final Executor executor protected final Component Registry registry protected final Partition Handling Manager partition protected final Key Partitioner key Partitioner protected final State Transfer Lock state Transfer Lock protected Runnable close Runnable null protected boolean parallel protected Boolean parallel Distribution protected boolean rehash Aware true protected Set keys To Filter protected Set Integer segments To Filter protected int distributed Batch Size protected Cache Stream Segment Completion Listener segment Completion Listener protected Iterator Operation iterator Operation Iterator Operation protected long timeout protected Time Unit timeout Unit Time Unit protected Abstract Cache Stream Address local Address boolean parallel Distribution Manager dm Supplier Cache Stream Cache Entry supplier Cluster Stream Manager Object csm boolean include Loader int distributed Batch Size Executor executor Component Registry registry this local Address local Address this parallel parallel this dm dm this supplier supplier this csm csm this include Loader include Loader this distributed Batch Size distributed Batch Size this executor executor this registry registry this partition registry get Component Partition Handling Manager class this key Partitioner registry get Component Key Partitioner class this state Transfer Lock registry get Component State Transfer Lock class intermediate Operations new Array Deque protected Abstract Cache Stream Abstract Cache Stream other this intermediate Operations other intermediate Operations this local Address other local Address this dm other dm this supplier other supplier this csm other csm this include Loader other include Loader this executor other executor this registry other registry this partition other partition this key Partitioner other key Partitioner this state Transfer Lock other state Transfer Lock this close Runnable other close Runnable this parallel other parallel this parallel Distribution other parallel Distribution this rehash Aware other rehash Aware this keys To Filter other keys To Filter this segments To Filter other segments To Filter this distributed Batch Size other distributed Batch Size this segment Completion Listener other segment Completion Listener this iterator Operation other iterator Operation this timeout other timeout this timeout Unit other timeout Unit protected add Intermediate Operation Intermediate Operation intermediate Operation intermediate Operation handle Injection registry add Intermediate Operation intermediate Operations intermediate Operation return unwrap protected void add Intermediate Operation Map Intermediate Operation intermediate Operation intermediate Operation handle Injection registry add Intermediate Operation intermediate Operations intermediate Operation protected void add Intermediate Operation Queue Intermediate Operation intermediate Operations Intermediate Operation intermediate Operation intermediate Operations add intermediate Operation protected abstract unwrap Override public boolean is Parallel return parallel boolean get Parallel Distribution return parallel Distribution null true parallel Distribution Override public sequential parallel false return unwrap Override public parallel parallel true return unwrap Override public unordered This by default is always unordered return unwrap Override public on Close Runnable close Handler if this close Runnable null this close Runnable close Handler else this close Runnable compose With Exceptions this close Runnable close Handler return unwrap Override public void close if close Runnable null close Runnable run perform Operation Function super extends function boolean retry On Rehash Binary Operator accumulator Predicate super early Terminate Predicate Results Accumulator remote Results new Results Accumulator accumulator if rehash Aware return perform Operation Rehash Aware function retry On Rehash remote Results early Terminate Predicate else return perform Operation function remote Results early Terminate Predicate perform Operation Function super extends function Results Accumulator remote Results Predicate super early Terminate Predicate Consistent Hash ch dm get Write Consistent Hash Terminal Operation op new Single Run Operation intermediate Operations supplier For Segments ch segments To Filter null function Object id csm remote Stream Operation get Parallel Distribution parallel ch segments To Filter keys To Filter Collections empty Map include Loader op remote Results early Terminate Predicate try local Value op perform Operation remote Results on Completion null Collections empty Set local Value if id null try if early Terminate Predicate null early Terminate Predicate test local Value csm await Completion id timeout timeout Unit throw new Timeout Exception catch Interrupted Exception e throw new Cache Exception e log tracef Finished operation for id s id return remote Results current Value finally csm forget Operation id perform Operation Rehash Aware Function super extends function boolean retry On Rehash Results Accumulator remote Results Predicate super early Terminate Predicate Set Integer segments To Process segments To Filter Terminal Operation op do Localized Cache Topology cache Topology dm get Cache Topology Consistent Hash ch cache Topology get Read Consistent Hash if retry On Rehash op new Segment Retrying Operation intermediate Operations supplier For Segments ch segments To Process null function else op new Single Run Operation intermediate Operations supplier For Segments ch segments To Process null function Object id csm remote Stream Operation Rehash Aware get Parallel Distribution parallel ch segments To Process keys To Filter Collections empty Map include Loader op remote Results early Terminate Predicate try local Value boolean local Run ch get Members contains local Address if local Run local Value op perform Operation we can do this more efficiently since we drop all results locally if dm get Read Consistent Hash equals ch Set Integer our Segments ch get Primary Segments For Owner local Address if segments To Process null our Segments retain All segments To Process remote Results on Completion null our Segments local Value else if segments To Process null Set Integer our Segments ch get Primary Segments For Owner local Address our Segments retain All segments To Process remote Results on Segments Lost our Segments else remote Results on Segments Lost ch get Primary Segments For Owner local Address else This is n t actually used because local Run short circuits first local Value null if id null try if local Run early Terminate Predicate null early Terminate Predicate test local Value csm await Completion id timeout timeout Unit throw new Timeout Exception catch Interrupted Exception e throw new Cache Exception e if remote Results lost Segments is Empty segments To Process new Hash Set remote Results lost Segments remote Results lost Segments clear log tracef Found s lost segments for identifier s segments To Process id if remote Results requires Next Topology try state Transfer Lock wait For Topology cache Topology get Topology Id timeout timeout Unit catch Interrupted Exception java util concurrent Timeout Exception e throw new Cache Exception e else If we did n t lose any segments we do n t need to process anymore if segments To Process null segments To Process null log tracef Finished rehash aware operation for id s id finally csm forget Operation id while segments To Process null segments To Process is Empty return remote Results current Value void perform Rehash Key Tracking Operation Function Supplier Stream Cache Entry Key Tracking Terminal Operation Object extends Object function final Atomic Boolean complete new Atomic Boolean Consistent Hash segment Info dm get Read Consistent Hash Key Tracking Consumer Object Object results new Key Tracking Consumer key Partitioner segment Info get Num Segments c c c null Set Integer segments To Process segments To Filter null new Range Set segment Info get Num Segments segments To Filter do Localized Cache Topology cache Topology dm get Cache Topology Consistent Hash ch cache Topology get Read Consistent Hash boolean local Run ch get Members contains local Address Set Integer segments Set Object excluded Keys if local Run segments ch get Primary Segments For Owner local Address segments retain All segments To Process excluded Keys segments stream flat Map s results reference Array get s stream collect Collectors to Set else This null is okay as it is only referenced if it was a local Run segments null excluded Keys Collections empty Set Key Tracking Terminal Operation Object extends Object op function apply supplier For Segments ch segments To Process excluded Keys op handle Injection registry Object id csm remote Stream Operation Rehash Aware get Parallel Distribution parallel ch segments To Process keys To Filter new Atomic Reference Array To Map results reference Array include Loader op results try if local Run Collection Cache Entry Object Object local Value op perform Operation Rehash Aware results we can do this more efficiently this hampers performance during rehash if dm get Read Consistent Hash equals ch log tracef Found local values s for id s local Value size id results on Completion null segments local Value else Set Integer our Segments ch get Primary Segments For Owner local Address our Segments retain All segments To Process log tracef changed making s segments suspect for identifier s our Segments id results on Segments Lost our Segments We keep track of those keys so we do n t fire them again results on Intermediate Result null local Value if id null try if csm await Completion id timeout timeout Unit throw new Timeout Exception catch Interrupted Exception e throw new Cache Exception e if results lost Segments is Empty segments To Process new Hash Set results lost Segments results lost Segments clear log tracef Found s lost segments for identifier s segments To Process id if results requires Next Topology try state Transfer Lock wait For Topology cache Topology get Topology Id timeout timeout Unit results requires Next Topology false catch Interrupted Exception java util concurrent Timeout Exception e throw new Cache Exception e else log tracef Finished rehash aware operation for id s id complete set true finally csm forget Operation id while complete get protected boolean is Primary Owner Consistent Hash ch Cache Entry e return local Address equals ch locate Primary Owner For Segment key Partitioner get Segment e get Key static class Atomic Reference Array To Map extends Abstract Map Integer final Atomic Reference Array array Atomic Reference Array To Map Atomic Reference Array array this array array Override public boolean contains Key Object o if o instanceof Integer return false int i int o return i i array length Override public get Object key if key instanceof Integer return null int i int key if i i array length return array get i return null Override public int size return array length Override public boolean remove Object key Object value throw new Unsupported Operation Exception Override public void clear throw new Unsupported Operation Exception Override public Set Entry Integer entry Set Do we want to implement this later throw new Unsupported Operation Exception class Key Tracking Consumer implements Cluster Stream Manager Results Callback Collection Cache Entry Object Key Tracking Terminal Operation Intermediate Collector Collection Cache Entry Object final Key Partitioner key Partitioner final Consumer consumer final Set Integer lost Segments new Concurrent Hash Set final Function Cache Entry Object value Function boolean requires Next Topology final Atomic Reference Array Set reference Array final Distributed Cache Stream Segment Listener Notifier listener Notifier Key Tracking Consumer Key Partitioner key Partitioner int num Segments Consumer consumer Function Cache Entry Object value Function Distributed Cache Stream Segment Listener Notifier completed Segments this key Partitioner key Partitioner this consumer consumer this value Function value Function this listener Notifier completed Segments this reference Array new Atomic Reference Array num Segments for int i i reference Array length i We only allow request per id reference Array set i new Hash Set Override public Set Integer on Intermediate Result Address address Collection Cache Entry Object results if results null log tracef Response from s with results s address results size Set Integer segments Completed Cache Entry Object last Completed new Cache Entry if listener Notifier null segments Completed new Hash Set else segments Completed null results for Each e key e get Key int segment key Partitioner get Segment key Set keys reference Array get segment On completion we null this out first thus we do n t need to add if keys null keys add key else if segments Completed null segments Completed add segment last Completed e consumer accept value Function apply e if last Completed null listener Notifier add Segments For Object value Function apply last Completed segments Completed return segments Completed return null Override public void on Completion Address address Set Integer completed Segments Collection Cache Entry Object results if completed Segments is Empty log tracef Completing segments s completed Segments We null this out first so intermediate results do n t add for no reason completed Segments for Each s reference Array set s null else log tracef No segments to complete from s address Set Integer value Segments on Intermediate Result address results if value Segments null We do n t want to modify the completed segments as the caller may need it Set Integer empty Completed Segments new Hash Set completed Segments size completed Segments for Each s First complete the segments that did n t have any keys completed segments have to wait until the user retrieves them if value Segments contains s empty Completed Segments add s listener Notifier complete Segments No Results empty Completed Segments Override public void on Segments Lost Set Integer segments Have to use for loop since Concurrent Hash Set does n t support add All for Integer segment segments lost Segments add segment Override public void request Future Topology requires Next Topology true Override public void send Data Resonse Collection Cache Entry Object response on Intermediate Result null response static class Results Accumulator implements Cluster Stream Manager Results Callback private final Binary Operator binary Operator private final Set Integer lost Segments new Concurrent Hash Set current Value boolean requires Next Topology Results Accumulator Binary Operator binary Operator this binary Operator binary Operator Override public Set Integer on Intermediate Result Address address results if results null synchronized this if current Value null current Value binary Operator apply current Value results else current Value results return null Override public void on Completion Address address Set Integer completed Segments results on Intermediate Result address results Override public void on Segments Lost Set Integer segments Have to use for loop since Concurrent Hash Set does n t support add All for Integer segment segments lost Segments add segment Override public void request Future Topology requires Next Topology true static class Collection Consumer implements Cluster Stream Manager Results Callback Collection Key Tracking Terminal Operation Intermediate Collector Collection private final Consumer consumer Collection Consumer Consumer consumer this consumer consumer Override public Set Integer on Intermediate Result Address address Collection results if results null results for Each consumer return null Override public void on Completion Address address Set Integer completed Segments Collection results on Intermediate Result address results Override public void on Segments Lost Set Integer segments Override public void request Future Topology Override public void send Data Resonse Collection response on Intermediate Result null response protected Supplier Stream Cache Entry supplier For Segments Consistent Hash ch Set Integer target Segments Set Object excluded Keys return supplier For Segments ch target Segments excluded Keys true If code use Primary code is true the segments are the primary segments but only those that exist in target Segments However if code use Primary code is false then code target Segments code must be provided and non null and this will be used specifically param ch param target Segments param excluded Keys param use Primary determines whether we should utilize the primary segments or not return protected Supplier Stream Cache Entry supplier For Segments Consistent Hash ch Set Integer target Segments Set Object excluded Keys boolean use Primary if ch get Members contains local Address return Stream empty Set Integer segments if use Primary segments ch get Primary Segments For Owner local Address if target Segments null segments retain All target Segments else segments target Segments return if segments is Empty return Stream empty Cache Stream Cache Entry stream supplier get filter Key Segments segments if keys To Filter null stream stream filter Keys keys To Filter if excluded Keys null return stream filter e excluded Keys contains e get Key Make sure the stream is set to be parallel or not return parallel stream parallel stream sequential Given two Runnables return a Runnable that executes both in sequence even if the first throws an exception and if both throw exceptions add any exceptions thrown by the second as suppressed exceptions of the first static Runnable compose With Exceptions Runnable a Runnable b return try a run catch Throwable e try b run catch Throwable e try e add Suppressed e catch Throwable ignore throw e b run enum Iterator Operation Override public Key Tracking Terminal Operation get Operation Iterable Intermediate Operation intermediate Operations Supplier Stream Cache Entry supplier int batch Size return new No Map Iterator Operation intermediate Operations supplier batch Size Override public Function Cache Entry get Function return e e Override public Key Tracking Terminal Operation get Operation Iterable Intermediate Operation intermediate Operations Supplier Stream Cache Entry supplier int batch Size return new Map Iterator Operation intermediate Operations supplier batch Size Override public Key Tracking Terminal Operation get Operation Iterable Intermediate Operation intermediate Operations Supplier Stream Cache Entry supplier int batch Size return new Flat Map Iterator Operation intermediate Operations supplier batch Size Override public Consumer wrap Consumer Consumer consumer return new Collection Decomposer Consumer consumer public abstract Key Tracking Terminal Operation get Operation Iterable Intermediate Operation intermediate Operations Supplier Stream Cache Entry supplier int batch Size public Function Cache Entry get Function return e e get Value public Consumer wrap Consumer Consumer consumer return Consumer consumer static class Collection Decomposer Consumer implements Consumer Iterable private final Consumer consumer Collection Decomposer Consumer Consumer consumer this consumer consumer Override public void accept Iterable es es for Each consumer Given two Segment Completion Listener return a Segment Completion Listener that executes both in sequence even if the first throws an exception and if both throw exceptions add any exceptions thrown by the second as suppressed exceptions of the first protected static Cache Stream Segment Completion Listener compose With Exceptions Cache Stream Segment Completion Listener a Cache Stream Segment Completion Listener b return segments try a segment Completed segments catch Throwable e try b segment Completed segments catch Throwable e try e add Suppressed e catch Throwable ignore throw e b segment Completed segments 
package org infinispan commands read import java util Abstract Collection import java util Arrays import java util Collection import java util Iterator import org infinispan Cache import org infinispan commons util Closeable Iterator import org infinispan commons util Closeable Iterator Collection import org infinispan commons util Closeable Spliterator Abstract collection that uses an underlying Cache instance to do various operations This is useful for a backing collection such as entry Set key Set or values from the Map interface Implementors only need to implement individual methods such as link Collection contains Object link Collection remove Object and link org infinispan commons util Closeable Iterator Collection iterator The link Collection add Object by default will throw an link java lang Unsupported Operation Exception author wburns since public abstract class Abstract Closeable Iterator Collection extends Abstract Collection implements Closeable Iterator Collection protected final Cache cache public Abstract Closeable Iterator Collection Cache cache this cache cache Override public abstract Closeable Iterator iterator Override public abstract Closeable Spliterator spliterator Override public abstract boolean contains Object o Override public abstract boolean remove Object o Override public int size return cache size Override public boolean is Empty return cache is Empty Copied from Abstract Collection since we need to close iterator Override public Object to Array Estimate size of array be prepared to see more or fewer elements Object r new Object size try Closeable Iterator it iterator for int i i r length i if it has Next fewer elements than expected return Arrays copy Of r i r i it next return it has Next finish To Array r it r Copied from Abstract Collection since we need to close iterator Override public to Array a Estimate size of array be prepared to see more or fewer elements int size size r a length size a java lang reflect Array new Instance a get Class get Component Type size try Closeable Iterator it iterator for int i i r length i if it has Next fewer elements than expected if a r r i null null terminate else if a length i return Arrays copy Of r i else System arraycopy r a i if a length i a i null return a r i it next more elements than expected return it has Next finish To Array r it r Override public boolean remove All Collection c boolean modified false for Object o c if remove o modified true return modified Copied from Abstract Collection since we need to close iterator Override public boolean retain All Collection c boolean modified false try Closeable Iterator it iterator while it has Next if c contains it next it remove modified true return modified Override public void clear cache clear Copied from Abstract Collection to support to Array methods Suppress Warnings unchecked private static finish To Array r Iterator it int i r length while it has Next int cap r length if i cap int new Cap cap cap overflow conscious code if new Cap new Cap huge Capacity cap r Arrays copy Of r new Cap r i it next trim if overallocated return i r length r Arrays copy Of r i Copied from Abstract Collection to support to Array methods private static int huge Capacity int min Capacity if min Capacity overflow throw new Out Of Memory Error Required array size too large return min Capacity Integer private static final int Integer 
package org infinispan configuration cache abstract class Abstract Clustering Configuration Child Builder extends Abstract Configuration Child Builder implements Clustering Configuration Child Builder private final Clustering Configuration Builder clustering Builder protected Abstract Clustering Configuration Child Builder Clustering Configuration Builder builder super builder get Builder this clustering Builder builder Override public Hash Configuration Builder hash return clustering Builder hash Override public Configuration Builder l return clustering Builder l Override public State Transfer Configuration Builder state Transfer return clustering Builder state Transfer Override public Sync Configuration Builder sync return clustering Builder sync Override public Partition Handling Configuration Builder partition Handling return clustering Builder partition Handling protected Clustering Configuration Builder get Clustering Builder return clustering Builder 
package org infinispan factories import static org infinispan commons util Reflection Util invoke Accessibly import java lang reflect Invocation Target Exception import java lang reflect Method import java security Access Controller import java security Privileged Action import java security Privileged Exception Action import java util Array List import java util Arrays import java util Collections import java util Hash Set import java util List import java util Optional import java util Set import java util Stack import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import java util concurrent Time Unit import org infinispan Illegal Lifecycle State Exception import org infinispan commons Cache Configuration Exception import org infinispan commons Cache Exception import org infinispan commons api Lifecycle import org infinispan commons util Reflection Util import org infinispan commons util Util import org infinispan configuration cache Configuration import org infinispan factories annotations Default Factory For import org infinispan factories annotations Inject import org infinispan factories annotations Survives Restarts import org infinispan factories components Component Metadata import org infinispan factories components Component Metadata Repo import org infinispan factories scopes Scope import org infinispan factories scopes Scopes import org infinispan lifecycle Component Status import org infinispan util Time Service import org infinispan util logging Log registry where components which have been created are stored Components are stored as singletons registered under a specific name p Components can be retrieved from the registry using link get Component Class p Components can be registered using link register Component Object Class which will cause any dependencies to be wired in as well Components that need to be created as a result of wiring will be done using link get Or Create Component Class which will look up the default factory for the component type factories annotated with the appropriate link Default Factory For annotation p Default factories are treated as components too and will need to be wired before being used p The registry can exist in one of several states as defined by the link org infinispan lifecycle Component Status enumeration In terms of the cache state changes in the following manner ul li when first constructed li li when created using the Default Cache Factory li li when link org infinispan Cache start is called li li when link org infinispan Cache stop is called li ul p Cache configuration can only be changed and will only be re injected if the cache is not in the link org infinispan lifecycle Component Status state Thread Safety instances of link Global Component Registry can be concurrently updated so all the write operations are serialized through class intrinsic lock author Manik Surtani author Galder Zamarre o since Survives Restarts Scope Scopes public abstract class Abstract Component Registry implements Lifecycle Cloneable private final boolean trace get Log is Trace Enabled private static final String infinispan debug Dependencies Set the system property li infinispan debug Dependencies li to li true li to enable some extra information to errors generated by the component factory public static final boolean Boolean get Boolean private Stack String debug Stack new Stack null Contains class definitions of component factories that can be used to construct certain components private Map String Class extends Abstract Component Factory default Factories null private static final Object new Object component and method containers private final Concurrent Map String Component component Lookup new Concurrent Hash Map protected volatile Component Status state Component Status private static final Prioritized Method Retrieves the state of the registry return state of the registry public Component Status get Status return state protected abstract Class Loader get Class Loader protected abstract Log get Log public abstract Component Metadata Repo get Component Metadata Repo Wires an object instance with dependencies annotated with the link Inject annotation creating more components as needed based on the Configuration passed in if these additional components do n t exist in the link Component Registry Strictly for components that do n t otherwise live in the registry and have a lifecycle such as Commands param target object to wire throws Cache Configuration Exception if there is a problem wiring the instance public void wire Dependencies Object target throws Cache Configuration Exception try Class target Class target get Class Component Metadata metadata get Component Metadata Repo find Component Metadata target Class if metadata null metadata get Inject Methods null metadata get Inject Methods length search for anything we need to inject for Component Metadata Inject Metadata inject Metadata metadata get Inject Methods Class method Parameters inject Metadata get Parameter Classes if method Parameters null if System get Security Manager null method Parameters Reflection Util to Class Array inject Metadata get Parameters get Class Loader else method Parameters Access Controller do Privileged Privileged Exception Action Class Reflection Util to Class Array inject Metadata get Parameters get Class Loader inject Metadata set Parameter Classes method Parameters Method method inject Metadata get Method if method null if System get Security Manager null method Reflection Util find Method target Class inject Metadata get Method Name inject Metadata get Parameter Classes else method Access Controller do Privileged Privileged Exception Action Method Reflection Util find Method target Class inject Metadata get Method Name inject Metadata get Parameter Classes inject Metadata set Method method invoke Injection Method target inject Metadata catch Illegal Lifecycle State Exception e throw e catch Exception e throw new Cache Configuration Exception Unable to configure component type target get Class instance target e Registers a component in the registry under the given type and injects any dependencies needed If a component of this type already exists it is overwritten param component component to register param type type of component public synchronized final void register Component Object component Class type register Component component type get Name type equals component get Class public synchronized final void register Component Object component String name register Component component name name equals component get Class get Name public synchronized final void register Component Object component String name boolean name Is register Component Internal component name name Is protected synchronized final void register Non Volatile Component Object component String name register Component Internal component name false protected synchronized final void register Non Volatile Component Object component Class type register Component Internal component type get Name true protected synchronized void register Component Internal Object component String name boolean name Is if state is Stopping state is Terminated throw new Illegal Lifecycle State Exception Trying to register a component after stopping name if component null throw new Null Pointer Exception Can not register a null component under name name Component old component Lookup get name if old null if they are equal do n t bother if old instance equals component get Log tracef Attempting to register a component equal to one that already exists under the same name s Not doing anything name return Component c if old null get Log tracef Replacing old component s with new instance s old component old instance component old methods Scanned false c old else c new Component c name name c instance component component Lookup put name c c metadata get Component Metadata Repo find Component Metadata component get Class try c build Injection Methods List catch Class Not Found Exception cnfe throw new Cache Exception Error injecting dependencies for component name cnfe inject dependencies for this component we inject dependencies only after the component is already in the map to support cyclical dependencies c inject Dependencies if old null get Log tracef Registering component s under name s c name if state Component Status state Component Status populate Life Cycle Methods c try invoke Prioritized Methods Arrays as List c start Methods catch Throwable t the component has n t started properly remove its registration component Lookup remove name the caller will log the exception handle Lifecycle Transition Failure t Suppress Warnings unchecked private void invoke Injection Method Object o Component Metadata Inject Metadata inject Metadata Class dependencies inject Metadata get Parameter Classes if dependencies length Object params new Object dependencies length if trace get Log tracef Injecting dependencies for method s on an instance of s inject Metadata o get Class get Name for int i i dependencies length i String name inject Metadata get Parameter Name i boolean name Is inject Metadata is Parameter Name Set i params i get Or Create Component dependencies i name name Is if System get Security Manager null invoke Accessibly o inject Metadata get Method params else Access Controller do Privileged Privileged Action Object invoke Accessibly o inject Metadata get Method params Retrieves a component if one exists and if not attempts to find a factory capable of constructing the component factories annotated with the link Default Factory For annotation that is capable of creating the component class p If an instance needs to be constructed dependencies are then automatically wired into the instance based on methods on the component type annotated with link Inject p Summing it up component retrieval happens in the following order br Look for a component that has already been created and registered Look for an appropriate component that exists in the link Configuration that may be injected from an external system Look for a class definition passed in to the link Configuration such as an Eviction Policy implementation Attempt to create it by looking for an appropriate factory annotated with link Default Factory For p param component Class type of component to be retrieved Should not be null return a fully wired component instance or null if one can not be found or constructed throws Cache Configuration Exception if there is a problem with constructing or wiring the instance protected synchronized get Or Create Component Class component Class return get Or Create Component component Class component Class get Name true protected get Or Create Component Class component Class String name return get Or Create Component component Class name false Suppress Warnings unchecked protected synchronized get Or Create Component Class component Class String name boolean name Is if debug Stack push name Object component Component old Wrapper lookup Component component Class get Name name name Is if old Wrapper null component unwrap Component old Wrapper else create this component and add it to the registry Abstract Component Factory factory get Factory component Class get Log tracef Creating component s with factory s name factory get Class component factory instanceof Named Component Factory Named Component Factory factory construct component Class name factory construct component Class if component null register Component component name name Is else get Log tracef Registering a null for component s name register Null Component name if debug Stack pop return component Retrieves a component factory instance capable of constructing components of a specified type If the factory does n t exist in the registry one is created param component Class type of component to construct return component factory capable of constructing such components protected synchronized Abstract Component Factory get Factory Class component Class get Log tracef Looking up factory for class s component Class String cf Class get Component Metadata Repo find Factory For Component component Class if cf Class null throw Stack Aware Configuration Exception No registered default factory for component component Class found a component factory is a component too See if one has been created and exists in the registry Abstract Component Factory cf get Component cf Class if cf null cf create Component Factory Internal component Class cf Class ensure the component factory is in the state Component c lookup Component cf Class cf Class true if c instance cf throw Stack Aware Configuration Exception Component factory cf Class incorrectly registered return cf protected synchronized Abstract Component Factory create Component Factory Internal Class component Class String cf Class first check as it might have been created in between by another thread Abstract Component Factory component get Component cf Class if component null return component has n t yet been created Create and put in registry get Log tracef Creating factory s for component s cf Class component Class Abstract Component Factory cf instantiate Factory cf Class if cf null throw Stack Aware Configuration Exception Unable to locate component factory for component component Class we simply register this factory Registration will take care of constructing any dependencies register Component cf cf Class return cf protected Component lookup Component String component Class Name String component Name boolean name Is return component Lookup get component Name No such thing as a meta factory yet Factories are created using this method which attempts to use an empty public constructor param factory Name classname of factory to be created return factory instance Abstract Component Factory instantiate Factory String factory Name Class factory Util load Class factory Name get Class get Class Loader if Auto Instantiable Factory class is Assignable From factory try return Abstract Component Factory factory new Instance catch Exception e unable to get a hold of an instance throw new Cache Configuration Exception Unable to instantiate factory factory Debug stack debug Stack e else throw new Cache Configuration Exception Can not auto instantiate factory factory as it does n t implement Auto Instantiable Factory class get Simple Name Debug stack debug Stack registers a special null component that has no dependencies param name name of component to register as a null protected synchronized final void register Null Component String name register Component name false Retrieves the configuration component return a Configuration object protected Configuration get Configuration this is assumed to always be present as a part of the bootstrap construction of a Component Registry return get Component Configuration class Retrieves a component of a specified type from the registry or null if it can not be found param type type to find return component or null Suppress Warnings unchecked public get Component Class type String class Name type get Name return get Component class Name class Name true Suppress Warnings unchecked public get Component String component Class Name return get Component component Class Name component Class Name true Suppress Warnings unchecked public get Component String component Class Name String name return get Component component Class Name name false Suppress Warnings unchecked public get Component Class component Class String name return get Component component Class get Name name false Suppress Warnings unchecked public get Component String component Class Name String name boolean name Is Component wrapper lookup Component component Class Name name name Is if wrapper null return null return unwrap Component wrapper public Optional get Optional Component Class type return Optional of Nullable get Component type Get the component from a wrapper properly handling code null code components private Object unwrap Component Component wrapper return wrapper instance null wrapper instance Registers the default class loader This method must be called before any other components are registered typically called by bootstrap code Defensively it is called in the constructor of Component Registry with a null parameter param loader a class loader to use by default If this is null the class loader used to load this instance of Component Registry is used protected Class Loader register Default Class Loader Class Loader loader Class Loader loader To Use loader null get Class get Class Loader loader register Component loader To Use Class Loader class make sure the class loader is non volatile so it survives restarts component Lookup get Class Loader class get Name survives Restarts true return loader To Use Rewires components Used to rewire components in the if a cache has been stopped moved to state which would almost empty the registry of components Rewiring will re inject all dependencies so that the cache can be started again p public void rewire need to re inject everything again for Component c new Hash Set component Lookup values inject dependencies for this component c inject Dependencies Scans each registered component for lifecycle methods and adds them to the appropriate lists and then sorts them by priority private void populate Lifecycle Methods for Component c component Lookup values populate Life Cycle Methods c private Prioritized Method process Prioritized Methods Component Metadata Prioritized Method Metadata method Metadata Class component Class Component c Prioritized Method retval int num Start Methods method Metadata length if num Start Methods retval else retval new Prioritized Method num Start Methods for int i i num Start Methods i retval i new Prioritized Method retval i component c retval i metadata method Metadata i if method Metadata i get Method null Method method Reflection Util find Method component Class method Metadata i get Method Name method Metadata i set Method method if retval length Arrays sort retval return retval private void populate Life Cycle Methods Component c if c methods Scanned c methods Scanned true Class component Class c instance get Class methods first c start Methods process Prioritized Methods c metadata get Start Methods component Class c methods next c post Start Methods process Prioritized Methods c metadata get Post Start Methods component Class c And now the methods c stop Methods process Prioritized Methods c metadata get Stop Methods component Class c Removes any components not annotated as Survives Restarts public synchronized void reset Volatile Components destroy all components to clean up resources get Log tracef Resetting volatile components for Component c new Hash Set component Lookup values the component is volatile if c metadata is Survives Restarts get Log tracef Removing volatile component s c name component Lookup remove c name if trace get Log tracef Reset volatile components Registry now contains s component Lookup key Set Publicly available lifecycle methods These methods perform a check for appropriate transition and then delegate to similarly named internal methods This starts the components in the registry connecting to channels starting service threads etc If the component is not in the link org infinispan lifecycle Component Status state it will be initialized first Override public void start state Component Status try internal Start catch Throwable t handle Lifecycle Transition Failure t protected void post Start List Prioritized Method methods new Array List component Lookup size for Component c component Lookup values Collections add All methods c post Start Methods fire all methods according to priority invoke Prioritized Methods methods Stops the component and sets its status to link org infinispan lifecycle Component Status once it is done If the component is not in the link org infinispan lifecycle Component Status state this is a no op Override public synchronized void stop if state stop Allowed get Log debugf Ignoring call to stop as current state is s state return Trying to stop from is valid but may not work boolean failed state Component Status try internal Stop catch Throwable t if failed get Log failed To Call Stop After Failure t failed true handle Lifecycle Transition Failure t finally if failed state Component Status Publicly available lifecycle methods Actual internal lifecycle methods Sets the cache Status to and re throws the problem as one of the declared types Converts any non Runtime Exception Exception to Cache Exception param t throwable thrown during failure private void handle Lifecycle Transition Failure Throwable t state Component Status if t get Cause null t get Cause instanceof Cache Configuration Exception throw Cache Configuration Exception t get Cause else if t get Cause null t get Cause instanceof Invocation Target Exception t get Cause get Cause null t get Cause get Cause instanceof Cache Configuration Exception throw Cache Configuration Exception t get Cause get Cause else if t instanceof Cache Exception throw Cache Exception t else if t instanceof Runtime Exception throw Runtime Exception t else if t instanceof Error throw Error t else throw new Cache Exception t private void internal Start throws Cache Exception Illegal Argument Exception start all internal components first cache all start stop and destroy methods populate Lifecycle Methods List Prioritized Method methods new Array List component Lookup size for Component c component Lookup values Collections add All methods c start Methods fire all methods according to priority invoke Prioritized Methods methods add Shutdown Hook state Component Status private void invoke Prioritized Methods List Prioritized Method methods boolean trace Enabled get Log is Trace Enabled sort the methods by priority Collections sort methods for Prioritized Method em methods if trace Enabled get Log tracef Invoking method s on component s em metadata em component get Name em invoke protected void add Shutdown Hook no op Override if needed protected void remove Shutdown Hook no op Override if needed Actual stop private void internal Stop state Component Status remove Shutdown Hook List Prioritized Method stop Methods new Array List component Lookup size for Component c component Lookup values if one of the components threw an exception during startup the stop methods list may not have been initialized if c stop Methods null Collections add All stop Methods c stop Methods Collections sort stop Methods fire all methods according to priority boolean trace Enabled get Log is Trace Enabled for Prioritized Method em stop Methods if trace Enabled get Log tracef Invoking stop method s on component s em metadata em component get Name try em invoke catch Throwable t get Log component Failed To Stop t reset Volatile Components Actual internal lifecycle methods Asserts whether invocations are allowed on the cache or not Returns tt true tt if invocations are to be allowed tt false tt otherwise If the origin of the call is remote and the cache status is link org infinispan lifecycle Component Status this method will block for up to link org infinispan configuration cache State Transfer Configuration timeout millis checking for a valid state param origin Local true if the call originates locally i e from the link org infinispan cache impl Cache Impl or false if it originates remotely i e from the link org infinispan remoting inboundhandler Inbound Invocation Handler return true if invocations are allowed false otherwise public boolean invocations Allowed boolean origin Local get Log trace Testing if invocations are allowed if state allow Invocations return true if this is a locally originating call and the cache is not in a valid state return false if origin Local return false get Log trace Is remotely originating else if this is a remote call and the status is wait until the cache starts if state Component Status get Log trace Cache is initializing block try block Until Cache Starts return true catch Interrupted Exception e Thread current Thread interrupt else get Log cache Not Started return false Blocks until the current cache instance is in its link org infinispan lifecycle Component Status started phase Blocks for up to link org infinispan configuration cache State Transfer Configuration timeout milliseconds throwing an Illegal State Exception if the cache does n t reach this state even after this maximum wait time throws Interrupted Exception if interrupted while waiting throws Illegal State Exception if even after waiting the cache has not started private void block Until Cache Starts throws Interrupted Exception Illegal State Exception int poll Frequency Time Service time Service get Time Service final long startup Wait Time get Configuration clustering state Transfer timeout final long give Up Time time Service expected End Time startup Wait Time Time Unit while time Service is Time Expired give Up Time if state allow Invocations break Thread sleep poll Frequency check if we have started if state allow Invocations throw new Illegal State Exception Cache not in state even after waiting startup Wait Time millis Returns an immutable set containing all the components that exists in the repository at this moment return a set of components public Set Component get Registered Components Hash Set Component defensive Copy new Hash Set component Lookup values return Collections unmodifiable Set defensive Copy Override public Abstract Component Registry clone throws Clone Not Supported Exception Abstract Component Registry dolly Abstract Component Registry super clone dolly state Component Status return dolly public abstract Time Service get Time Service wrapper representing a component in the registry public class Component reference to the object instance for this component Object instance The name of the component String name boolean methods Scanned List of injection methods used to inject dependencies into the component Component Metadata Inject Metadata injection Methods Prioritized Method start Methods Prioritized Method post Start Methods Prioritized Method stop Methods Component Metadata metadata Override public String to String return Component instance instance name name Injects dependencies into this component public void inject Dependencies if injection Methods null injection Methods length for Component Metadata Inject Metadata inject Metadata injection Methods invoke Injection Method instance inject Metadata public Object get Instance return instance public String get Name return name public Component Metadata get Metadata return metadata public void build Injection Methods List throws Class Not Found Exception injection Methods metadata get Inject Methods if injection Methods null injection Methods length Class clazz instance get Class for Component Metadata Inject Metadata meta injection Methods Class parameter Classes meta get Parameter Classes if parameter Classes null parameter Classes Reflection Util to Class Array meta get Parameters get Class Loader meta set Parameter Classes parameter Classes Method m meta get Method if m null try m Reflection Util find Method clazz meta get Method Name parameter Classes catch Cache Exception e throw new Cache Exception Injection method not found in class clazz meta get Method Name Arrays to String parameter Classes e meta set Method m Wrapper to encapsulate a method along with a priority static class Prioritized Method implements Comparable Prioritized Method Component Metadata Prioritized Method Metadata metadata Component component Override public int compare To Prioritized Method o int this Val metadata get Priority int another Val o metadata get Priority return this Val another Val this Val another Val Override public boolean equals Object o if this o return true if o instanceof Prioritized Method return false Prioritized Method that Prioritized Method o if component null component equals that component that component null return false return metadata null metadata equals that metadata that metadata null Override public int hash Code int result metadata null metadata hash Code result result component null component hash Code return result void invoke invoke Accessibly component instance metadata get Method null Override public String to String return Prioritized Method method metadata priority metadata get Priority protected void throw Stack Aware Configuration Exception String message if debug Stack null throw new Cache Configuration Exception message To get more detail set the system property to true else throw new Cache Configuration Exception message Debug stack debug Stack 
package org infinispan client hotrod configuration import java util Properties import org infinispan client hotrod Protocol Version import org infinispan client hotrod impl consistenthash Consistent Hash import org infinispan client hotrod impl transport Transport Factory import org infinispan client hotrod impl transport tcp Failover Request Balancing Strategy import org infinispan commons marshall Marshaller Abstract Configuration Child Builder author Tristan Tarrant since public abstract class Abstract Configuration Child Builder implements Configuration Child Builder final Configuration Builder builder protected Abstract Configuration Child Builder Configuration Builder builder this builder builder Override public Server Configuration Builder add Server return builder add Server Override public Cluster Configuration Builder add Cluster String cluster Name return builder add Cluster cluster Name Override public Configuration Builder add Servers String servers return builder add Servers servers Override public Executor Factory Configuration Builder async Executor Factory return builder async Executor Factory Override public Configuration Builder balancing Strategy String balancing Strategy return builder balancing Strategy balancing Strategy Override public Configuration Builder balancing Strategy Class extends Failover Request Balancing Strategy balancing Strategy return builder balancing Strategy balancing Strategy Override public Configuration Builder balancing Strategy Failover Request Balancing Strategy balancing Strategy return builder balancing Strategy balancing Strategy Override public Configuration Builder class Loader Class Loader class Loader return builder class Loader class Loader Override public Configuration Builder client Intelligence Client Intelligence client Intelligence return builder client Intelligence client Intelligence Override public Connection Pool Configuration Builder connection Pool return builder connection Pool Override public Configuration Builder connection Timeout int connection Timeout return builder connection Timeout connection Timeout Override public Configuration Builder consistent Hash Impl int version Class extends Consistent Hash consistent Hash Class return builder consistent Hash Impl version consistent Hash Class Override public Configuration Builder consistent Hash Impl int version String consistent Hash Class return builder consistent Hash Impl version consistent Hash Class Override public Configuration Builder force Return Values boolean force Return Values return builder force Return Values force Return Values Override public Configuration Builder key Size Estimate int key Size Estimate return builder key Size Estimate key Size Estimate Override public Configuration Builder marshaller String marshaller return builder marshaller marshaller Override public Configuration Builder marshaller Class extends Marshaller marshaller return builder marshaller marshaller Override public Configuration Builder marshaller Marshaller marshaller return builder marshaller marshaller deprecated Use link version Protocol Version instead Deprecated Override public Configuration Builder protocol Version String protocol Version return builder version Protocol Version parse Version protocol Version Override public Configuration Builder version Protocol Version protocol Version return builder version protocol Version Override public Configuration Builder socket Timeout int socket Timeout return builder socket Timeout socket Timeout Override public Security Configuration Builder security return builder security Override public Configuration Builder tcp No Delay boolean tcp No Delay return builder tcp No Delay tcp No Delay Override public Configuration Builder tcp Keep Alive boolean tcp Keep Alive return builder tcp Keep Alive tcp Keep Alive Override public Configuration Builder transport Factory String transport Factory return builder transport Factory transport Factory Override public Configuration Builder transport Factory Class extends Transport Factory transport Factory return builder transport Factory transport Factory Override public Configuration Builder value Size Estimate int value Size Estimate return builder value Size Estimate value Size Estimate Override public Configuration Builder max Retries int retries Per Server return builder max Retries retries Per Server Override public Configuration Builder add Java Serial White List String reg Exs return builder add Java Serial White List reg Exs Override public Configuration Builder batch Size int batch Size return builder batch Size batch Size Override public Configuration Builder with Properties Properties properties return builder with Properties properties Override public Configuration build return builder build 
package org infinispan commands read import static org infinispan commons util Enum Util pretty Print Bit Set import static org infinispan commons util Util to Str import java util Objects import org infinispan commands Data Command import org infinispan context Flag author Mircea Markus jboss com author Sanne Grinovero sanne hibernate org Red Hat Inc since public abstract class Abstract Data Command implements Data Command protected Object key private long flags private int topology Id protected Abstract Data Command Object key long flags Bit Set this key key this flags flags Bit Set protected Abstract Data Command Override public int get Topology Id return topology Id Override public void set Topology Id int topology Id this topology Id topology Id Override public long get Flags Bit Set return flags Override public void set Flags Bit Set long bit Set this flags bit Set Override public Object get Key return key public void set Key Object key this key key Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Abstract Data Command other Abstract Data Command obj return flags other flags Objects equals key other key Override public int hash Code return key null key hash Code Override public String to String return get Class get Simple Name key to Str key flags print Flags Override public boolean is Return Value Expected return true Override public boolean can Block return false protected final String print Flags return pretty Print Bit Set flags Flag class 
package org infinispan commands write import java util Collection import java util Collections import org infinispan commands Command Invocation Id import org infinispan commands read Abstract Data Command import org infinispan context impl Flag Bit Sets import org infinispan util concurrent locks Remote Lock Command Stuff common to Write Commands author Manik Surtani since public abstract class Abstract Data Write Command extends Abstract Data Command implements Data Write Command Remote Lock Command protected Command Invocation Id command Invocation Id protected Abstract Data Write Command protected Abstract Data Write Command Object key long flags Bit Set Command Invocation Id command Invocation Id super key flags Bit Set this command Invocation Id command Invocation Id Override public Collection get Affected Keys return Collections singleton key Override public boolean is Return Value Expected return has Any Flag Flag Bit Sets Flag Bit Sets Override public boolean can Block return true Override public Collection get Keys To Lock return get Affected Keys Override public final Object get Key Lock Owner return command Invocation Id Override public final boolean has Zero Lock Acquisition return has Any Flag Flag Bit Sets Override public final boolean has Skip Locking return has Any Flag Flag Bit Sets Override public Command Invocation Id get Command Invocation Id return command Invocation Id 
package org infinispan deprecated Extend from link org infinispan cache impl Abstract Delegating Advanced Cache instead This class will be removed in the future Deprecated public class Abstract Delegating Advanced Cache extends org infinispan cache impl Abstract Delegating Advanced Cache public Abstract Delegating Advanced Cache Advanced Cache cache super cache public Abstract Delegating Advanced Cache Advanced Cache cache Advanced Cache Wrapper wrapper super cache wrapper 
package org infinispan deprecated Extend from link org infinispan cache impl Abstract Delegating Cache instead This class will be removed in the future Deprecated public class Abstract Delegating Cache extends org infinispan cache impl Abstract Delegating Cache public Abstract Delegating Cache Cache cache super cache 
package org infinispan commons marshall Base class for link Advanced Externalizer implementations that offers default implementations for some of its methods In particular this base class offers a default implementation for link org infinispan commons marshall Advanced Externalizer get Id that returns null which is particularly useful for advanced externalizers whose id will be provided by or programmatic configuration rather than the externalizer implementation itself author Galder Zamarre o since public abstract class Abstract Externalizer implements Advanced Externalizer Override public Integer get Id return null 
package org infinispan configuration global import java util List import org infinispan commons configuration Builder abstract class Abstract Global Configuration Builder implements Global Configuration Child Builder private final Global Configuration Builder global Config protected Abstract Global Configuration Builder Global Configuration Builder global Config this global Config global Config protected Global Configuration Builder get Global Config return global Config Override public Transport Configuration Builder transport return global Config transport Override public Global Jmx Statistics Configuration Builder global Jmx Statistics global Config global Jmx Statistics enable return global Config global Jmx Statistics Override public Global State Configuration Builder global State global Config global State enable return global Config global State Override public Serialization Configuration Builder serialization return global Config serialization Override public Thread Pool Configuration Builder listener Thread Pool return global Config listener Thread Pool Override public Thread Pool Configuration Builder async Thread Pool return global Config async Thread Pool Override public Thread Pool Configuration Builder replication Queue Thread Pool return global Config replication Queue Thread Pool Deprecated Override public Thread Pool Configuration Builder eviction Thread Pool return global Config expiration Thread Pool Override public Thread Pool Configuration Builder expiration Thread Pool return global Config expiration Thread Pool Override public Thread Pool Configuration Builder persistence Thread Pool return global Config persistence Thread Pool Override public Thread Pool Configuration Builder state Transfer Thread Pool return global Config state Transfer Thread Pool Override public Global Security Configuration Builder security return global Config security Override public Shutdown Configuration Builder shutdown return global Config shutdown Override public Site Configuration Builder site return global Config site Override public List Builder modules return global Config modules Override public Global Configuration Builder default Cache Name String default Cache Name return global Config default Cache Name default Cache Name Override public Global Configuration build return global Config build 
package org infinispan container entries import java util Map import java util Objects import org infinispan container Data Container import org infinispan metadata Metadata An abstract internal cache entry that is typically stored in the data container author Manik Surtani since public abstract class Abstract Internal Cache Entry implements Internal Cache Entry protected Object key protected Abstract Internal Cache Entry protected Abstract Internal Cache Entry Object key this key key Override public final void commit Data Container container no op Override public void set Changed boolean changed no op Override public final void set Created boolean created no op Override public final void set Removed boolean removed no op Override public final void set Evicted boolean evicted no op Override public void set Skip Lookup boolean skip Lookup no op Override public final boolean is Null return false Override public final boolean is Changed return false Override public final boolean is Created return false Override public final boolean is Removed return false Override public final boolean is Evicted return true Override public boolean skip Lookup return true Override public Metadata get Metadata return null Override public void set Metadata Metadata metadata no op Override public final Object get Key return key Override public boolean is Entry return false Override public String to String return get Class get Simple Name key key Override public Abstract Internal Cache Entry clone try return Abstract Internal Cache Entry super clone catch Clone Not Supported Exception e throw new Runtime Exception Should never happen e Override public final boolean equals Object o if this o return true if o null o instanceof Map Entry return false Map Entry that Map Entry o return Objects equals get Key that get Key Objects equals get Value that get Value Override public final int hash Code return Objects hash Code get Key Objects hash Code get Value 
package org infinispan context impl import org infinispan container entries Cache Entry import org infinispan container entries Internal Cache Entry import org infinispan context Invocation Context import org infinispan remoting transport Address Common features of transaction and invocation contexts author Manik Surtani author Mircea Markus jboss com since public abstract class Abstract Invocation Context implements Invocation Context private final Address origin protected Abstract Invocation Context Address origin this origin origin Override public final Address get Origin return origin Override public boolean is Origin Local return origin null Override public boolean has Locked Key Object key return get Locked Keys contains key Override public final Class Loader get Class Loader return null Override public final void set Class Loader final Class Loader class Loader No op Override public boolean is Entry Removed In Context final Object key Cache Entry ce lookup Entry key return ce null ce is Removed ce is Changed deprecated Since no longer used Deprecated protected void on Entry Value Replaced final Object key final Internal Cache Entry cache Entry Override public Invocation Context clone try return Invocation Context super clone catch Clone Not Supported Exception e throw new Illegal State Exception Impossible e 
package org infinispan commons marshall jboss import static org infinispan commons util Reflection Util import static org infinispan commons util Util import java io Byte Array Input Stream import java io Exception import java io Input Stream import java io Object Input import java io Object Output import java io Output Stream import java io Serializable import java lang reflect Method import java net import org infinispan commons io Byte Buffer import org infinispan commons io Byte Buffer Impl import org infinispan commons io Exposed Byte Array Output Stream import org infinispan commons logging Log import org infinispan commons logging Log Factory import org infinispan commons marshall Abstract Marshaller import org infinispan commons marshall Streaming Marshaller import org infinispan commons util concurrent Concurrent Weak Key Hash Map import org jboss marshalling Exception Listener import org jboss marshalling Marshalling import org jboss marshalling Marshalling Configuration import org jboss marshalling Trace Information import org jboss marshalling Unmarshaller Common parent for both embedded and standalone Boss Marshalling based marshallers author Galder Zamarre o author Sanne Grinovero author Dan Berindei since public abstract class Abstract Boss Marshaller extends Abstract Marshaller implements Streaming Marshaller protected static final Log log Log Factory get Log Abstract Boss Marshaller class protected static final boolean trace log is Trace Enabled protected static final Boss Marshaller Factory factory new Boss Marshaller Factory protected static final int protected static final int private static final int private static final int protected final Marshalling Configuration base Cfg Marshaller thread local In non internal marshaller usages such as Java Hot Rod client this is a singleton shared by all so no urgent need for static here clears pretty much any state during finish so no urgent need to clear the thread local since it should n t be leaking It might take a long time to warmup and pre initialize all needed instances private final Concurrent Weak Key Hash Map Thread Per Thread Instance Holder marshaller new Concurrent Weak Key Hash Map Thread Per Thread Instance Holder public Abstract Boss Marshaller Class resolver now set when marshaller unmarshaller will be created base Cfg new Marshalling Configuration base Cfg set Exception Listener new Debugging Exception Listener base Cfg set Class Externalizer Factory new Serialize With Ext Factory base Cfg set Instance Count base Cfg set Class Count base Cfg set Version Override final public void object To Object Stream final Object obj final Object Output out throws Exception out write Object obj Override final protected Byte Buffer object To Buffer final Object o final int estimated Size throws Exception Exposed Byte Array Output Stream baos new Exposed Byte Array Output Stream estimated Size Object Output marshaller start Object Output baos false estimated Size try object To Object Stream o marshaller finally finish Object Output marshaller return new Byte Buffer Impl baos get Raw Buffer baos size Override final public Object Output start Object Output final Output Stream os final boolean is Reentrant final int estimated Size throws Exception Per Thread Instance Holder instance Holder get Per Thread Instance Holder org jboss marshalling Marshaller marshaller instance Holder get Marshaller estimated Size marshaller start Marshalling create Byte Output os return marshaller Override final public void finish Object Output final Object Output oo try if trace log trace Stop marshaller org jboss marshalling Marshaller oo finish catch Exception ignored Override final public Object object From Byte Buffer final byte buf final int offset final int length throws Exception Class Not Found Exception Byte Array Input Stream is new Byte Array Input Stream buf offset length Object Input unmarshaller start Object Input is false Object o null try o object From Object Stream unmarshaller finally finish Object Input unmarshaller return o Override final public Object Input start Object Input final Input Stream is final boolean is Reentrant throws Exception Per Thread Instance Holder instance Holder get Per Thread Instance Holder Unmarshaller unmarshaller instance Holder get Unmarshaller if trace log tracef Start unmarshaller after retrieving marshaller from s is Reentrant factory thread local unmarshaller start Marshalling create Byte Input is return unmarshaller Override final public Object object From Object Stream final Object Input in throws Exception Class Not Found Exception return in read Object Override final public void finish Object Input final Object Input oi try if trace log trace Stop unmarshaller if oi null Unmarshaller oi finish catch Exception ignored Override public boolean is Marshallable Object o throws Exception Class clazz o get Class boolean contains Marshallable marshallable Type Hints is Known Marshallable clazz if contains Marshallable boolean marshallable marshallable Type Hints is Marshallable clazz if trace log tracef Marshallable type s known and is marshallable b clazz get Name marshallable return marshallable else if is Marshallable Candidate o boolean is Marshallable true try object To Buffer o catch Exception e is Marshallable false throw e finally marshallable Type Hints mark Marshallable clazz is Marshallable return is Marshallable return false Override public void start No op Override public void stop Clear class cache marshallable Type Hints clear marshaller clear protected boolean is Marshallable Candidate Object o return o instanceof Serializable private Per Thread Instance Holder get Per Thread Instance Holder final Thread thread Thread current Thread Per Thread Instance Holder holder marshaller get thread if holder null holder new Per Thread Instance Holder base Cfg clone if marshaller put thread holder null throw new Illegal State Exception return holder protected static final class Debugging Exception Listener implements Exception Listener private static final Override public void handle Marshalling Exception final Throwable problem final Object subject if log is Debug Enabled Trace Information add User Information problem to String subject to String Override public void handle Unmarshalling Exception final Throwable problem final Class subject Class if log is Debug Enabled String Builder builder new String Builder Class Loader cl subject Class get Class Loader builder append classloader hierarchy Class Loader parent cl while parent null if parent equals cl builder append n t t type classloader append parent else builder append n t t parent classloader append parent urls get Class Loader Ls parent if urls null for u urls builder append n t t append u parent parent get Parent Trace Information add User Information problem builder to String Override public void handle Unmarshalling Exception Throwable problem no op private static get Class Loader Ls final Class Loader cl urls try Class return Type urls get Class Class parameter Types Method get Ls cl get Class get Method get Ls parameter Types if return Type is Assignable From get Ls get Return Type Object args urls get Ls invoke cl args catch Exception ignore return urls private static final class Per Thread Instance Holder implements River Close Listener final Marshalling Configuration configuration final Extended River Marshaller reusable Marshaller new Extended River Marshaller int available Marshaller Index final Extended River Unmarshaller reusable Un Marshaller new Extended River Unmarshaller int available Un Marshaller Index Per Thread Instance Holder final Marshalling Configuration thread Dedicated Configuration this configuration thread Dedicated Configuration Unmarshaller get Unmarshaller throws Exception as opposing to get Marshaller int in this case we do n t have a good hint about initial buffer sizing if available Un Marshaller Index we re above the pool threshold make a throw away after usage Marshaller configuration set Buffer Size reset to default as it might be changed by get Marshaller return factory create Unmarshaller configuration else Extended River Unmarshaller un Marshaller reusable Un Marshaller available Un Marshaller Index if un Marshaller null available Un Marshaller Index return un Marshaller else configuration set Buffer Size reset to default as it might be changed by get Marshaller un Marshaller factory create Unmarshaller configuration un Marshaller set Close Listener this reusable Un Marshaller available Un Marshaller Index un Marshaller available Un Marshaller Index return un Marshaller Extended River Marshaller get Marshaller int estimated Size throws Exception if available Marshaller Index we re above the pool threshold make a throw away after usage Marshaller setting the buffer as cheap as possible configuration set Buffer Size estimated Size return factory create Marshaller configuration else Extended River Marshaller marshaller reusable Marshaller available Marshaller Index if marshaller null available Marshaller Index return marshaller else we re going to pool this one make sure the buffer size is set to a reasonable value as we might have changed it previously configuration set Buffer Size marshaller factory create Marshaller configuration marshaller set Close Listener this reusable Marshaller available Marshaller Index marshaller available Marshaller Index return marshaller Override public void close Marshaller available Marshaller Index Override public void close Unmarshaller available Un Marshaller Index 
package org infinispan jmx import java util Set import javax management Bean Server import org infinispan configuration global Global Configuration import org infinispan factories Abstract Component Registry Parent class for top level component registration author Galder Zamarre o since public abstract class Abstract Jmx Registration String jmx Domain Bean Server m Bean Server Global Configuration global Config protected abstract Components Jmx Registration build Registrar Set Abstract Component Registry Component components Registers a set of Bean components and returns true if successfully registered false otherwise param components components to register param global Config global configuration return true if successfully registered false otherwise protected boolean register Beans Set Abstract Component Registry Component components Global Configuration global Config try m Bean Server Jmx Util lookup Bean Server global Config catch Exception e m Bean Server null if m Bean Server null Components Jmx Registration registrar build Registrar components registrar register Beans return true else return false protected void unregister Beans Set Abstract Component Registry Component components if m Bean Server null Components Jmx Registration registrar build Registrar components registrar unregister Beans 
package org infinispan notifications impl import java lang annotation Annotation import java lang ref Weak Reference import java lang reflect Invocation Target Exception import java lang reflect Method import java security Access Controller import java security Privileged Action import java security Privileged Action Exception import java security Privileged Exception Action import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Set import java util concurrent Executor Service import javax security auth Subject import javax transaction Transaction import org infinispan commons Cache Exception import org infinispan commons util Reflection Util import org infinispan factories Known Component Names import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan notifications Incorrect Listener Exception import org infinispan notifications Listener import org infinispan notifications cachelistener annotation Cache Entry Created import org infinispan notifications cachelistener annotation Cache Entry Expired import org infinispan notifications cachelistener annotation Cache Entry Modified import org infinispan notifications cachelistener annotation Cache Entry Removed import org infinispan security Security import org infinispan util concurrent Within Thread Executor import org infinispan util logging Log Functionality common to both link org infinispan notifications cachemanagerlistener Cache Manager Notifier Impl and link org infinispan notifications cachelistener Cache Notifier Impl param Defines the type of event that will be used by the subclass param Defines the type of Listener Invocations that the subclasses use author Manik Surtani author William Burns public abstract class Abstract Listener Impl extends Listener Invocation protected final Map Class extends Annotation List listeners Map new Hash Map f protected abstract class Abstract Invocation Builder protected Object target protected Method method protected Class extends Annotation annotation protected boolean sync protected Class Loader class Loader protected Subject subject public Object get Target return target public Method get Method return method public Abstract Invocation Builder set Annotation Class extends Annotation annotation this annotation annotation return this public boolean is Sync return sync public Class Loader get Class Loader return class Loader public Subject get Subject return subject public Abstract Invocation Builder set Target Object target this target target return this public Abstract Invocation Builder set Method Method method this method method return this public Abstract Invocation Builder set Sync boolean sync this sync sync return this public Abstract Invocation Builder set Class Loader Class Loader class Loader this class Loader class Loader return this public Abstract Invocation Builder set Subject Subject subject this subject subject return this public abstract build two separate executor services one for sync and one for async listeners protected Executor Service sync Processor protected Executor Service async Processor Inject Suppress Warnings unused void inject Executor Component Name Known Component Names Executor Service executor this async Processor executor Start priority public void start sync Processor new Within Thread Executor Removes all listeners from the notifier Stop priority public void stop for List list listeners Map values if list null list clear if sync Processor null sync Processor shutdown Now protected abstract Log get Log protected abstract Map Class extends Annotation Class get Allowed Method Annotations Listener l protected List get Listener Collection For Annotation Class extends Annotation annotation List list listeners Map get annotation if list null throw new Cache Exception Unknown listener annotation annotation return list public void remove Listener Object listener for Class extends Annotation annotation get Allowed Method Annotations test Listener Class Validity listener get Class key Set remove Listener Invocation annotation listener protected Set remove Listener Invocation Class extends Annotation annotation Object listener List l get Listener Collection For Annotation annotation Set marked For Removal new Hash Set for li l if listener equals li get Target marked For Removal add li l remove All marked For Removal return marked For Removal public Set Object get Listeners Set Object result new Hash Set Object listeners Map size for List list listeners Map values for Listener Invocation li list result add li get Target return Collections unmodifiable Set result Loops through all valid methods on the object passed in and caches the relevant methods as link Listener Invocation for invocation by reflection The builder provided will be used to create the listener invocations This method will set the target subject sync and methods as needed If other values are needed to be set they should be invoked before passing to this method param listener object to be considered as a listener param builder The builder to use to build the invocation return code true if annotated listener methods were found or code false otherwise protected boolean validate And Add Listener Invocations Object listener Abstract Invocation Builder builder Listener l test Listener Class Validity listener get Class boolean found Methods false builder set Target listener builder set Subject Security get Subject builder set Sync l sync Map Class extends Annotation Class allowed Listeners get Allowed Method Annotations l now try all methods on the listener for anything that we like Note that only methods are scanned for Method m listener get Class get Methods Skip bridge methods as we do n t want to count them as well if m is Synthetic m is Bridge loop through all valid method annotations for Map Entry Class extends Annotation Class annotation Entry allowed Listeners entry Set final Class extends Annotation annotation Class annotation Entry get Key if m is Annotation Present annotation Class final Class event Class annotation Entry get Value test Listener Method Validity m event Class annotation Class get Name if System get Security Manager null m set Accessible true else Access Controller do Privileged Privileged Action Void m set Accessible true return null builder set Method m builder set Annotation annotation Class invocation builder build get Log tracef Add listener invocation s for s invocation annotation Class get Listener Collection For Annotation annotation Class add invocation found Methods true if found Methods get Log no Annotate Methods Found In Listener listener get Class return found Methods protected boolean validate And Add Filter Listener Invocations Object listener Abstract Invocation Builder builder Set Class extends Annotation filter Annotations Listener l test Listener Class Validity listener get Class boolean found Methods false builder set Target listener builder set Subject Security get Subject builder set Sync l sync Map Class extends Annotation Class allowed Listeners get Allowed Method Annotations l now try all methods on the listener for anything that we like Note that only methods are scanned for Method m listener get Class get Methods Skip bridge methods as we do n t want to count them as well if m is Synthetic m is Bridge loop through all valid method annotations for Map Entry Class extends Annotation Class annotation Entry allowed Listeners entry Set final Class extends Annotation annotation Class annotation Entry get Key if m is Annotation Present annotation Class can Apply filter Annotations annotation Class final Class event Class annotation Entry get Value test Listener Method Validity m event Class annotation Class get Name if System get Security Manager null m set Accessible true else Access Controller do Privileged Privileged Action Void m set Accessible true return null builder set Method m builder set Annotation annotation Class invocation builder build get Log tracef Add listener invocation s for s invocation annotation Class get Listener Collection For Annotation annotation Class add invocation found Methods true if found Methods get Log no Annotate Methods Found In Listener listener get Class return found Methods public boolean can Apply Set Class extends Annotation filter Annotations Class extends Annotation annotation Class Annotations such View Change or Transaction Completed should be applied regardless return annotation Class Cache Entry Created class annotation Class Cache Entry Modified class annotation Class Cache Entry Removed class annotation Class Cache Entry Expired class filter Annotations contains annotation Class protected Set Class extends Annotation find Listener Callbacks Object listener Partly duplicates validate And Add Listener Invocations Set Class extends Annotation listener Interests new Hash Set Listener l test Listener Class Validity listener get Class Map Class extends Annotation Class allowed Listeners get Allowed Method Annotations l for Method m listener get Class get Methods Skip bridge methods as we do n t want to count them as well if m is Synthetic m is Bridge loop through all valid method annotations for Map Entry Class extends Annotation Class annotation Entry allowed Listeners entry Set final Class extends Annotation annotation Class annotation Entry get Key if m is Annotation Present annotation Class final Class event Class annotation Entry get Value test Listener Method Validity m event Class annotation Class get Name if System get Security Manager null m set Accessible true else Access Controller do Privileged Privileged Action Void m set Accessible true return null listener Interests add annotation Class return listener Interests Tests if a class is properly annotated as a Cache Listener and returns the Listener annotation param listener Class class to inspect return the Listener annotation protected static Listener test Listener Class Validity Class listener Class Listener l Reflection Util get Annotation listener Class Listener class if l null throw new Incorrect Listener Exception String format Cache listener class s must be annotated with org infinispan notifications Listener listener Class get Name return l protected static void test Listener Method Validity Method m Class allowed Parameter String annotation Name if m get Parameter Types length m get Parameter Types is Assignable From allowed Parameter throw new Incorrect Listener Exception Methods annotated with annotation Name must accept exactly one parameter of assignable from type allowed Parameter get Name if m get Return Type equals void class throw new Incorrect Listener Exception Methods annotated with annotation Name should have a return type of void protected abstract Transaction suspend If Needed protected abstract void resume If Needed Transaction transaction Class that encapsulates a valid invocation for a given registered listener containing a reference to the method to be invoked as well as the target object protected class Listener Invocation Impl implements Listener Invocation public final Object target public final Method method public final boolean sync public final Weak Reference Class Loader class Loader public final Subject subject public Listener Invocation Impl Object target Method method boolean sync Class Loader class Loader Subject subject this target target this method method this sync sync this class Loader new Weak Reference class Loader this subject subject Override public void invoke final event Runnable r Class Loader context Class Loader null Transaction transaction suspend If Needed if class Loader get null context Class Loader Security Actions set Context Class Loader class Loader get try if subject null try Security do As subject Privileged Exception Action Void Do n t want to print out Subject as it could have sensitive information get Log tracef Invoking listener s passing event s using subject target event method invoke target event return null catch Privileged Action Exception e Throwable cause e get Cause if cause instanceof Invocation Target Exception throw Invocation Target Exception cause else if cause instanceof Illegal Access Exception throw Illegal Access Exception cause else throw new Invocation Target Exception cause else get Log tracef Invoking listener s passing event s target event method invoke target event catch Invocation Target Exception exception Throwable cause get Real Exception exception if sync throw get Log exception Invoking Listener cause get Class get Name method target cause else get Log unable To Invoke Listener Method method target cause catch Illegal Access Exception exception get Log unable To Invoke Listener Method And Remove Listener method target exception remove Listener target finally if class Loader get null Security Actions set Context Class Loader context Class Loader resume If Needed transaction if sync sync Processor execute r else async Processor execute r Override public Object get Target return target private Throwable get Real Exception Throwable re if re get Cause null return re Throwable cause re get Cause if cause instanceof Runtime Exception cause instanceof Error return get Real Exception cause else return re 
package org infinispan stream impl local import java util Array Deque import java util Array List import java util Collection import java util Queue import java util Set import java util stream Base Stream import org infinispan commons util Closeable Iterator import org infinispan factories Component Registry import org infinispan stream impl intops Intermediate Operation import org infinispan stream impl intops Unordered Operation import org infinispan util logging Log import org infinispan util logging Log Factory Implements the base operations required for a local stream stream is populated public abstract class Abstract Local Cache Stream extends Base Stream extends implements Base Stream protected final Log log Log Factory get Log get Class protected final Stream Supplier stream Supplier protected final Component Registry registry protected final Collection Runnable on Close Runnables protected final Queue Intermediate Operation intermediate Operations protected Set Integer segments To Filter protected Set keys To Filter protected boolean parallel public interface Stream Supplier extends Base Stream build Stream Set Integer segments To Filter Set keys To Filter Closeable Iterator removable Iterator Closeable Iterator real Iterator param stream Supplier param parallel param registry public Abstract Local Cache Stream Stream Supplier stream Supplier boolean parallel Component Registry registry this stream Supplier stream Supplier this registry registry this on Close Runnables new Array List this intermediate Operations new Array Deque this parallel parallel Abstract Local Cache Stream Abstract Local Cache Stream original this stream Supplier Stream Supplier original stream Supplier this registry original registry this on Close Runnables original on Close Runnables this intermediate Operations original intermediate Operations this segments To Filter original segments To Filter this keys To Filter original keys To Filter this parallel original parallel protected final create Stream Base Stream stream stream Supplier build Stream segments To Filter keys To Filter if parallel stream stream parallel for Intermediate Operation int Op intermediate Operations int Op handle Injection registry stream int Op perform stream return stream Override public boolean is Parallel return parallel Override public sequential this parallel false return this Override public parallel this parallel true return this Override public unordered intermediate Operations add new Unordered Operation return this Override public on Close Runnable close Handler on Close Runnables add close Handler return this Override public void close on Close Runnables for Each Runnable run 
package org infinispan commands read import java io Exception import java io Object Input import java io Object Output import org infinispan commands Abstract Flag Affected Command import org infinispan commands Local Command Abstract class author Manik Surtani author Mircea Markus jboss com since public abstract class Abstract Local Command extends Abstract Flag Affected Command implements Local Command public byte get Command Id return no op public final void write To Object Output output throws Exception no op public final void read From Object Input input throws Exception Class Not Found Exception no op public boolean is Return Value Expected return false public boolean can Block return false 
package org infinispan interceptors locking import static org infinispan commons util Util to Str import java util Array List import java util Arrays import java util Collection import java util concurrent Time Unit import java util stream Collectors import java util stream Stream import org infinispan commands Data Command import org infinispan commands Flag Affected Command import org infinispan commands Visitable Command import org infinispan commands functional Read Only Key Command import org infinispan commands functional Read Only Many Command import org infinispan commands functional Read Write Key Command import org infinispan commands functional Read Write Key Value Command import org infinispan commands functional Read Write Many Command import org infinispan commands functional Read Write Many Entries Command import org infinispan commands functional Write Only Key Command import org infinispan commands functional Write Only Key Value Command import org infinispan commands functional Write Only Many Command import org infinispan commands functional Write Only Many Entries Command import org infinispan commands read Get All Command import org infinispan commands read Get Cache Entry Command import org infinispan commands read Get Key Value Command import org infinispan commands write Clear Command import org infinispan commands write Compute Command import org infinispan commands write Compute If Absent Command import org infinispan commands write Data Write Command import org infinispan commands write Invalidate Command import org infinispan commands write Invalidate Command import org infinispan commands write Put Key Value Command import org infinispan commands write Put Map Command import org infinispan commands write Remove Command import org infinispan commands write Replace Command import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan factories annotations Inject import org infinispan interceptors Async Interceptor import org infinispan interceptors Invocation Finally Action import org infinispan util concurrent Timeout Exception import org infinispan util concurrent locks Lock Manager import org infinispan util logging Log Base class for various locking interceptors in this package author Mircea Markus public abstract class Abstract Locking Interceptor extends Async Interceptor private final boolean trace get Log is Trace Enabled protected Lock Manager lock Manager protected Clustering Dependent Logic cdl protected final Invocation Finally Action unlock All Return Handler new Invocation Finally Action Override public void accept Invocation Context r Ctx Visitable Command r Command Object rv Throwable throwable throws Throwable lock Manager unlock All r Ctx protected abstract Log get Log Inject public void set Dependencies Lock Manager lock Manager Clustering Dependent Logic cdl this lock Manager lock Manager this cdl cdl Override public final Object visit Clear Command Invocation Context ctx Clear Command command throws Throwable return invoke Next ctx command Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable if command has Any Flag Flag Bit Sets Cache put For External Read is non transactional return visit Non Tx Data Write Command ctx command return visit Data Write Command ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Compute If Absent Command Invocation Context ctx Compute If Absent Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return visit Data Read Command ctx command Override public Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return visit Data Read Command ctx command protected abstract Object visit Data Read Command Invocation Context ctx Data Command command throws Throwable protected abstract Object visit Data Write Command Invocation Context ctx Data Write Command command throws Throwable We need this method in here because of put For External Read protected final Object visit Non Tx Data Write Command Invocation Context ctx Data Write Command command throws Throwable Object key if has Skip Locking command should Lock Key key command get Key return invoke Next ctx command try lock And Record ctx key get Lock Timeout Millis command catch Throwable t lock Manager unlock All ctx throw t return invoke Next And Finally ctx command unlock All Return Handler Override public final Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable if has Skip Locking command return invoke Next ctx command try lock All And Record ctx Arrays as List command get Keys get Lock Timeout Millis command catch Throwable t lock Manager unlock All ctx return invoke Next And Finally ctx command unlock All Return Handler Override public final Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable if command is Caused By Local Write cdl get Address if trace get Log trace Skipping invalidation as the write operation originated here return null if has Skip Locking command return invoke Next ctx command final Object keys command get Keys if keys null keys length return null Array List Object keys To Invalidate new Array List keys length for Object key keys try lock And Record ctx key keys To Invalidate add key catch Timeout Exception te get Log unable To Lock To Invalidate key cdl get Address if keys To Invalidate is Empty return null command set Keys keys To Invalidate to Array return invoke Next And Finally ctx command r Ctx r Command rv t Invalidate Command r Command set Keys keys if r Ctx is In Tx Scope lock Manager unlock All r Ctx Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable return handle Write Many Command ctx command command get Map key Set command is Forwarded Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Write Only Key Value Command Invocation Context ctx Write Only Key Value Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Write Only Key Command Invocation Context ctx Write Only Key Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Read Only Key Command Invocation Context ctx Read Only Key Command command throws Throwable return visit Data Read Command ctx command Override public Object visit Write Only Many Entries Command Invocation Context ctx Write Only Many Entries Command command throws Throwable return handle Write Many Command ctx command command get Affected Keys command is Forwarded Override public Object visit Write Only Many Command Invocation Context ctx Write Only Many Command command throws Throwable return handle Write Many Command ctx command command get Affected Keys command is Forwarded Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable return handle Write Many Command ctx command command get Affected Keys command is Forwarded Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable return handle Write Many Command ctx command command get Affected Keys command is Forwarded Override public Object visit Get All Command Invocation Context ctx Get All Command command throws Throwable return handle Read Many Command ctx command command get Keys Override public Object visit Read Only Many Command Invocation Context ctx Read Only Many Command command throws Throwable return handle Read Many Command ctx command command get Keys protected abstract Object handle Read Many Command Invocation Context ctx Flag Affected Command command Collection keys throws Throwable protected abstract Object handle Write Many Command Invocation Context ctx Flag Affected Command command Collection keys boolean forwarded throws Throwable protected final long get Lock Timeout Millis Flag Affected Command command return command has Any Flag Flag Bit Sets cache Configuration locking lock Acquisition Timeout protected final boolean should Lock Key Object key only the primary owner acquires the lock boolean should Lock is Lock Owner key if trace get Log tracef Are s we the lock owners for key s s cdl get Address to Str key should Lock return should Lock protected final boolean is Lock Owner Object key return cdl get Cache Topology get Distribution key is Primary protected final void lock And Record Invocation Context context Object key long timeout throws Interrupted Exception context add Locked Key key lock Manager lock key context get Lock Owner timeout Time Unit lock protected final void lock All And Record Invocation Context context Stream keys long timeout throws Interrupted Exception lock All And Record context keys collect Collectors to List timeout protected final void lock All And Record Invocation Context context Collection keys long timeout throws Interrupted Exception keys for Each context add Locked Key lock Manager lock All keys context get Lock Owner timeout Time Unit lock protected final boolean has Skip Locking Flag Affected Command command return command has Any Flag Flag Bit Sets 
package org infinispan lifecycle import org infinispan configuration cache Configuration import org infinispan configuration global Global Configuration import org infinispan factories Component Registry import org infinispan factories Global Component Registry default no op implementation of the link org infinispan lifecycle Module Lifecycle interface designed for easy extension author Manik Surtani version deprecated since Just implement link Module Lifecycle instead Deprecated public class Abstract Module Lifecycle implements Module Lifecycle Override public void cache Manager Starting Global Component Registry gcr Global Configuration global Configuration a no op Override public void cache Manager Started Global Component Registry gcr a no op Override public void cache Manager Stopping Global Component Registry gcr a no op Override public void cache Manager Stopped Global Component Registry gcr a no op Override public void cache Starting Component Registry cr Configuration configuration String cache Name a no op Override public void cache Started Component Registry cr String cache Name a no op Override public void cache Stopping Component Registry cr String cache Name a no op Override public void cache Stopped Component Registry cr String cache Name a no op 
package org infinispan client hotrod impl transport import org infinispan client hotrod impl protocol Hot Rod Constants import org infinispan client hotrod logging Log import org infinispan client hotrod logging Log Factory Support class for transport implementations author Mircea Markus jboss com since public abstract class Abstract Transport implements Transport private static final Log log Log Factory get Log Abstract Transport class private static final boolean trace log is Trace Enabled private final Transport Factory transport Factory private boolean busy protected Abstract Transport Transport Factory transport Factory this transport Factory transport Factory Override public void set Busy boolean busy this busy busy Override public boolean is Busy return busy Override public byte read Array int response Length read Int return read Byte Array response Length Override public String read String byte str Content read Array String read String new String str Content Hot Rod Constants if trace log tracef Read string is s read String return read String Override public long read Long byte long Bytes read Byte Array long result for byte long Byte long Bytes result result long long Byte x return result Override public void write Long long long Value byte b new byte for int i i i b i byte long Value i write Bytes b Override public int read Unsigned Short byte short Bytes read Byte Array int result for byte long Byte short Bytes result result long long Byte x return result Override public int read Byte Int byte b read Byte Array int value for int i i i int shift i value b i x shift return value Override public void write String String string if string null string is Empty write Array string get Bytes Hot Rod Constants else write Int Override public void write Optional String String string if string null write Signed Int else write Optional Array string get Bytes Hot Rod Constants Override public Transport Factory get Transport Factory return transport Factory Override public void write Array byte to Append write Int to Append length write Bytes to Append public void write Array byte to Append int offset int count write Int count write Bytes to Append offset count Override public void write Optional Array byte to Append write Signed Int to Append length write Bytes to Append protected abstract void write Bytes byte to Append protected abstract void write Bytes byte to Append int offset int count 
package org infinispan commons configuration import static org infinispan commons util Immutables immutable Typed Properties import java util Properties import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Initializer import org infinispan commons configuration attributes Attribute Set import org infinispan commons configuration attributes Typed Properties Attribute Copier import org infinispan commons util Typed Properties public abstract class Abstract Typed Properties Configuration public static final Attribute Definition Typed Properties Attribute Definition builder properties null Typed Properties class copier Typed Properties Attribute Copier initializer new Attribute Initializer Typed Properties Override public Typed Properties initialize return new Typed Properties build public static Attribute Set attribute Set return new Attribute Set Abstract Typed Properties Configuration class protected Attribute Set attributes private final Attribute Typed Properties properties deprecated use link Abstract Typed Properties Configuration Abstract Typed Properties Configuration Attribute Set instead Deprecated protected Abstract Typed Properties Configuration Properties properties this attributes attribute Set this attributes attributes protect this properties this attributes attribute this attributes attribute set immutable Typed Properties Typed Properties to Typed Properties properties protected Abstract Typed Properties Configuration Attribute Set attributes this attributes attributes check Protection this properties this attributes attribute if properties is Modified properties set immutable Typed Properties properties get Override public String to String return Abstract Typed Properties Configuration attributes attributes public Typed Properties properties return properties get Override public final boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Abstract Typed Properties Configuration other Abstract Typed Properties Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true Override public final int hash Code final int prime int result result prime result attributes null attributes hash Code return result 
package org infinispan commands import java util Collection import org infinispan commands control Lock Control Command import org infinispan commands functional Read Only Key Command import org infinispan commands functional Read Only Many Command import org infinispan commands functional Read Write Key Command import org infinispan commands functional Read Write Key Value Command import org infinispan commands functional Read Write Many Command import org infinispan commands functional Read Write Many Entries Command import org infinispan commands functional Write Only Key Command import org infinispan commands functional Write Only Key Value Command import org infinispan commands functional Write Only Many Command import org infinispan commands functional Write Only Many Entries Command import org infinispan commands read Distributed Execute Command import org infinispan commands read Entry Set Command import org infinispan commands read Get All Command import org infinispan commands read Get Cache Entry Command import org infinispan commands read Get Key Value Command import org infinispan commands read Key Set Command import org infinispan commands read Size Command import org infinispan commands remote Get Keys In Group Command import org infinispan commands tx Commit Command import org infinispan commands tx Prepare Command import org infinispan commands tx Rollback Command import org infinispan commands write Clear Command import org infinispan commands write Compute Command import org infinispan commands write Compute If Absent Command import org infinispan commands write Evict Command import org infinispan commands write Invalidate Command import org infinispan commands write Invalidate Command import org infinispan commands write Put Key Value Command import org infinispan commands write Put Map Command import org infinispan commands write Remove Command import org infinispan commands write Replace Command import org infinispan context Invocation Context import org infinispan context impl Tx Invocation Context An abstract implementation of a Visitor that delegates all visit calls to a default handler which can be overridden author Mircea Markus jboss com author Manik Surtani author Galder Zamarre o since public abstract class Abstract Visitor implements Visitor write commands Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable return handle Default ctx command Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable return handle Default ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return handle Default ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable return handle Default ctx command Override public Object visit Compute If Absent Command Invocation Context ctx Compute If Absent Command command throws Throwable return handle Default ctx command Override public Object visit Clear Command Invocation Context ctx Clear Command command throws Throwable return handle Default ctx command Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable return handle Default ctx command Override public Object visit Evict Command Invocation Context ctx Evict Command command throws Throwable return handle Default ctx command read commands Override public Object visit Size Command Invocation Context ctx Size Command command throws Throwable return handle Default ctx command Override public Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return handle Default ctx command Override public Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return handle Default ctx command Override public Object visit Get All Command Invocation Context ctx Get All Command command throws Throwable return handle Default ctx command Override public Object visit Key Set Command Invocation Context ctx Key Set Command command throws Throwable return handle Default ctx command Override public Object visit Entry Set Command Invocation Context ctx Entry Set Command command throws Throwable return handle Default ctx command tx commands Override public Object visit Prepare Command Tx Invocation Context ctx Prepare Command command throws Throwable return handle Default ctx command Override public Object visit Rollback Command Tx Invocation Context ctx Rollback Command command throws Throwable return handle Default ctx command Override public Object visit Commit Command Tx Invocation Context ctx Commit Command command throws Throwable return handle Default ctx command Override public Object visit Invalidate Command Invocation Context ctx Invalidate Command invalidate Command throws Throwable return handle Default ctx invalidate Command Override public Object visit Invalidate Command Invocation Context ctx Invalidate Command invalidate Command throws Throwable return visit Invalidate Command ctx invalidate Command default handler for all commands visited This is called for any visit method called unless a visit command is appropriately overridden param ctx invocation context param command command to handle return return value throws Throwable in the case of a problem protected Object handle Default Invocation Context ctx Visitable Command command throws Throwable return null Helper method to visit a collection of Visitable Commands param ctx Invocation context param to Visit collection of commands to visit throws Throwable in the event of problems public void visit Collection Invocation Context ctx Collection extends Visitable Command to Visit throws Throwable for Visitable Command command to Visit command accept Visitor ctx this Override public Object visit Lock Control Command Tx Invocation Context ctx Lock Control Command command throws Throwable return handle Default ctx command Override public Object visit Unknown Command Invocation Context ctx Visitable Command command throws Throwable return handle Default ctx command Override public Object visit Distributed Execute Command Invocation Context ctx Distributed Execute Command command throws Throwable return handle Default ctx command Override public Object visit Get Keys In Group Command Invocation Context ctx Get Keys In Group Command command throws Throwable return handle Default ctx command Override public Object visit Read Only Key Command Invocation Context ctx Read Only Key Command command throws Throwable return handle Default ctx command Override public Object visit Read Only Many Command Invocation Context ctx Read Only Many Command command throws Throwable return handle Default ctx command Override public Object visit Write Only Key Command Invocation Context ctx Write Only Key Command command throws Throwable return handle Default ctx command Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable return handle Default ctx command Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable return handle Default ctx command Override public Object visit Write Only Many Entries Command Invocation Context ctx Write Only Many Entries Command command throws Throwable return handle Default ctx command Override public Object visit Write Only Key Value Command Invocation Context ctx Write Only Key Value Command command throws Throwable return handle Default ctx command Override public Object visit Write Only Many Command Invocation Context ctx Write Only Many Command command throws Throwable return handle Default ctx command Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable return handle Default ctx command Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable return handle Default ctx command 
package org infinispan eviction impl import static org infinispan persistence manager Persistence Manager Access Mode import static org infinispan persistence manager Persistence Manager Access Mode import static org infinispan persistence manager Persistence Manager Access Mode import static org infinispan persistence manager Persistence Manager Access Mode import java util concurrent atomic Atomic Long import org infinispan commons Cache Exception import org infinispan configuration cache Configuration import org infinispan eviction Activation Manager import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan interceptors locking Clustering Dependent Logic import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Attribute import org infinispan jmx annotations Managed Operation import org infinispan jmx annotations Measurement Type import org infinispan persistence manager Persistence Manager import org infinispan util logging Log import org infinispan util logging Log Factory Concrete implementation of activation logic manager author Galder Zamarre o since Bean object Name Activation description Component that handles activating entries that have been passivated to a Cache Store by loading them into memory public class Activation Manager Impl implements Activation Manager private static final Log log Log Factory get Log Activation Manager Impl class private final Atomic Long activations new Atomic Long private Persistence Manager persistence Manager private Configuration cfg private Clustering Dependent Logic clustering Dependent Logic private boolean passivation Managed Attribute description Enables or disables the gathering of statistics by this component display Name Statistics enabled writable true private boolean statistics Enabled false Inject public void inject Persistence Manager clm Configuration cfg Clustering Dependent Logic cdl this persistence Manager clm this cfg cfg this clustering Dependent Logic cdl Start priority After the cache loader manager before the passivation manager public void start statistics Enabled cfg jmx Statistics enabled passivation cfg persistence passivation Override public void on Update Object key boolean new Entry if passivation new Entry we do n t have passivation or the entry already exists in container return try if persistence Manager delete From All Stores key statistics Enabled activations increment And Get catch Cache Exception e log unable To Remove Entry After Activation key e Override public void on Remove Object key boolean new Entry if passivation return if we are the primary owner we need to remove from the shared store final boolean primary Owner clustering Dependent Logic get Cache Topology get Distribution key is Primary try if new Entry the entry does not exists in data container We need to remove from private and shared stores if we are the primary owner Access Mode mode primary Owner if persistence Manager delete From All Stores key mode statistics Enabled activations increment And Get else the entry already exists in data container It may be put during the load by the Cache Loader Interceptor so it was already activate in the private stores if primary Owner persistence Manager delete From All Stores key statistics Enabled activations increment And Get catch Cache Exception e log unable To Remove Entry After Activation key e Override public long get Activation Count return activations get Managed Attribute description Number of activation events display Name Number of cache entries activated measurement Type Measurement Type public String get Activations if statistics Enabled return return String value Of get Activation Count Managed Operation description Resets statistics gathered by this component display Name Reset statistics public void reset Statistics activations set 
package org infinispan counter configuration import java util Hash Map import java util Map author Pedro Ruivo since public enum Attribute must be first null concurrency level initial value name num owners reliability storage value private static final Map String Attribute static final Map String Attribute map new Hash Map for Attribute attribute values final String name attribute name if name null map put name attribute map private final String name Attribute final String name this name name public static Attribute for Name String local Name final Attribute attribute get local Name return attribute null attribute Override public String to String return name 
package org infinispan commons configuration attributes import org infinispan commons Cache Configuration Exception import org infinispan commons util Util Attribute Definition Defines the characteristics of a configuration attribute It is used to construct an actual link Attribute holder An attribute definition has the following characteristics ul li name li li default value or a value initializer li li type which needs to be specified if it can not be inferred from the default value i e when it is null li li Whether an attribute is immutable or not i e whether its value is constant after initialization or it can be changed li li validator which intercepts invalid values li ul author Tristan Tarrant since public final class Attribute Definition private final String name private final String xml Name private final default Value private final boolean immutable private final boolean auto Persist private final Attribute Copier copier private final Attribute Initializer extends initializer private final Attribute Validator super validator private final Class type Attribute Definition String name String xml Name initial Value Class type boolean immutable boolean auto Persist Attribute Copier copier Attribute Validator super validator Attribute Initializer extends initializer this name name this xml Name xml Name this default Value initial Value this immutable immutable this auto Persist auto Persist this copier copier this initializer initializer this validator validator this type type public String name return name public String xml Name return xml Name public Class get Type return type public get Default Value return initializer null initializer initialize default Value public boolean is Immutable return immutable public boolean is Auto Persist return auto Persist public Attribute Copier copier return copier public Attribute Initializer extends initializer return initializer Attribute Validator super validator return validator public Attribute to Attribute return new Attribute this public void validate value if validator null validator validate value public static Builder builder String name default Value if default Value null return new Builder name default Value Class default Value get Class else throw new Cache Configuration Exception Must specify type when passing null for Attribute Definition name public static Builder builder String name default Value Class klass return new Builder name default Value klass public static final class Builder private final String name private final default Value private final Class type private boolean immutable false private boolean auto Persist true private String xml Name private Attribute Copier copier null private Attribute Initializer extends initializer private Attribute Validator super validator private Builder String name default Value Class type this name name this default Value default Value this type type public Builder immutable this immutable true return this public Builder copier Attribute Copier copier this copier copier return this public Builder initializer Attribute Initializer extends initializer this initializer initializer return this public Builder auto Persist boolean auto Persist this auto Persist auto Persist return this public Builder validator Attribute Validator super validator this validator validator return this public Builder xml Name String xml Name this xml Name xml Name return this public Attribute Definition build return new Attribute Definition name xml Name null Util xmlify name xml Name default Value type immutable auto Persist copier validator initializer 
package org infinispan commons configuration attributes import java util Collection import java util Iterator import java util Linked Hash Map import java util Map import javax xml stream Stream Exception import javax xml stream Stream Writer import org infinispan commons logging Log import org infinispan commons logging Log Factory Attribute Set is a container for link Attribute s It is constructed by passing in a list of link Attribute Definition s Attribute Sets are initially unprotected which means that the contained attributes can be modified If the link protect method is invoked then only attributes which are not link Attribute Definition is Immutable can be modified from then on author Tristan Tarrant since public class Attribute Set implements Attribute Listener Object private static final Log log Log Factory get Log Attribute Set class private final Class klass private final String name private final Map String Attribute attributes private boolean protect public Attribute Set Class klass Attribute Definition attribute Definitions this klass klass get Simple Name null attribute Definitions public Attribute Set String name Attribute Definition attribute Definitions this name null attribute Definitions public Attribute Set Class klass Attribute Set attribute Set Attribute Definition attribute Definitions this klass klass get Simple Name attribute Set attribute Definitions public Attribute Set String name Attribute Set attribute Set Attribute Definition attribute Definitions this null name attribute Set attribute Definitions private Attribute Set Class klass String name Attribute Set attribute Set Attribute Definition attribute Definitions this klass klass this name name if attribute Set null this attributes new Linked Hash Map attribute Definitions length attribute Set attributes size for Attribute attribute attribute Set attributes values this attributes put attribute name attribute get Attribute Definition to Attribute else this attributes new Linked Hash Map attribute Definitions length for Attribute Definition def attribute Definitions if attributes contains Key def name throw log attribute Set Duplicate Attribute def name name Attribute Object attribute Attribute Object def to Attribute if attribute is Immutable attribute add Listener this this attributes put def name attribute public Class get Klass return klass public String get Name return name Returns whether this attribute set contains the specified named attribute param name the name of the attribute public boolean contains String name return attributes contains Key name Returns whether this set contains the specified attribute definition param def the link Attribute Definition public boolean contains Attribute Definition def return contains def name Returns the named attribute param name the name of the attribute to return return the attribute Suppress Warnings unchecked public Attribute attribute String name return Attribute this attributes get name Returns the attribute identified by the supplied link Attribute Definition param def the attribute definition return the attribute public Attribute attribute Attribute Definition def Attribute attribute attribute def name if attribute null return attribute else throw log no Such Attribute def name name Copies all attribute from another Attribute Set param other the source Attribute Set public void read Attribute Set other for Iterator Attribute iterator attributes values iterator iterator has Next Attribute Object attribute Attribute Object iterator next Attribute Object a other attribute attribute name if a is Modified attribute read a Returns a new Value Set where immutable link Attribute s are write protected return public Attribute Set protect Attribute Definition attr Defs new Attribute Definition attributes size int i for Attribute attribute attributes values attr Defs i attribute get Attribute Definition Attribute Set protected Set new Attribute Set klass name null attr Defs for Attribute attribute protected Set attributes values Attribute local Attr this attributes get attribute name attribute read Attribute local Attr attribute protect protected Set protect true return protected Set Returns whether any attributes in this set have been modified public boolean is Modified for Attribute attribute attributes values if attribute is Modified return true return false Returns whether this attribute set is protected public boolean is Protected return protect Writer a single attribute to the specified link Stream Writer using the attribute s xml Name param writer the writer param def the Attribute definition throws Stream Exception public void write Stream Writer writer Attribute Definition def throws Stream Exception write writer def def xml Name Writer a single attribute to the specified link Stream Writer using the supplied name param writer the writer param def the Attribute definition param name the tag name for the attribute throws Stream Exception public void write Stream Writer writer Attribute Definition def Enum name throws Stream Exception write writer def name to String Writer a single attribute to the specified link Stream Writer using the supplied name param writer the writer param def the Attribute definition param name the tag name for the attribute throws Stream Exception public void write Stream Writer writer Attribute Definition def String name throws Stream Exception Attribute attribute attribute def attribute write writer name Writes this attributeset to the specified Stream Writer as an element param writer public void write Stream Writer writer String xml Element Name throws Stream Exception if is Modified writer write Start Element xml Element Name write writer writer write End Element Writes the specified attributes in this attributeset to the specified Stream Writer as an element param writer public void write Stream Writer writer String xml Element Name Attribute Definition defs throws Stream Exception boolean skip true for Attribute Definition def defs skip skip attribute def is Modified if skip writer write Start Element xml Element Name for Attribute Definition def defs Attribute attr attribute def attr write writer attr get Attribute Definition xml Name writer write End Element Writes the attributes of this attributeset as part of the current element param writer public void write Stream Writer writer throws Stream Exception for Attribute attr attributes values if attr is Persistent attr write writer attr get Attribute Definition xml Name Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Attribute Set other Attribute Set obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true Override public String to String return to String name public String to String String name String Builder sb new String Builder if name null sb append name sb append sb append boolean comma false for Attribute value attributes values if comma sb append else comma true sb append value to String sb append return sb to String public Attribute Set check Protection if protect throw log unprotected Attribute Set name return this public void reset if protect throw log protected Attribute Set name for Attribute attribute attributes values attribute reset Override public void attribute Changed Attribute Object attribute Object old Value public Collection Attribute attributes return attributes values 
package org infinispan security impl import java security Access Control Exception import java security Principal import java security acl Group import java util Hash Set import java util Map import java util Set import java util concurrent Concurrent Map import javax security auth Subject import org infinispan commons util Collection Factory import org infinispan commons util Util import org infinispan configuration cache Authorization Configuration import org infinispan configuration global Global Security Configuration import org infinispan security Audit Context import org infinispan security Audit Logger import org infinispan security Audit Response import org infinispan security Authorization Permission import org infinispan security Principal Role Mapper import org infinispan security Role import org infinispan security Security import org infinispan util logging Log import org infinispan util logging Log Factory Authorization Helper Some utility methods for computing access masks and verifying them against permissions author Tristan Tarrant since public class Authorization Helper private static final Log log Log Factory get Log Authorization Helper class private static final boolean trace log is Trace Enabled private final Global Security Configuration global Configuration private final Audit Logger audit private final Audit Context context private final String name private final Concurrent Map Cache Principal Pair Subject acl Cache public Authorization Helper Global Security Configuration global Configuration Audit Context context String name Concurrent Map Cache Principal Pair Subject acl Cache this global Configuration global Configuration this audit global Configuration authorization audit Logger this context context this name name this acl Cache acl Cache public Authorization Helper Global Security Configuration security Audit Context context String name this security context name Collection Factory make Bounded Concurrent Map public void check Permission Authorization Permission perm check Permission null null perm null public void check Permission Authorization Permission perm String role check Permission null null perm role public void check Permission Authorization Configuration configuration Authorization Permission perm check Permission configuration null perm null public void check Permission Authorization Configuration configuration Subject subject Authorization Permission perm String role if global Configuration authorization enabled if Security is Privileged Security check Permission perm get Security Permission else subject subject null subject Security get Subject try if subject null if check Subject Permission And Role subject configuration perm role audit audit subject context name perm Audit Response else check Security Manager Permission perm else check Security Manager Permission perm catch Security Exception e audit audit subject context name perm Audit Response throw log unauthorized Access Util pretty Print Subject subject perm to String private void check Security Manager Permission Authorization Permission perm if System get Security Manager null System get Security Manager check Permission perm get Security Permission else throw new Access Control Exception perm get Security Permission private boolean check Subject Permission And Role Subject subject Authorization Configuration configuration Authorization Permission required Permission String requested Role Principal user Principal get User Principal subject if user Principal null Cache Principal Pair cpp new Cache Principal Pair user Principal name Subject subject if acl Cache null subject acl Cache compute If Absent cpp s compute Subject subject configuration else subject compute Subject subject configuration int permission Mask required Permission get Mask boolean authorized subject matches permission Mask requested Role null subject contains Role requested Role true if trace log tracef Check subject s with s has permission s and role s b subject subject required Permission requested Role authorized return authorized else return false private Subject compute Subject Subject subject Authorization Configuration configuration Principal Role Mapper role Mapper global Configuration authorization principal Role Mapper Set Principal principals subject get Principals Set String all Roles new Hash Set principals size for Principal principal principals Set String role Names role Mapper principal To Roles principal if role Names null all Roles add All role Names int subject Mask Map String Role global Roles global Configuration authorization roles for String role all Roles if configuration null configuration roles contains role Role global Role global Roles get role if global Role null subject Mask global Role get Mask if trace log tracef Subject s has roles s and permission mask d subject all Roles subject Mask return new Subject all Roles subject Mask private Principal get User Principal Subject subject if subject null Set Principal principals subject get Principals if principals null principals is Empty for Principal p principals if p instanceof Group return p return null 
package org infinispan xsite import static org infinispan util logging events Messages import java util Array List import java util Arrays import java util Collections import java util Hash Map import java util Hash Set import java util List import java util List Iterator import java util Map import java util Set import java util concurrent Concurrent Map import javax transaction Transaction import org infinispan Cache import org infinispan commands Abstract Visitor import org infinispan commands Commands Factory import org infinispan commands Visitable Command import org infinispan commands functional Read Write Key Command import org infinispan commands functional Read Write Key Value Command import org infinispan commands functional Read Write Many Command import org infinispan commands functional Read Write Many Entries Command import org infinispan commands functional Write Only Key Command import org infinispan commands functional Write Only Key Value Command import org infinispan commands functional Write Only Many Command import org infinispan commands functional Write Only Many Entries Command import org infinispan commands tx Commit Command import org infinispan commands tx Prepare Command import org infinispan commands tx Rollback Command import org infinispan commands write Clear Command import org infinispan commands write Compute Command import org infinispan commands write Compute If Absent Command import org infinispan commands write Put Key Value Command import org infinispan commands write Put Map Command import org infinispan commands write Remove Command import org infinispan commands write Replace Command import org infinispan commands write Write Command import org infinispan commons util Collection Factory import org infinispan commons util Util import org infinispan configuration cache Backup Configuration import org infinispan configuration cache Backup Failure Policy import org infinispan configuration cache Configuration import org infinispan configuration cache Sites Configuration import org infinispan configuration global Global Configuration import org infinispan container entries Cache Entry import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan context impl Tx Invocation Context import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan remoting transport Aggregate Backup Response import org infinispan remoting transport Backup Response import org infinispan remoting transport Transport import org infinispan transaction impl Abstract Cache Transaction import org infinispan transaction impl Local Transaction import org infinispan transaction impl Transaction Table import org infinispan util Time Service import org infinispan util logging Log import org infinispan util logging Log Factory import org infinispan util logging events Event Log Category import org infinispan util logging events Event Log Manager import org infinispan util logging events Event Logger import org infinispan xsite notification Site Status Listener author Mircea Markus since public class Backup Sender Impl implements Backup Sender private static Log log Log Factory get Log Backup Sender Impl class private static final Backup Response new Empty Backup Response private Cache cache private Transport transport private Configuration config private Transaction Table tx Table private Time Service time Service private Commands Factory commands Factory private final Map String Custom Failure Policy site Failure Policy new Hash Map private final Concurrent Map String Offline Status offline Status Collection Factory make Concurrent Map private Event Log Manager event Log Manager private final String local Site Name private String cache Name private Global Configuration global Config private enum Backup Filter public Backup Sender Impl String local Site Name this local Site Name local Site Name Inject public void init Cache cache Transport transport Transaction Table tx Table Global Configuration gc Time Service time Service Commands Factory commands Factory Event Log Manager event Log Manager this cache cache this transport transport this tx Table tx Table this global Config gc this time Service time Service this commands Factory commands Factory this event Log Manager event Log Manager Start public void start this config cache get Cache Configuration this cache Name cache get Name for Backup Configuration bc config sites enabled Backups final String site Name bc site if bc backup Failure Policy Backup Failure Policy String backup Policy bc failure Policy Class if backup Policy null throw new Illegal State Exception Backup policy class missing for custom failure policy Custom Failure Policy instance Util get Instance backup Policy global Config class Loader instance init cache site Failure Policy put bc site instance Offline Status offline new Offline Status bc take Offline time Service new Site Status Listener Override public void site Online Backup Sender Impl this site Online site Name Override public void site Offline Backup Sender Impl this site Offline site Name offline Status put site Name offline Override public Backup Response backup Prepare Prepare Command command Abstract Cache Transaction cache Transaction throws Exception List Write Command modifications filter Modifications command get Modifications cache Transaction get Looked Up Entries if modifications is Empty return Prepare Command prepare commands Factory build Prepare Command command get Global Transaction modifications command is One Phase Commit if we run a then filter out prepare backup calls as they will happen during the local commit phase Backup Filter filter prepare is One Phase Commit Backup Filter Backup Filter List Site Backup backups calculate Backup Info filter return backup Command prepare backups Override public void process Responses Backup Response backup Response Visitable Command command throws Throwable process Responses backup Response command null Override public void process Responses Backup Response backup Response Visitable Command command Transaction transaction throws Throwable log tracef Processing backup response s for command s backup Response command backup Response wait For Backup To Finish update Offline Sites backup Response process Failed Responses backup Response command transaction private void update Offline Sites Backup Response backup Response if offline Status is Empty backup Response is Empty return Set String communication Errors backup Response get Communication Errors for Map Entry String Offline Status status Entry offline Status entry Set Offline Status status status Entry get Value if status is Enabled continue if communication Errors contains status Entry get Key status update On Communication Failure backup Response get Send Time Millis log tracef Offline Status updated s status else if status is Offline status reset Override public Backup Response backup Write Write Command command throws Exception List Site Backup x Site Backups calculate Backup Info Backup Filter return backup Command command x Site Backups Override public Backup Response backup Commit Commit Command command throws Exception we have a we did n t backup the stuff during prepare we need to do it now Backup Response one Pc Response send To Backups command List Site Backup x Site Backups calculate Backup Info Backup Filter Backup Response two Pc Response backup Command command x Site Backups return new Aggregate Backup Response one Pc Response two Pc Response Override public Backup Response backup Rollback Rollback Command command throws Exception List Site Backup x Site Backups calculate Backup Info Backup Filter log tracef Backing up rollback command to s x Site Backups return backup Command command x Site Backups Override public Bring Site Online Response bring Site Online String site Name if config sites has In Use Backup site Name log trying To Bring Online Nonexistent Site site Name return Bring Site Online Response else Offline Status offline offline Status get site Name boolean brought Online offline bring Online return brought Online Bring Site Online Response Bring Site Online Response Override public Take Site Offline Response take Site Offline String site Name if config sites has In Use Backup site Name return Take Site Offline Response else Offline Status offline offline Status get site Name return offline force Offline Take Site Offline Response Take Site Offline Response private Backup Response backup Command Visitable Command command List Site Backup x Site Backups throws Exception return transport backup Remotely x Site Backups commands Factory build Single Site Rpc Command command private Backup Response send To Backups Commit Command command throws Exception final Local Transaction local Tx tx Table get Local Transaction command get Global Transaction List Write Command modifications filter Modifications local Tx get Modifications local Tx get Looked Up Entries if modifications is Empty return List Site Backup backups calculate Backup Info Backup Filter Prepare Command prepare commands Factory build Prepare Command command get Global Transaction modifications true return backup Command prepare backups private void process Failed Responses Backup Response backup Response Visitable Command command Transaction transaction throws Throwable Sites Configuration sites Configuration config sites Map String Throwable failures backup Response get Failed Backups Backup Failure Exception backup Exception null for Map Entry String Throwable failure failures entry Set Backup Failure Policy policy sites Configuration get Failure Policy failure get Key if policy Backup Failure Policy Custom Failure Policy custom Failure Policy site Failure Policy get failure get Key command accept Visitor null new Custom Backup Policy Invoker failure get Key custom Failure Policy transaction if policy Backup Failure Policy log warn Xsite Backup Failed cache Name failure get Key failure get Value else if policy Backup Failure Policy if backup Exception null backup Exception new Backup Failure Exception cache Name backup Exception add Failure failure get Key failure get Value if backup Exception null throw backup Exception private List Site Backup calculate Backup Info Backup Filter backup Filter List Site Backup backup Info new Array List Sites Configuration sites config sites for Backup Configuration bc sites enabled Backups if bc site equals local Site Name log cache Backups Data To Same Site local Site Name continue boolean is Sync bc strategy Backup Configuration Backup Strategy if backup Filter Backup Filter if is Sync bc is Two Phase Commit continue if backup Filter Backup Filter if is Sync bc is Two Phase Commit continue if is Offline bc site log tracef The site s is offline not backing up information to it bc site continue Site Backup bi new Site Backup bc site is Sync bc replication Timeout backup Info add bi return backup Info private boolean is Offline String site Offline Status offline offline Status get site return offline null offline is Offline private List Write Command filter Modifications Write Command modifications Map Object Cache Entry looked Up Entries if modifications null modifications length return Collections empty List return filter Modifications Arrays as List modifications looked Up Entries private List Write Command filter Modifications List Write Command modifications Map Object Cache Entry looked Up Entries if modifications null modifications is Empty return Collections empty List List Write Command filtered new Array List modifications size Set Object filtered Keys new Hash Set modifications size Note the result of replication of transaction with flagged operations may be actually different We use last flag bit set wins strategy All we can do is to assume that if the user plays with unsafe flags he wo n t modify the entry once in a replicable and another time in a non replicable way for List Iterator Write Command it modifications list Iterator modifications size it has Previous Write Command write Command it previous if write Command is Successful write Command has Any Flag Flag Bit Sets continue Note Clear Command should be replicated out of transaction for Object key write Command get Affected Keys if filtered Keys contains key continue Cache Entry entry looked Up Entries get key if entry null Functional commands should always fetch the remote value to originator if xsite is enabled throw new Illegal State Exception Write Command replicated Command if entry is Removed replicated Command commands Factory build Remove Command key null write Command get Flags Bit Set else replicated Command commands Factory build Put Key Value Command key entry get Value entry get Metadata write Command get Flags Bit Set filtered add replicated Command filtered Keys add key return filtered private void site Online String site Name get Event Logger info Event Log Category site Online site Name private void site Offline String site Name get Event Logger info Event Log Category site Offline site Name private Event Logger get Event Logger return event Log Manager get Event Logger context cache Name scope transport get Address private static final class Custom Backup Policy Invoker extends Abstract Visitor private final String site private final Custom Failure Policy Object Object failure Policy private final Transaction tx public Custom Backup Policy Invoker String site Custom Failure Policy failure Policy Transaction tx this site site noinspection unchecked this failure Policy failure Policy this tx tx Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable failure Policy handle Put Failure site command get Key command get Value command is Put If Absent return null Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable failure Policy handle Remove Failure site command get Key command get Value return null Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable failure Policy handle Replace Failure site command get Key command get Old Value command get New Value return null Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable failure Policy handle Compute Failure site command get Key command get Remapping Bi Function command is Compute If Present return null Override public Object visit Compute If Absent Command Invocation Context ctx Compute If Absent Command command throws Throwable failure Policy handle Compute If Absent Failure site command get Key command get Mapping Function return null Override public Object visit Write Only Key Command Invocation Context ctx Write Only Key Command command throws Throwable failure Policy handle Write Only Key Failure site command get Key return null Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable failure Policy handle Read Write Key Value Failure site command get Key return null Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable failure Policy handle Read Write Key Failure site command get Key return null Override public Object visit Write Only Many Entries Command Invocation Context ctx Write Only Many Entries Command command throws Throwable failure Policy handle Write Only Many Entries Failure site command get Entries return null Override public Object visit Write Only Key Value Command Invocation Context ctx Write Only Key Value Command command throws Throwable failure Policy handle Write Only Key Value Failure site command get Key return null Override public Object visit Write Only Many Command Invocation Context ctx Write Only Many Command command throws Throwable failure Policy handle Write Only Many Failure site command get Affected Keys return null Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable failure Policy handle Read Write Many Failure site command get Affected Keys return null Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable failure Policy handle Read Write Many Entries Failure site command get Entries return null Override public Object visit Clear Command Invocation Context ctx Clear Command command throws Throwable failure Policy handle Clear Failure site return null Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable failure Policy handle Put All Failure site command get Map return null Override public Object visit Prepare Command Tx Invocation Context ctx Prepare Command command throws Throwable failure Policy handle Prepare Failure site tx return null Override public Object visit Rollback Command Tx Invocation Context ctx Rollback Command command throws Throwable failure Policy handle Rollback Failure site tx return null Override public Object visit Commit Command Tx Invocation Context ctx Commit Command command throws Throwable failure Policy handle Commit Failure site tx return null Override protected Object handle Default Invocation Context ctx Visitable Command command throws Throwable super handle Default ctx command throw new Illegal State Exception Unknown command command public Offline Status get Offline Status String site return offline Status get site Override public Map String Boolean status Map String Boolean result new Hash Map offline Status size for Map Entry String Offline Status os offline Status entry Set result put os get Key os get Value is Offline return result private static class Empty Backup Response implements Backup Response Override public void wait For Backup To Finish throws Exception no op nothing was sent Override public Map String Throwable get Failed Backups no op nothing was sent return Collections empty Map Override public Set String get Communication Errors no op nothing was sent return Collections empty Set Override public long get Send Time Millis no op this should never be invoked return Override public boolean is Empty return true 
package org infinispan interceptors distribution import java util Array List import java util Arrays import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Set import java util concurrent Completable Future import java util function Bi Consumer import java util stream Stream import org infinispan commands Flag Affected Command import org infinispan commands Replicable Command import org infinispan commands Topology Affected Command import org infinispan commands Visitable Command import org infinispan commands functional Read Only Key Command import org infinispan commands functional Read Only Many Command import org infinispan commands read Abstract Data Command import org infinispan commands read Get All Command import org infinispan commands read Get Cache Entry Command import org infinispan commands read Get Key Value Command import org infinispan commands read Size Command import org infinispan commands remote Clustered Get All Command import org infinispan commands remote Clustered Get Command import org infinispan commands remote Get Keys In Group Command import org infinispan commands write Abstract Data Write Command import org infinispan commands write Clear Command import org infinispan commands write Data Write Command import org infinispan commands write Value Matcher import org infinispan commons Cache Exception import org infinispan commons util Array Collector import org infinispan container entries Cache Entry import org infinispan container entries Internal Cache Entry import org infinispan container entries Internal Cache Value import org infinispan container entries Null Cache Entry import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan context impl Tx Invocation Context import org infinispan distribution Distribution Info import org infinispan distribution Distribution Manager import org infinispan distribution Localized Cache Topology import org infinispan distribution Remote Value Retrieved Listener import org infinispan distribution ch Consistent Hash import org infinispan distribution ch Key Partitioner import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan interceptors Invocation Success Function import org infinispan interceptors impl Clustering Interceptor import org infinispan remoting Remote Exception import org infinispan remoting responses Response import org infinispan remoting responses Successful Response import org infinispan remoting responses Unsure Response import org infinispan remoting responses Valid Response import org infinispan remoting rpc Response Mode import org infinispan remoting rpc Rpc Manager import org infinispan remoting rpc Rpc Options import org infinispan remoting transport Address import org infinispan statetransfer Outdated Topology Exception import org infinispan statetransfer All Owners Lost Exception import org infinispan transaction xa Global Transaction import org infinispan util concurrent Completable Futures import org infinispan util logging Log import org infinispan util logging Log Factory import net jcip annotations Guarded By Base class for distribution of entries across a cluster author Manik Surtani author Mircea Markus jboss com author Pete Muir author Dan Berindei dan infinispan org public abstract class Base Distribution Interceptor extends Clustering Interceptor private static final Log log Log Factory get Log Base Distribution Interceptor class private static final boolean trace log is Trace Enabled private static final Object new Object protected Distribution Manager dm protected Remote Value Retrieved Listener rvrl protected Key Partitioner key Partitioner protected boolean is Enabled protected boolean is Replicated private final Read Only Many Helper read Only Many Helper new Read Only Many Helper private final Invocation Success Function primary Return Handler this primary Return Handler Override protected Log get Log return log Inject public void inject Dependencies Distribution Manager distribution Manager Remote Value Retrieved Listener rvrl Key Partitioner key Partitioner this dm distribution Manager this rvrl rvrl this key Partitioner key Partitioner Start public void configure Ca n t rely on the super inject Configuration to be called before our inject Dependencies method is Enabled cache Configuration clustering l enabled is Replicated cache Configuration clustering cache Mode is Replicated Override public Object visit Size Command Invocation Context ctx Size Command command throws Throwable if is Replicated Replicated size command has no reason to be distributed as we do is count entries no processing done upon these entries and the overhead of coordinating remote nodes and network calls is more expensive command set Flags Bit Set command get Flags Bit Set Flag Bit Sets return super visit Size Command ctx command Override public final Object visit Get Keys In Group Command Invocation Context ctx Get Keys In Group Command command throws Throwable if command is Group Owner do n t go remote if we are an owner return invoke Next ctx command Address primary Owner dm get Cache Topology get Distribution command get Group Name primary Completable Future Map Address Response future rpc Manager invoke Remotely Async Collections singleton primary Owner command default Sync Options return async Invoke Next ctx command future then Accept responses if responses is Empty Response response responses values iterator next if response instanceof Successful Response noinspection unchecked List Cache Entry cache Entries List Cache Entry Successful Response response get Response Value for Cache Entry entry cache Entries wrap Remote Entry ctx entry get Key entry false Override public final Object visit Clear Command Invocation Context ctx Clear Command command throws Throwable if ctx is Origin Local is Local Mode Forced command Rpc Options rpc Options rpc Manager get Rpc Options Builder is Synchronous command Response Mode Response Mode build return async Invoke Next ctx command rpc Manager invoke Remotely Async null command rpc Options return invoke Next ctx command protected extends Flag Affected Command Topology Affected Command Completable Future Void remote Get Invocation Context ctx command Object key boolean is Write Localized Cache Topology cache Topology check Topology Id command int topology Id cache Topology get Topology Id Distribution Info info cache Topology get Distribution key if info is Read Owner if trace log tracef Key s became local after wrapping retrying command Command topology is d current topology is d key command get Topology Id topology Id The topology has changed between and let s retry if command get Topology Id topology Id throw new Illegal State Exception throw new Outdated Topology Exception topology Id if trace log tracef Perform remote get for key s current Topology Id s owners s key topology Id info read Owners Clustered Get Command get Command cf build Clustered Get Command key command get Flags Bit Set get Command set Topology Id topology Id get Command set Write is Write return rpc Manager invoke Remotely Async info read Owners get Command get Staggered Options info read Owners size then Accept responses for Response r responses values if r instanceof Successful Response Successful Response response Successful Response r Object response Value response get Response Value if response Value null if rvrl null rvrl remote Value Not Found key wrap Remote Entry ctx key Null Cache Entry get Instance is Write return Internal Cache Entry ice Internal Cache Value response Value to Internal Cache Entry key if rvrl null rvrl remote Value Found ice wrap Remote Entry ctx key ice is Write return throw handle Missing Successful Response responses protected static Cache Exception handle Missing Successful Response Map Address Response responses The response map does not contain any Exception Responses these are rethrown as exceptions if responses values stream any Match Unsure Response class is Instance We got only unsure responses as all nodes that were read owners at the time when we ve sent the request have progressed to newer topology However we are guaranteed to have progressed to a topology at most one older and can immediately retry return Outdated Topology Exception else Another instance when we do n t get any successful response is when all owners are lost We ll handle this later in State Transfer Interceptor as we have to signal this to Partition Handling Interceptor if that s present return All Owners Lost Exception protected void wrap Remote Entry Invocation Context ctx Object key Cache Entry ice boolean is Write entry Factory wrap External Entry ctx key ice true is Write protected final Object handle Non Tx Write Command Invocation Context ctx Abstract Data Write Command command throws Throwable Object key command get Key Cache Entry entry ctx lookup Entry key if is Local Mode Forced command if entry null entry Factory wrap External Entry ctx key null false true return invoke Next ctx command Localized Cache Topology cache Topology check Topology Id command Distribution Info info cache Topology get Distribution key if entry null boolean load should Load ctx command info if info is Primary throw new Illegal State Exception Primary owner in write should always be an owner in read as well else if ctx is Origin Local return invoke Remotely command info primary else if load Completable Future get Future remote Get ctx command command get Key true return async Invoke Next ctx command get Future else entry Factory wrap External Entry ctx key null false true return invoke Next ctx command else if info is Primary return invoke Next Then Apply ctx command primary Return Handler else if ctx is Origin Local return invoke Remotely command info primary else return invoke Next ctx command private boolean should Load Invocation Context ctx Abstract Data Write Command command Distribution Info info if command has Any Flag Flag Bit Sets Visitable Command Load Type load Type command load Type switch load Type case return false case return info is Primary info is Write Owner ctx is Origin Local case return info is Primary default throw new Illegal State Exception else return false private Object invoke Remotely Data Write Command command Address primary Owner if trace log tracef m not the primary owner so sending the command to the primary owner s in order to be forwarded primary Owner boolean is Sync Forwarding is Synchronous command command is Return Value Expected Completable Future Map Address Response remote Invocation try remote Invocation rpc Manager invoke Remotely Async Collections singleton List primary Owner command is Sync Forwarding default Sync Options default Async Options catch Throwable t command set Value Matcher command get Value Matcher matcher For Retry throw t if is Sync Forwarding return async Value remote Invocation handle responses t command set Value Matcher command get Value Matcher matcher For Retry Completable Futures rethrow Exception t Response response get Single Response responses if response is Successful command fail else if response instanceof Valid Response throw unexpected response We expect only successful unsuccessful responses not unsure return Valid Response response get Response Value else return null private Object primary Return Handler Invocation Context ctx Visitable Command visitable Command Object local Result Data Write Command command Data Write Command visitable Command if command is Successful if trace log tracef Skipping the replication of the conditional command as it did not succeed on primary owner s command return local Result Localized Cache Topology cache Topology check Topology Id command Distribution Info distribution Info cache Topology get Distribution command get Key Collection Address owners distribution Info write Owners if owners size There are no backups skip the replication part return local Result Collection Address recipients is Replicated null owners Cache the matcher and reset it if we get or any other exception from backup Value Matcher original Matcher command get Value Matcher Ignore the previous value on the backup owners command set Value Matcher Value Matcher Rpc Options rpc Options determine Rpc Options For Backup Replication rpc Manager is Synchronous command recipients Completable Future Map Address Response remote Invocation rpc Manager invoke Remotely Async recipients command rpc Options return async Value remote Invocation handle responses t Switch to the retry policy in case the primary owner changed and the write already succeeded on the new primary command set Value Matcher original Matcher matcher For Retry Completable Futures rethrow Exception t instanceof Remote Exception t get Cause t return local Result private Rpc Options determine Rpc Options For Backup Replication Rpc Manager rpc boolean is Sync Collection Address recipients if is Sync If no recipients means a broadcast so we can ignore leavers return recipients null rpc get Rpc Options Builder Response Mode build default Sync Options else return default Async Options Override public Object visit Get All Command Invocation Context ctx Get All Command command throws Throwable if command has Any Flag Flag Bit Sets Flag Bit Sets return invoke Next ctx command if ctx is Origin Local for Object key command get Keys if ctx lookup Entry key null return Unsure Response return invoke Next ctx command Get All Success Handler get All Success Handler new Get All Success Handler command Completable Future Void all Future remote Get All ctx command command get Keys get All Success Handler return async Value all Future then Apply ctx command get All Success Handler protected extends Flag Affected Command Topology Affected Command Completable Future Void remote Get All Invocation Context ctx command Collection keys Remote Get All Handler remote Get All Handler Map Address List Object requested Keys get Keys By Owner ctx keys check Topology Id command null null if requested Keys is Empty return Completable Futures completed Null Global Transaction gtx ctx is In Tx Scope Tx Invocation Context ctx get Global Transaction null Clustered Get All Future all Future new Clustered Get All Future requested Keys size for Map Entry Address List Object pair requested Keys entry Set Clustered Get All Command clustered Get All Command cf build Clustered Get All Command pair get Value command get Flags Bit Set gtx clustered Get All Command set Topology Id command get Topology Id rpc Manager invoke Remotely Async Collections singleton pair get Key clustered Get All Command sync Ignore Leavers when Complete new Clustered Get All Handler pair get Key all Future ctx command pair get Value null remote Get All Handler return all Future protected void handle Remotely Retrieved Keys Invocation Context ctx List remote Keys private class Clustered Get All Handler extends Flag Affected Command Topology Affected Command implements Bi Consumer Map Address Response Throwable private final Address target private final Clustered Get All Future all Future private final Invocation Context ctx private final command private final List keys private final Map Object Collection Address contacted Nodes private final Remote Get All Handler remote Get All Handler private Clustered Get All Handler Address target Clustered Get All Future all Future Invocation Context ctx command List keys Map Object Collection Address contacted Nodes Remote Get All Handler remote Get All Handler this target target this all Future all Future this keys keys this ctx ctx this command command this contacted Nodes contacted Nodes this remote Get All Handler remote Get All Handler Override public void accept Map Address Response response Map Throwable throwable if throwable null all Future complete Exceptionally throwable return Successful Response response get Successful Response Or Fail response Map all Future this handle Missing Response if response null return Object response Value response get Response Value if response Value instanceof Internal Cache Value all Future complete Exceptionally new Illegal State Exception Unexpected response value response Value return Internal Cache Value values Internal Cache Value response Value Check if other handlers have n t finished with an exception without blocking if the exception is currently being processed in the interceptor stack callbacks if all Future is Done return synchronized all Future Check if other handlers have n t finished with an exception if all Future is Done return for int i i keys size i Object key keys get i Internal Cache Value value values i Cache Entry entry value null Null Cache Entry get Instance value to Internal Cache Entry key wrap Remote Entry ctx key entry false handle Remotely Retrieved Keys ctx keys if all Future counter all Future complete null private void handle Missing Response Response response if response instanceof Unsure Response remote Get All Handler on Unsure Response Global Transaction gtx ctx is In Tx Scope Tx Invocation Context ctx get Global Transaction null Map Object Collection Address contacted Nodes this contacted Nodes null new Hash Map this contacted Nodes Map Address List Object requested Keys synchronized contacted Nodes for Object key keys contacted Nodes compute If Absent key k new Array List add target requested Keys get Keys By Owner ctx keys check Topology Id command null contacted Nodes synchronized all Future all Future counter requested Keys size for Map Entry Address List Object pair requested Keys entry Set Clustered Get All Command clustered Get All Command cf build Clustered Get All Command pair get Value command get Flags Bit Set gtx clustered Get All Command set Topology Id command get Topology Id Note that keys here are only the subset of keys requested from the node which did not send a valid response keys remove All pair get Value rpc Manager invoke Remotely Async Collections singleton pair get Key clustered Get All Command sync Ignore Leavers when Complete new Clustered Get All Handler pair get Key all Future ctx command pair get Value contacted Nodes remote Get All Handler if keys is Empty synchronized all Future try remote Get All Handler on Keys Lost keys catch Throwable t all Future complete Exceptionally t synchronized all Future if all Future counter all Future complete null protected interface Remote Get All Handler void on Unsure Response void on Keys Lost Collection lost Keys private class Get All Success Handler implements Remote Get All Handler Invocation Success Function private Get All Command local Command private boolean lost Data private boolean has Unsure Response public Get All Success Handler Get All Command local Command this local Command local Command Override public void on Unsure Response has Unsure Response true Guarded By all Future This handler is executed within a synchronized all Future Override public void on Keys Lost Collection lost Keys Get All Command requires all keys to be wrapped when it comes to execute perform methods therefore we need to remove those for which we have not received any entry lost Data true Set stripped Keys new Hash Set local Command get Keys stripped Keys remove All lost Keys We ca n t just call command set Keys interceptors might compare keys and actual result set local Command cf build Get All Command stripped Keys local Command get Flags Bit Set local Command is Return Entries Override public Object apply Invocation Context r Ctx Visitable Command r Command Object rv throws Throwable assert rv null value with which the all Future has been completed if has Unsure Response lost Data throw Outdated Topology Exception return invoke Next r Ctx local Command Override public Object visit Read Only Many Command Invocation Context ctx Read Only Many Command command throws Throwable return handle Functional Read Many Command ctx command read Only Many Helper protected extends Topology Affected Command Flag Affected Command Object handle Functional Read Many Command Invocation Context ctx command Read Many Command Helper helper We can not merge this method with visit Get All Command because this ca n t wrap entries into context repeatable reads are not implemented see visit Read Only Key Command if command has Any Flag Flag Bit Sets Flag Bit Sets return handle Local Only Read Many Command ctx command helper keys command Localized Cache Topology cache Topology check Topology Id command Collection keys helper keys command if ctx is Origin Local return handle Remote Read Many Command ctx command keys helper if keys is Empty return Stream empty Consistent Hash ch cache Topology get Read Consistent Hash int estimate For One Node keys size ch get Members size List Object available Keys new Array List estimate For One Node Map Address List Object requested Keys get Keys By Owner ctx keys cache Topology available Keys null while this works in a non blocking way the returned stream is not lazy as the functional contract suggests Traversable is also not honored as it is executed only locally on originator On Future Mode there should be one command per target node going from the top level to allow retries in State Transfer Interceptor in case of topology change Merging Completable Future Object all Future new Merging Completable Future requested Keys size available Keys is Empty new Object keys size helper transform Result handle Locally Available Keys ctx command available Keys all Future helper int pos available Keys size for Map Entry Address List Object address Keys requested Keys entry Set List Object keys For Address address Keys get Value Replicable Command remote Command helper copy For Remote command keys For Address ctx Set Address target Collections singleton address Keys get Key rpc Manager invoke Remotely Async target remote Command sync Ignore Leavers when Complete new Read Many Handler address Keys get Key all Future ctx command keys For Address null pos helper pos keys For Address size return async Value all Future private Object handle Local Only Read Many Command Invocation Context ctx Visitable Command command Collection keys for Object key keys if ctx lookup Entry key null entry Factory wrap External Entry ctx key Null Cache Entry get Instance true false return invoke Next ctx command private extends Topology Affected Command Visitable Command Object handle Remote Read Many Command Invocation Context ctx command Collection keys Invocation Success Function remote Return Handler for Object key keys if ctx lookup Entry key null return Unsure Response return invoke Next Then Apply ctx command remote Return Handler private class Read Many Handler extends Flag Affected Command Topology Affected Command implements Bi Consumer Map Address Response Throwable private final Address target private final Merging Completable Future Object all Future private final Invocation Context ctx private final command private final List Object keys private final int destination Index private final Map Object Collection Address contacted Nodes private final Read Many Command Helper helper private Read Many Handler Address target Merging Completable Future Object all Future Invocation Context ctx command List Object keys Map Object Collection Address contacted Nodes int destination Index Read Many Command Helper helper this target target this all Future all Future this ctx ctx this command command this keys keys this destination Index destination Index this contacted Nodes contacted Nodes this helper helper Override public void accept Map Address Response response Map Throwable throwable if throwable null all Future complete Exceptionally throwable return Successful Response response get Successful Response Or Fail response Map all Future this handle Missing Response if response null return try Object response Value response get Response Value Object values unwrap Functional Many Result On Origin ctx keys response Value if values null System arraycopy values all Future results destination Index values length all Future count Down else all Future complete Exceptionally new Illegal State Exception Unexpected response value response Value catch Throwable t all Future complete Exceptionally t private void handle Missing Response Response response if response instanceof Unsure Response all Future has Unsure Response true Map Object Collection Address contacted Nodes this contacted Nodes null new Hash Map this contacted Nodes Map Address List Object requested Keys synchronized contacted Nodes for Object key keys contacted Nodes compute If Absent key k new Array List add target requested Keys get Keys By Owner ctx keys check Topology Id command null contacted Nodes int pos destination Index for Map Entry Address List Object address Keys requested Keys entry Set all Future increment List Object keys For Address address Keys get Value Replicable Command remote Command helper copy For Remote command keys For Address ctx Set Address target Collections singleton address Keys get Key rpc Manager invoke Remotely Async target remote Command sync Ignore Leavers when Complete new Read Many Handler address Keys get Key all Future ctx command keys For Address contacted Nodes pos helper pos keys For Address size Arrays fill all Future results pos destination Index keys size all Future lost Data true all Future count Down private extends Visitable Command void handle Locally Available Keys Invocation Context ctx command List Object available Keys Merging Completable Future Object all Future Read Many Command Helper helper if available Keys is Empty return local Command helper copy For Local command available Keys invoke Next And Handle ctx local Command r Ctx r Command rv throwable if throwable null all Future complete Exceptionally throwable else try helper apply Local Result all Future rv all Future count Down catch Throwable t all Future complete Exceptionally t return async Value all Future private Map Address List Object get Keys By Owner Invocation Context ctx Collection keys Localized Cache Topology cache Topology List Object available Keys Map Object Collection Address ignored Owners int capacity cache Topology get Members size Map Address List Object requested Keys new Hash Map capacity int estimate For One Node keys size capacity for Object key keys Cache Entry entry ctx lookup Entry key if entry null Distribution Info distribution Info cache Topology get Distribution key Let s try to minimize the number of messages by preferring owner to which we ve already decided to send message boolean found Existing false Collection Address ignore For Key null for Address address distribution Info read Owners if address equals rpc Manager get Address throw new Illegal State Exception Entry should be always wrapped else if ignored Owners null if ignore For Key null ignore For Key ignored Owners get key if ignore For Key null ignore For Key contains address continue List Object list requested Keys get address if list null list add key found Existing true break if found Existing Address target null if ignored Owners null target distribution Info primary else for Address address distribution Info read Owners if ignore For Key null ignore For Key ignored Owners get key if ignore For Key null ignore For Key contains address target address break If all read owners should be ignored we wo n t put that entry anywhere if target null List Object list new Array List estimate For One Node list add key requested Keys put target list else if available Keys null available Keys add key return requested Keys protected Object wrap Functional Many Result On Non Origin Invocation Context r Ctx Collection keys Object values return values protected Object unwrap Functional Many Result On Origin Invocation Context ctx List Object keys Object response Value return response Value instanceof Object Object response Value null private Object visit Get Command Invocation Context ctx Abstract Data Command command throws Throwable return ctx lookup Entry command get Key null on Entry Miss ctx command invoke Next ctx command private Object on Entry Miss Invocation Context ctx Abstract Data Command command return ctx is Origin Local handle Missing Entry On Local Read ctx command Unsure Response private Object handle Missing Entry On Local Read Invocation Context ctx Abstract Data Command command return read Needs Remote Value command async Invoke Next ctx command remote Get ctx command command get Key false null Override public Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return visit Get Command ctx command Override public Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return visit Get Command ctx command Override public Object visit Read Only Key Command Invocation Context ctx Read Only Key Command command throws Throwable repeatable reads are not implemented these need to keep the read values on remote side for the duration of the transaction and that requires synchronous invocation of the readonly command on all owners For better consistency use versioning and write skew check that will fail the transaction when we apply the function on different version of the entry than the one previously read Object key command get Key Cache Entry entry ctx lookup Entry key if entry null if ctx is Origin Local the entry is owned locally it is Null Cache Entry if it was not found no need to go remote return invoke Next ctx command else return invoke Next Then Apply ctx command r Ctx r Command rv wrap Functional Result On Non Origin On Return rv entry if ctx is Origin Local return Unsure Response if read Needs Remote Value command Localized Cache Topology cache Topology check Topology Id command Collection Address owners cache Topology get Distribution key read Owners if trace log tracef Doing a remote get for key s in topology d to s key cache Topology get Topology Id owners Read Only Key Command remote Command remote Read Only Command ctx command make sure that the command topology is set to the value according which we route it remote Command set Topology Id cache Topology get Topology Id Completable Future Map Address Response rpc rpc Manager invoke Remotely Async owners remote Command get Staggered Options owners size return async Value rpc then Apply responses for Response rsp responses values if rsp is Successful return unwrap Functional Result On Origin ctx key Successful Response rsp get Response Value throw handle Missing Successful Response responses else This has flags just wrap Null Cache Entry and let the command run entry Factory wrap External Entry ctx key Null Cache Entry get Instance true false return invoke Next ctx command protected Read Only Key Command remote Read Only Command Invocation Context ctx Read Only Key Command command return command protected Object wrap Functional Result On Non Origin On Return Object rv Cache Entry entry return rv protected Object unwrap Functional Result On Origin Invocation Context ctx Object key Object response Value return response Value protected Localized Cache Topology check Topology Id Topology Affected Command command Localized Cache Topology cache Topology dm get Cache Topology int current Topology Id cache Topology get Topology Id int cmd Topology command get Topology Id if command instanceof Flag Affected Command Flag Affected Command command has Any Flag Flag Bit Sets Flag Bit Sets log tracef Skipping topology check for command s command return cache Topology if cmd Topology current Topology Id cmd Topology throw new Outdated Topology Exception Cache topology changed while the command was executing expected cmd Topology got current Topology Id if trace log tracef Current topology d command topology d current Topology Id cmd Topology return cache Topology return code true if the value is not available on the local node and a read command is allowed to fetch it from a remote node Does not check if the value is already in the context protected boolean read Needs Remote Value Abstract Data Command command return command has Any Flag Flag Bit Sets Flag Bit Sets protected interface Read Many Command Helper extends Invocation Success Function Collection keys command copy For Local command List Object keys Replicable Command copy For Remote command List Object keys Invocation Context ctx void apply Local Result Merging Completable Future all Future Object rv Object transform Result Object results protected class Read Only Many Helper implements Read Many Command Helper Read Only Many Command Override public Object apply Invocation Context r Ctx Visitable Command r Command Object rv throws Throwable return wrap Functional Many Result On Non Origin r Ctx Read Only Many Command r Command get Keys Stream rv to Array Override public Collection keys Read Only Many Command command return command get Keys Override public Read Only Many Command copy For Local Read Only Many Command command List Object keys return new Read Only Many Command command with Keys keys Override public Replicable Command copy For Remote Read Only Many Command command List Object keys Invocation Context ctx return new Read Only Many Command command with Keys keys Override public void apply Local Result Merging Completable Future all Future Object rv Stream rv collect new Array Collector all Future results Override public Object transform Result Object results return Arrays stream results filter o o 
package org infinispan remoting inboundhandler import static org infinispan factories Known Component Names import java util concurrent Completable Future import org infinispan commands Cancellable Command import org infinispan commands Cancellation Service import org infinispan commands Replicable Command import org infinispan commands Topology Affected Command import org infinispan commands remote Cache Rpc Command import org infinispan commands remote Clustered Get All Command import org infinispan commands remote Clustered Get Command import org infinispan commands remote Single Rpc Command import org infinispan commons Cache Exception import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan factories annotations Stop import org infinispan remoting inboundhandler action Ready Action import org infinispan remoting responses Cache Not Found Response import org infinispan remoting responses Exception Response import org infinispan remoting responses Response import org infinispan remoting responses Response Generator import org infinispan statetransfer Outdated Topology Exception import org infinispan statetransfer State Transfer Lock import org infinispan statetransfer State Transfer Manager import org infinispan util concurrent Blocking Runnable import org infinispan util concurrent Blocking Task Aware Executor Service import org infinispan util concurrent Completable Futures import org infinispan util logging Log Implementation with the default handling methods and utilities methods author Pedro Ruivo since public abstract class Base Per Cache Inbound Invocation Handler implements Per Cache Inbound Invocation Handler private static final int Integer protected Blocking Task Aware Executor Service remote Commands Executor private State Transfer Lock state Transfer Lock protected State Transfer Manager state Transfer Manager private Response Generator response Generator private Cancellation Service cancellation Service private volatile boolean stopped false private static int extract Command Topology Id Single Rpc Command command Replicable Command inner Cmd command get Command if inner Cmd instanceof Topology Affected Command return Topology Affected Command inner Cmd get Topology Id return static int extract Command Topology Id Cache Rpc Command command switch command get Command Id case Single Rpc Command return extract Command Topology Id Single Rpc Command command case Clustered Get Command case Clustered Get All Command These commands are topology aware but we do n t block them here topology Id logic is handled in State Transfer Interceptor return default if command instanceof Topology Affected Command return Topology Affected Command command get Topology Id return Inject public void inject Dependencies Component Name Blocking Task Aware Executor Service remote Commands Executor Response Generator response Generator Cancellation Service cancellation Service State Transfer Lock state Transfer Lock State Transfer Manager state Transfer Manager this remote Commands Executor remote Commands Executor this response Generator response Generator this cancellation Service cancellation Service this state Transfer Lock state Transfer Lock this state Transfer Manager state Transfer Manager Stop public void stop this stopped true public boolean is Stopped return stopped final Completable Future Response invoke Command Cache Rpc Command cmd throws Throwable try if is Trace Enabled get Log tracef Calling perform on s cmd if cmd instanceof Cancellable Command cancellation Service register Thread current Thread Cancellable Command cmd get Completable Future Object future cmd invoke Async return future handle rv throwable if cmd instanceof Cancellable Command cancellation Service unregister Cancellable Command cmd get Completable Futures rethrow Exception throwable return response Generator get Response cmd rv catch Throwable throwable if cmd instanceof Cancellable Command cancellation Service unregister Cancellable Command cmd get throw throwable final State Transfer Lock get State Transfer Lock return state Transfer Lock final Exception Response exception Handling Command Cache Rpc Command command Throwable throwable get Log exception Handling Command command throwable if throwable instanceof Exception return new Exception Response Exception throwable else return new Exception Response new Cache Exception Problems invoking command throwable final Exception Response outdated Topology Outdated Topology Exception exception get Log tracef Topology changed retrying s exception return new Exception Response exception final Response interrupted Exception Cache Rpc Command command get Log shutdown Handling Command command return Cache Not Found Response final void unexpected Deliver Mode Replicable Command command Deliver Order deliver Order throw new Illegal Argument Exception String format Unexpected deliver mode s for command s deliver Order command final void handle Runnable Blocking Runnable runnable boolean on Executor Service if on Executor Service remote Commands Executor execute runnable else runnable run public final boolean is Command Sent Before First Topology int command Topology Id if command Topology Id command Topology Id state Transfer Manager get First Topology As Member if is Trace Enabled get Log tracef Ignoring command sent before the local node was a member command topology id is d command Topology Id return true return false final Blocking Runnable create Default Runnable Cache Rpc Command command Reply reply int command Topology Id boolean wait Transactional Data boolean on Executor Service boolean sync return new Default Topology Runnable this command reply Topology Mode create on Executor Service wait Transactional Data command Topology Id sync final Blocking Runnable create Default Runnable final Cache Rpc Command command final Reply reply final int command Topology Id Topology Mode topology Mode boolean sync return new Default Topology Runnable this command reply topology Mode command Topology Id sync protected abstract Log get Log protected abstract boolean is Trace Enabled final boolean execute On Executor Service Deliver Order order Cache Rpc Command command return order preserve Order command can Block final Blocking Runnable create Ready Action Runnable Cache Rpc Command command Reply reply int command Topology Id boolean sync Ready Action ready Action if ready Action null return create Non Null Ready Action Runnable command reply command Topology Id sync ready Action else return new Default Topology Runnable this command reply Topology Mode command Topology Id sync final Blocking Runnable create Non Null Ready Action Runnable Cache Rpc Command command Reply reply int command Topology Id boolean sync Ready Action ready Action ready Action add Listener remote Commands Executor check For Ready Tasks return new Default Topology Runnable this command reply Topology Mode command Topology Id sync Override public boolean is Ready return super is Ready ready Action is Ready Override protected void on Exception Throwable throwable super on Exception throwable ready Action on Exception Override protected void on Finally super on Finally ready Action on Finally 
package org infinispan interceptors impl import java util Collection import java util Hash Set import java util Map import java util Set import java util concurrent Completable Future import org infinispan commands Flag Affected Command import org infinispan commands tx Prepare Command import org infinispan configuration cache Clustering Configuration import org infinispan context Flag import org infinispan context impl Flag Bit Sets import org infinispan context impl Local Tx Invocation Context import org infinispan context impl Tx Invocation Context import org infinispan factories Component Registry import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan interceptors Async Interceptor import org infinispan remoting inboundhandler Deliver Order import org infinispan remoting responses Exception Response import org infinispan remoting responses Response import org infinispan remoting rpc Response Filter import org infinispan remoting rpc Response Mode import org infinispan remoting rpc Rpc Manager import org infinispan remoting rpc Rpc Options import org infinispan remoting rpc Rpc Options Builder import org infinispan remoting transport Address import org infinispan transaction impl Local Transaction import org infinispan util concurrent Completable Futures import org infinispan util logging Log Acts as a base for all calls author a href mailto manik jboss org Manik Surtani manik jboss org a author Mircea Markus jboss com since public abstract class Base Rpc Interceptor extends Async Interceptor private final static Response Filter new Response Filter Override public boolean is Acceptable Response response Address sender return response is Successful response instanceof Exception Response Override public boolean need More Responses return true protected final boolean trace get Log is Trace Enabled protected Rpc Manager rpc Manager protected Component Registry component Registry protected boolean default Synchronous protected volatile Rpc Options single Target Staggered Options protected volatile Rpc Options multi Target Staggered Options protected volatile Rpc Options default Sync Options protected volatile Rpc Options sync Ignore Leavers protected Rpc Options default Async Options protected abstract Log get Log Inject public void inject Rpc Manager rpc Manager Component Registry component Registry this rpc Manager rpc Manager this component Registry component Registry Start public void init default Synchronous cache Configuration clustering cache Mode is Synchronous cache Configuration clustering attributes attribute Clustering Configuration add Listener a o init Rpc Options init Rpc Options async options do n t depend on the remote timeout default Async Options rpc Manager get Default Rpc Options false private void init Rpc Options single Target Staggered Options rpc Manager get Rpc Options Builder Response Mode build multi Target Staggered Options rpc Manager get Rpc Options Builder Response Mode response Filter build default Sync Options rpc Manager get Default Rpc Options true sync Ignore Leavers rpc Manager get Rpc Options Builder Response Mode Deliver Order build protected Rpc Options get Staggered Options int num Targets handle better when dropping Message Dispatcher based This is somwhat a hack to the way staggered reads are implemented what we intend is to keep the sender waiting until it receives successful response If it did not receive any successful response just return those unsuccessful ones Staggered gets use the filter but add non accepted responses to Responses anyway Groups Transport later wo n t filter those unaccepted values and we ll get the unsuccesful ones too When there s only single target the processing uses Group Request and that would n t return filtered values add all therefore we ll omit the filter in there Regrettably this can not be handled properly by current filtering options return num Targets single Target Staggered Options multi Target Staggered Options protected final boolean is Synchronous Flag Affected Command command if command has Any Flag Flag Bit Sets return true else if command has Any Flag Flag Bit Sets return false return default Synchronous protected final boolean is Local Mode Forced Flag Affected Command command if command has Any Flag Flag Bit Sets if trace get Log trace mode forced on invocation Suppressing clustered events return true return false protected boolean should Invoke Remote Tx Command Tx Invocation Context ctx if ctx is Origin Local return false Skip the remote invocation if this is a state transfer transaction Local Tx Invocation Context local Ctx Local Tx Invocation Context ctx if local Ctx get Cache Transaction get State Transfer Flag Flag return false just testing for empty modifications is n t enough the Lock may acquire locks on keys but wo n t register a Modification See boolean should Invoke Remotely ctx has Modifications local Ctx get Remote Locks Acquired is Empty local Ctx get Cache Transaction get Topology Id rpc Manager get Topology Id if trace get Log tracef Should invoke remotely b has Modifications b has Remote Locks Acquired b should Invoke Remotely ctx has Modifications local Ctx get Remote Locks Acquired is Empty return should Invoke Remotely protected static void transaction Remotely Prepared Tx Invocation Context ctx if ctx is Origin Local Local Transaction ctx get Cache Transaction mark Prepare Sent protected static void total Order Tx Commit Tx Invocation Context ctx if ctx is Origin Local Local Transaction ctx get Cache Transaction mark Commit Or Rollback Sent protected static void total Order Tx Rollback Tx Invocation Context ctx if ctx is Origin Local Local Transaction ctx get Cache Transaction mark Commit Or Rollback Sent protected static boolean should Total Order Rollback Be Invoked Remotely Tx Invocation Context ctx return ctx is Origin Local Local Transaction ctx get Cache Transaction is Prepare Sent Local Transaction ctx get Cache Transaction is Commit Or Rollback Sent protected Completable Future Object total Order Prepare Tx Invocation Context ctx Prepare Command command Collection Address recipients try Set Address real Recipients null if recipients null real Recipients new Hash Set recipients real Recipients add rpc Manager get Address Completable Future Map Address Response remote Invocation internal Total Order Prepare real Recipients command return remote Invocation handle responses t transaction Remotely Prepared ctx Completable Futures rethrow Exception t return null catch Throwable t transaction Remotely Prepared ctx throw t private Completable Future Map Address Response internal Total Order Prepare Collection Address recipients Prepare Command prepare Command Rpc Options Builder builder rpc Manager get Rpc Options Builder Response Mode Deliver Order return rpc Manager invoke Remotely Async recipients prepare Command builder build 
package org infinispan interceptors impl import java util concurrent Completable Future import java util concurrent Executor import java util concurrent Scheduled Executor Service import java util concurrent Scheduled Future import java util concurrent Time Unit import java util concurrent atomic Atomic Reference Field Updater import java util function Bi Function import org infinispan commands Abstract Visitor import org infinispan commands Flag Affected Command import org infinispan commands Topology Affected Command import org infinispan commands Visitable Command import org infinispan commands functional Read Only Key Command import org infinispan commands functional Read Only Many Command import org infinispan commands read Get All Command import org infinispan commands read Get Cache Entry Command import org infinispan commands read Get Key Value Command import org infinispan commands remote Get Keys In Group Command import org infinispan configuration cache Configuration import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan distribution Distribution Manager import org infinispan factories Known Component Names import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan interceptors Async Interceptor import org infinispan interceptors Invocation Finally Function import org infinispan remoting Remote Exception import org infinispan remoting transport jgroups Suspect Exception import org infinispan statetransfer All Owners Lost Exception import org infinispan statetransfer Outdated Topology Exception import org infinispan statetransfer State Transfer Lock import org infinispan statetransfer State Transfer Manager import org infinispan topology Cache Topology import org infinispan util concurrent Completable Futures import org infinispan util concurrent Timeout Exception import org infinispan util logging Log import org infinispan util logging Log Factory base class for a state transfer interceptor It contains the base code to avoid duplicating in the two current different implementations p Also it has some utilities methods with the most common logic author Pedro Ruivo since public abstract class Base State Transfer Interceptor extends Async Interceptor private final boolean trace get Log is Trace Enabled private final Invocation Finally Function handle Read Command Return this handle Read Command Return private State Transfer Manager state Transfer Manager protected State Transfer Lock state Transfer Lock private Executor remote Executor private Distribution Manager distribution Manager private Scheduled Executor Service timeout Executor private long transaction Data Timeout private final Invocation Finally Function handle Local Get Keys In Group Return this handle Local Get Keys In Group Return Inject public void init State Transfer Lock state Transfer Lock Configuration configuration State Transfer Manager state Transfer Manager Distribution Manager distribution Manager Component Name Known Component Names Scheduled Executor Service timeout Executor Component Name Known Component Names Executor remote Executor this state Transfer Lock state Transfer Lock this state Transfer Manager state Transfer Manager this distribution Manager distribution Manager this timeout Executor timeout Executor this remote Executor remote Executor transaction Data Timeout configuration clustering remote Timeout Override public Object visit Get Keys In Group Command Invocation Context ctx Get Keys In Group Command command throws Throwable update Topology Id command if ctx is Origin Local return invoke Next And Handle ctx command handle Local Get Keys In Group Return else return invoke Next Then Accept ctx command r Ctx r Command rv Get Keys In Group Command cmd Get Keys In Group Command r Command final int command Topology Id cmd get Topology Id if current Topology Id command Topology Id distribution Manager get Cache Topology is Write Owner cmd get Group Name throw new Outdated Topology Exception Cache topology changed while the command was executing expected command Topology Id got current Topology Id private Object handle Local Get Keys In Group Return Invocation Context ctx Visitable Command command Object rv Throwable throwable throws Throwable Get Keys In Group Command cmd Get Keys In Group Command command final int command Topology Id cmd get Topology Id boolean should Retry if throwable null Must retry if we got an Outdated Topology Exception or Suspect Exception Throwable ce throwable while ce instanceof Remote Exception ce ce get Cause should Retry ce instanceof Outdated Topology Exception ce instanceof Suspect Exception else Only check the topology id if if we are an owner should Retry current Topology Id command Topology Id distribution Manager get Cache Topology is Write Owner cmd get Group Name if should Retry log Retry current Topology Id cmd We increment the topology id so that update Topology Id And Wait For Transaction Data waits for the next topology Without this we could retry the command too fast and we could get the Outdated Topology Exception again int new Topology Id Math max current Topology Id command Topology Id cmd set Topology Id new Topology Id Completable Future Void transaction Data Future state Transfer Lock transaction Data Future new Topology Id return retry When Done transaction Data Future new Topology Id ctx command handle Local Get Keys In Group Return else return value Or Exception rv throwable protected final void log Retry int current Topology Id Topology Affected Command cmd if trace get Log tracef Retrying command because of topology change current topology is d command topology d s current Topology Id cmd get Topology Id cmd protected final int current Topology Id final Cache Topology cache Topology state Transfer Manager get Cache Topology return cache Topology null cache Topology get Topology Id protected final void update Topology Id Topology Affected Command command set the topology id if it was not set before ie this is local command Make tx commands extend Flag Affected Command so we can use in Transaction Table cleanup Stale Transactions if command get Topology Id Cache Topology cache Topology state Transfer Manager get Cache Topology Before the topology is set in State Consumer the topology in Distribution Manager is int topology Id cache Topology null cache Topology get Topology Id if trace get Log tracef Setting command topology to d topology Id command set Topology Id topology Id protected extends Visitable Command Object retry When Done Completable Future Void future int topology Id Invocation Context ctx command Invocation Finally Function callback if future is Done get Log tracef Retrying command s for topology d command topology Id return invoke Next And Handle ctx command callback else Cancellable Retry cancellable Retry new Cancellable Retry command topology Id We have to use handle Async and rethrow the exception in the handler rather than then Compose Async because if future completes with an exception we want to continue in remote Executor Completable Future Void retry Future future handle Async cancellable Retry remote Executor cancellable Retry set Retry Future retry Future We want to time out the current command future not the main topology waiting future but the command future can take longer time to finish Scheduled Future timeout Future timeout Executor schedule cancellable Retry transaction Data Timeout Time Unit cancellable Retry set Timeout Future timeout Future return make Stage async Invoke Next ctx command retry Future and Handle ctx command callback Override public Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return handle Read Command ctx command Override public Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return handle Read Command ctx command Override public Object visit Get All Command Invocation Context ctx Get All Command command throws Throwable return handle Read Command ctx command protected extends Visitable Command Topology Affected Command Flag Affected Command Object handle Read Command Invocation Context ctx command update Topology Id command return invoke Next And Handle ctx command handle Read Command Return private Object handle Read Command Return Invocation Context r Ctx Visitable Command r Command Object rv Throwable t throws Throwable if t null return rv Throwable ce t while ce instanceof Remote Exception ce ce get Cause Topology Affected Command cmd Topology Affected Command r Command final Cache Topology cache Topology state Transfer Manager get Cache Topology int current Topology Id cache Topology null cache Topology get Topology Id int requested Topology Id current Topology Id if ce instanceof Suspect Exception if trace get Log tracef Retrying command because of suspected node current topology is d s current Topology Id r Command It is possible that current topology is actual but the view still contains a node that s about to leave a broadcast to all nodes then can end with suspect exception but we wo n t get any new topology An example of this situation is when a node sends leave topology can be installed before the new view To prevent suspect exceptions use response mode if current Topology Id cmd get Topology Id cache Topology get Actual Members contains Suspect Exception ce get Suspect throw new Illegal State Exception Command was not sent with else if ce instanceof Outdated Topology Exception log Retry current Topology Id cmd In scattered cache when we have contacted the primary owner in current topology and this does respond with Unsure Response we do n t know about any other read owners we need to wait for the next topology if cache Configuration clustering cache Mode is Scattered Outdated Topology Exception ote Outdated Topology Exception ce if ote requested Topology Id requested Topology Id Math max current Topology Id ote requested Topology Id else Es without requested topology are a result of Unsure Response as based on old command topology would be prone to race between and requested Topology Id Math max current Topology Id cmd get Topology Id else if ce instanceof All Owners Lost Exception if trace get Log tracef All owners for command s have been lost cmd In scattered cache it might be common to lose the single owner we need to retry We will find out that we can return null only after the next topology is installed If partition handling is enabled we decide only based on the availability status In other cache modes during partition the exception is already handled in Partition Handling Interceptor and if the handling is not enabled we ca n t but return null if cache Configuration clustering cache Mode is Scattered requested Topology Id Math max current Topology Id cmd get Topology Id else return r Command accept Visitor r Ctx Lost Data Visitor else throw t We can get even if current topology information is sufficient has topology in phase sends message to both old owner and new has old topology with so it responds with Unsure Response updates topology to updates to receives the read but it already ca n t read responds with Unsure Response receives two unsure responses and throws However now we are sure that we can immediately retry the request because must have updated its topology cmd set Topology Id requested Topology Id Flag Affected Command cmd add Flags Flag Bit Sets if requested Topology Id current Topology Id return invoke Next And Handle r Ctx r Command handle Read Command Return else return make Stage async Invoke Next r Ctx r Command state Transfer Lock transaction Data Future requested Topology Id and Handle r Ctx r Command handle Read Command Return protected int get New Topology Id Throwable ce int current Topology Id Topology Affected Command command int requested Topology Id command get Topology Id if ce instanceof Outdated Topology Exception Outdated Topology Exception ote Outdated Topology Exception ce if ote requested Topology Id requested Topology Id ote requested Topology Id return Math max current Topology Id requested Topology Id Override public Object visit Read Only Key Command Invocation Context ctx Read Only Key Command command throws Throwable return handle Read Command ctx command Override public Object visit Read Only Many Command Invocation Context ctx Read Only Many Command command throws Throwable return handle Read Command ctx command protected abstract Log get Log private static class Cancellable Retry extends Visitable Command implements Bi Function Void Throwable Void Runnable private static final Atomic Reference Field Updater Cancellable Retry Throwable cancellable Retry Updater Atomic Reference Field Updater new Updater Cancellable Retry class Throwable class cancelled private static final Atomic Reference Field Updater Cancellable Retry Object timeout Future Updater Atomic Reference Field Updater new Updater Cancellable Retry class Object class timeout Future private static final Log log Log Factory get Log Cancellable Retry class private static final Throwable new Throwable Command is retried should not be ever thrown private final command private final int topology Id private volatile Throwable cancelled null retry Future is not volatile because it is used only in the timeout handler run and that is scheduled after retry Future is set private Completable Future Void retry Future Scheduled Future does not have any dummy implementations so we ll use plain Object as the field Suppress Warnings unused private volatile Object timeout Future Cancellable Retry command int topology Id this command command this topology Id topology Id This is called when the topology future completes successfully or exceptionally Override public Void apply Void nil Throwable throwable if timeout Future Updater compare And Set this null Scheduled Future timeout Future cancel false if throwable null throw Completable Futures as Completion Exception throwable if cancellable Retry Updater compare And Set this null log tracef Not retrying command s as it has been cancelled command throw Completable Futures as Completion Exception cancelled log tracef Retrying command s for topology d command topology Id return null This is called when the timeout elapses Override public void run Timeout Exception timeout Exception new Timeout Exception Timed out waiting for topology topology Id if cancellable Retry Updater compare And Set this null timeout Exception retry Future complete Exceptionally timeout Exception void set Retry Future Completable Future Void retry Future this retry Future retry Future void set Timeout Future Scheduled Future timeout Future if timeout Future Updater compare And Set this null timeout Future timeout Future cancel false We do n t need to implement Get All Command or Read Many Command here because these do n t throw All Owners Lost Exception protected static class Lost Data Visitor extends Abstract Visitor public static final Lost Data Visitor new Lost Data Visitor Override public Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return null Override public Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return null Override public Object visit Read Only Key Command Invocation Context ctx Read Only Key Command command throws Throwable return command perform On Lost Data 
package org infinispan stream impl termop import java util function Supplier import java util stream Base Stream import java util stream Stream import org infinispan factories Component Registry import org infinispan stream impl intops Intermediate Operation Abstract instance that provides common code needed for all terminal operations Note this class does n t extend any interface due to the fact that different terminal operations have possibly different interfaces to implement however all of them require the information stored here public abstract class Base Terminal Operation protected final Iterable Intermediate Operation intermediate Operations protected transient Supplier extends Base Stream supplier protected Base Terminal Operation Iterable Intermediate Operation intermediate Operations Supplier extends Base Stream supplier this intermediate Operations intermediate Operations this supplier supplier public Iterable Intermediate Operation get Intermediate Operations return intermediate Operations public void set Supplier Supplier extends Stream supplier this supplier supplier public void handle Injection Component Registry registry intermediate Operations for Each i i handle Injection registry 
package org infinispan util logging events impl import java time Instant import java util Collections import java util List import java util Optional import org infinispan util logging Log Factory import org infinispan util logging events Event Log import org infinispan util logging events Event Log Category import org infinispan util logging events Event Log Level import org infinispan util logging events Event Logger Basic Event Logger An event logger which does n t do anything aside from sending events to the logger author Tristan Tarrant since public class Basic Event Logger implements Event Logger Override public Event Logger scope String scope return new Decorated Event Logger this scope scope Override public Event Logger context String context return new Decorated Event Logger this context context Override public Event Logger detail String detail return new Decorated Event Logger this detail detail Override public Event Logger who String who return new Decorated Event Logger this who who Override public void log Event Log Level level Event Log Category category String message Log Factory get Logger category to String log level to Logger Level message The basic event logger does n t collect anything Override public List Event Log get Events Instant start int count Optional Event Log Category category Optional Event Log Level level return Collections empty List 
package org infinispan batch import javax transaction Transaction import javax transaction Transaction Manager import org infinispan commons Cache Exception import org infinispan factories annotations Inject container for holding thread locals for batching to be used with the link org infinispan Cache start Batch and link org infinispan Cache end Batch boolean calls author Manik Surtani a href mailto manik jboss org manik jboss org a since public class Batch Container Transaction Manager transaction Manager private final Thread Local Batch Details batch Details Tl new Thread Local Batch Details Inject void inject Transaction Manager transaction Manager this transaction Manager transaction Manager Starts a batch return true if a batch was started false if one was already available public boolean start Batch throws Cache Exception return start Batch false public boolean start Batch boolean auto Batch throws Cache Exception Batch Details bd batch Details Tl get if bd null bd new Batch Details try if transaction Manager get Transaction null bd tx null transaction Manager begin bd nested Invocation Count bd suspend Tx After Invocation auto Batch bd thread Thread current Thread do not suspend if this is from an Auto Batch if auto Batch bd tx transaction Manager get Transaction else bd tx transaction Manager suspend batch Details Tl set bd return true else bd nested Invocation Count batch Details Tl set bd return false catch Exception e batch Details Tl remove throw new Cache Exception Unable to start batch e public void end Batch boolean success end Batch false success public void end Batch boolean auto Batch boolean success Batch Details bd batch Details Tl get if bd null return if bd tx null batch Details Tl remove return if auto Batch bd nested Invocation Count if auto Batch bd nested Invocation Count Transaction existing Tx null try existing Tx transaction Manager get Transaction if existing Tx null auto Batch bd tx equals existing Tx transaction Manager resume bd tx resolve Transaction bd success catch Exception e throw new Cache Exception Unable to end batch e finally batch Details Tl remove try if auto Batch existing Tx null transaction Manager resume existing Tx catch Exception e throw new Cache Exception Failed resuming existing transaction existing Tx e private void resolve Transaction Batch Details bd boolean success throws Exception Thread current Thread Thread current Thread if bd thread equals current Thread if success transaction Manager commit else transaction Manager rollback else if success bd tx commit else bd tx rollback public Transaction get Batch Transaction Transaction tx null Batch Details bd batch Details Tl get if bd null tx bd tx if tx null batch Details Tl remove return tx public boolean is Suspend Tx After Invocation Batch Details bd batch Details Tl get return bd null bd suspend Tx After Invocation private static class Batch Details int nested Invocation Count boolean suspend Tx After Invocation Transaction tx Thread thread 
package org infinispan util concurrent import java util Array Deque import java util Iterator import java util Linked List import java util List import java util Queue import java util concurrent Abstract Executor Service import java util concurrent Concurrent Linked Queue import java util concurrent Executor Service import java util concurrent Rejected Execution Exception import java util concurrent Semaphore import java util concurrent Time Unit import org infinispan util Time Service import org infinispan util logging Log import org infinispan util logging Log Factory special executor service that accepts a code Blocking Runnable This special runnable gives hints about the code to be running in order to avoiding put a runnable that will block the thread In this way only when the runnable says that is ready it is sent to the real executor service author Pedro Ruivo since public class Blocking Task Aware Executor Service Impl extends Abstract Executor Service implements Blocking Task Aware Executor Service private static final Log log Log Factory get Log Blocking Task Aware Executor Service Impl class private static final boolean trace log is Trace Enabled private final Queue Blocking Runnable blocked Tasks private final Executor Service executor Service private final Time Service time Service private final Controller Thread controller Thread private volatile boolean shutdown public Blocking Task Aware Executor Service Impl String controller Thread Name Executor Service executor Service Time Service time Service this blocked Tasks new Concurrent Linked Queue this executor Service executor Service this time Service time Service this shutdown false this controller Thread new Controller Thread controller Thread Name controller Thread start Override public final void execute Blocking Runnable runnable if shutdown throw new Rejected Execution Exception Executor Service is already shutdown if runnable is Ready do Execute runnable if trace log tracef Added a new task directly d task s are waiting blocked Tasks size else we no longer submit directly to the executor service blocked Tasks offer runnable controller Thread check For Ready Task if trace log tracef Added a new task to the queue d task s are waiting blocked Tasks size Override public void shutdown shutdown true Override public List Runnable shutdown Now shutdown true controller Thread interrupt List Runnable runnable List new Linked List runnable List add All executor Service shutdown Now runnable List add All blocked Tasks return runnable List Override public boolean is Shutdown return shutdown Override public boolean is Terminated return shutdown blocked Tasks is Empty executor Service is Terminated Override public boolean await Termination long timeout Time Unit unit throws Interrupted Exception final long end Time time Service expected End Time timeout unit long wait Time time Service remaining Time end Time Time Unit while blocked Tasks is Empty wait Time Thread sleep wait Time wait Time time Service remaining Time end Time Time Unit return is Terminated Override public final void check For Ready Tasks controller Thread check For Ready Task Override public void execute Runnable command if shutdown throw new Rejected Execution Exception Executor Service is already shutdown if command instanceof Blocking Runnable execute Blocking Runnable command else execute new Runnable Wrapper command public Executor Service get Executor Service return executor Service private void do Execute Blocking Runnable runnable try executor Service execute runnable catch Rejected Execution Exception rejected put it back blocked Tasks offer runnable private class Controller Thread extends Thread private final Semaphore semaphore private volatile boolean interrupted public Controller Thread String controller Thread Name super controller Thread Name this set Uncaught Exception Handler t e log errorf e Exception in thread s t get Name semaphore new Semaphore public void check For Ready Task semaphore release Override public void interrupt interrupted true super interrupt semaphore release Override public void run while interrupted try semaphore acquire catch Interrupted Exception e return semaphore drain Permits int size blocked Tasks size if size continue Array Deque Blocking Runnable ready List new Array Deque size for Iterator Blocking Runnable iterator blocked Tasks iterator iterator has Next Blocking Runnable runnable iterator next boolean ready try ready runnable is Ready catch Exception e log debugf e Failed to check ready state of s dropping runnable iterator remove continue if ready iterator remove ready List add Last runnable if trace log tracef Tasks to be executed s still pending s ready List size size Blocking Runnable runnable while runnable ready List poll First null do Execute runnable private static class Runnable Wrapper implements Blocking Runnable private final Runnable runnable private Runnable Wrapper Runnable runnable this runnable runnable Override public boolean is Ready return true Override public void run runnable run Override public String to String return Runnable Wrapper runnable 
package org infinispan commons executors import java util concurrent Blocking Queue import java util concurrent Executor Service import java util concurrent Linked Blocking Queue import java util concurrent Synchronous Queue import java util concurrent Thread Factory import java util concurrent Thread Pool Executor import java util concurrent Time Unit import org infinispan commons logging Log import org infinispan commons logging Log Factory author Galder Zamarre o public class Blocking Thread Pool Executor Factory implements Thread Pool Executor Factory Executor Service private static final Log log Log Factory get Log Blocking Thread Pool Executor Factory class private final int max Threads private final int core Threads private final int queue Length private final long keep Alive public Blocking Thread Pool Executor Factory int max Threads int core Threads int queue Length long keep Alive this max Threads max Threads this core Threads core Threads this queue Length queue Length this keep Alive keep Alive public int max Threads return max Threads public int core Threads return core Threads public int queue Length return queue Length public long keep Alive return keep Alive Override public Executor Service create Executor Thread Factory thread Factory Blocking Queue Runnable queue queue Length new Synchronous Queue Runnable new Linked Blocking Queue Runnable queue Length return new Thread Pool Executor core Threads max Threads keep Alive Time Unit queue thread Factory new Thread Pool Executor Caller Runs Policy Override public void validate if core Threads throw log illegal Value Thread Pool Parameter core threads if max Threads throw log illegal Value Thread Pool Parameter max threads if max Threads core Threads throw log illegal Value Thread Pool Parameter max threads and core threads max threads core threads if keep Alive throw log illegal Value Thread Pool Parameter keep alive time if queue Length throw log illegal Value Thread Pool Parameter work queue length Override public String to String return Blocking Thread Pool Executor Factory max Threads max Threads core Threads core Threads queue Length queue Length keep Alive keep Alive public static Blocking Thread Pool Executor Factory create int max Threads int queue Size int core Threads queue Size max Threads return new Blocking Thread Pool Executor Factory max Threads core Threads queue Size 
package org infinispan stream import java io Exception import java io Object Input import java io Object Output import java util Set import java util function Bi Consumer import java util function Binary Operator import java util function Function import java util function Supplier import java util stream Collector import org infinispan commons marshall Externalizer import org infinispan commons marshall Serialize With import org infinispan util function Serializable Supplier Helper class designed to be used to create a serializable Collector for use with link org infinispan Cache Stream collect Collector from a supplier of a collector The problem is that the standard link java util stream Collectors class does n t provide Serializable Collectors and no way to extend their functionality so this class is used instead public class Cache Collectors private Cache Collectors Creates a collector that is serializable and will upon usage create a collector using the serializable supplier provided by the user param supplier The supplier to crate the collector that is specifically serializable param The input type of the collector param The resulting type of the collector return the collector which is serializable see Serializable Supplier public static Collector serializable Collector Serializable Supplier Collector supplier return new Collector Supplier supplier Similar to link Cache Collectors serializable Collector Serializable Supplier except that the supplier provided must be marshable through marshalling techniques Note this is not detected until runtime param supplier The marshallable supplier of collectors param The input type of the collector param The resulting type of the collector return the collector which is serializable see Externalizer see org infinispan commons marshall Advanced Externalizer public static Collector collector Supplier Collector supplier return new Collector Supplier supplier Serialize With value Collector Supplier Collector Supplier Externalizer class private static final class Collector Supplier implements Collector Object private final Supplier Collector supplier private transient Collector Object collector private Collector Object get Collector if collector null collector Collector Object supplier get return collector Collector Supplier Supplier Collector supplier this supplier supplier Override public Supplier Object supplier return get Collector supplier Override public Bi Consumer Object accumulator return get Collector accumulator Override public Binary Operator Object combiner return get Collector combiner Override public Function Object finisher return get Collector finisher Override public Set Characteristics characteristics return get Collector characteristics public static final class Collector Supplier Externalizer implements Externalizer Collector Supplier Override public void write Object Object Output output Collector Supplier object throws Exception output write Object object supplier Override public Collector Supplier read Object Object Input input throws Exception Class Not Found Exception return new Collector Supplier Supplier Collector input read Object 
package org infinispan cache impl import org infinispan configuration cache Configuration import org infinispan factories annotations Inject import org infinispan jmx annotations Display Type import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Attribute import org infinispan jmx annotations Units Cache Configuration Bean Impl author Tristan Tarrant since Bean object Name Configuration description Runtime cache configuration attributes public class Cache Configuration Bean private Configuration configuration Inject public void inject Dependencies Configuration configuration this configuration configuration Managed Attribute description Gets the eviction size for the cache display Name Gets the eviction size for the cache units Units display Type Display Type writable true public long get Eviction Size return configuration memory size public void set Eviction Size long new Size configuration memory size new Size 
package org infinispan stats impl import java util Hash Set import java util Set import java util concurrent Time Unit import java util concurrent atomic Atomic Long import org infinispan Advanced Cache import org infinispan configuration cache Configuration import org infinispan factories annotations Inject import org infinispan jmx Jmx Statistics Exposer import org infinispan jmx annotations Data Type import org infinispan jmx annotations Display Type import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Attribute import org infinispan jmx annotations Measurement Type import org infinispan jmx annotations Units import org infinispan manager Embedded Cache Manager import org infinispan stats Cache Container Stats import org infinispan stats Stats import org infinispan util Time Service Cache container statistics needed for admin console author Vladimir Blagojevic since Bean object Name Cache Container Stats description General cache container statistics such as timings hit miss ratio etc public class Cache Container Stats Impl implements Cache Container Stats Jmx Statistics Exposer private Embedded Cache Manager cm private final Atomic Long reset Nanoseconds new Atomic Long private boolean statistics Enabled false private Time Service time Service public Cache Container Stats Impl Embedded Cache Manager cm this cm cm cm get Global Component Registry register Component this Cache Container Stats class boolean global Jmx Stats Enabled cm get Cache Manager Configuration global Jmx Statistics enabled set Statistics Enabled global Jmx Stats Enabled Inject public void set Dependencies Time Service time Service this time Service time Service Override public void set Statistics Enabled boolean enabled this statistics Enabled enabled if enabled yes technically we do not reset stats but we initialize them reset Nanoseconds set time Service time Override public boolean get Statistics Enabled return statistics Enabled Override public void reset Statistics if get Statistics Enabled get Enabled Stats for Each stats stats reset reset Nanoseconds set time Service time Managed Attribute description Enables or disables the gathering of statistics by this component display Name Statistics enabled data Type Data Type writable true public boolean is Statistics Enabled return get Statistics Enabled Managed Attribute description Cache container total average number of nanoseconds for all read operation in this cache container display Name Cache container total average read time units Units display Type Display Type Override public long get Average Read Time long result if get Statistics Enabled result calculate Average Read Time return result protected long calculate Average Read Time long total Average Read Time int included Cache Counter for Stats stats get Enabled Stats long average Read Time stats get Average Read Time if average Read Time included Cache Counter total Average Read Time average Read Time if included Cache Counter total Average Read Time total Average Read Time included Cache Counter return total Average Read Time Managed Attribute description Cache container total average number of nanoseconds for all remove operation in this cache container display Name Cache container total average remove time units Units display Type Display Type Override public long get Average Remove Time long result if get Statistics Enabled result calculate Average Remove Time return result protected long calculate Average Remove Time long total Average Remove Time int included Cache Counter for Stats stats get Enabled Stats long average Remove Time stats get Average Remove Time if average Remove Time included Cache Counter total Average Remove Time average Remove Time if included Cache Counter total Average Remove Time total Average Remove Time included Cache Counter return total Average Remove Time Managed Attribute description Cache container average number of nanoseconds for all write operation in this cache container display Name Cache container average write time units Units display Type Display Type Override public long get Average Write Time long result if get Statistics Enabled result calculate Average Write Time return result protected long calculate Average Write Time long total Average Write Time int included Cache Counter for Stats stats get Enabled Stats long average Write Time stats get Average Write Time if average Write Time included Cache Counter total Average Write Time average Write Time if included Cache Counter total Average Write Time total Average Write Time included Cache Counter return total Average Write Time Managed Attribute description Cache container total number of cache eviction operations display Name Cache container total number of cache evictions measurement Type Measurement Type display Type Display Type Override public long get Evictions long result if get Statistics Enabled result calculate Evictions return result protected long calculate Evictions long total Evictions for Stats stats get Enabled Stats long evictions stats get Evictions if evictions total Evictions evictions return total Evictions Managed Attribute description Cache container total number of cache attribute hits display Name Cache container total number of cache hits measurement Type Measurement Type display Type Display Type Override public long get Hits long result if get Statistics Enabled result calculate Hits return result protected long calculate Hits long total Hits for Stats stats get Enabled Stats long hits stats get Hits if hits total Hits hits return total Hits Managed Attribute description Cache container total percentage hit hit miss ratio for this cache display Name Cache container total hit ratio units Units display Type Display Type Override public double get Hit Ratio double result d if get Statistics Enabled result calculate Hit Ratio return result protected double calculate Hit Ratio long total Hits double total Requests double rw Ratio for Stats stats get Enabled Stats long requests stats get Retrievals if requests total Hits stats get Hits total Requests requests if total Requests rw Ratio total Hits total Requests return rw Ratio Managed Attribute description Cache container total number of cache attribute misses display Name Cache container total number of cache misses measurement Type Measurement Type display Type Display Type Override public long get Misses long result if get Statistics Enabled result calculate Misses return result protected long calculate Misses long total Misess for Stats stats get Enabled Stats long misses stats get Misses if misses total Misess misses return total Misess Managed Attribute description Cache container total number of entries currently in all caches from this cache container display Name Cache container total number of all cache entries display Type Display Type public int get Number Of Entries int result statistics Enabled if statistics Enabled for Stats stats get Enabled Stats int num Of Entries stats get Current Number Of Entries if num Of Entries result num Of Entries return result Managed Attribute description Cache container total number of entries currently in memory for all caches in this cache container display Name Cache container total number of in memory cache entries display Type Display Type public int get Current Number Of Entries In Memory int result statistics Enabled if statistics Enabled for Stats stats get Enabled Stats int num Of Entries stats get Current Number Of Entries In Memory if num Of Entries result num Of Entries return result Managed Attribute description Cache container read writes ratio in all caches from this cache container display Name Cache container read write ratio units Units display Type Display Type Override public double get Read Write Ratio double result d if get Statistics Enabled result calculate Read Write Ratio return result protected double calculate Read Write Ratio long sum Of All Reads long sum Of All Writes double rw Ratio for Stats stats get Enabled Stats long stores stats get Stores if stores sum Of All Reads stats get Retrievals sum Of All Writes stores if sum Of All Writes rw Ratio double sum Of All Reads sum Of All Writes return rw Ratio Managed Attribute description Cache container total number of cache removal hits display Name Cache container total number of cache removal hits measurement Type Measurement Type display Type Display Type Override public long get Remove Hits long result if get Statistics Enabled result calculate Remove Hits return result protected long calculate Remove Hits long total Remove Hits for Stats stats get Enabled Stats long remove Hits stats get Remove Hits if remove Hits total Remove Hits remove Hits return total Remove Hits Managed Attribute description Cache container total number of cache removals where keys were not found display Name Cache container total number of cache removal misses measurement Type Measurement Type display Type Display Type Override public long get Remove Misses long result if get Statistics Enabled result calculate Remove Misses return result protected long calculate Remove Misses long total Remove Misses for Stats stats get Enabled Stats long remove Misses stats get Remove Misses if remove Misses total Remove Misses remove Misses return total Remove Misses Managed Attribute description Cache container total number of cache attribute put operations display Name Cache container total number of cache puts measurement Type Measurement Type display Type Display Type Override public long get Stores long result if get Statistics Enabled result calculate Stores return result Override Managed Attribute description Number of seconds since the cache container statistics were last reset display Name Seconds since cache container statistics were reset units Units display Type Display Type public long get Time Since Reset long result if get Statistics Enabled result time Service time Duration reset Nanoseconds get Time Unit return result protected long calculate Stores long total Stores for Stats stats get Enabled Stats long stores stats get Stores if stores total Stores stores return total Stores Override public long get Time Since Start long result if get Statistics Enabled result calculate Time Since Start return result protected long calculate Time Since Start long longest Running for Stats stats get Enabled Stats long running Time stats get Time Since Start if running Time longest Running longest Running running Time return longest Running Override public int get Current Number Of Entries return get Number Of Entries Override public long get Total Number Of Entries return get Stores Override Managed Attribute description Amount in bytes of off heap memory used by this cache container display Name Off Heap memory used display Type Display Type public long get Off Heap Memory Used return calculate Off Heap Used protected long calculate Off Heap Used long total Off Heap Used for Stats stats get Enabled Stats long off Heap Used stats get Off Heap Memory Used if off Heap Used total Off Heap Used off Heap Used return total Off Heap Used Override public long get Retrievals return get Hits get Misses Override public void reset reset Statistics private Set Stats get Enabled Stats Set Stats stats new Hash Set Stats for String cn cm get Cache Names if cm cache Exists cn Advanced Cache cache cm get Cache cn get Advanced Cache Configuration cfg Security Actions get Cache Configuration cache if cfg jmx Statistics enabled stats add cache get Stats return stats 
package org infinispan cache impl import static java util Objects require Non Null import static java util concurrent Time Unit import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Invocation Context Factory import java lang annotation Annotation import java util Array List import java util Arrays import java util Collection import java util Collections import java util Iterator import java util List import java util Map import java util Objects import java util Properties import java util Set import java util concurrent Completable Future import java util concurrent Time Unit import java util function Bi Function import java util function Function import javax security auth Subject import javax transaction System Exception import javax transaction Transaction import javax transaction Transaction Manager import javax transaction xa Resource import org infinispan Advanced Cache import org infinispan Cache Collection import org infinispan Cache Set import org infinispan Locked Stream import org infinispan Version import org infinispan atomic Delta import org infinispan atomic Delta Aware import org infinispan atomic impl Apply Delta import org infinispan batch Batch Container import org infinispan commands Commands Factory import org infinispan commands Visitable Command import org infinispan commands control Lock Control Command import org infinispan commands functional Read Write Key Command import org infinispan commands functional Read Write Key Value Command import org infinispan commands functional functions Merge Function import org infinispan commands read Entry Set Command import org infinispan commands read Get All Command import org infinispan commands read Get Cache Entry Command import org infinispan commands read Get Key Value Command import org infinispan commands read Key Set Command import org infinispan commands read Size Command import org infinispan commands remote Get Keys In Group Command import org infinispan commands write Clear Command import org infinispan commands write Compute Command import org infinispan commands write Compute If Absent Command import org infinispan commands write Data Write Command import org infinispan commands write Evict Command import org infinispan commands write Put Key Value Command import org infinispan commands write Put Map Command import org infinispan commands write Remove Command import org infinispan commands write Remove Expired Command import org infinispan commands write Replace Command import org infinispan commands write Value Matcher import org infinispan commons Cache Exception import org infinispan commons api Basic Cache Container import org infinispan commons dataconversion Encoder import org infinispan commons dataconversion Wrapper import org infinispan commons marshall Streaming Marshaller import org infinispan commons util Enum Util import org infinispan commons util Infinispan Collections import org infinispan commons util Util import org infinispan configuration cache Configuration import org infinispan configuration format Property Formatter import org infinispan configuration global Global Configuration import org infinispan container Data Container import org infinispan container entries Cache Entry import org infinispan context Flag import org infinispan context Invocation Context import org infinispan context Invocation Context Container import org infinispan context Invocation Context Factory import org infinispan context impl Flag Bit Sets import org infinispan context impl Tx Invocation Context import org infinispan distribution Distribution Manager import org infinispan encoding Data Conversion import org infinispan eviction Eviction Manager import org infinispan eviction Passivation Manager import org infinispan expiration Expiration Manager import org infinispan factories Component Registry import org infinispan factories annotations Inject import org infinispan factories annotations Survives Restarts import org infinispan filter Key Filter import org infinispan functional impl Params import org infinispan interceptors Async Interceptor import org infinispan interceptors Async Interceptor Chain import org infinispan interceptors base Command Interceptor import org infinispan jmx annotations Data Type import org infinispan jmx annotations Display Type import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Attribute import org infinispan jmx annotations Managed Operation import org infinispan lifecycle Component Status import org infinispan manager Embedded Cache Manager import org infinispan metadata Embedded Metadata import org infinispan metadata Metadata import org infinispan notifications cachelistener Cache Notifier import org infinispan notifications cachelistener Listener Holder import org infinispan notifications cachelistener filter Cache Event Converter import org infinispan notifications cachelistener filter Cache Event Filter import org infinispan partitionhandling Availability Mode import org infinispan partitionhandling impl Partition Handling Manager import org infinispan remoting rpc Rpc Manager import org infinispan security Authorization Manager import org infinispan stats Stats import org infinispan stats impl Stats Impl import org infinispan stream Stream Marshalling import org infinispan stream impl Locked Stream Impl import org infinispan stream impl Tx Locked Stream Impl import org infinispan stream impl local Value Cache Collection import org infinispan topology Local Topology Manager import org infinispan transaction Locking Mode import org infinispan transaction impl Transaction Table import org infinispan transaction xa Transaction Xa Adapter import org infinispan transaction xa Xa Transaction Table import org infinispan util concurrent Completable Futures import org infinispan util concurrent locks Lock Manager import org infinispan util logging Log import org infinispan util logging Log Factory author Mircea Markus jboss com author Galder Zamarre o author Sanne Grinovero author a href http gleamynode net Trustin Lee a since Survives Restarts Bean object Name Cache Impl description Component that represents an individual cache instance public class Cache Impl implements Advanced Cache public static final String Cache private static final long Enum Util bit Set Of protected Invocation Context Factory invocation Context Factory protected Commands Factory commands Factory protected Async Interceptor Chain invoker protected Configuration config protected Cache Notifier notifier protected Batch Container batch Container protected Component Registry component Registry protected Transaction Manager transaction Manager protected Rpc Manager rpc Manager protected Streaming Marshaller marshaller protected Metadata default Metadata private final String name private Eviction Manager eviction Manager private Expiration Manager expiration Manager private Data Container data Container private static final Log log Log Factory get Log Cache Impl class private static final boolean trace log is Trace Enabled private Embedded Cache Manager cache Manager private Lock Manager lock Manager private Distribution Manager distribution Manager private Transaction Table tx Table private Authorization Manager authorization Manager private Partition Handling Manager partition Handling Manager private Global Configuration global Cfg private Local Topology Manager local Topology Manager private volatile boolean stopping false private boolean transactional private boolean batching Enabled public Cache Impl String name this name name Inject public void inject Dependencies Eviction Manager eviction Manager Expiration Manager expiration Manager Invocation Context Factory invocation Context Factory Commands Factory commands Factory Async Interceptor Chain interceptor Chain Configuration configuration Cache Notifier notifier Component Registry component Registry Transaction Manager transaction Manager Batch Container batch Container Rpc Manager rpc Manager Data Container data Container Streaming Marshaller marshaller Distribution Manager distribution Manager Embedded Cache Manager cache Manager Transaction Table tx Table Lock Manager lock Manager Authorization Manager authorization Manager Global Configuration global Cfg Partition Handling Manager partition Handling Manager Local Topology Manager local Topology Manager this commands Factory commands Factory this invoker interceptor Chain this config configuration this notifier notifier this component Registry component Registry this transaction Manager transaction Manager this batch Container batch Container this rpc Manager rpc Manager this eviction Manager eviction Manager this expiration Manager expiration Manager this data Container data Container this marshaller marshaller this cache Manager cache Manager this invocation Context Factory invocation Context Factory this distribution Manager distribution Manager this tx Table tx Table this lock Manager lock Manager this authorization Manager authorization Manager this global Cfg global Cfg this partition Handling Manager partition Handling Manager this local Topology Manager local Topology Manager We have to do this before start since some components may start before the actual cache and they have to have access to the default metadata on some operations default Metadata new Embedded Metadata Builder lifespan config expiration lifespan max Idle config expiration max Idle build transactional config transaction transaction Mode is Transactional batching Enabled config invocation Batching enabled private void assert Key Not Null Object key require Non Null key Null keys are not supported private void assert Value Not Null Object value require Non Null value Null values are not supported void assert Key Value Not Null Object key Object value assert Key Not Null key assert Value Not Null value private void assert Function Not Null Object function require Non Null function Null functions are not supported Cache Support does not extend Advanced Cache so it can not really call up to the cache methods that take Metadata parameter Since Cache Support methods are declared final the easiest is for Cache Impl to stop extending Cache Support and implement the base methods directly Override public final put key value return put key value default Metadata Override public final put key value long lifespan Time Unit unit return put key value lifespan unit default Metadata max Idle Override public final put If Absent key value long lifespan Time Unit unit return put If Absent key value lifespan unit default Metadata max Idle Override public final void put All Map extends extends map long lifespan Time Unit unit put All map lifespan unit default Metadata max Idle Override public final replace key value long lifespan Time Unit unit return replace key value lifespan unit default Metadata max Idle Override public final boolean replace key old Value value long lifespan Time Unit unit return replace key old Value value lifespan unit default Metadata max Idle Override public final put If Absent key value return put If Absent key value default Metadata Override public final boolean replace key old Value new Value return replace key old Value new Value default Metadata Override public final replace key value return replace key value default Metadata Override public compute key Bi Function super super extends remapping Function return compute key remapping Function false Override public compute key Bi Function super super extends remapping Function Metadata metadata return compute Internal key remapping Function false metadata add Unsafe Flags Enum Util Override public compute If Present key Bi Function super super extends remapping Function return compute key remapping Function true Override public compute If Present key Bi Function super super extends remapping Function Metadata metadata return compute Internal key remapping Function true metadata add Unsafe Flags Enum Util private compute key Bi Function super super extends remapping Function boolean compute If Present return compute Internal key remapping Function compute If Present apply Default Metadata default Metadata add Unsafe Flags Enum Util private compute Internal key Bi Function super super extends remapping Function boolean compute If Present Metadata metadata long flags return compute Internal key remapping Function compute If Present metadata flags get Invocation Context With Implicit Transaction false compute Internal key Bi Function super super extends remapping Function boolean compute If Present Metadata metadata long flags Invocation Context ctx assert Key Not Null key assert Function Not Null remapping Function Compute Command command commands Factory build Compute Command key remapping Function compute If Present metadata flags if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return execute Command And Commit If Needed ctx command Override public final compute If Absent key Function super extends mapping Function return compute If Absent key mapping Function default Metadata Override public compute If Absent key Function super extends mapping Function Metadata metadata return compute If Absent Internal key mapping Function metadata add Unsafe Flags Enum Util get Invocation Context With Implicit Transaction false compute If Absent Internal key Function super extends mapping Function Metadata metadata long flags Invocation Context ctx assert Key Not Null key assert Function Not Null mapping Function Compute If Absent Command command commands Factory build Compute If Absent Command key mapping Function metadata flags if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return execute Command And Commit If Needed ctx command Override public merge key value Bi Function super super extends remapping Function return merge Internal key value remapping Function default Metadata add Unsafe Flags Enum Util get Invocation Context With Implicit Transaction false Override public merge key value Bi Function super super extends remapping Function Metadata metadata return merge Internal key value remapping Function metadata add Unsafe Flags Enum Util get Invocation Context With Implicit Transaction false merge Internal key value Bi Function super super extends remapping Function Metadata metadata long flags Invocation Context ctx assert Key Not Null key assert Value Not Null value assert Function Not Null remapping Function Read Write Key Command command commands Factory build Read Write Key Command key new Merge Function value remapping Function metadata Params from Flags Bit Set flags get Key Data Conversion get Value Data Conversion if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return execute Command And Commit If Needed ctx command Override public final Completable Future put Async key value return put Async key value default Metadata Override public final Completable Future put Async key value long lifespan Time Unit unit return put Async key value lifespan unit default Metadata max Idle Override public final Completable Future Void put All Async Map extends extends data return put All Async data default Metadata Override public final Completable Future Void put All Async Map extends extends data long lifespan Time Unit unit return put All Async data lifespan default Metadata max Idle Override public final Completable Future put If Absent Async key value return put If Absent Async key value default Metadata Override public final Completable Future put If Absent Async key value long lifespan Time Unit unit return put If Absent Async key value lifespan unit default Metadata max Idle Override public final Completable Future replace Async key value return replace Async key value default Metadata Override public final Completable Future replace Async key value long lifespan Time Unit unit return replace Async key value lifespan unit default Metadata max Idle Override public final Completable Future Boolean replace Async key old Value new Value return replace Async key old Value new Value default Metadata Override public final Completable Future Boolean replace Async key old Value new Value long lifespan Time Unit unit return replace Async key old Value new Value lifespan unit default Metadata max Idle Override public final void put All Map extends extends m put All m default Metadata Override public final boolean remove Object key Object value return remove key value Enum Util get Invocation Context With Implicit Transaction false final boolean remove Object key Object value long explicit Flags Invocation Context ctx assert Key Value Not Null key value Remove Command command create Remove Conditional Command key value explicit Flags ctx return Boolean execute Command And Commit If Needed ctx command private Remove Command create Remove Conditional Command Object key Object value long explicit Flags Invocation Context ctx Remove Command command commands Factory build Remove Command key value explicit Flags if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Override public final int size return size Enum Util final int size long explicit Flags Size Command command commands Factory build Size Command explicit Flags return Integer invoker invoke invocation Context Factory create Invocation Context false command Override public final boolean is Empty return is Empty Enum Util final boolean is Empty long explicit Flags return entry Set explicit Flags stream any Match Stream Marshalling always True Predicate Override public final boolean contains Key Object key return contains Key key Enum Util invocation Context Factory create Invocation Context false final boolean contains Key Object key long explicit Flags Invocation Context ctx return get key explicit Flags ctx null Override public final boolean contains Value Object value assert Value Not Null value return values stream any Match Stream Marshalling equality Predicate value Override public final get Object key return get key Enum Util invocation Context Factory create Invocation Context false Suppress Warnings unchecked final get Object key long explicit Flags Invocation Context ctx assert Key Not Null key Get Key Value Command command commands Factory build Get Key Value Command key explicit Flags return invoker invoke ctx command final Cache Entry get Cache Entry Object key long explicit Flags Invocation Context ctx assert Key Not Null key Get Cache Entry Command command commands Factory build Get Cache Entry Command key explicit Flags Object ret invoker invoke ctx command return Cache Entry ret Override public final Cache Entry get Cache Entry Object key return get Cache Entry key Enum Util invocation Context Factory create Invocation Context false Override public Map get All Set keys return get All keys Enum Util invocation Context Factory create Invocation Context false keys size final Map get All Set keys long explicit Flags Invocation Context ctx Get All Command command commands Factory build Get All Command keys explicit Flags false Map map Map invoker invoke ctx command return drop Null Entries map private Map drop Null Entries Map map Iterator Entry entry Iterator map entry Set iterator while entry Iterator has Next Entry entry entry Iterator next if entry get Value null entry Iterator remove return map Override public Map Cache Entry get All Cache Entries Set keys return get All Cache Entries keys Enum Util invocation Context Factory create Invocation Context false keys size public final Map Cache Entry get All Cache Entries Set keys long explicit Flags Invocation Context ctx Get All Command command commands Factory build Get All Command keys explicit Flags true Map Cache Entry map Map Cache Entry invoker invoke ctx command Iterator Map Entry Cache Entry entry Iterator map entry Set iterator while entry Iterator has Next Map Entry Cache Entry entry entry Iterator next if entry get Value null entry Iterator remove return map Override public Map get Group String group Name return get Group group Name Enum Util final Map get Group String group Name long explicit Flags Invocation Context ctx invocation Context Factory create Invocation Context false return Collections unmodifiable Map internal Get Group group Name explicit Flags ctx private Map internal Get Group String group Name long explicit Flags Bit Set Invocation Context ctx Get Keys In Group Command command commands Factory build Get Keys In Group Command explicit Flags Bit Set group Name noinspection unchecked return Map invoker invoke ctx command Override public void remove Group String group Name remove Group group Name Enum Util final void remove Group String group Name long explicit Flags if transactional non Transactional Remove Group group Name explicit Flags else transactional Remove Group group Name explicit Flags private void transactional Remove Group String group Name long explicit Flags Bit Set final boolean on Going Transaction get Ongoing Transaction null if on Going Transaction try Begin try Invocation Context context get Invocation Context With Implicit Transaction false Map keys internal Get Group group Name explicit Flags Bit Set context long remove Flags add Ignore Return Values Flag explicit Flags Bit Set for key keys key Set Remove Command command create Remove Command key remove Flags context execute Command And Commit If Needed context command if on Going Transaction try Commit catch Runtime Exception e if on Going Transaction try Rollback throw e private void non Transactional Remove Group String group Name long explicit Flags Invocation Context context invocation Context Factory create Invocation Context false Map keys internal Get Group group Name explicit Flags context long remove Flags add Ignore Return Values Flag explicit Flags for key keys key Set a new context is needed for remove since in the non owners the command is sent to the primary owner to be executed If the context is already populated it throws a Class Cast Exception because the wrap For Remove is not invoked assert Key Not Null key Invocation Context ctx get Invocation Context With Implicit Transaction false Remove Command command create Remove Command key remove Flags ctx execute Command And Commit If Needed ctx command Override public final remove Object key return remove key Enum Util get Invocation Context With Implicit Transaction false final remove Object key long explicit Flags Invocation Context ctx assert Key Not Null key Remove Command command create Remove Command key explicit Flags ctx return execute Command And Commit If Needed ctx command Suppress Warnings unchecked private Remove Command create Remove Command Object key long explicit Flags Invocation Context ctx long flags add Unsafe Flags explicit Flags Remove Command command commands Factory build Remove Command key null flags if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Override public void remove Expired key value Long lifespan Invocation Context ctx get Invocation Context With Implicit Transaction false Remove Expired Command command commands Factory build Remove Expired Command key value lifespan if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner Send an expired remove command to everyone execute Command And Commit If Needed ctx command Override public Advanced Cache with Encoding Class extends Encoder encoder Class return new Encoder Cache this Data Conversion with Encoding encoder Class Data Conversion with Encoding encoder Class Override public Advanced Cache with Encoding Class extends Encoder key Encoder Class Class extends Encoder value Encoder Class return new Encoder Cache this Data Conversion with Encoding key Encoder Class Data Conversion with Encoding value Encoder Class Override public Advanced Cache with Wrapping Class extends Wrapper wrapper Class return new Encoder Cache this Data Conversion with Wrapping wrapper Class Data Conversion with Wrapping wrapper Class Override public Encoder get Key Encoder return get Key Data Conversion get Encoder Override public Encoder get Value Encoder return get Value Data Conversion get Encoder Override public Wrapper get Key Wrapper return get Key Data Conversion get Wrapper Override public Wrapper get Value Wrapper return get Value Data Conversion get Wrapper Override public Advanced Cache with Wrapping Class extends Wrapper key Wrapper Class Class extends Wrapper value Wrapper Class return new Encoder Cache this Data Conversion with Wrapping key Wrapper Class Data Conversion with Wrapping value Wrapper Class Override public Data Conversion get Key Data Conversion return Data Conversion Override public Data Conversion get Value Data Conversion return Data Conversion Managed Operation description Clears the cache display Name Clears the cache name clear public final void clear Operation clear Enum Util Override public final void clear clear Enum Util final void clear long explicit Flags final Transaction tx suspend Ongoing Transaction If Exists try Invocation Context context invocation Context Factory create Clear Non Tx Invocation Context Clear Command command commands Factory build Clear Command explicit Flags invoker invoke context command finally resume Previous Ongoing Transaction tx true Had problems trying to resume a transaction after clear Override public Cache Set key Set return key Set Enum Util Suppress Warnings unchecked Cache Set key Set long explicit Flags Invocation Context ctx invocation Context Factory create Invocation Context false Key Set Command command commands Factory build Key Set Command explicit Flags return Cache Set invoker invoke ctx command Override public Cache Collection values return values Enum Util Cache Collection values long explicit Flags return new Value Cache Collection this cache Entry Set explicit Flags Override public Cache Set Cache Entry cache Entry Set return cache Entry Set Enum Util Override public Locked Stream locked Stream if transactional if config transaction locking Mode Locking Mode throw new Unsupported Operation Exception Method locked Stream is not supported in transactional caches return new Tx Locked Stream Impl transaction Manager cache Entry Set stream config locking lock Acquisition Timeout Time Unit return new Locked Stream Impl cache Entry Set stream config locking lock Acquisition Timeout Time Unit Suppress Warnings unchecked Cache Set Cache Entry cache Entry Set long explicit Flags return cache Entry Set explicit Flags invocation Context Factory create Invocation Context false Suppress Warnings unchecked Cache Set Cache Entry cache Entry Set long explicit Flags Invocation Context ctx Entry Set Command command commands Factory build Entry Set Command explicit Flags return Cache Set Cache Entry invoker invoke ctx command Override public Cache Set Entry entry Set return entry Set Enum Util Suppress Warnings unchecked Cache Set Map Entry entry Set long explicit Flags Invocation Context ctx invocation Context Factory create Invocation Context false Entry Set Command command commands Factory build Entry Set Command explicit Flags return Cache Set Map Entry invoker invoke ctx command Override public final void put For External Read key value put For External Read key value Enum Util Override public void put For External Read key value long lifespan Time Unit lifespan Unit put For External Read key value lifespan lifespan Unit default Metadata max Idle Override public void put For External Read key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time idle Time Unit build put For External Read key value metadata Override public void put For External Read key value Metadata metadata Metadata merged apply Default Metadata metadata put For External Read key value merged Enum Util final void put For External Read key value long explicit Flags put For External Read key value default Metadata explicit Flags final void put For External Read key value Metadata metadata long explicit Flags Transaction ongoing Transaction null try ongoing Transaction suspend Ongoing Transaction If Exists if the entry exists then this should be a no op put If Absent key value metadata Enum Util merge Bit Sets explicit Flags catch Exception e if log is Debug Enabled log debug Caught exception while doing put For External Read e finally resume Previous Ongoing Transaction ongoing Transaction true Had problems trying to resume a transaction after put For External Read Override public final void evict key evict key Enum Util final void evict key long explicit Flags assert Key Not Null key if config memory is Eviction Enabled log eviction Disabled name Invocation Context ctx create Single Key Non Tx Invocation Context Evict Command command commands Factory build Evict Command key explicit Flags invoker invoke ctx command private Invocation Context create Single Key Non Tx Invocation Context return invocation Context Factory create Single Key Non Tx Invocation Context Override public Configuration get Cache Configuration return config Override public void add Listener Object listener notifier add Listener listener void add Listener Listener Holder listener Holder notifier add Listener listener Holder null null null void add Listener Listener Holder listener Holder Cache Event Filter super super filter Cache Event Converter super super converter notifier add Listener listener Holder filter converter null Override public void add Listener Object listener Key Filter super filter notifier add Listener listener filter Override public void add Listener Object listener Cache Event Filter super super filter Cache Event Converter super super converter notifier add Listener listener filter converter Override public void remove Listener Object listener notifier remove Listener listener Override public Set Object get Listeners return notifier get Listeners Override public void add Filtered Listener Object listener Cache Event Filter super super filter Cache Event Converter super super converter Set Class extends Annotation filter Annotations notifier add Filtered Listener listener filter converter filter Annotations void add Filtered Listener Listener Holder listener Cache Event Filter super super filter Cache Event Converter super super converter Set Class extends Annotation filter Annotations notifier add Filtered Listener listener filter converter filter Annotations If this is a transactional cache and auto Commit is set to true then starts a transaction if this is not a transactional call Invocation Context get Invocation Context With Implicit Transaction boolean is Put For External Read int key Count Invocation Context invocation Context boolean tx Injected false if transactional if is Put For External Read Transaction transaction get Ongoing Transaction if transaction null config transaction auto Commit transaction try Begin tx Injected true invocation Context invocation Context Factory create Invocation Context transaction tx Injected else invocation Context invocation Context Factory create Single Key Non Tx Invocation Context else invocation Context invocation Context Factory create Invocation Context true key Count return invocation Context Override public boolean lock keys assert Key Not Null keys return lock Arrays as List keys Enum Util Override public boolean lock Collection extends keys return lock keys Enum Util boolean lock Collection extends keys long flags Bit Set if transactional throw new Unsupported Operation Exception Calling lock on non transactional caches is not allowed if keys null keys is Empty throw new Illegal Argument Exception Can not lock empty list of keys Invocation Context ctx invocation Context Factory create Invocation Context true Lock Control Command command commands Factory build Lock Control Command keys flags Bit Set if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return Boolean invoker invoke ctx command Override public void apply Delta delta Aware Value Key Delta delta Object locks To Acquire if locks To Acquire null locks To Acquire length throw new Illegal Argument Exception Can not lock empty list of keys else if locks To Acquire length throw new Illegal Argument Exception Only one lock is permitted else if Objects equals locks To Acquire delta Aware Value Key throw new Illegal Argument Exception The delta aware key and locked key must match assert Key Not Null delta Aware Value Key Invocation Context ctx invocation Context Factory create Invocation Context true Read Write Key Value Command Object Object command create Apply Delta delta Aware Value Key delta Flag Bit Sets ctx invoker invoke ctx command private Read Write Key Value Command Object Object create Apply Delta delta Aware Value Key Delta delta long explicit Flags Invocation Context ctx Read Write Key Value Command Object Object command commands Factory build Read Write Key Value Command delta Aware Value Key delta new Apply Delta marshaller Params create get Key Data Conversion get Value Data Conversion command set Flags Bit Set explicit Flags if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Override Managed Operation description Starts the cache display Name Starts cache public void start component Registry start if log is Debug Enabled log debugf Started cache s on s get Name get Cache Manager get Address Override Managed Operation description Stops the cache display Name Stops cache public void stop perform Immediate Shutdown Override Managed Operation description Shuts down the cache across the cluster display Name Clustered cache shutdown public void shutdown if log is Debug Enabled log debugf Shutting down cache s on s get Name get Cache Manager get Address synchronized this if stopping component Registry get Status Component Status stopping true request Cluster Wide Shutdown private void request Cluster Wide Shutdown If the cache is clustered perform a cluster wide shutdown otherwise do it immediately if config clustering cache Mode is Clustered try local Topology Manager cache Shutdown name catch Exception e throw new Cache Exception e perform Immediate Shutdown private void perform Immediate Shutdown if log is Debug Enabled log debugf Stopping cache s on s get Name get Cache Manager get Address component Registry stop public void perform Graceful Shutdown Perform any orderly shutdown operations here Passivation Manager passivation Manager component Registry get Component Passivation Manager class if passivation Manager null passivation Manager passivate All Override public List Command Interceptor get Interceptor Chain List Async Interceptor interceptors invoker get Interceptors Array List Command Interceptor list new Array List interceptors size interceptors for Each interceptor if interceptor instanceof Command Interceptor list add Command Interceptor interceptor return list Override public void add Interceptor Command Interceptor i int position invoker add Interceptor i position Override public Async Interceptor Chain get Async Interceptor Chain return invoker Override public boolean add Interceptor After Command Interceptor i Class extends Command Interceptor after Interceptor return invoker add Interceptor After i after Interceptor Override public boolean add Interceptor Before Command Interceptor i Class extends Command Interceptor before Interceptor return invoker add Interceptor Before i before Interceptor Override public void remove Interceptor int position invoker remove Interceptor position Override public void remove Interceptor Class extends Command Interceptor interceptor Type invoker remove Interceptor interceptor Type Override public Eviction Manager get Eviction Manager return eviction Manager Override public Expiration Manager get Expiration Manager return expiration Manager Override public Component Registry get Component Registry return component Registry Override public Distribution Manager get Distribution Manager return distribution Manager Override public Authorization Manager get Authorization Manager return authorization Manager Override public Advanced Cache lock As Object lock Owner Objects non Null lock Owner return new Decorated Cache this lock Owner Override public Component Status get Status return component Registry get Status Returns String representation of Component Status enumeration in order to avoid class not found exceptions in tools that do n t have access to infinispan classes Managed Attribute description Returns the cache status display Name Cache status data Type Data Type display Type Display Type public String get Cache Status return get Status to String Override public Availability Mode get Availability return partition Handling Manager get Availability Mode Override public void set Availability Availability Mode availability if local Topology Manager null try local Topology Manager set Cache Availability get Name availability catch Exception e throw new Cache Exception e Managed Attribute description Returns the cache availability display Name Cache availability data Type Data Type writable true public String get Cache Availability return get Availability to String public void set Cache Availability String availability String throws Exception set Availability Availability Mode value Of availability String Managed Attribute description Returns whether cache rebalancing is enabled display Name Cache rebalacing data Type Data Type writable true public boolean is Rebalancing Enabled if local Topology Manager null try return local Topology Manager is Cache Rebalancing Enabled get Name catch Exception e throw new Cache Exception e else return false public void set Rebalancing Enabled boolean enabled if local Topology Manager null try local Topology Manager set Cache Rebalancing Enabled get Name enabled catch Exception e throw new Cache Exception e Override public boolean start Batch if batching Enabled throw log invocation Batching Not Enabled return batch Container start Batch Override public void end Batch boolean successful if batching Enabled throw log invocation Batching Not Enabled batch Container end Batch successful Override public String get Name return name Returns the cache name If this is the default cache it returns a more friendly name Managed Attribute description Returns the cache name display Name Cache name data Type Data Type display Type Display Type public String get Cache Name String name get Name equals Basic Cache Container Default Cache get Name return name get Cache Configuration clustering cache Mode to String to Lower Case Returns the version of Infinispan Managed Attribute description Returns the version of Infinispan display Name Infinispan version data Type Data Type display Type Display Type Override public String get Version return Version get Version Override public String to String return Cache name config null config clustering cache Mode is Clustered get Cache Manager get Address Util hex Id Hash Code get Cache Manager Override public Batch Container get Batch Container return batch Container Override public Invocation Context Container get Invocation Context Container return null Override public Data Container get Data Container return data Container Override public Transaction Manager get Transaction Manager return transaction Manager Override public Lock Manager get Lock Manager return this lock Manager Override public Embedded Cache Manager get Cache Manager return cache Manager Override public Stats get Stats return new Stats Impl invoker Override public Resource get Resource return new Transaction Xa Adapter Xa Transaction Table tx Table Override public final put key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time idle Time Unit build return put key value metadata Suppress Warnings unchecked final put key value Metadata metadata long explicit Flags Invocation Context ctx assert Key Value Not Null key value Data Write Command command is used for example when preloading the entry has empty changeset unless it s better defined and that would n t store the value properly if value instanceof Delta command create Apply Delta key Delta value explicit Flags ctx else if value instanceof Delta Aware explicit Flags Flag Bit Sets command create Apply Delta key Delta Aware value delta explicit Flags ctx else command create Put Command key value metadata explicit Flags ctx return execute Command And Commit If Needed ctx command Suppress Warnings unchecked private Put Key Value Command create Put Command key value Metadata metadata long explicit Flags Invocation Context ctx long flags add Unsafe Flags explicit Flags Metadata merged apply Default Metadata metadata Put Key Value Command command commands Factory build Put Key Value Command key value merged flags if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command private long add Ignore Return Values Flag long flag Bit Set return Enum Util merge Bit Sets flag Bit Set Flag Bit Sets private long add Unsafe Flags long flag Bit Set return config unsafe unreliable Return Values add Ignore Return Values Flag flag Bit Set flag Bit Set Override public final put If Absent key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time idle Time Unit build return put If Absent key value metadata Enum Util private final put If Absent key value Metadata metadata long explicit Flags return put If Absent key value metadata explicit Flags get Invocation Context With Implicit Transaction Enum Util contains Any explicit Flags Flag Bit Sets Suppress Warnings unchecked final put If Absent key value Metadata metadata long explicit Flags Invocation Context ctx assert Key Value Not Null key value Data Write Command command if value instanceof Delta command create Apply Delta key Delta value explicit Flags ctx else if value instanceof Delta Aware explicit Flags Flag Bit Sets command create Apply Delta key Delta Aware value delta explicit Flags ctx else command create Put If Absent Command key value metadata explicit Flags ctx return execute Command And Commit If Needed ctx command Suppress Warnings unchecked private Put Key Value Command create Put If Absent Command key value Metadata metadata long explicit Flags Invocation Context ctx long flags add Unsafe Flags explicit Flags Metadata merged apply Default Metadata metadata Put Key Value Command command commands Factory build Put Key Value Command key value merged flags command set Put If Absent true command set Value Matcher Value Matcher if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Override public final void put All Map extends extends map long lifespan Time Unit lifespan Unit long max Idle Time Time Unit idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time idle Time Unit build put All map metadata final void put All Map extends extends map Metadata metadata long explicit Flags Invocation Context ctx Vanilla Put Map Command returns previous values add as the will drop the return value Interceptors are free to clear this flag if appropriate since interceptors are the only consumers of the return value explicit Flags Enum Util merge Bit Sets explicit Flags Flag Bit Sets Put Map Command command create Put All Command map metadata explicit Flags ctx execute Command And Commit If Needed ctx command public final Map get And Put All Map extends extends map return get And Put All map default Metadata Enum Util get Invocation Context With Implicit Transaction false map size final Map get And Put All Map extends extends map Metadata metadata long explicit Flags Invocation Context ctx Put Map Command command create Put All Command map metadata explicit Flags ctx return drop Null Entries Map execute Command And Commit If Needed ctx command private Put Map Command create Put All Command Map extends extends map Metadata metadata long explicit Flags Invocation Context ctx Infinispan Collections assert Not Null Entries map map Metadata merged apply Default Metadata metadata Put Map Command command commands Factory build Put Map Command map merged explicit Flags if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Override public final replace key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time idle Time Unit build return replace key value metadata Suppress Warnings unchecked final replace key value Metadata metadata long explicit Flags Invocation Context ctx assert Key Value Not Null key value Replace Command command create Replace Command key value metadata explicit Flags ctx return execute Command And Commit If Needed ctx command Suppress Warnings unchecked private Replace Command create Replace Command key value Metadata metadata long explicit Flags Invocation Context ctx long flags add Unsafe Flags explicit Flags Metadata merged apply Default Metadata metadata Replace Command command commands Factory build Replace Command key null value merged flags if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Override public final boolean replace key old Value value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time idle Time Unit build return replace key old Value value metadata final boolean replace key old Value value Metadata metadata long explicit Flags Invocation Context ctx assert Key Value Not Null key value assert Value Not Null old Value Replace Command command create Replace Conditional Command key old Value value metadata explicit Flags ctx return Boolean execute Command And Commit If Needed ctx command private Replace Command create Replace Conditional Command key old Value value Metadata metadata long explicit Flags Invocation Context ctx Metadata merged apply Default Metadata metadata Replace Command command commands Factory build Replace Command key old Value value merged explicit Flags if ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Wraps a return value as a future if needed Typically if the stack operation and configuration support handling of futures this retval is already a future in which case this method does nothing except cast to future p Otherwise a future wrapper is created which has already completed and simply returns the retval This is used for consistency param retval return value to wrap param contents of the future return a future Suppress Warnings unchecked private Completable Future wrap In Future final Object retval if retval instanceof Completable Future return Completable Future retval else return Completable Future completed Future retval Override public final Completable Future put Async key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return put Async key value metadata final Completable Future put Async final key final value final Metadata metadata final long explicit Flags Invocation Context ctx assert Key Value Not Null key value Put Key Value Command command create Put Command key value metadata explicit Flags ctx return execute Command And Commit If Needed Async ctx command Override public final Completable Future Void put All Async Map extends extends data long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return put All Async data metadata final Completable Future Void put All Async final Map extends extends data final Metadata metadata return put All Async data metadata Enum Util get Invocation Context With Implicit Transaction false data size final Completable Future Void put All Async final Map extends extends data final Metadata metadata long explicit Flags Invocation Context ctx explicit Flags Enum Util merge Bit Sets explicit Flags Flag Bit Sets Put Map Command command create Put All Command data metadata explicit Flags ctx return execute Command And Commit If Needed Async ctx command Override public final Completable Future Void clear Async return clear Async Enum Util final Completable Future Void clear Async final long explicit Flags Invocation Context context invocation Context Factory create Clear Non Tx Invocation Context Clear Command command commands Factory build Clear Command explicit Flags return invoker invoke Async context command then Apply nil null Override public final Completable Future put If Absent Async key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return put If Absent Async key value metadata final Completable Future put If Absent Async final key final value final Metadata metadata return put If Absent Async key value metadata Enum Util get Invocation Context With Implicit Transaction false final Completable Future put If Absent Async final key final value final Metadata metadata final long explicit Flags Invocation Context ctx assert Key Value Not Null key value Put Key Value Command command create Put If Absent Command key value metadata explicit Flags ctx return execute Command And Commit If Needed Async ctx command Override public final Completable Future remove Async Object key return remove Async key Enum Util get Invocation Context With Implicit Transaction false final Completable Future remove Async final Object key final long explicit Flags Invocation Context ctx assert Key Not Null key Remove Command command create Remove Command key explicit Flags ctx return execute Command And Commit If Needed Async ctx command Override public final Completable Future Boolean remove Async Object key Object value return remove Async key value Enum Util get Invocation Context With Implicit Transaction false final Completable Future Boolean remove Async final Object key final Object value final long explicit Flags Invocation Context ctx assert Key Value Not Null key value Remove Command command create Remove Conditional Command key value explicit Flags ctx return execute Command And Commit If Needed Async ctx command Override public final Completable Future replace Async key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return replace Async key value metadata final Completable Future replace Async final key final value final Metadata metadata return replace Async key value metadata Enum Util get Invocation Context With Implicit Transaction false final Completable Future replace Async final key final value final Metadata metadata final long explicit Flags Invocation Context ctx assert Key Value Not Null key value Replace Command command create Replace Command key value metadata explicit Flags ctx return execute Command And Commit If Needed Async ctx command Override public final Completable Future Boolean replace Async key old Value new Value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return replace Async key old Value new Value metadata final Completable Future Boolean replace Async final key final old Value final new Value final Metadata metadata return replace Async key old Value new Value metadata Enum Util get Invocation Context With Implicit Transaction false final Completable Future Boolean replace Async final key final old Value final new Value final Metadata metadata final long explicit Flags Invocation Context ctx assert Key Value Not Null key new Value assert Value Not Null old Value Replace Command command create Replace Conditional Command key old Value new Value metadata explicit Flags ctx return execute Command And Commit If Needed Async ctx command Override public Completable Future get Async key return get Async key Enum Util invocation Context Factory create Invocation Context false Suppress Warnings unchecked Completable Future get Async final key final long explicit Flags Invocation Context ctx assert Key Not Null key Get Key Value Command command commands Factory build Get Key Value Command key explicit Flags return Completable Future invoker invoke Async ctx command Override public Advanced Cache get Advanced Cache return this Override public Rpc Manager get Rpc Manager return rpc Manager Override public Advanced Cache with Flags final Flag flags if flags null flags length return this else return new Decorated Cache this flags Override public Advanced Cache with Subject Subject subject return this private Transaction get Ongoing Transaction try Transaction transaction null if transaction Manager null transaction transaction Manager get Transaction if transaction null batching Enabled transaction batch Container get Batch Transaction return transaction catch System Exception e throw new Cache Exception Unable to get transaction e Object execute Command And Commit If Needed Invocation Context ctx Visitable Command command final boolean tx Injected is Tx Injected ctx Object result try result invoker invoke ctx command catch Throwable e if tx Injected try Rollback throw e if tx Injected try Commit return result private Completable Future execute Command And Commit If Needed Async Invocation Context ctx Visitable Command command final boolean tx Injected is Tx Injected ctx Completable Future cf final Transaction implicit Transaction try interceptors must not access thread local transaction anyway if tx Injected implicit Transaction transaction Manager suspend assert implicit Transaction null else implicit Transaction null cf Completable Future invoker invoke Async ctx command catch System Exception e throw new Cache Exception Can not suspend implicit transaction e catch Throwable e if tx Injected try Rollback throw e if tx Injected return cf handle result throwable if throwable null try implicit Transaction rollback catch System Exception e log trace Could not rollback e throwable add Suppressed e throw Completable Futures as Completion Exception throwable try implicit Transaction commit catch Exception e log could Not Complete Injected Transaction e throw Completable Futures as Completion Exception e return result else return cf private boolean is Tx Injected Invocation Context ctx return ctx is In Tx Scope Tx Invocation Context ctx is Implicit Transaction private Transaction try Begin if transaction Manager null return null try transaction Manager begin final Transaction transaction get Ongoing Transaction if trace log tracef Implicit transaction started Transaction s transaction return transaction catch Runtime Exception e throw e catch Exception e throw new Cache Exception Unable to begin implicit transaction e private void try Rollback try if transaction Manager null transaction Manager rollback catch Throwable t if trace log trace Could not rollback t best effort private void try Commit if transaction Manager null return if trace log tracef Committing transaction as it was implicit s get Ongoing Transaction try transaction Manager commit catch Throwable e log could Not Complete Injected Transaction e throw new Cache Exception Could not commit implicit transaction e Override public Class Loader get Class Loader Class Loader class Loader global Cfg class Loader return class Loader null class Loader Thread current Thread get Context Class Loader Override public Advanced Cache with Class Loader class Loader return this Override public put key value Metadata metadata return put key value metadata Enum Util get Invocation Context With Implicit Transaction false Override public void put All Map extends extends map Metadata metadata put All map metadata Enum Util get Invocation Context With Implicit Transaction false map size private Metadata apply Default Metadata Metadata metadata if metadata null return default Metadata Metadata Builder builder metadata builder return builder null builder merge default Metadata build metadata Override public replace key value Metadata metadata return replace key value metadata Enum Util get Invocation Context With Implicit Transaction false Override public boolean replace key old Value value Metadata metadata return replace key old Value value metadata Enum Util get Invocation Context With Implicit Transaction false Override public put If Absent key value Metadata metadata return put If Absent key value metadata Enum Util Override public Completable Future put Async key value Metadata metadata return put Async key value metadata Enum Util get Invocation Context With Implicit Transaction false private Transaction suspend Ongoing Transaction If Exists final Transaction tx get Ongoing Transaction if tx null try transaction Manager suspend catch System Exception e throw new Cache Exception Unable to suspend transaction e return tx private void resume Previous Ongoing Transaction Transaction transaction boolean fail Silently String fail Message if transaction null try transaction Manager resume transaction catch Exception e if fail Silently if log is Debug Enabled log debug fail Message else throw new Cache Exception fail Message e Managed Attribute description Returns the cache configuration in form of properties display Name Cache configuration properties data Type Data Type display Type Display Type public Properties get Configuration As Properties return new Property Formatter format config 
package org infinispan jmx import java util Hash Set import java util Set import javax management Instance Not Found Exception import javax management Bean Registration Exception import javax management Bean Server import javax management Malformed Object Name Exception import javax management Object Name import org infinispan Advanced Cache import org infinispan Cache import org infinispan commons Cache Exception import org infinispan commons api Basic Cache Container import org infinispan configuration global Global Configuration import org infinispan factories Abstract Component Registry import org infinispan factories Abstract Component Registry Component import org infinispan factories Global Component Registry import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan factories annotations Survives Restarts import org infinispan util logging Log import org infinispan util logging Log Factory If link org infinispan configuration cache Configuration jmx Statistics is enabled then class will register all the Beans from cache local s Configuration Registry to the Bean server author Mircea Markus jboss com author Galder Zamarre o see java lang management Management Factory get Platform Bean Server since Survives Restarts public class Cache Jmx Registration extends Abstract Jmx Registration private static final Log log Log Factory get Log Cache Jmx Registration class public static final String type Cache private Advanced Cache cache private Set Component non Cache Components private boolean need To Unregister false private volatile boolean unregister Cache Bean Inject public void initialize Cache cache Global Configuration global Config this cache cache get Advanced Cache this global Config global Config Here is where the registration is being performed Start priority public void start if cache null throw new Illegal State Exception The cache should had been injected before a call to this method Set Component components cache get Component Registry get Registered Components non Cache Components get Non Cache Components components if register Beans components cache get Cache Manager get Cache Manager Configuration need To Unregister true log mbeans Successfully Registered else if cache get Name equals Basic Cache Container log unable To Register Beans else log unable To Register Beans cache get Name Unregister when the cache is being stopped Stop public void stop This method might get called several times After the first call the cache will become null so we guard this if cache null return if need To Unregister Only unregister the non cache Bean so that it can be restarted try unregister Beans non Cache Components need To Unregister false catch Exception e log problems Unregistering Beans e If removing cache also remove cache Bean if unregister Cache Bean unregister Cache Bean make sure we do n t set cache to null in case it needs to be restarted via public void unregister Cache Bean if m Bean Server null String group Name get Cache Jmx Name manager Object Name quote global Config global Jmx Statistics cache Manager Name String pattern jmx Domain group Name try Set Object Name names Security Actions query Names new Object Name pattern null m Bean Server for Object Name name names Jmx Util unregister Bean name m Bean Server catch Bean Registration Exception e log unable To Unregister Bean With Pattern pattern e catch Instance Not Found Exception e Ignore if Cache Beans not present catch Malformed Object Name Exception e String message Malformed pattern pattern throw new Cache Exception message e catch Exception e throw new Cache Exception e public void set Unregister Cache Bean boolean unregister Cache Bean this unregister Cache Bean unregister Cache Bean Override protected Components Jmx Registration build Registrar Set Abstract Component Registry Component components Quote group name to handle invalid Object Name characters String group Name get Cache Jmx Name manager Object Name quote global Config global Jmx Statistics cache Manager Name Components Jmx Registration registrar new Components Jmx Registration m Bean Server components group Name update Domain registrar cache get Component Registry get Global Component Registry m Bean Server group Name return registrar private String get Cache Jmx Name return Components Jmx Registration Object Name quote cache get Name cache get Cache Configuration clustering cache Mode String to Lower Case protected void update Domain Components Jmx Registration registrar Global Component Registry component Registry Bean Server m Bean Server String group Name Cache Manager Jmx Registration manager Jmx Reg component Registry get Component Cache Manager Jmx Registration class if global Config global Jmx Statistics enabled jmx Domain null String tmp Jmx Domain Jmx Util build Jmx Domain global Config m Bean Server group Name synchronized manager Jmx Reg if manager Jmx Reg jmx Domain null if tmp Jmx Domain equals global Config global Jmx Statistics domain global Config global Jmx Statistics allow Duplicate Domains throw log jmx Bean Already Registered tmp Jmx Domain global Config global Jmx Statistics domain Set manager component s jmx domain so that other caches under same manager can see it particularly important when jmx is only enabled at the cache level manager Jmx Reg jmx Domain tmp Jmx Domain So that all caches share the same domain regardless of whether dups are allowed or not simply assign the manager s calculated jmx Domain jmx Domain manager Jmx Reg jmx Domain else If global stats were enabled manager s jmx Domain would have been populated when cache manager was started so no need for synchronization here jmx Domain manager Jmx Reg jmx Domain null global Config global Jmx Statistics domain manager Jmx Reg jmx Domain registrar set Jmx Domain jmx Domain protected Set Component get Non Cache Components Set Component components Set Component components Except Cache new Hash Set Abstract Component Registry Component for Abstract Component Registry Component component components String name component get Name if name equals Cache class get Name name equals Advanced Cache class get Name components Except Cache add component return components Except Cache 
package org infinispan topology import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Optional import java util Set import org infinispan commons hash Hash import org infinispan commons marshall Abstract Externalizer import org infinispan commons marshall Marshall Util import org infinispan configuration cache Cache Mode import org infinispan distribution ch Consistent Hash Factory import org infinispan marshall core Ids This class contains the information that a cache needs to supply to the coordinator when starting up author Dan Berindei since public class Cache Join Info Global configuration private final Consistent Hash Factory consistent Hash Factory private final Hash hash Function private final int num Segments private final int num Owners private final long timeout private final boolean total Order private final Cache Mode cache Mode private final boolean partition Handling Per node configuration private final float capacity Factor Per node state info private final Persistent persistent private final Optional Integer persistent State Checksum public Cache Join Info Consistent Hash Factory consistent Hash Factory Hash hash Function int num Segments int num Owners long timeout boolean total Order Cache Mode cache Mode boolean partition Handling float capacity Factor Persistent persistent Optional Integer persistent State Checksum this consistent Hash Factory consistent Hash Factory this hash Function hash Function this num Segments num Segments this num Owners num Owners this timeout timeout this total Order total Order this cache Mode cache Mode this partition Handling partition Handling this capacity Factor capacity Factor this persistent persistent this persistent State Checksum persistent State Checksum public Consistent Hash Factory get Consistent Hash Factory return consistent Hash Factory public Hash get Hash Function return hash Function public int get Num Segments return num Segments public int get Num Owners return num Owners public long get Timeout return timeout public boolean is Total Order return total Order public Cache Mode get Cache Mode return cache Mode public boolean is Partition Handling return partition Handling public float get Capacity Factor return capacity Factor public Persistent get Persistent return persistent public Optional Integer get Persistent State Checksum return persistent State Checksum Override public int hash Code final int prime int result result prime result Float float To Int Bits capacity Factor result prime result consistent Hash Factory null consistent Hash Factory hash Code result prime result cache Mode hash Code result prime result partition Handling result prime result hash Function null hash Function hash Code result prime result num Owners result prime result num Segments result prime result int timeout timeout result prime result total Order result prime result persistent null persistent hash Code result prime result persistent State Checksum null persistent State Checksum hash Code return result Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Cache Join Info other Cache Join Info obj if Float float To Int Bits capacity Factor Float float To Int Bits other capacity Factor return false if consistent Hash Factory null if other consistent Hash Factory null return false else if consistent Hash Factory equals other consistent Hash Factory return false if cache Mode other cache Mode return false if partition Handling other partition Handling return false if hash Function null if other hash Function null return false else if hash Function equals other hash Function return false if num Owners other num Owners return false if num Segments other num Segments return false if timeout other timeout return false if total Order other total Order return false if persistent null if other persistent null return false else if persistent equals other persistent return false if persistent State Checksum null if other persistent State Checksum null return false else if persistent State Checksum equals other persistent State Checksum return false return true Override public String to String return Cache Join Info consistent Hash Factory consistent Hash Factory hash Function hash Function num Segments num Segments num Owners num Owners timeout timeout total Order total Order cache Mode cache Mode partition Handling partition Handling persistent persistent persistent State Checksum persistent State Checksum public static class Externalizer extends Abstract Externalizer Cache Join Info Override public void write Object Object Output output Cache Join Info cache Join Info throws Exception output write Object cache Join Info consistent Hash Factory output write Object cache Join Info hash Function output write Int cache Join Info num Segments output write Int cache Join Info num Owners output write Long cache Join Info timeout output write Boolean cache Join Info total Order Marshall Util marshall Enum cache Join Info cache Mode output output write Boolean cache Join Info partition Handling output write Float cache Join Info capacity Factor output write Object cache Join Info persistent output write Object cache Join Info persistent State Checksum Override public Cache Join Info read Object Object Input unmarshaller throws Exception Class Not Found Exception Consistent Hash Factory consistent Hash Factory Consistent Hash Factory unmarshaller read Object Hash hash Function Hash unmarshaller read Object int num Segments unmarshaller read Int int num Owners unmarshaller read Int long timeout unmarshaller read Long boolean total Order unmarshaller read Boolean Cache Mode cache Mode Marshall Util unmarshall Enum unmarshaller Cache Mode value Of boolean partition Handling unmarshaller read Boolean float capacity Factor unmarshaller read Float Persistent persistent Persistent unmarshaller read Object Optional Integer persistent State Checksum Optional Integer unmarshaller read Object return new Cache Join Info consistent Hash Factory hash Function num Segments num Owners timeout total Order cache Mode partition Handling capacity Factor persistent persistent State Checksum Override public Integer get Id return Ids Override public Set Class extends Cache Join Info get Type Classes return Collections Class extends Cache Join Info singleton Cache Join Info class 
package org infinispan jmx import java util Set import javax management Bean Server import javax management Object Name import org infinispan configuration global Global Configuration import org infinispan factories Abstract Component Registry import org infinispan factories Global Component Registry import org infinispan factories annotations Inject import org infinispan factories annotations Survives Restarts import org infinispan util logging Log import org infinispan util logging Log Factory Registers all the components from global component registry to the mbean server author Mircea Markus jboss com author Galder Zamarre o since Survives Restarts public class Cache Manager Jmx Registration extends Abstract Jmx Registration private static final Log log Log Factory get Log Cache Manager Jmx Registration class public static final String type Cache Manager private Global Component Registry global Reg private boolean need To Unregister false private boolean stopped Inject public void init Global Component Registry registry Global Configuration configuration this global Reg registry this global Config configuration On start the mbeans are registered public void start if register Beans global Reg get Registered Components global Config need To Unregister true else log unable To Register Cache Manager Beans stopped false On stop the mbeans are unregistered public void stop This method might get called several times if stopped return if need To Unregister try unregister Beans global Reg get Registered Components need To Unregister false catch Exception e log problems Unregistering Beans e stopped true Override protected Components Jmx Registration build Registrar Set Abstract Component Registry Component components Quote group name to handle invalid Object Name characters String group Name Components Jmx Registration Object Name quote global Config global Jmx Statistics cache Manager Name Components Jmx Registration registrar new Components Jmx Registration m Bean Server components group Name update Domain registrar m Bean Server group Name return registrar protected void update Domain Components Jmx Registration registrar Bean Server m Bean Server String group Name if jmx Domain null jmx Domain Jmx Util build Jmx Domain global Config m Bean Server group Name String config Jmx Domain global Config global Jmx Statistics domain if jmx Domain equals config Jmx Domain global Config global Jmx Statistics allow Duplicate Domains throw log jmx Bean Already Registered group Name config Jmx Domain registrar set Jmx Domain jmx Domain 
package org infinispan notifications cachemanagerlistener import java lang annotation Annotation import java util Hash Map import java util List import java util Map import java util concurrent Copy On Write Array List import javax transaction Transaction import org infinispan factories annotations Inject import org infinispan manager Embedded Cache Manager import org infinispan notifications Listener import org infinispan notifications cachemanagerlistener annotation Cache Started import org infinispan notifications cachemanagerlistener annotation Cache Stopped import org infinispan notifications cachemanagerlistener annotation Merged import org infinispan notifications cachemanagerlistener annotation View Changed import org infinispan notifications cachemanagerlistener event Cache Started Event import org infinispan notifications cachemanagerlistener event Cache Stopped Event import org infinispan notifications cachemanagerlistener event Event import org infinispan notifications cachemanagerlistener event Merge Event import org infinispan notifications cachemanagerlistener event View Changed Event import org infinispan notifications cachemanagerlistener event impl Event Impl import org infinispan notifications impl Abstract Listener Impl import org infinispan notifications impl Listener Invocation import org infinispan remoting transport Address import org infinispan util logging Log import org infinispan util logging Log Factory Global shared notifications on the cache manager author Manik Surtani since public class Cache Manager Notifier Impl extends Abstract Listener Impl Event Listener Invocation Event implements Cache Manager Notifier private static final Log log Log Factory get Log Cache Manager Notifier Impl class private static final Map Class extends Annotation Class allowed Listeners new Hash Map Class extends Annotation Class static allowed Listeners put Cache Started class Cache Started Event class allowed Listeners put Cache Stopped class Cache Stopped Event class allowed Listeners put View Changed class View Changed Event class allowed Listeners put Merged class Merge Event class final List Listener Invocation Event cache Started Listeners new Copy On Write Array List Listener Invocation Event final List Listener Invocation Event cache Stopped Listeners new Copy On Write Array List Listener Invocation Event final List Listener Invocation Event view Changed Listeners new Copy On Write Array List Listener Invocation Event final List Listener Invocation Event merge Listeners new Copy On Write Array List Listener Invocation Event private Embedded Cache Manager cache Manager public Cache Manager Notifier Impl listeners Map put Cache Started class cache Started Listeners listeners Map put Cache Stopped class cache Stopped Listeners listeners Map put View Changed class view Changed Listeners listeners Map put Merged class merge Listeners protected class Default Builder extends Abstract Invocation Builder Override public Listener Invocation Event build return new Listener Invocation Impl target method sync class Loader subject Inject public void inject Cache Manager Embedded Cache Manager cache Manager this cache Manager cache Manager Override public void notify View Change List Address members List Address old Members Address my Address int view Id if view Changed Listeners is Empty Event Impl e new Event Impl e set Local Address my Address e set Merge View false e set View Id view Id e set New Members members e set Old Members old Members e set Cache Manager cache Manager e set Type Event Type for Listener Invocation listener view Changed Listeners invoke Listener listener e Override public void notify Merge List Address members List Address old Members Address my Address int view Id List List Address subgroups Merged if merge Listeners is Empty Event Impl e new Event Impl e set Local Address my Address e set View Id view Id e set Merge View true e set New Members members e set Old Members old Members e set Cache Manager cache Manager e set Subgroups Merged subgroups Merged e set Type Event Type for Listener Invocation listener merge Listeners invoke Listener listener e Override public void notify Cache Started String cache Name if cache Started Listeners is Empty Event Impl e new Event Impl e set Cache Name cache Name e set Cache Manager cache Manager e set Type Event Type for Listener Invocation listener cache Started Listeners invoke Listener listener e Override public void notify Cache Stopped String cache Name if cache Stopped Listeners is Empty Event Impl e new Event Impl e set Cache Name cache Name e set Cache Manager cache Manager e set Type Event Type for Listener Invocation listener cache Stopped Listeners invoke Listener listener e private void invoke Listener Listener Invocation listener Event Impl e try listener invoke e catch Exception x Only cache entry related listeners should be able to throw an exception to veto the operation Just log the exception thrown by the invoker it should contain all the relevant information log failed Invoking Cache Manager Listener x Override public void add Listener Object listener validate And Add Listener Invocations listener new Default Builder Override protected Log get Log return log Override protected Map Class extends Annotation Class get Allowed Method Annotations Listener l return allowed Listeners Override protected final Transaction suspend If Needed return null no op Override protected final void resume If Needed Transaction transaction no op 
package org infinispan interceptors impl import java util Map import java util Map Entry import java util concurrent Time Unit import java util concurrent atomic Atomic Long import java util concurrent atomic Atomic Long Field Updater import org infinispan Advanced Cache import org infinispan commands Flag Affected Command import org infinispan commands read Abstract Data Command import org infinispan commands read Get All Command import org infinispan commands read Get Cache Entry Command import org infinispan commands read Get Key Value Command import org infinispan commands write Compute Command import org infinispan commands write Compute If Absent Command import org infinispan commands write Evict Command import org infinispan commands write Put Key Value Command import org infinispan commands write Put Map Command import org infinispan commands write Remove Command import org infinispan commands write Replace Command import org infinispan commands write Write Command import org infinispan container Data Container import org infinispan container offheap Off Heap Memory Allocator import org infinispan context Flag import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan jmx annotations Display Type import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Attribute import org infinispan jmx annotations Managed Operation import org infinispan jmx annotations Measurement Type import org infinispan jmx annotations Units import org infinispan util Time Service import org infinispan util concurrent Striped Counters Captures cache management statistics author Jerry Gauthier since Bean object Name Statistics description General statistics such as timings hit miss ratio etc public class Cache Mgmt Interceptor extends Jmx Stats Command Interceptor private Advanced Cache cache private Data Container data Container private Time Service time Service private Off Heap Memory Allocator allocator private final Atomic Long start Nanoseconds new Atomic Long private volatile Atomic Long reset Nanoseconds new Atomic Long private Striped Counters Stripe counters new Striped Counters Stripe new Inject Suppress Warnings unused public void set Dependencies Advanced Cache cache Data Container data Container Time Service time Service Off Heap Memory Allocator allocator this cache cache this data Container data Container this time Service time Service this allocator allocator Start public void start start Nanoseconds set time Service time reset Nanoseconds set start Nanoseconds get Override public Object visit Evict Command Invocation Context ctx Evict Command command throws Throwable if get Statistics Enabled command return invoke Next ctx command return invoke Next And Finally ctx command r Ctx r Command rv t counters increment Stripe evictions Field Updater counters stripe For Current Thread Override public final Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return visit Data Read Command ctx command Override public final Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return visit Data Read Command ctx command private Object visit Data Read Command Invocation Context ctx Abstract Data Command command throws Throwable boolean statistics Enabled get Statistics Enabled command if statistics Enabled ctx is Origin Local return invoke Next ctx command long start time Service time return invoke Next And Finally ctx command r Ctx r Command rv t Stripe stripe counters stripe For Current Thread long interval Nanoseconds time Service time Duration start Time Unit if rv null counters add Stripe miss Times Field Updater stripe interval Nanoseconds counters increment Stripe misses Field Updater stripe else counters add Stripe hit Times Field Updater stripe interval Nanoseconds counters increment Stripe hits Field Updater stripe Suppress Warnings unchecked Override public Object visit Get All Command Invocation Context ctx Get All Command command throws Throwable boolean statistics Enabled get Statistics Enabled command if statistics Enabled ctx is Origin Local return invoke Next ctx command long start time Service time return invoke Next And Finally ctx command r Ctx r Command rv t long interval Nanoseconds time Service time Duration start Time Unit int requests Get All Command r Command get Keys size int hit Count for Entry Object Object entry Map Object Object rv entry Set if entry get Value null hit Count int miss Count requests hit Count Stripe stripe counters stripe For Current Thread if hit Count counters add Stripe hits Field Updater stripe hit Count counters add Stripe hit Times Field Updater stripe interval Nanoseconds hit Count requests if miss Count counters add Stripe misses Field Updater stripe miss Count counters add Stripe miss Times Field Updater stripe interval Nanoseconds miss Count requests Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable boolean statistics Enabled get Statistics Enabled command if statistics Enabled ctx is Origin Local return invoke Next ctx command long start time Service time return invoke Next And Finally ctx command r Ctx r Command rv t final long interval Nanoseconds time Service time Duration start Time Unit final Map Object Object data Put Map Command r Command get Map if data null data is Empty Stripe stripe counters stripe For Current Thread counters add Stripe store Times Field Updater stripe interval Nanoseconds counters add Stripe stores Field Updater stripe data size Override Map put key value old Value public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable return update Store Statistics ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return update Store Statistics ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable boolean statistics Enabled get Statistics Enabled command if statistics Enabled ctx is Origin Local return invoke Next ctx command long start time Service time return invoke Next And Finally ctx command r Ctx r Command rv t if rv null command is Successful increase Remove Misses else if command is Successful long interval Milliseconds time Service time Duration start Time Unit Stripe stripe counters stripe For Current Thread counters add Stripe store Times Field Updater stripe interval Milliseconds counters increment Stripe stores Field Updater stripe Override public Object visit Compute If Absent Command Invocation Context ctx Compute If Absent Command command throws Throwable return update Store Statistics ctx command private Object update Store Statistics Invocation Context ctx Write Command command throws Throwable boolean statistics Enabled get Statistics Enabled command if statistics Enabled ctx is Origin Local return invoke Next ctx command long start time Service time return invoke Next And Finally ctx command r Ctx r Command rv t if command is Successful long interval Nanoseconds time Service time Duration start Time Unit Stripe stripe counters stripe For Current Thread counters add Stripe store Times Field Updater stripe interval Nanoseconds counters increment Stripe stores Field Updater stripe Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable boolean statistics Enabled get Statistics Enabled command if statistics Enabled ctx is Origin Local return invoke Next ctx command long start time Service time return invoke Next And Finally ctx command r Ctx r Command rv t Remove Command remove Command Remove Command r Command if remove Command is Conditional if remove Command is Successful increase Remove Hits start else increase Remove Misses else if rv null increase Remove Misses else increase Remove Hits start private void increase Remove Hits long start long interval Nanoseconds time Service time Duration start Time Unit Stripe stripe counters stripe For Current Thread counters add Stripe remove Times Field Updater stripe interval Nanoseconds counters increment Stripe remove Hits Field Updater stripe private void increase Remove Misses counters increment Stripe remove Misses Field Updater counters stripe For Current Thread Managed Attribute description Number of cache attribute hits display Name Number of cache hits measurement Type Measurement Type display Type Display Type public long get Hits return counters get Stripe hits Field Updater Managed Attribute description Number of cache attribute misses display Name Number of cache misses measurement Type Measurement Type display Type Display Type public long get Misses return counters get Stripe misses Field Updater Managed Attribute description Number of cache removal hits display Name Number of cache removal hits measurement Type Measurement Type display Type Display Type public long get Remove Hits return counters get Stripe remove Hits Field Updater Managed Attribute description Number of cache removals where keys were not found display Name Number of cache removal misses measurement Type Measurement Type display Type Display Type public long get Remove Misses return counters get Stripe remove Misses Field Updater Managed Attribute description number of cache attribute put operations display Name Number of cache puts measurement Type Measurement Type display Type Display Type public long get Stores return counters get Stripe stores Field Updater Managed Attribute description Number of cache eviction operations display Name Number of cache evictions measurement Type Measurement Type display Type Display Type public long get Evictions return counters get Stripe evictions Field Updater Managed Attribute description Percentage hit hit miss ratio for the cache display Name Hit ratio units Units display Type Display Type Suppress Warnings unused public double get Hit Ratio long hits counters get Stripe hits Field Updater double total hits counters get Stripe misses Field Updater The reason for is that equality checks should be avoided for floating point numbers if total return return hits total Managed Attribute description read writes ratio for the cache display Name Read write ratio units Units display Type Display Type Suppress Warnings unused public double get Read Write Ratio long sum counters get Stripe stores Field Updater if sum return return double counters get Stripe hits Field Updater counters get Stripe misses Field Updater double sum Managed Attribute description Average number of nanoseconds for a read operation on the cache display Name Average read time units Units display Type Display Type Suppress Warnings unused public long get Average Read Time long total counters get Stripe hits Field Updater counters get Stripe misses Field Updater if total return return counters get Stripe hit Times Field Updater counters get Stripe miss Times Field Updater total Managed Attribute description Average number of nanoseconds for a write operation in the cache display Name Average write time units Units display Type Display Type Suppress Warnings unused public long get Average Write Time long sum counters get Stripe stores Field Updater if sum return return counters get Stripe store Times Field Updater sum Managed Attribute description Average number of nanoseconds for a remove operation in the cache display Name Average remove time units Units display Type Display Type Suppress Warnings unused public long get Average Remove Time long removes get Remove Hits if removes return return counters get Stripe remove Times Field Updater removes Managed Attribute description Number of entries in the cache including passivated entries display Name Number of current cache entries display Type Display Type public int get Number Of Entries return cache with Flags Flag size Managed Attribute description Number of entries currently in memory excluding expired entries display Name Number of in memory cache entries display Type Display Type public int get Number Of Entries In Memory return data Container size Managed Attribute description Amount of memory in bytes allocated in off heap display Name Off Heap Memory Used display Type Display Type public long get Off Heap Memory Used return allocator get Allocated Amount Managed Attribute description Number of seconds since cache started display Name Seconds since cache started units Units measurement Type Measurement Type display Type Display Type public long get Time Since Start return time Service time Duration start Nanoseconds get Time Unit Returns number of seconds since cache started deprecated use link get Time Since Start instead return number of seconds since cache started Managed Attribute description Number of seconds since cache started display Name Seconds since cache started units Units measurement Type Measurement Type display Type Display Type Deprecated public long get Elapsed Time backward compatibility as we renamed Elapsed Time to Time Since Start return get Time Since Start Managed Attribute description Number of seconds since the cache statistics were last reset display Name Seconds since cache statistics were reset units Units display Type Display Type Suppress Warnings unused public long get Time Since Reset return time Service time Duration reset Nanoseconds get Time Unit Override Managed Operation description Resets statistics gathered by this component display Name Reset Statistics Statistics public void reset Statistics counters reset Stripe hits Field Updater counters reset Stripe misses Field Updater counters reset Stripe stores Field Updater counters reset Stripe evictions Field Updater counters reset Stripe hit Times Field Updater counters reset Stripe miss Times Field Updater counters reset Stripe store Times Field Updater counters reset Stripe remove Hits Field Updater counters reset Stripe remove Times Field Updater counters reset Stripe remove Misses Field Updater reset Nanoseconds set time Service time private boolean get Statistics Enabled Flag Affected Command cmd return super get Statistics Enabled cmd has Any Flag Flag Bit Sets public void add Evictions long num Evictions counters add Stripe evictions Field Updater counters stripe For Current Thread num Evictions Suppress Warnings unused private static class Stripe private long slack slack slack slack slack slack slack slack Suppress Warnings unused Volatile Long Or Double Field private static class Stripe extends Stripe static final Atomic Long Field Updater Stripe hit Times Field Updater Atomic Long Field Updater new Updater Stripe class hit Times static final Atomic Long Field Updater Stripe miss Times Field Updater Atomic Long Field Updater new Updater Stripe class miss Times static final Atomic Long Field Updater Stripe store Times Field Updater Atomic Long Field Updater new Updater Stripe class store Times static final Atomic Long Field Updater Stripe remove Hits Field Updater Atomic Long Field Updater new Updater Stripe class remove Hits static final Atomic Long Field Updater Stripe remove Misses Field Updater Atomic Long Field Updater new Updater Stripe class remove Misses static final Atomic Long Field Updater Stripe stores Field Updater Atomic Long Field Updater new Updater Stripe class stores static final Atomic Long Field Updater Stripe evictions Field Updater Atomic Long Field Updater new Updater Stripe class evictions static final Atomic Long Field Updater Stripe misses Field Updater Atomic Long Field Updater new Updater Stripe class misses static final Atomic Long Field Updater Stripe hits Field Updater Atomic Long Field Updater new Updater Stripe class hits static final Atomic Long Field Updater Stripe remove Times Field Updater Atomic Long Field Updater new Updater Stripe class remove Times private volatile long hits private volatile long hit Times private volatile long misses private volatile long miss Times private volatile long stores private volatile long store Times private volatile long evictions private volatile long remove Hits private volatile long remove Misses private volatile long remove Times Suppress Warnings unused private static class Stripe extends Stripe private long slack slack slack slack slack slack slack slack 
package org infinispan configuration cache Cache replication mode public enum Cache Mode Data is not replicated Data replicated synchronously Data replicated asynchronously Data invalidated synchronously Data invalidated asynchronously Synchronous Async Synchronous scattered cache private static Cache Mode cached Values values public static Cache Mode value Of int order return cached Values order Returns true if the mode is invalidation either sync or async public boolean is Invalidation return this this public boolean is Synchronous return this this this this this public boolean is Clustered return this public boolean is Distributed return this this public boolean is Replicated return this this public boolean is Scattered return this public boolean needs State Transfer return is Replicated is Distributed is Scattered public Cache Mode to Sync switch this case return case return case return default return this public Cache Mode to Async switch this case return case return case return case throw new Illegal Argument Exception Scattered mode does not have asynchronous mode default return this public String friendly Cache Mode String switch this case case return case case return case case return case return case return throw new Illegal Argument Exception Unknown cache mode this 
package org infinispan notifications cachelistener import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import static org infinispan notifications cachelistener event Event Type import java lang annotation Annotation import java util Array List import java util Collection import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import java util import java util concurrent Callable import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import java util concurrent Copy On Write Array List import java util concurrent Execution Exception import java util concurrent Future import java util stream Stream import javax transaction Status import javax transaction Transaction import javax transaction Transaction Manager import org infinispan Cache import org infinispan Cache Stream import org infinispan commands Flag Affected Command import org infinispan commons Cache Listener Exception import org infinispan commons dataconversion Byte Array Wrapper import org infinispan commons dataconversion Encoder import org infinispan commons dataconversion Identity Encoder import org infinispan commons dataconversion Wrapper import org infinispan commons util Service Finder import org infinispan configuration cache Cache Mode import org infinispan configuration cache Configuration import org infinispan container Internal Entry Factory import org infinispan container entries Cache Entry import org infinispan container entries Internal Cache Entry import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan context impl Tx Invocation Context import org infinispan distexec Distributed Callable import org infinispan distexec Distributed Execution Completion Service import org infinispan distexec Distributed Executor Service import org infinispan distribution Distribution Manager import org infinispan distribution ch Consistent Hash import org infinispan encoding Data Conversion import org infinispan factories Component Registry import org infinispan factories annotations Inject import org infinispan filter Cache Filters import org infinispan filter Key Filter import org infinispan interceptors Async Interceptor Chain import org infinispan interceptors locking Clustering Dependent Logic import org infinispan manager Embedded Cache Manager import org infinispan metadata Metadata import org infinispan notifications Listener import org infinispan notifications cachelistener annotation Cache Entries Evicted import org infinispan notifications cachelistener annotation Cache Entry Activated import org infinispan notifications cachelistener annotation Cache Entry Created import org infinispan notifications cachelistener annotation Cache Entry Expired import org infinispan notifications cachelistener annotation Cache Entry Invalidated import org infinispan notifications cachelistener annotation Cache Entry Loaded import org infinispan notifications cachelistener annotation Cache Entry Modified import org infinispan notifications cachelistener annotation Cache Entry Passivated import org infinispan notifications cachelistener annotation Cache Entry Removed import org infinispan notifications cachelistener annotation Cache Entry Visited import org infinispan notifications cachelistener annotation Data Rehashed import org infinispan notifications cachelistener annotation Partition Status Changed import org infinispan notifications cachelistener annotation Topology Changed import org infinispan notifications cachelistener annotation Transaction Completed import org infinispan notifications cachelistener annotation Transaction Registered import org infinispan notifications cachelistener cluster Cluster Cache Notifier import org infinispan notifications cachelistener cluster Cluster Event Manager import org infinispan notifications cachelistener cluster Cluster Listener Remove Callable import org infinispan notifications cachelistener cluster Cluster Listener Replicate Callable import org infinispan notifications cachelistener cluster Remote Cluster Listener import org infinispan notifications cachelistener event Cache Entries Evicted Event import org infinispan notifications cachelistener event Cache Entry Activated Event import org infinispan notifications cachelistener event Cache Entry Created Event import org infinispan notifications cachelistener event Cache Entry Event import org infinispan notifications cachelistener event Cache Entry Expired Event import org infinispan notifications cachelistener event Cache Entry Invalidated Event import org infinispan notifications cachelistener event Cache Entry Loaded Event import org infinispan notifications cachelistener event Cache Entry Modified Event import org infinispan notifications cachelistener event Cache Entry Passivated Event import org infinispan notifications cachelistener event Cache Entry Removed Event import org infinispan notifications cachelistener event Cache Entry Visited Event import org infinispan notifications cachelistener event Data Rehashed Event import org infinispan notifications cachelistener event Event import org infinispan notifications cachelistener event Partition Status Changed Event import org infinispan notifications cachelistener event Topology Changed Event import org infinispan notifications cachelistener event Transaction Completed Event import org infinispan notifications cachelistener event Transaction Registered Event import org infinispan notifications cachelistener event impl Event Impl import org infinispan notifications cachelistener filter Cache Event Converter import org infinispan notifications cachelistener filter Cache Event Converter As Converter import org infinispan notifications cachelistener filter Cache Event Filter import org infinispan notifications cachelistener filter Cache Event Filter As Key Value Filter import org infinispan notifications cachelistener filter Cache Event Filter Converter import org infinispan notifications cachelistener filter Cache Event Filter Converter As Key Value Filter Converter import org infinispan notifications cachelistener filter Delegating Cache Entry Listener Invocation import org infinispan notifications cachelistener filter Event Type import org infinispan notifications cachelistener filter Filter Indexing Service Provider import org infinispan notifications cachelistener filter Indexed Filter import org infinispan notifications cachelistener filter Key Filter As Cache Event Filter import org infinispan notifications impl Abstract Listener Impl import org infinispan notifications impl Listener Invocation import org infinispan partitionhandling Availability Mode import org infinispan remoting transport Address import org infinispan remoting transport jgroups Suspect Exception import org infinispan topology Cache Topology import org infinispan transaction xa Global Transaction import org infinispan util logging Log import org infinispan util logging Log Factory Helper class that handles all notifications to registered listeners author Manik Surtani manik infinispan org author Mircea Markus jboss com author William Burns author anistor redhat com since public final class Cache Notifier Impl extends Abstract Listener Impl Event Cache Entry Listener Invocation implements Cluster Cache Notifier private static final Log log Log Factory get Log Cache Notifier Impl class private static final boolean trace log is Trace Enabled private static final Map Class extends Annotation Class allowed Listeners new Hash Map private static final Map Class extends Annotation Class cluster Allowed Listeners new Hash Map static allowed Listeners put Cache Entry Created class Cache Entry Created Event class allowed Listeners put Cache Entry Removed class Cache Entry Removed Event class allowed Listeners put Cache Entry Visited class Cache Entry Visited Event class allowed Listeners put Cache Entry Modified class Cache Entry Modified Event class allowed Listeners put Cache Entry Activated class Cache Entry Activated Event class allowed Listeners put Cache Entry Passivated class Cache Entry Passivated Event class allowed Listeners put Cache Entry Loaded class Cache Entry Loaded Event class allowed Listeners put Cache Entries Evicted class Cache Entries Evicted Event class allowed Listeners put Transaction Registered class Transaction Registered Event class allowed Listeners put Transaction Completed class Transaction Completed Event class allowed Listeners put Cache Entry Invalidated class Cache Entry Invalidated Event class allowed Listeners put Cache Entry Expired class Cache Entry Expired Event class allowed Listeners put Data Rehashed class Data Rehashed Event class allowed Listeners put Topology Changed class Topology Changed Event class allowed Listeners put Partition Status Changed class Partition Status Changed Event class cluster Allowed Listeners put Cache Entry Created class Cache Entry Created Event class cluster Allowed Listeners put Cache Entry Modified class Cache Entry Modified Event class cluster Allowed Listeners put Cache Entry Removed class Cache Entry Removed Event class cluster Allowed Listeners put Cache Entry Expired class Cache Entry Expired Event class final List Cache Entry Listener Invocation cache Entry Created Listeners new Copy On Write Array List final List Cache Entry Listener Invocation cache Entry Removed Listeners new Copy On Write Array List final List Cache Entry Listener Invocation cache Entry Visited Listeners new Copy On Write Array List final List Cache Entry Listener Invocation cache Entry Modified Listeners new Copy On Write Array List final List Cache Entry Listener Invocation cache Entry Activated Listeners new Copy On Write Array List final List Cache Entry Listener Invocation cache Entry Passivated Listeners new Copy On Write Array List final List Cache Entry Listener Invocation cache Entry Loaded Listeners new Copy On Write Array List final List Cache Entry Listener Invocation cache Entry Invalidated Listeners new Copy On Write Array List final List Cache Entry Listener Invocation cache Entry Expired Listeners new Copy On Write Array List final List Cache Entry Listener Invocation cache Entries Evicted Listeners new Copy On Write Array List final List Cache Entry Listener Invocation transaction Registered Listeners new Copy On Write Array List final List Cache Entry Listener Invocation transaction Completed Listeners new Copy On Write Array List final List Cache Entry Listener Invocation data Rehashed Listeners new Copy On Write Array List final List Cache Entry Listener Invocation topology Changed Listeners new Copy On Write Array List final List Cache Entry Listener Invocation partition Changed Listeners new Copy On Write Array List private Cache cache private Clustering Dependent Logic clustering Dependent Logic private Transaction Manager transaction Manager private Distributed Executor Service dist Executor Service private Configuration config private Distribution Manager distribution Manager private Internal Entry Factory entry Factory private Cluster Event Manager event Manager private Component Registry component Registry private final Map Object cluster Listener Ds new Concurrent Hash Map private final Encoder default Encoder Identity Encoder private final Wrapper default Wrapper Byte Array Wrapper private Collection Filter Indexing Service Provider filter Indexing Service Providers This map is used to store the handler used when a listener is registered which has include Current State and is only used for that listener during the initial state transfer private final Concurrent Map Queueing Segment Listener extends Event segment Handler public Cache Notifier Impl this new Concurrent Hash Map Cache Notifier Impl Concurrent Map Queueing Segment Listener extends Event handler segment Handler handler listeners Map put Cache Entry Created class cache Entry Created Listeners listeners Map put Cache Entry Removed class cache Entry Removed Listeners listeners Map put Cache Entry Visited class cache Entry Visited Listeners listeners Map put Cache Entry Modified class cache Entry Modified Listeners listeners Map put Cache Entry Activated class cache Entry Activated Listeners listeners Map put Cache Entry Passivated class cache Entry Passivated Listeners listeners Map put Cache Entry Loaded class cache Entry Loaded Listeners listeners Map put Cache Entries Evicted class cache Entries Evicted Listeners listeners Map put Cache Entry Expired class cache Entry Expired Listeners listeners Map put Transaction Registered class transaction Registered Listeners listeners Map put Transaction Completed class transaction Completed Listeners listeners Map put Cache Entry Invalidated class cache Entry Invalidated Listeners listeners Map put Data Rehashed class data Rehashed Listeners listeners Map put Topology Changed class topology Changed Listeners listeners Map put Partition Status Changed class partition Changed Listeners Inject void inject Dependencies Cache cache Clustering Dependent Logic clustering Dependent Logic Transaction Manager transaction Manager Configuration config Distribution Manager distribution Manager Internal Entry Factory entry Factory Cluster Event Manager event Manager Component Registry component Registry this cache cache this clustering Dependent Logic clustering Dependent Logic this transaction Manager transaction Manager this config config this distribution Manager distribution Manager this entry Factory entry Factory this event Manager event Manager this component Registry component Registry Override public void start super start Async Interceptor Chain interceptor Chain Security Actions get Async Interceptor Chain cache if interceptor Chain null interceptor Chain get Interceptors is Empty this dist Executor Service Security Actions get Default Executor Service cache This is executed twice because component Cache Notifier is also Cluster Cache Notifier see https issues jboss org browse if filter Indexing Service Providers null filter Indexing Service Providers Service Finder load Filter Indexing Service Provider class for Filter Indexing Service Provider provider filter Indexing Service Providers component Registry wire Dependencies provider provider start Override public void stop super stop This is executed twice because component Cache Notifier is also Cluster Cache Notifier see https issues jboss org browse if filter Indexing Service Providers null for Filter Indexing Service Provider provider filter Indexing Service Providers provider stop filter Indexing Service Providers null Override protected Log get Log return log Override protected Map Class extends Annotation Class get Allowed Method Annotations Listener l if l clustered Cluster listeners only allow a subset of types return cluster Allowed Listeners return allowed Listeners private convert Key Data Conversion key Data Conversion key if key null return null Wrapper wrp key Data Conversion null key Data Conversion get Wrapper default Wrapper Encoder enc key Data Conversion null key Data Conversion get Encoder default Encoder Object unwrapped Key wrp unwrap key return enc is Storage Format Filterable unwrapped Key enc from Storage unwrapped Key private convert Value Data Conversion value Data Conversion value if value null return null Wrapper wrp value Data Conversion null value Data Conversion get Wrapper default Wrapper Encoder enc value Data Conversion null value Data Conversion get Encoder default Encoder Object unwrapped Value wrp unwrap value return enc is Storage Format Filterable unwrapped Value enc from Storage unwrapped Value Override protected final Transaction suspend If Needed if transaction Manager null return null try switch transaction Manager get Status case Status case Status return null case Status case Status case Status case Status case Status case Status case Status case Status default suspend in default and in unknown status to be safer return transaction Manager suspend catch Exception e if trace log trace An error occurred while trying to suspend a transaction e return null Override protected final void resume If Needed Transaction transaction if transaction null transaction Manager null return try transaction Manager resume transaction catch Exception e if trace log tracef e An error occurred while trying to resume a suspended transaction tx s transaction Override public void notify Cache Entry Created key value Metadata metadata boolean pre Invocation Context ctx Flag Affected Command command if cache Entry Created Listeners is Empty clustering Dependent Logic commit Type command ctx key false is Local if command null command has Any Flag Flag Bit Sets return Event Impl e Event Impl create Event cache boolean is Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key is Primary boolean send Events ctx is In Tx Scope try for Cache Entry Listener Invocation listener cache Entry Created Listeners Need a wrapper per invocation since converter could modify the entry in it configure Event listener get Key Data Conversion listener get Value Data Conversion e key value metadata pre ctx command null null listener invoke new Event Wrapper key e is Local Node Primary Owner if send Events event Manager send Events send Events false finally if send Events event Manager drop Events Override public void notify Cache Entry Modified key value Metadata metadata previous Value Metadata previous Metadata boolean pre Invocation Context ctx Flag Affected Command command if cache Entry Modified Listeners is Empty clustering Dependent Logic commit Type command ctx key false is Local if command null command has Any Flag Flag Bit Sets return Event Impl e Event Impl create Event cache boolean is Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key is Primary boolean send Events ctx is In Tx Scope try for Cache Entry Listener Invocation listener cache Entry Modified Listeners Need a wrapper per invocation since converter could modify the entry in it configure Event listener get Key Data Conversion listener get Value Data Conversion e key value metadata pre ctx command previous Value previous Metadata listener invoke new Event Wrapper key e is Local Node Primary Owner if send Events event Manager send Events send Events false finally if send Events event Manager drop Events Override public void notify Cache Entry Removed key previous Value Metadata previous Metadata boolean pre Invocation Context ctx Flag Affected Command command if is Notification Allowed command cache Entry Removed Listeners clustering Dependent Logic commit Type command ctx key true is Local Event Impl e Event Impl create Event cache boolean is Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key is Primary boolean send Events ctx is In Tx Scope try for Cache Entry Listener Invocation listener cache Entry Removed Listeners Need a wrapper per invocation since converter could modify the entry in it if pre configure Event listener get Key Data Conversion listener get Value Data Conversion e key previous Value previous Metadata true ctx command previous Value previous Metadata else to be consistent it would be better to pass null as previous Metadata but certain server code depends on ability to retrieve these metadata when pre false from Cache Entry Event get Metadata instead of having proper method get Old Metadata there configure Event listener get Key Data Conversion listener get Value Data Conversion e key null previous Metadata false ctx command previous Value previous Metadata listener invoke new Event Wrapper key e is Local Node Primary Owner if send Events event Manager send Events send Events false finally if send Events event Manager drop Events Configure event data Currently used for created modified removed invalidated events private void configure Event Data Conversion key Data Conversion Data Conversion value Data Conversion Event Impl e key value Metadata metadata boolean pre Invocation Context ctx Flag Affected Command command previous Value Metadata previous Metadata key convert Key key Data Conversion key value convert Value value Data Conversion value previous Value convert Value value Data Conversion previous Value e set Origin Local ctx is Origin Local e set Value pre previous Value value e set Pre pre e set Old Value previous Value e set Old Metadata previous Metadata e set Metadata metadata if command null command has Any Flag Flag Bit Sets e set Command Retried true e set Key key set Tx ctx e Configure event data Currently used for activated loaded visited events private void configure Event Data Conversion key Data Conversion Data Conversion value Data Conversion Event Impl e key value boolean pre Invocation Context ctx e set Pre pre e set Key convert Key key Data Conversion key e set Value convert Value value Data Conversion value e set Origin Local ctx is Origin Local set Tx ctx e Configure event data Currently used for expired events private void configure Event Data Conversion key Data Conversion Data Conversion value Data Conversion Event Impl e key value Metadata metadata e set Key convert Key key Data Conversion key e set Value convert Value value Data Conversion value e set Metadata metadata e set Origin Local true e set Pre false Override public void notify Cache Entry Visited key value boolean pre Invocation Context ctx Flag Affected Command command if is Notification Allowed command cache Entry Visited Listeners Event Impl e Event Impl create Event cache boolean is Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key is Primary for Cache Entry Listener Invocation listener cache Entry Visited Listeners Need a wrapper per invocation since converter could modify the entry in it configure Event listener get Key Data Conversion listener get Value Data Conversion e key value pre ctx listener invoke new Event Wrapper key e is Local Node Primary Owner Override public void notify Cache Entries Evicted Collection Internal Cache Entry extends extends entries Invocation Context ctx Flag Affected Command command if entries is Empty if is Notification Allowed command cache Entries Evicted Listeners Event Impl e Event Impl create Event cache for Cache Entry Listener Invocation listener cache Entries Evicted Listeners Map evicted Keys And Values new Hash Map for Map Entry extends extends entry entries evicted Keys And Values put convert Key listener get Key Data Conversion entry get Key convert Value listener get Value Data Conversion entry get Value e set Entries evicted Keys And Values listener invoke e Override public void notify Cache Entry Expired key value Metadata metadata Invocation Context ctx if is Notification Allowed null cache Entry Expired Listeners Event Impl e Event Impl create Event cache boolean is Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key is Primary boolean send Events ctx null ctx is In Tx Scope try for Cache Entry Listener Invocation listener cache Entry Expired Listeners Need a wrapper per invocation since converter could modify the entry in it configure Event listener get Key Data Conversion listener get Value Data Conversion e key value metadata listener invoke new Event Wrapper key e is Local Node Primary Owner if send Events event Manager send Events send Events false finally if send Events event Manager drop Events Override public void notify Cache Entry Invalidated final key value Metadata metadata final boolean pre Invocation Context ctx Flag Affected Command command if is Notification Allowed command cache Entry Invalidated Listeners Event Impl e Event Impl create Event cache boolean is Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key is Primary for Cache Entry Listener Invocation listener cache Entry Invalidated Listeners Need a wrapper per invocation since converter could modify the entry in it configure Event listener get Key Data Conversion listener get Value Data Conversion e key value metadata pre ctx command value metadata listener invoke new Event Wrapper key e is Local Node Primary Owner Override public void notify Cache Entry Loaded key value boolean pre Invocation Context ctx Flag Affected Command command if is Notification Allowed command cache Entry Loaded Listeners Event Impl e Event Impl create Event cache boolean is Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key is Primary for Cache Entry Listener Invocation listener cache Entry Loaded Listeners Need a wrapper per invocation since converter could modify the entry in it configure Event listener get Key Data Conversion listener get Value Data Conversion e key value pre ctx listener invoke new Event Wrapper key e is Local Node Primary Owner Override public void notify Cache Entry Activated key value boolean pre Invocation Context ctx Flag Affected Command command if is Notification Allowed command cache Entry Activated Listeners Event Impl e Event Impl create Event cache boolean is Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key is Primary for Cache Entry Listener Invocation listener cache Entry Activated Listeners Need a wrapper per invocation since converter could modify the entry in it configure Event listener get Key Data Conversion listener get Value Data Conversion e key value pre ctx listener invoke new Event Wrapper key e is Local Node Primary Owner private void set Tx Invocation Context ctx Event Impl e if ctx null ctx is In Tx Scope Global Transaction tx Tx Invocation Context ctx get Global Transaction e set Transaction Id tx Override public void notify Cache Entry Passivated key value boolean pre Invocation Context ctx Flag Affected Command command if is Notification Allowed command cache Entry Passivated Listeners Event Impl e Event Impl create Event cache boolean is Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key is Primary for Cache Entry Listener Invocation listener cache Entry Passivated Listeners Need a wrapper per invocation since converter could modify the entry in it key convert Key listener get Key Data Conversion key value convert Value listener get Value Data Conversion value e set Pre pre e set Key key e set Value value listener invoke new Event Wrapper key e is Local Node Primary Owner Override public void notify Transaction Completed Global Transaction transaction boolean successful Invocation Context ctx if transaction Completed Listeners is Empty boolean is Origin Local ctx is Origin Local Event Impl e Event Impl create Event cache e set Origin Local is Origin Local e set Transaction Id transaction e set Transaction Successful successful for Cache Entry Listener Invocation listener transaction Completed Listeners listener invoke e if ctx is In Tx Scope if successful event Manager send Events else event Manager drop Events Override public void notify Transaction Registered Global Transaction global Transaction boolean is Origin Local if transaction Registered Listeners is Empty Event Impl e Event Impl create Event cache e set Origin Local is Origin Local e set Transaction Id global Transaction for Cache Entry Listener Invocation listener transaction Registered Listeners listener invoke e Override public void notify Data Rehashed Consistent Hash old Consistent Hash new Consistent Hash union int new Topology Id boolean pre if data Rehashed Listeners is Empty Event Impl e Event Impl create Event cache e set Pre pre e set Read Consistent Hash At Start old e set Write Consistent Hash At Start old e set Read Consistent Hash At End new e set Write Consistent Hash At End new e set Union Consistent Hash union e set New Topology Id new Topology Id for Cache Entry Listener Invocation listener data Rehashed Listeners listener invoke e Override public void notify Topology Changed Cache Topology old Topology Cache Topology new Topology int new Topology Id boolean pre if topology Changed Listeners is Empty Event Impl e Event Impl create Event cache e set Pre pre if old Topology null e set Read Consistent Hash At Start old Topology get Read Consistent Hash e set Write Consistent Hash At Start old Topology get Write Consistent Hash e set Read Consistent Hash At End new Topology get Read Consistent Hash e set Write Consistent Hash At End new Topology get Write Consistent Hash e set New Topology Id new Topology Id for Cache Entry Listener Invocation listener topology Changed Listeners listener invoke e Override public void notify Partition Status Changed Availability Mode mode boolean pre if partition Changed Listeners is Empty Event Impl e Event Impl create Event cache e set Pre pre e set Availability Mode mode for Cache Entry Listener Invocation listener partition Changed Listeners listener invoke e Override public void notify Cluster Listeners Collection extends Cache Entry Event events uuid We do n t need to unwrap key or value as the node where the event originated did this already for Cache Entry Event event events if event is Pre throw new Illegal Argument Exception Events for cluster listener should never be pre change switch event get Type case for Cache Entry Listener Invocation listener cache Entry Modified Listeners if listener is Clustered uuid equals listener get Identifier We force invocation since it means the owning node passed filters already and they already converted so do n t run converter either listener invoke No Checks new Event Wrapper event get Key event false true break case for Cache Entry Listener Invocation listener cache Entry Created Listeners if listener is Clustered uuid equals listener get Identifier We force invocation since it means the owning node passed filters already and they already converted so do n t run converter either listener invoke No Checks new Event Wrapper event get Key event false true break case for Cache Entry Listener Invocation listener cache Entry Removed Listeners if listener is Clustered uuid equals listener get Identifier We force invocation since it means the owning node passed filters already and they already converted so do n t run converter either listener invoke No Checks new Event Wrapper event get Key event false true break case cache Entry Expired Listeners for Each listener if listener is Clustered uuid equals listener get Identifier We force invocation since it means the owning node passed filters already and they already converted so do n t run converter either listener invoke No Checks new Event Wrapper event get Key event false true break default throw new Illegal Argument Exception Unexpected event type encountered Override public Collection Distributed Callable retrieve Cluster Listener Callables To Install Set Object enlisted Already new Hash Set Set Distributed Callable callables new Hash Set if trace log tracef Request received to get cluster listeners currently registered register Cluster Listener Callables To Install enlisted Already callables cache Entry Modified Listeners register Cluster Listener Callables To Install enlisted Already callables cache Entry Created Listeners register Cluster Listener Callables To Install enlisted Already callables cache Entry Removed Listeners if trace log tracef Cluster listeners found s callables return callables private void register Cluster Listener Callables To Install Set Object enlisted Already Set Distributed Callable callables List Cache Entry Listener Invocation listener Invocations for Cache Entry Listener Invocation listener listener Invocations if enlisted Already contains listener get Target If clustered means it is local so use our address if listener is Clustered Set Class extends Annotation filter Annotations listener get Filter Annotations callables add new Cluster Listener Replicate Callable listener get Identifier cache get Cache Manager get Address listener get Filter listener get Converter listener is Sync filter Annotations listener get Key Data Conversion listener get Value Data Conversion enlisted Already add listener get Target else if listener get Target instanceof Remote Cluster Listener Remote Cluster Listener lcl Remote Cluster Listener listener get Target Set Class extends Annotation filter Annotations listener get Filter Annotations callables add new Cluster Listener Replicate Callable lcl get Id lcl get Owner Address listener get Filter listener get Converter listener is Sync filter Annotations listener get Key Data Conversion listener get Value Data Conversion enlisted Already add listener get Target public boolean is Notification Allowed Flag Affected Command cmd List Cache Entry Listener Invocation listeners return listeners is Empty cmd null cmd has Any Flag Flag Bit Sets Override public void add Listener Object listener add Listener listener null null null Override public void add Listener Object listener Class Loader class Loader add Listener listener null null class Loader Override public void add Listener Object listener Key Filter super filter Class Loader class Loader add Listener listener new Key Filter As Cache Event Filter filter null class Loader private void add Listener Internal Object listener Data Conversion key Data Conversion Data Conversion value Data Conversion Cache Event Filter super super filter Cache Event Converter super super converter Class Loader class Loader final Listener l test Listener Class Validity listener get Class final generated Id random final Cache Mode cache Mode config clustering cache Mode Filter Indexing Service Provider indexing Provider null boolean found Methods false Data Conversion key Conversion key Data Conversion null Data Conversion key Data Conversion Data Conversion value Conversion value Data Conversion null Data Conversion value Data Conversion if filter instanceof Indexed Filter Indexed Filter indexed Filter Indexed Filter filter indexing Provider find Indexing Service Provider indexed Filter if indexing Provider null Delegating Cache Invocation Builder builder new Delegating Cache Invocation Builder indexing Provider builder set Include Current State l include Current State set Clustered l clustered set Only Primary l clustered cache Mode is Distributed cache Mode is Scattered l primary Only set Observation l clustered Listener Observation l observation set Filter filter set Converter converter set Identifier generated Id set Key Data Conversion key Conversion set Value Data Conversion value Conversion set Class Loader class Loader found Methods validate And Add Listener Invocations listener builder builder register Listener Invocations if indexing Provider null Cache Invocation Builder builder new Cache Invocation Builder builder set Include Current State l include Current State set Clustered l clustered set Only Primary l clustered cache Mode is Distributed cache Mode is Scattered l primary Only set Observation l clustered Listener Observation l observation set Filter filter set Converter converter set Key Data Conversion key Conversion set Value Data Conversion value Conversion set Identifier generated Id set Class Loader class Loader if l clustered builder set Filter Annotations find Listener Callbacks listener found Methods validate And Add Listener Invocations listener builder if found Methods l clustered if l observation Listener Observation throw log cluster Listener Registered With Only Pre Events listener get Class else if cache Mode is Invalidation throw new Unsupported Operation Exception Cluster listeners can not be used with Invalidation Caches else if cache Mode is Distributed cache Mode is Scattered cluster Listener Ds put listener generated Id Embedded Cache Manager manager cache get Cache Manager Address our Address manager get Address List Address members manager get Members If we are the only member do n t even worry about sending listeners if members null members size Distributed Execution Completion Service decs new Distributed Execution Completion Service dist Executor Service if trace log tracef Replicating cluster listener to other nodes s for cluster listener with id s members generated Id Callable callable new Cluster Listener Replicate Callable generated Id our Address filter converter l sync find Listener Callbacks listener key Data Conversion value Data Conversion for Address member members if member equals our Address decs submit member callable for int i i members size i try decs take get catch Interrupted Exception e throw new Cache Listener Exception e catch Execution Exception e Throwable cause e get Cause If we got a Suspect Exception it means the remote node has n t started this cache yet Just ignore when it joins it will retrieve the listener if cause instanceof Suspect Exception throw new Cache Listener Exception cause int extra Count If anyone else joined since we sent these we have to send the listeners again since they may have queried before the other nodes got the new listener List Address members After manager get Members for Address member members After if members contains member member equals our Address if trace log tracef Found additional node s that joined during replication of cluster listener with id s member generated Id extra Count decs submit member callable for int i i extra Count i try decs take get catch Interrupted Exception e throw new Cache Listener Exception e catch Execution Exception e throw new Cache Listener Exception e If we have a segment listener handler it means we have to do initial state Queueing Segment Listener handler segment Handler remove generated Id if handler null if trace log tracef Listener s requests initial state for cache generated Id try Cache Stream entry Stream cache get Advanced Cache with Encoding key Conversion get Encoder Class value Conversion get Encoder Class cache Entry Set stream Stream Cache Entry used Stream entry Stream segment Completion Listener handler if filter instanceof Cache Event Filter Converter filter converter converter null Hacky cast to prevent other casts used Stream Cache Filters filter And Convert used Stream new Cache Event Filter Converter As Key Value Filter Converter Cache Event Filter Converter filter else used Stream filter null used Stream used Stream filter Cache Filters predicate new Cache Event Filter As Key Value Filter filter used Stream converter null used Stream used Stream map Cache Filters function new Cache Event Converter As Converter converter Iterator Cache Entry iterator used Stream iterator while iterator has Next Cache Entry entry iterator next Mark the key as processed and see if we had a concurrent update Object value handler mark Key As Processing entry get Key if value Base Queueing Segment Listener Do n t process this value if we had a concurrent remove continue raise Event For Initial Transfer generated Id entry l clustered handler notified Key entry get Key Set Cache Entry entries handler find Created Entries for Cache Entry entry entries raise Event For Initial Transfer generated Id entry l clustered if trace log tracef Listener s initial state for cache completed generated Id handler transfer Complete Adds the listener using the provided filter converter and class loader The provided builder is used to add additional configuration including clustered only Primary identifier which can be used after this method is completed to see what values were used in the addition of this listener param listener param filter param converter param class Loader param return Override public void add Listener Object listener Cache Event Filter super super filter Cache Event Converter super super converter Class Loader class Loader add Listener Internal listener null null filter converter class Loader private Filter Indexing Service Provider find Indexing Service Provider Indexed Filter indexed Filter for Filter Indexing Service Provider provider filter Indexing Service Providers if provider supports Filter indexed Filter return provider log no Filter Indexing Service Provider Found indexed Filter get Class get Name return null Override public List Cache Entry Listener Invocation get Listener Collection For Annotation Class extends Annotation annotation return super get Listener Collection For Annotation annotation private void raise Event For Initial Transfer identifier Cache Entry entry boolean clustered Event Impl pre Event if clustered In clustered mode we only send post event pre Event null else pre Event Event Impl create Event cache pre Event set Key entry get Key pre Event set Pre true Event Impl post Event Event Impl create Event cache post Event set Key entry get Key post Event set Value entry get Value post Event set Metadata entry get Metadata post Event set Pre false for Cache Entry Listener Invocation invocation cache Entry Created Listeners Now notify all our methods of the creates if invocation get Identifier identifier if pre Event null Non clustered notifications are done twice invocation invoke No Checks new Event Wrapper null pre Event true true invocation invoke No Checks new Event Wrapper null post Event true true Override public void add Listener Object listener Key Filter super filter add Listener listener filter null Override public void add Listener Object listener Cache Event Filter super super filter Cache Event Converter super super converter add Listener listener filter converter null Override public void add Filtered Listener Object listener Cache Event Filter super super filter Cache Event Converter super super converter Set Class extends Annotation filter Annotations add Filtered Listener Internal listener null null filter converter filter Annotations Override public void add Listener Listener Holder listener Holder Cache Event Filter super super filter Cache Event Converter super super converter Class Loader class Loader add Listener Internal listener Holder get Listener listener Holder get Key Data Conversion listener Holder get Value Data Conversion filter converter class Loader Override public void add Filtered Listener Listener Holder listener Holder Cache Event Filter super super filter Cache Event Converter super super converter Set Class extends Annotation filter Annotations add Filtered Listener Internal listener Holder get Listener listener Holder get Key Data Conversion listener Holder get Value Data Conversion filter converter filter Annotations private void add Filtered Listener Internal Object listener Data Conversion key Data Conversion Data Conversion value Data Conversion Cache Event Filter super super filter Cache Event Converter super super converter Set Class extends Annotation filter Annotations final Listener l test Listener Class Validity listener get Class final generated Id random final Cache Mode cache Mode config clustering cache Mode Filter Indexing Service Provider indexing Provider null boolean found Methods false Data Conversion key Conversion key Data Conversion null Data Conversion key Data Conversion Data Conversion value Conversion value Data Conversion null Data Conversion value Data Conversion if filter instanceof Indexed Filter Indexed Filter indexed Filter Indexed Filter filter indexing Provider find Indexing Service Provider indexed Filter if indexing Provider null Delegating Cache Invocation Builder builder new Delegating Cache Invocation Builder indexing Provider builder set Filter Annotations filter Annotations set Include Current State l include Current State set Clustered l clustered set Only Primary l clustered cache Mode is Distributed l primary Only set Observation l clustered Listener Observation l observation set Filter filter set Converter converter set Key Data Conversion key Conversion set Value Data Conversion value Conversion set Identifier generated Id set Class Loader null found Methods validate And Add Filter Listener Invocations listener builder filter Annotations builder register Listener Invocations if indexing Provider null Cache Invocation Builder builder new Cache Invocation Builder builder set Filter Annotations filter Annotations set Include Current State l include Current State set Clustered l clustered set Only Primary l clustered cache Mode is Distributed l primary Only set Observation l clustered Listener Observation l observation set Filter filter set Key Data Conversion key Conversion set Value Data Conversion value Conversion set Converter converter set Identifier generated Id set Class Loader null if l clustered builder set Filter Annotations find Listener Callbacks listener found Methods validate And Add Filter Listener Invocations listener builder filter Annotations if found Methods l clustered if l observation Listener Observation throw log cluster Listener Registered With Only Pre Events listener get Class else if cache Mode is Invalidation throw new Unsupported Operation Exception Cluster listeners can not be used with Invalidation Caches else if cache Mode is Distributed cluster Listener Ds put listener generated Id Embedded Cache Manager manager cache get Cache Manager Address our Address manager get Address List Address members manager get Members If we are the only member do n t even worry about sending listeners if members null members size Distributed Execution Completion Service decs new Distributed Execution Completion Service dist Executor Service if trace log tracef Replicating cluster listener to other nodes s for cluster listener with id s members generated Id Callable callable new Cluster Listener Replicate Callable generated Id our Address filter converter l sync filter Annotations key Data Conversion value Data Conversion for Address member members if member equals our Address decs submit member callable for int i i members size i try decs take get catch Interrupted Exception e throw new Cache Listener Exception e catch Execution Exception e Throwable cause e get Cause If we got a Suspect Exception it means the remote node has n t started this cache yet Just ignore when it joins it will retrieve the listener if cause instanceof Suspect Exception throw new Cache Listener Exception cause int extra Count If anyone else joined since we sent these we have to send the listeners again since they may have queried before the other nodes got the new listener List Address members After manager get Members for Address member members After if members contains member member equals our Address if trace log tracef Found additional node s that joined during replication of cluster listener with id s member generated Id extra Count decs submit member callable for int i i extra Count i try decs take get catch Interrupted Exception e throw new Cache Listener Exception e catch Execution Exception e throw new Cache Listener Exception e If we have a segment listener handler it means we have to do initial state Queueing Segment Listener handler segment Handler remove generated Id if handler null if trace log tracef Listener s requests initial state for cache generated Id try Cache Stream entry Stream cache get Advanced Cache with Encoding key Conversion get Encoder Class value Conversion get Encoder Class with Wrapping key Data Conversion get Wrapper Class value Data Conversion get Wrapper Class cache Entry Set stream Stream Cache Entry used Stream entry Stream segment Completion Listener handler if filter instanceof Cache Event Filter Converter filter converter converter null Hacky cast to prevent other casts used Stream Cache Filters filter And Convert used Stream new Cache Event Filter Converter As Key Value Filter Converter Cache Event Filter Converter filter else used Stream filter null used Stream used Stream filter Cache Filters predicate new Cache Event Filter As Key Value Filter filter used Stream converter null used Stream used Stream map Cache Filters function new Cache Event Converter As Converter converter Iterator Cache Entry iterator used Stream iterator while iterator has Next Cache Entry entry iterator next Mark the key as processed and see if we had a concurrent update Object value handler mark Key As Processing entry get Key if value Base Queueing Segment Listener Do n t process this value if we had a concurrent remove continue raise Event For Initial Transfer generated Id entry l clustered handler notified Key entry get Key Set Cache Entry entries handler find Created Entries for Cache Entry entry entries raise Event For Initial Transfer generated Id entry l clustered if trace log tracef Listener s initial state for cache completed generated Id handler transfer Complete protected class Cache Invocation Builder extends Abstract Invocation Builder Cache Event Filter super super filter Cache Event Converter super super converter boolean only Primary boolean clustered boolean include Current State identifier Data Conversion key Data Conversion Data Conversion value Data Conversion Listener Observation observation Set Class extends Annotation filter Annotations public Cache Event Filter super super get Filter return filter public Cache Invocation Builder set Filter Cache Event Filter super super filter this filter filter return this public Cache Event Converter super super get Converter return converter public Cache Invocation Builder set Converter Cache Event Converter super super converter this converter converter return this public boolean is Only Primary return only Primary public Cache Invocation Builder set Only Primary boolean only Primary this only Primary only Primary return this public boolean is Clustered return clustered public Cache Invocation Builder set Clustered boolean clustered this clustered clustered return this public get Identifier return identifier public Cache Invocation Builder set Identifier identifier this identifier identifier return this public Cache Invocation Builder set Key Data Conversion Data Conversion data Conversion this key Data Conversion data Conversion return this public Cache Invocation Builder set Value Data Conversion Data Conversion data Conversion this value Data Conversion data Conversion return this public boolean is Include Current State return include Current State public Cache Invocation Builder set Include Current State boolean include Current State this include Current State include Current State return this public Listener Observation get Observation return observation public Cache Invocation Builder set Observation Listener Observation observation this observation observation return this public Cache Invocation Builder set Filter Annotations Set Class extends Annotation filter Annotations this filter Annotations filter Annotations return this Override public Cache Entry Listener Invocation build Listener Invocation Event invocation new Listener Invocation Impl target method sync class Loader subject wire Dependencies filter converter If we are dealing with clustered events that forces the cluster listener to only use primary only else we would have duplicate events Cache Entry Listener Invocation return Value if include Current State If it is a clustered listener and distributed cache we can do some extra optimizations if clustered Queueing Segment Listener handler segment Handler get identifier if handler null if config clustering cache Mode is Distributed handler new Distributed Queueing Segment Listener entry Factory distribution Manager else handler new Queueing All Segment Listener entry Factory Queueing Segment Listener current Queue segment Handler put If Absent identifier handler if current Queue null handler current Queue return Value new Clustered Listener Invocation invocation handler filter converter annotation only Primary identifier sync observation filter Annotations key Data Conversion value Data Conversion else this is removed until non cluster listeners are supported Queueing Segment Listener handler segment Handler get identifier if handler null handler new Queueing All Segment Listener Queueing Segment Listener current Queue segment Handler put If Absent identifier handler if current Queue null handler current Queue return Value new Non Clustered Listener Invocation invocation handler filter converter annotation only Primary identifier sync return Value new Base Cache Entry Listener Invocation invocation filter converter annotation only Primary clustered identifier sync observation filter Annotations key Data Conversion value Data Conversion else If no include Current State just use the base listener invocation which immediately passes all notifications off return Value new Base Cache Entry Listener Invocation invocation filter converter annotation only Primary clustered identifier sync observation filter Annotations key Data Conversion value Data Conversion return return Value protected void wire Dependencies Cache Event Filter super super filter Cache Event Converter super super converter if filter null component Registry wire Dependencies filter if converter null converter filter component Registry wire Dependencies converter if key Data Conversion null component Registry wire Dependencies key Data Conversion if value Data Conversion null component Registry wire Dependencies value Data Conversion protected class Delegating Cache Invocation Builder extends Cache Invocation Builder private final Filter Indexing Service Provider provider private final Map Class extends Annotation List Delegating Cache Entry Listener Invocation listeners new Hash Map Delegating Cache Invocation Builder Filter Indexing Service Provider provider this provider provider Override public Delegating Cache Entry Listener Invocation build Delegating Cache Entry Listener Invocation invocation provider intercept Listener Invocation super build List Delegating Cache Entry Listener Invocation invocations listeners get invocation get Annotation if invocations null invocations new Array List listeners put invocation get Annotation invocations invocations add invocation return invocation void register Listener Invocations if listeners is Empty boolean filter And Convert filter converter converter null provider register Listener Invocations clustered only Primary filter And Convert Indexed Filter filter listeners this key Data Conversion this value Data Conversion protected class Non Clustered Listener Invocation extends Base Cache Entry Listener Invocation private final Queueing Segment Listener Event handler protected Non Clustered Listener Invocation Listener Invocation Event invocation Queueing Segment Listener Event handler Cache Event Filter super super filter Cache Event Converter super super converter Class extends Annotation annotation boolean only Primary identifier boolean sync Listener Observation observation Set Class extends Annotation filter Annotations Data Conversion key Data Conversion Data Conversion value Data Conversion super invocation filter converter annotation only Primary false identifier sync observation filter Annotations key Data Conversion value Data Conversion this handler handler Override protected void do Real Invocation Event event if handler handle Event new Event Wrapper null event invocation super do Real Invocation event This class is to be used with cluster listener invocations only when they have included current state Thus we can assume all types are Cache Entry Event since it does n t allow other types protected static class Clustered Listener Invocation extends Base Cache Entry Listener Invocation private final Queueing Segment Listener Cache Entry Event handler public Clustered Listener Invocation Listener Invocation Event invocation Queueing Segment Listener Cache Entry Event handler Cache Event Filter super super filter Cache Event Converter super super converter Class extends Annotation annotation boolean only Primary identifier boolean sync Listener Observation observation Set Class extends Annotation filter Annotations Data Conversion key Data Conversion Data Conversion value Data Conversion super invocation filter converter annotation only Primary true identifier sync observation filter Annotations key Data Conversion value Data Conversion this handler handler Override public void invoke Event event throw new Unsupported Operation Exception Clustered initial transfer do n t support regular events Override protected void do Real Invocation Event Wrapper Cache Entry Event wrapped This is only used with clusters and such we can safely cast this here if handler handle Event wrapped invocation super do Real Invocation wrapped get Event protected static class Base Cache Entry Listener Invocation implements Cache Entry Listener Invocation protected final Listener Invocation Event invocation protected final Cache Event Filter super super filter protected final Cache Event Converter super super converter private final Data Conversion key Data Conversion private final Data Conversion value Data Conversion protected final boolean only Primary protected final boolean clustered protected final identifier protected final Class extends Annotation annotation protected final boolean sync protected final boolean filter And Convert protected final Listener Observation observation protected final Set Class extends Annotation filter Annotations protected Base Cache Entry Listener Invocation Listener Invocation Event invocation Cache Event Filter super super filter Cache Event Converter super super converter Class extends Annotation annotation boolean only Primary boolean clustered identifier boolean sync Listener Observation observation Set Class extends Annotation filter Annotations Data Conversion key Data Conversion Data Conversion value Data Conversion this invocation invocation this filter filter this converter converter this key Data Conversion key Data Conversion this value Data Conversion value Data Conversion this filter And Convert filter instanceof Cache Event Filter Converter filter converter converter null this only Primary only Primary this clustered clustered this identifier identifier this annotation annotation this sync sync this observation observation this filter Annotations filter Annotations Override public void invoke Event event if should Invoke event do Real Invocation event This is the entry point for local listeners firing events param wrapped param is Local Node Primary Owner Override public void invoke Event Wrapper Cache Entry Event wrapped boolean is Local Node Primary Owner See if this should be filtered first before evaluating Cache Entry Event resulting Event should Invoke wrapped get Event is Local Node Primary Owner if resulting Event null wrapped set Event resulting Event invoke No Checks wrapped false filter And Convert This is the entry point for remote listener events being fired param wrapped param skip Queue Override public void invoke No Checks Event Wrapper Cache Entry Event wrapped boolean skip Queue boolean skip Converter We run the converter first this way the converter does n t have to run serialized when enqueued and also the handler does n t have to worry about it if skip Converter wrapped set Event convert Value converter wrapped get Event if skip Queue invocation invoke wrapped get Event else do Real Invocation wrapped protected void do Real Invocation Event Wrapper Cache Entry Event event do Real Invocation event get Event protected void do Real Invocation Event event invocation invoke event protected boolean should Invoke Event event return observation should Invoke event is Pre protected Cache Entry Event should Invoke Cache Entry Event event boolean is Local Node Primary Owner if trace log tracef Should invoke s filter s only Primary s is Primary s event filter only Primary is Local Node Primary Owner if only Primary is Local Node Primary Owner return null if event instanceof Event Impl Event Impl event Impl Event Impl event if should Invoke event return null Event Type event Type Only use the filter if it was provided and we have an event that we can filter properly if filter null event Type get Event event Impl null if filter And Convert Object new Value Cache Event Filter Converter filter filter And Convert event Impl get Key event Impl get Old Value event Impl get Old Metadata event Impl get Value event Impl get Metadata event Type if new Value null Event Impl clone event Impl clone clone set Value new Value return clone else return null else if filter accept event Impl get Key event Impl get Old Value event Impl get Old Metadata event Impl get Value event Impl get Metadata event Type return null return event We ca n t currently filter events that do n t implement Cache Entry Event or events Basically events that have a single key value pair only private Event Type get Event Event Impl event switch event get Type case case case case case case case case case return new Event Type event is Command Retried event is Pre event get Type default return null Override public Object get Target return invocation get Target Override public Cache Event Filter super super get Filter return filter Override public Set Class extends Annotation get Filter Annotations return filter Annotations Override public Data Conversion get Key Data Conversion return key Data Conversion Override public Data Conversion get Value Data Conversion return value Data Conversion Override public Cache Event Converter super super get Converter return converter Override public boolean is Clustered return clustered Override public get Identifier return identifier Override public Listener Observation get Observation return observation Override public Class extends Annotation get Annotation return annotation protected Cache Entry Event convert Value Cache Event Converter super super converter Cache Entry Event event Cache Entry Event returned Event if converter null if event instanceof Event Impl This is a bit hacky to let the type be passed in for the type Event Impl event Impl Event Impl event Event Type ev Type new Event Type event Impl is Command Retried event Impl is Pre event Impl get Type Object new Value converter convert event Impl get Key event Impl get Old Value event Impl get Old Metadata event Impl get Value event Impl get Metadata ev Type if new Value event Impl get Value Event Impl clone event Impl clone clone set Value new Value returned Event clone else returned Event event Impl else throw new Illegal Argument Exception Provided event should be org infinispan notifications cachelistener event impl Event Impl when a converter is being used else returned Event event return returned Event Override public boolean is Sync return sync Override public void remove Listener Object listener super remove Listener listener id cluster Listener Ds remove listener if id null List Future futures dist Executor Service submit Everywhere new Cluster Listener Remove Callable id for Future future futures try future get catch Interrupted Exception e throw new Cache Listener Exception e catch Execution Exception e throw new Cache Listener Exception e Override protected Set Cache Entry Listener Invocation remove Listener Invocation Class extends Annotation annotation Object listener Set Cache Entry Listener Invocation marked For Removal super remove Listener Invocation annotation listener for Cache Entry Listener Invocation li marked For Removal if li instanceof Delegating Cache Entry Listener Invocation Delegating Cache Entry Listener Invocation li unregister return marked For Removal 
package org infinispan marshall exts import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commands Cancel Command import org infinispan commands Create Cache Command import org infinispan commands Remove Cache Command import org infinispan commands control Lock Control Command import org infinispan commands read Distributed Execute Command import org infinispan commands remote Cache Rpc Command import org infinispan commands remote Clustered Get All Command import org infinispan commands remote Clustered Get Command import org infinispan commands remote Single Rpc Command import org infinispan commands remote recovery Complete Transaction Command import org infinispan commands remote recovery Get In Doubt Transactions Command import org infinispan commands remote recovery Get In Doubt Tx Info Command import org infinispan commands remote recovery Tx Completion Notification Command import org infinispan commands tx Commit Command import org infinispan commands tx Prepare Command import org infinispan commands tx Rollback Command import org infinispan commands tx Versioned Commit Command import org infinispan commands tx Versioned Prepare Command import org infinispan commands tx totalorder Total Order Commit Command import org infinispan commands tx totalorder Total Order Non Versioned Prepare Command import org infinispan commands tx totalorder Total Order Rollback Command import org infinispan commands tx totalorder Total Order Versioned Commit Command import org infinispan commands tx totalorder Total Order Versioned Prepare Command import org infinispan commands write Backup Put Map Rpc Command import org infinispan commands write Backup Write Rpc Command import org infinispan commands write Invalidate Versions Command import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan factories Global Component Registry import org infinispan marshall core Ids import org infinispan statetransfer State Request Command import org infinispan statetransfer State Response Command import org infinispan stream impl Stream Request Command import org infinispan stream impl Stream Response Command import org infinispan stream impl Stream Segment Response Command import org infinispan util Byte String import org infinispan xsite Single Site Rpc Command import org infinispan xsite Site Admin Command import org infinispan xsite statetransfer Site State Push Command import org infinispan xsite statetransfer Site State Transfer Control Command Externalizer in charge of marshalling cache specific commands At read time this marshaller is able to locate the right cache marshaller and provide it any externalizers implementations that follow author Galder Zamarre o since public final class Cache Rpc Command Externalizer extends Abstract Externalizer Cache Rpc Command private final Global Component Registry gcr private final Replicable Command Externalizer cmd Ext public Cache Rpc Command Externalizer Global Component Registry gcr Replicable Command Externalizer cmd Ext this cmd Ext cmd Ext this gcr gcr Override public Set Class extends Cache Rpc Command get Type Classes noinspection unchecked Set Class extends Cache Rpc Command core Commands Util as Set Distributed Execute Command class Lock Control Command class State Request Command class State Response Command class Clustered Get Command class Single Rpc Command class Commit Command class Prepare Command class Rollback Command class Remove Cache Command class Tx Completion Notification Command class Get In Doubt Transactions Command class Get In Doubt Tx Info Command class Complete Transaction Command class Versioned Prepare Command class Create Cache Command class Cancel Command class Versioned Commit Command class Site Admin Command class Total Order Non Versioned Prepare Command class Total Order Versioned Prepare Command class Total Order Commit Command class Total Order Versioned Commit Command class Total Order Rollback Command class Site State Transfer Control Command class Site State Push Command class Single Site Rpc Command class Clustered Get All Command class Stream Request Command class Stream Segment Response Command class Stream Response Command class Backup Write Rpc Command class Backup Put Map Rpc Command class Invalidate Versions Command class Only interested in cache specific replicable commands core Commands add All gcr get Module Properties module Cache Rpc Commands return core Commands Override public void write Object Object Output output Cache Rpc Command command throws Exception header type method id cmd Ext write Command Header output command Byte String cache Name command get Cache Name Byte String write Object output cache Name Take the cache marshaller and generate the payload for the rest of the command using that cache marshaller and the write the bytes in the original payload marshall Parameters command output private void marshall Parameters Cache Rpc Command cmd Object Output oo throws Exception cmd Ext write Command Parameters oo cmd Override public Cache Rpc Command read Object Object Input input throws Exception Class Not Found Exception header byte type input read Byte byte method Id byte input read Short Byte String cache Name Byte String read Object input create the object input Cache Rpc Command cache Rpc Command cmd Ext from Stream method Id type cache Name cmd Ext read Command Parameters input cache Rpc Command return cache Rpc Command Override public Integer get Id return Ids 
package org infinispan persistence factory import java util Array List import java util Collections import java util List import org infinispan configuration cache Store Configuration import org infinispan factories scopes Scope import org infinispan factories scopes Scopes import org infinispan util logging Log import org infinispan util logging Log Factory Registry for multiple link Cache Store Factory objects author Sebastian Laskawiec since Scope Scopes public class Cache Store Factory Registry private static final Log log Log Factory get Log Cache Store Factory Registry class private List Cache Store Factory factories Collections synchronized List new Array List Cache Store Factory public Cache Store Factory Registry factories add new Local Class Loader Cache Store Factory Creates new Object based on configuration param store Configuration Cache store configuration return Instance created based on the configuration throws org infinispan commons Cache Configuration Exception when the instance could n t be created public Object create Instance Store Configuration store Configuration for Cache Store Factory factory factories Object instance factory create Instance store Configuration if instance null return instance throw log unable To Instantiate Class store Configuration get Class public Store Configuration process Store Configuration Store Configuration store Configuration for Cache Store Factory factory factories Store Configuration processed Configuration factory process Configuration store Configuration if processed Configuration null return processed Configuration return store Configuration Adds a new factory for processing param cache Store Factory Factory to be added public void add Cache Store Factory Cache Store Factory cache Store Factory if cache Store Factory null throw log unable To Add Null Custom Store factories add cache Store Factory Removes all factories associated to this registry public void clear Factories factories clear 
package org infinispan topology import java io Exception import java io Object Input import java io Object Output import java util Collections import java util List import java util Set import org infinispan commons marshall Instance Reusing Advanced Externalizer import org infinispan commons marshall Marshall Util import org infinispan distribution ch Consistent Hash import org infinispan marshall core Ids import org infinispan remoting transport Address import org infinispan util logging Log import org infinispan util logging Log Factory The status of a cache from a distribution state transfer point of view p The pending can be code null if we do n t have a state transfer in progress p The code topology Id is incremented every time the topology changes e g a member leaves state transfer starts or ends The code rebalance Id is not modified when the consistent hashes are updated without requiring state transfer e g when a member leaves author Dan Berindei since public class Cache Topology private static Log log Log Factory get Log Cache Topology class private static final boolean trace log is Trace Enabled private final int topology Id private final int rebalance Id private final Consistent Hash current private final Consistent Hash pending private final Consistent Hash union private final Phase phase private List Address actual Members private List Persistent persistent Ds public Cache Topology int topology Id int rebalance Id Consistent Hash current Consistent Hash pending Phase phase List Address actual Members List Persistent persistent Ds this topology Id rebalance Id current pending null phase actual Members persistent Ds public Cache Topology int topology Id int rebalance Id Consistent Hash current Consistent Hash pending Consistent Hash union Phase phase List Address actual Members List Persistent persistent Ds if pending null pending get Members contains All current get Members phase Phase throw new Illegal Argument Exception cache topology s pending consistent hash must contain all the current consistent hash s members current current pending pending this topology Id topology Id this rebalance Id rebalance Id this current current this pending pending this union union this phase phase this actual Members actual Members this persistent Ds persistent Ds public int get Topology Id return topology Id The current consistent hash public Consistent Hash get Current return current The future consistent hash Should be code null if there is no rebalance in progress public Consistent Hash get Pending return pending The union of the current and future consistent hashes Should be code null if there is no rebalance in progress public Consistent Hash get Union return union The id of the latest started rebalance public int get Rebalance Id return rebalance Id return The nodes that are members in both consistent hashes if code pending null otherwise the members of the current see get Actual Members public List Address get Members if pending null return pending get Members else if current null return current get Members else return Collections empty List return The nodes that are active members of the cache It should be equal to link get Members when the cache is available and a strict subset if the cache is in degraded mode see org infinispan partitionhandling Availability Mode public List Address get Actual Members return actual Members public List Persistent get Members Persistent Ds return persistent Ds Read operations should always go to the current owners public Consistent Hash get Read Consistent Hash switch phase case assert pending null assert union null return current case return pending case case assert pending null assert union null return current case assert pending null return union case assert union null return pending default throw new Illegal State Exception When there is a rebalance in progress write operations should go to the union of the current and future owners public Consistent Hash get Write Consistent Hash switch phase case assert pending null assert union null return current case return pending case case case case assert pending null assert union null return union default throw new Illegal State Exception Override public boolean equals Object o if this o return true if o null get Class o get Class return false Cache Topology that Cache Topology o if topology Id that topology Id return false if rebalance Id that rebalance Id return false if current null current equals that current that current null return false if pending null pending equals that pending that pending null return false if union null union equals that union that union null return false if actual Members null actual Members equals that actual Members that actual Members null return false return true Override public int hash Code int result topology Id result result rebalance Id result result current null current hash Code result result pending null pending hash Code result result union null union hash Code result result actual Members null actual Members hash Code return result Override public String to String return Cache Topology id topology Id rebalance Id rebalance Id current current pending pending union union phase phase actual Members actual Members persistent Ds persistent Ds public final void log Routing Table Information if trace log tracef Current consistent hash s routing table s current get Routing Table As String if pending null log tracef Pending consistent hash s routing table s pending get Routing Table As String if union null log tracef Union consistent hash s routing table s union get Routing Table As String public Phase get Phase return phase public static class Externalizer extends Instance Reusing Advanced Externalizer Cache Topology Override public void do Write Object Object Output output Cache Topology cache Topology throws Exception output write Int cache Topology topology Id output write Int cache Topology rebalance Id output write Object cache Topology current output write Object cache Topology pending output write Object cache Topology union output write Object cache Topology actual Members output write Object cache Topology persistent Ds Marshall Util marshall Enum cache Topology phase output Override public Cache Topology do Read Object Object Input unmarshaller throws Exception Class Not Found Exception int topology Id unmarshaller read Int int rebalance Id unmarshaller read Int Consistent Hash current Consistent Hash unmarshaller read Object Consistent Hash pending Consistent Hash unmarshaller read Object Consistent Hash union Consistent Hash unmarshaller read Object List Address actual Members List Address unmarshaller read Object List Persistent persistent Ds List Persistent unmarshaller read Object Phase phase Marshall Util unmarshall Enum unmarshaller Phase value Of return new Cache Topology topology Id rebalance Id current pending union phase actual Members persistent Ds Override public Integer get Id return Ids Override public Set Class extends Cache Topology get Type Classes return Collections Class extends Cache Topology singleton Cache Topology class Phase of the rebalance process Using four phases guarantees these properties x write contains all nodes from Tx read this is the requirement for Tx read and x read has non empty subset of nodes that will allow no blocking for read commands reading only entries node owns according to read Old entries should be wiped out only after coming to the link phase public enum Phase Only current should be set this works as both read and write false Used by caches that do n t use phase topology change Pending is used for both read and write true Interim state between read Ch is set locally using previous Topology of said node read whilst write contains all members after merge false Used during state transfer read current write union true Used after state transfer completes read write union false Intermediate state that prevents read pending write union false private static final Phase values Phase values private final boolean rebalance Phase boolean rebalance this rebalance rebalance public boolean is Rebalance return rebalance public static Phase value Of int ordinal return values ordinal 
package org infinispan topology import java io Exception import java io Object Input import java io Object Output import java util Array List import java util List import java util concurrent Completable Future import org infinispan commands Replicable Command import org infinispan commons Cache Exception import org infinispan commons marshall Marshall Util import org infinispan distribution ch Consistent Hash import org infinispan factories annotations Inject import org infinispan partitionhandling Availability Mode import org infinispan remoting responses Exception Response import org infinispan remoting responses Successful Response import org infinispan remoting responses Unsuccessful Response import org infinispan remoting transport Address import org infinispan util logging Log import org infinispan util logging Log Factory control command for all cache membership rebalance operations It is not a code Cache Rpc Command because it needs to run on the coordinator even when the coordinator does n t have a certain cache running author Dan Berindei since public class Cache Topology Control Command implements Replicable Command public enum Type Member to coordinator node is requesting to join the cluster member is signaling that it wants to leave the cluster member is confirming that it has finished a topology change during rebalance This confirmation is sent after topologies with link Cache Topology Phase link Cache Topology Phase and link Cache Topology Phase rebalance phases are installed but not after a topology change with link Cache Topology Phase phase member is requesting a cache shutdown Coordinator to member The coordinator is updating the consistent hash Used to signal the end of rebalancing as well The coordinator is starting a rebalance operation The coordinator is requesting information about the running caches Update the stable topology Tell members to shutdown cache Member to coordinator Enable disable rebalancing check whether rebalancing is enabled Change the availability Query the rebalancing progress private static final Type values private static final Log log Log Factory get Log Cache Topology Control Command class public static final byte private transient Local Topology Manager local Topology Manager private transient Cluster Topology Manager cluster Topology Manager private String cache Name private Type type private Address sender private Cache Join Info join Info private int topology Id private int rebalance Id private Consistent Hash current private Consistent Hash pending private Cache Topology Phase phase private Availability Mode availability Mode private List Address actual Members private List Persistent persistent Ds private Throwable throwable private int view Id For Command Id Uniqueness Test only public Cache Topology Control Command this cache Name null public Cache Topology Control Command String cache Name Type type Address sender int view Id this cache Name cache Name this type type this sender sender this view Id view Id public Cache Topology Control Command String cache Name Type type Address sender Cache Join Info join Info int view Id this cache Name cache Name this type type this sender sender this join Info join Info this view Id view Id public Cache Topology Control Command String cache Name Type type Address sender int topology Id int rebalance Id Throwable throwable int view Id this cache Name cache Name this type type this sender sender this topology Id topology Id this rebalance Id rebalance Id this throwable throwable this view Id view Id public Cache Topology Control Command String cache Name Type type Address sender Availability Mode availability Mode int view Id this cache Name cache Name this type type this sender sender this availability Mode availability Mode this view Id view Id public Cache Topology Control Command String cache Name Type type Address sender Cache Topology cache Topology Availability Mode availability Mode int view Id this cache Name cache Name this type type this sender sender this topology Id cache Topology get Topology Id this rebalance Id cache Topology get Rebalance Id this current cache Topology get Current this pending cache Topology get Pending this phase cache Topology get Phase this availability Mode availability Mode this actual Members cache Topology get Actual Members this persistent Ds cache Topology get Members Persistent Ds this view Id view Id Inject public void init Local Topology Manager local Topology Manager Cluster Topology Manager cluster Topology Manager this local Topology Manager local Topology Manager this cluster Topology Manager cluster Topology Manager Override public Completable Future Object invoke Async throws Throwable final boolean trace log is Trace Enabled Log Factory push cache Name trace try Object response Value do Perform return Completable Future completed Future Successful Response create response Value catch Interrupted Exception e log tracef Command execution s was interrupted because the cache manager is shutting down this return Completable Future completed Future Unsuccessful Response catch Exception t log exception Handling Command this t todo anistor Command Aware Request Dispatcher does not wrap our exceptions so we have to do it instead return Completable Future completed Future new Exception Response t finally Log Factory pop trace private Object do Perform throws Exception switch type member to coordinator case return cluster Topology Manager handle Join cache Name sender join Info view Id case cluster Topology Manager handle Leave cache Name sender view Id return null case cluster Topology Manager handle Rebalance Phase Confirm cache Name sender topology Id throwable view Id return null case cluster Topology Manager handle Shutdown Request cache Name return null coordinator to member case local Topology Manager handle Topology Update cache Name new Cache Topology topology Id rebalance Id current pending phase actual Members persistent Ds availability Mode view Id sender return null case local Topology Manager handle Stable Topology Update cache Name new Cache Topology topology Id rebalance Id current pending Cache Topology Phase actual Members persistent Ds sender view Id return null case local Topology Manager handle Rebalance cache Name new Cache Topology topology Id rebalance Id current pending phase actual Members persistent Ds view Id sender return null case return local Topology Manager handle Status Request view Id case local Topology Manager handle Cache Shutdown cache Name return null rebalance policy control case return cluster Topology Manager is Rebalancing Enabled cache Name case cluster Topology Manager set Rebalancing Enabled cache Name true return true case cluster Topology Manager set Rebalancing Enabled cache Name false return true availability mode case cluster Topology Manager force Availability Mode cache Name availability Mode return true rebalancing status case return cluster Topology Manager get Rebalancing Status cache Name default throw new Cache Exception Unknown cache topology control command type type public String get Cache Name return cache Name public Address get Origin return sender public Type get Type return type public int get Topology Id return topology Id public Consistent Hash get Current return current public Consistent Hash get Pending return pending public Availability Mode get Availability Mode return availability Mode public Throwable get Throwable return throwable public Cache Topology Phase get Phase return phase Override public byte get Command Id return Override public void write To Object Output output throws Exception Marshall Util marshall String cache Name output Marshall Util marshall Enum type output switch type case output write Object sender output write Object join Info output write Int view Id return case output write Object sender output write Int view Id return case output write Object sender output write Object throwable output write Int view Id output write Int topology Id return case output write Object sender output write Object current output write Object pending Marshall Util marshall Enum phase output Marshall Util marshall Collection actual Members output Marshall Util marshall Collection persistent Ds output Marshall Util marshall Enum availability Mode output output write Int topology Id output write Int rebalance Id output write Int view Id return case output write Object sender output write Object current output write Object pending Marshall Util marshall Collection actual Members output Marshall Util marshall Collection persistent Ds output output write Int topology Id output write Int rebalance Id output write Int view Id return case output write Object sender output write Object current output write Object pending Marshall Util marshall Enum phase output Marshall Util marshall Collection actual Members output Marshall Util marshall Collection persistent Ds output output write Int topology Id output write Int rebalance Id output write Int view Id return case output write Int view Id return case Marshall Util marshall Enum availability Mode output return case case case case default Override public void read From Object Input input throws Exception Class Not Found Exception cache Name Marshall Util unmarshall String input type Marshall Util unmarshall Enum input ordinal Type ordinal switch type case sender Address input read Object join Info Cache Join Info input read Object view Id input read Int return case sender Address input read Object view Id input read Int return case sender Address input read Object throwable Throwable input read Object view Id input read Int topology Id input read Int return case sender Address input read Object current Consistent Hash input read Object pending Consistent Hash input read Object phase Marshall Util unmarshall Enum input Cache Topology Phase value Of actual Members Marshall Util unmarshall Collection input Array List new persistent Ds Marshall Util unmarshall Collection input Array List new availability Mode Marshall Util unmarshall Enum input Availability Mode value Of topology Id input read Int rebalance Id input read Int view Id input read Int return case sender Address input read Object current Consistent Hash input read Object pending Consistent Hash input read Object actual Members Marshall Util unmarshall Collection input Array List new persistent Ds Marshall Util unmarshall Collection input Array List new topology Id input read Int rebalance Id input read Int view Id input read Int return case sender Address input read Object current Consistent Hash input read Object pending Consistent Hash input read Object phase Marshall Util unmarshall Enum input Cache Topology Phase value Of actual Members Marshall Util unmarshall Collection input Array List new persistent Ds Marshall Util unmarshall Collection input Array List new topology Id input read Int rebalance Id input read Int view Id input read Int return case view Id input read Int return case availability Mode Marshall Util unmarshall Enum input Availability Mode value Of return case case case case default Override public String to String return Cache Topology Control Command cache cache Name type type sender sender join Info join Info topology Id topology Id rebalance Id rebalance Id current current pending pending availability Mode availability Mode phase phase actual Members actual Members throwable throwable view Id view Id Override public boolean is Return Value Expected return true Override public boolean can Block return true 
package org infinispan interceptors impl import org infinispan commands Visitable Command import org infinispan context Invocation Context import org infinispan interceptors Base Async Interceptor import org infinispan util logging Log import org infinispan util logging Log Factory Always at the end of the chain directly in front of the cache Simply calls into the cache using reflection If the call resulted in a modification add the Modification to the end of the modification list keyed by the current transaction author Bela Ban author Mircea Markus jboss com author Dan Berindei since public class Call Interceptor extends Base Async Interceptor private static final Log log Log Factory get Log Call Interceptor class private static final boolean trace log is Trace Enabled Override public Object visit Command Invocation Context ctx Visitable Command command throws Throwable if trace log tracef Invoking s command get Class get Simple Name return command perform ctx 
package org infinispan client hotrod impl operations import java net Socket Address import java util Set import java util concurrent atomic Atomic Integer import org infinispan client hotrod configuration Configuration import org infinispan client hotrod impl protocol Codec import org infinispan client hotrod impl protocol Header Params import org infinispan client hotrod impl transport Transport import org infinispan client hotrod impl transport Transport Factory import net jcip annotations Immutable Corresponds to clear operation as defined by a href http community jboss org wiki Hot Rod Protocol Hot Rod protocol specification a author Mircea Markus jboss com since Immutable public class Clear Operation extends Retry On Failure Operation Void public Clear Operation Codec codec Transport Factory transport Factory byte cache Name Atomic Integer topology Id int flags Configuration cfg super codec transport Factory cache Name topology Id flags cfg Override protected Transport get Transport int retry Count Set Socket Address failed Servers return transport Factory get Transport failed Servers cache Name Override protected Void execute Operation Transport transport Header Params params write Header transport transport flush read Header And Validate transport params return null 
package org infinispan commons util import java util Iterator import java util Spliterator import java util Spliterators import java util function Consumer import java util stream Stream import java util stream Stream Support This class consists exclusively of static methods that operate on or return closeable interfaces This is helpful when wanting to change a given interface to an appropriate closeable interface since public class Closeables private Closeables Takes a provided closeable iterator and wraps it appropriately so it can be used as a closeable spliterator that will close the iterator when the spliterator is closed param iterator The closeable iterator to change to a spliterator param size The approximate size of the iterator If no size is known link Long should be passed param characteristics The characteristics of the given spliterator as defined on the link Spliterator interface param The type that is the same between the iterator and spliterator return spliterator that when closed will close the provided iterator public static Closeable Spliterator spliterator Closeable Iterator extends iterator long size int characteristics return new Closeable Iterator As Closeable Spliterator iterator size characteristics Creates a closeable spliterator from the given spliterator that does nothing when close is called param spliterator The spliterator to wrap to allow it to become a closeable spliterator param The type of the spliterators return spliterator that does nothing when closed public static Closeable Spliterator spliterator Spliterator spliterator return new Spliterator As Closeable Spliterator spliterator Creates a closeable spliterator that when closed will close the underlying stream as well param stream The stream to change into a closeable spliterator param The type of the stream return spliterator that when closed will also close the underlying stream public static Closeable Spliterator spliterator Stream stream return new Stream To Closeable Spliterator stream Creates a closeable iterator that when closed will close the underlying stream as well param stream The stream to change into a closeable iterator param The type of the stream return An iterator that when closed will also close the underlying stream public static Closeable Iterator iterator Stream extends stream return new Stream To Closeable Iterator stream Creates a closeable iterator from the given iterator that does nothing when close is called param iterator The iterator to wrap to allow it to become a closeable iterator param The type of the iterators return An iterator that does nothing when closed public static Closeable Iterator iterator Iterator extends iterator return new Iterator As Closeable Iterator iterator Creates a stream that when closed will also close the underlying spliterator param spliterator spliterator to back the stream and subsequently close param parallel whether or not the returned stream is parallel or not param the type of the stream return the stream to use public static Stream stream Closeable Spliterator spliterator boolean parallel Stream stream Stream Support stream spliterator parallel stream on Close spliterator close return stream Creates a stream that when closed will also close the underlying iterator param iterator iterator to back the stream and subsequently close param parallel whether or not the returned stream is parallel or not param size the size of the iterator if known otherwise link Long should be passed param characteristics the characteristics of the iterator to be used param the type of the stream return the stream to use public static Stream stream Closeable Iterator iterator boolean parallel long size int characteristics Stream stream Stream Support stream Spliterators spliterator iterator size characteristics parallel stream on Close iterator close return stream private static class Iterator As Closeable Iterator implements Closeable Iterator private final Iterator extends iterator public Iterator As Closeable Iterator Iterator extends iterator this iterator iterator Override public void close This does nothing Override public boolean has Next return iterator has Next Override public next return iterator next Override public void remove iterator remove private static class Spliterator As Closeable Spliterator implements Closeable Spliterator private final Spliterator spliterator public Spliterator As Closeable Spliterator Spliterator spliterator this spliterator spliterator Override public void close Override public boolean try Advance Consumer super action return spliterator try Advance action Override public Spliterator try Split return spliterator try Split Override public long estimate Size return spliterator estimate Size Override public int characteristics return spliterator characteristics private static class Closeable Iterator As Closeable Spliterator extends Spliterator As Closeable Spliterator private final Closeable Iterator extends iterator Closeable Iterator As Closeable Spliterator Closeable Iterator extends iterator long size int characteristics super Spliterators spliterator iterator size characteristics this iterator iterator Override public void close this iterator close private static class Stream To Closeable Iterator extends Iterator As Closeable Iterator private final Stream extends stream public Stream To Closeable Iterator Stream extends stream super stream iterator this stream stream Override public void close stream close private static class Stream To Closeable Spliterator extends Spliterator As Closeable Spliterator private final Stream stream public Stream To Closeable Spliterator Stream stream super stream spliterator this stream stream Override public void close stream close 
package org infinispan stats impl import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import static org infinispan stats impl Stat Keys import java io Serializable import java util Array List import java util Hash Map import java util List import java util Map import java util Set import java util concurrent Completable Future import org infinispan Advanced Cache import org infinispan Cache import org infinispan configuration cache Cache Mode import org infinispan configuration cache Configuration import org infinispan distexec Default Executor Service import org infinispan distexec Distributed Callable import org infinispan eviction Activation Manager import org infinispan eviction Passivation Manager import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan interceptors Async Interceptor import org infinispan interceptors impl Cache Loader Interceptor import org infinispan interceptors impl Cache Writer Interceptor import org infinispan interceptors impl Invalidation Interceptor import org infinispan jmx annotations Display Type import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Attribute import org infinispan jmx annotations Measurement Type import org infinispan jmx annotations Units import org infinispan stats Cluster Cache Stats import org infinispan stats Stats import org infinispan util concurrent locks Lock Manager import org infinispan util logging Log import org infinispan util logging Log Factory Bean object Name Cluster Cache Stats description General cluster statistics such as timings hit miss ratio etc public class Cluster Cache Stats Impl extends Abstract Cluster Stats implements Cluster Cache Stats private static String new String private static final Log log Log Factory get Log Cluster Cache Stats Impl class private Default Executor Service des private Advanced Cache cache private double read Write Ratio private double hit Ratio public Cluster Cache Stats Impl super log Inject public void inject Dependencies Cache cache Configuration configuration this cache cache get Advanced Cache this statistics Enabled configuration jmx Statistics enabled Start public void start this des Security Actions get Default Executor Service cache Stop public void stop if des null des is Shutdown des shutdown Now Override void update Stats throws Exception List Map String Number response List new Array List List Completable Future Map String Number response Futures des submit Everywhere new Distributed Cache Stats Callable for Completable Future Map String Number cf response Futures response List add cf get for String att put Long Attributes response List att put Long Attributes Average response List put Long Attributes Average response List put Long Attributes Average response List put Int Attributes response List put Int Attributes response List long number Of Entries In Memory get Cache Mode cache is Replicated cache get Stats get Current Number Of Entries In Memory long add Double Attributes response List stats Map put number Of Entries In Memory stats Map put cache size update Time Since Start response List update Ratios response List information Override Managed Attribute description Cluster wide total average number of milliseconds for a read operation on the cache display Name Cluster wide total average read time units Units display Type Display Type public long get Average Read Time return get Stat As Long Override Managed Attribute description Cluster wide total average number of milliseconds for a remove operation in the cache display Name Cluster wide total average remove time units Units display Type Display Type public long get Average Remove Time return get Stat As Long Override Managed Attribute description Cluster wide average number of milliseconds for a write operation in the cache display Name Cluster wide average write time units Units display Type Display Type public long get Average Write Time return get Stat As Long Managed Attribute description Cluster wide total number of cache eviction operations display Name Cluster wide total number of cache evictions measurement Type Measurement Type display Type Display Type Override public long get Evictions return get Stat As Long Managed Attribute description Cluster wide total number of cache attribute hits display Name Cluster wide total number of cache hits measurement Type Measurement Type display Type Display Type Override public long get Hits return get Stat As Long Managed Attribute description Cluster wide total percentage hit hit miss ratio for this cache display Name Cluster wide total hit ratio units Units display Type Display Type Override public double get Hit Ratio if is Statistics Enabled fetch Cluster Wide Stats If Needed return hit Ratio else return Override Managed Attribute description Cluster wide total number of cache attribute misses display Name Cluster wide total number of cache misses measurement Type Measurement Type display Type Display Type public long get Misses return get Stat As Long Managed Attribute description Cluster wide total number of entries currently in the cache including passivated entries display Name Cluster wide total number of current cache entries display Type Display Type public int get Number Of Entries return get Stat As Int Override Managed Attribute description Cluster wide total number of entries currently stored in memory display Name Cluster wide total number of in memory cache entries display Type Display Type public int get Current Number Of Entries In Memory return get Stat As Int Managed Attribute description Cluster wide read writes ratio for the cache display Name Cluster wide read write ratio units Units display Type Display Type Override public double get Read Write Ratio if is Statistics Enabled fetch Cluster Wide Stats If Needed return read Write Ratio else return Managed Attribute description Cluster wide total number of cache removal hits display Name Cluster wide total number of cache removal hits measurement Type Measurement Type display Type Display Type Override public long get Remove Hits return get Stat As Long Managed Attribute description Cluster wide total number of cache removals where keys were not found display Name Cluster wide total number of cache removal misses measurement Type Measurement Type display Type Display Type Override public long get Remove Misses return get Stat As Long Managed Attribute description Cluster wide total number of cache attribute put operations display Name Cluster wide total number of cache puts measurement Type Measurement Type display Type Display Type Override public long get Stores return get Stat As Long Managed Attribute description Number of seconds since the first cache node started display Name Number of seconds since the first cache node started measurement Type Measurement Type display Type Display Type Override public long get Time Since Start return get Stat As Long Override public int get Current Number Of Entries return get Number Of Entries Override public long get Total Number Of Entries return get Stores Override Managed Attribute description Amount in bytes of off heap memory used across the cluster for this cache display Name Cluster wide off sheap memory used display Type Display Type public long get Off Heap Memory Used return get Stat As Long Override public long get Retrievals return get Hits get Misses Override public void reset super reset read Write Ratio hit Ratio Managed Attribute description Total number of exclusive locks available in the cluster display Name Cluster wide total number of locks measurement Type Measurement Type display Type Display Type Override public int get Number Of Locks Available return get Stat As Int Managed Attribute description Total number of locks held in the cluster display Name Cluster wide total number of locks held measurement Type Measurement Type display Type Display Type Override public int get Number Of Locks Held return get Stat As Int Override Managed Attribute description The total number of invalidations in the cluster display Name Cluster wide total number of invalidations measurement Type Measurement Type display Type Display Type public long get Invalidations return get Stat As Long Managed Attribute description The total number of activations in the cluster display Name Cluster wide total number of activations measurement Type Measurement Type display Type Display Type Override public long get Activations return get Stat As Long Managed Attribute description The total number of passivations in the cluster display Name Cluster wide total number of passivations measurement Type Measurement Type display Type Display Type Override public long get Passivations return get Stat As Long Managed Attribute description The total number of cacheloader load operations in the cluster display Name Cluster wide total number of cacheloader loads measurement Type Measurement Type display Type Display Type Override public long get Cache Loader Loads return get Stat As Long Managed Attribute description The total number of cacheloader load misses in the cluster display Name Cluster wide total number of cacheloader misses measurement Type Measurement Type display Type Display Type Override public long get Cache Loader Misses return get Stat As Long Managed Attribute description The total number of cachestore store operations in the cluster display Name Cluster wide total number of cachestore stores measurement Type Measurement Type display Type Display Type Override public long get Store Writes return get Stat As Long private void update Time Since Start List Map String Number response List long time Since Start Max for Map String Number m response List Number time Since Start m get if time Since Start long Value time Since Start Max time Since Start Max time Since Start long Value stats Map put time Since Start Max private void update Ratios List Map String Number response List long total Hits long total Retrievals long sum Of All Reads long sum Of All Writes for Map String Number m response List long hits m get long Value long misses m get long Value total Hits hits sum Of All Reads total Hits misses sum Of All Writes m get long Value total Retrievals hits misses this hit Ratio total Retrievals double total Hits total Retrievals this read Write Ratio sum Of All Writes double sum Of All Reads sum Of All Writes private static extends Async Interceptor get First Interceptor Which Extends Advanced Cache cache Class interceptor Class return interceptor Class cast cache get Async Interceptor Chain find Interceptor Extending interceptor Class private static Cache Mode get Cache Mode Cache cache return cache get Cache Configuration clustering cache Mode private static class Distributed Cache Stats Callable implements Distributed Callable Object Object Map String Number Serializable private static final long serial Version private transient Advanced Cache Object Object remote Cache Override public Map String Number call throws Exception Map String Number map new Hash Map Stats stats remote Cache get Stats map put stats get Average Read Time map put stats get Average Write Time map put stats get Average Remove Time map put stats get Evictions map put stats get Hits map put stats get Misses if get Cache Mode remote Cache is Replicated double number Of Entries In Memory stats get Current Number Of Entries In Memory number Of Entries In Memory remote Cache get Cache Configuration clustering hash num Owners map put number Of Entries In Memory map put stats get Off Heap Memory Used map put stats get Stores map put stats get Remove Hits map put stats get Remove Misses map put stats get Time Since Start Lock Manager lock Manager remote Cache get Lock Manager map put lock Manager get Number Of Locks Held number of locks available is not exposed through the Lock Manager interface map put invalidations Invalidation Interceptor invalidation Interceptor get First Interceptor Which Extends remote Cache Invalidation Interceptor class if invalidation Interceptor null map put invalidation Interceptor get Invalidations else map put passivations Passivation Manager p Manager remote Cache get Component Registry get Component Passivation Manager class if p Manager null map put p Manager get Passivations else map put activations Activation Manager a Manager remote Cache get Component Registry get Component Activation Manager class if a Manager null map put a Manager get Activation Count else map put cache loaders Cache Loader Interceptor a Interceptor get First Interceptor Which Extends remote Cache Cache Loader Interceptor class if a Interceptor null map put a Interceptor get Cache Loader Loads map put a Interceptor get Cache Loader Misses else map put map put cache store Cache Writer Interceptor interceptor get First Interceptor Which Extends remote Cache Cache Writer Interceptor class if interceptor null map put interceptor get Writes To The Stores else map put return map Override public void set Environment Cache Object Object cache Set Object input Keys remote Cache cache get Advanced Cache 
package org infinispan topology import static org infinispan util logging Log Factory import java util Array List import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Optional import java util Set import org infinispan Advanced Cache import org infinispan commons Cache Exception import org infinispan commons util Immutables import org infinispan conflict Conflict Manager Factory import org infinispan conflict impl Default Conflict Manager import org infinispan distribution ch Consistent Hash import org infinispan distribution ch Consistent Hash Factory import org infinispan globalstate Scoped Persistent State import org infinispan lifecycle Component Status import org infinispan manager Embedded Cache Manager import org infinispan partitionhandling Availability Mode import org infinispan partitionhandling impl Availability Strategy import org infinispan partitionhandling impl Availability Strategy Context import org infinispan remoting transport Address import org infinispan remoting transport Transport import org infinispan statetransfer Rebalance Type import org infinispan util logging Log import org infinispan util logging Log Factory import net jcip annotations Guarded By Keeps track of a cache s status members current pending consistent hashes and rebalance status author Dan Berindei since public class Cluster Cache Status implements Availability Strategy Context The Hot Rod client starts with topology so we start with to force an update public static final int public static final int private static final Log log Log Factory get Log Cluster Cache Status class private static boolean trace log is Trace Enabled private final Embedded Cache Manager cache Manager private final String cache Name private final Availability Strategy availability Strategy private final Cluster Topology Manager cluster Topology Manager private final Persistent Manager persistent Manager private final boolean resolve Conflicts On Merge private final Rebalance Type rebalance Type private Transport transport private int initial Topology Id Minimal cache clustering configuration private volatile Cache Join Info join Info Cache members some of which may not have received state yet private volatile List Address expected Members Capacity factors for all the members private volatile Map Address Float capacity Factors Cache members that have not yet received state Always included in the members list private volatile List Address joiners Persistent state if it exists private Optional Scoped Persistent State persistent State Cache topology Its consistent hashes contain only members that did receive are receiving state The members of both consistent hashes must be included in the members list private volatile Cache Topology current Topology private volatile Cache Topology stable Topology private volatile Availability Mode availability Mode Availability Mode private volatile List Address queued Rebalance Members private volatile boolean rebalancing Enabled true private volatile boolean rebalance In Progress false private Rebalance Confirmation Collector rebalance Confirmation Collector private Component Status status public Cluster Cache Status Embedded Cache Manager cache Manager String cache Name Availability Strategy availability Strategy Rebalance Type rebalance Type Cluster Topology Manager cluster Topology Manager Transport transport Optional Scoped Persistent State state Persistent Manager persistent Manager boolean resolve Conflicts On Merge this cache Manager cache Manager this cache Name cache Name this availability Strategy availability Strategy this cluster Topology Manager cluster Topology Manager this transport transport this persistent State state this resolve Conflicts On Merge resolve Conflicts On Merge this rebalance Type rebalance Type this current Topology null this stable Topology null this expected Members Collections empty List this capacity Factors Collections empty Map this joiners Collections empty List this persistent Manager persistent Manager state if Present scoped Persistent State rebalancing Enabled false availability Mode Availability Mode status Component Status if trace log tracef Cache s initialized Persisted state s cache Name persistent State is Present public Cache Join Info get Join Info return join Info Override public List Address get Expected Members return expected Members Override public synchronized void queue Rebalance List Address new Members if new Members null new Members is Empty log debugf Queueing rebalance for cache s with members s cache Name new Members queued Rebalance Members new Members start Queued Rebalance public boolean is Total Order return join Info is Total Order public boolean is Distributed return join Info get Cache Mode is Distributed public Map Address Float get Capacity Factors return capacity Factors Override public Cache Topology get Current Topology return current Topology Override public Cache Topology get Stable Topology return stable Topology Override public Availability Mode get Availability Mode return availability Mode Override public synchronized void update Availability Mode List Address actual Members Availability Mode new Availability Mode boolean cancel Rebalance boolean mode Changed set Availability Mode new Availability Mode if mode Changed actual Members equals current Topology get Actual Members log debugf Updating availability for cache s to s cache Name new Availability Mode Consistent Hash new Pending current Topology get Pending Cache Topology Phase new Phase current Topology get Phase if cancel Rebalance new Pending null new Phase Cache Topology Phase rebalance Confirmation Collector null Cache Topology new Topology new Cache Topology current Topology get Topology Id current Topology get Rebalance Id current Topology get Current new Pending new Phase actual Members persistent Manager map Addresses actual Members set Current Topology new Topology cluster Topology Manager broadcast Topology Update cache Name new Topology new Availability Mode is Total Order is Distributed Override public synchronized void update Topologies After Merge Cache Topology current Topology Cache Topology stable Topology Availability Mode availability Mode boolean resolve Conflicts log debugf Updating topologies after merge for cache s current topology s stable topology s availability mode s resolve Conflicts s cache Name current Topology stable Topology availability Mode resolve Conflicts this current Topology current Topology this stable Topology stable Topology this availability Mode availability Mode if current Topology null cluster Topology Manager broadcast Topology Update cache Name current Topology availability Mode is Total Order is Distributed if resolve Conflicts On Merge resolve Conflicts Advanced Cache cache cache Manager get Cache cache Name get Advanced Cache Default Conflict Manager conflict Manager Default Conflict Manager Conflict Manager Factory get cache conflict Manager resolve Conflicts current Topology if stable Topology null cluster Topology Manager broadcast Stable Topology Update cache Name stable Topology is Total Order is Distributed return code true if the joiner was not already a member code false otherwise Guarded By this private boolean add Member Address joiner Cache Join Info join Info if expected Members contains joiner return false Validate if the member is allowed to join if persistent State is Present if join Info get Persistent State Checksum is Present if status Component Status throw log node Without Persistent State Joining Cache With State joiner cache Name else if persistent State get get Checksum join Info get Persistent State Checksum get throw log node With Incompatible State Joining Cache joiner cache Name else if join Info get Persistent State Checksum is Present throw log node With Persistent State Joining Cluster Without State joiner cache Name if this join Info null this join Info join Info Hash Map Address Float new Capacity Factors new Hash Map Address Float capacity Factors new Capacity Factors put joiner join Info get Capacity Factor capacity Factors Immutables immutable Map Wrap new Capacity Factors expected Members immutable Add expected Members joiner persistent Manager add Persistent Address Mapping joiner join Info get Persistent joiners immutable Add joiners joiner if trace log tracef Added joiner s to cache s with persistent uuid s members s joiners s joiner cache Name join Info get Persistent expected Members joiners return true return code true if the leaver was a member code false otherwise Guarded By this private boolean remove Member Address leaver if expected Members contains leaver if trace log tracef Trying to remove node s from cache s but it is not a member members s leaver cache Name expected Members return false expected Members immutable Remove expected Members leaver Hash Map Address Float new Capacity Factors new Hash Map Address Float capacity Factors new Capacity Factors remove leaver capacity Factors Immutables immutable Map Wrap new Capacity Factors joiners immutable Remove joiners leaver if trace log tracef Removed node s from cache s members s joiners s leaver cache Name expected Members joiners return true return code true if the members list has changed code false otherwise Guarded By this private boolean retain Members List Address new Cluster Members if new Cluster Members contains All expected Members if trace log tracef Cluster members updated for cache s no abrupt leavers detected cache members s Existing members s cache Name new Cluster Members expected Members return false expected Members immutable Retain All expected Members new Cluster Members joiners immutable Retain All joiners new Cluster Members if trace log tracef Cluster members updated for cache s members s joiners s cache Name expected Members joiners return true Guarded By this private void set Current Topology Cache Topology new Topology this current Topology new Topology update the joiners list if new Topology null joiners immutable Remove All expected Members new Topology get Current get Members if trace log tracef Cache s topology updated s members s joiners s cache Name current Topology expected Members joiners if new Topology null new Topology log Routing Table Information Guarded By this private void set Stable Topology Cache Topology new Topology this stable Topology new Topology if trace log tracef Cache s stable topology updated members s joiners s topology s cache Name expected Members joiners new Topology private boolean need Consistent Hash Update The list of current members is always included in the list of pending members so we only need to check one list Also returns false if both Hs are null return expected Members equals current Topology get Members private List Address prune Invalid Members List Address possible Members return immutable Retain All possible Members expected Members public boolean is Rebalance In Progress return rebalance Confirmation Collector null public Rebalancing Status get Rebalancing Status if is Rebalance Enabled return Rebalancing Status else if rebalance In Progress return Rebalancing Status else if queued Rebalance Members null return Rebalancing Status else return Rebalancing Status public synchronized void confirm Rebalance Phase Address member int received Topology Id throws Exception if rebalance Confirmation Collector null throw new Cache Exception String format Received invalid rebalance confirmation from s for cache s we do n t have a rebalance in progress member cache Name rebalance Confirmation Collector confirm Phase member received Topology Id Should be called after the members list was updated in any other way link remove Member Address link retain Members etc return code true if the rebalance was confirmed with this update code false if more confirmations are needed or if the rebalance was already confirmed in another way e g the last member confirmed Guarded By this private void update Members if rebalance Confirmation Collector null We rely on the Availability Strategy updating the current topology beforehand rebalance Confirmation Collector update Members current Topology get Members public synchronized void do Handle Cluster View throws Exception Clean up Cluster Cache Status instances once they no longer have any members if current Topology null return List Address new Cluster Members transport get Members boolean cache Members Modified retain Members new Cluster Members availability Strategy on Cluster View Change this new Cluster Members if cache Members Modified update Members Guarded By this called from do Handle Cluster View do Leave confirm Rebalance Phase private void end Rebalance Cache Topology new Topology rebalance In Progress false Cache Topology current Topology get Current Topology if current Topology null log tracef Rebalance finished because there are no more members in cache s cache Name return assert current Topology get Phase is Rebalance int current Topology Id current Topology get Topology Id cluster Wide Rebalance Completed cache Name current Topology Id List Address members current Topology get Members switch rebalance Type case new Topology new Cache Topology current Topology Id current Topology get Rebalance Id current Topology get Current current Topology get Pending Cache Topology Phase members persistent Manager map Addresses members break case new Topology new Cache Topology current Topology Id current Topology get Rebalance Id current Topology get Pending null Cache Topology Phase members persistent Manager map Addresses members break default throw new Illegal State Exception set Current Topology new Topology if new Topology get Phase Cache Topology Phase rebalance Confirmation Collector new Rebalance Confirmation Collector cache Name current Topology Id members this end Read All Phase else rebalance Confirmation Collector null availability Strategy on Rebalance End this to members only cluster Topology Manager broadcast Topology Update cache Name new Topology availability Mode is Total Order is Distributed if new Topology get Phase Cache Topology Phase start Queued Rebalance Guarded By this called from do Handle Cluster View do Leave confirm Rebalance Phase private void end Read All Phase Cache Topology new Topology Cache Topology current Topology get Current Topology assert current Topology null can this happen assert current Topology get Phase Cache Topology Phase List Address members current Topology get Members new Topology new Cache Topology current Topology get Topology Id current Topology get Rebalance Id current Topology get Current current Topology get Pending Cache Topology Phase members persistent Manager map Addresses members set Current Topology new Topology rebalance Confirmation Collector new Rebalance Confirmation Collector cache Name current Topology get Topology Id members this end Read New Phase to members only cluster Topology Manager broadcast Topology Update cache Name new Topology availability Mode is Total Order is Distributed Guarded By this called from do Handle Cluster View do Leave confirm Rebalance Phase private void end Read New Phase Cache Topology new Topology Cache Topology current Topology get Current Topology assert current Topology null assert current Topology get Phase Cache Topology Phase List Address members current Topology get Members new Topology new Cache Topology current Topology get Topology Id current Topology get Rebalance Id current Topology get Pending null Cache Topology Phase members persistent Manager map Addresses members set Current Topology new Topology rebalance Confirmation Collector null cluster Topology Manager broadcast Topology Update cache Name new Topology availability Mode is Total Order is Distributed start Queued Rebalance new Members is n t really used prune Invalid Members uses expected Members Override public synchronized void update Current Topology List Address new Members The current topology might be null just after a joiner became the coordinator if current Topology null create Initial Cache Topology Consistent Hash Factory Consistent Hash consistent Hash Factory get Join Info get Consistent Hash Factory int topology Id current Topology get Topology Id int rebalance Id current Topology get Rebalance Id Consistent Hash current current Topology get Current Consistent Hash pending current Topology get Pending if need Consistent Hash Update log tracef Cache s members list was updated but the cache topology does n t need to change s cache Name current Topology return if new Members is Empty log tracef Cache s no longer has any members removing topology cache Name set Current Topology null set Stable Topology null rebalance Confirmation Collector null Remove the cache from the cache status map in Cluster Topology Manager Impl instead return List Address new Current Members prune Invalid Members current get Members Consistent Hash new Current new Pending null Cache Topology Phase new Phase Cache Topology Phase List Address actual Members if new Current Members is Empty All the current members left try to replace them with the joiners log tracef All current members left re initializing status for cache s cache Name rebalance Confirmation Collector null new Current Members get Expected Members actual Members new Current Members new Current join Info get Consistent Hash Factory create join Info get Hash Function join Info get Num Owners join Info get Num Segments new Current Members get Capacity Factors else Replicated Consistent Hash Factory allocates segments to all its members so we ca n t add any members here new Current consistent Hash Factory update Members current new Current Members get Capacity Factors actual Members new Current Members if pending null new Phase current Topology get Phase new Pending consistent Hash Factory update Members pending new Current Members get Capacity Factors actual Members prune Invalid Members pending get Members Losing members during state transfer could lead to a state where we have more than two topologies concurrently in the cluster We need to make sure that all the topologies are compatible properties set in Cache Topology docs hold we just remove lost members Cache Topology new Topology new Cache Topology topology Id rebalance Id new Current new Pending new Phase actual Members persistent Manager map Addresses actual Members set Current Topology new Topology if rebalance Confirmation Collector null The node that will cancel the state transfer because of another topology update wo n t send topology confirm log debugf Cancelling topology confirmation s because of another topology update rebalance Confirmation Collector rebalance Confirmation Collector null cluster Topology Manager broadcast Topology Update cache Name new Topology availability Mode is Total Order is Distributed private boolean set Availability Mode Availability Mode new Availability Mode if new Availability Mode availability Mode return false log tracef Cache s availability changed s s cache Name availability Mode new Availability Mode availability Mode new Availability Mode return true Helpers for working with immutable lists private List immutable Add List list element List result new Array List list result add element return Collections unmodifiable List result private List immutable Remove List list element List result new Array List list result remove element return Collections unmodifiable List result private List immutable Remove All List list List other List List result new Array List list result remove All other List return Collections unmodifiable List result private List immutable Retain All List list List other List List result new Array List list result retain All other List return Collections unmodifiable List result Override public String to String return Cluster Cache Status cache Name cache Name members expected Members joiners joiners current Topology current Topology rebalance Confirmation Collector rebalance Confirmation Collector public synchronized void do Merge Partitions Map Address Cache Status Response status Responses try if status Responses is Empty throw new Illegal Argument Exception Should have at least one current topology Hash Map Address Cache Join Info join Infos new Hash Map Set Cache Topology current Topologies new Hash Set Set Cache Topology stable Topologies new Hash Set for Map Entry Address Cache Status Response e status Responses entry Set Address sender e get Key Cache Status Response response e get Value join Infos put sender response get Cache Join Info if response get Cache Topology null current Topologies add response get Cache Topology if response get Stable Topology null stable Topologies add response get Stable Topology log debugf Recovered d partition s for cache s s current Topologies size cache Name current Topologies recover Members join Infos current Topologies stable Topologies Should automatically detect when the coordinator has left and there is only one partition and continue any in progress rebalance without resetting the cache topology availability Strategy on Partition Merge this status Responses catch Exception e log failed To Recover Cache State cache Name e Guarded By this private void recover Members Map Address Cache Join Info join Infos Collection Cache Topology current Topologies Collection Cache Topology stable Topologies expected Members Collections empty List Try to preserve the member order at least for the first partition for Cache Topology topology stable Topologies add Members topology get Members join Infos for Cache Topology topology current Topologies add Members topology get Members join Infos Add the joiners that are not part of any topology at the end for Map Entry Address Cache Join Info e join Infos entry Set if expected Members contains e get Key add Member e get Key e get Value Guarded By this private void add Members Collection Address members To Add Map Address Cache Join Info join Infos for Address member members To Add if expected Members contains member Cache Join Info join Info join Infos get member Some members of the stable current topology may not be members any more if join Info null add Member member join Info Override public String get Cache Name return cache Name public synchronized Cache Status Response do Join Address joiner Cache Join Info join Info throws Exception boolean is First Member get Current Topology null boolean member Joined add Member joiner join Info if is First Member member Joined if trace log tracef Trying to add node s to cache s but it is already a member members s joiners s joiner cache Name expected Members joiners return new Cache Status Response null current Topology stable Topology availability Mode if status Component Status if persistent State is Present if trace log tracef Node s joining Attempting to reform previous cluster joiner We can only allow this to proceed if we have a complete cluster Cache Topology topology restore Cache Topology persistent State get if topology null Change our status status Component Status cluster Topology Manager broadcast Topology Update cache Name topology availability Mode is Total Order is Distributed cluster Topology Manager broadcast Stable Topology Update cache Name topology is Total Order is Distributed return new Cache Status Response null current Topology stable Topology availability Mode else if is First Member This node was the first to join We need to install the initial Cache Topology initial Topology create Initial Cache Topology Change our status status Component Status Do n t need to broadcast the initial update just return the cache topology to the joiner But we do need to broadcast the initial topology as the stable topology cluster Topology Manager broadcast Stable Topology Update cache Name initial Topology is Total Order is Distributed Cache Topology topology Before Rebalance get Current Topology Only trigger availability strategy if we have a topology installed if topology Before Rebalance null availability Strategy on Join this joiner return new Cache Status Response null topology Before Rebalance stable Topology availability Mode Guarded By this protected Cache Topology restore Cache Topology Scoped Persistent State state if trace log tracef Attempting to restore for cache s cache Name Consistent Hash persisted join Info get Consistent Hash Factory from Persistent State state remap Addresses persistent Manager persistent To Address if persisted null get Expected Members contains All persisted get Members if trace log tracef Could not restore for cache s one or more addresses are missing cache Name return null if get Expected Members size persisted get Members size List Address extraneous Members new Array List get Expected Members extraneous Members remove All persisted get Members throw log extraneous Members Join Restored Cache extraneous Members cache Name Cache Topology initial Topology new Cache Topology initial Topology Id persisted null Cache Topology Phase persisted get Members persistent Manager map Addresses persisted get Members set Current Topology initial Topology set Stable Topology initial Topology rebalancing Enabled true availability Mode Availability Mode return initial Topology Guarded By this protected Cache Topology create Initial Cache Topology log tracef Initializing status for cache s cache Name List Address initial Members get Expected Members Consistent Hash initial join Info get Consistent Hash Factory create join Info get Hash Function join Info get Num Owners join Info get Num Segments initial Members get Capacity Factors Cache Topology initial Topology new Cache Topology initial Topology Id initial null Cache Topology Phase initial Members persistent Manager map Addresses initial Members set Current Topology initial Topology set Stable Topology initial Topology return initial Topology public synchronized boolean do Leave Address leaver throws Exception if current Topology null return false boolean actual Leaver remove Member leaver if actual Leaver return false availability Strategy on Graceful Leave this leaver update Members return expected Members is Empty public synchronized void start Queued Rebalance if queued Rebalance Members null We do n t have a queued rebalance We may need to broadcast a stable topology update if stable Topology null stable Topology get Topology Id current Topology get Topology Id stable Topology current Topology log tracef Updating stable topology for cache s s cache Name stable Topology cluster Topology Manager broadcast Stable Topology Update cache Name stable Topology is Total Order is Distributed return Cache Topology cache Topology get Current Topology if is Rebalance Enabled log tracef Postponing rebalance for cache s rebalancing is disabled cache Name return if rebalance Confirmation Collector null log tracef Postponing rebalance for cache s there s already a topology change in progress s cache Name rebalance Confirmation Collector return if queued Rebalance Members is Empty log tracef Ignoring request to rebalance cache s it does n t have any member cache Name return List Address new Members new Array List Address queued Rebalance Members queued Rebalance Members null log tracef Rebalancing consistent hash for cache s members are s cache Name new Members if cache Topology null create Initial Cache Topology return int new Topology Id cache Topology get Topology Id int new Rebalance Id cache Topology get Rebalance Id Consistent Hash current cache Topology get Current if current null There was one node in the cache before and it left after the rebalance was triggered but before the rebalance actually started log tracef Ignoring request to rebalance cache s it does n t have a consistent hash cache Name return if expected Members contains All new Members new Members remove All expected Members log tracef Ignoring request to rebalance cache s we have new leavers s cache Name new Members return Consistent Hash Factory ch Factory get Join Info get Consistent Hash Factory This update will only add the joiners to the we have already checked that we do n t have leavers Consistent Hash updated Members ch Factory update Members current new Members get Capacity Factors Consistent Hash balanced ch Factory rebalance updated Members boolean update Topology false boolean rebalance false if rebalance Type Rebalance Type update Topology true else if balanced equals current log tracef The balanced is the same as the current not rebalancing update Topology cache Topology get Pending null else rebalance true if update Topology Cache Topology new Topology new Cache Topology new Topology Id cache Topology get Rebalance Id balanced null Cache Topology Phase balanced get Members persistent Manager map Addresses balanced get Members log tracef Updating cache s topology without rebalance s cache Name new Topology set Current Topology new Topology cluster Topology Manager broadcast Topology Update cache Name new Topology get Availability Mode is Total Order is Distributed else if rebalance Cache Topology Phase new Phase switch rebalance Type case new Phase Cache Topology Phase break case new Phase Cache Topology Phase break default throw new Illegal State Exception Cache Topology new Topology new Cache Topology new Topology Id new Rebalance Id current balanced new Phase balanced get Members persistent Manager map Addresses balanced get Members log tracef Updating cache s topology for rebalance s cache Name new Topology set Current Topology new Topology rebalance In Progress true assert rebalance Confirmation Collector null rebalance Confirmation Collector new Rebalance Confirmation Collector cache Name new Topology get Topology Id new Topology get Members this end Rebalance cluster Topology Manager broadcast Rebalance Start cache Name new Topology is Total Order is Distributed public boolean is Rebalance Enabled return rebalancing Enabled cluster Topology Manager is Rebalancing Enabled public synchronized void set Rebalance Enabled boolean enabled rebalancing Enabled enabled if rebalancing Enabled log debugf Rebalancing is now enabled for cache s cache Name start Queued Rebalance else log debugf Rebalancing is now disabled for cache s cache Name public void force Rebalance queue Rebalance get Current Topology get Members start Queued Rebalance public void force Availability Mode Availability Mode new Availability Mode availability Strategy on Manual Availability Change this new Availability Mode public synchronized void shutdown Cache throws Exception if status Component Status status Component Status cluster Topology Manager set Rebalancing Enabled cache Name false cluster Topology Manager broadcast Shutdown Cache cache Name this get Current Topology this is Total Order this is Distributed status Component Status public synchronized void set Initial Topology Id int initial Topology Id this initial Topology Id initial Topology Id 
package org infinispan notifications cachelistener cluster import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import org infinispan Cache import org infinispan commons marshall Abstract Externalizer import org infinispan commons marshall Marshall Util import org infinispan marshall core Ids import org infinispan metadata Metadata import org infinispan notifications cachelistener event Cache Entry Created Event import org infinispan notifications cachelistener event Cache Entry Event import org infinispan notifications cachelistener event Cache Entry Expired Event import org infinispan notifications cachelistener event Cache Entry Modified Event import org infinispan notifications cachelistener event Cache Entry Removed Event import org infinispan notifications cachelistener event Transactional Event import org infinispan notifications cachelistener event impl Event Impl import org infinispan remoting transport Address import org infinispan transaction xa Global Transaction This is an event designed for use with cluster listeners solely This is the event that is serialized across the wire when sending the event back to the node where the cluster listener is registered You should only create a Cluster Event through the use of the link Cluster Event from Event Cache Entry Event method author wburns since public class Cluster Event implements Cache Entry Created Event Cache Entry Removed Event Cache Entry Modified Event Cache Entry Expired Event transient Cache cache private final key private final value private final old Value private final Metadata metadata private final Type type private final Global Transaction transaction private final Address origin private final boolean command Retried public static Cluster Event from Event Cache Entry Event event if event instanceof Cluster Event return Cluster Event event old Value null Type event Type event get Type boolean command Retried switch event Type case old Value Cache Entry Removed Event event get Old Value command Retried Cache Entry Removed Event event is Command Retried break case command Retried Cache Entry Created Event event is Command Retried break case command Retried Cache Entry Modified Event event is Command Retried break case Expired does n t have a retry command Retried false break default throw new Illegal Argument Exception Cluster Event can only be created from a Cache Entry Removed Cache Entry Created or Cache Entry Modified event Global Transaction transaction Transactional Event event get Global Transaction Metadata metadata null if event instanceof Event Impl metadata Event Impl event get Metadata Cluster Event cluster Event new Cluster Event event get Key event get Value old Value metadata event Type event get Cache get Cache Manager get Address transaction command Retried cluster Event cache event get Cache return cluster Event Cluster Event key value old Value Metadata metadata Type type Address origin Global Transaction transaction boolean command Retried this key key this value value this old Value old Value this metadata metadata this type type this origin origin this transaction transaction this command Retried command Retried Override public get Value return value Override public Metadata get Metadata return metadata Override public boolean is Command Retried return command Retried Override public get Old Value return old Value Override public boolean is Created return type Type Override public get Key return key Override public Global Transaction get Global Transaction return transaction Override public boolean is Origin Local if cache null return cache get Cache Manager get Address equals origin return false Override public Type get Type return type Override public boolean is Pre Cluster events are always sent after the value has been updated return false Override public Cache get Cache return cache public static class Externalizer extends Abstract Externalizer Cluster Event Override public Set Class extends Cluster Event get Type Classes return Collections singleton Cluster Event class Override public void write Object Object Output output Cluster Event object throws Exception output write Object object key output write Object object value output write Object object old Value output write Object object metadata Marshall Util marshall Enum object type output output write Object object origin output write Object object transaction output write Boolean object command Retried Override public Cluster Event read Object Object Input input throws Exception Class Not Found Exception return new Cluster Event input read Object input read Object input read Object Metadata input read Object Marshall Util unmarshall Enum input Type value Of Address input read Object Global Transaction input read Object input read Boolean Override public Integer get Id return Ids Override public boolean equals Object o if this o return true if o null get Class o get Class return false Cluster Event that Cluster Event o if command Retried that command Retried return false if cache null cache equals that cache that cache null return false if key null key equals that key that key null return false if metadata null metadata equals that metadata that metadata null return false if old Value null old Value equals that old Value that old Value null return false if origin null origin equals that origin that origin null return false if transaction null transaction equals that transaction that transaction null return false if type that type return false if value null value equals that value that value null return false return true Override public int hash Code int result cache null cache hash Code result result key null key hash Code result result value null value hash Code result result old Value null old Value hash Code result result metadata null metadata hash Code result result type null type hash Code result result transaction null transaction hash Code result result origin null origin hash Code result result command Retried return result Override public String to String return Cluster Event type type cache cache key key value value old Value old Value transaction transaction retry Command command Retried origin origin 
package org infinispan notifications cachelistener cluster import java io Exception import java io Object Input import java io Object Output import java util Collection import java util Collections import java util Set import java util import org infinispan Cache import org infinispan commons marshall Abstract Externalizer import org infinispan distexec Distributed Callable import org infinispan marshall core Ids import org infinispan util logging Log import org infinispan util logging Log Factory This Distributed Callable is used to invoke a raised notification on the cluster listener that registered to listen for this event author wburns since public class Cluster Event Callable implements Distributed Callable Void private static final Log log Log Factory get Log Cluster Event Callable class private static final boolean trace log is Trace Enabled private transient Cluster Cache Notifier cluster Cache Notifier private final identifier private final Collection extends Cluster Event events public Cluster Event Callable identifier Cluster Event event this identifier Collections singleton event public Cluster Event Callable identifier Collection extends Cluster Event events this identifier identifier this events events Override public Void call throws Exception if trace log tracef Received cluster event s s notifying cluster listener with id s events identifier cluster Cache Notifier notify Cluster Listeners events identifier return null Override public void set Environment Cache cache Set input Keys this cluster Cache Notifier cache get Advanced Cache get Component Registry get Component Cluster Cache Notifier class for Cluster Event event events event cache cache Override public String to String final String Builder sb new String Builder Cluster Event Callable sb append identifier append identifier sb append events append events sb append return sb to String public static class Externalizer extends Abstract Externalizer Cluster Event Callable Override public Set Class extends Cluster Event Callable get Type Classes return Collections singleton Cluster Event Callable class Override public void write Object Object Output output Cluster Event Callable object throws Exception output write Object object identifier output write Object object events Override public Cluster Event Callable read Object Object Input input throws Exception Class Not Found Exception return new Cluster Event Callable input read Object Collection extends Cluster Event input read Object Override public Integer get Id return Ids 
package org infinispan configuration cache import java util concurrent Time Unit import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set Defines clustered characteristics of the cache author pmuir public class Clustering Configuration public static final Attribute Definition Cache Mode Attribute Definition builder cache Mode Cache Mode immutable build public static final Attribute Definition Long Attribute Definition builder remote Timeout Time Unit to Millis build public static final Attribute Definition Integer Attribute Definition builder invalidation Batch Size immutable build static Attribute Set attribute Definition Set return new Attribute Set Clustering Configuration class private final Attribute Cache Mode cache Mode private final Hash Configuration hash Configuration private final Configuration l Configuration private final State Transfer Configuration state Transfer Configuration private final Sync Configuration sync Configuration private final Partition Handling Configuration partition Handling Configuration private final Attribute Set attributes Clustering Configuration Attribute Set attributes Hash Configuration hash Configuration Configuration l Configuration State Transfer Configuration state Transfer Configuration Sync Configuration sync Configuration Partition Handling Configuration partition Handling Strategy this attributes attributes check Protection this cache Mode attributes attribute this hash Configuration hash Configuration this l Configuration l Configuration this state Transfer Configuration state Transfer Configuration this sync Configuration sync Configuration this partition Handling Configuration partition Handling Strategy Cache mode See link Cache Mode for information on the various cache modes available public Cache Mode cache Mode return cache Mode get This is the timeout used to wait for an acknowledgment when making a remote call after which the call is aborted and an exception is thrown public long remote Timeout return sync Configuration repl Timeout This is the timeout used to wait for an acknowledgment when making a remote call after which the call is aborted and an exception is thrown public void remote Timeout long timeout Millis sync Configuration repl Timeout timeout Millis Configures cluster s behaviour in the presence of partitions or node failures public Partition Handling Configuration partition Handling return partition Handling Configuration public String cache Mode String return cache Mode null none cache Mode to String For scattered cache the threshold after which batched invalidations are sent public int invalidation Batch Size return attributes attribute get Configure hash sub element public Hash Configuration hash return hash Configuration This method allows configuration of the cache for distributed caches When this method is called it automatically enables So if you want it to be disabled make sure you call link org infinispan configuration cache Configuration Builder disable public Configuration l return l Configuration Configure sync sub element Once this method is invoked users can not subsequently invoke code async code as two are mutually exclusive deprecated Since the code repl Timeout attribute is now in link Clustering Configuration Deprecated public Sync Configuration sync return sync Configuration public State Transfer Configuration state Transfer return state Transfer Configuration public Attribute Set attributes return attributes Override public String to String return Clustering Configuration hash Configuration hash Configuration l Configuration l Configuration state Transfer Configuration state Transfer Configuration sync Configuration sync Configuration partition Handling Configuration partition Handling Configuration attributes attributes Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Clustering Configuration other Clustering Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false if hash Configuration null if other hash Configuration null return false else if hash Configuration equals other hash Configuration return false if l Configuration null if other l Configuration null return false else if l Configuration equals other l Configuration return false if partition Handling Configuration null if other partition Handling Configuration null return false else if partition Handling Configuration equals other partition Handling Configuration return false if state Transfer Configuration null if other state Transfer Configuration null return false else if state Transfer Configuration equals other state Transfer Configuration return false if sync Configuration null if other sync Configuration null return false else if sync Configuration equals other sync Configuration return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code result prime result hash Configuration null hash Configuration hash Code result prime result l Configuration null l Configuration hash Code result prime result partition Handling Configuration null partition Handling Configuration hash Code result prime result state Transfer Configuration null state Transfer Configuration hash Code result prime result sync Configuration null sync Configuration hash Code return result 
package org infinispan configuration cache import static org infinispan configuration cache Clustering Configuration import static org infinispan configuration cache Clustering Configuration import java util Arrays import java util concurrent Time Unit import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration import org infinispan util logging Log import org infinispan util logging Log Factory Defines clustered characteristics of the cache author pmuir public class Clustering Configuration Builder extends Abstract Configuration Child Builder implements Clustering Configuration Child Builder Builder Clustering Configuration private static final Log log Log Factory get Log Clustering Configuration Builder class Log class private final Hash Configuration Builder hash Configuration Builder private final Configuration Builder l Configuration Builder private final State Transfer Configuration Builder state Transfer Configuration Builder private final Sync Configuration Builder sync Configuration Builder private final Partition Handling Configuration Builder partition Handling Configuration Builder private final Attribute Set attributes Clustering Configuration Builder Configuration Builder builder super builder this attributes Clustering Configuration attribute Definition Set this hash Configuration Builder new Hash Configuration Builder this this l Configuration Builder new Configuration Builder this this state Transfer Configuration Builder new State Transfer Configuration Builder this this sync Configuration Builder new Sync Configuration Builder this this partition Handling Configuration Builder new Partition Handling Configuration Builder this Cache mode See link Cache Mode for information on the various cache modes available public Clustering Configuration Builder cache Mode Cache Mode cache Mode attributes attribute set cache Mode return this public Cache Mode cache Mode return attributes attribute get This is the timeout used to wait for an acknowledgment when making a remote call after which the call is aborted and an exception is thrown public Clustering Configuration Builder remote Timeout long l sync Configuration Builder repl Timeout l return this This is the timeout used to wait for an acknowledgment when making a remote call after which the call is aborted and an exception is thrown public Clustering Configuration Builder remote Timeout long l Time Unit unit return remote Timeout unit to Millis l For scattered cache the threshold after which batched invalidations are sent public Clustering Configuration Builder invalidation Batch Size int size attributes attribute set size return this Configure hash sub element Override public Hash Configuration Builder hash return hash Configuration Builder This method allows configuration of the cache for distributed caches should be explicitly enabled by calling link Configuration Builder enable Override public Configuration Builder l return l Configuration Builder Configure the code state Transfer sub element for distributed and replicated caches It does n t have any effect on or mode caches Override public State Transfer Configuration Builder state Transfer return state Transfer Configuration Builder Override public Sync Configuration Builder sync if cache Mode is Synchronous throw log sync Properties Config On Async Cache return sync Configuration Builder Override public Partition Handling Configuration Builder partition Handling return partition Handling Configuration Builder Override public void validate for Builder validatable Arrays as List hash Configuration Builder l Configuration Builder sync Configuration Builder state Transfer Configuration Builder partition Handling Configuration Builder validatable validate if cache Mode is Scattered if hash num Owners hash is Num Owners Set throw log scattered Cache Needs Single Owner hash num Owners org infinispan transaction Transaction Mode transaction Mode transaction transaction Mode if transaction Mode null transaction Mode is Transactional throw log scattered Cache Is Non Transactional if cache Mode is Scattered attributes attribute is Modified throw log invalidation Batch Size Applies On Non Scattered Override public void validate Global Configuration global Config if cache Mode is Clustered global Config transport transport null throw log missing Transport Configuration for Configuration Child Builder validatable Arrays as List hash Configuration Builder l Configuration Builder sync Configuration Builder state Transfer Configuration Builder partition Handling Configuration Builder validatable validate global Config Override public Clustering Configuration create return new Clustering Configuration attributes protect hash Configuration Builder create l Configuration Builder create state Transfer Configuration Builder create sync Configuration Builder create partition Handling Configuration Builder create Override public Clustering Configuration Builder read Clustering Configuration template attributes read template attributes hash Configuration Builder read template hash l Configuration Builder read template l state Transfer Configuration Builder read template state Transfer sync Configuration Builder read template sync partition Handling Configuration Builder read template partition Handling return this Override public String to String return Clustering Configuration Builder hash Configuration Builder hash Configuration Builder l Configuration Builder l Configuration Builder state Transfer Configuration Builder state Transfer Configuration Builder sync Configuration Builder sync Configuration Builder partition Handling Configuration Builder partition Handling Configuration Builder attributes attributes 
package org infinispan interceptors locking import static org infinispan transaction impl Write Skew Helper perform Total Order Write Skew Check And Return New Versions import static org infinispan transaction impl Write Skew Helper perform Write Skew Check And Return New Versions import java util Array List import java util Collection import java util Collections import java util List import org infinispan commands Flag Affected Command import org infinispan commands tx Versioned Prepare Command import org infinispan commands tx totalorder Total Order Prepare Command import org infinispan commands write Clear Command import org infinispan commands write Write Command import org infinispan configuration cache Cache Mode import org infinispan configuration cache Configuration import org infinispan container Data Container import org infinispan container entries Cache Entry import org infinispan container entries Clear Cache Entry import org infinispan container entries Internal Cache Entry import org infinispan container entries Entry import org infinispan container versioning Entry Versions Map import org infinispan container versioning Version Generator import org infinispan context Flag import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan context impl Tx Invocation Context import org infinispan distribution Distribution Manager import org infinispan distribution Localized Cache Topology import org infinispan factories annotations Inject import org infinispan factories scopes Scope import org infinispan factories scopes Scopes import org infinispan functional impl Functional Notifier import org infinispan metadata Metadata import org infinispan metadata impl Metadata import org infinispan notifications cachelistener Cache Notifier import org infinispan notifications cachelistener Notify Helper import org infinispan persistence manager Persistence Manager import org infinispan remoting transport Address import org infinispan remoting transport Local Mode Address import org infinispan remoting transport Transport import org infinispan statetransfer Commit Manager import org infinispan statetransfer State Transfer Lock import org infinispan transaction impl Write Skew Helper import org infinispan transaction xa Cache Transaction import org infinispan util Time Service Abstractization for logic related to different clustering modes replicated or distributed This implements the a href http en wikipedia org wiki Bridge pattern Bridge a pattern as described by the Go this plays the role of the b Implementor b and various Locking Interceptors are the b Abstraction b author Mircea Markus author Pedro Ruivo Scope Scopes public interface Clustering Dependent Logic enum Commit Do not commit the entry false false Commit the entry but this node is not an owner therefore listeners should not be fired true false Commit the entry this is the owner true true private boolean commit private boolean local Commit boolean commit boolean local this commit commit this local local public boolean is Commit return commit public boolean is Local return local return information about the location of keys Localized Cache Topology get Cache Topology deprecated Since please use code get Cache Topology is Write Owner key instead Deprecated default boolean local Node Is Owner Object key return get Cache Topology is Write Owner key deprecated Since please use code get Cache Topology get Distribution key is Primary instead Deprecated default boolean local Node Is Primary Owner Object key return get Cache Topology get Distribution key is Primary deprecated Since please use code get Cache Topology get Distribution Info key primary instead Deprecated default Address get Primary Owner Object key return get Cache Topology get Distribution key primary void commit Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation Commit commit Type Flag Affected Command command Invocation Context ctx Object key boolean removed deprecated Since please use code get Cache Topology get Write Owners keys instead Deprecated default Collection Address get Owners Collection Object keys return get Cache Topology get Write Owners keys deprecated Since please use code get Cache Topology get Write Owners key instead Deprecated default Collection Address get Owners Object key return get Cache Topology get Write Owners key Entry Versions Map create New Versions And Check For Write Skews Version Generator version Generator Tx Invocation Context context Versioned Prepare Command prepare Command Address get Address abstract class Abstract Clustering Dependent Logic implements Clustering Dependent Logic protected Distribution Manager distribution Manager protected Data Container Object Object data Container protected Cache Notifier Object Object notifier protected boolean total Order private Write Skew Helper Key Specific Logic key Specific Logic protected Commit Manager commit Manager protected Persistence Manager persistence Manager protected Time Service time Service protected Functional Notifier Object Object functional Notifier Inject public void init Data Container Object Object data Container Cache Notifier Object Object notifier Configuration configuration Commit Manager commit Manager Persistence Manager persistence Manager Time Service time Service Functional Notifier Object Object functional Notifier Distribution Manager distribution Manager this data Container data Container this notifier notifier this total Order configuration transaction transaction Protocol is Total Order this distribution Manager distribution Manager this key Specific Logic init Key Specific Logic total Order this commit Manager commit Manager this persistence Manager persistence Manager this time Service time Service this functional Notifier functional Notifier Override public Entry Versions Map create New Versions And Check For Write Skews Version Generator version Generator Tx Invocation Context context Versioned Prepare Command prepare Command return total Order total Order Create New Versions And Check For Write Skews version Generator context prepare Command clustered Create New Versions And Check For Write Skews version Generator context prepare Command Override public final void commit Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation if entry instanceof Clear Cache Entry noinspection unchecked commit Clear Command data Container Clear Cache Entry Object Object entry ctx command else commit Single Entry entry command ctx track Flag l Invalidation private void commit Clear Command Data Container Object Object data Container Clear Cache Entry Object Object cache Entry Invocation Context context Flag Affected Command command List Internal Cache Entry Object Object copy Entries new Array List data Container size Including Expired data Container iterator for Each Remaining copy Entries add cache Entry commit data Container for Internal Cache Entry entry copy Entries notifier notify Cache Entry Removed entry get Key entry get Value entry get Metadata false context command protected abstract void commit Single Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation Override public Commit commit Type Flag Affected Command command Invocation Context ctx Object key boolean removed ignore locality for removals even if skip Ownership Check is not true if command null command has Any Flag Flag Bit Sets return Commit boolean transactional ctx is In Tx Scope command null command has Any Flag Flag Bit Sets When a command is local mode it does not get written by replicating origin primary backup but when origin backup it s written right from the original context Clear Command is also broadcast to all nodes from originator and on originator it should remove entries for which this node is backup owner even though it did not get the removal from primary owner if transactional ctx is Origin Local command null command has Any Flag Flag Bit Sets command instanceof Clear Command During entries whose ownership is lost are invalidated by Invalidate Command and at that point we re no longer owners the only information is that the origin is local and the entry is removed if get Cache Topology is Write Owner key return Commit else if removed return Commit else in non tx mode on backup we do n t commit in original context backup command has its own context return get Cache Topology get Distribution key is Primary Commit Commit return Commit protected abstract Write Skew Helper Key Specific Logic init Key Specific Logic boolean total Order private Entry Versions Map total Order Create New Versions And Check For Write Skews Version Generator version Generator Tx Invocation Context context Versioned Prepare Command prepare Command if context is Origin Local throw new Illegal State Exception This must not be reached Entry Versions Map updated Version Map new Entry Versions Map if Total Order Prepare Command prepare Command skip Write Skew Check updated Version Map perform Total Order Write Skew Check And Return New Versions prepare Command data Container persistence Manager version Generator context key Specific Logic time Service for Write Command c prepare Command get Modifications for Object k c get Affected Keys if key Specific Logic perform Check On Key k if updated Version Map contains Key k updated Version Map put k null context get Cache Transaction set Updated Entry Versions updated Version Map return updated Version Map private Entry Versions Map clustered Create New Versions And Check For Write Skews Version Generator version Generator Tx Invocation Context context Versioned Prepare Command prepare Command Perform a write skew check on mapped entries Entry Versions Map uv perform Write Skew Check And Return New Versions prepare Command data Container persistence Manager version Generator context key Specific Logic time Service Cache Transaction cache Transaction context get Cache Transaction Entry Versions Map uv Old cache Transaction get Updated Entry Versions if uv Old null uv Old is Empty uv Old put All uv uv uv Old cache Transaction set Updated Entry Versions uv return uv is Empty null uv Override public Localized Cache Topology get Cache Topology return distribution Manager get Cache Topology Override public Address get Address return get Cache Topology get Local Address This logic is used in local mode caches class Local Logic extends Abstract Clustering Dependent Logic private Localized Cache Topology local Topology Inject public void init Transport transport Address address transport null transport get Address Local Mode Address this local Topology Localized Cache Topology make Singleton Topology Cache Mode address Override public Localized Cache Topology get Cache Topology return local Topology Override public Address get Address return local Topology get Local Address Override protected void commit Single Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation Cache flags before they re reset Can the reset be done after notification instead boolean created entry is Created boolean removed entry is Removed boolean expired if removed entry instanceof Entry expired Entry entry is Expired else expired false Internal Cache Entry previous Entry data Container peek entry get Key Object previous Value null Metadata previous Metadata null if previous Entry null previous Value previous Entry get Value previous Metadata previous Entry get Metadata commit Manager commit entry track Flag l Invalidation ctx Notify after events if necessary Notify Helper entry Committed notifier functional Notifier created removed expired entry ctx command previous Value previous Metadata Override protected Write Skew Helper Key Specific Logic init Key Specific Logic boolean total Order return key true This logic is used in invalidation mode caches class Invalidation Logic extends Abstract Clustering Dependent Logic Override protected void commit Single Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation Cache flags before they re reset Can the reset be done after notification instead boolean created entry is Created boolean removed entry is Removed boolean expired if removed entry instanceof Entry expired Entry entry is Expired else expired false Internal Cache Entry previous Entry data Container peek entry get Key Object previous Value null Metadata previous Metadata null if previous Entry null previous Value previous Entry get Value previous Metadata previous Entry get Metadata commit Manager commit entry track Flag l Invalidation ctx Notify after events if necessary Notify Helper entry Committed notifier functional Notifier created removed expired entry ctx command previous Value previous Metadata Override protected Write Skew Helper Key Specific Logic init Key Specific Logic boolean total Order return null not used because write skew check is not allowed with invalidation This logic is used in replicated mode caches class Replication Logic extends Invalidation Logic private State Transfer Lock state Transfer Lock private final Write Skew Helper Key Specific Logic local Node Is Primary Owner key get Cache Topology get Distribution key is Primary Inject public void init State Transfer Lock state Transfer Lock this state Transfer Lock state Transfer Lock Override public Collection Address get Owners Object key return null Override public Collection Address get Owners Collection Object keys if keys is Empty return Collections empty List return null Override protected void commit Single Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation Do n t allow the to change and state transfer to invalidate entries between the ownership check and the commit state Transfer Lock acquire Shared Topology Lock try Commit do Commit commit Type command ctx entry get Key entry is Removed if do Commit is Commit boolean created false boolean removed false boolean expired false if do Commit is Local created entry is Created removed entry is Removed if removed entry instanceof Entry expired Entry entry is Expired Internal Cache Entry previous Entry data Container peek entry get Key Object previous Value null Metadata previous Metadata null if previous Entry null previous Value previous Entry get Value previous Metadata previous Entry get Metadata commit Manager commit entry track Flag l Invalidation ctx if do Commit is Local Notify Helper entry Committed notifier functional Notifier created removed expired entry ctx command previous Value previous Metadata finally state Transfer Lock release Shared Topology Lock Override protected Write Skew Helper Key Specific Logic init Key Specific Logic boolean total Order return total Order in total order all nodes perform the write skew check key true in two phase commit only the primary owner should perform the write skew check local Node Is Primary Owner This logic is used in distributed mode caches class Distribution Logic extends Abstract Clustering Dependent Logic private Configuration configuration private State Transfer Lock state Transfer Lock private final Write Skew Helper Key Specific Logic local Node Is Owner key get Cache Topology is Write Owner key private final Write Skew Helper Key Specific Logic local Node Is Primary Owner key get Cache Topology get Distribution key is Primary Inject public void init Configuration configuration State Transfer Lock state Transfer Lock this configuration configuration this state Transfer Lock state Transfer Lock Override protected void commit Single Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation Do n t allow the to change and state transfer to invalidate entries between the ownership check and the commit state Transfer Lock acquire Shared Topology Lock try Commit do Commit commit Type command ctx entry get Key entry is Removed boolean is Write false if do Commit is Commit configuration clustering l enabled transform for if entry is Removed long lifespan entry get Lifespan if lifespan lifespan configuration clustering l lifespan Metadata metadata entry get Metadata builder lifespan configuration clustering l lifespan build entry set Metadata new Metadata metadata is Write true do Commit Commit else if do Commit is Commit entry get Metadata instanceof Metadata throw new Illegal State Exception Local entries must not have metadata if do Commit is Commit boolean created false boolean removed false boolean expired false if do Commit is Local created entry is Created removed entry is Removed if removed entry instanceof Entry expired Entry entry is Expired use value from the entry Internal Cache Entry previous Entry data Container peek entry get Key Object previous Value null Metadata previous Metadata null if previous Entry null previous Value previous Entry get Value previous Metadata previous Entry get Metadata if is Write previous Entry null previous Entry is Entry do n t overwrite non entry with e g when originator backup and therefore we have two contexts on one node else commit Manager commit entry track Flag l Invalidation is Write ctx if do Commit is Local Notify Helper entry Committed notifier functional Notifier created removed expired entry ctx command previous Value previous Metadata finally state Transfer Lock release Shared Topology Lock Override protected Write Skew Helper Key Specific Logic init Key Specific Logic boolean total Order return total Order in total order all the owners can perform the write skew check local Node Is Owner in two phase commit only the primary owner should perform the write skew check local Node Is Primary Owner class Scattered Logic extends Distribution Logic Override protected void commit Single Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation the logic is in Scattered Distribution Interceptor throw new Unsupported Operation Exception 
package org infinispan interceptors impl import java util Iterator import java util Map import java util concurrent Completable Future import java util function Consumer import org infinispan commands Commands Factory import org infinispan container Data Container import org infinispan container Entry Factory import org infinispan factories annotations Inject import org infinispan remoting responses Cache Not Found Response import org infinispan remoting responses Response import org infinispan remoting responses Successful Response import org infinispan remoting responses Unsure Response import org infinispan remoting transport Address import org infinispan statetransfer All Owners Lost Exception import org infinispan statetransfer State Transfer Manager import org infinispan util concurrent locks Lock Manager Base class for distribution interceptors author anistor redhat com since public abstract class Clustering Interceptor extends Base Rpc Interceptor protected Commands Factory cf protected Entry Factory entry Factory protected Lock Manager lock Manager protected Data Container data Container protected State Transfer Manager state Transfer Manager protected static Response get Single Response Map Address Response response Map Iterator Response it response Map values iterator if it has Next throw All Owners Lost Exception Response response it next if it has Next throw new Illegal State Exception Too many responses response Map return response protected static Successful Response get Successful Response Or Fail Map Address Response response Map Completable Future future Consumer Response cache Not Found Iterator Response it response Map values iterator if it has Next future complete Exceptionally All Owners Lost Exception return null Response response it next if it has Next future complete Exceptionally new Illegal State Exception Too many responses response Map else if response instanceof Successful Response return Successful Response response else if response instanceof Cache Not Found Response response instanceof Unsure Response if cache Not Found null future complete Exceptionally unexpected response else try cache Not Found accept response catch Throwable t future complete Exceptionally t else future complete Exceptionally unexpected response return null protected static Illegal Argument Exception unexpected Response response return new Illegal Argument Exception Unexpected response response Inject public void inject Dependencies Commands Factory cf Entry Factory entry Factory Lock Manager lock Manager Data Container data Container State Transfer Manager state Transfer Manager this cf cf this entry Factory entry Factory this lock Manager lock Manager this data Container data Container this state Transfer Manager state Transfer Manager link complete Exceptionally Throwable must be called from synchronized block since we must not complete the future exceptionally when we re accessing the context if there was an exception and we would retry the context could be accessed concurrently by dangling handlers and retry execution that does not synchronize on the same future When complete Exceptionally executes before the other responses processing the future will be marked as done and as soon as the other responses get into the synchronized block these will check is Done and return If the response is being processed in sync block running complete Exceptionally and the related callbacks will be blocked until we finish the processing protected class Clustered Get All Future extends Completable Future Void public int counter public Clustered Get All Future int counter this counter counter Override public synchronized boolean complete Exceptionally Throwable ex return super complete Exceptionally ex 
package org infinispan notifications cachelistener cluster import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import java util import org infinispan Cache import org infinispan commons marshall Abstract Externalizer import org infinispan distexec Distributed Callable import org infinispan marshall core Ids import org infinispan util logging Log import org infinispan util logging Log Factory This Distributed Callable is used to remove registered link Remote Cluster Listener on each of the various nodes when a cluster listener is unregistered from the cache author wburns since public class Cluster Listener Remove Callable implements Distributed Callable Void private static final Log log Log Factory get Log Cluster Listener Remove Callable class private static final boolean trace log is Trace Enabled private transient Cache cache private final identifier public Cluster Listener Remove Callable identifier this identifier identifier Override public void set Environment Cache cache Set input Keys this cache cache Override public Void call throws Exception Remove the listener from the cache now Set Object listeners cache get Listeners for Object listener listeners if listener instanceof Remote Cluster Listener Remote Cluster Listener cluster Listener Remote Cluster Listener listener if identifier equals cluster Listener get Id if trace log tracef Removing local cluster listener due to parent cluster listener was removed s identifier cluster Listener remove Listener return null public static class Externalizer extends Abstract Externalizer Cluster Listener Remove Callable Override public Set Class extends Cluster Listener Remove Callable get Type Classes return Collections singleton Cluster Listener Remove Callable class Override public void write Object Object Output output Cluster Listener Remove Callable object throws Exception output write Object object identifier Override public Cluster Listener Remove Callable read Object Object Input input throws Exception Class Not Found Exception return new Cluster Listener Remove Callable input read Object Override public Integer get Id return Ids 
package org infinispan notifications cachelistener cluster import java io Exception import java io Object Input import java io Object Output import java lang annotation Annotation import java util Collections import java util Hash Set import java util Set import java util import org infinispan Cache import org infinispan commons marshall Abstract Externalizer import org infinispan commons marshall Marshall Util import org infinispan distexec Distributed Callable import org infinispan distexec Distributed Executor Service import org infinispan encoding Data Conversion import org infinispan factories Component Registry import org infinispan manager Embedded Cache Manager import org infinispan marshall core Ids import org infinispan notifications cachelistener Cache Notifier import org infinispan notifications cachelistener Listener Holder import org infinispan notifications cachelistener filter Cache Event Converter import org infinispan notifications cachelistener filter Cache Event Filter import org infinispan notifications cachelistener filter Cache Event Filter Converter import org infinispan notifications cachemanagerlistener Cache Manager Notifier import org infinispan remoting transport Address import org infinispan util logging Log import org infinispan util logging Log Factory This Distributed Callable is used to install a link Remote Cluster Listener on the resulting node This class also has checks to ensure that if the listener is attempted to be installed from more than source only will be installed as well if a node goes down while installing will also remove the listener author wburns since public class Cluster Listener Replicate Callable implements Distributed Callable Void private static final Log log Log Factory get Log Cluster Listener Replicate Callable class private static final boolean trace log is Trace Enabled private transient Embedded Cache Manager cache Manager private transient Cache Notifier cache Notifier private transient Cache Manager Notifier cache Manager Notifier private transient Distributed Executor Service dist Executor private transient Address our Address private transient Cluster Event Manager event Manager private final identifier private final Cache Event Filter filter private final Cache Event Converter converter private final Address origin private final boolean sync private final Set Class extends Annotation filter Annotations private final Data Conversion key Data Conversion private final Data Conversion value Data Conversion public Cluster Listener Replicate Callable identifier Address origin Cache Event Filter filter Cache Event Converter converter boolean sync Set Class extends Annotation filter Annotations Data Conversion key Data Conversion Data Conversion value Data Conversion this identifier identifier this origin origin this filter filter this converter converter this sync sync this filter Annotations filter Annotations this key Data Conversion key Data Conversion this value Data Conversion value Data Conversion if trace log tracef Created clustered listener replicate callable for s filter Annotations Override public void set Environment Cache cache Set input Keys cache Manager cache get Cache Manager Component Registry component Registry cache get Advanced Cache get Component Registry cache Notifier component Registry get Component Cache Notifier class cache Manager Notifier cache get Cache Manager get Global Component Registry get Component Cache Manager Notifier class dist Executor Security Actions get Default Executor Service cache our Address cache get Cache Manager get Address event Manager component Registry get Component Cluster Event Manager class if filter null component Registry wire Dependencies filter if converter null converter filter component Registry wire Dependencies converter Override public Void call throws Exception Only register listeners if we are n t the ones that registered the cluster listener if our Address equals origin Make sure the origin is around otherwise do n t register the listener some way with identifier maybe if cache Manager get Members contains origin Prevent multiple invocations to get in here at once which should prevent concurrent registration of the same id Note we ca n t use a static due to running more than node in same synchronized cache Notifier boolean already Installed false First make sure the listener is not already installed if it is we do n t do anything for Object installed Listener cache Notifier get Listeners if installed Listener instanceof Remote Cluster Listener identifier equals Remote Cluster Listener installed Listener get Id already Installed true break if already Installed Remote Cluster Listener listener new Remote Cluster Listener identifier origin dist Executor cache Notifier cache Manager Notifier event Manager sync Listener Holder listener Holder new Listener Holder listener key Data Conversion value Data Conversion cache Notifier add Filtered Listener listener Holder filter converter filter Annotations cache Manager Notifier add Listener listener It is possible the member is now gone after registered if so we have to remove just to be sure if cache Manager get Members contains origin cache Notifier remove Listener listener cache Manager Notifier remove Listener listener if trace log tracef Removing local cluster listener for remote cluster listener that was just registered as the origin s went away concurrently origin else if trace log tracef Registered local cluster listener for remote cluster listener from origin s with id s origin identifier else if trace log tracef Local cluster listener from origin s with id s was already installed ignoring origin identifier else if trace log tracef Not registering local cluster listener for remote cluster listener from origin s as the origin went away origin else if trace log trace Not registering local cluster listener as we are the node who registered the cluster listener return null public static class Externalizer extends Abstract Externalizer Cluster Listener Replicate Callable Override public Set Class extends Cluster Listener Replicate Callable get Type Classes return Collections singleton Cluster Listener Replicate Callable class Override public void write Object Object Output output Cluster Listener Replicate Callable object throws Exception output write Object object identifier output write Object object origin output write Object object filter if object filter object converter object filter instanceof Cache Event Filter Converter output write Boolean true else output write Boolean false output write Object object converter output write Boolean object sync Marshall Util marshall Collection object filter Annotations output output write Object object key Data Conversion output write Object object value Data Conversion Override public Cluster Listener Replicate Callable read Object Object Input input throws Exception Class Not Found Exception id input read Object Address address Address input read Object Cache Event Filter filter Cache Event Filter input read Object boolean same Converter input read Boolean Cache Event Converter converter if same Converter converter Cache Event Filter Converter filter else converter Cache Event Converter input read Object boolean sync input read Boolean Set Class extends Annotation listener Annots Marshall Util unmarshall Collection input Hash Set new Data Conversion key Data Conversion Data Conversion input read Object Data Conversion value Data Conversion Data Conversion input read Object return new Cluster Listener Replicate Callable id address filter converter sync listener Annots key Data Conversion value Data Conversion Override public Integer get Id return Ids 
package org infinispan stream impl import java util Collection import java util Collections import java util Map import java util Objects import java util Set import java util concurrent Completable Future import java util concurrent Concurrent Hash Map import java util concurrent Time Unit import java util concurrent atomic Atomic Integer import java util concurrent locks Condition import java util concurrent locks Lock import java util concurrent locks Reentrant Lock import java util function Predicate import java util stream Collectors import org infinispan commands Commands Factory import org infinispan commons Cache Exception import org infinispan commons util Small Int Set import org infinispan distribution ch Consistent Hash import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan remoting responses Response import org infinispan remoting rpc Rpc Manager import org infinispan remoting transport Address import org infinispan remoting transport jgroups Suspect Exception import org infinispan util Range Set import org infinispan util logging Log import org infinispan util logging Log Factory Cluster stream manager that sends all requests using the link Rpc Manager to do the underlying communications param the cache key type public class Cluster Stream Manager Impl implements Cluster Stream Manager protected final Map String Request Tracker currently Running new Concurrent Hash Map protected final Atomic Integer request Id new Atomic Integer protected Rpc Manager rpc protected Commands Factory factory protected Address local Address protected final static Log log Log Factory get Log Cluster Stream Manager Impl class Inject public void inject Rpc Manager rpc Commands Factory factory this rpc rpc this factory factory Start public void start local Address rpc get Address Override public Object remote Stream Operation boolean parallel Distribution boolean parallel Stream Consistent Hash ch Set Integer segments Set keys To Include Map Integer Set keys To Exclude boolean include Loader Terminal Operation operation Results Callback callback Predicate super early Terminate Predicate return common Remote Stream Operation parallel Distribution parallel Stream ch segments keys To Include keys To Exclude include Loader operation callback Stream Request Command Type early Terminate Predicate Override public Object remote Stream Operation Rehash Aware boolean parallel Distribution boolean parallel Stream Consistent Hash ch Set Integer segments Set keys To Include Map Integer Set keys To Exclude boolean include Loader Terminal Operation operation Results Callback callback Predicate super early Terminate Predicate return common Remote Stream Operation parallel Distribution parallel Stream ch segments keys To Include keys To Exclude include Loader operation callback Stream Request Command Type early Terminate Predicate private Object common Remote Stream Operation boolean parallel Distribution boolean parallel Stream Consistent Hash ch Set Integer segments Set keys To Include Map Integer Set keys To Exclude boolean include Loader Segment Aware Operation operation Results Callback callback Stream Request Command Type type Predicate super early Terminate Predicate Map Address Set Integer targets determine Targets ch segments callback String id if targets is Empty id local Address to String request Id get And Increment log tracef Performing remote operations s for id s targets id Request Tracker tracker new Request Tracker callback targets early Terminate Predicate currently Running put id tracker if parallel Distribution submit Async Tasks id targets keys To Exclude parallel Stream keys To Include include Loader type operation else for Map Entry Address Set Integer target Info targets entry Set what if this throws exception Set Integer target Segments target Info get Value Set keys Excluded determine Excluded Keys keys To Exclude target Segments rpc invoke Remotely Collections singleton target Info get Key factory build Stream Request Command id parallel Stream type target Segments keys To Include keys Excluded include Loader operation rpc get Default Rpc Options true else log tracef Not performing remote operation for request as no valid targets for segments s found segments id null return id Override public Object remote Stream Operation boolean parallel Distribution boolean parallel Stream Consistent Hash ch Set Integer segments Set keys To Include Map Integer Set keys To Exclude boolean include Loader Key Tracking Terminal Operation operation Results Callback Collection callback return common Remote Stream Operation parallel Distribution parallel Stream ch segments keys To Include keys To Exclude include Loader operation callback Stream Request Command Type null Override public Object remote Stream Operation Rehash Aware boolean parallel Distribution boolean parallel Stream Consistent Hash ch Set Integer segments Set keys To Include Map Integer Set keys To Exclude boolean include Loader Key Tracking Terminal Operation operation Results Callback Map callback Map Address Set Integer targets determine Targets ch segments callback String id if targets is Empty id local Address to String request Id get And Increment log tracef Performing remote rehash key aware operations s for id s targets id Request Tracker Map tracker new Request Tracker callback targets null currently Running put id tracker if parallel Distribution submit Async Tasks id targets keys To Exclude parallel Stream keys To Include include Loader Stream Request Command Type operation else for Map Entry Address Set Integer target Info targets entry Set Address dest target Info get Key Set Integer target Segments target Info get Value try Keys to exclude is never empty since it utilizes a custom map solution Set keys Excluded determine Excluded Keys keys To Exclude target Segments log tracef Submitting task to s for s excluding keys s dest id keys Excluded Response response rpc invoke Remotely Collections singleton dest factory build Stream Request Command id parallel Stream Stream Request Command Type target Segments keys To Include keys Excluded include Loader operation rpc get Default Rpc Options true values iterator next if response is Successful log tracef Unsuccessful response for s from s making segments s suspect id dest target Segments receive Response id dest true target Segments null catch Exception e boolean was Suspect contained Suspect Exception e if was Suspect log tracef e Encounted exception for s from s id dest throw e else log tracef Exception from s contained a Suspect Exception making all segments s suspect dest target Segments receive Response id dest true target Segments null else log tracef Not performing remote rehash key aware operation for request as no valid targets for segments s found segments id null return id private void submit Async Tasks String id Map Address Set Integer targets Map Integer Set keys To Exclude boolean parallel Stream Set keys To Include boolean include Loader Stream Request Command Type type Object operation for Map Entry Address Set Integer target Info targets entry Set Set Integer segments target Info get Value Set keys Excluded determine Excluded Keys keys To Exclude segments Address dest target Info get Key log tracef Submitting async task to s for s excluding keys s dest id keys Excluded Completable Future Map Address Response completable Future rpc invoke Remotely Async Collections singleton dest factory build Stream Request Command id parallel Stream type segments keys To Include keys Excluded include Loader operation rpc get Default Rpc Options true completable Future when Complete v e if v null Response response v values iterator next if response is Successful log tracef Unsuccessful response for s from s making segments suspect id target Info get Key receive Response id target Info get Key true target Info get Value null else if e null boolean was Suspect contained Suspect Exception e if was Suspect log tracef e Encounted exception for s from s id target Info get Key Request Tracker tracker currently Running get id if tracker null mark Tracker With Exception tracker dest e id else log warnf Unhandled remote stream exception encountered e else log tracef Exception contained a Suspect Exception making all segments s suspect target Info get Value receive Response id target Info get Key true target Info get Value null private boolean contained Suspect Exception Throwable e Throwable cause e boolean was Suspect false Unwrap the exception do if cause instanceof Suspect Exception was Suspect true break while cause cause get Cause null return was Suspect protected static void mark Tracker With Exception Request Tracker tracker Address dest Throwable e Object uuid log tracef Marking tracker to have exception tracker throwable e if dest null tracker last Result dest null if uuid null log tracef Tracker s completed with exception waking sleepers uuid else log trace Tracker completed due to outside cause waking sleepers tracker completion Lock lock try tracker completion Condition signal All finally tracker completion Lock unlock private Set determine Excluded Keys Map Integer Set keys To Exclude Set Integer segments To Use if keys To Exclude is Empty return Collections empty Set Special map only supports get operations return segments To Use stream flat Map s Set keys For Segment keys To Exclude get s if keys For Segment null return keys For Segment stream return null collect Collectors to Set private Map Address Set Integer determine Targets Consistent Hash ch Set Integer segments Results Callback callback if segments null segments new Range Set ch get Num Segments This has to be a concurrent hash map in case if a node completes operation while we are still iterating over the map and submitting to others Map Address Set Integer targets new Concurrent Hash Map for Integer segment segments Address owner ch locate Primary Owner For Segment segment if owner null callback on Segments Lost Collections singleton segment callback request Future Topology else if owner equals local Address targets compute If Absent owner t new Small Int Set add segment return targets Override public boolean is Complete Object id return currently Running contains Key id Override public boolean await Completion Object id long time Time Unit unit throws Interrupted Exception if time throw new Illegal Argument Exception Time must be greater than Objects require Non Null id Identifier must be non null log tracef Awaiting completion of s id boolean completed false long target System nano Time unit to Nanos time Throwable throwable null while target System nano Time Request Tracker tracker currently Running get id if tracker null completed true break if throwable tracker throwable null break tracker completion Lock lock try Check inside lock again just in case if we had a concurrent notification before we got into the lock if currently Running contains Key id completed true throwable tracker throwable break if tracker completion Condition await target System nano Time Time Unit throwable tracker throwable completed false break finally tracker completion Lock unlock log tracef Returning back to caller due to s being completed s id completed if throwable null if throwable instanceof Runtime Exception throw Runtime Exception throwable throw new Cache Exception throwable return completed Override public void forget Operation Object id if id null Request Tracker tracker currently Running remove id if tracker null tracker completion Lock lock try tracker completion Condition signal All finally tracker completion Lock unlock Override public boolean receive Response Object id Address origin boolean complete Set Integer missing Segments response log tracef Received response from s with a completed response s for id s with s suspected segments origin complete id missing Segments Request Tracker tracker currently Running get id if tracker null boolean notify false need to reorganize the tracker to reduce synchronization so it only contains missing segments and completing the tracker synchronized tracker if tracker awaiting Response contains Key origin if missing Segments is Empty tracker missing Segments missing Segments if complete notify tracker last Result origin response else tracker intermediate Results origin response if notify log tracef Marking s as completed id tracker completion Lock lock try currently Running remove id tracker completion Condition signal All finally tracker completion Lock unlock return notify else log tracef Ignoring response as we already received a completed response for s from s id origin return false static class Request Tracker final Results Callback callback final Map Address Set Integer awaiting Response final Lock completion Lock new Reentrant Lock final Condition completion Condition completion Lock new Condition final Predicate super early Terminate Predicate Set Integer missing Segments volatile Throwable throwable Request Tracker Results Callback callback Map Address Set Integer awaiting Response Predicate super early Terminate Predicate this callback callback this awaiting Response awaiting Response this early Terminate Predicate early Terminate Predicate public void intermediate Results Address origin intermediate Result callback on Intermediate Result origin intermediate Result param origin param result return Whether this was the last expected response public boolean last Result Address origin result Set Integer completed Segments awaiting Response get origin if missing Segments null completed Segments remove All missing Segments callback on Completion origin completed Segments result synchronized this if early Terminate Predicate null early Terminate Predicate test result awaiting Response clear else awaiting Response remove origin return awaiting Response is Empty public void missing Segments Set Integer segments synchronized this if missing Segments null missing Segments segments else missing Segments add All segments callback on Segments Lost segments 
package org infinispan topology import static java lang String format import static org infinispan factories Known Component Names import static org infinispan util logging Log Factory import static org infinispan util logging events Messages import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Map Entry import java util Objects import java util Optional import java util Set import java util concurrent Completable Future import java util concurrent Concurrent Map import java util concurrent Count Down Latch import java util concurrent Execution Exception import java util concurrent Executor Service import java util concurrent Time Unit import java util concurrent locks Condition import java util concurrent locks Lock import java util concurrent locks Reentrant Lock import org infinispan commands Replicable Command import org infinispan commons Cache Exception import org infinispan commons util Collection Factory import org infinispan commons util Infinispan Collections import org infinispan configuration cache Cache Mode import org infinispan configuration cache Configuration import org infinispan configuration global Global Configuration import org infinispan executors Limited Executor import org infinispan factories Global Component Registry import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan globalstate Global State Manager import org infinispan globalstate Scoped Persistent State import org infinispan manager Embedded Cache Manager import org infinispan notifications Listener import org infinispan notifications cachemanagerlistener Cache Manager Notifier import org infinispan notifications cachemanagerlistener annotation Merged import org infinispan notifications cachemanagerlistener annotation View Changed import org infinispan notifications cachemanagerlistener event View Changed Event import org infinispan partitionhandling Availability Mode import org infinispan partitionhandling Partition Handling import org infinispan partitionhandling impl Availability Strategy import org infinispan partitionhandling impl Lost Data Check import org infinispan partitionhandling impl Prefer Availability Strategy import org infinispan partitionhandling impl Prefer Consistency Strategy import org infinispan remoting inboundhandler Deliver Order import org infinispan remoting responses Cache Not Found Response import org infinispan remoting responses Exception Response import org infinispan remoting responses Response import org infinispan remoting responses Successful Response import org infinispan remoting rpc Response Filter import org infinispan remoting rpc Response Mode import org infinispan remoting transport Address import org infinispan remoting transport Transport import org infinispan remoting transport jgroups Suspect Exception import org infinispan statetransfer Rebalance Type import org infinispan util concurrent Completable Futures import org infinispan util concurrent Timeout Exception import org infinispan util logging Log import org infinispan util logging Log Factory import org infinispan util logging events Event Log Category import org infinispan util logging events Event Log Manager import org infinispan util logging events Event Logger import net jcip annotations Guarded By The code Cluster Topology Manager implementation author Dan Berindei author Pedro Ruivo since public class Cluster Topology Manager Impl implements Cluster Topology Manager public static final int public static final int private enum Cluster Manager Status boolean is Running return this boolean is Coordinator return this this private static final Log log Log Factory get Log Cluster Topology Manager Impl class private static final boolean trace log is Trace Enabled private Transport transport private Global Configuration global Configuration private Global Component Registry gcr private Cache Manager Notifier cache Manager Notifier private Embedded Cache Manager cache Manager private Executor Service async Transport Executor private Limited Executor view Handling Executor private Event Log Manager event Log Manager private Persistent Manager persistent Manager These need to be volatile because they are sometimes read without holding the view handling lock private volatile int view Id private volatile Cluster Manager Status cluster Manager Status Cluster Manager Status private final Lock cluster Manager Lock new Reentrant Lock private final Condition cluster State Changed cluster Manager Lock new Condition private final Concurrent Map String Cluster Cache Status cache Status Map Collection Factory make Concurrent Map private Cluster View Listener view Listener The global rebalancing status private volatile boolean global Rebalancing Enabled true Inject public void inject Transport transport Component Name Executor Service async Transport Executor Global Configuration global Configuration Global Component Registry gcr Cache Manager Notifier cache Manager Notifier Embedded Cache Manager cache Manager Event Log Manager event Log Manager Persistent Manager persistent Manager this transport transport this async Transport Executor async Transport Executor this global Configuration global Configuration this gcr gcr this cache Manager Notifier cache Manager Notifier this cache Manager cache Manager this event Log Manager event Log Manager this persistent Manager persistent Manager Start priority public void start view Handling Executor new Limited Executor View Handling async Transport Executor view Listener new Cluster View Listener cache Manager Notifier add Listener view Listener The listener already missed the initial view view Handling Executor execute handle Cluster View false transport get View Id fetch Rebalancing Status From Coordinator protected void fetch Rebalancing Status From Coordinator if transport is Coordinator Assume any timeout is because the coordinator does n t have a Command Aware Rpc Dispatcher yet possible with a Groups Channel Lookup and should Connect false and retry Replicable Command command new Cache Topology Control Command null Cache Topology Control Command Type transport get Address Address coordinator null Response response null for int i i i try coordinator transport get Coordinator Map Address Response response Map transport invoke Remotely Collections singleton coordinator command Response Mode get Global Timeout null Deliver Order false response response Map get coordinator break catch Exception e if i e instanceof Timeout Exception log error Reading Rebalancing Status coordinator e response Successful Response create Boolean log debug Timed out waiting for rebalancing status from coordinator trying again if response instanceof Successful Response global Rebalancing Enabled Boolean Successful Response response get Response Value else log error Reading Rebalancing Status coordinator new Cache Exception Objects to String response Stop priority public void stop Stop blocking cache topology commands cluster Manager Lock lock try cluster Manager Status Cluster Manager Status cluster State Changed signal All finally cluster Manager Lock unlock if view Listener null cache Manager Notifier remove Listener view Listener if view Handling Executor null view Handling Executor cancel Queued Tasks Override public Cache Status Response handle Join String cache Name Address joiner Cache Join Info join Info int joiner View Id throws Exception Cluster Cache Status cache Status cluster Manager Lock lock try wait For Joiner View joiner joiner View Id join Info get Timeout if cluster Manager Status is Running log debugf Ignoring join request from s for cache s the local cache manager is shutting down joiner cache Name return null if joiner View Id view Id log debugf Ignoring join request from s for cache s joiner s view id is too old d joiner cache Name joiner View Id return null cache Status init Cache Status If Absent cache Name join Info get Cache Mode finally cluster Manager Lock unlock return cache Status do Join joiner join Info Override public void handle Leave String cache Name Address leaver int view Id throws Exception if cluster Manager Status is Running log debugf Ignoring leave request from s for cache s the local cache manager is shutting down leaver cache Name return Cluster Cache Status cache Status cache Status Map get cache Name if cache Status null This can happen if we ve just become coordinator log tracef Ignoring leave request from s for cache s because it does n t have a cache status entry leaver cache Name return if cache Status do Leave leaver cache Status Map remove cache Name Override public void handle Rebalance Phase Confirm String cache Name Address node int topology Id Throwable throwable int view Id throws Exception if throwable null We could try to update the pending such that nodes reporting errors are not considered to hold any state For now we are just logging the error and proceeding as if the rebalance was successful everywhere log rebalance Error cache Name node topology Id throwable rebalance Completed cache Name node topology Id event Log Manager get Event Logger context cache Name scope node to String info Event Log Category rebalance Phase Confirmed node topology Id Cluster Cache Status cache Status cache Status Map get cache Name if cache Status null log debugf Ignoring rebalance confirmation from s for cache s because it does n t have a cache status entry node cache Name return cache Status confirm Rebalance Phase node topology Id private static class Cache Topology Filter Reuser implements Response Filter Map Cache Topology Cache Topology seen Topologies new Hash Map Map Cache Join Info Cache Join Info seen Infos new Hash Map Override public boolean is Acceptable Response response Address sender if response is Successful Manager Status Response value Manager Status Response Successful Response response get Response Value for Entry String Cache Status Response entry value get Caches entry Set Cache Status Response csr entry get Value Cache Topology cache Topology csr get Cache Topology Cache Topology stable Topology csr get Stable Topology Cache Topology replace Cache Topology seen Topologies get cache Topology if replace Cache Topology null seen Topologies put cache Topology cache Topology replace Cache Topology cache Topology Cache Topology replace Stable Topology If the do n t equal check if we replace note stable Topology can be null if Objects equals cache Topology stable Topology replace Stable Topology seen Topologies get stable Topology if replace Stable Topology null seen Topologies put stable Topology stable Topology replace Stable Topology stable Topology else Since they were equal replace it with the cache topology we are going to use replace Stable Topology replace Cache Topology Cache Join Info info csr get Cache Join Info Cache Join Info replace Info seen Infos get info if replace Info null seen Infos put info info if replace Cache Topology null replace Stable Topology null replace Info null entry set Value new Cache Status Response replace Info null replace Info info replace Cache Topology replace Stable Topology csr get Availability Mode return true Override public boolean need More Responses return true private void handle Cluster View boolean merge View int new View Id try if update Cluster State merge View new View Id return The Limited Executor acts as a critical section so we do n t need to worry about multiple threads if cluster Manager Status Cluster Manager Status if become Coordinator new View Id return if cluster Manager Status Cluster Manager Status If we have recovered the cluster status we rebalance the caches to include minor partitions If we processed a regular view we prune members that left update Cache Members transport get Members catch Throwable t log view Handling Error new View Id t private boolean become Coordinator int new View Id Clean up leftover cache status information from the last time we were coordinator g if the local node was coordinator started a rebalance and then lost coordinator status because of a merge the existing cache statuses may have a rebalance in progress cache Status Map clear try recover Cluster Status new View Id transport get Members cluster Manager Lock lock try if view Id new View Id log debugf View updated while we were recovering the cluster for view d new View Id return false cluster Manager Status Cluster Manager Status notify threads that might be waiting to join cluster State Changed signal All finally cluster Manager Lock unlock catch Interrupted Exception e if trace log tracef Cluster state recovery interrupted because the coordinator is shutting down catch Suspect Exception e if trace log tracef Cluster state recovery interrupted because a member was lost Will retry catch Exception e if cluster Manager Status is Running failed To Recover Cluster State e event Log Manager get Event Logger detail e fatal Event Log Category cluster Recovery Failed transport get Members else log tracef Cluster state recovery failed because the coordinator is shutting down return true private boolean update Cluster State boolean merge View int new View Id cluster Manager Lock lock try if new View Id transport get View Id log tracef Ignoring old cluster view notification s new View Id return false boolean is Coordinator transport is Coordinator boolean became Coordinator is Coordinator cluster Manager Status is Coordinator if trace log tracef Received new cluster view d is Coordinator s old status s Object new View Id is Coordinator cluster Manager Status if is Coordinator cluster Manager Status Cluster Manager Status return false if became Coordinator merge View cluster Manager Status Cluster Manager Status notify threads that might be waiting to join view Id new View Id cluster State Changed signal All finally cluster Manager Lock unlock return true private Cluster Cache Status init Cache Status If Absent String cache Name Cache Mode cache Mode return cache Status Map compute If Absent cache Name name We assume that any cache with partition handling configured is already defined on all the nodes including the coordinator before it starts on any node Lost Data Check lost Data Check if cache Mode is Scattered lost Data Check stable new Members data can be lost if more than one node is lost Set Address lost Members new Hash Set stable get Members lost Members remove All new Members log debugf Stable members s actual members s lost members s stable get Members new Members lost Members return lost Members size else lost Data Check stable new Members data is lost when some segment lost all owners for int i i stable get Num Segments i if Infinispan Collections contains Any new Members stable locate Owners For Segment i return true return false Availability Strategy availability Strategy Configuration cache Configuration cache Manager get Cache Configuration cache Name Partition Handling partition Handling cache Configuration null cache Configuration clustering partition Handling when Split null boolean resolve Conflicts On Merge partition Handling Partition Handling cache Configuration clustering partition Handling merge Policy null if partition Handling null partition Handling Partition Handling availability Strategy new Prefer Consistency Strategy event Log Manager persistent Manager lost Data Check else availability Strategy new Prefer Availability Strategy event Log Manager persistent Manager lost Data Check resolve Conflicts On Merge Optional Global State Manager global State Manager cache Manager get Global Component Registry get Optional Component Global State Manager class Optional Scoped Persistent State persisted State global State Manager flat Map gsm gsm read Scoped State cache Name return new Cluster Cache Status cache Manager cache Name availability Strategy Rebalance Type from cache Mode this transport persisted State persistent Manager resolve Conflicts On Merge Override public void broadcast Rebalance Start String cache Name Cache Topology cache Topology boolean total Order boolean distributed start Rebalance cache Name cache Topology event Log Manager get Event Logger context cache Name scope transport get Address info Event Log Category rebalance Started cache Topology get Topology Id Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address cache Topology null view Id execute On Cluster Async command get Global Timeout total Order distributed private void recover Cluster Status int new View Id final List Address cluster Members throws Exception log debugf Recovering cluster status for view d new View Id Replicable Command command new Cache Topology Control Command null Cache Topology Control Command Type transport get Address new View Id Map Address Object status Responses null Assume any timeout is because one of the nodes did n t have a Command Aware Rpc Dispatcher installed at the time possible with Groups Channel Lookup and should Connect false and retry for int i i i try status Responses execute On Cluster Sync command get Global Timeout false false new Cache Topology Filter Reuser break catch Execution Exception e if i if e get Cause instanceof Timeout Exception log debug Timed out waiting for cluster status responses trying again else if e get Cause instanceof Suspect Exception if transport get Members contains All cluster Members int sleep Time get Global Timeout log debugf e Received an exception from one of the members will try again after d ms sleep Time Thread sleep sleep Time continue throw e log debugf Got d status responses members are s status Responses size cluster Members Map String Map Address Cache Status Response responses By Cache new Hash Map boolean recovered Rebalancing Status true for Map Entry Address Object response Entry status Responses entry Set Address sender response Entry get Key Manager Status Response node Status Manager Status Response response Entry get Value recovered Rebalancing Status node Status is Rebalancing Enabled for Map Entry String Cache Status Response status Entry node Status get Caches entry Set String cache Name status Entry get Key Map Address Cache Status Response cache Responses responses By Cache compute If Absent cache Name k new Hash Map cache Responses put sender status Entry get Value global Rebalancing Enabled recovered Rebalancing Status Compute the new consistent hashes on separate threads int max Threads Runtime get Runtime available Processors Count Down Latch latch new Count Down Latch responses By Cache size Limited Executor cs new Limited Executor Merge new View Id async Transport Executor max Threads for final Map Entry String Map Address Cache Status Response e responses By Cache entry Set Cache Join Info join Info e get Value values stream find Any get get Cache Join Info Cluster Cache Status cache Status init Cache Status If Absent e get Key join Info get Cache Mode cs execute try cache Status do Merge Partitions e get Value finally latch count Down latch await get Global Timeout Time Unit public void update Cache Members List Address new Cluster Members try log tracef Updating cluster members for all the caches New list is s new Cluster Members try If we get a Suspect Exception here it means we will have a new view soon and we can ignore this one confirm Members Available catch Suspect Exception e log tracef Node s left while updating cache members e get Suspect return for Cluster Cache Status cache Status cache Status Map values cache Status do Handle Cluster View catch Exception e if cluster Manager Status is Running log error Updating Members List e private void confirm Members Available throws Exception Replicable Command heartbeat Command new Cache Topology Control Command null Cache Topology Control Command Type transport get Address transport invoke Remotely null heartbeat Command Response Mode get Global Timeout null Deliver Order false Wait until we have received view code joiner View Id and we have finished recovering the cluster state p Returns early if the node is shutting down p This method should be invoked with the lock hold throws Timeout Exception if the timeout expired Guarded By cluster Manager Lock private void wait For Joiner View Address joiner int joiner View Id long timeout throws Interrupted Exception if joiner View Id view Id cluster Manager Status Cluster Manager Status if trace if joiner View Id view Id log tracef Waiting to install view s before processing join request from s joiner View Id joiner else log tracef Waiting to recover cluster status before processing join request from s joiner long nanos Timeout Time Unit to Nanos timeout while view Id joiner View Id cluster Manager Status Cluster Manager Status cluster Manager Status is Running if nanos Timeout throw log coordinator Timeout Waiting For View joiner View Id transport get View Id cluster Manager Status nanos Timeout cluster State Changed await Nanos nanos Timeout private Map Address Object execute On Cluster Sync final Replicable Command command final int timeout boolean total Order boolean distributed final Response Filter filter throws Exception first invoke remotely if total Order Map Address Response response Map transport invoke Remotely transport get Members command Response Mode timeout filter Deliver Order distributed return extract Response Values response Map null Completable Future Map Address Response remote Future transport invoke Remotely Async null command Response Mode timeout filter Deliver Order false invoke the command on the local node gcr wire Dependencies command Response local Response try if trace log tracef Attempting to execute command on self s command local Response Response command invoke catch Throwable throwable throw new Exception throwable return extract Response Values Completable Futures await remote Future local Response private int get Global Timeout Rename setting to something like global Rpc Timeout return int global Configuration transport distributed Sync Timeout private void execute On Cluster Async final Replicable Command command final int timeout boolean total Order boolean distributed if total Order invoke the command on the local node async Transport Executor submit try if trace log tracef Attempting to execute command on self s command gcr wire Dependencies command command invoke catch Throwable throwable The command already logs any exception in invoke invoke remotely try Deliver Order deliver Order total Order Deliver Order Deliver Order transport invoke Remotely null command Response Mode timeout null deliver Order distributed catch Exception e throw new Cache Exception Failed to broadcast asynchronous command command e Override public void broadcast Topology Update String cache Name Cache Topology cache Topology Availability Mode availability Mode boolean total Order boolean distributed log debugf Updating cluster wide current topology for cache s topology s availability mode s cache Name cache Topology availability Mode Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address cache Topology availability Mode view Id execute On Cluster Async command get Global Timeout total Order distributed Override public void broadcast Stable Topology Update String cache Name Cache Topology cache Topology boolean total Order boolean distributed log debugf Updating cluster wide stable topology for cache s topology s cache Name cache Topology Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address cache Topology null view Id execute On Cluster Async command get Global Timeout total Order distributed Override public boolean is Rebalancing Enabled return global Rebalancing Enabled Override public boolean is Rebalancing Enabled String cache Name if cache Name null return is Rebalancing Enabled else Cluster Cache Status s cache Status Map get cache Name return s null s is Rebalance Enabled is Rebalancing Enabled Override public void set Rebalancing Enabled String cache Name boolean enabled if cache Name null set Rebalancing Enabled enabled else Cluster Cache Status cluster Cache Status cache Status Map get cache Name if cluster Cache Status null cluster Cache Status set Rebalance Enabled enabled Override public void set Rebalancing Enabled boolean enabled if enabled if global Rebalancing Enabled rebalancing Enabled else if global Rebalancing Enabled rebalancing Suspended global Rebalancing Enabled enabled cache Status Map values for Each Cluster Cache Status start Queued Rebalance Override public void force Rebalance String cache Name Cluster Cache Status cache Status cache Status Map get cache Name if cache Status null cache Status force Rebalance Override public void force Availability Mode String cache Name Availability Mode availability Mode Cluster Cache Status cache Status cache Status Map get cache Name if cache Status null cache Status force Availability Mode availability Mode Override public Rebalancing Status get Rebalancing Status String cache Name Cluster Cache Status cache Status cache Status Map get cache Name if cache Status null return cache Status get Rebalancing Status else return Rebalancing Status Override public void broadcast Shutdown Cache String cache Name Cache Topology cache Topology boolean total Order boolean distributed throws Exception Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address cache Topology null view Id execute On Cluster Sync command get Global Timeout total Order distributed null Override public void set Initial Cache Topology Id String cache Name int topology Id Configuration configuration cache Manager get Cache Configuration cache Name Cluster Cache Status cache Status init Cache Status If Absent cache Name configuration clustering cache Mode cache Status set Initial Topology Id topology Id Override public void handle Shutdown Request String cache Name throws Exception Cluster Cache Status cache Status cache Status Map get cache Name cache Status shutdown Cache Listener sync true public class Cluster View Listener Merged View Changed public void handle View Change final View Changed Event e Need to recover existing caches asynchronously in case we just became the coordinator Can not use the async notification thread pool by default it only has thread view Handling Executor execute handle Cluster View e is Merge View e get View Id Event Logger event Logger event Log Manager get Event Logger scope e get Local Address log Node Joined event Logger e get New Members e get Old Members log Node Left event Logger e get New Members e get Old Members private Map Address Object extract Response Values Map Address Response remote Responses Response local Response parse the responses Map Address Object response Values new Hash Map transport get Members size for Map Entry Address Response entry remote Responses entry Set add Response Value entry get Key entry get Value response Values if local Response null add Response Value transport get Address local Response response Values return response Values private static void add Response Value Address origin Response response Map Address Object values if response Cache Not Found Response return else if response is Successful Throwable cause response instanceof Exception Response Exception Response response get Exception null throw new Cache Exception format Unsuccessful response received from node s s origin response cause values put origin Successful Response response get Response Value private static void log Node Joined Event Logger logger List Address new Members List Address old Members new Members stream filter address old Members contains address for Each address logger info Event Log Category node Joined address private static void log Node Left Event Logger logger List Address new Members List Address old Members old Members stream filter address new Members contains address for Each address logger info Event Log Category node Left address 
package org infinispan commons util import java util Arrays import java util Hash Map import java util Hash Set import java util Linked Hash Map import java util Map import java util Set import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import org infinispan commons equivalence Equivalence import com github benmanes caffeine cache Cache import com github benmanes caffeine cache Caffeine factory for Concurrent Maps author Manik Surtani author Galder Zamarre o since public class Collection Factory private static final float f public static int compute Capacity int expected Size return compute Capacity expected Size public static int compute Capacity int expected Size float load Factor return int expected Size load Factor f public static Concurrent Map make Concurrent Map return new Concurrent Hash Map public static Concurrent Map make Concurrent Map int init Capacity return new Concurrent Hash Map init Capacity public static Concurrent Map make Concurrent Map int init Capacity int concurrency Level return new Concurrent Hash Map init Capacity f concurrency Level public static Concurrent Map make Concurrent Parallel Map int init Capacity int concurrency Level return new Concurrent Hash Map init Capacity public static Concurrent Map make Concurrent Map int init Capacity float load Factor int concurrency Level return new Concurrent Hash Map init Capacity load Factor concurrency Level public static Map make Map return new Hash Map public static Map make Map int initial Capacity return new Hash Map initial Capacity public static Map make Map Map extends extends entries return new Hash Map entries public static Map make Linked Map int initial Capacity float load Factor boolean access Order return new Linked Hash Map initial Capacity load Factor access Order public static Set make Set return new Hash Set public static Set make Set int initial Capacity return new Hash Set initial Capacity deprecated Since please use link make Concurrent Map instead Deprecated public static Concurrent Map make Concurrent Map Equivalence super key Eq Equivalence super value Eq return make Concurrent Map deprecated Since please use link make Concurrent Map int instead Deprecated public static Concurrent Map make Concurrent Map int init Capacity Equivalence super key Eq Equivalence super value Eq return make Concurrent Map init Capacity deprecated Since please use link make Concurrent Map int int instead Deprecated public static Concurrent Map make Concurrent Map int init Capacity int concurrency Level Equivalence super key Eq Equivalence super value Eq return make Concurrent Map init Capacity concurrency Level deprecated Since please use link make Concurrent Parallel Map int int instead Deprecated public static Concurrent Map make Concurrent Parallel Map int init Capacity int concurrency Level Equivalence super key Eq Equivalence super value Eq return make Concurrent Parallel Map init Capacity concurrency Level deprecated Since please use link make Concurrent Map int float int instead Deprecated public static Concurrent Map make Concurrent Map int init Capacity float load Factor int concurrency Level Equivalence super key Eq Equivalence super value Eq return make Concurrent Map init Capacity load Factor concurrency Level public static Concurrent Map make Bounded Concurrent Map int max Size Cache cache Caffeine new Builder maximum Size max Size build return cache as Map deprecated Since please use link make Map instead Deprecated public static Map make Map Equivalence super key Eq Equivalence super value Eq return new Hash Map deprecated Since please use link make Map int instead Deprecated public static Map make Map int initial Capacity Equivalence super key Eq Equivalence super value Eq return new Hash Map initial Capacity deprecated Since please use link make Map Map instead Deprecated public static Map make Map Map extends extends entries Equivalence super key Eq Equivalence super value Eq return new Hash Map entries deprecated Since please use link make Set int instead Deprecated public static Map make Linked Map int initial Capacity float load Factor boolean access Order Equivalence super key Eq Equivalence super value Eq return new Linked Hash Map initial Capacity load Factor access Order deprecated Since please use link make Set instead Deprecated public static Set make Set Equivalence super entry Eq return new Hash Set deprecated Since please use link make Set int instead Deprecated public static Set make Set int initial Capacity Equivalence super entry Eq return new Hash Set initial Capacity Create a Set backed by the specified array param entries the array by which the list will be backed param type of elements return a set view of the specified array Safe Varargs public static Set make Set entries return new Hash Set Arrays as List entries 
package org infinispan filter import java io Exception import java io Object Input import java io Object Output import java util Collection import java util Collections import java util Set import org infinispan commons marshall Abstract Externalizer import org infinispan marshall core Ids Filter based on accepting rejecting the keys that are present in a supplied collection author Mircea Markus since public class Collection Key Filter implements Key Filter private final Collection extends keys private final boolean accept public Collection Key Filter Collection extends keys this keys false public Collection Key Filter Collection extends keys boolean accept this keys keys this accept accept Override public boolean accept key return accept keys contains key keys contains key public static class Externalizer extends Abstract Externalizer Collection Key Filter Override public Set Class extends Collection Key Filter get Type Classes return Collections singleton Collection Key Filter class Override public void write Object Object Output output Collection Key Filter object throws Exception output write Object object keys output write Boolean object accept Override public Collection Key Filter read Object Object Input input throws Exception Class Not Found Exception return new Collection Key Filter Collection extends Object input read Object input read Boolean Override public Integer get Id return Ids 
package org infinispan util concurrent import java util Array List import java util Collection import java util Collections import java util Hash Set import java util List import java util Map import java util Set import java util concurrent Callable import java util concurrent Completable Future import java util concurrent Concurrent Hash Map import java util concurrent Scheduled Executor Service import java util concurrent Scheduled Future import java util concurrent Time Unit import java util function Bi Consumer import org infinispan commands Command Invocation Id import org infinispan commons util Util import org infinispan configuration cache Configuration import org infinispan factories Known Component Names import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan factories scopes Scope import org infinispan factories scopes Scopes import org infinispan interceptors distribution Collector import org infinispan interceptors distribution Primary Owner Only Collector import org infinispan remoting transport Address import org infinispan util logging Log import org infinispan util logging Log Factory import net jcip annotations Guarded By An acknowledge collector for Triangle algorithm used in non transactional caches for write operations p Acknowledges are used between the owners and the originator They signal the completion of a write operation The operation can complete successfully or not p The acknowledges are valid on the same cache topology id So each acknowledge is tagged with the command topology id Acknowledges from previous topology id are discarded p The acknowledges from the primary owner carry the return value of the operation author Pedro Ruivo since Scope Scopes public class Command Ack Collector private static final Log log Log Factory get Log Command Ack Collector class private static final boolean trace log is Trace Enabled private final Concurrent Hash Map Long Base Collector collector Map private Scheduled Executor Service timeout Executor private long timeout Nano Seconds public Command Ack Collector collector Map new Concurrent Hash Map Inject public void inject Component Name Known Component Names Scheduled Executor Service timeout Executor Configuration configuration this timeout Executor timeout Executor this timeout Nano Seconds Time Unit to Nanos configuration clustering remote Timeout Creates a collector for a single key write operation param id the id from link Command Invocation Id param backup Owners the backup owners of the key param topology Id the current topology id public Collector Object create long id Collection Address backup Owners int topology Id if backup Owners is Empty return new Primary Owner Only Collector Single Key Collector collector new Single Key Collector id backup Owners topology Id collector Map put id collector if trace log tracef Created new collector for s Backup Owners s id backup Owners return collector Creates a collector for link org infinispan commands write Put Map Command param id the id from link Command Invocation Id get Id param primary a primary owners collection param backups a map between a backup owner and its segments affected param topology Id the current topology id public Collector Map Object Object create Multi Key Collector long id Collection Address primary Map Address Collection Integer backups int topology Id if backups is Empty return new Primary Owner Only Collector Multi Key Collector collector new Multi Key Collector id backups topology Id collector Map put id collector if trace log tracef Created new collector for s Primary s Backup Segments s id primary backups return collector Acknowledges a link org infinispan commands write Put Map Command completion in the backup owner param id the id from link Command Invocation Id get Id param from the backup owner param segment the segments affected and acknowledged param topology Id the topology id public void multi Key Backup Ack long id Address from int segment int topology Id Multi Key Collector collector Multi Key Collector collector Map get id if collector null collector backup Ack from segment topology Id Acknowledges a write operation completion in the backup owner param id the id from link Command Invocation Id get Id param from the backup owner param topology Id the topology id public void backup Ack long id Address from int topology Id Single Key Collector collector Single Key Collector collector Map get id if collector null collector backup Ack topology Id from Acknowledges an exception during the operation execution p The collector is completed without waiting any further acknowledges param id the id from link Command Invocation Id get Id param throwable the link Throwable param topology Id the topology id public void complete Exceptionally long id Throwable throwable int topology Id Base Collector collector collector Map get id if collector null collector complete Exceptionally throwable topology Id return the pending ids from link Command Invocation Id get Id testing purposes only public List Long get Pending Commands return new Array List collector Map key Set param id the id from link Command Invocation Id get Id return code true if there are acknowledges pending from the backup owners code false otherwise testing purposes only public boolean has Pending Backup Acks long id Base Collector collector collector Map get id return collector null collector has Pending Backup Acks Notifies a change in member list param members the new cluster members public void on Members Change Collection Address members Set Address current Members new Hash Set members for Base Collector collector collector Map values collector on Members Change current Members private Timeout Exception create Timeout Exception long id return log timeout Waiting For Acks Util pretty Print Time timeout Nano Seconds Time Unit id private abstract class Base Collector implements Callable Void Bi Consumer Throwable Collector final long id final Completable Future future final int topology Id private final Scheduled Future timeout Task volatile primary Result volatile boolean primary Result Received false Base Collector long id int topology Id this id id this topology Id topology Id this future new Completable Future this timeout Task timeout Executor schedule this timeout Nano Seconds Time Unit Invoked by the timeout executor when the timeout expires p It completes the future with the timeout exception Override public final synchronized Void call throws Exception future complete Exceptionally create Timeout Exception id return null Invoked when the future is completed it must cleanup all task related to this collector p The tasks includes removing the collector from the map and cancel the timeout task Override public final void accept t Throwable throwable if trace log tracef Collector s Collector completed with ret s throw s id t throwable collector Map remove id timeout Task cancel false Override public final Completable Future get Future return future when Complete this Override public void primary Exception Throwable throwable future complete Exceptionally throwable final void complete Exceptionally Throwable throwable int topology Id if trace log tracef throwable Collector s completed exceptionally Topology Id s expected s id topology Id this topology Id if is Wrong Topology Or Is Done topology Id return future complete Exceptionally throwable abstract boolean has Pending Backup Acks abstract void on Members Change Collection Address members final boolean is Wrong Topology Or Is Done int topology Id return this topology Id topology Id future is Done private class Single Key Collector extends Base Collector Object private final Collection Address backup Owners private Single Key Collector long id Collection Address backup Owners int topology Id super id topology Id this backup Owners Collections synchronized Set new Hash Set backup Owners Override public boolean has Pending Backup Acks return backup Owners is Empty Override public void on Members Change Collection Address members if backup Owners retain All members backup Owners is Empty primary Result Received if trace log tracef Collector s Some backups left the cluster id mark Ready Override public void primary Result Object result boolean success primary Result result primary Result Received true if success backup Owners is Empty mark Ready void backup Ack int topology Id Address from if trace log tracef Collector s Backup Address s Topology Id s expected s id from topology Id this topology Id if is Wrong Topology Or Is Done topology Id return if backup Owners remove from backup Owners is Empty primary Result Received mark Ready private void mark Ready if trace log tracef Collector s Ready id future complete primary Result private class Multi Key Collector extends Base Collector Map Object Object Guarded By this private final Map Address Collection Integer backups Multi Key Collector long id Map Address Collection Integer backups int topology Id super id topology Id this backups backups Override public synchronized boolean has Pending Backup Acks return backups is Empty Override public synchronized void on Members Change Collection Address members if backups key Set retain All members if trace log tracef Collector s Some backups left the cluster id check Completed Override public void primary Result Map Object Object result boolean success primary Result result primary Result Received true synchronized this check Completed void backup Ack Address from int segment int topology Id if trace log tracef Collector s Put Map Backup Address s Topology Id s expected s Segment s id from topology Id this topology Id segment if is Wrong Topology Or Is Done topology Id return synchronized this Collection Integer pending Segments backups get Or Default from Collections empty List if pending Segments remove segment pending Segments is Empty backups remove from check Completed Guarded By this private void check Completed if primary Result Received backups is Empty if trace log tracef Collector s Ready Return value ss id primary Result future complete primary Result 
package org infinispan commands import java io Exception import java io Object Input import java io Object Output import java util Objects import java util concurrent atomic Atomic Long import org infinispan remoting transport Address Represents an unique identified for non transaction write commands p It is used to lock the key for a specific command p This class is final to prevent issues as it is usually not marshalled as polymorphic object but directly using link write To Object Output Command Invocation Id and link read From Object Input author Pedro Ruivo since public final class Command Invocation Id public static final Command Invocation Id new Command Invocation Id null private static final Atomic Long next Id new Atomic Long private final Address address private final long id private Command Invocation Id Address address long id this address address this id id public static Command Invocation Id generate Id Address address return new Command Invocation Id address next Id get And Increment public static Command Invocation Id generate Id From Command Invocation Id command Invocation Id return new Command Invocation Id command Invocation Id address next Id get And Increment public static void write To Object Output output Command Invocation Id command Invocation Id throws Exception output write Object command Invocation Id address output write Long command Invocation Id id public static Command Invocation Id read From Object Input input throws Class Not Found Exception Exception Address address Address input read Object long id input read Long return new Command Invocation Id address id public long get Id return id Override public boolean equals Object o if this o return true if o null get Class o get Class return false Command Invocation Id that Command Invocation Id o return id that id address null address equals that address that address null public Address get Address return address Override public int hash Code int result address null address hash Code result result int id id return result Override public String to String return Command Invocation Objects to String address local id public static String show Command Invocation Id id return id id to String 
package org infinispan commands import static org infinispan xsite Site Admin Command Admin Operation import static org infinispan xsite statetransfer Site State Transfer Control Command State Transfer Control import java util Collection import java util List import java util Map import java util Set import java util import java util concurrent Callable import java util function Bi Consumer import java util function Bi Function import java util function Consumer import java util function Function import javax transaction xa Xid import org infinispan Cache import org infinispan commands control Lock Control Command import org infinispan commands functional Abstract Write Key Command import org infinispan commands functional Abstract Write Many Command import org infinispan commands functional Read Only Key Command import org infinispan commands functional Read Only Many Command import org infinispan commands functional Read Write Key Command import org infinispan commands functional Read Write Key Value Command import org infinispan commands functional Read Write Many Command import org infinispan commands functional Read Write Many Entries Command import org infinispan commands functional Tx Read Only Key Command import org infinispan commands functional Tx Read Only Many Command import org infinispan commands functional Write Only Key Command import org infinispan commands functional Write Only Key Value Command import org infinispan commands functional Write Only Many Command import org infinispan commands functional Write Only Many Entries Command import org infinispan commands module Module Command Initializer import org infinispan commands read Distributed Execute Command import org infinispan commands read Entry Set Command import org infinispan commands read Get All Command import org infinispan commands read Get Cache Entry Command import org infinispan commands read Get Key Value Command import org infinispan commands read Key Set Command import org infinispan commands read Size Command import org infinispan commands remote Clustered Get All Command import org infinispan commands remote Clustered Get Command import org infinispan commands remote Get Keys In Group Command import org infinispan commands remote Single Rpc Command import org infinispan commands remote recovery Complete Transaction Command import org infinispan commands remote recovery Get In Doubt Transactions Command import org infinispan commands remote recovery Get In Doubt Tx Info Command import org infinispan commands remote recovery Tx Completion Notification Command import org infinispan commands tx Commit Command import org infinispan commands tx Prepare Command import org infinispan commands tx Rollback Command import org infinispan commands tx Versioned Commit Command import org infinispan commands tx Versioned Prepare Command import org infinispan commands tx totalorder Total Order Commit Command import org infinispan commands tx totalorder Total Order Non Versioned Prepare Command import org infinispan commands tx totalorder Total Order Rollback Command import org infinispan commands tx totalorder Total Order Versioned Commit Command import org infinispan commands tx totalorder Total Order Versioned Prepare Command import org infinispan commands write Backup Ack Command import org infinispan commands write Backup Multi Key Ack Command import org infinispan commands write Backup Put Map Rpc Command import org infinispan commands write Backup Write Rpc Command import org infinispan commands write Clear Command import org infinispan commands write Compute Command import org infinispan commands write Compute If Absent Command import org infinispan commands write Data Write Command import org infinispan commands write Evict Command import org infinispan commands write Exception Ack Command import org infinispan commands write Invalidate Command import org infinispan commands write Invalidate Command import org infinispan commands write Invalidate Versions Command import org infinispan commands write Put Key Value Command import org infinispan commands write Put Map Command import org infinispan commands write Remove Command import org infinispan commands write Remove Expired Command import org infinispan commands write Replace Command import org infinispan commands write Value Matcher import org infinispan commands write Write Command import org infinispan commons marshall Externalizer import org infinispan commons marshall Lambda Externalizer import org infinispan commons marshall Serialize Function With import org infinispan commons marshall Streaming Marshaller import org infinispan commons util Enum Util import org infinispan configuration cache Configuration import org infinispan conflict impl State Receiver import org infinispan container Data Container import org infinispan container Internal Entry Factory import org infinispan context Invocation Context Factory import org infinispan context impl Flag Bit Sets import org infinispan distribution Distribution Manager import org infinispan distribution group impl Group Manager import org infinispan encoding Data Conversion import org infinispan factories Component Registry import org infinispan factories Known Component Names import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan functional Entry View Read Entry View import org infinispan functional Entry View Read Write Entry View import org infinispan functional Entry View Write Entry View import org infinispan functional impl Params import org infinispan interceptors Async Interceptor Chain import org infinispan interceptors locking Clustering Dependent Logic import org infinispan marshall core Global Marshaller import org infinispan metadata Metadata import org infinispan notifications cachelistener Cache Notifier import org infinispan persistence manager Ordered Updates Manager import org infinispan remoting transport Address import org infinispan statetransfer State Chunk import org infinispan statetransfer State Consumer import org infinispan statetransfer State Provider import org infinispan statetransfer State Request Command import org infinispan statetransfer State Response Command import org infinispan statetransfer State Transfer Lock import org infinispan statetransfer State Transfer Manager import org infinispan stream impl Cluster Stream Manager import org infinispan stream impl Local Stream Manager import org infinispan stream impl Stream Request Command import org infinispan stream impl Stream Response Command import org infinispan stream impl Stream Segment Response Command import org infinispan transaction impl Transaction Table import org infinispan transaction xa Global Transaction import org infinispan transaction xa recovery Recovery Manager import org infinispan util Byte String import org infinispan util concurrent Command Ack Collector import org infinispan util concurrent locks Lock Manager import org infinispan util logging Log import org infinispan util logging Log Factory import org infinispan xsite Backup Sender import org infinispan xsite Single Site Rpc Command import org infinispan xsite Site Admin Command import org infinispan xsite statetransfer Site State import org infinispan xsite statetransfer Site State Consumer import org infinispan xsite statetransfer Site State Provider import org infinispan xsite statetransfer Site State Push Command import org infinispan xsite statetransfer Site State Transfer Control Command import org infinispan xsite statetransfer Site State Transfer Manager author Mircea Markus jboss com author Galder Zamarre o author Sanne Grinovero sanne hibernate org Red Hat Inc since public class Commands Factory Impl implements Commands Factory private static final Log log Log Factory get Log Commands Factory Impl class private static final boolean trace log is Trace Enabled private Data Container data Container private Cache Notifier Object Object notifier private Cache Object Object cache private Byte String cache Name private boolean transactional private boolean total Order Protocol private Async Interceptor Chain interceptor Chain private Distribution Manager distribution Manager private Invocation Context Factory icf private Transaction Table tx Table private Configuration configuration private Recovery Manager recovery Manager private State Provider state Provider private State Consumer state Consumer private Lock Manager lock Manager private Internal Entry Factory entry Factory private State Transfer Manager state Transfer Manager private Backup Sender backup Sender private Cancellation Service cancellation Service private Site State Provider x Site State Provider private Site State Consumer x Site State Consumer private Site State Transfer Manager x Site State Transfer Manager private Group Manager group Manager private Local Stream Manager local Stream Manager private Cluster Stream Manager cluster Stream Manager private Clustering Dependent Logic clustering Dependent Logic private Command Ack Collector command Ack Collector private State Receiver state Receiver private Component Registry component Registry private Ordered Updates Manager ordered Updates Manager private State Transfer Lock state Transfer Lock private Map Byte Module Command Initializer module Command Initializers private Streaming Marshaller marshaller Inject public void setup Dependencies Data Container container Cache Notifier Object Object notifier Cache Object Object cache Async Interceptor Chain interceptor Chain Distribution Manager distribution Manager Invocation Context Factory icf Transaction Table tx Table Configuration configuration Component Name Known Component Names Map Byte Module Command Initializer module Command Initializers Recovery Manager recovery Manager State Provider state Provider State Consumer state Consumer Lock Manager lock Manager Internal Entry Factory entry Factory State Transfer Manager stm Backup Sender backup Sender Cancellation Service cancellation Service Site State Provider x Site State Provider Site State Consumer x Site State Consumer Site State Transfer Manager x Site State Transfer Manager Group Manager group Manager Local Stream Manager local Stream Manager Cluster Stream Manager cluster Stream Manager Clustering Dependent Logic clustering Dependent Logic Streaming Marshaller marshaller Command Ack Collector command Ack Collector State Receiver state Receiver Component Registry component Registry Ordered Updates Manager ordered Updates Manager State Transfer Lock state Transfer Lock this data Container container this notifier notifier this cache cache this interceptor Chain interceptor Chain this distribution Manager distribution Manager this icf icf this tx Table tx Table this configuration configuration this module Command Initializers module Command Initializers this recovery Manager recovery Manager this state Provider state Provider this state Consumer state Consumer this lock Manager lock Manager this entry Factory entry Factory this state Transfer Manager stm this backup Sender backup Sender this cancellation Service cancellation Service this x Site State Consumer x Site State Consumer this x Site State Provider x Site State Provider this x Site State Transfer Manager x Site State Transfer Manager this group Manager group Manager this local Stream Manager local Stream Manager this cluster Stream Manager cluster Stream Manager this clustering Dependent Logic clustering Dependent Logic this marshaller marshaller this command Ack Collector command Ack Collector this state Receiver state Receiver this component Registry component Registry this ordered Updates Manager ordered Updates Manager this state Transfer Lock state Transfer Lock Start priority needs to happen early on public void start cache Name Byte String from String cache get Name this transactional configuration transaction transaction Mode is Transactional this total Order Protocol configuration transaction transaction Protocol is Total Order Override public Put Key Value Command build Put Key Value Command Object key Object value Metadata metadata long flags Bit Set boolean really Transactional transactional Enum Util contains Any flags Bit Set Flag Bit Sets return new Put Key Value Command key value false notifier metadata flags Bit Set generate really Transactional Override public Remove Command build Remove Command Object key Object value long flags Bit Set return new Remove Command key value notifier flags Bit Set generate transactional Override public Invalidate Command build Invalidate Command long flags Bit Set Object keys State Consumer Impl always uses non tx invalidation return new Invalidate Command notifier flags Bit Set generate false keys Override public Invalidate Command build Invalidate From Command long flags Bit Set Collection Object keys State Consumer Impl always uses non tx invalidation return new Invalidate Command data Container distribution Manager notifier flags Bit Set keys generate transactional Override public Invalidate Command build Invalidate From Command Address origin long flags Bit Set Collection Object keys invalidation is always non transactional return new Invalidate Command origin data Container distribution Manager notifier flags Bit Set keys generate false Override public Remove Expired Command build Remove Expired Command Object key Object value Long lifespan return new Remove Expired Command key value lifespan notifier generate transactional Override public Replace Command build Replace Command Object key Object old Value Object new Value Metadata metadata long flags Bit Set return new Replace Command key old Value new Value notifier metadata flags Bit Set generate transactional Override public Compute Command build Compute Command Object key Bi Function mapping Function boolean compute If Present Metadata metadata long flags Bit Set return new Compute Command key mapping Function compute If Present flags Bit Set generate transactional metadata notifier component Registry Override public Compute If Absent Command build Compute If Absent Command Object key Function mapping Function Metadata metadata long flags Bit Set return new Compute If Absent Command key mapping Function flags Bit Set generate transactional metadata notifier component Registry Override public Size Command build Size Command long flags Bit Set return new Size Command cache flags Bit Set Override public Key Set Command build Key Set Command long flags Bit Set return new Key Set Command cache flags Bit Set Override public Entry Set Command build Entry Set Command long flags Bit Set return new Entry Set Command cache flags Bit Set Override public Get Key Value Command build Get Key Value Command Object key long flags Bit Set return new Get Key Value Command key flags Bit Set Override public Get All Command build Get All Command Collection keys long flags Bit Set boolean return Entries return new Get All Command keys flags Bit Set return Entries entry Factory Override public Put Map Command build Put Map Command Map map Metadata metadata long flags Bit Set return new Put Map Command map notifier metadata flags Bit Set generate transactional Override public Clear Command build Clear Command long flags Bit Set return new Clear Command notifier data Container flags Bit Set Override public Evict Command build Evict Command Object key long flags Bit Set return new Evict Command key notifier flags Bit Set generate transactional entry Factory Override public Prepare Command build Prepare Command Global Transaction gtx List Write Command modifications boolean one Phase Commit return total Order Protocol new Total Order Non Versioned Prepare Command cache Name gtx modifications new Prepare Command cache Name gtx modifications one Phase Commit Override public Versioned Prepare Command build Versioned Prepare Command Global Transaction gtx List Write Command modifications boolean one Phase return total Order Protocol new Total Order Versioned Prepare Command cache Name gtx modifications one Phase new Versioned Prepare Command cache Name gtx modifications one Phase Override public Commit Command build Commit Command Global Transaction gtx return total Order Protocol new Total Order Commit Command cache Name gtx new Commit Command cache Name gtx Override public Versioned Commit Command build Versioned Commit Command Global Transaction gtx return total Order Protocol new Total Order Versioned Commit Command cache Name gtx new Versioned Commit Command cache Name gtx Override public Rollback Command build Rollback Command Global Transaction gtx return total Order Protocol new Total Order Rollback Command cache Name gtx new Rollback Command cache Name gtx Override public Single Rpc Command build Single Rpc Command Replicable Command call return new Single Rpc Command cache Name call Override public Clustered Get Command build Clustered Get Command Object key long flags Bit Set return new Clustered Get Command key cache Name flags Bit Set param is Remote true if the command is deserialized and is executed remote Override public void initialize Replicable Command Replicable Command c boolean is Remote if c null return switch c get Command Id case Put Key Value Command Put Key Value Command c init notifier break case Replace Command Replace Command c init notifier break case Put Map Command Put Map Command c init notifier break case Remove Command Remove Command c init notifier break case Compute Command Compute Command c init notifier component Registry break case Compute If Absent Command Compute If Absent Command c init notifier component Registry break case Single Rpc Command Single Rpc Command src Single Rpc Command c src init interceptor Chain icf if src get Command null initialize Replicable Command src get Command false break case Invalidate Command Invalidate Command ic Invalidate Command c ic init notifier break case Invalidate Command Invalidate Command ilc Invalidate Command c ilc init distribution Manager notifier data Container break case Prepare Command case Versioned Prepare Command case Total Order Non Versioned Prepare Command case Total Order Versioned Prepare Command Prepare Command pc Prepare Command c pc init interceptor Chain icf tx Table pc initialize notifier recovery Manager if pc get Modifications null for Replicable Command nested pc get Modifications initialize Replicable Command nested false pc mark Transaction As Remote is Remote break case Commit Command case Versioned Commit Command case Total Order Commit Command case Total Order Versioned Commit Command Commit Command commit Command Commit Command c commit Command init interceptor Chain icf tx Table commit Command mark Transaction As Remote is Remote break case Rollback Command case Total Order Rollback Command Rollback Command rollback Command Rollback Command c rollback Command init interceptor Chain icf tx Table rollback Command mark Transaction As Remote is Remote break case Clear Command Clear Command cc Clear Command c cc init notifier data Container break case Clustered Get Command Clustered Get Command clustered Get Command Clustered Get Command c clustered Get Command initialize icf this entry Factory interceptor Chain break case Lock Control Command Lock Control Command lcc Lock Control Command c lcc init interceptor Chain icf tx Table lcc mark Transaction As Remote is Remote break case State Request Command State Request Command c init state Provider break case State Response Command State Response Command c init state Consumer state Receiver break case Get In Doubt Transactions Command Get In Doubt Transactions Command gptx Get In Doubt Transactions Command c gptx init recovery Manager break case Tx Completion Notification Command Tx Completion Notification Command ftx Tx Completion Notification Command c ftx init tx Table lock Manager recovery Manager state Transfer Manager break case Distributed Execute Command Distributed Execute Command dec Distributed Execute Command c dec init cache break case Get In Doubt Tx Info Command Get In Doubt Tx Info Command gid Tx Info Command Get In Doubt Tx Info Command c gid Tx Info Command init recovery Manager break case Complete Transaction Command Complete Transaction Command ccc Complete Transaction Command c ccc init recovery Manager break case Create Cache Command Create Cache Command create Cache Command Create Cache Command c create Cache Command init cache get Cache Manager break case Site Admin Command Site Admin Command x Site Admin Command Site Admin Command c x Site Admin Command init backup Sender break case Cancel Command Cancel Command cancel Command Cancel Command c cancel Command init cancellation Service break case Site State Transfer Control Command Site State Transfer Control Command x Site State Transfer Control Command Site State Transfer Control Command c x Site State Transfer Control Command initialize x Site State Provider x Site State Consumer x Site State Transfer Manager break case Site State Push Command Site State Push Command x Site State Push Command Site State Push Command c x Site State Push Command initialize x Site State Consumer break case Get Keys In Group Command Get Keys In Group Command get Keys In Group Command Get Keys In Group Command c get Keys In Group Command set Group Manager group Manager break case Clustered Get All Command Clustered Get All Command clustered Get All Command Clustered Get All Command c clustered Get All Command init icf this entry Factory interceptor Chain tx Table break case Stream Request Command Stream Request Command stream Request Command Stream Request Command c stream Request Command inject local Stream Manager break case Stream Response Command Stream Response Command stream Response Command Stream Response Command c stream Response Command inject cluster Stream Manager break case Stream Segment Response Command Stream Segment Response Command stream Segment Response Command Stream Segment Response Command c stream Segment Response Command inject cluster Stream Manager break case Remove Expired Command Remove Expired Command remove Expired Command Remove Expired Command c remove Expired Command init notifier break case Backup Ack Command Backup Ack Command command Backup Ack Command c command set Command Ack Collector command Ack Collector break case Backup Write Rpc Command Backup Write Rpc Command bwc Backup Write Rpc Command c bwc init icf interceptor Chain notifier component Registry break case Backup Multi Key Ack Command Backup Multi Key Ack Command c set Command Ack Collector command Ack Collector break case Exception Ack Command Exception Ack Command c set Command Ack Collector command Ack Collector break case Backup Put Map Rpc Command Backup Put Map Rpc Command c init icf interceptor Chain notifier break case Invalidate Versions Command Invalidate Versions Command invalidate Versions Command Invalidate Versions Command c invalidate Versions Command init data Container ordered Updates Manager state Transfer Lock state Transfer Manager break Functional commands case Read Only Key Command case Tx Read Only Key Command Read Only Key Command c init component Registry break case Read Only Many Command case Tx Read Only Many Command Read Only Many Command c init component Registry break case Read Write Key Command case Read Write Key Value Command case Write Only Key Command case Write Only Key Value Command Abstract Write Key Command c init component Registry break case Read Write Many Command case Read Write Many Entries Command case Write Only Many Command case Write Only Many Entries Command Abstract Write Many Command c init component Registry break default Module Command Initializer mci module Command Initializers get c get Command Id if mci null mci initialize Replicable Command c is Remote else if trace log tracef Nothing to initialize for command s c Override public Lock Control Command build Lock Control Command Collection keys long flags Bit Set Global Transaction gtx return new Lock Control Command keys cache Name flags Bit Set gtx Override public Lock Control Command build Lock Control Command Object key long flags Bit Set Global Transaction gtx return new Lock Control Command key cache Name flags Bit Set gtx Override public Lock Control Command build Lock Control Command Collection keys long flags Bit Set return new Lock Control Command keys cache Name flags Bit Set null Override public State Request Command build State Request Command State Request Command Type subtype Address sender int topology Id Set Integer segments return new State Request Command cache Name subtype sender topology Id segments Override public State Response Command build State Response Command Address sender int topology Id Collection State Chunk state Chunks boolean apply State boolean push Transfer return new State Response Command cache Name sender topology Id state Chunks apply State push Transfer Override public String get Cache Name return cache Name to String Override public Get In Doubt Transactions Command build Get In Doubt Transactions Command return new Get In Doubt Transactions Command cache Name Override public Tx Completion Notification Command build Tx Completion Notification Command Xid xid Global Transaction global Transaction return new Tx Completion Notification Command xid global Transaction cache Name Override public Tx Completion Notification Command build Tx Completion Notification Command long internal Id return new Tx Completion Notification Command internal Id cache Name Override public Distributed Execute Command build Distributed Execute Command Callable callable Address sender Collection keys return new Distributed Execute Command cache Name keys callable Override public Get In Doubt Tx Info Command build Get In Doubt Tx Info Command return new Get In Doubt Tx Info Command cache Name Override public Complete Transaction Command build Complete Transaction Command Xid xid boolean commit return new Complete Transaction Command cache Name xid commit Override public Create Cache Command build Create Cache Command String cache Name To Create String cache Configuration Name return new Create Cache Command cache Name cache Name To Create cache Configuration Name Override public Create Cache Command build Create Cache Command String cache Name To Create String cache Configuration Name int size return new Create Cache Command cache Name cache Name To Create cache Configuration Name size Override public Cancel Command build Cancel Command Command command return new Cancel Command cache Name command Override public Site State Transfer Control Command build Site State Transfer Control Command State Transfer Control control String site Name return new Site State Transfer Control Command cache Name control site Name Override public Site Admin Command build Site Admin Command String site Name Admin Operation op Integer after Failures Long min Time To Wait return new Site Admin Command cache Name site Name op after Failures min Time To Wait Override public Site State Push Command build Site State Push Command Site State chunk long timeout Millis return new Site State Push Command cache Name chunk timeout Millis Override public Single Site Rpc Command build Single Site Rpc Command Visitable Command command return new Single Site Rpc Command cache Name command Override public Get Keys In Group Command build Get Keys In Group Command long flags Bit Set Object group Name return new Get Keys In Group Command flags Bit Set group Name set Group Manager group Manager Override public Stream Request Command build Stream Request Command Object id boolean parallel Stream Stream Request Command Type type Set Integer segments Set keys Set excluded Keys boolean include Loader Object terminal Operation return new Stream Request Command cache Name cache get Cache Manager get Address id parallel Stream type segments keys excluded Keys include Loader terminal Operation Override public Stream Response Command build Stream Response Command Object identifier boolean complete Set Integer lost Segments response if lost Segments is Empty return new Stream Response Command cache Name cache get Cache Manager get Address identifier complete response else return new Stream Segment Response Command cache Name cache get Cache Manager get Address identifier complete response lost Segments Override public Get Cache Entry Command build Get Cache Entry Command Object key long flags Bit Set return new Get Cache Entry Command key flags Bit Set entry Factory Override public Clustered Get All Command build Clustered Get All Command List keys long flags Bit Set Global Transaction gtx return new Clustered Get All Command cache Name keys flags Bit Set gtx private Command Invocation Id generate boolean tx if tx return Command Invocation Id else return Command Invocation Id generate Id clustering Dependent Logic get Address Override public Read Only Key Command build Read Only Key Command key Function Read Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Read Only Key Command key f params key Data Conversion value Data Conversion component Registry Override public Read Only Many Command build Read Only Many Command Collection extends keys Function Read Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Read Only Many Command keys f params key Data Conversion value Data Conversion component Registry Override public Read Write Key Value Command build Read Write Key Value Command key value Bi Function Read Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Read Write Key Value Command key value f generate transactional get Value Matcher f params key Data Conversion value Data Conversion component Registry Override public Read Write Key Command build Read Write Key Command key Function Read Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Read Write Key Command key f generate transactional get Value Matcher f params key Data Conversion value Data Conversion component Registry Override public Read Write Many Command build Read Write Many Command Collection extends keys Function Read Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Read Write Many Command keys f params generate transactional key Data Conversion value Data Conversion component Registry Override public Read Write Many Entries Command build Read Write Many Entries Command Map extends extends entries Bi Function Read Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Read Write Many Entries Command entries f params generate transactional key Data Conversion value Data Conversion component Registry Override public Invalidate Versions Command build Invalidate Versions Command int topology Id Object keys int topology Ids long versions boolean removed return new Invalidate Versions Command cache Name topology Id keys topology Ids versions removed Override public Write Only Key Command build Write Only Key Command key Consumer Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Write Only Key Command key f generate transactional get Value Matcher f params key Data Conversion value Data Conversion component Registry Override public Write Only Key Value Command build Write Only Key Value Command key value Bi Consumer Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Write Only Key Value Command key value f generate transactional get Value Matcher f params key Data Conversion value Data Conversion component Registry Override public Write Only Many Command build Write Only Many Command Collection extends keys Consumer Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Write Only Many Command keys f params generate transactional key Data Conversion value Data Conversion component Registry Override public Write Only Many Entries Command build Write Only Many Entries Command Map extends extends entries Bi Consumer Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Write Only Many Entries Command entries f params generate transactional key Data Conversion value Data Conversion component Registry Override public Backup Ack Command build Backup Ack Command long id int topology Id return new Backup Ack Command cache Name id topology Id Override public Backup Multi Key Ack Command build Backup Multi Key Ack Command long id int segment int topology Id return new Backup Multi Key Ack Command cache Name id segment topology Id Override public Exception Ack Command build Exception Ack Command long id Throwable throwable int topology Id return new Exception Ack Command cache Name id throwable topology Id Override public Backup Write Rpc Command build Backup Write Rpc Command Data Write Command command Backup Write Rpc Command cmd new Backup Write Rpc Command cache Name command init Backup Write Rpc Command cmd return cmd Override public Backup Put Map Rpc Command build Backup Put Map Rpc Command Put Map Command command return new Backup Put Map Rpc Command cache Name command private Value Matcher get Value Matcher Object o Serialize Function With ann o get Class get Annotation Serialize Function With class if ann null return Value Matcher value Of ann value Matcher to String Externalizer ext Global Marshaller marshaller find Externalizer For o if ext null ext instanceof Lambda Externalizer return Value Matcher value Of Lambda Externalizer ext value Matcher o to String return Value Matcher 
package org infinispan statetransfer import static org infinispan commons util Util to Str import java util Iterator import java util Map import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import org infinispan container Merge On Store import org infinispan container Data Container import org infinispan container entries Cache Entry import org infinispan context Flag import org infinispan context Invocation Context import org infinispan factories annotations Inject import org infinispan persistence Persistence Util import org infinispan persistence manager Persistence Manager import org infinispan util Time Service import org infinispan util logging Log import org infinispan util logging Log Factory Keeps track of the keys updated by normal operation and state transfer Since the command processing happens concurrently with the state transfer it needs to keep track of the keys updated by normal command in order to reject the updates from the state transfer It assumes that the keys from normal operations are most recent thant the ones received by state transfer author Pedro Ruivo since public class Commit Manager private static final Log log Log Factory get Log Commit Manager class private static final boolean trace log is Trace Enabled private final Concurrent Map Object Discard Policy tracker new Concurrent Hash Map private Data Container data Container private Persistence Manager persistence Manager private Time Service time Service private volatile boolean track State Transfer private volatile boolean track Site State Transfer Inject public final void inject Data Container data Container Persistence Manager persistence Manager Time Service time Service this data Container data Container this persistence Manager persistence Manager this time Service time Service It starts tracking keys committed All the keys committed will be flagged with this flag State transfer received after the key is tracked will be discarded param track Flag to start tracking keys for local site state transfer or for remote site state transfer public final void start Track Flag track set Track track true It stops tracking keys committed param track Flag to stop tracking keys for local site state transfer or for remote site state transfer public final void stop Track Flag track set Track track false if track State Transfer track Site State Transfer if trace log tracef Tracking is disabled Clear tracker s tracker tracker clear else for Iterator Map Entry Object Discard Policy iterator tracker entry Set iterator iterator has Next if iterator next get Value update track State Transfer track Site State Transfer iterator remove It tries to commit the cache entry The entry is not committed if it is originated from state transfer and other operation already has updated it param entry the entry to commit param operation if code null it identifies this commit as originated from a normal operation Otherwise it param ctx public final void commit final Cache Entry entry final Flag operation boolean l Only Invocation Context ctx if trace log tracef Trying to commit Key s Operation Flag s write invalidation s to Str entry get Key operation l Only if l Only operation null track State Transfer track Site State Transfer track null means that it is a normal put and the tracking is not enabled if it is a invalidation commit without track it if trace log tracef Committing key s It is a invalidation or a normal put and no tracking is enabled to Str entry get Key commit Entry entry ctx return if is Track Disabled operation this a put for state transfer but we are not tracking it This means that the state transfer has ended or canceled due to a clear command if trace log tracef Not committing key s It is a state transfer key but no track is enabled to Str entry get Key return tracker compute entry get Key o discard Policy if discard Policy null discard Policy ignore operation if trace log tracef Not committing key s It was already overwritten Discard policy s to Str entry get Key discard Policy return discard Policy commit Entry entry ctx Discard Policy new Discard Policy calculate Discard Policy operation if trace log tracef Committed key s Old discard policy s New discard policy s to Str entry get Key discard Policy new Discard Policy return new Discard Policy private void commit Entry Cache Entry entry Invocation Context ctx if entry is Evicted entry is Removed entry get Value instanceof Merge On Store Persistence Util load And Compute In Data Container data Container persistence Manager entry get Key ctx time Service k old Entry factory Object new Value Merge On Store entry get Value merge old Entry null null old Entry get Value if new Value null return null return factory create k new Value entry get Metadata else entry commit data Container return code true if the flag is being tracked code false otherwise public final boolean is Tracking Flag track Flag switch track Flag case return track State Transfer case return track Site State Transfer return false return code true if no keys are tracked code false otherwise public final boolean is Empty return tracker is Empty Override public String to String return Commit Manager tracker tracker size key s track State Transfer track State Transfer track Site State Transfer track Site State Transfer private void set Track Flag track boolean value if trace log tracef Set track to s s track value switch track case this track State Transfer value break case this track Site State Transfer value break private boolean is Track Disabled Flag track return track Flag track State Transfer track Flag track Site State Transfer private Discard Policy calculate Discard Policy Flag operation boolean discard State Transfer track State Transfer operation Flag boolean discard Site State Transfer track Site State Transfer operation Flag if discard State Transfer discard Site State Transfer return null return new Discard Policy discard State Transfer discard Site State Transfer private static class Discard Policy private boolean discard private boolean discard Site private Discard Policy boolean discard boolean discard Site this discard discard this discard Site discard Site public synchronized final boolean ignore Flag operation return discard operation Flag discard Site operation Flag public synchronized boolean update boolean discard boolean discard Site this discard discard this discard Site discard Site return this discard this discard Site Override public boolean equals Object o if this o return true if o null get Class o get Class return false Discard Policy that Discard Policy o return discard that discard discard Site that discard Site Override public int hash Code int result discard result result discard Site return result Override public String to String return Discard Policy discard State Transfer discard discard Site State Transfer discard Site 
package org infinispan configuration cache import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set import org infinispan commons marshall Marshaller Compatibility mode configuration author Galder Zamarre o since public final class Compatibility Mode Configuration public static final Attribute Definition Boolean Attribute Definition builder enabled false immutable auto Persist false build public static final Attribute Definition Marshaller Attribute Definition builder marshaller null Marshaller class immutable build static Attribute Set attribute Definition Set return new Attribute Set Compatibility Mode Configuration class private final Attribute Boolean enabled private final Attribute Marshaller marshaller private final Attribute Set attributes Compatibility Mode Configuration Attribute Set attributes this attributes attributes check Protection enabled attributes attribute marshaller attributes attribute public boolean enabled return enabled get public Marshaller marshaller return marshaller get public Attribute Set attributes return attributes Override public String to String return Compatibility Mode Configuration attributes attributes Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Compatibility Mode Configuration other Compatibility Mode Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result 
package org infinispan configuration cache import static org infinispan configuration cache Compatibility Mode Configuration import static org infinispan configuration cache Compatibility Mode Configuration import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan commons marshall Marshaller import org infinispan configuration global Global Configuration Compatibility mode configuration builder author Galder Zamarre o since public class Compatibility Mode Configuration Builder extends Abstract Configuration Child Builder implements Builder Compatibility Mode Configuration private final Attribute Set attributes Compatibility Mode Configuration Builder Configuration Builder builder super builder attributes Compatibility Mode Configuration attribute Definition Set Enables compatibility mode between embedded and different remote endpoints Hot Rod Memcached etc public Compatibility Mode Configuration Builder enable attributes attribute set true return this Disables compatibility mode between embedded public Compatibility Mode Configuration Builder disable attributes attribute set false return this public boolean is Enabled return attributes attribute get Sets whether compatibility mode is enabled or disabled param enabled if true compatibility mode is enabled If false it is disabled public Compatibility Mode Configuration Builder enabled boolean enabled attributes attribute set enabled return this Sets the marshaller instance to be used by the interoperability layer public Compatibility Mode Configuration Builder marshaller Marshaller marshaller attributes attribute set marshaller return this public Marshaller marshaller return attributes attribute get Override public void validate No op Override public void validate Global Configuration global Config Override public Compatibility Mode Configuration create return new Compatibility Mode Configuration attributes protect Override public Builder read Compatibility Mode Configuration template attributes read template attributes return this 
package org infinispan util concurrent import static java util Objects require Non Null import java util Collections import java util List import java util Map import java util Objects import java util concurrent Completable Future import java util concurrent Completion Exception import java util concurrent Execution Exception import java util concurrent Time Unit import java util stream Collectors Utility methods connecting link Completable Future futures author Dan Berindei since public class Completable Futures private static final Completable Future completed Empty Map Future Completable Future completed Future Collections empty Map private static final Completable Future completed Null Future Completable Future completed Future null private static final long Time Unit to Nanos Suppress Warnings unchecked public static Completable Future Map completed Empty Map return completed Empty Map Future Suppress Warnings unchecked public static Completable Future completed Null return completed Null Future public static Completable Future List sequence List Completable Future futures Completable Future Void all Completable Future all Of futures to Array new Completable Future futures size return all then Apply v futures stream map Completable Future join collect Collectors to List public static Completable Future completed Exception Future Throwable ex Completable Future future new Completable Future future complete Exceptionally ex return future It waits until the link Completable Future is completed p It ignore if the link Completable Future is completed normally or exceptionally param future the link Completable Future to test param time the timeout param unit the timeout unit return code true if completed code false if timed out throws Interrupted Exception if interrupted while waiting throws Null Pointer Exception if code future or code unit is code null public static boolean await Completable Future future long time Time Unit unit throws Interrupted Exception try require Non Null future Completable Future must be non null get time require Non Null unit Time Unit must be non null return true catch Execution Exception e return true catch java util concurrent Timeout Exception e return false Wait for a long time until the link Completable Future is completed param future the link Completable Future param the return type return the result value throws Execution Exception if the link Completable Future completed exceptionally throws Interrupted Exception if the current thread was interrupted while waiting public static await Completable Future future throws Execution Exception Interrupted Exception try return Objects require Non Null future Completable Future must be non null get Time Unit catch java util concurrent Timeout Exception e throw new Illegal State Exception This should never happen e public static Completion Exception as Completion Exception Throwable t if t instanceof Completion Exception return Completion Exception t else return new Completion Exception t public static void rethrow Exception Throwable t if t null throw as Completion Exception t public static Throwable extract Exception Throwable t Throwable cause t get Cause if cause null t instanceof Completion Exception return cause return t 
package org infinispan factories import static org infinispan factories Known Component Names import java lang ref Weak Reference import java util Collections import java util Map import org infinispan Advanced Cache import org infinispan cache impl Cache Configuration Bean import org infinispan commands Commands Factory import org infinispan commands module Module Command Initializer import org infinispan commons Cache Configuration Exception import org infinispan commons Cache Exception import org infinispan commons marshall Streaming Marshaller import org infinispan configuration cache Configuration import org infinispan conflict impl Internal Conflict Manager import org infinispan container versioning Version Generator import org infinispan factories annotations Inject import org infinispan factories components Component Metadata import org infinispan factories components Component Metadata Repo import org infinispan lifecycle Component Status import org infinispan lifecycle Module Lifecycle import org infinispan notifications cachemanagerlistener Cache Manager Notifier import org infinispan remoting inboundhandler Per Cache Inbound Invocation Handler import org infinispan remoting responses Response Generator import org infinispan statetransfer State Transfer Lock import org infinispan statetransfer State Transfer Manager import org infinispan stats Cluster Cache Stats import org infinispan transaction Transaction Table import org infinispan util Time Service import org infinispan util logging Log import org infinispan util logging Log Factory Named cache specific components author Manik Surtani since public class Component Registry extends Abstract Component Registry private final Global Component Registry global Components private final String cache Name private static final Log log Log Factory get Log Component Registry class private Cache Manager Notifier cache Manager Notifier Cached fields private State Transfer Manager state Transfer Manager private Response Generator response Generator private Commands Factory commands Factory private State Transfer Lock state Transfer Lock private Per Cache Inbound Invocation Handler inbound Invocation Handler private Version Generator version Generator protected final Weak Reference Class Loader default Class Loader Inject public void set Cache Manager Notifier Cache Manager Notifier cache Manager Notifier this cache Manager Notifier cache Manager Notifier Creates an instance of the component registry The configuration passed in is automatically registered param configuration configuration with which this is created param cache cache param global Components Shared Component Registry to delegate to public Component Registry String cache Name Configuration configuration Advanced Cache cache Global Component Registry global Components Class Loader default Class Loader this default Class Loader new Weak Reference default Class Loader try this cache Name cache Name if cache Name null throw new Cache Configuration Exception Cache name can not be null if global Components null throw new Null Pointer Exception Global Component Registry can not be null this global Components global Components register Component this Component Registry class register Component configuration Configuration class register Component new Bootstrap Factory cache configuration this Bootstrap Factory class bootstrap Components register any module specific command initializers Modules are on the same classloader as Infinispan Map Byte Module Command Initializer initializers global Components get Module Command Initializers if initializers null initializers is Empty register Non Volatile Component initializers for Module Command Initializer mci initializers values register Non Volatile Component mci mci get Class else register Non Volatile Component Collections empty Map catch Exception e throw new Cache Exception Unable to construct a Component Registry e Override protected Class Loader get Class Loader return default Class Loader get Override protected Log get Log return log Override Suppress Warnings unchecked public final get Component String component Type Name String name boolean name Is if is Global component Type Name name name Is return global Components get Component component Type Name name name Is else return get Local Component component Type Name name name Is Suppress Warnings unchecked public final get Local Component String component Type Name String name boolean name Is return super get Component component Type Name name name Is Suppress Warnings unchecked public final get Local Component Class component Type String component Type Name component Type get Name return get Local Component component Type Name component Type Name true Override protected final Component lookup Component String component Class Name String name boolean name Is if is Global component Class Name name name Is log tracef Looking up global component s component Class Name return global Components lookup Component component Class Name name name Is else log tracef Looking up local component s component Class Name return lookup Local Component component Class Name name name Is protected final Component lookup Local Component String component Class Name String name boolean name Is return super lookup Component component Class Name name name Is public final Global Component Registry get Global Component Registry return global Components Override protected final get Or Create Component Class component Class String name boolean name Is if is Global component Class get Name name name Is log tracef Get or create global component s component Class return global Components get Or Create Component component Class name name Is else log tracef Get or create local component s component Class return super get Or Create Component component Class name name Is private boolean is Global String component Class Name String name boolean name Is return is Global name Is name component Class Name Override protected Abstract Component Factory get Factory Class component Class String cf Class get Component Metadata Repo find Factory For Component component Class if cf Class null throw Stack Aware Configuration Exception No registered default factory for component component Class found Abstract Component Factory cf if is Global cf Class log tracef Looking up global factory for component s component Class cf global Components get Factory component Class else log tracef Looking up local factory for component s component Class cf super get Factory component Class return cf Override protected final void register Component Internal Object component String name boolean name Is if is Global component get Class get Name name name Is global Components register Component Internal component name name Is else super register Component Internal component name name Is Override protected Abstract Component Factory create Component Factory Internal Class component Class String cf Class if is Global cf Class return global Components create Component Factory Internal component Class cf Class return super create Component Factory Internal component Class cf Class private boolean is Global String class Name Component Metadata m get Component Metadata Repo find Component Metadata class Name return m null m is Global Scope Override public void start global Components start boolean need To Notify state Component Status state Component Status If stop the existing components and transition to if state need To Destroy Failed Cache stop If rewire non volatile components and transition to if state need To Initialize Before Start state Component Status rewire Do nothing if the cache was already running if state start Allowed return set this up before starting the components since some components specifically state transfer needs to be able to locate this registry via the Inbound Invocation Handler cache Components this global Components register Named Component Registry this cache Name notify Cache Starting get Component Configuration class super start super post Start if need To Notify state Component Status cache Manager Notifier notify Cache Started cache Name void notify Cache Starting Configuration configuration for Module Lifecycle l global Components module Lifecycles l cache Starting this configuration cache Name Override public void stop if state stop Allowed global Components unregister Named Component Registry cache Name boolean need To Notify state Component Status state Component Status if need To Notify for Module Lifecycle l global Components module Lifecycles if log is Trace Enabled log tracef Invoking s cache Stopping l l cache Stopping this cache Name super stop if state Component Status need To Notify for Module Lifecycle l global Components module Lifecycles if log is Trace Enabled log tracef Invoking s cache Stopped l l cache Stopped this cache Name cache Manager Notifier notify Cache Stopped cache Name Override public Time Service get Time Service return global Components get Time Service public String get Cache Name return cache Name Caching shortcut for get Component Streaming Marshaller class Known Component Names public Streaming Marshaller get Cache Marshaller return global Components get Component Streaming Marshaller class Caching shortcut for get Component State Transfer Manager class public State Transfer Manager get State Transfer Manager return state Transfer Manager Caching shortcut for get Component Response Generator class public Response Generator get Response Generator return response Generator Caching shortcut for get Local Component Commands Factory class public Commands Factory get Commands Factory return commands Factory Caching shortcut for get Component State Transfer Manager class public State Transfer Lock get State Transfer Lock return state Transfer Lock Caching shortcut for get Local Component Version Generator class public Version Generator get Version Generator return version Generator Caching shortcut for get Component Per Cache Inbound Invocation Handler class public Per Cache Inbound Invocation Handler get Per Cache Inbound Invocation Handler return inbound Invocation Handler Invoked after link Bootstrap Factory is registered but before any link Module Command Initializer This is a good place to register components that do n t have any dependency protected void bootstrap Components Invoked last after all services are wired public void cache Components state Transfer Manager get Or Create Component State Transfer Manager class response Generator get Or Create Component Response Generator class commands Factory get Local Component Commands Factory class state Transfer Lock get Or Create Component State Transfer Lock class inbound Invocation Handler get Or Create Component Per Cache Inbound Invocation Handler class version Generator get Or Create Component Version Generator class get Or Create Component Cluster Cache Stats class no need to save ref to a field just initialize component get Or Create Component Cache Configuration Bean class get Or Create Component Internal Conflict Manager class Override public Component Metadata Repo get Component Metadata Repo return global Components get Component Metadata Repo public final Transaction Table get Transaction Table return get Component org infinispan transaction impl Transaction Table class 
package org infinispan jmx import java util Array List import java util List import java util Set import javax management Bean Server import javax management Object Name import org infinispan commons Cache Exception import org infinispan factories Abstract Component Registry import org infinispan factories Component Registry import org infinispan factories components Component Metadata import org infinispan util logging Log import org infinispan util logging Log Factory Registers a set of components on an Bean server author Mircea Markus jboss com author Galder Zamarre o since public class Components Jmx Registration private static final Log log Log Factory get Log Components Jmx Registration class private Bean Server m Bean Server private String jmx Domain private String group Name private Set Abstract Component Registry Component components public static String component public static String name tor param m Bean Server the server where mbeans are being registered param components components param group Name name of jmx group name see java lang management Management Factory get Platform Bean Server see a href http java sun com j se docs guide management mxbeans html mbean server platform Bean Server a public Components Jmx Registration Bean Server m Bean Server Set Abstract Component Registry Component components String group Name this m Bean Server m Bean Server this components components this group Name group Name public void set Jmx Domain String jmx Domain this jmx Domain jmx Domain Performs the Bean registration public void register Beans throws Cache Exception try List Resource Bean resource Beans get Resource Beans From Components for Resource Bean resource resource Beans Jmx Util register Bean resource get Object Name resource m Bean Server catch Exception e throw new Cache Exception Failure while registering mbeans e Unregisters all the Beans registered through link register Beans public void unregister Beans throws Cache Exception log trace Unregistering jmx resources try List Resource Bean resource Beans get Resource Beans From Components for Resource Bean resource resource Beans Jmx Util unregister Bean get Object Name resource m Bean Server catch Exception e throw new Cache Exception Failure while unregistering mbeans e private List Resource Bean get Resource Beans From Components throws No Such Field Exception Class Not Found Exception List Resource Bean resource Beans new Array List Resource Bean components size for Component Registry Component component components Component Metadata md component get Metadata if md is Manageable Resource Bean resource Bean new Resource Bean component get Instance md to Manageable Component Metadata resource Beans add resource Bean return resource Beans private Object Name get Object Name Resource Bean resource throws Exception return get Object Name resource get Object Name protected Object Name get Object Name String resource Name throws Exception return new Object Name get Object Name jmx Domain group Name resource Name public static String get Object Name String jmx Domain String group Name String resource Name return jmx Domain group Name resource Name 
package org infinispan lifecycle import org infinispan util logging Log import org infinispan util logging Log Factory Different states a component may be in author Manik Surtani see org infinispan commons api Lifecycle since public enum Component Status Object has been instantiated but start has not been called The code start code method has been called but not yet completed The code start code method has been completed and the component is running The code stop code method has been called but has not yet completed The code stop code method has completed and the component has terminated The component is in a failed state due to a problem with one of the other lifecycle transition phases private static final Log log Log Factory get Log Component Status class public boolean need To Destroy Failed Cache return this Component Status public boolean start Allowed switch this case return true default return false public boolean need To Initialize Before Start switch this case return true default return false public boolean stop Allowed switch this case case case case return false default return true public boolean allow Invocations return this Component Status public boolean starting Up return this Component Status this Component Status public boolean is Terminated return this Component Status public boolean is Stopping return this Component Status 
package org infinispan filter import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan factories Component Registry import org infinispan factories annotations Inject import org infinispan marshall core Ids Allows composing several filters author Mircea Markus since public class Composite Key Filter implements Key Filter private final Key Filter super filters public Composite Key Filter Key Filter super filters this filters filters Override public boolean accept key for Key Filter super k filters if k accept key return false return true Inject protected void inject Dependencies Component Registry cr for Key Filter super f filters cr wire Dependencies f public static class Externalizer extends Abstract Externalizer Composite Key Filter Override public Set Class extends Composite Key Filter get Type Classes return Collections singleton Composite Key Filter class Override public void write Object Object Output output Composite Key Filter object throws Exception Unsigned Numeric write Unsigned Int output object filters length for Key Filter filter object filters output write Object filter Override public Composite Key Filter read Object Object Input input throws Exception Class Not Found Exception int filters Size Unsigned Numeric read Unsigned Int input Key Filter filters new Key Filter filters Size for int i i filters Size i filters i Key Filter input read Object return new Composite Key Filter filters Override public Integer get Id return Ids 
package org infinispan filter import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan factories Component Registry import org infinispan factories annotations Inject import org infinispan marshall core Ids import org infinispan metadata Metadata Allows composing several key value filters author wburns since public class Composite Key Value Filter implements Key Value Filter private final Key Value Filter super super filters public Composite Key Value Filter Key Value Filter super super filters this filters filters Override public boolean accept key value Metadata metadata for Key Value Filter super super filter filters if filter accept key value metadata return false return true Inject protected void inject Dependencies Component Registry cr for Key Value Filter super super f filters cr wire Dependencies f public static class Externalizer extends Abstract Externalizer Composite Key Value Filter Override public Set Class extends Composite Key Value Filter get Type Classes return Collections singleton Composite Key Value Filter class Override public void write Object Object Output output Composite Key Value Filter object throws Exception Unsigned Numeric write Unsigned Int output object filters length for Key Value Filter filter object filters output write Object filter Override public Composite Key Value Filter read Object Object Input input throws Exception Class Not Found Exception int filters Size Unsigned Numeric read Unsigned Int input Key Value Filter filters new Key Value Filter filters Size for int i i filters Size i filters i Key Value Filter input read Object return new Composite Key Value Filter filters Override public Integer get Id return Ids 
package org infinispan client hotrod configuration import java lang ref Weak Reference import java util Arrays import java util Collections import java util List import java util Map import java util Properties import org infinispan client hotrod Protocol Version import org infinispan client hotrod impl Configuration Properties import org infinispan client hotrod impl consistenthash Consistent Hash import org infinispan client hotrod impl transport Transport Factory import org infinispan client hotrod impl transport tcp Failover Request Balancing Strategy import org infinispan commons configuration Built By import org infinispan commons marshall Marshaller import org infinispan commons util Typed Properties Configuration author Tristan Tarrant since Built By Configuration Builder class public class Configuration private final Executor Factory Configuration async Executor Factory private final Class extends Failover Request Balancing Strategy balancing Strategy Class private final Failover Request Balancing Strategy balancing Strategy private final Weak Reference Class Loader class Loader private final Client Intelligence client Intelligence private final Connection Pool Configuration connection Pool private final int connection Timeout private final Class extends Consistent Hash consistent Hash Impl private final boolean force Return Values private final int key Size Estimate private final Class extends Marshaller marshaller Class private final Marshaller marshaller private final Protocol Version protocol Version private final List Server Configuration servers private final int socket Timeout private final Security Configuration security private final boolean tcp No Delay private final boolean tcp Keep Alive private final Class extends Transport Factory transport Factory private final int value Size Estimate private final int max Retries private final Near Cache Configuration near Cache private final List Cluster Configuration clusters private final List String serial Whitelist private final int batch Size Configuration Executor Factory Configuration async Executor Factory Class extends Failover Request Balancing Strategy balancing Strategy Class Failover Request Balancing Strategy balancing Strategy Class Loader class Loader Client Intelligence client Intelligence Connection Pool Configuration connection Pool int connection Timeout Class extends Consistent Hash consistent Hash Impl boolean force Return Values int key Size Estimate Marshaller marshaller Class extends Marshaller marshaller Class Protocol Version protocol Version List Server Configuration servers int socket Timeout Security Configuration security boolean tcp No Delay boolean tcp Keep Alive Class extends Transport Factory transport Factory int value Size Estimate int max Retries Near Cache Configuration near Cache List Cluster Configuration clusters List String serial Whitelist int batch Size this async Executor Factory async Executor Factory this balancing Strategy Class balancing Strategy Class this balancing Strategy balancing Strategy this max Retries max Retries this class Loader new Weak Reference class Loader this client Intelligence client Intelligence this connection Pool connection Pool this connection Timeout connection Timeout this consistent Hash Impl consistent Hash Impl this force Return Values force Return Values this key Size Estimate key Size Estimate this marshaller Class marshaller Class this marshaller marshaller this protocol Version protocol Version this servers Collections unmodifiable List servers this socket Timeout socket Timeout this security security this tcp No Delay tcp No Delay this tcp Keep Alive tcp Keep Alive this transport Factory transport Factory this value Size Estimate value Size Estimate this near Cache near Cache this clusters clusters this serial Whitelist serial Whitelist this batch Size batch Size public Executor Factory Configuration async Executor Factory return async Executor Factory public Class extends Failover Request Balancing Strategy balancing Strategy Class return balancing Strategy Class public Failover Request Balancing Strategy balancing Strategy return balancing Strategy Deprecated public Class Loader class Loader return class Loader get public Client Intelligence client Intelligence return client Intelligence public Connection Pool Configuration connection Pool return connection Pool public int connection Timeout return connection Timeout public Class extends Consistent Hash consistent Hash Impl return Arrays copy Of consistent Hash Impl consistent Hash Impl length public Class extends Consistent Hash consistent Hash Impl int version return consistent Hash Impl version public boolean force Return Values return force Return Values public int key Size Estimate return key Size Estimate public Marshaller marshaller return marshaller public Class extends Marshaller marshaller Class return marshaller Class public Near Cache Configuration near Cache return near Cache deprecated Use link Configuration version instead Deprecated public String protocol Version return protocol Version to String public Protocol Version version return protocol Version public List Server Configuration servers return servers public List Cluster Configuration clusters return clusters public int socket Timeout return socket Timeout public Security Configuration security return security public boolean tcp No Delay return tcp No Delay public boolean tcp Keep Alive return tcp Keep Alive public Class extends Transport Factory transport Factory return transport Factory public int value Size Estimate return value Size Estimate public int max Retries return max Retries public List String serial Whitelist return serial Whitelist public int batch Size return batch Size Override public String to String return Configuration async Executor Factory async Executor Factory balancing Strategy Class balancing Strategy Class balancing Strategy balancing Strategy class Loader class Loader client Intelligence client Intelligence connection Pool connection Pool connection Timeout connection Timeout consistent Hash Impl Arrays to String consistent Hash Impl force Return Values force Return Values key Size Estimate key Size Estimate marshaller Class marshaller Class marshaller marshaller protocol Version protocol Version servers servers socket Timeout socket Timeout security security tcp No Delay tcp No Delay tcp Keep Alive tcp Keep Alive transport Factory transport Factory value Size Estimate value Size Estimate max Retries max Retries serial White List serial Whitelist batch Size batch Size near Cache near Cache public Properties properties Properties properties new Properties if async Executor Factory factory Class null properties set Property Configuration Properties async Executor Factory factory Class get Name Typed Properties aef Props async Executor Factory properties for String key Arrays as List Configuration Properties Configuration Properties if aef Props contains Key key properties set Property key aef Props get Property key properties set Property Configuration Properties balancing Strategy Class get Name properties set Property Configuration Properties client Intelligence name properties set Property Configuration Properties Integer to String connection Timeout for int i i consistent Hash Impl length i int version i if consistent Hash Impl version null properties set Property Configuration Properties version consistent Hash Impl version get Name properties set Property Configuration Properties Boolean to String force Return Values properties set Property Configuration Properties Integer to String key Size Estimate properties set Property Configuration Properties marshaller Class get Name properties set Property Configuration Properties version to String properties set Property Configuration Properties Integer to String socket Timeout properties set Property Configuration Properties Boolean to String tcp No Delay properties set Property Configuration Properties Boolean to String tcp Keep Alive properties set Property Configuration Properties transport Factory get Name properties set Property Configuration Properties Integer to String value Size Estimate properties set Property Configuration Properties Integer to String max Retries properties set Property exhausted Action Integer to String connection Pool exhausted Action ordinal properties set Property max Active Integer to String connection Pool max Active properties set Property max Total Integer to String connection Pool max Total properties set Property max Wait Long to String connection Pool max Wait properties set Property max Idle Integer to String connection Pool max Idle properties set Property min Idle Integer to String connection Pool min Idle properties set Property num Tests Per Eviction Run Integer to String connection Pool num Tests Per Eviction Run properties set Property min Evictable Idle Time Millis Long to String connection Pool min Evictable Idle Time properties set Property time Between Eviction Runs Millis Long to String connection Pool time Between Eviction Runs properties set Property lifo Boolean to String connection Pool lifo properties set Property test On Borrow Boolean to String connection Pool test On Borrow properties set Property test On Return Boolean to String connection Pool test On Return properties set Property test While Idle Boolean to String connection Pool test While Idle String Builder servers new String Builder for Server Configuration server servers if servers length servers append servers append server host append append server port properties set Property Configuration Properties servers to String properties set Property Configuration Properties Boolean to String security ssl enabled if security ssl key Store File Name null properties set Property Configuration Properties security ssl key Store File Name if security ssl key Store Password null properties set Property Configuration Properties new String security ssl key Store Password if security ssl key Store Certificate Password null properties set Property Configuration Properties new String security ssl key Store Certificate Password if security ssl trust Store File Name null properties set Property Configuration Properties security ssl trust Store File Name if security ssl trust Store Password null properties set Property Configuration Properties new String security ssl trust Store Password if security ssl sni Host Name null properties set Property Configuration Properties security ssl sni Host Name if security ssl protocol null properties set Property Configuration Properties security ssl protocol if security ssl ssl Context null properties put Configuration Properties security ssl ssl Context properties set Property Configuration Properties Boolean to String security authentication enabled if security authentication sasl Mechanism null properties set Property Configuration Properties security authentication sasl Mechanism if security authentication callback Handler null properties put Configuration Properties security authentication callback Handler if security authentication server Name null properties set Property Configuration Properties security authentication server Name if security authentication client Subject null properties put Configuration Properties security authentication client Subject for Map Entry String String entry security authentication sasl Properties entry Set properties set Property Configuration Properties entry get Key entry get Value properties set Property Configuration Properties String join serial Whitelist properties set Property Configuration Properties Integer to String batch Size return properties 
package org infinispan client hotrod configuration import java lang ref Weak Reference import java util Array List import java util Arrays import java util Collections import java util Hash Set import java util List import java util Properties import java util Set import java util regex Matcher import java util regex Pattern import java util stream Collectors import org infinispan client hotrod Protocol Version import org infinispan client hotrod Remote Cache Manager import org infinispan client hotrod impl Configuration Properties import org infinispan client hotrod impl Typed Properties import org infinispan client hotrod impl consistenthash Consistent Hash import org infinispan client hotrod impl consistenthash Consistent Hash import org infinispan client hotrod impl consistenthash Segment Consistent Hash import org infinispan client hotrod impl transport Transport Factory import org infinispan client hotrod impl transport tcp Failover Request Balancing Strategy import org infinispan client hotrod impl transport tcp Round Robin Balancing Strategy import org infinispan client hotrod impl transport tcp Tcp Transport Factory import org infinispan client hotrod logging Log import org infinispan client hotrod logging Log Factory import org infinispan commons configuration Builder import org infinispan commons marshall Marshaller import org infinispan commons marshall jboss Generic Boss Marshaller import org infinispan commons util Util Configuration Builder used to generate immutable link Configuration objects to pass to the link Remote Cache Manager Remote Cache Manager Configuration constructor author Tristan Tarrant since public class Configuration Builder implements Configuration Child Builder Builder Configuration private static final Log log Log Factory get Log Configuration Builder class Log class Match Pv host port or Pv host port addresses private static final Pattern Pattern compile Fa f d private Weak Reference Class Loader class Loader private final Executor Factory Configuration Builder async Executor Factory private Class extends Failover Request Balancing Strategy balancing Strategy Class Round Robin Balancing Strategy class private Failover Request Balancing Strategy balancing Strategy private Client Intelligence client Intelligence Client Intelligence get Default private final Connection Pool Configuration Builder connection Pool private int connection Timeout Configuration Properties Suppress Warnings unchecked private final Class extends Consistent Hash consistent Hash Impl new Class null Consistent Hash class Segment Consistent Hash class private boolean force Return Values private int key Size Estimate Configuration Properties private Class extends Marshaller marshaller Class private Marshaller marshaller private Protocol Version protocol Version Protocol Version private final List Server Configuration Builder servers new Array List Server Configuration Builder private int socket Timeout Configuration Properties private final Security Configuration Builder security private boolean tcp No Delay true private boolean tcp Keep Alive false private Class extends Transport Factory transport Factory Tcp Transport Factory class private int value Size Estimate Configuration Properties private int max Retries Configuration Properties private final Near Cache Configuration Builder near Cache private final List String white List Reg Exs new Array List private int batch Size Configuration Properties private final List Cluster Configuration Builder clusters new Array List Cluster Configuration Builder public Configuration Builder this class Loader new Weak Reference Thread current Thread get Context Class Loader this connection Pool new Connection Pool Configuration Builder this this async Executor Factory new Executor Factory Configuration Builder this this security new Security Configuration Builder this this near Cache new Near Cache Configuration Builder this Override public Server Configuration Builder add Server Server Configuration Builder builder new Server Configuration Builder this this servers add builder return builder Override public Cluster Configuration Builder add Cluster String cluster Name Cluster Configuration Builder builder new Cluster Configuration Builder this cluster Name this clusters add builder return builder Override public Configuration Builder add Servers String servers for String server servers split Matcher matcher matcher server trim if matcher matches String v host matcher group String v host matcher group String host v host null v host v host String port String matcher group int port port String null Configuration Properties Integer parse Int port String this add Server host host port port else throw log parse Error Server Address server return this Override public Executor Factory Configuration Builder async Executor Factory return this async Executor Factory Override public Configuration Builder balancing Strategy String balancing Strategy this balancing Strategy Class Util load Class balancing Strategy this class Loader return this Override public Configuration Builder balancing Strategy Failover Request Balancing Strategy balancing Strategy this balancing Strategy balancing Strategy return this Override public Configuration Builder balancing Strategy Class extends Failover Request Balancing Strategy balancing Strategy this balancing Strategy Class balancing Strategy return this Override public Configuration Builder class Loader Class Loader cl this class Loader new Weak Reference cl return this Class Loader class Loader return class Loader null class Loader get null Override public Configuration Builder client Intelligence Client Intelligence client Intelligence this client Intelligence client Intelligence return this Override public Connection Pool Configuration Builder connection Pool return connection Pool Override public Configuration Builder connection Timeout int connection Timeout this connection Timeout connection Timeout return this Override public Configuration Builder consistent Hash Impl int version Class extends Consistent Hash consistent Hash Class if version log warn Hash function version is no longer supported else this consistent Hash Impl version consistent Hash Class return this Override public Configuration Builder consistent Hash Impl int version String consistent Hash Class if version log warn Hash function version is no longer supported else this consistent Hash Impl version Util load Class consistent Hash Class class Loader return this Override public Configuration Builder force Return Values boolean force Return Values this force Return Values force Return Values return this Override public Configuration Builder key Size Estimate int key Size Estimate this key Size Estimate key Size Estimate return this Override public Configuration Builder marshaller String marshaller this marshaller Class Util load Class marshaller this class Loader return this Override public Configuration Builder marshaller Class extends Marshaller marshaller this marshaller Class marshaller return this Override public Configuration Builder marshaller Marshaller marshaller this marshaller marshaller return this public Near Cache Configuration Builder near Cache return near Cache deprecated Use link Configuration Builder version Protocol Version instead Deprecated Override public Configuration Builder protocol Version String protocol Version this protocol Version Protocol Version parse Version protocol Version return this Override public Configuration Builder version Protocol Version protocol Version this protocol Version protocol Version return this Override public Security Configuration Builder security return security Override public Configuration Builder socket Timeout int socket Timeout this socket Timeout socket Timeout return this Override public Configuration Builder tcp No Delay boolean tcp No Delay this tcp No Delay tcp No Delay return this Override public Configuration Builder tcp Keep Alive boolean keep Alive this tcp Keep Alive keep Alive return this Override public Configuration Builder transport Factory String transport Factory this transport Factory Util load Class transport Factory this class Loader return this Override public Configuration Builder transport Factory Class extends Transport Factory transport Factory this transport Factory transport Factory return this Override public Configuration Builder value Size Estimate int value Size Estimate this value Size Estimate value Size Estimate return this Override public Configuration Builder max Retries int max Retries this max Retries max Retries return this Override public Configuration Builder add Java Serial White List String reg Ex this white List Reg Exs add All Arrays as List reg Ex return this Override public Configuration Builder batch Size int batch Size if batch Size throw new Illegal Argument Exception batch Size must be greater than this batch Size batch Size return this Override public Configuration Builder with Properties Properties properties Typed Properties typed Typed Properties to Typed Properties properties if typed contains Key Configuration Properties this async Executor Factory factory Class typed get Property Configuration Properties null true this async Executor Factory with Executor Properties typed this balancing Strategy typed get Property Configuration Properties balancing Strategy Class get Name true this client Intelligence typed get Enum Property Configuration Properties Client Intelligence class Client Intelligence get Default true this connection Pool with Pool Properties typed this connection Timeout typed get Int Property Configuration Properties connection Timeout true if typed contains Key Configuration Properties log warn Hash function version is no longer supported for int i i consistent Hash Impl length i if consistent Hash Impl i null int version i this consistent Hash Impl version typed get Property Configuration Properties version consistent Hash Impl i get Name true this force Return Values typed get Boolean Property Configuration Properties force Return Values true this key Size Estimate typed get Int Property Configuration Properties key Size Estimate true if typed contains Key Configuration Properties this marshaller typed get Property Configuration Properties null true this version Protocol Version parse Version typed get Property Configuration Properties protocol Version to String true String server List typed get Property Configuration Properties null true if server List null this servers clear this add Servers server List this socket Timeout typed get Int Property Configuration Properties socket Timeout true this tcp No Delay typed get Boolean Property Configuration Properties tcp No Delay true this tcp Keep Alive typed get Boolean Property Configuration Properties tcp Keep Alive true if typed contains Key Configuration Properties this transport Factory typed get Property Configuration Properties null true this value Size Estimate typed get Int Property Configuration Properties value Size Estimate true this max Retries typed get Int Property Configuration Properties max Retries true this security ssl with Properties properties this security authentication with Properties properties String serial Whitelist typed get Property Configuration Properties if serial Whitelist null String classes serial Whitelist split Collections add All this white List Reg Exs classes this batch Size typed get Int Property Configuration Properties batch Size true return this Override public void validate connection Pool validate async Executor Factory validate security validate near Cache validate if max Retries throw log invalid Max Retries max Retries Set String cluster Name Set new Hash Set String clusters size for Cluster Configuration Builder cluster Config Builder clusters if cluster Name Set add cluster Config Builder get Cluster Name throw log duplicate Cluster Definition cluster Config Builder get Cluster Name cluster Config Builder validate Override public Configuration create List Server Configuration servers new Array List Server Configuration if this servers size for Server Configuration Builder server this servers servers add server create else servers add new Server Configuration Configuration Properties List Cluster Configuration server Cluster Configs clusters stream map Cluster Configuration Builder create collect Collectors to List if marshaller null marshaller Class null marshaller Class Generic Boss Marshaller class return new Configuration async Executor Factory create balancing Strategy Class balancing Strategy class Loader null null class Loader get client Intelligence connection Pool create connection Timeout consistent Hash Impl force Return Values key Size Estimate marshaller marshaller Class protocol Version servers socket Timeout security create tcp No Delay tcp Keep Alive transport Factory value Size Estimate max Retries near Cache create server Cluster Configs white List Reg Exs batch Size Override public Configuration build return build true public Configuration build boolean validate if validate validate return create Override public Configuration Builder read Configuration template this class Loader new Weak Reference Class Loader template class Loader this async Executor Factory read template async Executor Factory this balancing Strategy Class template balancing Strategy Class this balancing Strategy template balancing Strategy this connection Pool read template connection Pool this connection Timeout template connection Timeout for int i i consistent Hash Impl length i this consistent Hash Impl i template consistent Hash Impl i this force Return Values template force Return Values this key Size Estimate template key Size Estimate this marshaller template marshaller this marshaller Class template marshaller Class this protocol Version template version this servers clear for Server Configuration server template servers this add Server host server host port server port this socket Timeout template socket Timeout this security read template security this tcp No Delay template tcp No Delay this tcp Keep Alive template tcp Keep Alive this transport Factory template transport Factory this value Size Estimate template value Size Estimate this max Retries template max Retries this near Cache read template near Cache this white List Reg Exs add All template serial Whitelist return this 
package org infinispan configuration parsing import java lang ref Weak Reference import java util Hash Map import java util Map import java util Stack import org infinispan configuration cache Configuration Builder import org infinispan configuration global Global Configuration Builder public class Configuration Builder Holder private final Global Configuration Builder global Configuration Builder private final Map String Configuration Builder named Configuration Builders private Configuration Builder current Configuration Builder private final Map Class extends Configuration Parser Parser Context parser Contexts private final Weak Reference Class Loader class Loader private final Stack Parser Scope scope public Configuration Builder Holder this Thread current Thread get Context Class Loader public Configuration Builder Holder Class Loader class Loader this global Configuration Builder new Global Configuration Builder this named Configuration Builders new Hash Map this parser Contexts new Hash Map this class Loader new Weak Reference class Loader scope new Stack scope push Parser Scope public Global Configuration Builder get Global Configuration Builder return global Configuration Builder public Configuration Builder new Configuration Builder String name Configuration Builder builder new Configuration Builder named Configuration Builders put name builder current Configuration Builder builder return builder public Map String Configuration Builder get Named Configuration Builders return named Configuration Builders public Configuration Builder get Current Configuration Builder return current Configuration Builder public Configuration Builder get Default Configuration Builder if global Configuration Builder default Cache Name is Present return named Configuration Builders get global Configuration Builder default Cache Name get else return null void push Scope Parser Scope scope this scope push scope void pop Scope this scope pop public Parser Scope get Scope return scope peek Suppress Warnings unchecked public extends Parser Context get Parser Context Class extends Configuration Parser parser Class return parser Contexts get parser Class public void set Parser Context Class extends Configuration Parser parser Class Parser Context context parser Contexts put parser Class context public Class Loader get Class Loader return class Loader get Map Class extends Configuration Parser Parser Context get Parser Contexts return parser Contexts public void validate global Configuration Builder default Cache Name if Present name if named Configuration Builders contains Key name throw Parser log missing Default Cache Declaration name 
package org infinispan configuration cache import java util Collections import java util List Configures custom interceptors to be added to the cache author pmuir public class Custom Interceptors Configuration private List Interceptor Configuration interceptors Custom Interceptors Configuration List Interceptor Configuration interceptors this interceptors interceptors public Custom Interceptors Configuration this interceptors Collections empty List This specifies a list of link Interceptor Configuration instances to be referenced when building the interceptor chain return list of link Interceptor Configuration s May be an empty list will never be null public List Interceptor Configuration interceptors return interceptors public Custom Interceptors Configuration interceptors List Interceptor Configuration interceptors this interceptors interceptors return this Override public String to String return Custom Interceptors Configuration interceptors interceptors Override public boolean equals Object o if this o return true if o null get Class o get Class return false Custom Interceptors Configuration that Custom Interceptors Configuration o if interceptors null interceptors equals that interceptors that interceptors null return false return true Override public int hash Code return interceptors null interceptors hash Code 
package org infinispan configuration cache import java util Array List import java util Linked List import java util List import org infinispan commons configuration Builder import org infinispan configuration global Global Configuration Configures custom interceptors to be added to the cache author pmuir public class Custom Interceptors Configuration Builder extends Abstract Configuration Child Builder implements Builder Custom Interceptors Configuration private List Interceptor Configuration Builder interceptor Builders new Linked List Interceptor Configuration Builder Custom Interceptors Configuration Builder Configuration Builder builder super builder Adds a new custom interceptor definition to be added to the cache when the cache is started public Interceptor Configuration Builder add Interceptor Interceptor Configuration Builder builder new Interceptor Configuration Builder this this interceptor Builders add builder return builder Override public void validate for Interceptor Configuration Builder builder interceptor Builders builder validate Override public void validate Global Configuration global Config for Interceptor Configuration Builder builder interceptor Builders builder validate global Config Override public Custom Interceptors Configuration create if interceptor Builders is Empty return new Custom Interceptors Configuration else List Interceptor Configuration interceptors new Array List Interceptor Configuration interceptor Builders size for Interceptor Configuration Builder builder interceptor Builders interceptors add builder create return new Custom Interceptors Configuration interceptors Override public Custom Interceptors Configuration Builder read Custom Interceptors Configuration template this interceptor Builders new Linked List Interceptor Configuration Builder for Interceptor Configuration c template interceptors this interceptor Builders add new Interceptor Configuration Builder this read c return this Override public String to String return Custom Interceptors Configuration Builder interceptors interceptor Builders 
package org infinispan configuration cache import org infinispan commons configuration Abstract Typed Properties Configuration import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set import org infinispan commons configuration attributes Identity Attribute Copier import org infinispan commons equivalence Any Equivalence import org infinispan commons equivalence Equivalence import org infinispan container Data Container Controls the data container for the cache author pmuir deprecated Please use link Memory Configuration Deprecated public class Data Container Configuration extends Abstract Typed Properties Configuration public static final Attribute Definition Data Container Attribute Definition builder data Container null Data Container class xml Name class copier Identity Attribute Copier immutable build static public Attribute Set attribute Definition Set return new Attribute Set Data Container Configuration class Abstract Typed Properties Configuration attribute Set private final Attribute Data Container data Container Data Container Configuration Attribute Set attributes super attributes data Container attributes attribute Data container implementation in use return deprecated data container is no longer to exposed via configuration at a later point Deprecated public Data Container data Container return data Container get deprecated Equivalence is no longer used This will be removed in the future Only returns link Any Equivalence Deprecated public Equivalence key Equivalence return Any Equivalence get Instance deprecated Equivalence is no longer used This will be removed in the future Only returns link Any Equivalence Deprecated public Equivalence value Equivalence return Any Equivalence get Instance public Attribute Set attributes return attributes Override public String to String return Data Container Configuration attributes attributes 
package org infinispan configuration cache import static org infinispan commons configuration Abstract Typed Properties Configuration import static org infinispan configuration cache Data Container Configuration import java util Properties import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan commons equivalence Equivalence import org infinispan commons util Typed Properties import org infinispan configuration global Global Configuration import org infinispan container Data Container Controls the data container for the cache author pmuir deprecated Please use link Memory Configuration Deprecated public class Data Container Configuration Builder extends Abstract Configuration Child Builder implements Builder Data Container Configuration private Attribute Set attributes Data Container Configuration Builder Configuration Builder builder super builder attributes Data Container Configuration attribute Definition Set Specify the data container in use param data Container return deprecated data container is no longer to exposed via configuration at a later point Deprecated public Data Container Configuration Builder data Container Data Container data Container attributes attribute set data Container return this Add key value property pair to this data container configuration param key property key param value property value return previous value if exists null otherwise public Data Container Configuration Builder add Property String key String value Typed Properties properties attributes attribute get properties put key value attributes attribute set Typed Properties to Typed Properties properties return this Set key value properties to this link Data Container configuration param props Properties return this Executor Factory Config public Data Container Configuration Builder with Properties Properties props attributes attribute set Typed Properties to Typed Properties props return this Set the link org infinispan commons equivalence Equivalence instance to use to compare keys stored in data container link org infinispan commons equivalence Equivalence implementations allow for custom comparisons to be provided when the or external libraries do not provide adequate comparison implementations i e arrays param key Equivalence instance of link org infinispan commons equivalence Equivalence used to compare key types return this configuration builder deprecated Equivalence is to be removed byte are directly supported Deprecated public Data Container Configuration Builder key Equivalence Equivalence key Equivalence return this Set the link org infinispan commons equivalence Equivalence instance to use to compare values stored in data container link org infinispan commons equivalence Equivalence implementations allow for custom comparisons to be provided when the or external libraries do not provide adequate comparison implementations i e arrays param value Equivalence instance of link org infinispan commons equivalence Equivalence used to compare value types return this configuration builder deprecated Equivalence is to be removed byte are directly supported Deprecated public Data Container Configuration Builder value Equivalence Equivalence value Equivalence return this Override public void validate Override public void validate Global Configuration global Config Override public Data Container Configuration create return new Data Container Configuration attributes protect Override public Data Container Configuration Builder read Data Container Configuration template attributes read template attributes return this Override public String to String return Data Container Configuration Builder attributes attributes 
package org infinispan factories import org infinispan configuration cache Eviction Configuration import org infinispan configuration cache Memory Configuration import org infinispan container Data Container import org infinispan container Default Data Container import org infinispan configuration cache Storage Type import org infinispan container offheap Bounded Off Heap Data Container import org infinispan container offheap Off Heap Data Container import org infinispan factories annotations Default Factory For Constructs the data container author Manik Surtani a href mailto manik jboss org manik jboss org a author Vladimir Blagojevic since Default Factory For classes Data Container class public class Data Container Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override Suppress Warnings unchecked public construct Class component Type if configuration data Container data Container null return configuration data Container data Container else int level configuration locking concurrency Level long threshold Size configuration memory size handle case when value signifies unbounded container if threshold Size if configuration memory storage Type Storage Type return new Off Heap Data Container configuration memory address Count else return Default Data Container un Bounded Data Container level Data Container data Container if configuration memory storage Type Storage Type data Container new Bounded Off Heap Data Container configuration memory address Count threshold Size configuration memory eviction Type else data Container Default Data Container bounded Data Container level threshold Size configuration memory eviction Type configuration eviction attributes attribute Eviction Configuration add Listener new Size old configuration memory size new Size get configuration memory attributes attribute Memory Configuration add Listener new Size old data Container resize new Size get return data Container 
package org infinispan util import java util Iterator import org infinispan Cache import org infinispan container Data Container import org infinispan container entries Cache Entry import org infinispan container entries Internal Cache Entry This is an iterator that will iterate upon the data container cache is also provided to be used when the remove method on the iterator is invoked Note that this means it will take part of any ongoing transaction if there is one public class Data Container Remove Iterator implements Iterator Cache Entry private final Cache cache private final Iterator Internal Cache Entry data Container Iterator private previous Key public Data Container Remove Iterator Cache cache this cache cache get Advanced Cache get Data Container public Data Container Remove Iterator Cache cache Data Container data Container if cache null data Container null throw new Null Pointer Exception this cache cache this data Container Iterator data Container iterator Override public boolean has Next return data Container Iterator has Next Override public Cache Entry next Cache Entry entry data Container Iterator next previous Key entry get Key return entry Override public void remove if previous Key null throw new Illegal State Exception cache remove previous Key previous Key null 
package org infinispan configuration cache import java util concurrent Time Unit import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration Configures deadlock detection deprecated Since deadlock detection is always disabled Deprecated public class Deadlock Detection Configuration Builder extends Abstract Configuration Child Builder implements Builder Deadlock Detection Configuration private final Attribute Set attributes Deadlock Detection Configuration Builder Configuration Builder builder super builder attributes Deadlock Detection Configuration attribute Definition Set Time period that determines how often is lock acquisition attempted within maximum time allowed to acquire a particular lock deprecated Since deadlock detection is always disabled Deprecated public Deadlock Detection Configuration Builder spin Duration long l return this Time period that determines how often is lock acquisition attempted within maximum time allowed to acquire a particular lock deprecated Since deadlock detection is always disabled Deprecated public Deadlock Detection Configuration Builder spin Duration long l Time Unit unit return spin Duration unit to Millis l Enable deadlock detection deprecated Since deadlock detection is always disabled Deprecated public Deadlock Detection Configuration Builder enable return this Disable deadlock detection deprecated Since deadlock detection is always disabled Deprecated public Deadlock Detection Configuration Builder disable return this Enable or disable deadlock detection deprecated Since deadlock detection is always disabled Deprecated public Deadlock Detection Configuration Builder enabled boolean enabled return this Override public void validate Override public void validate Global Configuration global Config Override public Deadlock Detection Configuration create return new Deadlock Detection Configuration attributes protect Override public Deadlock Detection Configuration Builder read Deadlock Detection Configuration template attributes read template attributes return this Override public String to String return Deadlock Detection Configuration Builder attributes attributes 
package org infinispan cache impl import static java util concurrent Time Unit import java util Arrays import java util Collection import java util Map import java util Objects import java util Set import java util concurrent Completable Future import java util concurrent Time Unit import java util function Bi Function import java util function Function import org infinispan Advanced Cache import org infinispan Cache Collection import org infinispan Cache Set import org infinispan Locked Stream import org infinispan commons dataconversion Encoder import org infinispan commons dataconversion Wrapper import org infinispan commons util Enum Util import org infinispan container entries Cache Entry import org infinispan context Flag import org infinispan context Invocation Context import org infinispan encoding Data Conversion import org infinispan filter Key Filter import org infinispan metadata Embedded Metadata import org infinispan metadata Metadata import org infinispan stream Stream Marshalling import org infinispan stream impl local Value Cache Collection decorator to a cache which can be built with a specific set of link Flag s This set of link Flag s will be applied to all cache invocations made via this decorator p In addition to cleaner and more readable code this approach offers a performance benefit to using link Advanced Cache with Flags org infinispan context Flag thanks to internal optimizations that can be made when the link Flag set is unchanging p Note that link Decorated Cache must be the closest Delegate to the actual Cache implementation All others must delegate to this Decorated Cache author Manik Surtani author Sanne Grinovero author Tristan Tarrant see Advanced Cache with Flags org infinispan context Flag since public class Decorated Cache extends Abstract Delegating Advanced Cache private static final Flag new Flag private final long flags private final Object lock Owner private final Cache Impl cache Implementation public Decorated Cache Advanced Cache delegate this delegate public Decorated Cache Advanced Cache delegate Flag flags this delegate null flags public Decorated Cache Advanced Cache delegate Object lock Owner Flag flags super delegate if flags length this flags Enum Util else this flags Enum Util bit Set Of flags this lock Owner lock Owner Yuk cache Implementation Cache Impl delegate private Decorated Cache Cache Impl delegate Object lock Owner long new Flags this constructor is private so we already checked for argument validity super delegate this flags new Flags this lock Owner lock Owner this cache Implementation delegate Override public Advanced Cache with final Class Loader class Loader if class Loader null throw new Illegal Argument Exception Class Loader can not be null return this Override public Advanced Cache with Flags final Flag flags if flags null flags length return this else long new Flags Enum Util bit Set Of flags if Enum Util contains All this flags new Flags we already have all specified flags return this else return new Decorated Cache this cache Implementation lock Owner Enum Util merge Bit Sets this flags new Flags Override public Advanced Cache with Encoding Class extends Encoder encoder Class return new Encoder Cache this Data Conversion with Encoding encoder Class Data Conversion with Encoding encoder Class Override public Advanced Cache with Encoding Class extends Encoder key Encoder Class Class extends Encoder value Encoder Class return new Encoder Cache this Data Conversion with Encoding key Encoder Class Data Conversion with Encoding value Encoder Class Override public Advanced Cache with Wrapping Class extends Wrapper wrapper Class return new Encoder Cache this Data Conversion with Wrapping wrapper Class Data Conversion with Wrapping wrapper Class Override public Advanced Cache with Wrapping Class extends Wrapper key Wrapper Class Class extends Wrapper value Wrapper Class return new Encoder Cache this Data Conversion with Wrapping key Wrapper Class Data Conversion with Wrapping value Wrapper Class Override public Advanced Cache lock As Object lock Owner Objects require Non Null lock Owner if lock Owner this lock Owner return new Decorated Cache cache Implementation lock Owner flags return this public Object get Lock Owner return lock Owner Override public Locked Stream locked Stream assert No Lock Owner locked Stream return super locked Stream Override public Class Loader get Class Loader return cache Implementation get Class Loader Override public void stop cache Implementation stop Override public boolean lock keys assert No Lock Owner lock return cache Implementation lock Arrays as List keys flags Override public boolean lock Collection extends keys assert No Lock Owner lock return cache Implementation lock keys flags Override public void put For External Read key value put For External Read key value cache Implementation default Metadata Override public void put For External Read key value Metadata metadata assert No Lock Owner put For External Read cache Implementation put For External Read key value metadata flags Override public void put For External Read key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build put For External Read key value metadata Override public void put For External Read key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build put For External Read key value metadata Override public void evict key cache Implementation evict key flags Override public put key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return put key value metadata Override public put If Absent key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return put If Absent key value metadata Override public void put All Map extends extends map long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build put All map metadata Override public replace key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return replace key value metadata Override public boolean replace key old Value value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return replace key old Value value metadata Override public put key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit max Idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time max Idle Time Unit build return put key value metadata Override public put If Absent key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit max Idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time max Idle Time Unit build return put If Absent key value metadata Override public void put All Map extends extends map long lifespan Time Unit lifespan Unit long max Idle Time Time Unit max Idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time max Idle Time Unit build put All map metadata Override public replace key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit max Idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time max Idle Time Unit build return replace key value metadata Override public boolean replace key old Value value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit max Idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time max Idle Time Unit build return replace key old Value value metadata Override public Completable Future put Async key value return put Async key value cache Implementation default Metadata Override public Completable Future put Async key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return put Async key value metadata Override public Completable Future put Async key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return put Async key value metadata private void assert No Lock Owner String name if lock Owner null throw new Illegal State Exception name method can not be used when a lock owner is configured Override public Completable Future Void put All Async Map extends extends data return put All Async data cache Implementation default Metadata Override public Completable Future Void put All Async Map extends extends data long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return put All Async data metadata Override public Completable Future Void put All Async Map extends extends data long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return put All Async data metadata Completable Future Void put All Async final Map extends extends data final Metadata metadata return cache Implementation put All Async data metadata flags write Context data size Override public Completable Future Void clear Async return cache Implementation clear Async flags Override public Completable Future put If Absent Async key value return put If Absent Async key value cache Implementation default Metadata Override public Completable Future put If Absent Async key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return put If Absent Async key value metadata Override public Completable Future put If Absent Async key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return put If Absent Async key value metadata Completable Future put If Absent Async final key final value final Metadata metadata return cache Implementation put If Absent Async key value metadata flags write Context Override public Completable Future remove Async Object key return cache Implementation remove Async key flags write Context Override public Completable Future Boolean remove Async Object key Object value return cache Implementation remove Async key value flags write Context Override public Completable Future replace Async key value return replace Async key value cache Implementation default Metadata Override public Completable Future replace Async key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return replace Async key value metadata Override public Completable Future replace Async key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return replace Async key value metadata Completable Future replace Async final key final value final Metadata metadata return cache Implementation replace Async key value metadata flags write Context Override public Completable Future Boolean replace Async key old Value new Value return replace Async key old Value new Value cache Implementation default Metadata Override public Completable Future Boolean replace Async key old Value new Value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return replace Async key old Value new Value metadata Override public Completable Future Boolean replace Async key old Value new Value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return replace Async key old Value new Value metadata Completable Future Boolean replace Async final key final old Value final new Value final Metadata metadata return cache Implementation replace Async key old Value new Value metadata flags write Context Override public Completable Future get Async key return cache Implementation get Async key flags read Context Override public int size return cache Implementation size flags Override public boolean is Empty return cache Implementation is Empty flags Override public boolean contains Key Object key return cache Implementation contains Key key flags read Context Override public boolean contains Value Object value Objects require Non Null value return values stream any Match Stream Marshalling equality Predicate value Override public get Object key return cache Implementation get key flags read Context Override public Map get All Set keys return cache Implementation get All keys flags read Context keys size Override public Map Cache Entry get All Cache Entries Set keys return cache Implementation get All Cache Entries keys flags read Context keys size Override public put key value return put key value cache Implementation default Metadata Override public remove Object key return cache Implementation remove key flags write Context Override public void put All Map extends extends map Metadata metadata cache Implementation put All map metadata flags write Context map size Override public void put All Map extends extends m put All m cache Implementation default Metadata Override public void clear cache Implementation clear flags Override public Cache Set key Set return cache Implementation key Set flags Override public Map get Group String group Name return cache Implementation get Group group Name flags Override public void remove Group String group Name assert No Lock Owner remove Group cache Implementation remove Group group Name flags Override public Cache Collection values return new Value Cache Collection this cache Entry Set Override public Cache Set Entry entry Set return cache Implementation entry Set flags Override public Cache Set Cache Entry cache Entry Set return cache Implementation cache Entry Set flags read Context Override public put If Absent key value return put If Absent key value cache Implementation default Metadata Override public boolean remove Object key Object value return cache Implementation remove key value flags write Context Override public boolean replace key old Value new Value return replace key old Value new Value cache Implementation default Metadata Override public replace key value return replace key value cache Implementation default Metadata Override public compute key Bi Function super super extends remapping Function return compute key remapping Function cache Implementation default Metadata Override public compute If Present key Bi Function super super extends remapping Function return compute If Present key remapping Function cache Implementation default Metadata Override public compute If Absent key Function super extends mapping Function return compute If Absent key mapping Function cache Implementation default Metadata Override public merge key value Bi Function super super extends remapping Function return merge key value remapping Function cache Implementation default Metadata Not exposed on interface public long get Flags Bit Set return flags Override public void add Listener Object listener cache Implementation notifier add Listener listener Class Loader null Override public void add Listener Object listener Key Filter super filter cache Implementation notifier add Listener listener filter null Override public put key value Metadata metadata return cache Implementation put key value metadata flags write Context Override public Completable Future put Async key value Metadata metadata return cache Implementation put Async key value metadata flags write Context Override public put If Absent key value Metadata metadata return cache Implementation put If Absent key value metadata flags write Context Override public boolean replace key old Value value Metadata metadata return cache Implementation replace key old Value value metadata flags write Context Override public replace key value Metadata metadata return cache Implementation replace key value metadata flags write Context Override public compute key Bi Function super super extends remapping Function Metadata metadata return cache Implementation compute Internal key remapping Function false metadata flags write Context Override public compute If Present key Bi Function super super extends remapping Function Metadata metadata return cache Implementation compute Internal key remapping Function true metadata flags write Context Override public compute If Absent key Function super extends mapping Function Metadata metadata return cache Implementation compute If Absent Internal key mapping Function metadata flags write Context Override public merge key value Bi Function super super extends remapping Function Metadata metadata return cache Implementation merge Internal key value remapping Function metadata flags write Context Override public Cache Entry get Cache Entry Object key return cache Implementation get Cache Entry key flags read Context protected Invocation Context read Context int size Invocation Context ctx cache Implementation invocation Context Factory create Invocation Context false size if lock Owner null ctx set Lock Owner lock Owner return ctx protected Invocation Context write Context int size Invocation Context ctx cache Implementation get Invocation Context With Implicit Transaction false size if lock Owner null ctx set Lock Owner lock Owner return ctx 
package org infinispan manager import static org infinispan factories Known Component Names import java io Exception import java io Input Stream import java util Collections import java util Hash Map import java util Hash Set import java util Linked Hash Set import java util List import java util Map import java util Properties import java util Set import java util concurrent Completable Future import java util concurrent Completion Exception import java util concurrent Concurrent Map import java util concurrent Executor Service import java util concurrent Fork Join Pool import java util concurrent Scheduled Executor Service import java util concurrent Time Unit import java util concurrent atomic Atomic Reference import java util concurrent locks Lock import java util concurrent locks Reentrant Lock import org infinispan Cache import org infinispan Illegal Lifecycle State Exception import org infinispan Version import org infinispan commands Remove Cache Command import org infinispan commons Cache Configuration Exception import org infinispan commons Cache Exception import org infinispan commons api Lifecycle import org infinispan commons util Collection Factory import org infinispan commons util File Lookup Factory import org infinispan commons util Immutables import org infinispan configuration Configuration Manager import org infinispan configuration cache Configuration import org infinispan configuration cache Configuration Builder import org infinispan configuration format Property Formatter import org infinispan configuration global Global Configuration import org infinispan configuration global Global Configuration Builder import org infinispan configuration global Transport Configuration import org infinispan configuration parsing Configuration Builder Holder import org infinispan configuration parsing Parser Registry import org infinispan factories Component Registry import org infinispan factories Global Component Registry import org infinispan factories Internal Cache Factory import org infinispan factories Known Component Names import org infinispan factories annotations Survives Restarts import org infinispan factories scopes Scope import org infinispan factories scopes Scopes import org infinispan health Health import org infinispan health impl Health Impl import org infinispan health impl jmx Health Exposer Impl import org infinispan health jmx Health Exposer import org infinispan jmx Cache Jmx Registration import org infinispan jmx Cache Manager Jmx Registration import org infinispan jmx annotations Data Type import org infinispan jmx annotations Display Type import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Attribute import org infinispan jmx annotations Managed Operation import org infinispan jmx annotations Parameter import org infinispan lifecycle Component Status import org infinispan manager impl Cluster Executors import org infinispan notifications cachemanagerlistener Cache Manager Notifier import org infinispan registry Internal Cache Registry import org infinispan remoting inboundhandler Deliver Order import org infinispan remoting responses Response import org infinispan remoting rpc Response Mode import org infinispan remoting transport Address import org infinispan remoting transport Transport import org infinispan remoting transport jgroups Groups Transport import org infinispan security Audit Context import org infinispan security Authorization Permission import org infinispan security impl Authorization Helper import org infinispan security impl Principal Role Mapper Context Impl import org infinispan security impl Secure Cache Impl import org infinispan stats Cache Container Stats import org infinispan stats impl Cache Container Stats Impl import org infinispan util Byte String import org infinispan util Cyclic Dependency Exception import org infinispan util Dependency Graph import org infinispan util logging Log import org infinispan util logging Log Factory tt Cache Manager tt is the primary mechanism for retrieving a link Cache instance and is often used as a starting point to using the link Cache p tt Cache Manager tt s are heavyweight objects and we foresee no more than one tt Cache Manager tt being used per unless specific configuration requirements require more than one but either way this would be a minimal and finite number of instances p Constructing a tt Cache Manager tt is done via one of its constructors which optionally take in a link org infinispan configuration cache Configuration or a path or to a configuration file p Lifecycle tt Cache Manager tt s have a lifecycle it implements link Lifecycle and the default constructors also call link start Overloaded versions of the constructors are available that do not start the tt Cache Manager tt although it must be kept in mind that tt Cache Manager tt s need to be started before they can be used to create tt Cache tt instances p Once constructed tt Cache Manager tt s should be made available to any component that requires a tt Cache tt via or via some other mechanism such as an Io container p You obtain tt Cache tt instances from the tt Cache Manager tt by using one of the overloaded tt get Cache tt methods Note that with tt get Cache tt there is no guarantee that the instance you get is brand new and empty since caches are named and shared Because of this the tt Cache Manager tt also acts as a repository of tt Cache tt s and is an effective mechanism of looking up or creating tt Cache tt s on demand p When the system shuts down it should call link stop on the tt Cache Manager tt This will ensure all caches within its scope are properly stopped as well p Sample usage pre code Cache Manager manager Cache Manager get Instance my config file xml Cache lt String Person gt entity Cache manager get Cache my Entity Cache entity Cache put a Person new Person Configuration Builder conf Builder new Configuration Builder conf Builder clustering cache Mode Cache Mode manager define Configuration my Replicated Cache conf Builder build Cache lt String String gt replicated Cache manager get Cache my Replicated Cache code pre author Manik Surtani author Galder Zamarre o since Scope Scopes Survives Restarts Bean object Name Default Cache Manager description Component that acts as a manager factory and container for caches in the system public class Default Cache Manager implements Embedded Cache Manager public static final String Cache Manager private static final Log log Log Factory get Log Default Cache Manager class private final Concurrent Map String Completable Future Cache caches Collection Factory make Concurrent Map private final Global Component Registry global Component Registry private final Authorization Helper authz Helper private final Dependency Graph String cache Dependency Graph new Dependency Graph private final Cache Container Stats stats private final Health health private final Configuration Manager configuration Manager private final String default Cache Name private final Lock lifecycle Lock new Reentrant Lock private volatile boolean stopping Constructs and starts a default instance of the Cache Manager using configuration defaults See link org infinispan configuration cache Configuration and link org infinispan configuration global Global Configuration for details of these defaults public Default Cache Manager this null null true Constructs a default instance of the Cache Manager using configuration defaults See link org infinispan configuration cache Configuration and link org infinispan configuration global Global Configuration for details of these defaults param start if true the cache manager is started public Default Cache Manager boolean start this null null start Constructs and starts a new instance of the Cache Manager using the default configuration passed in See link org infinispan configuration cache Configuration and link org infinispan configuration global Global Configuration for details of these defaults param default Configuration configuration to use as a template for all caches created public Default Cache Manager Configuration default Configuration this null default Configuration true Constructs a new instance of the Cache Manager using the default configuration passed in See link org infinispan configuration global Global Configuration for details of these defaults param default Configuration configuration file to use as a template for all caches created param start if true the cache manager is started public Default Cache Manager Configuration default Configuration boolean start this null default Configuration start Constructs and starts a new instance of the Cache Manager using the global configuration passed in and system defaults for the default named cache configuration See link org infinispan configuration cache Configuration for details of these defaults param global Configuration Global Configuration to use for all caches created public Default Cache Manager Global Configuration global Configuration this global Configuration null true Constructs a new instance of the Cache Manager using the global configuration passed in and system defaults for the default named cache configuration See link org infinispan configuration cache Configuration for details of these defaults param global Configuration Global Configuration to use for all caches created param start if true the cache manager is started public Default Cache Manager Global Configuration global Configuration boolean start this global Configuration null start Constructs and starts a new instance of the Cache Manager using the global and default configurations passed in If either of these are null system defaults are used param global Configuration global configuration to use If null a default instance is created param default Configuration default configuration to use If null a default instance is created public Default Cache Manager Global Configuration global Configuration Configuration default Configuration this global Configuration default Configuration true Constructs a new instance of the Cache Manager using the global and default configurations passed in If either of these are null system defaults are used param global Configuration global configuration to use If null a default instance is created param default Configuration default configuration to use If null a default instance is created param start if true the cache manager is started public Default Cache Manager Global Configuration global Configuration Configuration default Configuration boolean start global Configuration global Configuration null new Global Configuration Builder build global Configuration this configuration Manager new Configuration Manager global Configuration if default Configuration null if global Configuration default Cache Name is Present default Cache Name global Configuration default Cache Name get else log default Cache Configuration Without Name default Cache Name configuration Manager put Configuration default Cache Name default Configuration else if global Configuration default Cache Name is Present throw log missing Default Cache Declaration global Configuration default Cache Name get else default Cache Name null this authz Helper new Authorization Helper global Configuration security Audit Context global Configuration global Jmx Statistics cache Manager Name this global Component Registry new Global Component Registry global Configuration this caches key Set this global Component Registry register Component configuration Manager Configuration Manager class this global Component Registry register Component cache Dependency Graph false this global Component Registry register Component authz Helper Authorization Helper class this stats new Cache Container Stats Impl this health new Health Impl this global Component Registry register Component new Health Exposer Impl health Health Exposer class if start start Constructs and starts a new instance of the Cache Manager using the configuration file name passed in This constructor first searches for the named file on the classpath and failing that treats the file name as an absolute path param configuration File name of configuration file to use as a template for all caches created throws java io Exception if there is a problem with the configuration file public Default Cache Manager String configuration File throws Exception this configuration File true Constructs a new instance of the Cache Manager using the configuration file name passed in This constructor first searches for the named file on the classpath and failing that treats the file name as an absolute path param configuration File name of configuration file to use as a template for all caches created param start if true the cache manager is started throws java io Exception if there is a problem with the configuration file public Default Cache Manager String configuration File boolean start throws Exception this File Lookup Factory new Instance lookup File Strict configuration File Thread current Thread get Context Class Loader start Constructs and starts a new instance of the Cache Manager using the input stream passed in to read configuration file contents param configuration Stream stream containing configuration file contents to use as a template for all caches created throws java io Exception if there is a problem with the configuration stream public Default Cache Manager Input Stream configuration Stream throws Exception this configuration Stream true Constructs a new instance of the Cache Manager using the input stream passed in to read configuration file contents param configuration Stream stream containing configuration file contents to use as a template for all caches created param start if true the cache manager is started throws java io Exception if there is a problem reading the configuration stream public Default Cache Manager Input Stream configuration Stream boolean start throws Exception this new Parser Registry parse configuration Stream start Constructs a new instance of the Cache Manager using the holder passed in to read configuration settings param holder holder containing configuration settings to use as a template for all caches created param start if true the cache manager is started public Default Cache Manager Configuration Builder Holder holder boolean start try configuration Manager new Configuration Manager holder Global Configuration global Configuration configuration Manager get Global Configuration default Cache Name global Configuration default Cache Name or Else null global Component Registry new Global Component Registry global Configuration this caches key Set global Component Registry register Component configuration Manager Configuration Manager class global Component Registry register Component cache Dependency Graph false authz Helper new Authorization Helper global Configuration security Audit Context global Configuration global Jmx Statistics cache Manager Name stats new Cache Container Stats Impl this health new Health Impl this global Component Registry register Component new Health Exposer Impl health Health Exposer class catch Cache Configuration Exception ce throw ce catch Runtime Exception re throw new Cache Configuration Exception re if start start Override public Configuration define Configuration String name Configuration configuration return do Define Configuration name configuration Override public Configuration define Configuration String name String template Configuration configuration Override if template null Configuration c configuration Manager get Configuration template if c null throw log undeclared Configuration template name else if configuration Override null return do Define Configuration name c else return do Define Configuration name c configuration Override return do Define Configuration name configuration Override private Configuration do Define Configuration String name Configuration configurations authz Helper check Permission Authorization Permission assert Is Not Terminated if name null configurations null throw new Null Pointer Exception Null arguments not allowed if name equals throw log illegal Cache Name Configuration existing configuration Manager get Configuration name if existing null throw log config Already Defined name Configuration Builder builder new Configuration Builder boolean template true for Configuration configuration configurations if configuration null builder read configuration template template configuration is Template else throw new Null Pointer Exception Null arguments not allowed builder template template return configuration Manager put Configuration name builder Override public void undefine Configuration String configuration Name authz Helper check Permission Authorization Permission if configuration Name equals throw log illegal Cache Name Configuration existing configuration Manager get Configuration configuration Name if existing null for Completable Future Cache cache Future caches values Cache cache cache Future exceptionally t null join if cache null cache get Cache Configuration existing cache get Status Component Status throw log configuration In Use configuration Name configuration Manager remove Configuration configuration Name Retrieves the default cache associated with this cache manager Note that the default cache does not need to be explicitly created with link create Cache String String String since it is automatically created lazily when first used p As such this method is always guaranteed to return the default cache return the default cache Override public Cache get Cache if default Cache Name null throw log no Default Cache return internal Get Cache default Cache Name default Cache Name Retrieves a named cache from the system If the cache has been previously created with the same name the running cache instance is returned Otherwise this method attempts to create the cache first p When creating a new cache this method will use the configuration passed in to the Cache Manager on construction as a template and then optionally apply any overrides previously defined for the named cache using the link define Configuration String Configuration or link define Configuration String String Configuration methods or declared in the configuration file param cache Name name of cache to retrieve return a cache instance identified by cache Name Override public Cache get Cache String cache Name return get Cache cache Name cache Name Override public Cache get Cache String cache Name String configuration Name if cache Name null throw new Null Pointer Exception Null arguments not allowed if equals cache Name if default Cache Name null throw log no Default Cache cache Name default Cache Name log deprecated Default Cache return internal Get Cache cache Name configuration Name public Cache internal Get Cache String cache Name String configuration Name assert Is Not Terminated Completable Future Cache cache Future caches get cache Name if cache Future null try return Cache cache Future join catch Completion Exception e throw Cache Exception e get Cause return create Cache cache Name configuration Name Override public boolean cache Exists String cache Name return caches contains Key cache Name Override public Cache get Cache String cache Name boolean create If Absent return get Cache cache Name cache Name create If Absent Override public Cache get Cache String cache Name String configuration Template boolean create If Absent boolean cache Exists cache Exists cache Name if cache Exists create If Absent return null else return get Cache cache Name configuration Template Override public Embedded Cache Manager start Caches final String cache Names authz Helper check Permission Authorization Permission Map String Thread threads new Hash Map cache Names length final Atomic Reference Runtime Exception exception new Atomic Reference Runtime Exception null for final String cache Name cache Names if threads contains Key cache Name String thread Name Cache Start Thread configuration Manager get Global Configuration transport node Name cache Name Thread thread new Thread thread Name Override public void run try create Cache cache Name cache Name catch Runtime Exception e exception set e catch Throwable t exception set new Runtime Exception t thread start threads put cache Name thread try for Thread thread threads values thread join catch Interrupted Exception e throw new Cache Exception Interrupted while waiting for the caches to start Runtime Exception runtime Exception exception get if runtime Exception null throw runtime Exception return this Override public void remove Cache String cache Name authz Helper check Permission Authorization Permission Component Registry cache Component Registry global Component Registry get Named Component Registry cache Name if cache Component Registry null Remove Cache Command cmd new Remove Cache Command Byte String from String cache Name this Transport transport get Transport try Completable Future future if transport null Configuration c configuration Manager get Configuration cache Name default Cache Name Use sync replication timeout Completable Future Map Address Response remote Future transport invoke Remotely Async null cmd Response Mode c clustering remote Timeout null Deliver Order false future cmd invoke Async then Compose o remote Future else future cmd invoke Async future get catch Throwable t throw new Cache Exception Error removing cache t inherit Doc Override public List Address get Members Transport t get Transport return t null null t get Members inherit Doc Override public Address get Address Transport t get Transport return t null null t get Address inherit Doc Override public Address get Coordinator Transport t get Transport return t null null t get Coordinator Managed Attribute description The logical address of the cluster s coordinator display Name Coordinator address display Type Display Type public String get Coordinator Address Transport t get Transport return t null t get Coordinator to String inherit Doc Override Managed Attribute description Indicates whether this node is coordinator display Name Is coordinator display Type Display Type public boolean is Coordinator Transport t get Transport return t null t is Coordinator private Cache create Cache String cache Name String configuration Name final boolean trace log is Trace Enabled Log Factory push cache Name trace try return wire And Start Cache cache Name configuration Name finally Log Factory pop trace return a null return value means the cache was created by someone else before we got the lock private Cache wire And Start Cache String cache Name String configuration Name boolean same Cache cache Name equals configuration Name Configuration c configuration Manager get Configuration configuration Name default Cache Name if c null throw log no Such Cache Configuration configuration Name else if same Cache Configuration defined Config configuration Manager get Configuration cache Name if defined Config null log warn Attempt To Override Existing Configuration cache Name c defined Config if c security authorization enabled Do n t even attempt to wire anything if we do n t have privileges authz Helper check Permission c security authorization Authorization Permission if c is Template cache Name equals configuration Name throw log template Configuration Start Attempt cache Name Completable Future Cache cache Future new Completable Future Completable Future Cache old Future caches compute If Absent cache Name name assert Is Not Terminated return cache Future try if old Future cache Future return Cache old Future join catch Completion Exception ce throw Cache Exception ce get Cause try log tracef About to wire and start cache s cache Name Cache cache new Internal Cache Factory create Cache c global Component Registry cache Name Component Registry cr cache get Advanced Cache get Component Registry if cache get Advanced Cache get Authorization Manager null cache new Secure Cache Impl cache get Advanced Cache boolean not Started Yet cr get Status Component Status cr get Status Component Status start the cache level components cache start cache Future complete cache boolean need To Notify Cache Started not Started Yet cr get Status Component Status if need To Notify Cache Started global Component Registry notify Cache Started cache Name log tracef Cache s started cache Name return cache catch Cache Exception e cache Future complete Exceptionally e throw e catch Throwable t cache Future complete Exceptionally new Cache Exception t throw t Override public void start authz Helper check Permission Authorization Permission lifecycle Lock lock try final Global Configuration global Configuration configuration Manager get Global Configuration if global Configuration security authorization enabled System get Security Manager null log authorization Enabled Without Security Manager global Component Registry get Component Cache Manager Jmx Registration class start String cluster Name global Configuration transport cluster Name String node Name global Configuration transport node Name if global Configuration security authorization enabled global Configuration security authorization principal Role Mapper set Context new Principal Role Mapper Context Impl this global Component Registry start log debugf Started cache manager s on s cluster Name node Name finally lifecycle Lock unlock private void terminate String cache Name Completable Future Cache cache Future this caches get cache Name if cache Future null Cache cache cache Future join unregister Cache Bean cache if cache get Status is Terminated log tracef Ignoring cache s it is already terminated cache Name return cache stop Override public void stop authz Helper check Permission Authorization Permission lifecycle Lock lock try if stopping log trace Ignore call to stop as the cache manager is not running return log debugf Stopping cache manager s on s configuration Manager get Global Configuration transport cluster Name get Address stopping true stop Caches global Component Registry get Component Cache Manager Jmx Registration class stop global Component Registry stop finally lifecycle Lock unlock private void stop Caches Set String caches To Stop new Linked Hash Set this caches size stop ordered caches first try List String ordered cache Dependency Graph topological Sort caches To Stop add All ordered catch Cyclic Dependency Exception e log stop Order Ignored The caches map includes the default cache caches To Stop add All caches key Set log tracef Cache stop order s caches To Stop for String cache Name caches To Stop try terminate cache Name catch Throwable t log component Failed To Stop t private void unregister Cache Bean Cache cache Unregister cache mbean regardless of jmx statistics setting cache get Advanced Cache get Component Registry get Component Cache Jmx Registration class unregister Cache Bean Override public void add Listener Object listener authz Helper check Permission Authorization Permission Cache Manager Notifier notifier global Component Registry get Component Cache Manager Notifier class notifier add Listener listener Override public void remove Listener Object listener authz Helper check Permission Authorization Permission Cache Manager Notifier notifier global Component Registry get Component Cache Manager Notifier class notifier remove Listener listener Override public Set Object get Listeners authz Helper check Permission Authorization Permission Cache Manager Notifier notifier global Component Registry get Component Cache Manager Notifier class return notifier get Listeners Override public Component Status get Status authz Helper check Permission Authorization Permission return global Component Registry get Status Override public Global Configuration get Cache Manager Configuration return configuration Manager get Global Configuration Override public org infinispan configuration cache Configuration get Default Cache Configuration if default Cache Name null return configuration Manager get Configuration default Cache Name else return null Override public Configuration get Cache Configuration String name Configuration configuration configuration Manager get Configuration name if configuration null cache Exists name return get Default Cache Configuration return configuration Override public Set String get Cache Names Get the programmatically defined caches Set String names new Hash Set configuration Manager get Defined Caches Add the caches created dynamically without explicit config Since caches could be modified dynamically make a safe copy of keys names add All Immutables immutable Set Convert caches key Set names remove Internal Cache Registry internal Cache Registry global Component Registry get Component Internal Cache Registry class internal Cache Registry filter Private Caches names if names is Empty return Collections empty Set else return Immutables immutable Set Wrap names Override public Set String get Cache Configuration Names Get the programmatically defined caches Set String names new Hash Set configuration Manager get Defined Configurations names remove Internal Cache Registry internal Cache Registry global Component Registry get Component Internal Cache Registry class internal Cache Registry filter Private Caches names if names is Empty return Collections empty Set else return Immutables immutable Set Wrap names Override public boolean is Running String cache Name Completable Future Cache cache Future caches get cache Name boolean started cache Future null cache Future is Done cache Future is Completed Exceptionally return started cache Future join get Status Component Status Override public boolean is Default Running return is Running Managed Attribute description The status of the cache manager instance display Name Cache manager status data Type Data Type display Type Display Type public String get Cache Manager Status return get Status to String Managed Attribute description The defined cache names and their statuses The default cache is not included in this representation display Name List of defined caches data Type Data Type display Type Display Type public String get Defined Cache Names String Builder result new String Builder for String cache Name get Cache Names boolean started caches contains Key cache Name result append cache Name append started created not created result append return result to String Managed Attribute description The defined cache configuration names display Name List of defined cache configurations data Type Data Type display Type Display Type public String get Defined Cache Configuration Names String Builder result new String Builder boolean comma false for String cache Name get Cache Configuration Names if comma result append else comma true result append cache Name result append return result to String Managed Attribute description The total number of defined cache configurations display Name Number of caches defined display Type Display Type public String get Defined Cache Count return String value Of get Cache Configuration Names size Managed Attribute description The total number of created caches including the default cache display Name Number of caches created display Type Display Type public String get Created Cache Count Internal Cache Registry internal Cache Registry global Component Registry get Component Internal Cache Registry class long created caches key Set stream filter c internal Cache Registry is Internal Cache c count return String value Of created Managed Attribute description The total number of running caches including the default cache display Name Number of running caches display Type Display Type public String get Running Cache Count Internal Cache Registry internal Cache Registry global Component Registry get Component Internal Cache Registry class long running caches key Set stream filter c is Running c internal Cache Registry is Internal Cache c count return String value Of running Managed Attribute description Returns the version of Infinispan display Name Infinispan version display Type Display Type data Type Data Type public String get Version return Version get Version Managed Attribute description The name of this cache manager display Name Cache manager name display Type Display Type data Type Data Type public String get Name return configuration Manager get Global Configuration global Jmx Statistics cache Manager Name Managed Operation description Starts the default cache associated with this cache manager display Name Starts the default cache public void start Cache get Cache Managed Operation description Starts a named cache from this cache manager name start Cache display Name Starts a cache with the given name public void start Cache Parameter name cache Name description Name of cache to start String cache Name get Cache cache Name Managed Attribute description The network address associated with this instance display Name Network address data Type Data Type display Type Display Type public String get Node Address return get Logical Address String Managed Attribute description The physical network addresses associated with this instance display Name Physical network addresses data Type Data Type display Type Display Type public String get Physical Addresses Transport t get Transport if t null return local List Address address t get Physical Addresses return address null local address to String Managed Attribute description List of members in the cluster display Name Cluster members data Type Data Type display Type Display Type public String get Cluster Members Transport t get Transport if t null return local List Address address List t get Members return address List to String Managed Attribute description Size of the cluster in number of nodes display Name Cluster size display Type Display Type public int get Cluster Size Transport t get Transport if t null return return t get Members size inherit Doc Managed Attribute description Cluster name display Name Cluster name data Type Data Type display Type Display Type Override public String get Cluster Name return configuration Manager get Global Configuration transport cluster Name private String get Logical Address String return get Address null local get Address to String private void assert Is Not Terminated if stopping throw new Illegal Lifecycle State Exception Cache container has been stopped and can not be reused Recreate the cache container Override public Transport get Transport if global Component Registry null return null return global Component Registry get Component Transport class Override public Global Component Registry get Global Component Registry return global Component Registry Override public void add Cache Dependency String from String to cache Dependency Graph add Dependency from to Override public String to String return super to String Address get Address inherit Doc Managed Attribute description Global configuration properties display Name Global configuration properties data Type Data Type display Type Display Type public Properties get Global Configuration As Properties return new Property Formatter format configuration Manager get Global Configuration Override public Cache Container Stats get Stats return stats Override public Health get Health return health Override public Cluster Executor executor if global Component Registry get Status Component Status throw new Illegal State Exception Cache Manager must be started before retrieving a Cluster Executor Groups Transport transport Groups Transport global Component Registry get Component Transport class if transport null long time get Cache Manager Configuration transport distributed Sync Timeout return Cluster Executors all Submission Executor null this transport time Time Unit global Component Registry get Component Executor Service class Known Component Names global Component Registry get Component Scheduled Executor Service class Known Component Names else return Cluster Executors all Submission Executor null this null Transport Configuration get Default Value Time Unit Fork Join Pool common Pool global Component Registry get Component Scheduled Executor Service class Known Component Names Override public void close throws Exception stop 
package org infinispan distribution ch impl import java io Exception import java io Object Input import java io Object Output import java util Array List import java util Arrays import java util Collections import java util Hash Map import java util List import java util Map import java util Set import java util function Unary Operator import org infinispan commons hash Hash import org infinispan commons marshall Instance Reusing Advanced Externalizer import org infinispan commons util Immutables import org infinispan distribution ch Consistent Hash import org infinispan globalstate Scoped Persistent State import org infinispan marshall core Ids import org infinispan remoting transport Address import org infinispan topology Persistent import org infinispan commons util Small Int Set import net jcip annotations Immutable Default link Consistent Hash implementation This object is immutable Every segment must have a primary owner author Dan Berindei author anistor redhat com since Immutable public class Default Consistent Hash extends Abstract Consistent Hash State constants private static final String num Owners private static final String segment Owner d d private static final String segment Owners private static final String segment Owner d num private final int num Owners The routing table private final List Address segment Owners public Default Consistent Hash Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors List Address segment Owners super hash Function num Segments members capacity Factors if num Owners throw new Illegal Argument Exception The number of owners must be strictly positive this num Owners num Owners this segment Owners new List num Segments for int i i num Segments i if segment Owners i null segment Owners i is Empty throw new Illegal Argument Exception Segment owner list can not be null or empty this segment Owners i Immutables immutable List Copy segment Owners i Only used by the externalizer so we can skip copying collections private Default Consistent Hash Hash hash Function int num Owners int num Segments List Address members float capacity Factors List Address segment Owners super hash Function num Segments members capacity Factors if num Owners throw new Illegal Argument Exception The number of owners must be strictly positive this num Owners num Owners for int i i num Segments i if segment Owners i null segment Owners i size throw new Illegal Argument Exception Segment owner list can not be null or empty this segment Owners segment Owners Default Consistent Hash Scoped Persistent State state super state this num Owners Integer parse Int state get Property int num Segments parse Num Segments state this segment Owners new List num Segments for int i i segment Owners length i int segment Owner Count Integer parse Int state get Property String format i segment Owners i new Array List for int j j segment Owner Count j Persistent uuid Persistent from String state get Property String format i j segment Owners i add uuid Override public int get Num Segments return segment Owners length Override public Set Integer get Segments For Owner Address owner if owner null throw new Illegal Argument Exception owner can not be null if members contains owner throw new Illegal Argument Exception Node owner is not a member Set Integer segments new Small Int Set segment Owners length for int segment segment segment Owners length segment if segment Owners segment contains owner segments add segment return segments Override public Set Integer get Primary Segments For Owner Address owner if owner null throw new Illegal Argument Exception owner can not be null if members contains owner throw new Illegal Argument Exception Node owner is not a member Small Int Set segments new Small Int Set segment Owners length for int segment segment segment Owners length segment if owner equals segment Owners segment get segments add segment return segments deprecated Since use link Hash Function Partitioner get Segment End Hashes instead Deprecated public List Integer get Segment End Hashes int num Segments segment Owners length List Integer hashes new Array List num Segments for int i i num Segments i hashes add i num Segments segment Size return hashes Override public List Address locate Owners For Segment int segment Id return segment Owners segment Id Override public Address locate Primary Owner For Segment int segment Id return segment Owners segment Id get Override public int get Num Owners return num Owners Override public boolean is Segment Local To Node Address node Address int segment Id return segment Owners segment Id contains node Address Override public int hash Code int result num Owners result result members hash Code result result Arrays hash Code segment Owners return result Override public boolean equals Object o if this o return true if o null get Class o get Class return false Default Consistent Hash that Default Consistent Hash o if num Owners that num Owners return false if segment Owners length that segment Owners length return false if hash Function equals that hash Function return false if members equals that members return false for int i i segment Owners length i if segment Owners i equals that segment Owners i return false return true Override public String to String Ownership Statistics stats new Ownership Statistics this members String Builder sb new String Builder Default Consistent Hash sb append ns append segment Owners length sb append owners append members size append boolean first true for Address a members if first first false else sb append int primary Owned stats get Primary Owned a int owned stats get Owned a sb append a append append primary Owned append append owned primary Owned sb append return sb to String Override public String get Routing Table As String String Builder sb new String Builder for Address a members if sb length sb append n Set Integer primary Segments get Primary Segments For Owner a sb append a append primary append primary Segments Set Integer backup Segments get Segments For Owner a backup Segments remove All primary Segments sb append backup append backup Segments return sb to String Merges two consistent hash objects that have the same number of segments num Owners and hash function For each segment the primary owner of the first has priority the other primary owners become backups public Default Consistent Hash union Default Consistent Hash dch check Same Hash And Segments dch if num Owners dch get Num Owners throw new Illegal Argument Exception The consistent hash objects must have the same number of owners List Address union Members new Array List this members merge Lists union Members dch get Members List Address union Segment Owners new List segment Owners length for int i i segment Owners length i union Segment Owners i new Array List locate Owners For Segment i merge Lists union Segment Owners i dch locate Owners For Segment i Map Address Float union Capacity Factors union Capacity Factors dch return new Default Consistent Hash hash Function num Owners union Segment Owners length union Members union Capacity Factors union Segment Owners public String pretty Print Ownership String Builder sb new String Builder for Address member get Members sb append n append member append for int segment segment segment Owners length segment int index segment Owners segment index Of member if index sb append append segment if index sb append return sb to String Override public void to Scoped State Scoped Persistent State state super to Scoped State state state set Property num Owners state set Property segment Owners length for int i i segment Owners length i List Address segment Owner Addresses segment Owners i state set Property String format i segment Owner Addresses size for int j j segment Owner Addresses size j state set Property String format i j segment Owner Addresses get j to String Override public Consistent Hash remap Addresses Unary Operator Address remapper List Address remapped Members remap Members remapper if remapped Members null return null Map Address Float remapped Capacity Factors remap Capacity Factors remapper List Address remapped Segment Owners new List segment Owners length for int i i segment Owners length i List Address remapped Owners new Array List segment Owners i size for Address address segment Owners i remapped Owners add remapper apply address remapped Segment Owners i remapped Owners return new Default Consistent Hash this hash Function this num Owners this segment Owners length remapped Members remapped Capacity Factors remapped Segment Owners public static class Externalizer extends Instance Reusing Advanced Externalizer Default Consistent Hash Override public void do Write Object Object Output output Default Consistent Hash ch throws Exception output write Int ch segment Owners length output write Int ch num Owners output write Object ch members output write Object ch capacity Factors output write Object ch hash Function Avoid computing the identity Hash Code for every Immutable List Copy Address Hash Map Address Integer member Indexes get Member Index Map ch members for int i i ch segment Owners length i List Address owners ch segment Owners i output write Int owners size for Address owner owners output write Int member Indexes get owner Override Suppress Warnings unchecked public Default Consistent Hash do Read Object Object Input unmarshaller throws Exception Class Not Found Exception int num Segments unmarshaller read Int int num Owners unmarshaller read Int List Address members List Address unmarshaller read Object float capacity Factors float unmarshaller read Object Hash hash Hash unmarshaller read Object List Address segment Owners new List num Segments for int i i num Segments i int size unmarshaller read Int Address owners new Address size for int j j size j int owner Index unmarshaller read Int owners j members get owner Index segment Owners i Immutables immutable List Wrap owners return new Default Consistent Hash hash num Owners num Segments members capacity Factors segment Owners private Hash Map Address Integer get Member Index Map List Address members Hash Map Address Integer member Indexes new Hash Map members size for int i i members size i member Indexes put members get i i return member Indexes Override public Integer get Id return Ids Override public Set Class extends Default Consistent Hash get Type Classes return Collections singleton Default Consistent Hash class 
package org infinispan distribution ch impl import java io Exception import java io Object Input import java io Object Output import java util Array List import java util Collection import java util Collections import java util Hash Set import java util List import java util Map import java util Set import org infinispan commons hash Hash import org infinispan commons marshall Abstract Externalizer import org infinispan distribution ch Consistent Hash Factory import org infinispan globalstate Scoped Persistent State import org infinispan marshall core Ids import org infinispan remoting transport Address import org infinispan util logging Log import org infinispan util logging Log Factory Default implementation of link Consistent Hash Factory All methods except link union Default Consistent Hash Default Consistent Hash return a consistent hash with floor num Owners num Segments num Nodes segments per owner ceil num Owners num Segments num Nodes author Dan Berindei author anistor redhat com since public class Default Consistent Hash Factory extends Abstract Consistent Hash Factory Default Consistent Hash private static final Log log Log Factory get Log Default Consistent Hash Factory class Override public Default Consistent Hash create Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors if members size throw new Illegal Argument Exception Ca n t construct a consistent hash without any members if num Owners throw new Illegal Argument Exception The number of owners should be greater than check Capacity Factors members capacity Factors Use the rebalance algorithm to get an even spread Round robin does n t work properly because a segment s owner must be unique Builder builder new Builder hash Function num Owners num Segments members capacity Factors rebalance Builder builder return builder build Override public Default Consistent Hash from Persistent State Scoped Persistent State state String consistent Hash Class state get Property consistent Hash if Default Consistent Hash class get Name equals consistent Hash Class throw log persistent Consistent Hash Mismatch this get Class get Name consistent Hash Class return new Default Consistent Hash state Leavers are removed and segments without owners are assigned new owners Joiners might get some of the un owned segments but otherwise they are not taken into account that should happen during a rebalance param base An existing consistent hash instance should not be code null param actual Members list of addresses representing the new cache members return Override public Default Consistent Hash update Members Default Consistent Hash base List Address actual Members Map Address Float actual Capacity Factors if actual Members size throw new Illegal Argument Exception Ca n t construct a consistent hash without any members check Capacity Factors actual Members actual Capacity Factors boolean same Capacity Factors actual Capacity Factors null base get Capacity Factors null actual Capacity Factors equals base get Capacity Factors if actual Members equals base get Members same Capacity Factors return base The builder constructor automatically removes leavers Builder builder new Builder base actual Members actual Capacity Factors If there are segments with owners fix them Try to assign the same owners for those segments as a future rebalance call would Builder balanced Builder null for int segment segment base get Num Segments segment if builder get Owners segment is Empty if balanced Builder null balanced Builder new Builder builder rebalance Builder balanced Builder builder add Owners segment balanced Builder get Owners segment return builder build Override public Default Consistent Hash rebalance Default Consistent Hash base This method assign new owners to the segments so that num owners s num Owners for each segment s floor num Segments num Nodes num segments primary owned n for each node n num segments primary owned n ceil num Segments num Nodes for each node n floor num Segments num Owners num Nodes num segments owned n for each node n num segments owned n ceil num Segments num Owners num Nodes for each node n Builder builder new Builder base rebalance Builder builder Default Consistent Hash balanced builder build we should return the base if we did n t change anything return balanced equals base base balanced Merges two consistent hash objects that have the same number of segments num Owners and hash function For each segment the primary owner of the first has priority the other primary owners become backups Override public Default Consistent Hash union Default Consistent Hash dch Default Consistent Hash dch return dch union dch protected void rebalance Builder Builder builder add Primary Owners builder add Backup Owners builder protected void add Primary Owners Builder builder add First Owner builder Try to replace primary owners with too many segments with the backups in those segments swap Primary Owners With Backups builder For segments that do n t have enough owners try to add a new owner as the primary owner int actual Num Owners builder get Actual Num Owners replace Primary Owners builder actual Num Owners If some primary owners still have too many segments allow adding an extra owner as the primary owner Since a segment only has primary owner this will be enough to give us a proper primary owner for each segment replace Primary Owners builder actual Num Owners private void add First Owner Builder builder for int segment segment builder get Num Segments segment if builder get Owners segment size continue Address new Primary find New Primary Owner builder builder get Members null if new Primary null builder add Primary Owner segment new Primary protected void replace Primary Owners Builder builder int max Owners Find the node with the worst primary owned segments to capacity ratio Iterate over all the segments primary owned by and if possible replace it with another node After replacing check that is still the worst node If not repeat with the new worst node Keep track of the segments where we already replaced the primary owner so we do n t do it twice boolean primary Owner Replaced true while primary Owner Replaced Address worst Node find Worst Primary Owner builder builder get Members primary Owner Replaced false for int segment builder get Num Segments segment segment if builder get Owners segment size max Owners continue Only replace if the worst node is the primary owner if builder get Primary Owner segment equals worst Node continue Address new Primary find New Primary Owner builder builder get Members worst Node if new Primary null builder get Owners segment contains new Primary builder add Primary Owner segment new Primary primary Owner Replaced true worst Node find Worst Primary Owner builder builder get Members protected void swap Primary Owners With Backups Builder builder If a segment has primary Owned primary Owner segment max Primary Segments try to swap the primary owner with one of the backup owners The new primary owner must primary own min Primary Segments segments Iterate in reverse order so the looks more stable in the logs as we add nodes for int segment builder get Num Segments segment segment if builder get Owners segment is Empty continue Address primary Owner builder get Primary Owner segment Address new Primary find New Primary Owner builder builder get Backup Owners segment primary Owner if new Primary null actually replaces the primary owner builder replace Primary Owner With Backup segment new Primary protected void add Backup Owners Builder builder Remove extra owners could be leftovers from add Primary Owners remove Extra Backup Owners builder If owners segment num Owners add new owners We always add the member that is not an owner already and has the best owned segments to capacity ratio do Add Backup Owners builder Now owners segment num Owners for every segment because of steps and For each owner if there exists a non owner with a better owned segments to capacity ratio replace it replace Backup Owners builder protected void remove Extra Backup Owners Builder builder Find the node with the worst segments to capacity ratio and replace it in one of the owner lists Repeat with the next worst node and so on List Address untested Nodes new Array List Address builder get Members while untested Nodes is Empty boolean owner Removed false Address worst Node find Worst Backup Owner builder untested Nodes Iterate in reverse order so the looks more stable in the logs as we add nodes for int segment builder get Num Segments segment segment List Address owners builder get Owners segment if owners size builder get Actual Num Owners continue int owner Idx owners index Of worst Node Do n t remove the primary if owner Idx builder remove Owner segment worst Node owner Removed true The worst node might have changed untested Nodes new Array List Address builder get Members worst Node find Worst Backup Owner builder untested Nodes if owner Removed untested Nodes remove worst Node return The worst backup owner or code null if the remaining nodes own segments private Address find Worst Backup Owner Builder builder List Address nodes Address worst null float max Segments Per Capacity for Address owner nodes float capacity Factor builder get Capacity Factor owner if worst null builder get Owned owner capacity Factor max Segments Per Capacity worst owner max Segments Per Capacity capacity Factor builder get Owned owner capacity Factor return worst protected void do Add Backup Owners Builder builder for int segment segment builder get Num Segments segment List Address owners builder get Owners segment while owners size builder get Actual Num Owners Address new Owner find New Backup Owner builder owners null builder add Owner segment new Owner protected void replace Backup Owners Builder builder Find the node with the worst segments to capacity ratio and replace it in one of the owner lists If it s not possible to replace any owner with the worst node remove the worst from the untested nodes list and try with the new worst repeating as necessary After replacing one owner go back to the original untested nodes list List Address untested Nodes new Array List Address builder get Members while untested Nodes is Empty Address worst Node find Worst Backup Owner builder untested Nodes boolean backup Owner Replaced false Iterate in reverse order so the looks more stable in the logs as we add nodes for int segment builder get Num Segments segment segment List Address owners builder get Owners segment int owner Idx owners index Of worst Node Do n t replace the primary if owner Idx continue Surely there is a better node to replace this owner with Address replacement find New Backup Owner builder owners worst Node if replacement null log tracef Segment d replacing owner s with s segment worst Node replacement builder remove Owner segment worst Node builder add Owner segment replacement backup Owner Replaced true The worst node might have changed untested Nodes new Array List Address builder get Members worst Node find Worst Backup Owner builder untested Nodes if backup Owner Replaced untested Nodes remove worst Node return The member with the worst owned segments capacity ratio that is also not in the excludes list protected Address find New Backup Owner Builder builder Collection Address excludes Address owner We want the owned capacity ratio of the actual owner after removing the current segment to be bigger than the owned capacity ratio of the new owner after adding the current segment so that a future pass wo n t try to switch them back Address best null float initial Capacity Factor owner null builder get Capacity Factor owner float best Segments Per Capacity initial Capacity Factor builder get Owned owner initial Capacity Factor Float for Address candidate builder get Members if excludes null excludes contains candidate int owned builder get Owned candidate float capacity Factor builder get Capacity Factor candidate if owned capacity Factor best Segments Per Capacity best candidate best Segments Per Capacity owned capacity Factor return best protected static class Builder extends Abstract Consistent Hash Factory Builder private final int initial Num Owners private final int actual Num Owners private final List Address segment Owners For debugging private int mod Count public Builder Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors super hash Function new Ownership Statistics members members capacity Factors this initial Num Owners num Owners this actual Num Owners compute Actual Num Owners num Owners members capacity Factors this segment Owners new List num Segments for int segment segment num Segments segment segment Owners segment new Array List Address actual Num Owners public Builder Default Consistent Hash base List Address actual Members Map Address Float actual Capacity Factors super base get Hash Function new Ownership Statistics base actual Members actual Members actual Capacity Factors int num Segments base get Num Segments Set Address actual Members Set new Hash Set Address actual Members List owners new List num Segments for int segment segment num Segments segment owners segment new Array List base locate Owners For Segment segment owners segment retain All actual Members Set this initial Num Owners base get Num Owners this actual Num Owners compute Actual Num Owners initial Num Owners actual Members actual Capacity Factors this segment Owners owners public Builder Default Consistent Hash base this base base get Members base get Capacity Factors public Builder Builder other super other int num Segments other get Num Segments List owners new List num Segments for int segment segment num Segments segment owners segment new Array List Address other segment Owners segment this initial Num Owners other initial Num Owners this actual Num Owners other actual Num Owners this segment Owners owners public int get Actual Num Owners return actual Num Owners public int get Num Segments return segment Owners length public List Address get Owners int segment return segment Owners segment public Address get Primary Owner int segment return segment Owners segment get public List Address get Backup Owners int segment return segment Owners segment sub List segment Owners segment size public boolean add Owner int segment Address owner mod Count List Address this Segment Owners segment Owners segment if this Segment Owners contains owner return false this Segment Owners add owner stats inc Owned owner if this Segment Owners size the first owner stats inc Primary Owned owner return true public boolean add Owners int segment Collection Address new Owners boolean modified false for Address owner new Owners modified add Owner segment owner return modified public boolean remove Owner int segment Address owner mod Count List Address segment Owners this segment Owners segment if segment Owners get equals owner stats dec Primary Owned owner boolean modified segment Owners remove owner if modified stats dec Owned owner return modified public void add Primary Owner int segment Address new Primary Owner mod Count List Address segment Owners this segment Owners segment int owner Index segment Owners index Of new Primary Owner if owner Index throw new Illegal Argument Exception The new primary owner must not be a backup already if segment Owners is Empty Address old Primary Owner segment Owners get stats dec Primary Owned old Primary Owner segment Owners add new Primary Owner stats inc Owned new Primary Owner stats inc Primary Owned new Primary Owner public void replace Primary Owner With Backup int segment Address new Primary Owner mod Count List Address segment Owners this segment Owners segment int owner Index segment Owners index Of new Primary Owner if owner Index throw new Illegal Argument Exception The new primary owner must already be a backup owner Address old Primary Owner segment Owners get stats dec Primary Owned old Primary Owner segment Owners remove owner Index segment Owners add new Primary Owner stats inc Primary Owned new Primary Owner public Default Consistent Hash build return new Default Consistent Hash hash Function initial Num Owners segment Owners length members capacity Factors segment Owners public int get Primary Owned Address node return stats get Primary Owned node public int get Owned Address node return stats get Owned node public float get Primary Owned Per Capacity Address node float capacity Factor get Capacity Factor node return capacity Factor get Primary Owned node capacity Factor Float public float get Owned Per Capacity Address node float capacity Factor get Capacity Factor node return capacity Factor get Owned node capacity Factor Float public int compute Actual Num Owners int num Owners List Address members Map Address Float capacity Factors int nodes With Load members size if capacity Factors null nodes With Load for Address node members if capacity Factors get node nodes With Load return Math min num Owners nodes With Load Override public boolean equals Object other return other null other get Class get Class Override public int hash Code return public static class Externalizer extends Abstract Externalizer Default Consistent Hash Factory Override public void write Object Object Output output Default Consistent Hash Factory chf throws Exception Override Suppress Warnings unchecked public Default Consistent Hash Factory read Object Object Input unmarshaller throws Exception Class Not Found Exception return new Default Consistent Hash Factory Override public Integer get Id return Ids Override public Set Class extends Default Consistent Hash Factory get Type Classes return Collections singleton Default Consistent Hash Factory class 
package org infinispan container import static org infinispan commons util Util to Str import java util Abstract Collection import java util Abstract Set import java util Collection import java util Collections import java util Iterator import java util Map import java util Map Entry import java util No Such Element Exception import java util Optional import java util Set import java util Spliterator import java util Spliterators import java util concurrent Concurrent Map import java util function Bi Consumer import org infinispan commons logging Log import org infinispan commons logging Log Factory import org infinispan commons util Collection Factory import org infinispan commons util Entry Size Calculator import org infinispan commons util Eviction Listener import org infinispan commons util Peekable Map import org infinispan container entries Cache Entry Size Calculator import org infinispan container entries Immortal Cache Entry import org infinispan container entries Internal Cache Entry import org infinispan container entries Primitive Entry Size Calculator import org infinispan eviction Activation Manager import org infinispan eviction Eviction Manager import org infinispan eviction Eviction Type import org infinispan eviction Passivation Manager import org infinispan expiration Expiration Manager import org infinispan factories annotations Inject import org infinispan filter Key Filter import org infinispan filter Key Value Filter import org infinispan marshall core Wrapped Byte Array Size Calculator import org infinispan metadata Metadata import org infinispan metadata impl Metadata import org infinispan notifications cachelistener Cache Notifier import org infinispan persistence manager Persistence Manager import org infinispan util Core Immutables import org infinispan util Time Service import org infinispan util concurrent Within Thread Executor import com github benmanes caffeine cache Cache import com github benmanes caffeine cache Cache Writer import com github benmanes caffeine cache Caffeine import com github benmanes caffeine cache Policy import com github benmanes caffeine cache Removal Cause import net jcip annotations Thread Safe Default Data Container is both eviction and non eviction based data container author Manik Surtani author Galder Zamarre o author Vladimir Blagojevic author a href http gleamynode net Trustin Lee a since Thread Safe public class Default Data Container implements Data Container private static final Log log Log Factory get Log Default Data Container class private static final boolean trace log is Trace Enabled private final Concurrent Map Internal Cache Entry entries private final Cache Internal Cache Entry eviction Cache protected Internal Entry Factory entry Factory private Eviction Manager eviction Manager private Passivation Manager passivator private Activation Manager activator private Persistence Manager pm private Time Service time Service private Cache Notifier cache Notifier private Expiration Manager expiration Manager public Default Data Container int concurrency Level If no comparing implementations passed could fallback on entries Collection Factory make Concurrent Parallel Map concurrency Level eviction Cache null private static Caffeine caffeine Builder return Caffeine Caffeine new Builder protected Default Data Container int concurrency Level long threshold Size Eviction Type threshold Policy Default Eviction Listener eviction Listener new Default Eviction Listener Caffeine Internal Cache Entry caffeine caffeine Builder switch threshold Policy case Cache Entry Size Calculator calc new Cache Entry Size Calculator new Wrapped Byte Array Size Calculator new Primitive Entry Size Calculator caffeine weigher k v int calc calculate Size k v maximum Weight threshold Size break case caffeine maximum Size threshold Size break default throw new Unsupported Operation Exception Policy not supported threshold Policy eviction Cache apply Listener caffeine eviction Listener build entries eviction Cache as Map private Caffeine Internal Cache Entry apply Listener Caffeine Internal Cache Entry caffeine Default Eviction Listener listener return caffeine executor new Within Thread Executor removal Listener k v c switch c case listener on Entry Eviction Collections singleton Map k v break case listener on Entry Removed new Immortal Cache Entry k v break case listener on Entry Activated k break writer new Cache Writer Internal Cache Entry Override public void write key Internal Cache Entry value Override public void delete key Internal Cache Entry value Removal Cause cause if cause Removal Cause listener on Entry Chosen For Eviction new Immortal Cache Entry key value Method invoked when memory policy is used param concurrency Level param threshold Size param size Calculator protected Default Data Container int concurrency Level long threshold Size Entry Size Calculator super super size Calculator Default Eviction Listener eviction Listener new Default Eviction Listener Entry Size Calculator Internal Cache Entry calc new Cache Entry Size Calculator size Calculator eviction Cache apply Listener Caffeine new Builder weigher k Internal Cache Entry v int calc calculate Size k v maximum Weight threshold Size eviction Listener build entries eviction Cache as Map Inject public void initialize Eviction Manager eviction Manager Passivation Manager passivator Internal Entry Factory entry Factory Activation Manager activator Persistence Manager clm Time Service time Service Cache Notifier cache Notifier Expiration Manager expiration Manager this eviction Manager eviction Manager this passivator passivator this entry Factory entry Factory this activator activator this pm clm this time Service time Service this cache Notifier cache Notifier this expiration Manager expiration Manager public static Default Data Container bounded Data Container int concurrency Level long max Entries Eviction Type threshold Policy return new Default Data Container concurrency Level max Entries threshold Policy public static Default Data Container bounded Data Container int concurrency Level long max Entries Entry Size Calculator super super size Calculator return new Default Data Container concurrency Level max Entries size Calculator public static Default Data Container un Bounded Data Container int concurrency Level return new Default Data Container concurrency Level Override public Internal Cache Entry peek Object key if entries instanceof Peekable Map return Peekable Map Internal Cache Entry entries peek key return entries get key Override public Internal Cache Entry get Object k Internal Cache Entry e entries get k if e null e can Expire long current Time Millis time Service wall Clock Time if e is Expired current Time Millis expiration Manager handle In Memory Expiration e current Time Millis e null else e touch current Time Millis return e Override public void put k v Metadata metadata boolean l Entry false if metadata instanceof Metadata metadata Metadata metadata metadata l Entry true Internal Cache Entry e entries get k if trace log tracef Creating new for writing Existing s metadata s new value s e metadata to Str v final Internal Cache Entry copy if l Entry copy entry Factory create k v metadata else if e null copy entry Factory update e v metadata else this is a brand new entry copy entry Factory create k v metadata if trace log tracef Store s in container copy entries compute copy get Key key entry activator on Update key entry null return copy Override public boolean contains Key Object k Internal Cache Entry ice peek k if ice null ice can Expire long current Time Millis time Service wall Clock Time if ice is Expired current Time Millis expiration Manager handle In Memory Expiration ice current Time Millis ice null return ice null Override public Internal Cache Entry remove Object k final Internal Cache Entry reference new Internal Cache Entry entries compute k key entry activator on Remove key entry null reference entry return null Internal Cache Entry e reference if trace log tracef Removed s from container e return e null e can Expire e is Expired time Service wall Clock Time null e private Policy Eviction Internal Cache Entry eviction if eviction Cache null Optional Policy Eviction Internal Cache Entry eviction eviction Cache policy eviction if eviction is Present return eviction get throw new Unsupported Operation Exception Override public long capacity Policy Eviction Internal Cache Entry evict eviction return evict get Maximum Override public void resize long new Size Policy Eviction Internal Cache Entry evict eviction evict set Maximum new Size Override public int size int size We have to loop through to make sure to remove expired entries for Iterator Internal Cache Entry iter iterator iter has Next iter next if size Integer return Integer return size Override public int size Including Expired return entries size Override public void clear log tracef Clearing data container entries clear Override public Set key Set return Collections unmodifiable Set entries key Set Override public Collection values return new Values Override public Set Internal Cache Entry entry Set return new Entry Set Override public void evict key entries compute If Present key o entry passivator passivate entry return null Override public Internal Cache Entry compute key Compute Action action return entries compute key k old Entry Internal Cache Entry new Entry action compute k old Entry entry Factory if new Entry old Entry return old Entry else if new Entry null activator on Remove k false return null activator on Update k old Entry null if trace log tracef Store s in container new Entry return new Entry Override public Iterator Internal Cache Entry iterator return new Entry Iterator entries values iterator false Override public Iterator Internal Cache Entry iterator Including Expired return new Entry Iterator entries values iterator true private final class Default Eviction Listener implements Eviction Listener Internal Cache Entry Override public void on Entry Eviction Map Internal Cache Entry evicted eviction Manager on Entry Eviction evicted Override public void on Entry Chosen For Eviction Entry Internal Cache Entry entry passivator passivate entry get Value Override public void on Entry Activated Object key activator on Update key true Override public void on Entry Removed Entry Internal Cache Entry entry private class Immutable Entry Iterator extends Entry Iterator Immutable Entry Iterator Iterator Internal Cache Entry it super it false Override public Internal Cache Entry next return Core Immutables immutable Internal Cache Entry super next public class Entry Iterator implements Iterator Internal Cache Entry private final Iterator Internal Cache Entry it private final boolean include Expired private Internal Cache Entry next Entry Iterator Iterator Internal Cache Entry it boolean include Expired this it it this include Expired include Expired private Internal Cache Entry get Next boolean initialized Time false long now while it has Next Internal Cache Entry entry it next if include Expired entry can Expire log tracef Return next entry s entry return entry else if initialized Time now time Service wall Clock Time initialized Time true if entry is Expired now log tracef Return next entry s entry return entry else log tracef s is expired entry log tracef Return next null return null Override public Internal Cache Entry next if next null next get Next if next null throw new No Such Element Exception Internal Cache Entry to Return next next null return to Return Override public boolean has Next if next null next get Next return next null Override public void remove throw new Unsupported Operation Exception Minimal implementation needed for unmodifiable Set private class Entry Set extends Abstract Set Internal Cache Entry Override public boolean contains Object o if o instanceof Map Entry return false Suppress Warnings rawtypes Map Entry e Map Entry o Internal Cache Entry ice entries get e get Key if ice null return false return ice get Value equals e get Value Override public Iterator Internal Cache Entry iterator return new Immutable Entry Iterator entries values iterator Override public int size return entries size Override public String to String return entries to String Override public Spliterator Internal Cache Entry spliterator return Spliterators spliterator this Spliterator Spliterator Minimal implementation needed for unmodifiable Collection private class Values extends Abstract Collection Override public Iterator iterator return new Value Iterator entries values iterator Override public int size return entries size Override public Spliterator spliterator return Spliterators spliterator this Spliterator private static class Value Iterator implements Iterator Iterator Internal Cache Entry current Iterator private Value Iterator Iterator Internal Cache Entry it current Iterator it Override public boolean has Next return current Iterator has Next Override public void remove throw new Unsupported Operation Exception Override public next return current Iterator next get Value Override public void execute Task final Key Filter super filter final Bi Consumer super Internal Cache Entry action throws Interrupted Exception if filter null throw new Illegal Argument Exception No filter specified if action null throw new Illegal Argument Exception No action specified entries for Each key Internal Cache Entry value if filter accept key action accept key value figure out the way how to do interruption better during iteration if Thread current Thread is Interrupted throw new Interrupted Exception Override public void execute Task final Key Value Filter super super filter final Bi Consumer super Internal Cache Entry action throws Interrupted Exception if filter null throw new Illegal Argument Exception No filter specified if action null throw new Illegal Argument Exception No action specified entries for Each key Internal Cache Entry value if filter accept key value get Value value get Metadata action accept key value figure out the way how to do interruption better during iteration if Thread current Thread is Interrupted throw new Interrupted Exception 
package org infinispan distexec import java io Externalizable import java io Not Serializable Exception import java io Serializable import java util Array List import java util Arrays import java util Collection import java util Collections import java util Hash Map import java util Iterator import java util Linked List import java util List import java util Map import java util Map Entry import java util Random import java util concurrent Abstract Executor Service import java util concurrent Callable import java util concurrent Cancellation Exception import java util concurrent Completable Future import java util concurrent Completion Service import java util concurrent Execution Exception import java util concurrent Executor Completion Service import java util concurrent Executor Service import java util concurrent Executors import java util concurrent Future import java util concurrent Rejected Execution Exception import java util concurrent Runnable Future import java util concurrent Thread Pool Executor import java util concurrent Time Unit import java util concurrent Timeout Exception import java util concurrent atomic Atomic Boolean import org infinispan Advanced Cache import org infinispan Cache import org infinispan commands Cancel Command import org infinispan commands Cancellation Service import org infinispan commands Commands Factory import org infinispan commands read Distributed Execute Command import org infinispan commons marshall Marshaller import org infinispan commons marshall Streaming Marshaller import org infinispan commons util Util import org infinispan configuration cache Configuration import org infinispan distexec spi Distributed Task Lifecycle Service import org infinispan distribution Distribution Info import org infinispan distribution Distribution Manager import org infinispan factories Component Registry import org infinispan factories threads Default Thread Factory import org infinispan interceptors Async Interceptor import org infinispan interceptors Async Interceptor Chain import org infinispan interceptors locking Clustering Dependent Logic import org infinispan lifecycle Component Status import org infinispan manager Embedded Cache Manager import org infinispan remoting responses Response import org infinispan remoting responses Successful Response import org infinispan remoting rpc Response Mode import org infinispan remoting rpc Rpc Manager import org infinispan remoting transport Address import org infinispan remoting transport Topology Aware Address import org infinispan remoting transport jgroups Suspect Exception import org infinispan security Authorization Manager import org infinispan security Authorization Permission import org infinispan util Time Service import org infinispan util concurrent Completable Futures import org infinispan util logging Log import org infinispan util logging Log Factory Infinispan s implementation of an link Executor Service and link Distributed Executor Service This Executor Service provides methods to submit tasks for an execution on a cluster of Infinispan nodes p Note that due to potential task migration to another nodes every link Callable link Runnable and or link Distributed Callable submitted must be either link Serializable or link Externalizable Also the value returned from a callable must be link Serializable or link Externalizable Unfortunately if the value returned is not serializable then a link Not Serializable Exception will be thrown author Vladimir Blagojevic since deprecated since Please use link Embedded Cache Manager executor or link org infinispan Cache Stream instead public class Default Executor Service extends Abstract Executor Service implements Distributed Executor Service private static final Node Filter Topology Aware Address is Same Machine private static final Node Filter Topology Aware Address is Same Rack private static final Node Filter Topology Aware Address is Same Site private static final Node Filter this Address other Address true public static final Distributed Task Failover Policy new No Task Failover Policy public static final Distributed Task Failover Policy new Random Node Task Failover Policy private static final Log log Log Factory get Log Default Executor Service class private static final boolean trace log is Trace Enabled protected final Atomic Boolean is Shutdown new Atomic Boolean false protected final Advanced Cache cache protected final Rpc Manager rpc protected final Async Interceptor Chain invoker protected final Commands Factory factory protected final Marshaller marshaller protected final Executor Service local Executor Service protected final Cancellation Service cancellation Service protected final Clustering Dependent Logic cluster Dependent Logic protected final boolean take Executor Ownership private final Time Service time Service Creates a new Default Executor Service given a master cache node for local task execution All distributed task executions will be initiated from this Infinispan cache node param master Cache Node Cache node initiating distributed task public Default Executor Service Cache master Cache Node this master Cache Node create Local Executor master Cache Node true public static Executor Service create Local Executor Cache master Cache Node String node Name master Cache Node null Security Actions get Configured Node Name master Cache Node null return Executors new Single Thread Executor new Default Thread Factory null Thread Default Thread Factory node Name Default Executor Service Creates a new Default Executor Service given a master cache node and an Executor Service for parallel execution of tasks ran on this node All distributed task executions will be initiated from this Infinispan cache node p Note that Default Executor Service will not shutdown client supplied local Executor Service once this Default Executor Service is shutdown Lifecycle management of a supplied Executor Service is left to the client Also note that client supplied Executor Service should not execute tasks in the caller s thread i e rejection Handler of link Thread Pool Executor configured with link link Thread Pool Executor Caller Runs Policy param master Cache Node Cache node initiating distributed task param local Executor Service Executor Service to run local tasks public Default Executor Service Cache master Cache Node Executor Service local Executor Service this master Cache Node local Executor Service false Creates a new Default Executor Service given a master cache node and an Executor Service for parallel execution of task ran on this node All distributed task executions will be initiated from this Infinispan cache node param master Cache Node Cache node initiating distributed task param local Executor Service Executor Service to run local tasks param take Executor Ownership if true link Distributed Executor Service shutdown and link Distributed Executor Service shutdown Now method will shutdown local Executor Service as well public Default Executor Service Cache master Cache Node Executor Service local Executor Service boolean take Executor Ownership super if master Cache Node null throw new Illegal Argument Exception Can not use null cache for Default Executor Service else if local Executor Service null throw new Illegal Argument Exception Can not use null instance of Executor Service else try if local Executor Service is Shutdown throw new Illegal Argument Exception Can not use an instance of Executor Service which is shutdown catch Illegal State Exception e if take Executor Ownership throw new Illegal Argument Exception Can not take ownership of a Managed Executor Service this cache master Cache Node get Advanced Cache Component Registry registry Security Actions get Cache Component Registry cache ensure Access Permissions cache ensure Proper Cache State cache ensure Full Cache cache this rpc Security Actions get Cache Rpc Manager cache this invoker registry get Component Async Interceptor Chain class this factory registry get Component Commands Factory class this marshaller registry get Component Streaming Marshaller class this cancellation Service registry get Component Cancellation Service class this local Executor Service local Executor Service this take Executor Ownership take Executor Ownership this time Service registry get Time Service this cluster Dependent Logic registry get Component Clustering Dependent Logic class Override public Distributed Task Builder create Distributed Task Builder Callable callable Configuration cache Configuration Security Actions get Cache Configuration cache long to cache Configuration clustering remote Timeout Distributed Task Builder dtb new Default Distributed Task Builder to dtb callable callable return dtb Override public Completable Future submit Runnable task result return Completable Future super submit task result Override public Completable Future submit Callable task return Completable Future super submit task Override public void shutdown real Shutdown false protected List Address get Members if rpc null return rpc get Members else return Collections singleton List get Address protected List Address execution Candidates Distributed Task task return filter Members task get Task Execution Policy get Members private Address get Address return cluster Dependent Logic get Address private List Runnable real Shutdown boolean interrupt is Shutdown set true cancel all tasks if take Executor Ownership if interrupt local Executor Service shutdown Now else local Executor Service shutdown return Collections empty List Override public List Runnable shutdown Now return real Shutdown true Override public boolean is Shutdown return is Shutdown get Override public boolean is Terminated if is Shutdown get account for all tasks return true return false Override public boolean await Termination long timeout Time Unit unit throws Interrupted Exception long nano Time Wait unit to Nanos timeout wait for all tasks to finish return true Override public invoke Any Collection extends Callable tasks throws Interrupted Exception Execution Exception try return do Invoke Any tasks false catch Timeout Exception cannot Happen assert false return null Override public invoke Any Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception Execution Exception Timeout Exception return do Invoke Any tasks true unit to Nanos timeout the main mechanics of invoke Any This was essentially copied from link Abstract Executor Service do Invoke Any except that we replaced the link Executor Completion Service with our link Distributed Execution Completion Service private do Invoke Any Collection extends Callable tasks boolean timed long nanos throws Interrupted Exception Execution Exception Timeout Exception if tasks null throw new Null Pointer Exception int ntasks tasks size if ntasks throw new Illegal Argument Exception List Future futures new Array List ntasks Completion Service ecs new Distributed Execution Completion Service this For efficiency especially in executors with limited parallelism check to see if previously submitted tasks are done before submitting more of them This interleaving plus the exception mechanics account for messiness of main loop try Record exceptions so that if we fail to obtain any result we can throw the last exception we got Execution Exception ee null long last Time timed time Service time Iterator extends Callable it tasks iterator Start one task for sure the rest incrementally futures add ecs submit it next ntasks int active for Future f ecs poll if f null if ntasks ntasks futures add ecs submit it next active else if active break else if timed f ecs poll nanos Time Unit if f null throw new Timeout Exception long now time Service time nanos time Service time Duration last Time now Time Unit last Time now else f ecs take if f null active try return f get catch Interrupted Exception ie throw ie catch Execution Exception eex ee eex catch Runtime Exception rex ee new Execution Exception rex if ee null ee new Execution Exception private static final long serial Version throw ee finally for Future f futures f cancel true Override public void execute Runnable command if is Shutdown get Distributed Task Part Object cmd if command instanceof Distributed Task Part cmd Distributed Task Part Object command else if command instanceof Serializable cmd Distributed Task Part Object new Task For command null else throw new Illegal Argument Exception Runnable command is not Serializable command cmd execute else throw new Rejected Execution Exception Override protected Runnable Future new Task For Runnable runnable value if runnable null throw new Null Pointer Exception Runnable Adapter adapter new Runnable Adapter runnable value return new Task For adapter Override protected Runnable Future new Task For Callable callable if callable null throw new Null Pointer Exception Distributed Task Builder distributed Task Builder create Distributed Task Builder callable Distributed Task task distributed Task Builder build Distributed Execute Command execute Command factory build Distributed Execute Command callable get Address null return create Distributed Task Part task execute Command select Execution Node task Override public Completable Future submit Address target Callable task Distributed Task Builder distributed Task Builder create Distributed Task Builder task Distributed Task distributed Task distributed Task Builder build return submit target distributed Task Override public Completable Future submit Address target Distributed Task task if task null throw new Null Pointer Exception if target null throw new Null Pointer Exception List Address members get Members if members contains target return Completable Futures completed Exception Future new Suspect Exception Target node target is not a cluster member members are members Address me get Address Distributed Execute Command c if target equals me c factory build Distributed Execute Command clone task get Callable me null else c factory build Distributed Execute Command task get Callable me null Distributed Task Part part create Distributed Task Part task c target part execute return part Override public Completable Future submit Callable task input Distributed Task Builder distributed Task Builder create Distributed Task Builder task Distributed Task distributed Task distributed Task Builder build return submit distributed Task input Override public Completable Future submit Distributed Task task input if task null throw new Null Pointer Exception Address me get Address if input Keys Specified input Map Address List nodes Keys Map keys To Execution Nodes task get Task Execution Policy input check Execution Policy task nodes Keys Map input Array List Address nodes new Array List nodes Keys Map key Set Address target select Execution Node nodes Distributed Execute Command c if target equals me c factory build Distributed Execute Command clone task get Callable me Arrays as List input else c factory build Distributed Execute Command task get Callable me Arrays as List input Distributed Task Part part create Distributed Task Part task c Arrays as List input target part execute return part else return submit me task Override public List Completable Future submit Everywhere Callable task Distributed Task Builder distributed Task Builder create Distributed Task Builder task Distributed Task distributed Task distributed Task Builder build return submit Everywhere distributed Task Override public List Completable Future submit Everywhere Distributed Task task if task null throw new Null Pointer Exception List Address members execution Candidates task List Completable Future futures new Array List members size Address me get Address for Address target members Distributed Execute Command c if target equals me c factory build Distributed Execute Command clone task get Callable me null else c factory build Distributed Execute Command task get Callable me null Distributed Task Part part create Distributed Task Part task c target futures add part part execute return futures Override public List Completable Future submit Everywhere Callable task input Distributed Task Builder distributed Task Builder create Distributed Task Builder task Distributed Task distributed Task distributed Task Builder build return submit Everywhere distributed Task input Override public List Completable Future submit Everywhere Distributed Task task input if task null throw new Null Pointer Exception if input Keys Specified input List Completable Future futures new Array List input length Address me get Address Map Address List nodes Keys Map keys To Execution Nodes task get Task Execution Policy input check Execution Policy task nodes Keys Map input for Entry Address List e nodes Keys Map entry Set Address target e get Key Distributed Execute Command c if target equals me c factory build Distributed Execute Command clone task get Callable me e get Value else c factory build Distributed Execute Command task get Callable me e get Value Distributed Task Part part create Distributed Task Part task c e get Value target futures add part part execute return futures else return submit Everywhere task protected Callable clone Callable task return Util clone With Marshaller marshaller task protected Distributed Task Part create Distributed Task Part Distributed Task task Distributed Execute Command c List input Keys Address target int failover Count return get Address equals target new Local Distributed Task Part task c List Object input Keys failover Count new Remote Distributed Task Part task c List Object input Keys target failover Count protected Distributed Task Part create Distributed Task Part Distributed Task task Distributed Execute Command c Address target int failover Count return create Distributed Task Part task c Collections empty List target failover Count private void check Execution Policy Distributed Task task Map Address List nodes Keys Map input if nodes Keys Map null nodes Keys Map is Empty throw new Illegal State Exception Distributed Task Execution Policy task get Task Execution Policy for task task returned invalid keys To Execution Nodes nodes Keys Map execution policy plan for a given input Arrays to String input private boolean input Keys Specified input return input null input length protected Address select Execution Node List Address candidates List Address list random Cluster Members candidates return list get protected Address select Execution Node Distributed Task task return select Execution Node execution Candidates task protected List Address random Cluster Members final List Address members int num Needed if members null members is Empty throw new Illegal Argument Exception Invalid member list members if members size num Needed log cannot Select Random Members num Needed members num Needed members size List Address members Copy new Array List members List Address chosen new Array List num Needed Random r new Random while members Copy is Empty num Needed chosen size int count members Copy size Address address members Copy remove r next Int count chosen add address return chosen protected Map Address List keys To Execution Nodes Distributed Task Execution Policy policy input Distribution Manager dm cache get Distribution Manager Map Address List address To Key new Hash Map input length boolean using Mode dm null for key input Address owner Of Key if using Mode List Address members new Array List get Members members filter Members policy members using mode https issues jboss org browse since keys and values are on all nodes lets just pick randomly Collections shuffle members owner Of Key members get else mode Distribution Info distribution Info dm get Cache Topology get Distribution key Collection Address owners distribution Info write Owners List Address filtered filter Members policy owners if filtered is Empty owner Of Key filtered get else owner Of Key distribution Info primary List keys At Node address To Key get owner Of Key if keys At Node null keys At Node new Linked List address To Key put owner Of Key keys At Node keys At Node add key return address To Key private List Address filter Members Distributed Task Execution Policy policy Collection Address members Node Filter filter switch policy case filter break case filter break case filter break case filter break default filter break List Address result new Array List for Address address members if address instanceof Topology Aware Address Topology Aware Address taa Topology Aware Address address if filter include taa Topology Aware Address get Address result add address else result add address return result private void ensure Access Permissions final Advanced Cache cache Authorization Manager authorization Manager Security Actions get Cache Authorization Manager cache if authorization Manager null authorization Manager check Permission Authorization Permission private void ensure Proper Cache State Advanced Cache cache throws Null Pointer Exception Illegal State Exception We allow for state so the Executor Service can be used by components defining a method with link Start annotation if cache get Status Component Status cache get Status Component Status throw new Illegal State Exception Invalid cache state cache get Status private void ensure Full Cache Advanced Cache cache List Async Interceptor interceptors Security Actions get Interceptor Chain cache if interceptors null interceptors is Empty throw log distributed Executors Not Supported private static class Random Node Task Failover Policy implements Distributed Task Failover Policy public Random Node Task Failover Policy super Override public Address failover Failover Context fc return random Node fc execution Candidates fc execution Failure Location protected Address random Node List Address candidates Address failed Execution Location Random r new Random candidates remove failed Execution Location if candidates is Empty throw new Illegal State Exception There are no candidates for failover candidates int t Index r next Int candidates size return candidates get t Index Override public int max Failover Attempts return private static class No Task Failover Policy implements Distributed Task Failover Policy public No Task Failover Policy super Override public Address failover Failover Context fc return fc execution Failure Location Override public int max Failover Attempts return Node Filter allows selection of nodes according to link Distributed Task Execution Policy interface Node Filter boolean include Topology Aware Address this Address Topology Aware Address other Address private class Default Distributed Task Builder implements Distributed Task Builder Distributed Task private Callable callable private long timeout private Distributed Task Execution Policy execution Policy Distributed Task Execution Policy private Distributed Task Failover Policy failover Policy public Default Distributed Task Builder long task Timeout this timeout task Timeout Override public Distributed Task Builder callable Callable callable if callable null throw new Illegal Argument Exception Callable can not be null this callable callable return this Override public Distributed Task Builder timeout long t Time Unit tu timeout Time Unit convert t tu return this Override public Distributed Task Builder execution Policy Distributed Task Execution Policy policy if policy null throw new Illegal Argument Exception Distributed Task Execution Policy can not be null this execution Policy policy return this Override public Distributed Task Builder failover Policy Distributed Task Failover Policy policy if policy null this failover Policy else this failover Policy policy return this Override public Distributed Task build Default Distributed Task Builder task new Default Distributed Task Builder timeout task callable callable task execution Policy execution Policy task failover Policy failover Policy return task Override public long timeout return timeout Override public Distributed Task Execution Policy get Task Execution Policy return execution Policy Override public Distributed Task Failover Policy get Task Failover Policy return failover Policy Override public Callable get Callable return callable Distributed Task Part represents a unit of work sent to remote and executed there author Mircea Markus author Vladimir Blagojevic private abstract class Distributed Task Part extends Completable Future implements Runnable Future protected final Distributed Execute Command dist Command private final List Object input Keys private final Distributed Task owning Task private int failed Over Count private volatile boolean cancelled protected Distributed Task Part List Object input Keys Distributed Execute Command command Distributed Task task int failed Over Count this input Keys input Keys this dist Command command this owning Task task this failed Over Count failed Over Count public List Object get Input Keys return input Keys public Distributed Execute Command get Command return dist Command public Distributed Task get Owning Task return owning Task public abstract Address get Execution Target public abstract void execute Override public get throws Interrupted Exception Execution Exception try return inner Get Time Unit catch Timeout Exception e throw new Execution Exception e Override public get long timeout Time Unit unit throws Interrupted Exception Execution Exception Timeout Exception return inner Get timeout unit protected inner Get long timeout Time Unit unit throws Execution Exception Timeout Exception Interrupted Exception if is Cancelled throw new Cancellation Exception Task already cancelled long timeout Nanos compute Timeout Nanos timeout unit try return get Result timeout Nanos catch Timeout Exception te throw te catch Exception e The could have finished with a org infinispan util concurrent Timeout Exception right before the Future get timeout expired If that s the case we want to throw a Timeout Exception if e instanceof Execution Exception e get Cause instanceof org infinispan util concurrent Timeout Exception if trace log tracef Distributed task timed out throwing a Timeout Exception and ignoring exception e throw new Timeout Exception boolean can Failover failed Over Count get Owning Task get Task Failover Policy max Failover Attempts if can Failover try return failover Execution e timeout Nanos Time Unit catch Exception failed Over throw wrap Into Execution Exception failed Over else throw wrap Into Execution Exception e protected get Result long timeout Nanos throws Exception if timeout Nanos return super get timeout Nanos Time Unit else return super get protected long compute Timeout Nanos long timeout Time Unit unit long task Timeout Time Unit to Nanos get Owning Task timeout long future Timeout Time Unit convert timeout unit long actual Timeout if task Timeout future Timeout actual Timeout Math min task Timeout future Timeout else actual Timeout Math max task Timeout future Timeout return actual Timeout protected Execution Exception wrap Into Execution Exception Exception e if e instanceof Execution Exception return Execution Exception e else return new Execution Exception e protected failover Execution final Exception cause long timeout Time Unit unit throws Exception final List Address execution Candidates execution Candidates get Owning Task Failover Context fc new Failover Context Override public List input Keys return List get Input Keys Override public Address execution Failure Location return get Execution Target Override public List Address execution Candidates return execution Candidates Override public Throwable cause return cause Address failover Target get Owning Task get Task Failover Policy failover fc log distributed Task Failover fc execution Failure Location failover Target cause Distributed Task Part part create Distributed Task Part owning Task dist Command get Input Keys failover Target failed Over Count part execute return part get timeout unit Override public void run execute private class Remote Distributed Task Part extends Distributed Task Part private final Address execution Target public Remote Distributed Task Part Distributed Task task Distributed Execute Command command List Object input Keys Address execution Target int failover Count super input Keys command task failover Count if get Address equals execution Target throw new Illegal Argument Exception This task should be executed as local this execution Target execution Target Override public Address get Execution Target return execution Target Override public void execute if trace log tracef Sending s to remote execution at node s this get Execution Target try rpc invoke Remotely Async Collections singleton List get Execution Target get Command rpc get Rpc Options Builder Response Mode timeout get Owning Task timeout Time Unit build when Complete Map Address Response v Throwable t if t null complete Exceptionally t else try complete retrieve Result v catch Exception e complete Exceptionally e catch Throwable e log remote Execution Failed get Execution Target e Override public boolean cancel boolean may Interrupt If Running if is Cancelled super cancel true Cancel Command ccc factory build Cancel Command Command dist Command get rpc invoke Remotely Collections singleton List get Execution Target ccc rpc get Default Rpc Options true return true else already cancelled return false private retrieve Result Map Address Response response throws Exception result null this two should never happen mark them with Illegal State Exception if response null throw new Illegal State Exception Invalid response received response if response size for Entry Address Response e response entry Set Response value e get Value if value instanceof Successful Response result Successful Response value get Response Value else throw new Execution Exception new Exception value null value to String Unknown cause else should never happen as we send Distributed Task Part to one node for execution only therefore we should get only one response throw new Illegal State Exception Invalid response response return result private class Local Distributed Task Part extends Distributed Task Part public Local Distributed Task Part Distributed Task task Distributed Execute Command command List Object input Keys int failover Count super input Keys command task failover Count Override public synchronized boolean cancel boolean may Interrupt If Running if is Cancelled super cancel true Cancel Command ccc factory build Cancel Command Command dist Command get ccc init cancellation Service try ccc invoke catch Throwable t log could Not Execute Cancellation Locally t return true else already cancelled return false Override public Address get Execution Target return get Address Override public void execute log debugf Sending s to self this try Runnable call get Command init cache Distributed Task Lifecycle Service lifecycle Distributed Task Lifecycle Service get Instance try hook into lifecycle lifecycle on Pre Execute get Command get Callable cache Collections unmodifiable Collection get Input Keys cancellation Service register Thread current Thread get Command get get Command invoke Async when Complete rv t if t null complete Exceptionally t else complete rv hook into lifecycle lifecycle on Post Execute get Command get Callable cancellation Service unregister get Command get catch Throwable t complete Exceptionally t hook into lifecycle lifecycle on Post Execute get Command get Callable cancellation Service unregister get Command get local Executor Service execute call catch Throwable e log local Execution Failed e 
package org infinispan util concurrent locks impl import static java util concurrent atomic Atomic Reference Field Updater new Updater import static org infinispan commons util Util to Str import java util Array List import java util Collection import java util Hash Set import java util List import java util Objects import java util Set import java util concurrent Callable import java util concurrent Completable Future import java util concurrent Scheduled Executor Service import java util concurrent Scheduled Future import java util concurrent Time Unit import java util concurrent atomic Atomic Integer import java util concurrent atomic Atomic Reference Field Updater import org infinispan commons util Util import org infinispan configuration cache Configuration import org infinispan context Invocation Context import org infinispan factories Known Component Names import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan jmx annotations Data Type import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Attribute import org infinispan util concurrent Timeout Exception import org infinispan util concurrent locks Deadlock Detected Exception import org infinispan util concurrent locks Extended Lock Promise import org infinispan util concurrent locks Key Aware Lock Listener import org infinispan util concurrent locks Key Aware Lock Promise import org infinispan util concurrent locks Lock Listener import org infinispan util concurrent locks Lock Manager import org infinispan util concurrent locks Lock Promise import org infinispan util concurrent locks Lock State import org infinispan util logging Log import org infinispan util logging Log Factory The default link Lock Manager implementation for transactional and non transactional caches author Pedro Ruivo since Bean object Name Lock Manager description Manager that handles locks for entries public class Default Lock Manager implements Lock Manager private static final Log log Log Factory get Log Default Lock Manager class private static final boolean trace log is Trace Enabled private static final Atomic Reference Field Updater Composite Lock Promise Lock State new Updater Composite Lock Promise class Lock State class lock State private Lock Container lock Container private Configuration configuration private Scheduled Executor Service scheduler Inject public void inject Lock Container container Configuration configuration Component Name Known Component Names Scheduled Executor Service executor Service this lock Container container this configuration configuration this scheduler executor Service Override public Key Aware Lock Promise lock Object key Object lock Owner long time Time Unit unit Objects require Non Null key Key must be non null Objects require Non Null lock Owner Lock owner must be non null Objects require Non Null unit Time unit must be non null if trace log tracef Lock key s for owner s timeout s s to Str key lock Owner time unit if key lock Owner If the lock is already owned by this lock owner there is no reason to attempt the lock needlessly Infinispan Lock lock lock Container get Lock key if lock null lock get Lock Owner key log tracef Not locking key s as it is already held by the same lock owner key return Key Aware Lock Promise Extended Lock Promise promise lock Container acquire key lock Owner time unit return new Key Aware Extended Lock Promise promise key unit to Millis time schedule Lock Timeout Task scheduler Override public Key Aware Lock Promise lock All Collection keys Object lock Owner long time Time Unit unit Objects require Non Null keys Keys must be non null Objects require Non Null lock Owner Lock owner must be non null Objects require Non Null unit Time unit must be non null if keys is Empty if trace log tracef Lock all no keys found for owner s lock Owner return Key Aware Lock Promise else if keys size although will have the cost of creating an iterator at least we do n t need to enter the synchronized section return lock keys iterator next lock Owner time unit final Set Object unique Keys filter Distinct Keys keys if unique Keys size although will have the cost of creating an iterator at least we do n t need to enter the synchronized section return lock unique Keys iterator next lock Owner time unit if trace log tracef Lock all keys s for owner s timeout s s to Str unique Keys lock Owner time unit final Composite Lock Promise composite Lock Promise new Composite Lock Promise unique Keys size needed to avoid internal deadlock when or more lock owner invokes this method with the same keys ordering will not solve the problem since acquire is non blocking and each lock owner can iterate faster slower than the other synchronized this for Object key unique Keys composite Lock Promise add Lock new Key Aware Extended Lock Promise lock Container acquire key lock Owner time unit key unit to Millis time composite Lock Promise mark List As Final return composite Lock Promise schedule Lock Timeout Task scheduler time unit private Set Object filter Distinct Keys Collection collection if collection instanceof Set noinspection unchecked return Set Object collection else return new Hash Set collection Override public void unlock Object key Object lock Owner if trace log tracef Release lock for key s owner s key lock Owner lock Container release key lock Owner Override public void unlock All Collection keys Object lock Owner if trace log tracef Release locks for keys s owner s to Str keys lock Owner if keys is Empty return for Object key keys If the key is the lock owner that means it was explicitly locked which can only be unlocked via the single argument unlock method This is used by a cache that has the lock owner specifically overridden if key lock Owner log tracef Ignoring key s as it matches lock owner key else lock Container release key lock Owner Override public void unlock All Invocation Context context unlock All context get Locked Keys context get Lock Owner context clear Locked Keys Override public boolean owns Lock Object key Object lock Owner Object current Owner get Owner key return current Owner null current Owner equals lock Owner Override public boolean is Locked Object key return get Owner key null Override public Object get Owner Object key Infinispan Lock lock lock Container get Lock key return lock null null lock get Lock Owner Override public String print Lock Info return lock Container to String Override Managed Attribute description The number of exclusive locks that are held display Name Number of locks held public int get Number Of Locks Held return lock Container get Num Locks Held Managed Attribute description The concurrency level that the Lock Manager has been configured with display Name Concurrency level data Type Data Type public int get Concurrency Level return configuration locking concurrency Level Managed Attribute description The number of exclusive locks that are available display Name Number of locks available public int get Number Of Locks Available return lock Container size lock Container get Num Locks Held Override public Infinispan Lock get Lock Object key return lock Container get Lock key private static class Key Aware Extended Lock Promise implements Key Aware Lock Promise Extended Lock Promise Callable Void private final Extended Lock Promise lock Promise private final Object key private final long timeout Millis private Key Aware Extended Lock Promise Extended Lock Promise lock Promise Object key long timeout Millis this lock Promise lock Promise this key key this timeout Millis timeout Millis Override public void cancel Lock State cause lock Promise cancel cause Override public Object get Requestor return lock Promise get Requestor Override public Object get Owner return lock Promise get Owner Override public boolean is Available return lock Promise is Available Override public void lock throws Interrupted Exception Timeout Exception try lock Promise lock catch Timeout Exception e throw log unable To Acquire Lock Util pretty Print Time timeout Millis to Str key lock Promise get Requestor lock Promise get Owner Override public void add Listener Lock Listener listener lock Promise add Listener listener Override public void add Listener Key Aware Lock Listener listener lock Promise add Listener state listener on Event key state Override public Void call throws Exception lock Promise cancel Lock State return null Key Aware Extended Lock Promise schedule Lock Timeout Task Scheduled Executor Service executor Service if executor Service null timeout Millis is Available Scheduled Future future executor Service schedule this timeout Millis Time Unit lock Promise add Listener state future cancel false return this private static class Composite Lock Promise implements Key Aware Lock Promise Lock Listener Callable Void private final List Key Aware Extended Lock Promise lock Promise List private final Completable Future Lock State notifier Suppress Warnings Can Be Final volatile Lock State lock State Lock State private final Atomic Integer counters Left new Atomic Integer private Composite Lock Promise int size lock Promise List new Array List size notifier new Completable Future void add Lock Key Aware Extended Lock Promise lock Promise lock Promise List add lock Promise void mark List As Final counters Left set lock Promise List size for Lock Promise lock Promise lock Promise List lock Promise add Listener this Override public boolean is Available return notifier is Done Override public void lock throws Interrupted Exception Timeout Exception Interrupted Exception interrupted Exception null Timeout Exception timeout Exception null Deadlock Detected Exception deadlock Exception null Runtime Exception runtime Exception null for Extended Lock Promise lock Promise lock Promise List try we still need to invoke lock in all the locks lock Promise lock catch Interrupted Exception e interrupted Exception e catch Timeout Exception e timeout Exception e catch Deadlock Detected Exception e deadlock Exception e catch Runtime Exception e runtime Exception e if interrupted Exception null throw interrupted Exception else if timeout Exception null throw timeout Exception else if deadlock Exception null throw deadlock Exception else if runtime Exception null throw runtime Exception Override public void add Listener Lock Listener listener notifier then Accept listener on Event Override public void on Event Lock State state if notifier is Done already finished return each lock will invoke this if state Lock State cancel All state return if counters Left decrement And Get notifier complete lock State private void cancel All Lock State state if compare And Set this Lock State state complete the future before cancel other locks the remaining locks will be invoke on Event notifier complete state lock Promise List for Each promise promise cancel state Override public void add Listener Key Aware Lock Listener listener for Key Aware Extended Lock Promise lock Promise lock Promise List lock Promise add Listener listener Override public Void call throws Exception lock Promise List for Each promise promise cancel Lock State return null Composite Lock Promise schedule Lock Timeout Task Scheduled Executor Service executor Service long time Time Unit unit if executor Service null time is Available Scheduled Future future executor Service schedule this time unit add Listener state future cancel false return this 
package org infinispan factories threads import java util concurrent Thread Factory import java util concurrent atomic Atomic Long Thread factory based on Boss Thread s Boss Thread Factory author Galder Zamarre o since public class Default Thread Factory implements Thread Factory public static final String c n p f t t private final String name private final Thread Group thread Group private final int initial Priority private final String thread Name Pattern private final Atomic Long factory Thread Index Sequence new Atomic Long private final long factory Index private static final Atomic Long global Thread Index Sequence new Atomic Long private static final Atomic Long factory Index Sequence new Atomic Long private String node private String component Construct a new instance The access control context of the calling thread will be the one used to create new threads if a security manager is installed param thread Group the thread group to assign threads to by default may be code null param initial Priority the initial thread priority or code null to use the thread group s setting param thread Name Pattern the name pattern string public Default Thread Factory Thread Group thread Group int initial Priority String thread Name Pattern String node String component this null thread Group initial Priority thread Name Pattern node component Construct a new instance The access control context of the calling thread will be the one used to create new threads if a security manager is installed param name the name of this thread factory may be code null param thread Group the thread group to assign threads to by default may be code null param initial Priority the initial thread priority or code null to use the thread group s setting param thread Name Pattern the name pattern string public Default Thread Factory String name Thread Group thread Group int initial Priority String thread Name Pattern String node String component this name name if thread Group null final Security Manager sm System get Security Manager thread Group sm null sm get Thread Group Thread current Thread get Thread Group this thread Group thread Group this initial Priority initial Priority factory Index factory Index Sequence get And Increment if thread Name Pattern null thread Name Pattern Default Thread Factory this thread Name Pattern thread Name Pattern this node node this component component public String get Name return name public void set Node String node this node node public void set Component String component this component component public String thread Name Pattern return thread Name Pattern public Thread Group thread Group return thread Group public int initial Priority return initial Priority Override public Thread new Thread final Runnable target return create Thread target private Thread create Thread final Runnable target final Thread Name Info name Info new Thread Name Info global Thread Index Sequence get And Increment factory Thread Index Sequence get And Increment factory Index node component Thread thread new Thread thread Group target thread set Name name Info format thread thread Name Pattern thread set Priority initial Priority thread set Daemon true return thread 
package org infinispan util import java time Clock import java time Instant import java util concurrent Time Unit The default implementation of link Time Service It does not perform any optimization and relies on link System current Time Millis and link System nano Time author Pedro Ruivo since public class Default Time Service implements Time Service private final Clock clock public Default Time Service this clock Clock system Override public long wall Clock Time return System current Time Millis Override public long time return System nano Time Override public Instant instant return clock instant Override public long time Duration long start Time Time Unit output Time Unit return time Duration start Time time output Time Unit Override public long time Duration long start Time long end Time Time Unit output Time Unit long remaining end Time start Time if remaining return return output Time Unit convert remaining Time Unit Override public boolean is Time Expired long end Time return time end Time Override public long remaining Time long end Time Time Unit output Time Unit long remaining end Time time return remaining output Time Unit convert remaining Time Unit Override public long expected End Time long duration Time Unit input Time Unit if duration return time return time input Time Unit to Nanos duration 
package org infinispan stream impl import java io Exception import java io Object Input import java io Object Output import java util Arrays import java util Collection import java util Collections import java util Comparator import java util Enum Set import java util Hash Set import java util Identity Hash Map import java util Iterator import java util Map import java util Objects import java util Optional import java util Set import java util Spliterator import java util Spliterators import java util concurrent Array Blocking Queue import java util concurrent Blocking Queue import java util concurrent Executor import java util concurrent Time Unit import java util concurrent atomic Atomic Boolean import java util concurrent locks Condition import java util concurrent locks Lock import java util concurrent locks Reentrant Lock import java util function Bi Consumer import java util function Bi Function import java util function Binary Operator import java util function Consumer import java util function Function import java util function Int Function import java util function Predicate import java util function Supplier import java util function To Double Function import java util function To Int Function import java util function To Long Function import java util stream Collector import java util stream Collectors import java util stream Double Stream import java util stream Int Stream import java util stream Long Stream import java util stream Stream import org infinispan Cache import org infinispan Cache Stream import org infinispan Double Cache Stream import org infinispan Int Cache Stream import org infinispan Long Cache Stream import org infinispan commons Cache Exception import org infinispan commons marshall Externalizer import org infinispan commons marshall Serialize With import org infinispan commons util Closeable Iterator import org infinispan container entries Cache Entry import org infinispan distribution Distribution Manager import org infinispan distribution Localized Cache Topology import org infinispan distribution ch Consistent Hash import org infinispan factories Component Registry import org infinispan remoting transport Address import org infinispan stream impl intops object Distinct Operation import org infinispan stream impl intops object Filter Operation import org infinispan stream impl intops object Flat Map Operation import org infinispan stream impl intops object Flat Map To Double Operation import org infinispan stream impl intops object Flat Map To Int Operation import org infinispan stream impl intops object Flat Map To Long Operation import org infinispan stream impl intops object Limit Operation import org infinispan stream impl intops object Map Operation import org infinispan stream impl intops object Map To Double Operation import org infinispan stream impl intops object Map To Int Operation import org infinispan stream impl intops object Map To Long Operation import org infinispan stream impl intops object Peek Operation import org infinispan stream impl termop object For Each Bi Operation import org infinispan stream impl termop object For Each Operation import org infinispan stream impl termop object No Map Iterator Operation import org infinispan util Closeable Supplied Iterator import org infinispan util Range Set import org infinispan util concurrent Timeout Exception import org infinispan util function Closeable Supplier Implementation of link Cache Stream that provides support for lazily distributing stream methods to appropriate nodes param The type of the stream public class Distributed Cache Stream extends Abstract Cache Stream Stream Cache Stream implements Cache Stream This is a hack to allow for cast to work properly since Java does n t work as well with nested generics protected static Supplier Cache Stream Cache Entry supplier Stream Cast Supplier supplier return supplier Standard constructor requiring all pertinent information to properly utilize a distributed cache stream param local Address the local address for this node param parallel whether or not this stream is parallel param dm the distribution manager to find out what keys map where param supplier a supplier of local cache stream instances param csm manager that handles sending out messages to other nodes param include Loader whether or not a cache loader should be utilized for these operations param distributed Batch Size default size of distributed batches param executor executor to be used for certain operations that require async processing ie iterator public Distributed Cache Stream Address local Address boolean parallel Distribution Manager dm Supplier Cache Stream Cache Entry supplier Cluster Stream Manager csm boolean include Loader int distributed Batch Size Executor executor Component Registry registry super local Address parallel dm supplier Stream Cast supplier csm include Loader distributed Batch Size executor registry Constructor that also allows a simple map method to be inserted first to change to another type This is important because the link Cache Stream map Function currently does n t return a link Cache Stream If this is changed we can remove this constructor and update references accordingly param local Address the local address for this node param parallel whether or not this stream is parallel param dm the distribution manager to find out what keys map where param supplier a supplier of local cache stream instances param csm manager that handles sending out messages to other nodes param include Loader whether or not a cache loader should be utilized for these operations param distributed Batch Size default size of distributed batches param executor executor to be used for certain operations that require async processing ie iterator param function initial function to apply to the stream to change the type public Distributed Cache Stream Address local Address boolean parallel Distribution Manager dm Supplier Cache Stream Cache Entry supplier Cluster Stream Manager csm boolean include Loader int distributed Batch Size Executor executor Component Registry registry Function super Cache Entry function super local Address parallel dm supplier Stream Cast supplier csm include Loader distributed Batch Size executor registry intermediate Operations add new Map Operation function iterator Operation Iterator Operation This constructor is to be used only when a user calls a map or flat map method changing back to a regular Stream from an Int Stream Double Stream etc param other other instance of link Abstract Cache Stream to copy details from protected Distributed Cache Stream Abstract Cache Stream other super other Override protected Cache Stream unwrap return this Intermediate operations that are stored for lazy evalulation Override public Cache Stream filter Predicate super predicate return add Intermediate Operation new Filter Operation predicate Override public Cache Stream map Function super extends mapper if iterator Operation Iterator Operation iterator Operation Iterator Operation add Intermediate Operation Map new Map Operation mapper return Cache Stream this Override public Int Cache Stream map To Int To Int Function super mapper if iterator Operation Iterator Operation iterator Operation Iterator Operation add Intermediate Operation Map new Map To Int Operation mapper return int Cache Stream Override public Long Cache Stream map To Long To Long Function super mapper if iterator Operation Iterator Operation iterator Operation Iterator Operation add Intermediate Operation Map new Map To Long Operation mapper return long Cache Stream Override public Double Cache Stream map To Double To Double Function super mapper if iterator Operation Iterator Operation iterator Operation Iterator Operation add Intermediate Operation Map new Map To Double Operation mapper return double Cache Stream Override public Cache Stream flat Map Function super extends Stream extends mapper iterator Operation Iterator Operation add Intermediate Operation Map new Flat Map Operation mapper return Cache Stream this Override public Int Cache Stream flat Map To Int Function super extends Int Stream mapper iterator Operation Iterator Operation add Intermediate Operation Map new Flat Map To Int Operation mapper return int Cache Stream Override public Long Cache Stream flat Map To Long Function super extends Long Stream mapper iterator Operation Iterator Operation add Intermediate Operation Map new Flat Map To Long Operation mapper return long Cache Stream Override public Double Cache Stream flat Map To Double Function super extends Double Stream mapper iterator Operation Iterator Operation add Intermediate Operation Map new Flat Map To Double Operation mapper return double Cache Stream Override public Cache Stream distinct Distinct is applied remotely as well add Intermediate Operation Distinct Operation get Instance return new Intermediate Cache Stream this distinct Override public Cache Stream sorted return new Intermediate Cache Stream this sorted Override public Cache Stream sorted Comparator super comparator return new Intermediate Cache Stream this sorted comparator Override public Cache Stream peek Consumer super action return add Intermediate Operation new Peek Operation action Override public Cache Stream limit long max Size Limit is applied remotely as well add Intermediate Operation new Limit Operation max Size return new Intermediate Cache Stream this limit max Size Override public Cache Stream skip long n return new Intermediate Cache Stream this skip n Now we have terminal operators Override public reduce identity Binary Operator accumulator return perform Operation Terminal Functions reduce Function identity accumulator true accumulator null Override public Optional reduce Binary Operator accumulator value perform Operation Terminal Functions reduce Function accumulator true e e if e null if e null return accumulator apply e e return e return e null return Optional of Nullable value Override public reduce identity Bi Function super accumulator Binary Operator combiner return perform Operation Terminal Functions reduce Function identity accumulator combiner true combiner null inherit Doc Note this method does n t pay attention to ordering constraints and any sorting performed on the stream will be ignored by this terminal operator If you wish to have an ordered collector use the link Distributed Cache Stream collect Collector method making sure the link java util stream Collector Characteristics property is not set param supplier param accumulator param combiner param return Override public collect Supplier supplier Bi Consumer super accumulator Bi Consumer combiner return perform Operation Terminal Functions collect Function supplier accumulator combiner true e e combiner accept e e return e null Serialize With value Identify Finish Collector Identity Finish Collector Externalizer class private static final class Identify Finish Collector implements Collector private final Collector real Collector Identify Finish Collector Collector real Collector this real Collector real Collector Override public Supplier supplier return real Collector supplier Override public Bi Consumer accumulator return real Collector accumulator Override public Binary Operator combiner return real Collector combiner Override public Function finisher return null Override public Set Characteristics characteristics Set Characteristics characteristics real Collector characteristics if characteristics size return Enum Set of Characteristics else Set Characteristics tweaked Enum Set copy Of characteristics tweaked add Characteristics return tweaked public static final class Identity Finish Collector Externalizer implements Externalizer Identify Finish Collector Override public void write Object Object Output output Identify Finish Collector object throws Exception output write Object object real Collector Override public Identify Finish Collector read Object Object Input input throws Exception Class Not Found Exception return new Identify Finish Collector Collector input read Object Override public collect Collector super collector If it is not an identify finish we have to prevent the remote finisher and apply locally only after everything is combined if collector characteristics contains Collector Characteristics return perform Operation Terminal Functions collector Function collector true Binary Operator collector combiner null else Need to wrap collector to force identity finish intermediate Result perform Operation Terminal Functions collector Function new Identify Finish Collector collector true collector combiner null return collector finisher apply intermediate Result Override public Optional min Comparator super comparator value perform Operation Terminal Functions min Function comparator false e e if e null if e null return comparator compare e e e e else return e return e null return Optional of Nullable value Override public Optional max Comparator super comparator value perform Operation Terminal Functions max Function comparator false e e if e null if e null return comparator compare e e e e else return e return e null return Optional of Nullable value Override public boolean any Match Predicate super predicate return perform Operation Terminal Functions any Match Function predicate false Boolean logical Or b b Override public boolean all Match Predicate super predicate return perform Operation Terminal Functions all Match Function predicate false Boolean logical And b b Override public boolean none Match Predicate super predicate return perform Operation Terminal Functions none Match Function predicate false Boolean logical And b b Override public Optional find First We are n t sorted so just do find Any return find Any Override public Optional find Any value perform Operation Terminal Functions find Any Function false r r r null r r Objects non Null return Optional of Nullable value Override public long count return perform Operation Terminal Functions count Function true l l l l null The next ones are key tracking terminal operators Override public Iterator iterator return remote Iterator Iterator remote Iterator Blocking Queue queue new Array Blocking Queue distributed Batch Size final Atomic Boolean complete new Atomic Boolean Lock next Lock new Reentrant Lock Condition next Condition next Lock new Condition Consumer consumer new Hand Off Consumer queue complete next Lock next Condition Iterator Supplier supplier new Iterator Supplier queue complete next Lock next Condition csm boolean iterator Parallel Distribute parallel Distribution null false parallel Distribution if rehash Aware rehash Aware Iteration complete consumer supplier iterator Parallel Distribute else ignore Rehash Iteration consumer supplier iterator Parallel Distribute Closeable Iterator closeable Iterator new Closeable Supplied Iterator supplier on Close supplier close return closeable Iterator private void ignore Rehash Iteration Consumer consumer Iterator Supplier supplier boolean iterator Parallel Distribute Collection Consumer remote Results new Collection Consumer consumer Consistent Hash ch dm get Write Consistent Hash boolean run Local ch get Members contains local Address boolean stay Local run Local segments To Filter null ch get Segments For Owner local Address contains All segments To Filter No Map Iterator Operation op new No Map Iterator Operation intermediate Operations supplier For Segments ch segments To Filter null stay Local distributed Batch Size Thread thread Thread current Thread executor execute try log tracef Thread s submitted iterator request for stream thread if stay Local Object id csm remote Stream Operation iterator Parallel Distribute parallel ch segments To Filter keys To Filter Collections Object Set empty Map include Loader op remote Results Make sure to run this after we submit to the manager so it can process the other nodes asynchronously with the local operation Collection local Value op perform Operation remote Results remote Results on Completion null Collections empty Set local Value if id null supplier pending id try try if csm await Completion id timeout timeout Unit throw new Timeout Exception catch Interrupted Exception e throw new Cache Exception e finally csm forget Operation id else Collection local Value op perform Operation remote Results remote Results on Completion null Collections empty Set local Value supplier close catch Cache Exception e log trace Encountered local cache exception for stream e supplier close e catch Throwable t log trace Encountered local throwable for stream t supplier close new Cache Exception t private void rehash Aware Iteration Atomic Boolean complete Consumer consumer Iterator Supplier supplier boolean iterator Parallel Distribute Consistent Hash segment Info dm get Read Consistent Hash Segment Listener Notifier listener Notifier if segment Completion Listener null listener Notifier new Segment Listener Notifier segment Completion Listener supplier set Consumer listener Notifier else listener Notifier null Key Tracking Consumer Object results new Key Tracking Consumer key Partitioner segment Info get Num Segments iterator Operation wrap Consumer consumer iterator Operation get Function listener Notifier Thread thread Thread current Thread executor execute try log tracef Thread s submitted iterator request for stream thread Set Integer segments To Process segments To Filter null new Range Set segment Info get Num Segments segments To Filter do Localized Cache Topology cache Topology dm get Cache Topology Consistent Hash ch cache Topology get Read Consistent Hash boolean run Local ch get Members contains local Address Set Integer segments Set Object excluded Keys boolean stay Local false if run Local Set Integer segments For Owner ch get Segments For Owner local Address If we own all of the segments locally even as backup we do n t want the iterator to go remotely stay Local segments For Owner contains All segments To Process if stay Local segments segments To Process else segments ch get Primary Segments For Owner local Address stream filter segments To Process contains collect Collectors to Set excluded Keys segments stream flat Map s results reference Array get s stream collect Collectors to Set else segments null excluded Keys Collections empty Set Key Tracking Terminal Operation Object Object op iterator Operation get Operation intermediate Operations supplier For Segments ch segments To Process excluded Keys stay Local distributed Batch Size if stay Local Object id csm remote Stream Operation Rehash Aware iterator Parallel Distribute parallel ch segments To Process keys To Filter new Atomic Reference Array To Map results reference Array include Loader op results if id null supplier pending id try if run Local perform Local Rehash Aware Operation results segments To Process ch segments op ch get Primary Segments For Owner local Address id if id null try if csm await Completion id timeout timeout Unit throw new Timeout Exception catch Interrupted Exception e throw new Cache Exception e segments To Process segments To Process supplier results segments To Process id cache Topology get Topology Id finally csm forget Operation id else perform Local Rehash Aware Operation results segments To Process ch segments op ch get Segments For Owner local Address null segments To Process segments To Process supplier results segments To Process null cache Topology get Topology Id while complete get catch Cache Exception e log trace Encountered local cache exception for stream e supplier close e catch Throwable t log trace Encountered local throwable for stream t supplier close new Cache Exception t private Set Integer segments To Process Iterator Supplier supplier Key Tracking Consumer Object results Set Integer segments To Process Object id int topology Id String str Id id null local id to String if results lost Segments is Empty segments To Process new Hash Set results lost Segments results lost Segments clear log tracef Found s lost segments for s segments To Process str Id if results requires Next Topology try state Transfer Lock wait For Topology topology Id timeout timeout Unit catch Interrupted Exception java util concurrent Timeout Exception e throw new Cache Exception e else supplier close log tracef Finished rehash aware operation for s str Id return segments To Process private void perform Local Rehash Aware Operation Key Tracking Consumer Object results Set Integer segments To Process Consistent Hash ch Set Integer segments Key Tracking Terminal Operation Object Object op Supplier Set Integer owned Segments Supplier Object id Collection Cache Entry Object Object local Value op perform Operation Rehash Aware results we can do this more efficiently this hampers performance during rehash if dm get Read Consistent Hash equals ch log tracef Found local values s for id s local Value size id results on Completion null segments local Value else Set Integer our Segments owned Segments Supplier get Set Integer lost Segments our Segments stream filter segments To Process contains collect Collectors to Set log tracef changed making s segments suspect for identifier s lost Segments id results on Segments Lost lost Segments static class Hand Off Consumer implements Consumer private final Blocking Queue queue private final Atomic Boolean completed private final Lock next Lock private final Condition next Condition Hand Off Consumer Blocking Queue queue Atomic Boolean completed Lock next Lock Condition next Condition this queue queue this completed completed this next Lock next Lock this next Condition next Condition Override public void accept rs we do n t awake people if they are waiting until we fill up the queue or process retrieves all values is this the reason for slowdown if queue offer rs if completed get Signal anyone waiting for values to consume from the queue next Lock lock try next Condition signal All finally next Lock unlock while completed get We keep trying to offer the value until it takes it In this case we check the completed after each time to make sure the iterator was n t closed early try if queue offer rs Time Unit break catch Interrupted Exception e throw new Cache Exception e static class Segment Listener Notifier implements Consumer private final Segment Completion Listener listener we know the objects will always be private final Map Set Integer segments By Object new Identity Hash Map Segment Listener Notifier Segment Completion Listener listener this listener listener Override public void accept t Set Integer segments segments By Object remove t if segments null listener segment Completed segments public void add Segments For Object object Set Integer segments segments By Object put object segments public void complete Segments No Results Set Integer segments listener segment Completed segments static class Iterator Supplier implements Closeable Supplier private final Blocking Queue queue private final Atomic Boolean completed private final Lock next Lock private final Condition next Condition private final Cluster Stream Manager cluster Stream Manager Cache Exception exception volatile Object pending private Consumer consumer Iterator Supplier Blocking Queue queue Atomic Boolean completed Lock next Lock Condition next Condition Cluster Stream Manager cluster Stream Manager this queue queue this completed completed this next Lock next Lock this next Condition next Condition this cluster Stream Manager cluster Stream Manager Override public void close close null public void close Cache Exception e next Lock lock try if completed get And Set true if e null exception e if pending null cluster Stream Manager forget Operation pending pending null next Condition signal All finally next Lock unlock Override public get entry queue poll if entry null if completed get if exception null throw exception else if entry queue poll null We check the queue one last time to make sure we did n t have a concurrent queue addition and completed iterator if consumer null consumer accept entry return entry return null next Lock lock try boolean interrupted false while completed get We should check to make sure nothing was added to the queue as well before sleeping if entry queue poll null break try next Condition await Time Unit catch Interrupted Exception e If interrupted we just loop back around interrupted true if entry null If there is no entry and we are completed check one last time if there are entries in the queue It is possible for entries to be added to the queue and the iterator completed at the same time Completed is a sign of either things all entries have been retrieved what this case is for an exception has been found in processing or the user has manually closed the iterator In the latter cases no additional entries are added to the queue since processing is stopped therefore we can just process the rest of the elements in the queue with no worry entry queue poll if entry null if exception null throw exception return null else if interrupted Now reset the interrupt state before returning Thread current Thread interrupt finally next Lock unlock if consumer null consumer accept entry return entry public void set Consumer Consumer consumer this consumer consumer Override public Spliterator spliterator return Spliterators spliterator iterator Long Spliterator Override public void for Each Consumer super action if rehash Aware perform Operation Terminal Functions for Each Function action false v v null null else perform Rehash Key Tracking Operation s new For Each Operation Object intermediate Operations s distributed Batch Size action Override public void for Each Bi Consumer Cache super action if rehash Aware perform Operation Terminal Functions for Each Function action false v v null null else perform Rehash Key Tracking Operation s new For Each Bi Operation intermediate Operations s distributed Batch Size action Override public void for Each Ordered Consumer super action We are n t sorted so just do for Each for Each action Override public Object to Array return perform Operation Terminal Functions to Array Function false v v Object array Arrays copy Of v v length v length System arraycopy v array v length v length return array null Override public to Array Int Function generator return perform Operation Terminal Functions to Array Function generator false v v array generator apply v length v length System arraycopy v array v length System arraycopy v array v length v length return array null These are the custom added methods for cache streams Override public Cache Stream sequential Distribution parallel Distribution false return this Override public Cache Stream parallel Distribution parallel Distribution true return this Override public Cache Stream filter Key Segments Set Integer segments segments To Filter segments return this Override public Cache Stream filter Keys Set keys keys To Filter keys return this Override public Cache Stream distributed Batch Size int batch Size distributed Batch Size batch Size return this Override public Cache Stream segment Completion Listener Segment Completion Listener listener if segment Completion Listener null segment Completion Listener listener else segment Completion Listener compose With Exceptions segment Completion Listener listener return this Override public Cache Stream disable Rehash Aware rehash Aware false return this Override public Cache Stream timeout long timeout Time Unit unit if timeout throw new Illegal Argument Exception Timeout must be greater than this timeout timeout this timeout Unit unit return this protected Distributed Int Cache Stream int Cache Stream return new Distributed Int Cache Stream this protected Distributed Double Cache Stream double Cache Stream return new Distributed Double Cache Stream this protected Distributed Long Cache Stream long Cache Stream return new Distributed Long Cache Stream this 
package org infinispan interceptors distribution import static org infinispan factories Known Component Names import java util Iterator import java util Map import java util Spliterator import java util concurrent Executor import java util concurrent Time Unit import java util function Supplier import org infinispan Advanced Cache import org infinispan Cache import org infinispan Cache Set import org infinispan Cache Stream import org infinispan cache impl Caches import org infinispan commands Flag Affected Command import org infinispan commands read Abstract Closeable Iterator Collection import org infinispan commands read Entry Set Command import org infinispan commands read Key Set Command import org infinispan commons util Closeable Iterator import org infinispan commons util Closeable Iterator Mapper import org infinispan commons util Closeable Spliterator import org infinispan commons util Closeables import org infinispan commons util Removable Closeable Iterator import org infinispan commons util Removable Iterator import org infinispan container entries Cache Entry import org infinispan context Flag import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan context impl Local Tx Invocation Context import org infinispan distribution Distribution Manager import org infinispan factories Component Registry import org infinispan factories annotations Inject import org infinispan interceptors Async Interceptor import org infinispan stream Stream Marshalling import org infinispan stream impl Cluster Stream Manager import org infinispan stream impl Distributed Cache Stream import org infinispan stream impl intops Intermediate Operation import org infinispan stream impl intops object Map Operation import org infinispan stream impl tx Tx Cluster Stream Manager import org infinispan stream impl tx Tx Distributed Cache Stream import org infinispan util Entry Wrapper import org infinispan util function Removable Function Interceptor that handles bulk entry Set and key Set commands when using in a distributed replicated environment This interceptor produces backing collections for either method and a distributed stream for either which leverages distributed processing through the cluster param The key type of entries param The value type of entries public class Distribution Bulk Interceptor extends Async Interceptor private Cache cache Inject public void inject Cache cache this cache cache Override public Object visit Entry Set Command Invocation Context ctx Entry Set Command command throws Throwable return invoke Next Then Apply ctx command r Ctx r Command rv Entry Set Command entry Set Command Entry Set Command r Command if entry Set Command has Any Flag Flag Bit Sets return rv Cache Set Cache Entry entry Set Cache Set Cache Entry rv if r Ctx is In Tx Scope entry Set new Tx Backing Entry Set Caches get Cache With Flags cache entry Set Command entry Set entry Set Command Local Tx Invocation Context r Ctx else entry Set new Backing Entry Set Caches get Cache With Flags cache entry Set Command entry Set entry Set Command return entry Set protected static Supplier Cache Stream Cache Entry supplier Cache cache Supplier Cache Stream Cache Entry stream Supplier if cache get Cache Configuration clustering cache Mode is Scattered ignore tombstones return stream Supplier get filter entry entry get Value null else return stream Supplier protected static class Backing Entry Set extends Abstract Closeable Iterator Collection Cache Entry implements Cache Set Cache Entry protected final Cache Set Cache Entry entry Set protected final Flag Affected Command command private Backing Entry Set Cache cache Cache Set Cache Entry entry Set Flag Affected Command command super cache this entry Set entry Set this command command Override public Closeable Iterator Cache Entry iterator return new Closeable Iterator Mapper new Removable Closeable Iterator Closeables iterator stream e cache remove e get Key e get Value e new Entry Wrapper cache e Override public Closeable Spliterator Cache Entry spliterator return Closeables spliterator stream Override public boolean contains Object o Map Entry entry to Entry o if entry null value cache get entry get Key return value null value equals entry get Value return false Override public boolean remove Object o Map Entry entry to Entry o if entry null return cache remove entry get Key entry get Value return false private Map Entry to Entry Object obj if obj instanceof Map Entry return Map Entry obj else return null Override public Cache Stream Cache Entry stream Advanced Cache advanced Cache cache get Advanced Cache Component Registry registry advanced Cache get Component Registry Cache Stream Cache Entry cache Stream new Distributed Cache Stream Cache Entry cache get Cache Manager get Address false advanced Cache get Distribution Manager supplier cache entry Set stream registry get Component Cluster Stream Manager class command has Any Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry Override public Iterator Cache Entry iterator int size intermediate Operations size if size If no intermediate operations we can support remove return new Removable Iterator super iterator e cache remove e get Key e get Value else if size Intermediate Operation int Op intermediate Operations peek if int Op instanceof Map Operation Map Operation map Map Operation int Op if map get Function instanceof Removable Function If function was removable means we can just use remove as is return new Removable Iterator super iterator e cache remove e get Key e get Value return super iterator return apply Time Out cache Stream cache Override public Cache Stream Cache Entry parallel Stream Advanced Cache advanced Cache cache get Advanced Cache Component Registry registry advanced Cache get Component Registry Cache Stream Cache Entry cache Stream new Distributed Cache Stream cache get Cache Manager get Address true advanced Cache get Distribution Manager supplier cache entry Set parallel Stream registry get Component Cluster Stream Manager class command has Any Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry return apply Time Out cache Stream cache protected static class Tx Backing Entry Set extends Backing Entry Set private final Local Tx Invocation Context ctx private Tx Backing Entry Set Cache cache Cache Set Cache Entry entry Set Flag Affected Command command Local Tx Invocation Context ctx super cache entry Set command this ctx ctx Override public Cache Stream Cache Entry stream Advanced Cache advanced Cache cache get Advanced Cache Distribution Manager dm advanced Cache get Distribution Manager Component Registry registry advanced Cache get Component Registry Cluster Stream Manager real Manager registry get Component Cluster Stream Manager class Tx Cluster Stream Manager tx Manager new Tx Cluster Stream Manager real Manager ctx dm get Write Consistent Hash Cache Stream Cache Entry cache Stream new Tx Distributed Cache Stream cache get Cache Manager get Address false dm entry Set stream tx Manager command has Any Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry ctx return apply Time Out cache Stream cache Override public Cache Stream Cache Entry parallel Stream Advanced Cache advanced Cache cache get Advanced Cache Distribution Manager dm advanced Cache get Distribution Manager Component Registry registry advanced Cache get Component Registry Cluster Stream Manager real Manager registry get Component Cluster Stream Manager class Tx Cluster Stream Manager tx Manager new Tx Cluster Stream Manager real Manager ctx dm get Write Consistent Hash Cache Stream Cache Entry cache Stream new Tx Distributed Cache Stream cache get Cache Manager get Address true dm entry Set parallel Stream tx Manager command has Any Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry ctx return apply Time Out cache Stream cache private static Cache Stream apply Time Out Cache Stream stream Cache cache return stream timeout cache get Cache Configuration clustering remote Timeout Time Unit Override public Object visit Key Set Command Invocation Context ctx Key Set Command command throws Throwable Cache Set key Set if command has Any Flag Flag Bit Sets return invoke Next ctx command if ctx is In Tx Scope key Set new Tx Backing Key Set Caches get Cache With Flags cache command cache get Advanced Cache with Flags Flag cache Entry Set command Local Tx Invocation Context ctx else key Set new Backing Key Set Caches get Cache With Flags cache command cache get Advanced Cache with Flags Flag cache Entry Set command return key Set protected static class Backing Key Set extends Abstract Closeable Iterator Collection implements Cache Set protected final Cache Set Cache Entry entry Set protected final Flag Affected Command command public Backing Key Set Cache cache Cache Set Cache Entry entry Set Flag Affected Command command super cache this entry Set entry Set this command command Override public Closeable Iterator iterator return new Removable Closeable Iterator Closeables iterator stream cache remove Override public boolean contains Object o return cache contains Key o Override public boolean remove Object o return cache remove o null Override public Closeable Spliterator spliterator return Closeables spliterator iterator Long Spliterator Spliterator Spliterator Override public Cache Stream stream Advanced Cache advanced Cache cache get Advanced Cache Component Registry registry advanced Cache get Component Registry return new Distributed Cache Stream cache get Cache Manager get Address false advanced Cache get Distribution Manager supplier cache entry Set stream registry get Component Cluster Stream Manager class command has Any Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry Stream Marshalling entry To Key Function Override public Iterator iterator int size intermediate Operations size The act of mapping to key requires intermediate operation if size return new Removable Iterator super iterator cache remove else if size Iterator Intermediate Operation iter intermediate Operations iterator iter next Intermediate Operation int Op iter next if int Op instanceof Map Operation Map Operation map Map Operation int Op if map get Function instanceof Removable Function If function was removable means we can just use remove as is return new Removable Iterator super iterator cache remove return super iterator Override public Cache Stream parallel Stream Advanced Cache advanced Cache cache get Advanced Cache Component Registry registry advanced Cache get Component Registry return new Distributed Cache Stream cache get Cache Manager get Address true advanced Cache get Distribution Manager supplier cache entry Set parallel Stream registry get Component Cluster Stream Manager class command has Any Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry Stream Marshalling entry To Key Function private static class Tx Backing Key Set extends Backing Key Set private final Local Tx Invocation Context ctx public Tx Backing Key Set Cache cache Cache Set Cache Entry entry Set Flag Affected Command command Local Tx Invocation Context ctx super cache entry Set command this ctx ctx Override public Cache Stream stream Advanced Cache advanced Cache cache get Advanced Cache Distribution Manager dm advanced Cache get Distribution Manager Component Registry registry advanced Cache get Component Registry Cluster Stream Manager real Manager registry get Component Cluster Stream Manager class Tx Cluster Stream Manager tx Manager new Tx Cluster Stream Manager real Manager ctx dm get Write Consistent Hash return new Tx Distributed Cache Stream cache get Cache Manager get Address false dm entry Set stream tx Manager command has Any Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry Stream Marshalling entry To Key Function ctx Override public Cache Stream parallel Stream Advanced Cache advanced Cache cache get Advanced Cache Distribution Manager dm advanced Cache get Distribution Manager Component Registry registry advanced Cache get Component Registry Cluster Stream Manager real Manager registry get Component Cluster Stream Manager class Tx Cluster Stream Manager tx Manager new Tx Cluster Stream Manager real Manager ctx dm get Write Consistent Hash return new Tx Distributed Cache Stream cache get Cache Manager get Address true dm entry Set parallel Stream tx Manager command has Any Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry Stream Marshalling entry To Key Function ctx 
package org infinispan factories import org infinispan distribution Distribution Manager import org infinispan distribution impl Distribution Manager Impl import org infinispan factories annotations Default Factory For Default Factory For classes Distribution Manager class public class Distribution Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override Suppress Warnings unchecked public construct Class component Type if configuration clustering cache Mode is Clustered return new Distribution Manager Impl else return null 
package org infinispan distribution impl import java util Collection import java util Hash Set import java util List import java util Set import java util stream Collectors import org infinispan configuration cache Cache Mode import org infinispan configuration cache Configuration import org infinispan distribution Data Locality import org infinispan distribution Distribution Info import org infinispan distribution Distribution Manager import org infinispan distribution Localized Cache Topology import org infinispan distribution ch Consistent Hash import org infinispan distribution ch Key Partitioner import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Operation import org infinispan jmx annotations Parameter import org infinispan remoting transport Address import org infinispan remoting transport Local Mode Address import org infinispan remoting transport Transport import org infinispan topology Cache Topology import org infinispan util logging Log import org infinispan util logging Log Factory The default distribution manager implementation author Manik Surtani author Vladimir Blagojevic author Mircea Markus jboss com author Bela Ban author Dan Berindei dan infinispan org author anistor redhat com since Bean object Name Distribution Manager description Component that handles distribution of content across a cluster public class Distribution Manager Impl implements Distribution Manager private static final Log log Log Factory get Log Distribution Manager Impl class private static final boolean trace log is Trace Enabled Injected components private Transport transport private Key Partitioner key Partitioner private Cache Mode cache Mode private volatile Localized Cache Topology extended Topology Default constructor public Distribution Manager Impl Inject public void init Transport transport Configuration configuration Key Partitioner key Partitioner this transport transport this key Partitioner key Partitioner this cache Mode configuration clustering cache Mode Start before Rpc Manager Impl Start priority Suppress Warnings unused private void start throws Exception if trace log tracef starting distribution manager on s get Address We need an extended topology for preload before the start of State Transfer Manager Impl Address local Address transport null Local Mode Address transport get Address extended Topology Localized Cache Topology make Singleton Topology cache Mode local Address private Address get Address return transport get Address Override public Data Locality get Locality Object key Localized Cache Topology info this extended Topology if info null return Data Locality Distribution Info segment Info info get Distribution key if segment Info is Read Owner return Data Locality else if segment Info is Write Owner return Data Locality else return Data Locality Override public List Address locate Object key return extended Topology get Distribution key write Owners Override public Address get Primary Location Object key return extended Topology get Distribution key primary Override public Set Address locate All Collection Object keys Collection Address owners extended Topology get Write Owners keys return new Hash Set owners Override public Consistent Hash get Read Consistent Hash return extended Topology get Read Consistent Hash Override public Consistent Hash get Write Consistent Hash return extended Topology get Write Consistent Hash Override Managed Operation description Determines whether a given key is affected by an ongoing rehash if any display Name Could key be affected by rehash public boolean is Affected By Rehash Parameter name key description Key to check Object key if is Rehash In Progress return false int segment key Partitioner get Segment key Distribution Info distribution Info this extended Topology get Distribution segment return distribution Info is Write Owner distribution Info is Read Owner Tests whether a rehash is in progress return true if a rehash is in progress false otherwise Override public boolean is Rehash In Progress return extended Topology get Pending null Override public boolean is Join Complete return extended Topology null Managed Operation description Tells you whether a given key would be written to this instance of the cache according to the consistent hashing algorithm Only works with String keys display Name Is key local public boolean is Located Locally Parameter name key description Key to query String key return get Cache Topology is Write Owner key Managed Operation description Shows the addresses of the nodes where a write operation would store the entry associated with the specified key Only works with String keys display Name Locate key public List String locate Key Parameter name key description Key to locate String key List Address addresses get Cache Topology get Distribution key write Owners return addresses stream map Address to String collect Collectors to List Override public Localized Cache Topology get Cache Topology return this extended Topology Override public void set Cache Topology Cache Topology cache Topology this extended Topology create Localized Cache Topology cache Topology Override public Localized Cache Topology create Localized Cache Topology Cache Topology cache Topology return new Localized Cache Topology cache Mode cache Topology key Partitioner transport get Address 
package org infinispan transaction xa import java io Exception import java io Object Input import java io Object Output import java util Collection import java util Collections import java util Objects import java util Set import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan remoting transport Address import org infinispan util logging Log import org infinispan util logging Log Factory This class is used when deadlock detection is enabled author Mircea Markus jboss com deprecated Since no longer used Deprecated public class Dld Global Transaction extends Global Transaction private static final Log log Log Factory get Log Dld Global Transaction class private static final boolean trace log is Trace Enabled private volatile long coin Toss private transient volatile Collection Object lock Intention Collections empty Set private volatile Collection remote Lock Intention Collections empty Set protected volatile Collection locks At Origin Collections empty Set public Dld Global Transaction public Dld Global Transaction Address addr boolean remote super addr remote Sets the random number that defines the coin toss coin toss is a random number that is used when a deadlock is detected for deciding which transaction should commit and which should rollback public void set Coin Toss long coin Toss this coin Toss coin Toss public long get Coin Toss return coin Toss Override public boolean equals Object o if this o return true if o instanceof Dld Global Transaction return false if super equals o return false Dld Global Transaction that Dld Global Transaction o if coin Toss that coin Toss return false return true Override public int hash Code int result super hash Code result result int coin Toss coin Toss return result Override public String to String return super to String dld coin Toss Returns the key this transaction intends to lock public Collection Object get Lock Intention return lock Intention public void set Lock Intention Collection Object lock Intention Objects require Non Null lock Intention Local lock Intention must be non null if trace log tracef Setting local lock intention to s lock Intention this lock Intention lock Intention public boolean would Lose Dld Global Transaction other return this coin Toss other coin Toss public void set Remote Lock Intention Collection remote Lock Intention Objects require Non Null lock Intention Remote lock intention must be non null if trace log tracef Setting the remote lock intention s remote Lock Intention this remote Lock Intention remote Lock Intention public Collection get Remote Lock Intention return remote Lock Intention public boolean has Any Lock At Origin Dld Global Transaction other Tx if trace log tracef Our s locks at origin are s Others remote lock intention is s this locks At Origin other Tx get Remote Lock Intention for Object key other Tx get Remote Lock Intention if this locks At Origin contains key return true return false public void set Locks Held At Origin Collection locks At Origin Objects require Non Null locks At Origin Locks at origin must be non null if trace log tracef Setting locks at origin for s to s this locks At Origin this locks At Origin locks At Origin public Collection get Locks Held At Origin return this locks At Origin Deprecated public static class Externalizer extends Global Transaction Abstract Global Tx Externalizer Dld Global Transaction Override protected Dld Global Transaction create Global Transaction return new Dld Global Transaction Override public void write Object Object Output output Dld Global Transaction dd Gt throws Exception super write Object output dd Gt output write Long dd Gt get Coin Toss if dd Gt locks At Origin is Empty output write Object null else output write Object dd Gt locks At Origin Override Suppress Warnings unchecked public Dld Global Transaction read Object Object Input input throws Exception Class Not Found Exception Dld Global Transaction dd Gt super read Object input dd Gt set Coin Toss input read Long Object locks At Origin Obj input read Object if locks At Origin Obj null dd Gt set Locks Held At Origin Collections empty Set else dd Gt set Locks Held At Origin Set Object locks At Origin Obj return dd Gt Override public Integer get Id return Ids Override public Set Class extends Dld Global Transaction get Type Classes return Util Class extends Dld Global Transaction as Set Dld Global Transaction class 
package org infinispan counter configuration import java util Hash Map import java util Map author Pedro Ruivo since public enum Element must be first null counters lower bound strong counter upper bound weak counter private static final Map String Element static final Map String Element map new Hash Map for Element element values final String name element name if name null map put name element map private final String name Element final String name this name name public static Element for Name final String local Name final Element element get local Name return element null element Override public String to String return name 
package org infinispan factories import org infinispan commands Cancellation Service import org infinispan commands Cancellation Service Impl import org infinispan commands Remote Commands Factory import org infinispan commons Cache Configuration Exception import org infinispan container offheap Off Heap Entry Factory import org infinispan container offheap Off Heap Entry Factory Impl import org infinispan container offheap Off Heap Memory Allocator import org infinispan container offheap Unpooled Off Heap Memory Allocator import org infinispan factories annotations Default Factory For import org infinispan factories scopes Scope import org infinispan factories scopes Scopes import org infinispan remoting inboundhandler Global Inbound Invocation Handler import org infinispan remoting inboundhandler Inbound Invocation Handler import org infinispan topology Persistent Manager import org infinispan topology Persistent Manager Impl import org infinispan util Default Time Service import org infinispan util Time Service import org infinispan util logging events Event Log Manager import org infinispan util logging events impl Event Log Manager Impl import org infinispan xsite Backup Receiver Repository import org infinispan xsite Backup Receiver Repository Impl Factory for building global scope components which have default empty constructors author Manik Surtani author a href mailto galder zamarreno jboss com Galder Zamarreno a since Default Factory For classes Backup Receiver Repository class Cancellation Service class Event Log Manager class Inbound Invocation Handler class Persistent Manager class Remote Commands Factory class Time Service class Off Heap Entry Factory class Off Heap Memory Allocator class Scope Scopes public class Empty Constructor Factory extends Abstract Component Factory implements Auto Instantiable Factory Override Suppress Warnings unchecked public construct Class component Type if component Type equals Backup Receiver Repository class return new Backup Receiver Repository Impl else if component Type equals Cancellation Service class return new Cancellation Service Impl else if component Type equals Inbound Invocation Handler class return new Global Inbound Invocation Handler else if component Type equals Remote Commands Factory class return new Remote Commands Factory else if component Type equals Time Service class return new Default Time Service else if component Type equals Event Log Manager class return new Event Log Manager Impl else if component Type equals Persistent Manager class return new Persistent Manager Impl else if component Type equals Off Heap Entry Factory class return component Type cast new Off Heap Entry Factory Impl else if component Type equals Off Heap Memory Allocator class return component Type cast new Unpooled Off Heap Memory Allocator throw new Cache Configuration Exception Do n t know how to create a component Type get Name 
package org infinispan factories import static org infinispan commons util Util get Instance import org infinispan batch Batch Container import org infinispan cache impl Cache Configuration Bean import org infinispan commands Commands Factory import org infinispan commands Commands Factory Impl import org infinispan commons Cache Configuration Exception import org infinispan commons io Byte Buffer Factory import org infinispan commons io Byte Buffer Factory Impl import org infinispan configuration cache Cache Mode import org infinispan context Invocation Context Factory import org infinispan context Non Transactional Invocation Context Factory import org infinispan context Transactional Invocation Context Factory import org infinispan distribution Manager import org infinispan distribution Remote Value Retrieved Listener import org infinispan distribution Triangle Order Manager import org infinispan distribution impl Manager Impl import org infinispan eviction Activation Manager import org infinispan eviction Eviction Manager import org infinispan eviction Passivation Manager import org infinispan eviction impl Activation Manager Impl import org infinispan eviction impl Eviction Manager Impl import org infinispan eviction impl Passivation Manager Impl import org infinispan factories annotations Default Factory For import org infinispan functional impl Functional Notifier import org infinispan functional impl Functional Notifier Impl import org infinispan interceptors locking Clustering Dependent Logic import org infinispan marshall core Marshalled Entry Factory import org infinispan marshall core Marshalled Entry Factory Impl import org infinispan notifications cachelistener Cache Notifier import org infinispan notifications cachelistener Cache Notifier Impl import org infinispan notifications cachelistener cluster Cluster Cache Notifier import org infinispan persistence manager Ordered Updates Manager import org infinispan persistence manager Ordered Updates Manager Impl import org infinispan persistence manager Persistence Manager import org infinispan persistence manager Persistence Manager Impl import org infinispan scattered Scattered Version Manager import org infinispan scattered impl Scattered Version Manager Impl import org infinispan statetransfer Commit Manager import org infinispan statetransfer State Transfer Lock import org infinispan statetransfer State Transfer Lock Impl import org infinispan transaction impl Clustered Transaction Originator Checker import org infinispan transaction impl Transaction Coordinator import org infinispan transaction impl Transaction Originator Checker import org infinispan transaction totalorder Total Order Manager import org infinispan transaction xa Transaction Factory import org infinispan transaction xa recovery Recovery Admin Operations import org infinispan util concurrent Command Ack Collector import org infinispan xsite Backup Sender import org infinispan xsite Backup Sender Impl import org infinispan xsite statetransfer Site State Consumer import org infinispan xsite statetransfer Site State Consumer Impl import org infinispan xsite statetransfer Site State Provider import org infinispan xsite statetransfer Site State Provider Impl import org infinispan xsite statetransfer Site State Transfer Manager import org infinispan xsite statetransfer Site State Transfer Manager Impl Simple factory that just uses reflection and an empty constructor of the component type author Manik Surtani a href mailto manik jboss org manik jboss org a author Pedro Ruivo since Default Factory For classes Cache Notifier class Cache Configuration Bean class Cluster Cache Notifier class Commands Factory class Persistence Manager class Passivation Manager class Activation Manager class Batch Container class Eviction Manager class Transaction Coordinator class Recovery Admin Operations class State Transfer Lock class Clustering Dependent Logic class Manager class Transaction Factory class Backup Sender class Total Order Manager class Byte Buffer Factory class Marshalled Entry Factory class Remote Value Retrieved Listener class Invocation Context Factory class Commit Manager class Site State Transfer Manager class Site State Consumer class Site State Provider class Functional Notifier class Command Ack Collector class Triangle Order Manager class Ordered Updates Manager class Scattered Version Manager class Transaction Originator Checker class public class Empty Constructor Named Cache Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override Suppress Warnings unchecked public construct Class component Type Class component Impl if component Type equals Clustering Dependent Logic class Cache Mode cache Mode configuration clustering cache Mode if cache Mode is Clustered return component Type cast new Clustering Dependent Logic Local Logic else if cache Mode is Invalidation return component Type cast new Clustering Dependent Logic Invalidation Logic else if cache Mode is Replicated return component Type cast new Clustering Dependent Logic Replication Logic else if cache Mode is Distributed return component Type cast new Clustering Dependent Logic Distribution Logic else if cache Mode is Scattered return component Type cast new Clustering Dependent Logic Scattered Logic else throw new Unsupported Operation Exception else boolean is Transactional configuration transaction transaction Mode is Transactional if component Type equals Invocation Context Factory class component Impl is Transactional Transactional Invocation Context Factory class Non Transactional Invocation Context Factory class return component Type cast get Instance component Impl else if component Type equals Cache Notifier class return new Cache Notifier Impl else if component Type equals Cache Configuration Bean class return new Cache Configuration Bean else if component Type equals Commands Factory class return new Commands Factory Impl else if component Type equals Persistence Manager class return new Persistence Manager Impl else if component Type equals Passivation Manager class return new Passivation Manager Impl else if component Type equals Activation Manager class return new Activation Manager Impl else if component Type equals Batch Container class return new Batch Container else if component Type equals Transaction Coordinator class return new Transaction Coordinator else if component Type equals Recovery Admin Operations class return new Recovery Admin Operations else if component Type equals State Transfer Lock class return new State Transfer Lock Impl else if component Type equals Eviction Manager class return new Eviction Manager Impl else if component Type equals Manager class return new Manager Impl else if component Type equals Transaction Factory class return new Transaction Factory else if component Type equals Backup Sender class return new Backup Sender Impl global Configuration sites local Site else if component Type equals Total Order Manager class return is Transactional configuration transaction transaction Protocol is Total Order new Total Order Manager null else if component Type equals Byte Buffer Factory class return new Byte Buffer Factory Impl else if component Type equals Marshalled Entry Factory class return new Marshalled Entry Factory Impl else if component Type equals Remote Value Retrieved Listener class Manager is currently only listener for remotely retrieved values return component Registry get Component Manager class else if component Type equals Cluster Cache Notifier class return component Registry get Component Cache Notifier class else if component Type equals Commit Manager class return new Commit Manager else if component Type equals Site State Transfer Manager class return configuration sites all Backups is Empty null new Site State Transfer Manager Impl else if component Type equals Site State Consumer class return new Site State Consumer Impl else if component Type equals Site State Provider class return new Site State Provider Impl else if component Type equals Functional Notifier class return new Functional Notifier Impl else if component Type equals Command Ack Collector class return component Type cast new Command Ack Collector else if component Type equals Triangle Order Manager class return component Type cast new Triangle Order Manager configuration clustering hash num Segments else if component Type equals Ordered Updates Manager class return component Type cast new Ordered Updates Manager Impl else if component Type equals Scattered Version Manager class return component Type cast new Scattered Version Manager Impl else if component Type equals Transaction Originator Checker class return configuration clustering cache Mode Cache Mode component Type cast Transaction Originator Checker component Type cast new Clustered Transaction Originator Checker throw new Cache Configuration Exception Do n t know how to create a component Type get Name 
package org infinispan persistence jpa impl import java util Hash Map import java util Map import java util Map Entry import java util concurrent atomic Atomic Integer import javax persistence Entity Manager Factory import javax persistence Persistence import javax persistence spi Persistence Provider import org infinispan commons util Util import org infinispan util logging Log import org infinispan util logging Log Factory import org osgi framework Bundle import org osgi framework Bundle Context import org osgi framework Framework Util import org osgi framework Service Reference author a href mailto rtsang redhat com Ray Tsang a public class Entity Manager Factory Registry private static final Log log Log Factory get Log Entity Manager Factory Registry class private Map String Entity Manager Factory registry new Hash Map String Entity Manager Factory private Map String Atomic Integer usage new Hash Map String Atomic Integer public Entity Manager Factory get Entity Manager Factory String persistence Unit Name synchronized this if registry contains Key persistence Unit Name Entity Manager Factory emf create Entity Manager Factory persistence Unit Name registry put persistence Unit Name emf usage put persistence Unit Name new Atomic Integer return emf else increment Usage persistence Unit Name return registry get persistence Unit Name public void close Entity Manager Factory String persistence Unit Name synchronized this if registry contains Key persistence Unit Name return int count decrement Usage persistence Unit Name if count Entity Manager Factory emf registry remove persistence Unit Name try if emf is Open emf close catch Illegal State Exception e log warn Entity manager factory was already closed persistence Unit Name public void close All synchronized this for Entry String Entity Manager Factory entry registry entry Set try if entry get Value is Open entry get Value close catch Illegal State Exception e log warn Entity manager factory was already closed entry get Key protected int increment Usage String persistence Unit Name synchronized this return usage get persistence Unit Name increment And Get protected int decrement Usage String persistence Unit Name synchronized this return usage get persistence Unit Name decrement And Get protected int get Usage String persistence Unit Name synchronized this return usage get persistence Unit Name int Value private static Entity Manager Factory create Entity Manager Factory String persistence Unit Name if Util is Gi Context Bundle this Bundle Framework Util get Bundle Entity Manager Factory Registry class Bundle Context context this Bundle get Bundle Context Service Reference service Reference context get Service Reference Persistence Provider class get Name Persistence Provider persistence Provider Persistence Provider context get Service service Reference return persistence Provider create Entity Manager Factory persistence Unit Name null else return Persistence create Entity Manager Factory persistence Unit Name 
package org infinispan container import static org infinispan commons util Util to Str import org infinispan configuration cache Configuration import org infinispan configuration cache Configurations import org infinispan container entries Cache Entry import org infinispan container entries Versioned Repeatable Read Entry import org infinispan container entries Internal Cache Entry import org infinispan container entries Entry import org infinispan container entries Null Cache Entry import org infinispan container entries Read Committed Entry import org infinispan container entries Repeatable Read Entry import org infinispan container versioning Version Generator import org infinispan context Invocation Context import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan metadata Embedded Metadata import org infinispan metadata Metadata import org infinispan util Time Service import org infinispan util concurrent Isolation Level import org infinispan util logging Log import org infinispan util logging Log Factory link Entry Factory implementation to be used for optimistic locking scheme author Mircea Markus since public class Entry Factory Impl implements Entry Factory protected static final Log log Log Factory get Log Entry Factory Impl class protected final static boolean trace log is Trace Enabled private boolean use Repeatable Read private Data Container container private boolean is Enabled private Configuration configuration private Time Service time Service private Version Generator version Generator private boolean use Versioning Inject public void inject Dependencies Data Container data Container Configuration configuration Time Service time Service Version Generator version Generator this container data Container this configuration configuration this time Service time Service this version Generator version Generator Start priority public void init Scattered mode needs repeatable read entries to properly retry half committed multi key operations see Retrying Entry Wrapping Interceptor for details use Repeatable Read configuration transaction transaction Mode is Transactional configuration locking isolation Level Isolation Level configuration clustering cache Mode is Scattered is Enabled configuration clustering l enabled Write skew check implies isolation level locking mode use Versioning Configurations is Tx Versioned configuration Override public final void wrap Entry For Reading Invocation Context ctx Object key boolean is Owner if is Owner is Enabled return Cache Entry cache Entry get From Context ctx key if cache Entry null cache Entry get From Container For Read key is Owner if cache Entry null With repeatable read we need to create a Repeatable Read Entry as internal cache entries are mutable Otherwise we can store the Internal Cache Entry directly in the context if use Repeatable Read Entry mvcc Entry create Wrapped Entry key cache Entry mvcc Entry set Read cache Entry mvcc Entry ctx put Looked Up Entry key cache Entry if trace log tracef Wrap s for read Entry s to Str key cache Entry Override public void wrap Entry For Writing Invocation Context ctx Object key boolean is Owner boolean is Read Cache Entry context Entry get From Context ctx key if context Entry instanceof Entry Nothing to do already wrapped else if context Entry null Already in the context as an Internal Cache Entry Need to wrap it in a Entry Entry mvcc Entry create Wrapped Entry key context Entry ctx put Looked Up Entry key mvcc Entry if trace log tracef Updated context entry s s context Entry mvcc Entry else Not in the context yet Cache Entry cache Entry get From Container key is Owner true if cache Entry null return Entry mvcc Entry create Wrapped Entry key cache Entry if cache Entry is Null mvcc Entry set Created true if is Read mvcc Entry set Read ctx put Looked Up Entry key mvcc Entry if trace log tracef Updated context entry s s context Entry mvcc Entry Override public void wrap External Entry Invocation Context ctx Object key Cache Entry external Entry boolean is Read boolean is Write For a write operation the entry is always already wrapped For a read operation the entry may be in the context as an Internal Cache Entry as null or missing altogether Cache Entry context Entry get From Context ctx key if context Entry instanceof Entry Entry mvcc Entry Entry context Entry Already wrapped for a write Update the value and the metadata if mvcc Entry skip Lookup This can happen during get Group invocations which request the whole group from remote nodes even if some keys are already in the context if trace log tracef Ignored update for context entry s context Entry return Without updating initial value a local write skew check would fail when the entry is loaded from the cache store This should n t be called more than once since afterwards we set skip Lookup mvcc Entry set Value external Entry get Value mvcc Entry set Created external Entry get Created mvcc Entry set Last Used external Entry get Last Used mvcc Entry set Metadata external Entry get Metadata mvcc Entry update Previous Value if trace log tracef Updated context entry s context Entry else if context Entry null context Entry is Null if is Write use Repeatable Read Entry mvcc Entry create Wrapped Entry key external Entry if is Read mvcc Entry set Read ctx put Looked Up Entry key mvcc Entry if trace log tracef Updated context entry s s context Entry mvcc Entry else This is a read operation store the external entry in the context directly ctx put Looked Up Entry key external Entry if trace log tracef Updated context entry s s context Entry external Entry else if use Repeatable Read if trace log tracef Ignored update s s as we do repeatable reads context Entry external Entry else ctx put Looked Up Entry key external Entry if trace log tracef Updated context entry s s context Entry external Entry private Cache Entry get From Context Invocation Context ctx Object key final Cache Entry cache Entry ctx lookup Entry key if trace log tracef Exists in context s cache Entry return cache Entry private Cache Entry get From Container Object key boolean is Owner boolean write Operation if is Owner final Internal Cache Entry ice inner Get From Container key write Operation if trace log tracef Retrieved from container s ice if ice null return Null Cache Entry get Instance return ice else if is Enabled final Internal Cache Entry ice inner Get From Container key write Operation if trace log tracef Retrieved from container s ice if ice null ice is Entry return null return ice return null private Cache Entry get From Container For Read Object key boolean is Owner Internal Cache Entry ice container get key if trace log tracef Retrieved from container s ice if is Owner return ice null Null Cache Entry get Instance ice else return ice null ice is Entry null ice private Internal Cache Entry inner Get From Container Object key boolean write Operation Internal Cache Entry ice Write operations should not cause expiration events to occur because we will most likely overwrite the value anyways also required for remove expired to not cause infinite loop if write Operation ice container peek key if ice null ice can Expire long wall Clock Time time Service wall Clock Time if ice is Expired wall Clock Time ice null else ice touch wall Clock Time else ice container get key return ice protected Entry create Wrapped Entry Object key Cache Entry cache Entry Object value null Metadata metadata null if cache Entry null value cache Entry get Value metadata cache Entry get Metadata if trace log tracef Creating new entry for key s to Str key if use Repeatable Read Entry mvcc Entry if use Versioning if metadata null metadata new Embedded Metadata Builder version version Generator non Existing Version build mvcc Entry new Versioned Repeatable Read Entry key value metadata else mvcc Entry new Repeatable Read Entry key value metadata return mvcc Entry else return new Read Committed Entry key value metadata 
package org infinispan commands read import java util Iterator import java util Map import java util Set import java util Spliterator import org infinispan Cache import org infinispan Cache Set import org infinispan Cache Stream import org infinispan cache impl Abstract Delegating Cache import org infinispan commands Visitable Command import org infinispan commands Visitor import org infinispan commons util Closeable Iterator import org infinispan commons util Closeable Spliterator import org infinispan commons util Closeables import org infinispan commons util Enum Util import org infinispan commons util Iterator Mapper import org infinispan commons util Removable Iterator import org infinispan container Data Container import org infinispan container entries Cache Entry import org infinispan context Flag import org infinispan context Invocation Context import org infinispan distribution Distribution Manager import org infinispan distribution ch Consistent Hash import org infinispan stream impl local Entry Stream Supplier import org infinispan stream impl local Local Cache Stream import org infinispan util Data Container Remove Iterator import org infinispan util Entry Wrapper Command implementation for link java util Map entry Set functionality author Galder Zamarre o author a href http gleamynode net Trustin Lee a author William Burns since public class Entry Set Command extends Abstract Local Command implements Visitable Command private final Cache cache public Entry Set Command Cache cache long flags Bit Set set Flags Bit Set flags Bit Set cache Abstract Delegating Cache unwrap Cache cache if flags Bit Set Enum Util this cache cache get Advanced Cache with Flags Enum Util enum Array Of flags Bit Set Flag class else this cache cache Override public Object accept Visitor Invocation Context ctx Visitor visitor throws Throwable return visitor visit Entry Set Command ctx this Override public Load Type load Type throw new Unsupported Operation Exception Override public Set Cache Entry perform Invocation Context ctx throws Throwable Object lock Owner ctx get Lock Owner if ctx get Lock Owner null return new Backing Entry Set cache get Advanced Cache lock As lock Owner return new Backing Entry Set cache Override public String to String return Entry Set Command cache cache get Name static class Backing Entry Set extends Abstract Closeable Iterator Collection Cache Entry implements Cache Set Cache Entry Backing Entry Set Cache cache super cache Override public Closeable Iterator Cache Entry iterator Iterator Cache Entry iterator new Data Container Remove Iterator cache Removable Iterator Cache Entry removable Iterator new Removable Iterator iterator e cache remove e get Key e get Value return Closeables iterator new Iterator Mapper removable Iterator e new Entry Wrapper cache e Override public Closeable Spliterator Cache Entry spliterator Data Container dc cache get Advanced Cache get Data Container return Closeables spliterator Closeables iterator new Data Container Remove Iterator cache dc dc size Including Expired Spliterator Spliterator Spliterator Override public int size return cache get Advanced Cache get Data Container size Override public boolean contains Object o Map Entry entry to Entry o if entry null value cache get entry get Key return value null value equals entry get Value return false Override public boolean remove Object o Map Entry entry to Entry o return entry null cache remove entry get Key entry get Value Override public boolean add Cache Entry internal Cache Entry link Map entry Set defines no support for add or add All methods throw new Unsupported Operation Exception private Map Entry to Entry Object obj if obj instanceof Map Entry return Map Entry obj else return null private Consistent Hash get Consistent Hash Cache cache Distribution Manager dm cache get Advanced Cache get Distribution Manager if dm null return dm get Read Consistent Hash return null Override public Cache Stream Cache Entry stream return new Local Cache Stream new Entry Stream Supplier cache get Consistent Hash cache super stream false cache get Advanced Cache get Component Registry Override public Cache Stream Cache Entry parallel Stream return new Local Cache Stream new Entry Stream Supplier cache get Consistent Hash cache super stream true cache get Advanced Cache get Component Registry 
package org infinispan stream impl local import java util Bit Set import java util Objects import java util Set import java util function Supplier import java util stream Stream import org infinispan Advanced Cache import org infinispan Cache import org infinispan cache impl Abstract Delegating Cache import org infinispan commons util Closeable Iterator import org infinispan commons util Removable Closeable Iterator import org infinispan container entries Cache Entry import org infinispan context Flag import org infinispan distribution ch Consistent Hash import org infinispan util logging Log import org infinispan util logging Log Factory Stream supplier that is to be used when the underlying stream is composed by link Cache Entry instances This supplier will do the proper filtering by key based on the Cache Entry key public class Entry Stream Supplier implements Abstract Local Cache Stream Stream Supplier Cache Entry Stream Cache Entry private static final Log log Log Factory get Log Entry Stream Supplier class private static final boolean trace log is Trace Enabled private final Cache cache private final Consistent Hash hash private final Supplier Stream Cache Entry supplier public Entry Stream Supplier Cache cache Consistent Hash hash Supplier Stream Cache Entry supplier this cache cache this hash hash this supplier supplier Override public Stream Cache Entry build Stream Set Integer segments To Filter Set keys To Filter Stream Cache Entry stream if keys To Filter null if trace log tracef Applying key filtering s keys To Filter Make sure we are n t going remote to retrieve these Advanced Cache advanced Cache Abstract Delegating Cache unwrap Cache cache get Advanced Cache with Flags Flag stream keys To Filter stream map advanced Cache get Cache Entry filter Objects non Null else stream supplier get if segments To Filter null hash null if trace log tracef Applying segment filter s segments To Filter Bit Set bit Set new Bit Set hash get Num Segments segments To Filter for Each bit Set set stream stream filter k key k get Key int segment hash get Segment key boolean is Present bit Set get segment if trace log tracef Is key s present in segment d b key segment is Present return is Present return stream Override public Closeable Iterator Cache Entry removable Iterator Closeable Iterator Cache Entry real Iterator return new Removable Closeable Iterator real Iterator e cache remove e get Key e get Value 
package org infinispan interceptors impl import static org infinispan commons util Util to Str import java util Collection import java util Iterator import java util Map import java util Set import org infinispan commands Abstract Visitor import org infinispan commands Data Command import org infinispan commands Flag Affected Command import org infinispan commands Visitable Command import org infinispan commands functional Read Only Key Command import org infinispan commands functional Read Only Many Command import org infinispan commands functional Read Write Key Command import org infinispan commands functional Read Write Key Value Command import org infinispan commands functional Read Write Many Command import org infinispan commands functional Read Write Many Entries Command import org infinispan commands functional Tx Read Only Key Command import org infinispan commands functional Tx Read Only Many Command import org infinispan commands functional Write Only Key Command import org infinispan commands functional Write Only Key Value Command import org infinispan commands functional Write Only Many Command import org infinispan commands functional Write Only Many Entries Command import org infinispan commands read Abstract Data Command import org infinispan commands read Get All Command import org infinispan commands read Get Cache Entry Command import org infinispan commands read Get Key Value Command import org infinispan commands remote Get Keys In Group Command import org infinispan commands tx Commit Command import org infinispan commands tx Prepare Command import org infinispan commands write Abstract Data Write Command import org infinispan commands write Clear Command import org infinispan commands write Compute Command import org infinispan commands write Compute If Absent Command import org infinispan commands write Data Write Command import org infinispan commands write Evict Command import org infinispan commands write Invalidate Command import org infinispan commands write Invalidate Command import org infinispan commands write Put Key Value Command import org infinispan commands write Put Map Command import org infinispan commands write Remove Command import org infinispan commands write Replace Command import org infinispan commands write Write Command import org infinispan configuration cache Configurations import org infinispan container Data Container import org infinispan container Entry Factory import org infinispan container entries Cache Entry import org infinispan container entries Entry import org infinispan container versioning Entry Version import org infinispan container versioning Version Generator import org infinispan context Flag import org infinispan context Invocation Context import org infinispan context Single Key Non Tx Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan context impl Tx Invocation Context import org infinispan distribution Distribution Manager import org infinispan distribution group impl Group Filter import org infinispan distribution group impl Group Manager import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan filter Collection Key Filter import org infinispan filter Composite Key Filter import org infinispan filter Key Filter import org infinispan interceptors Async Interceptor import org infinispan interceptors Invocation Finally Action import org infinispan interceptors Invocation Success Action import org infinispan interceptors Invocation Success Function import org infinispan interceptors locking Clustering Dependent Logic import org infinispan notifications cachelistener Cache Notifier import org infinispan remoting responses Response import org infinispan statetransfer Outdated Topology Exception import org infinispan statetransfer State Consumer import org infinispan statetransfer State Transfer Lock import org infinispan statetransfer State Transfer Manager import org infinispan util concurrent Isolation Level import org infinispan util logging Log import org infinispan util logging Log Factory import org infinispan xsite statetransfer Site State Consumer Interceptor in charge with wrapping entries and add them in caller s context see Entry Factory for overview of entry wrapping author Mircea Markus author Pedro Ruivo since public class Entry Wrapping Interceptor extends Async Interceptor private Entry Factory entry Factory private Data Container Object Object data Container protected Clustering Dependent Logic cdl private Version Generator version Generator private Distribution Manager distribution Manager private final Entry Wrapping Visitor entry Wrapping Visitor new Entry Wrapping Visitor private boolean is Invalidation private boolean is Sync private State Consumer state Consumer optional private State Transfer Lock state Transfer Lock private Site State Consumer x Site State Consumer private Group Manager group Manager private Cache Notifier notifier private State Transfer Manager state Transfer Manager private boolean use Repeatable Read private boolean is Versioned private static final Log log Log Factory get Log Entry Wrapping Interceptor class private static final boolean trace log is Trace Enabled private static final long Flag Bit Sets Flag Bit Sets private boolean total Order private final Invocation Success Action data Read Return Handler r Ctx r Command rv Abstract Data Command data Command Abstract Data Command r Command if r Ctx is In Tx Scope use Repeatable Read The entry must be in the context Cache Entry cache Entry r Ctx lookup Entry data Command get Key cache Entry set Skip Lookup true if is Versioned Entry cache Entry is Read add Version Read Tx Invocation Context r Ctx cache Entry data Command get Key Entry visit notifications used to happen in the Call Interceptor We do it at the end to avoid adding another try finally block around the notifications if rv null rv instanceof Response Object value data Command instanceof Get Cache Entry Command Cache Entry rv get Value rv notifier notify Cache Entry Visited data Command get Key value true r Ctx data Command notifier notify Cache Entry Visited data Command get Key value false r Ctx data Command private final Invocation Success Action commit Entries Success Handler r Ctx r Command rv commit Context Entries r Ctx null private final Invocation Finally Action commit Entries Finally Handler this commit Entries Finally private final Invocation Success Function prepare Handler this prepare Handler protected Log get Log return log Inject public void init Entry Factory entry Factory Data Container Object Object data Container Clustering Dependent Logic cdl State Consumer state Consumer State Transfer Lock state Transfer Lock Site State Consumer x Site State Consumer Group Manager group Manager Cache Notifier notifier State Transfer Manager state Transfer Manager Version Generator version Generator Distribution Manager distribution Manager this entry Factory entry Factory this data Container data Container this cdl cdl this state Consumer state Consumer this state Transfer Lock state Transfer Lock this x Site State Consumer x Site State Consumer this group Manager group Manager this notifier notifier this state Transfer Manager state Transfer Manager this version Generator version Generator this distribution Manager distribution Manager Start public void start is Invalidation cache Configuration clustering cache Mode is Invalidation is Sync cache Configuration clustering cache Mode is Synchronous isolation level makes no sense without transactions use Repeatable Read cache Configuration transaction transaction Mode is Transactional cache Configuration locking isolation Level Isolation Level cache Configuration clustering cache Mode is Scattered is Versioned Configurations is Tx Versioned cache Configuration total Order cache Configuration transaction transaction Protocol is Total Order private boolean ignore Ownership Flag Affected Command command return state Transfer Manager null command has Any Flag Flag Bit Sets Flag Bit Sets private boolean can Read Object key return distribution Manager get Cache Topology is Read Owner key Override public Object visit Prepare Command Tx Invocation Context ctx Prepare Command command throws Throwable return wrap Entries For Prepare And Apply ctx command prepare Handler private Object prepare Handler Invocation Context ctx Visitable Command command Object rv if should Commit During Prepare Prepare Command command Tx Invocation Context ctx return invoke Next Then Accept ctx command commit Entries Success Handler else return invoke Next ctx command Override public Object visit Commit Command Tx Invocation Context ctx Commit Command command throws Throwable return invoke Next And Finally ctx command commit Entries Finally Handler Override public final Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return visit Data Read Command ctx command Override public final Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return visit Data Read Command ctx command private Object visit Data Read Command Invocation Context ctx Abstract Data Command command final Object key command get Key entry Factory wrap Entry For Reading ctx key ignore Ownership command can Read key return invoke Next Then Accept ctx command data Read Return Handler Override public Object visit Get All Command Invocation Context ctx Get All Command command throws Throwable boolean ignore Ownership ignore Ownership command for Object key command get Keys entry Factory wrap Entry For Reading ctx key ignore Ownership can Read key return invoke Next And Finally ctx command r Ctx r Command rv t Get All Command get All Command Get All Command r Command if use Repeatable Read for Object key get All Command get Keys Cache Entry cache Entry r Ctx lookup Entry key if cache Entry null Data was lost if trace log tracef t Missing entry for key else cache Entry set Skip Lookup true Entry visit notifications used to happen in the Call Interceptor instanceof check excludes the case when the command returns Unsuccessful Response if t null rv instanceof Map log tracef Notifying get All s result s command has Any Flag Flag Bit Sets rv Map Object Object map Map Object Object rv it would be nice to know if a listener was registered for this and not do the full iteration if there was no visitor listener registered if command has Any Flag Flag Bit Sets for Map Entry Object Object entry map entry Set Object value entry get Value if value null value command is Return Entries Cache Entry value get Value entry get Value notifier notify Cache Entry Visited entry get Key value true r Ctx get All Command notifier notify Cache Entry Visited entry get Key value false r Ctx get All Command Override public final Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable if command get Keys null for Object key command get Keys move this to distribution interceptors we need to try to wrap the entry to get it removed for the removal itself wrapping null would suffice but listeners need previous value entry Factory wrap Entry For Writing ctx key true false return set Skip Remote Gets And Invoke Next For Many Entries Command ctx command Override public final Object visit Clear Command Invocation Context ctx Clear Command command throws Throwable return invoke Next Then Accept ctx command r Ctx r Command rv If we are committing a Clear Command now then no keys should be written by state transfer from now on until current rebalance ends if state Consumer null state Consumer stop Applying State Clear Command r Command get Topology Id if x Site State Consumer null x Site State Consumer end State Transfer null if r Ctx is In Tx Scope Clear Command clear Command Clear Command r Command apply Changes r Ctx clear Command if trace log tracef The return value is s rv Override public Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable for Object key command get Keys move to distribution interceptors we need to try to wrap the entry to get it removed for the removal itself wrapping null would suffice but listeners need previous value entry Factory wrap Entry For Writing ctx key false false if trace log tracef Entry to be removed s to Str key return set Skip Remote Gets And Invoke Next For Many Entries Command ctx command Override public final Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable wrap Entry If Needed ctx command return set Skip Remote Gets And Invoke Next For Data Command ctx command private void wrap Entry If Needed Invocation Context ctx Abstract Data Write Command command throws Throwable if command has Any Flag Flag Bit Sets remove From Context On Retry ctx command get Key entry Factory wrap Entry For Writing ctx command get Key ignore Ownership command can Read command get Key command load Type Visitable Command Load Type private void remove From Context On Retry Invocation Context ctx Object key When originator is a backup and it becomes primary and we retry the command the context already contains the value before the command started to be executed However another modification could happen after this node became an owner so we have to force a reload With repeatable reads we can not just remove the entry from context instead of we will rely on the write skew check to do the reload comparison in the end With pessimistic locking there s no but as we have the entry locked there should n t be any modification concurrent to the retried operation therefore we do n t have to deal with this problem if use Repeatable Read Entry entry Entry ctx lookup Entry key if trace log tracef This is a retry resetting previous value in entry s entry if entry null entry reset Current Value else if trace log tracef This is a retry removing looked up entry s ctx lookup Entry key ctx remove Looked Up Entry key private void remove From Context On Retry Invocation Context ctx Collection keys if use Repeatable Read if trace log tracef This is a retry resetting previous values for s keys for Object key keys Entry entry Entry ctx lookup Entry key entry reset Current Value else ctx remove Looked Up Entries keys Override public final Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable wrap Entry If Needed ctx command return set Skip Remote Gets And Invoke Next For Data Command ctx command Override public final Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable wrap Entry If Needed ctx command return set Skip Remote Gets And Invoke Next For Data Command ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable wrap Entry If Needed ctx command return set Skip Remote Gets And Invoke Next For Data Command ctx command Override public Object visit Compute If Absent Command Invocation Context ctx Compute If Absent Command command throws Throwable wrap Entry If Needed ctx command return set Skip Remote Gets And Invoke Next For Data Command ctx command Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable boolean ignore Ownership ignore Ownership command if command has Any Flag Flag Bit Sets remove From Context On Retry ctx command get Affected Keys for Object key command get Map key Set as listeners may need the value we ll load the previous value entry Factory wrap Entry For Writing ctx key ignore Ownership can Read key command load Type Visitable Command Load Type return set Skip Remote Gets And Invoke Next For Many Entries Command ctx command Override public Object visit Evict Command Invocation Context ctx Evict Command command throws Throwable command set Flags Bit Set command get Flags Bit Set to force the wrapping return visit Remove Command ctx command Override public Object visit Get Keys In Group Command final Invocation Context ctx Get Keys In Group Command command throws Throwable if command is Group Owner final Key Filter Object key Filter new Composite Key Filter new Group Filter command get Group Name group Manager new Collection Key Filter ctx get Looked Up Entries key Set data Container execute Task key Filter o internal Cache Entry Do n t wrap tombstones into context we want to be able to eventually read these values from cache store and the filter in Cache Loader Interceptor ignores keys already in context if internal Cache Entry get Value null synchronized ctx the process can be made in multiple threads so we need to synchronize in the context entry Factory wrap External Entry ctx internal Cache Entry get Key internal Cache Entry true false We do n t make sure that all read entries have skip Lookup here since Entry Factory does that for those we have really read and there should n t be any null read entries if ctx is In Tx Scope use Repeatable Read return invoke Next Then Accept ctx command r Ctx r Command rv Tx Invocation Context tx Ctx Tx Invocation Context r Ctx for Map Entry Object Cache Entry key Entry tx Ctx get Looked Up Entries entry Set Cache Entry cache Entry key Entry get Value cache Entry set Skip Lookup true if is Versioned Entry cache Entry is Read add Version Read tx Ctx cache Entry key Entry get Key else return invoke Next ctx command Override public Object visit Read Only Key Command Invocation Context ctx Read Only Key Command command throws Throwable if command instanceof Tx Read Only Key Command Tx Read Only Key Command may apply some mutations on the entry in context so we need to always wrap it entry Factory wrap Entry For Writing ctx command get Key ignore Ownership command can Read command get Key true else entry Factory wrap Entry For Reading ctx command get Key ignore Ownership command can Read command get Key Repeatable reads are not achievable with functional commands as we do n t store the value locally and we do n t fix it on the remote node therefore the value will be able to change and identity read could return different values in the same transaction Note at this point mode is not implemented for functional commands anyway return invoke Next ctx command Override public Object visit Read Only Many Command Invocation Context ctx Read Only Many Command command throws Throwable boolean ignore Ownership ignore Ownership command if command instanceof Tx Read Only Many Command Tx Read Only Many Command may apply some mutations on the entry in context so we need to always wrap it for Object key command get Keys entry Factory wrap Entry For Writing ctx key ignore Ownership command can Read key true else for Object key command get Keys entry Factory wrap Entry For Reading ctx key ignore Ownership can Read key Repeatable reads are not achievable with functional commands see visit Read Only Key Command return invoke Next ctx command Override public Object visit Write Only Key Command Invocation Context ctx Write Only Key Command command throws Throwable wrap Entry If Needed ctx command return set Skip Remote Gets And Invoke Next For Data Command ctx command Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable wrap Entry If Needed ctx command return set Skip Remote Gets And Invoke Next For Data Command ctx command Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable wrap Entry If Needed ctx command return set Skip Remote Gets And Invoke Next For Data Command ctx command Override public Object visit Write Only Many Entries Command Invocation Context ctx Write Only Many Entries Command command throws Throwable if command has Any Flag Flag Bit Sets remove From Context On Retry ctx command get Affected Keys boolean ignore Ownership ignore Ownership command for Object key command get Entries key Set the put map never reads the keys entry Factory wrap Entry For Writing ctx key ignore Ownership can Read key false return set Skip Remote Gets And Invoke Next For Many Entries Command ctx command Override public Object visit Write Only Many Command Invocation Context ctx Write Only Many Command command throws Throwable if command has Any Flag Flag Bit Sets remove From Context On Retry ctx command get Affected Keys boolean ignore Ownership ignore Ownership command for Object key command get Affected Keys entry Factory wrap Entry For Writing ctx key ignore Ownership can Read key false return set Skip Remote Gets And Invoke Next For Many Entries Command ctx command Override public Object visit Write Only Key Value Command Invocation Context ctx Write Only Key Value Command command throws Throwable wrap Entry If Needed ctx command return set Skip Remote Gets And Invoke Next For Data Command ctx command Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable if command has Any Flag Flag Bit Sets remove From Context On Retry ctx command get Affected Keys boolean ignore Ownership ignore Ownership command for Object key command get Affected Keys entry Factory wrap Entry For Writing ctx key ignore Ownership can Read key true return set Skip Remote Gets And Invoke Next For Many Entries Command ctx command Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable if command has Any Flag Flag Bit Sets remove From Context On Retry ctx command get Affected Keys boolean ignore Ownership ignore Ownership command for Object key command get Affected Keys entry Factory wrap Entry For Writing ctx key ignore Ownership can Read key true return set Skip Remote Gets And Invoke Next For Many Entries Command ctx command protected final void commit Context Entries Invocation Context ctx Flag Affected Command command final Flag state Transfer Flag Flag Bit Sets extract State Transfer Flag ctx command if ctx instanceof Single Key Non Tx Invocation Context Single Key Non Tx Invocation Context single Key Ctx Single Key Non Tx Invocation Context ctx commit Entry If Needed ctx command single Key Ctx get Cache Entry state Transfer Flag else Set Map Entry Object Cache Entry entries ctx get Looked Up Entries entry Set Iterator Map Entry Object Cache Entry it entries iterator final Log log get Log while it has Next Map Entry Object Cache Entry e it next Cache Entry entry e get Value if commit Entry If Needed ctx command entry state Transfer Flag if trace if entry null log tracef Entry for key s is null not calling commit Update to Str e get Key else log tracef Entry for key s is not changed s not calling commit Update to Str e get Key entry protected void commit Context Entry Cache Entry entry Invocation Context ctx Flag Affected Command command Flag state Transfer Flag boolean l Invalidation cdl commit Entry entry command ctx state Transfer Flag l Invalidation private void apply Changes Invocation Context ctx Write Command command state Transfer Lock acquire Shared Topology Lock try We only retry non tx write commands if is Invalidation Ca n t perform the check during preload or if the cache is n t clustered boolean sync Rpc is Sync command has Any Flag Flag Bit Sets command has Any Flag Flag Bit Sets if command is Successful distribution Manager null int command Topology Id command get Topology Id int current Topology Id distribution Manager get Cache Topology get Topology Id Total Order State Transfer Interceptor does n t set the topology id for Rs if sync Rpc current Topology Id command Topology Id command Topology Id If we were the originator of a data command which we did n t own the key at the time means it was already committed so there is no need to throw the Outdated Topology Exception This will happen if we submit a command to the primary owner and it responds and then a topology change happens before we get here if ctx is Origin Local command instanceof Data Command ctx has Locked Key Data Command command get Key if trace log tracef Cache topology changed while the command was executing expected d got d command Topology Id current Topology Id This should n t be necessary as we ll have a fresh command instance when retrying command set Value Matcher command get Value Matcher matcher For Retry throw new Outdated Topology Exception Cache topology changed while the command was executing expected command Topology Id got current Topology Id commit Context Entries ctx command finally state Transfer Lock release Shared Topology Lock Locks the value for the keys accessed by the command to avoid being override from a remote get protected Object set Skip Remote Gets And Invoke Next For Many Entries Command Invocation Context ctx Write Command command return invoke Next Then Accept ctx command r Ctx r Command rv Write Command write Command Write Command r Command if r Ctx is In Tx Scope apply Changes r Ctx write Command return if trace log tracef The return value is s to Str rv if use Repeatable Read boolean add Version Read is Versioned write Command load Type Visitable Command Load Type Tx Invocation Context tx Ctx Tx Invocation Context r Ctx for Object key write Command get Affected Keys Cache Entry cache Entry r Ctx lookup Entry key if cache Entry null cache Entry set Skip Lookup true if add Version Read Entry cache Entry is Read add Version Read tx Ctx cache Entry key Entry cache Entry update Previous Value private void add Version Read Tx Invocation Context r Ctx Cache Entry cache Entry Object key Entry Version version if cache Entry null cache Entry get Metadata null version cache Entry get Metadata version if trace log tracef Adding version read s for key s version key else version version Generator non Existing Version if trace log tracef Adding non existent version read for key s key r Ctx get Cache Transaction add Version Read key version Locks the value for the keys accessed by the command to avoid being override from a remote get protected Object set Skip Remote Gets And Invoke Next For Data Command Invocation Context ctx Data Write Command command return invoke Next Then Accept ctx command r Ctx r Command rv Data Write Command data Write Command Data Write Command r Command if r Ctx is In Tx Scope apply Changes r Ctx data Write Command return if trace log tracef The return value is s rv if use Repeatable Read Cache Entry cache Entry r Ctx lookup Entry data Write Command get Key The entry is not in context when the command s execution type does not contain origin if cache Entry null cache Entry set Skip Lookup true if is Versioned data Write Command load Type Visitable Command Load Type Entry cache Entry is Read add Version Read Tx Invocation Context r Ctx cache Entry data Write Command get Key Entry cache Entry update Previous Value private void commit Entries Finally Invocation Context r Ctx Visitable Command r Command Object rv Throwable t Do not commit if the command will be retried if t instanceof Outdated Topology Exception return commit Context Entries r Ctx null This visitor replays the entry wrapping during remote prepare The command is passed down the stack even if its keys do not belong to this node according to write it s a role of Tx Distribution Interceptor to ignore such command The entry is wrapped only if it s available for reading otherwise it has to be wrapped in Tx Distribution Interceptor When the entry is not wrapped the value is not loaded in Cache Loader Interceptor therefore passing the command down the stack causes only minimal overhead private final class Entry Wrapping Visitor extends Abstract Visitor Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable return handle Write Many Command ctx command Override public Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable return handle Write Many Command ctx command Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable return handle Write Command ctx command Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable return handle Write Command ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return handle Write Command ctx command Override public Object visit Compute If Absent Command Invocation Context ctx Compute If Absent Command command throws Throwable return handle Write Command ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Only Key Command Invocation Context ctx Write Only Key Command command throws Throwable return handle Write Command ctx command Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable return handle Write Command ctx command Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Only Many Entries Command Invocation Context ctx Write Only Many Entries Command command throws Throwable return handle Write Many Command ctx command Override public Object visit Write Only Key Value Command Invocation Context ctx Write Only Key Value Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Only Many Command Invocation Context ctx Write Only Many Command command throws Throwable return handle Write Many Command ctx command Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable return handle Write Many Command ctx command Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable return handle Write Many Command ctx command private Object handle Write Command Invocation Context ctx Data Write Command command throws Throwable entry Factory wrap Entry For Writing ctx command get Key ignore Ownership command can Read command get Key command load Type Visitable Command Load Type return invoke Next ctx command private Object handle Write Many Command Invocation Context ctx Write Command command boolean ignore Ownership ignore Ownership command for Object key command get Affected Keys entry Factory wrap Entry For Writing ctx key ignore Ownership can Read key command load Type Visitable Command Load Type return invoke Next ctx command private boolean commit Entry If Needed final Invocation Context ctx final Flag Affected Command command final Cache Entry entry final Flag state Transfer Flag if entry null return false final boolean l Invalidation command instanceof Invalidate Command if entry is Changed if trace log tracef About to commit entry s entry commit Context Entry entry ctx command state Transfer Flag l Invalidation return true return false total order condition only commits when it is remote context and the prepare has the flag set param command the prepare command param ctx the invocation context return true if the modification should be committed false otherwise protected boolean should Commit During Prepare Prepare Command command Tx Invocation Context ctx return total Order command is One Phase Commit ctx is Origin Local command has Modifications command is One Phase Commit protected final Object wrap Entries For Prepare And Apply Tx Invocation Context ctx Prepare Command command Invocation Success Function handler throws Throwable if ctx is Origin Local command is Replay Entry Wrapping return apply Modifications And Then ctx command command get Modifications handler return handler apply ctx command null private Object apply Modifications And Then Tx Invocation Context ctx Prepare Command command Write Command modifications int start Index Invocation Success Function handler throws Throwable We need to execute modifications for the same key sequentially In theory we could optimize this loop if there are multiple remote invocations but since remote invocations are rare we omit this for int i start Index i modifications length i Write Command c modifications i c set Topology Id command get Topology Id if c has Any Flag Flag Bit Sets ctx get Cache Transaction set State Transfer Flag Flag Object result c accept Visitor ctx entry Wrapping Visitor if is Successfully Done result int next Index i if next Index modifications length return make Stage result then Apply ctx command handler return make Stage result then Apply ctx command r Ctx r Command rv apply Modifications And Then ctx command modifications next Index handler return handler apply ctx command null 
package org infinispan notifications cachelistener event import org infinispan Cache An interface that defines common characteristics of events author Manik Surtani since public interface Event enum Type private static final Type values public static Type value Of int ordinal return ordinal return the type of event represented by this instance Type get Type return tt true tt if the notification is before the event has occurred tt false tt if after the event has occurred boolean is Pre return a handle to the cache instance that generated this notification Cache get Cache 
package org infinispan notifications cachelistener event impl import java util Collection import java util Collections import java util Map import org infinispan Cache import org infinispan commons util Util import org infinispan distribution ch Consistent Hash import org infinispan metadata Metadata import org infinispan notifications cachelistener event Cache Entries Evicted Event import org infinispan notifications cachelistener event Cache Entry Activated Event import org infinispan notifications cachelistener event Cache Entry Created Event import org infinispan notifications cachelistener event Cache Entry Expired Event import org infinispan notifications cachelistener event Cache Entry Invalidated Event import org infinispan notifications cachelistener event Cache Entry Loaded Event import org infinispan notifications cachelistener event Cache Entry Modified Event import org infinispan notifications cachelistener event Cache Entry Passivated Event import org infinispan notifications cachelistener event Cache Entry Removed Event import org infinispan notifications cachelistener event Cache Entry Visited Event import org infinispan notifications cachelistener event Data Rehashed Event import org infinispan notifications cachelistener event Partition Status Changed Event import org infinispan notifications cachelistener event Topology Changed Event import org infinispan notifications cachelistener event Transaction Completed Event import org infinispan notifications cachelistener event Transaction Registered Event import org infinispan partitionhandling Availability Mode import org infinispan remoting transport Address import org infinispan transaction xa Global Transaction import net jcip annotations Not Thread Safe Basic implementation of an event that covers all event types author Manik Surtani since Not Thread Safe public class Event Impl implements Cache Entry Activated Event Cache Entry Created Event Cache Entries Evicted Event Cache Entry Loaded Event Cache Entry Modified Event Cache Entry Passivated Event Cache Entry Removed Event Cache Entry Visited Event Transaction Completed Event Transaction Registered Event Cache Entry Invalidated Event Data Rehashed Event Topology Changed Event Cache Entry Expired Event Partition Status Changed Event Cloneable private boolean pre false by default events are after the fact private transient Cache cache private key private Global Transaction transaction private Metadata metadata private Metadata old Metadata private boolean origin Local true by default events all originate locally private boolean transaction Successful private Type type private value private old Value private Consistent Hash read Consistent Hash At Start write Consistent Hash At Start read Consistent Hash At End write Consistent Hash At End union Consistent Hash private int new Topology Id private Map extends extends entries private boolean created private boolean command Retried private Availability Mode mode public Event Impl public static Event Impl create Event Cache cache Type type Event Impl e new Event Impl e cache cache e type type return e Override public Type get Type return type Override public boolean is Pre return pre Override public Cache get Cache return cache Override Suppress Warnings unchecked public get Key if key instanceof Marshalled Value key Marshalled Value key get return key Override public Global Transaction get Global Transaction return this transaction Override public boolean is Origin Local return origin Local Override public boolean is Transaction Successful return transaction Successful setters public void set Pre boolean pre this pre pre public void set Key key this key key public void set Transaction Id Global Transaction transaction this transaction transaction public void set Origin Local boolean origin Local this origin Local origin Local public void set Transaction Successful boolean transaction Successful this transaction Successful transaction Successful public void set Read Consistent Hash At Start Consistent Hash read Consistent Hash At Start this read Consistent Hash At Start read Consistent Hash At Start public void set Write Consistent Hash At Start Consistent Hash write Consistent Hash At Start this write Consistent Hash At Start write Consistent Hash At Start public void set Read Consistent Hash At End Consistent Hash read Consistent Hash At End this read Consistent Hash At End read Consistent Hash At End public void set Write Consistent Hash At End Consistent Hash write Consistent Hash At End this write Consistent Hash At End write Consistent Hash At End public void set Union Consistent Hash Consistent Hash union Consistent Hash this union Consistent Hash union Consistent Hash public void set New Topology Id int new Topology Id this new Topology Id new Topology Id public void set Metadata Metadata metadata this metadata metadata Override public Metadata get Metadata return metadata public void set Old Metadata Metadata metadata this old Metadata metadata public Metadata get Old Metadata return old Metadata Override Suppress Warnings unchecked public get Value if value instanceof Marshalled Value value Marshalled Value value get return value public void set Command Retried boolean command Retried this command Retried command Retried Override public boolean is Command Retried return command Retried Override public boolean is Created return created Override public get Old Value return old Value public void set Value value this value value public void set Entries Map extends extends entries this entries entries public void set Created boolean created this created created public void set Old Value old Value this old Value old Value Override public boolean equals Object o if this o return true if o null get Class o get Class return false Event Impl event Event Impl o if origin Local event origin Local return false if pre event pre return false if transaction Successful event transaction Successful return false if cache null cache equals event cache event cache null return false if key null key equals event key event key null return false if transaction null transaction equals event transaction event transaction null return false if type event type return false if value null value equals event value event value null return false if Util safe Equals read Consistent Hash At Start event read Consistent Hash At Start return false if Util safe Equals write Consistent Hash At Start event write Consistent Hash At Start return false if Util safe Equals read Consistent Hash At End event read Consistent Hash At End return false if Util safe Equals write Consistent Hash At End event write Consistent Hash At End return false if Util safe Equals union Consistent Hash event union Consistent Hash return false if new Topology Id event new Topology Id return false if created event created return false if old Value null old Value equals event old Value event old Value null return false return true Override public int hash Code int result pre result result cache null cache hash Code result result key null key hash Code result result transaction null transaction hash Code result result origin Local result result transaction Successful result result type null type hash Code result result value null value hash Code result result read Consistent Hash At Start null read Consistent Hash At Start hash Code result result write Consistent Hash At Start null write Consistent Hash At Start hash Code result result read Consistent Hash At End null read Consistent Hash At End hash Code result result write Consistent Hash At End null write Consistent Hash At End hash Code result result union Consistent Hash null union Consistent Hash hash Code result result new Topology Id result result created result result old Value null old Value hash Code return result Override public String to String if type Type type Type return Event Impl type type pre pre cache cache read Consistent Hash At Start read Consistent Hash At Start write Consistent Hash At Start write Consistent Hash At Start read Consistent Hash At End read Consistent Hash At End write Consistent Hash At End write Consistent Hash At End union Consistent Hash union Consistent Hash new Topology Id new Topology Id return Event Impl type type pre pre cache cache key key value value old Value old Value transaction transaction origin Local origin Local transaction Successful transaction Successful entries entries created created Override public Collection Address get Members At Start return read Consistent Hash At Start null read Consistent Hash At Start get Members Collections Address empty Set Override public Collection Address get Members At End return read Consistent Hash At End null read Consistent Hash At End get Members Collections Address empty Set Override public Consistent Hash get Consistent Hash At Start return read Consistent Hash At Start Override public Consistent Hash get Consistent Hash At End return write Consistent Hash At End Override public Consistent Hash get Read Consistent Hash At Start return read Consistent Hash At Start Override public Consistent Hash get Write Consistent Hash At Start return write Consistent Hash At Start Override public Consistent Hash get Read Consistent Hash At End return read Consistent Hash At End Override public Consistent Hash get Write Consistent Hash At End return write Consistent Hash At End Override public Consistent Hash get Union Consistent Hash return union Consistent Hash Override public int get New Topology Id return new Topology Id Override public Availability Mode get Availability Mode return mode public void set Availability Mode Availability Mode mode this mode mode Override public Map extends extends get Entries return entries Override public Event Impl clone try return Event Impl super clone catch Clone Not Supported Exception e throw new Runtime Exception Should never happen e 
package org infinispan util logging events impl import org infinispan factories scopes Scope import org infinispan factories scopes Scopes import org infinispan util logging events Event Log Manager import org infinispan util logging events Event Logger Event Log Manager Impl The implementation of the Event Log Manager By default this returns author Tristan Tarrant since Scope Scopes public class Event Log Manager Impl implements Event Log Manager Event Logger logger new Basic Event Logger Override public Event Logger replace Event Logger Event Logger new Logger Event Logger old Logger logger logger new Logger return old Logger Override public Event Logger get Event Logger return logger 
package org infinispan notifications cachelistener import org infinispan notifications cachelistener event Event Simple wrapper that keeps the original key along with the converted event The original key is required for things such as key tracking author wburns since public class Event Wrapper extends Event private event private final key public Event Wrapper key event this event event this key key public get Event return event public void set Event event this event event public get Key return key 
package org infinispan configuration cache import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set import org infinispan eviction Eviction Strategy import org infinispan eviction Eviction Thread Policy import org infinispan eviction Eviction Type import org infinispan util logging Log import org infinispan util logging Log Factory Controls the eviction settings for the cache deprecated Use link Memory Configuration instead Deprecated public class Eviction Configuration static final Log log Log Factory get Log Eviction Configuration class public static final Attribute Definition Long Attribute Definition builder size l build public static final Attribute Definition Eviction Type Attribute Definition builder type Eviction Type build public static final Attribute Definition Eviction Strategy Attribute Definition builder strategy Eviction Strategy immutable build public static final Attribute Definition Eviction Thread Policy Attribute Definition builder thread Policy Eviction Thread Policy immutable build static Attribute Set attribute Definition Set return new Attribute Set Eviction Configuration class private final Attribute Long size private final Attribute Eviction Type type private final Attribute Eviction Strategy strategy private final Attribute Eviction Thread Policy thread Policy private final Attribute Set attributes Eviction Configuration Attribute Set attributes this attributes attributes check Protection size attributes attribute type attributes attribute strategy attributes attribute thread Policy attributes attribute Eviction strategy Available options are and to disable eviction deprecated use link Memory Configuration eviction Type instead Deprecated public Eviction Strategy strategy return strategy get Threading policy for eviction deprecated Deprecated public Eviction Thread Policy thread Policy return thread Policy get Maximum number of entries in a cache instance Cache size is guaranteed not to exceed upper limit specified by max entries However due to the nature of eviction it is unlikely to ever be exactly maximum number of entries specified here Only makes sense when using the type deprecated use link Memory Configuration size instead Deprecated public long max Entries if type get Eviction Type throw new Illegal State Exception return size deprecated use link Memory Configuration size instead Deprecated public long size return size get Deprecated public void size long new Size size set new Size deprecated use link Memory Configuration eviction Type instead Deprecated public Eviction Type type return type get public Attribute Set attributes return attributes Override public String to String return Eviction Configuration attributes attributes Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Eviction Configuration other Eviction Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result 
package org infinispan configuration cache import static org infinispan configuration cache Eviction Configuration import static org infinispan configuration cache Eviction Configuration import static org infinispan configuration cache Eviction Configuration import static org infinispan configuration cache Eviction Configuration import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration import org infinispan eviction Eviction Strategy import org infinispan eviction Eviction Thread Policy import org infinispan eviction Eviction Type import org infinispan util logging Log import org infinispan util logging Log Factory Controls the eviction settings for the cache deprecated Use link Memory Configuration instead Deprecated public class Eviction Configuration Builder extends Abstract Configuration Child Builder implements Builder Eviction Configuration private static final Log log Log Factory get Log Eviction Configuration Builder class private final Attribute Set attributes public static final long x ffffffffffffffl Eviction Configuration Builder Configuration Builder builder super builder attributes Eviction Configuration attribute Definition Set Eviction strategy Available options are and to disable eviction param eviction Strategy public Eviction Configuration Builder strategy Eviction Strategy eviction Strategy attributes attribute set eviction Strategy return this Eviction Strategy strategy return attributes attribute get Threading policy for eviction param policy public Eviction Configuration Builder thread Policy Eviction Thread Policy policy attributes attribute set policy return this Maximum number of entries in a cache instance Backward compatible shortcut for type Eviction Type size max Entries param max Entries Deprecated public Eviction Configuration Builder max Entries long max Entries return type Eviction Type size max Entries Deprecated public Eviction Configuration Builder max Entries int max Entries return max Entries long max Entries Defines the maximum size before eviction occurs See link type Eviction Type param size public Eviction Configuration Builder size long size attributes attribute set size memory size size return this Sets the eviction type which can either be ul li entries will be evicted when the number of entries exceeds the link size long li li entries will be evicted when the approximate combined size of all values exceeds the link size long li ul Cache size is guaranteed not to exceed upper limit specified by max entries However due to the nature of eviction it is unlikely to ever be exactly maximum number of entries specified here param type public Eviction Configuration Builder type Eviction Type type attributes attribute set type memory eviction Type type return this Override public void validate Eviction Strategy strategy attributes attribute get Long size attributes attribute get if strategy Eviction Strategy log warn Fifo Strategy Is Deprecated if strategy is Enabled size throw log invalid Eviction Size if strategy is Enabled if size strategy Eviction Strategy log debugf Max entries configured d without eviction strategy Eviction strategy overriden to s size strategy else if get Builder persistence passivation strategy Eviction Strategy get Builder template log passivation Without Eviction if strategy Eviction Strategy attributes attribute get Eviction Type throw log memory Eviction Invalid Strategy if size throw log eviction Size Too Large size if attributes attribute get Eviction Type String java Security Actions get System Property java vm name if java contains Hot Spot log memory Approximation Unsupported java Override public void validate Global Configuration global Config Override public Eviction Configuration create return new Eviction Configuration attributes protect Override public Eviction Configuration Builder read Eviction Configuration template this attributes read template attributes return this Override public String to String return this get Class get Simple Name attributes 
package org infinispan eviction impl import java util Map import org infinispan configuration cache Configuration import org infinispan container entries Internal Cache Entry import org infinispan context Invocation Context import org infinispan context impl Immutable Context import org infinispan eviction Eviction Manager import org infinispan factories annotations Inject import org infinispan interceptors Async Interceptor Chain import org infinispan interceptors impl Cache Mgmt Interceptor import org infinispan notifications cachelistener Cache Notifier import net jcip annotations Thread Safe Thread Safe public class Eviction Manager Impl implements Eviction Manager components to be injected private Cache Notifier cache Notifier private Async Interceptor Chain interceptor Chain private Configuration cfg Inject public void initialize Cache Notifier cache Notifier Configuration cfg Async Interceptor Chain chain this cache Notifier cache Notifier this cfg cfg this interceptor Chain chain Override public void on Entry Eviction Map extends Internal Cache Entry extends extends evicted do n t reuse the threadlocal context as we do n t want to include eviction operations in any ongoing transaction nor be affected by flags especially see it s illegal to acquire locks in a committing transaction Invocation Context ctx Immutable Context This is important because we make no external guarantees on the thread that will execute this code so it could be the user thread or could be the eviction thread However when a user calls cache evict you do want to carry over the contextual information hence it makes sense for the notify Cache Entries Evicted call to carry on taking an Invocation Context object cache Notifier notify Cache Entries Evicted evicted values ctx null if cfg jmx Statistics enabled update Eviction Statistics evicted private void update Eviction Statistics Map extends Internal Cache Entry extends extends evicted Cache Mgmt Interceptor mgmt Interceptor interceptor Chain find Interceptor Extending Cache Mgmt Interceptor class if mgmt Interceptor null mgmt Interceptor add Evictions evicted size 
package org infinispan eviction Supported eviction strategies author Manik Surtani since public enum Eviction Strategy strategy is deprecated will be used instead Deprecated public boolean is Enabled return this this 
package org infinispan eviction Supported eviction thread policy author Vladimir Blagojevic since public enum Eviction Thread Policy 
package org infinispan remoting responses import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids response that encapsulates an exception author Manik Surtani since public class Exception Response extends Invalid Response private Exception exception public Exception Response public Exception Response Exception exception this exception exception public Exception get Exception return exception public void set Exception Exception exception this exception exception Override public String to String return Exception Response exception public static class Externalizer extends Abstract Externalizer Exception Response Override public void write Object Object Output output Exception Response response throws Exception output write Object response exception Override public Exception Response read Object Object Input input throws Exception Class Not Found Exception return new Exception Response Exception input read Object Override public Integer get Id return Ids Override public Set Class extends Exception Response get Type Classes return Util Class extends Exception Response as Set Exception Response class 
package org infinispan configuration cache import java util concurrent Time Unit import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set Controls the default expiration settings for entries in the cache public class Expiration Configuration public static final Attribute Definition Long Attribute Definition builder lifespan l build public static final Attribute Definition Long Attribute Definition builder max Idle l build public static final Attribute Definition Boolean Attribute Definition builder reaper Enabled true immutable auto Persist false build public static final Attribute Definition Long Attribute Definition builder wake Up Interval Time Unit to Millis xml Name interval build static Attribute Set attribute Definition Set return new Attribute Set Expiration Configuration class private final Attribute Long lifespan private final Attribute Long max Idle private final Attribute Boolean reaper Enabled private final Attribute Long wake Up Interval private final Attribute Set attributes Expiration Configuration Attribute Set attributes this attributes attributes check Protection lifespan attributes attribute max Idle attributes attribute reaper Enabled attributes attribute wake Up Interval attributes attribute Maximum lifespan of a cache entry after which the entry is expired cluster wide in milliseconds means the entries never expire Note that this can be overridden on a per entry basis by using the Cache public long lifespan return lifespan get Maximum idle time a cache entry will be maintained in the cache in milliseconds If the idle time is exceeded the entry will be expired cluster wide means the entries never expire Note that this can be overridden on a per entry basis by using the Cache public long max Idle return max Idle get Determines whether the background reaper thread is enabled to test entries for expiration Regardless of whether a reaper is used entries are tested for expiration lazily when they are touched public boolean reaper Enabled return reaper Enabled get Interval in milliseconds between subsequent runs to purge expired entries from memory and any cache stores If you wish to disable the periodic eviction process altogether set wakeup Interval to public long wake Up Interval return wake Up Interval get Override public String to String return Expiration Configuration attributes attributes Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Expiration Configuration other Expiration Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result public Attribute Set attributes return attributes 
package org infinispan configuration cache import static org infinispan configuration cache Expiration Configuration import static org infinispan configuration cache Expiration Configuration import static org infinispan configuration cache Expiration Configuration import static org infinispan configuration cache Expiration Configuration import java util concurrent Time Unit import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration Controls the default expiration settings for entries in the cache public class Expiration Configuration Builder extends Abstract Configuration Child Builder implements Builder Expiration Configuration private final Attribute Set attributes Expiration Configuration Builder Configuration Builder builder super builder attributes Expiration Configuration attribute Definition Set Maximum lifespan of a cache entry after which the entry is expired cluster wide in milliseconds means the entries never expire Note that this can be overridden on a per entry basis by using the Cache public Expiration Configuration Builder lifespan long l attributes attribute set l return this Maximum lifespan of a cache entry after which the entry is expired cluster wide in milliseconds means the entries never expire Note that this can be overridden on a per entry basis by using the Cache public Expiration Configuration Builder lifespan long l Time Unit unit return lifespan unit to Millis l Maximum idle time a cache entry will be maintained in the cache in milliseconds If the idle time is exceeded the entry will be expired cluster wide means the entries never expire Note that this can be overridden on a per entry basis by using the Cache public Expiration Configuration Builder max Idle long l attributes attribute set l return this Maximum idle time a cache entry will be maintained in the cache in milliseconds If the idle time is exceeded the entry will be expired cluster wide means the entries never expire Note that this can be overridden on a per entry basis by using the Cache public Expiration Configuration Builder max Idle long l Time Unit unit return max Idle unit to Millis l Enable the background reaper to test entries for expiration Regardless of whether a reaper is used entries are tested for expiration lazily when they are touched public Expiration Configuration Builder enable Reaper attributes attribute set true return this Enable the background reaper to test entries for expiration Regardless of whether a reaper is used entries are tested for expiration lazily when they are touched public Expiration Configuration Builder reaper Enabled boolean enabled attributes attribute set enabled return this Disable the background reaper to test entries for expiration to test entries for expiration Regardless of whether a reaper is used entries are tested for expiration lazily when they are touched public Expiration Configuration Builder disable Reaper attributes attribute set false return this public boolean reaper Enabled return attributes attribute get Interval in milliseconds between subsequent runs to purge expired entries from memory and any cache stores If you wish to disable the periodic eviction process altogether set wakeup Interval to public Expiration Configuration Builder wake Up Interval long l attributes attribute set l return this public long wakeup Interval return attributes attribute get Interval in milliseconds between subsequent runs to purge expired entries from memory and any cache stores If you wish to disable the periodic eviction process altogether set wakeup Interval to public Expiration Configuration Builder wake Up Interval long l Time Unit unit return wake Up Interval unit to Millis l Override public void validate Override public void validate Global Configuration global Config Override public Expiration Configuration create return new Expiration Configuration attributes protect Override public Expiration Configuration Builder read Expiration Configuration template this attributes read template attributes return this Override public String to String return this get Class get Simple Name attributes 
package org infinispan expiration impl import java util Iterator import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import java util concurrent Scheduled Executor Service import java util concurrent Scheduled Future import java util concurrent Time Unit import org infinispan Cache import org infinispan commons util Util import org infinispan configuration cache Configuration import org infinispan container Data Container import org infinispan container entries Internal Cache Entry import org infinispan expiration Expiration Manager import org infinispan factories Known Component Names import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan marshall core Marshalled Entry import org infinispan metadata Metadata import org infinispan notifications cachelistener Cache Notifier import org infinispan persistence manager Persistence Manager import org infinispan util Time Service import org infinispan util logging Log import org infinispan util logging Log Factory import net jcip annotations Thread Safe Thread Safe public class Expiration Manager Impl implements Expiration Manager protected static final Log log Log Factory get Log Expiration Manager Impl class protected static final boolean trace log is Trace Enabled protected Scheduled Future expiration Task components to be injected protected Scheduled Executor Service executor protected Configuration configuration protected Persistence Manager persistence Manager protected Data Container data Container protected Cache Notifier cache Notifier protected Time Service time Service protected boolean enabled protected String cache Name This map is used for performance reasons Essentially when an expiration event should not be raised this map should be populated first The main examples are if an expiration is about to occur for that key or the key will be removed or updated In the latter case we do n t want to send an expiration event and then a remove event when we could do just the removal protected Concurrent Map Object expiring Inject public void initialize Component Name Known Component Names Scheduled Executor Service executor Cache cache Configuration cfg Data Container data Container Persistence Manager persistence Manager Cache Notifier cache Notifier Time Service time Service initialize executor cache get Name cfg data Container persistence Manager cache Notifier time Service void initialize Scheduled Executor Service executor String cache Name Configuration cfg Data Container data Container Persistence Manager persistence Manager Cache Notifier cache Notifier Time Service time Service this executor executor this configuration cfg this cache Name cache Name this data Container data Container this persistence Manager persistence Manager this cache Notifier cache Notifier this time Service time Service this expiring new Concurrent Hash Map Start priority make sure this starts after the Persistence Manager public void start first check if eviction is enabled enabled configuration expiration reaper Enabled if enabled Set up the eviction timer task long exp Wake Up Int configuration expiration wake Up Interval if exp Wake Up Int log not Starting Eviction Thread enabled false else expiration Task executor schedule With Fixed Delay new Scheduled Task exp Wake Up Int exp Wake Up Int Time Unit Override public void process Expiration long start if Thread current Thread is Interrupted try if trace log trace Purging data container of expired entries start time Service time long current Time Millis time Service wall Clock Time for Iterator Internal Cache Entry purge Candidates data Container iterator Including Expired purge Candidates has Next Internal Cache Entry e purge Candidates next if e is Expired current Time Millis handle In Memory Expiration e current Time Millis if trace log tracef Purging data container completed in s Util pretty Print Time time Service time Duration start Time Unit catch Exception e log exception Purging Data Container e if Thread current Thread is Interrupted persistence Manager purge Expired Override public boolean is Enabled return enabled Override public void handle In Memory Expiration Internal Cache Entry entry long current Time data Container compute entry get Key k old Entry factory if old Entry null synchronized old Entry if old Entry is Expired current Time delete From Stores And Notify k old Entry get Value old Entry get Metadata else return old Entry return null Override public void handle In Store Expiration key Note since this is invoked without the actual key lock it is entirely possible for a remove to occur concurrently before the data container lock is acquired and then the old Entry below will be null causing an expiration event to be generated that is extra handle In Store Expiration key null null Override public void handle In Store Expiration final Marshalled Entry marshalled Entry handle In Store Expiration marshalled Entry get Key marshalled Entry get Value marshalled Entry get Metadata private void handle In Store Expiration key value Metadata metadata data Container compute key old Key old Entry factory boolean should Remove false if old Entry null should Remove true delete From Stores And Notify key value metadata else if old Entry can Expire long time time Service time if old Entry is Expired time synchronized old Entry if old Entry is Expired time Even though we were provided marshalled entry they may only provide metadata or value possibly so we have to check for null on either if should Remove metadata null old Entry get Metadata equals metadata value null value equals old Entry get Value delete From Stores And Notify key value metadata if should Remove return null return old Entry Deletes the key from the store as well as notifies the cache listeners of the expiration of the given key value metadata combination param key param value param metadata private void delete From Stores And Notify key value Metadata metadata delete From Stores key if cache Notifier null To guarantee ordering of events this must be done on the entry so that another write can not be done at the same time cache Notifier notify Cache Entry Expired key value metadata null private void delete From Stores key We have to delete from shared stores as well to make sure there are not multiple expiration events persistence Manager delete From All Stores key Persistence Manager Access Mode Override public void register Write Incoming key expiring put key key Override public void unregister Write key expiring remove key Stop priority public void stop if expiration Task null expiration Task cancel true class Scheduled Task implements Runnable Override public void run Log Factory push cache Name trace try process Expiration finally Log Factory pop trace 
package org infinispan container entries Provide utility methods for dealing with expiration of cache entries author Manik Surtani author Sanne Grinovero since public class Expiry Helper public static boolean is Expired Mortal long lifespan long created long now return lifespan created now created lifespan public static boolean is Expired Transient long max Idle long last Used long now return max Idle last Used now max Idle last Used public static boolean is Expired Transient Mortal long max Idle long last Used long lifespan long created long now return is Expired Transient max Idle last Used now is Expired Mortal lifespan created now 
package org infinispan commons marshall import java io Exception import java io Object Input import java io Object Output import java io Serializable One of the key aspects of Infinispan is that it often needs to marshall or unmarshall objects in order to provide some of its functionality For example if it needs to store objects in a write through or write behind cache store the objects stored need marshalling If a cluster of Infinispan nodes is formed objects shipped around need marshalling Even if you enable storing as binary objects need to marshalled so that they can be lazily unmarshalled with the correct classloader Using standard serialization is slow and produces payloads that are too big and can affect bandwidth usage On top of that serialization does not work well with objects that are supposed to be immutable In order to avoid these issues Infinispan uses Boss Marshalling for marshalling unmarshalling objects Boss Marshalling is fast provides very space efficient payloads and on top of that allows users to construct objects themselves during unmarshalling hence allowing objects to carry on being immutable Starting with users of Infinispan can now benefit from this marshalling framework as well In the simplest possible form users just need to provide an link Externalizer implementation for the type that they want to marshall unmarshall and then annotate the marshalled type class with link Serialize With indicating the externalizer class to use and that s all about it At runtime Boss Marshaller will inspect the object and discover that s marshallable thanks to the annotation and so marshall it using the externalizer class passed It s common practice to include externalizer implementations within the classes that they marshall unmarshall as code public static classes code To make externalizer implementations easier to code and more typesafe make sure you define type as the type of object that s being marshalled unmarshalled Even though this way of defining externalizers is very user friendly it has some disadvantages ul li Due to several constraints of the model such as support different versions of the same class or the need to marshall the Externalizer class the payload sizes generated via this method are not the most efficient li li This model requires for the marshalled class to be annoated with link Serialize With but a user might need to provide an Externalizer for a class for which source code is not available or for any other constraints it can not be modified li li The use of annotations by this model might be limiting for framework developers or service providers that try to abstract lower level details such as the marshalling layer away from the user li ul If you re affected by any of these disadvantages an alternative mechanism to provide externalizers is available via link Advanced Externalizer More details can be found in this interface s javadoc Please note that even though Externalizer is marked as link Serializable the need to marshall the externalizer is only really needed when developing user friendly externalizers using link Serialize With link Advanced Externalizer instances do not require the externalizer to be serializable since the externalizer itself is not marshalled Even though it s not strictly necessary to avoid breaking compatibility with old clients link Externalizer implements link Serializable but this requirement is only needed for those user friendly externalizers There s a chance that in future major releases link Externalizer wo n t extend link Serializable any more hence we strongly recommend that any user friendly externalizer users mark their externalizer implementations as either link Serializable or link java io Externalizable author Galder Zamarre o since public interface Externalizer extends Serializable Write the object reference to the stream param output the object output to write to param object the object reference to write throws Exception if an error occurs void write Object Object Output output object throws Exception Read an instance from the stream The instance will have been written by the link write Object Object Output Object method Implementations are free to create instances of the object read from the stream in any way that they feel like This could be via constructor factory or reflection param input the object input to read from return the object instance throws Exception if an error occurs throws Class Not Found Exception if a class could not be found read Object Object Input input throws Exception Class Not Found Exception 
package org infinispan query impl externalizers Identifiers used by the Marshaller to delegate to specialized Externalizers For details read http infinispan org docs x user guide user guide html preassigned externalizer id ranges The range reserved for the Infinispan Query module is from to author Sanne Grinovero since public interface Externalizer Ids Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer 
package org infinispan client hotrod Defines all the flags available in the Hot Rod client that can influence the behavior of operations p Available flags ul li link By default previously existing values for link java util Map operations are not returned g link Remote Cache put Object Object does i not i return the previous value associated with the key By applying this flag this default behavior is overridden for the scope of a single invocation and the previous existing value is returned li li link This flag can either be used as a request flag during a put operation to mean that the default server lifespan should be applied or as a response flag meaning that the return entry has a default lifespan value li li link This flag can either be used as a request flag during a put operation to mean that the default server max Idle should be applied or as a response flag meaning that the return entry has a default max Idle value li li link Skips loading an entry from any configured link org infinispan persistence spi Cache Loader s li li link Used by the Query module only it will prevent the indexes to be updated as a result of the current operations ul author Mircea Markus jboss com since public enum Flag By default previously existing values for link java util Map operations are not returned g link Remote Cache put Object Object does i not i return the previous value associated with the key p By applying this flag this default behavior is overridden for the scope of a single invocation and the previous existing value is returned x This flag can either be used as a request flag during a put operation to mean that the default server lifespan should be applied or as a response flag meaning that the return entry has a default lifespan value x This flag can either be used as a request flag during a put operation to mean that the default server max Idle should be applied or as a response flag meaning that the return entry has a default max Idle value x Skips loading an entry from any configured link org infinispan persistence spi Cache Loader s x Used by the Query module only it will prevent the indexes to be updated as a result of the current operations x private int flag Int Flag int flag Int this flag Int flag Int public int get Flag Int return flag Int 
package org infinispan transaction lookup import java lang reflect Method import javax naming Initial Context import javax naming Naming Exception import javax transaction Transaction Manager import org infinispan commons util Util import org infinispan configuration global Global Configuration import org infinispan factories annotations Inject import org infinispan transaction tm Embedded Transaction Manager import org infinispan util logging Log import org infinispan util logging Log Factory transaction manager lookup class that attempts to locate a Transaction Manager variety of different classes and locations are tried for servers such as ul li Boss li Run li Resin li Orion li On li Weblogic li Websphere li Sun Glassfish ul If a transaction manager is not found returns an link org infinispan transaction tm Embedded Transaction Manager author Markus Plesser since public class Generic Transaction Manager Lookup implements Transaction Manager Lookup private static final Log log Log Factory get Log Generic Transaction Manager Lookup class public static final Generic Transaction Manager Lookup new Generic Transaction Manager Lookup lookups performed private boolean lookup Done false No available private boolean lookup Failed false No Boss embedded jars found private boolean no Boss false The Transaction Manager found private Transaction Manager tm null locations for Transaction Managers we know of private static String known Managers java jboss Transaction Manager Boss java Transaction Manager Boss Run java comp Transaction Manager Resin x java appserver Transaction Manager Sun Glassfish java pm Transaction Manager Borland Sun javax transaction Transaction Manager Web Logic java comp User Transaction Resin Orion On osgi service javax transaction Transaction Manager Karaf Web Sphere and Transaction Manager Factory private static final String com ibm ws Transaction Transaction Manager Factory Web Sphere Transaction Manager Factory private static final String com ibm ejs jts jta Transaction Manager Factory Web Sphere Transaction Manager Factory private static final String com ibm ejs jts jta private Global Configuration global Cfg Inject public void init Global Configuration global Cfg this global Cfg global Cfg Get the system wide used Transaction Manager return Transaction Manager Override public synchronized Transaction Manager get Transaction Manager if lookup Done do Lookups global Cfg class Loader if tm null return tm if lookup Failed if no Boss First try an embedded Boss instance try Embedded Boss if no Boss fall back to a dummy from Infinispan use Dummy return tm private void use Dummy tm Embedded Transaction Manager get Instance log falling Back To Embedded Tm private void try Embedded Boss try Boss Standalone Manager Lookup j Boss Standalone Manager Lookup new Boss Standalone Manager Lookup j Boss Standalone Manager Lookup init global Cfg tm j Boss Standalone Manager Lookup get Transaction Manager catch Exception e no Boss true Try to figure out which Transaction Manager to use private void do Lookups Class Loader cl if lookup Failed return Initial Context ctx try ctx new Initial Context catch Naming Exception e log failed To Create Initial Ctx e lookup Failed true return try probe jndi lookups first for String known Manager known Managers Object jndi Object try log debugf Trying to lookup Transaction Manager for s known Manager jndi Object ctx lookup known Manager catch Naming Exception e log debugf Failed to perform a lookup for s s known Manager known Manager continue if jndi Object instanceof Transaction Manager tm Transaction Manager jndi Object log debugf Found Transaction Manager for s known Manager return finally Util close ctx try to find websphere lookups since we came here The may be deployed embedded alongside the app so this needs to be looked up on the same as the Cache Class clazz try log debugf Trying Web Sphere s clazz Util load Class Strict cl log debugf Found Web Sphere s catch Class Not Found Exception ex try log debugf Trying Web Sphere s clazz Util load Class Strict cl log debugf Found Web Sphere s catch Class Not Found Exception ex try log debugf Trying Web Sphere s clazz Util load Class Strict cl log debugf Found Web Sphere s catch Class Not Found Exception ex log debug Could n t find any Web Sphere Transaction Manager factory class neither for Web Sphere version nor nor lookup Failed true return try Class signature null Object args null Method method clazz get Method get Transaction Manager signature tm Transaction Manager method invoke null args catch Exception ex log unable To Invoke Websphere Static Get Tm Method ex clazz get Name lookup Done true 
package org infinispan commands read import static org infinispan commons util Util to Str import java io Exception import java io Object Input import java io Object Output import org infinispan commands Visitor import org infinispan container entries Cache Entry import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan util logging Log import org infinispan util logging Log Factory Implements functionality defined by link org infinispan Cache get Object and link org infinispan Cache contains Key Object operations author Manik Surtani a href mailto manik jboss org manik jboss org a since public class Get Key Value Command extends Abstract Data Command public static final byte private static final Log log Log Factory get Log Get Key Value Command class private static final boolean trace log is Trace Enabled public Get Key Value Command Object key long flags Bit Set super key flags Bit Set public Get Key Value Command Override public Object accept Visitor Invocation Context ctx Visitor visitor throws Throwable return visitor visit Get Key Value Command ctx this Override public Load Type load Type return Load Type Override public Object perform Invocation Context ctx throws Throwable Cache Entry entry ctx lookup Entry key if entry is Removed if trace log tracef Entry has been deleted and is of type s entry get Class get Simple Name return null return entry get Value Override public byte get Command Id return Override public void write To Object Output output throws Exception output write Object key output write Long Flag Bit Sets copy Without Remotable Flags get Flags Bit Set Override public void read From Object Input input throws Exception Class Not Found Exception key input read Object set Flags Bit Set input read Long public String to String return new String Builder append Get Key Value Command key append to Str key append flags append print Flags append to String 
package org infinispan security actions import java security Privileged Action Wrapper for code Boolean get Boolean property Name author Dan Berindei since public class Get System Property As Boolean Action implements Privileged Action Boolean private final String property Name public Get System Property As Boolean Action String property Name this property Name property Name Override public Boolean run return Boolean get Boolean property Name 
package org infinispan configuration global import java util Map import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set import org infinispan commons configuration attributes Identity Attribute Copier import org infinispan security Audit Logger import org infinispan security Principal Role Mapper import org infinispan security Role import org infinispan security impl Null Audit Logger Global Authorization Configuration author Tristan Tarrant since public class Global Authorization Configuration static final Attribute Definition Boolean Attribute Definition builder enabled false immutable build static final Attribute Definition Audit Logger Attribute Definition builder audit Logger Audit Logger new Null Audit Logger copier Identity Attribute Copier immutable build static final Attribute Definition Principal Role Mapper Attribute Definition builder principal Role Mapper null Principal Role Mapper class immutable build static final Attribute Definition Map Attribute Definition builder roles null Map class build static final Attribute Set attribute Definition Set return new Attribute Set Global Authorization Configuration class private final Attribute Boolean enabled private final Attribute Audit Logger audit Logger private final Attribute Principal Role Mapper principal Role Mapper private final Attribute Map roles private final Attribute Set attributes public Global Authorization Configuration Attribute Set attributes this attributes attributes check Protection enabled attributes attribute audit Logger attributes attribute principal Role Mapper attributes attribute roles attributes attribute public boolean enabled return enabled get public Audit Logger audit Logger return audit Logger get public Principal Role Mapper principal Role Mapper return principal Role Mapper get public Map String Role roles return roles get public Attribute Set attributes return attributes Override public String to String return Global Authorization Configuration attributes attributes Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Global Authorization Configuration other Global Authorization Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true 
package org infinispan factories import java lang ref Weak Reference import java util Array List import java util Collection import java util Collections import java util Map import java util Set import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import java util concurrent Scheduled Executor Service import java util concurrent atomic Atomic Boolean import javax management Bean Server import javax management Bean Server Factory import org infinispan Version import org infinispan commands module Module Command Factory import org infinispan commands module Module Command Initializer import org infinispan commons Cache Exception import org infinispan commons util uberjar Manifest Uber Jar Duplicated Jars Warner import org infinispan commons util uberjar Uber Jar Duplicated Jars Warner import org infinispan configuration global Global Configuration import org infinispan configuration global Shutdown Hook Behavior import org infinispan factories annotations Survives Restarts import org infinispan factories components Component Metadata Repo import org infinispan factories scopes Scope import org infinispan factories scopes Scopes import org infinispan jmx Cache Manager Jmx Registration import org infinispan lifecycle Component Status import org infinispan lifecycle Module Lifecycle import org infinispan manager Embedded Cache Manager import org infinispan manager Embedded Cache Manager Startup Exception import org infinispan marshall core Encoder Registry import org infinispan notifications cachemanagerlistener Cache Manager Notifier import org infinispan notifications cachemanagerlistener Cache Manager Notifier Impl import org infinispan persistence factory Cache Store Factory Registry import org infinispan registry Internal Cache Registry import org infinispan registry impl Internal Cache Registry Impl import org infinispan remoting transport Transport import org infinispan stats Cluster Container Stats import org infinispan topology Cluster Topology Manager import org infinispan topology Local Topology Manager import org infinispan util Byte String import org infinispan util Module Properties import org infinispan util Time Service import org infinispan util logging Log import org infinispan util logging Log Factory import org infinispan util logging events Event Log Manager import org infinispan xsite Global Site Admin Operations import net jcip annotations Thread Safe global component registry where shared components are stored author Manik Surtani since Scope Scopes Survives Restarts Thread Safe public class Global Component Registry extends Abstract Component Registry private static final Log log Log Factory get Log Global Component Registry class private static final Atomic Boolean version Logged new Atomic Boolean false Hook to shut down the cache when the exits private Thread shutdown Hook flag that the shutdown hook sets before calling cache stop Allows stop to identify if it has been called from a shutdown hook private boolean invoked From Shutdown Hook private final Global Configuration global Configuration Tracking set of created caches in order to make it easy to remove a cache on remote nodes private final Set String created Caches private final Module Properties module Properties new Module Properties private final Component Metadata Repo component Metadata Repo final Collection Module Lifecycle module Lifecycles final Concurrent Map Byte String Component Registry named Components new Concurrent Hash Map protected final Weak Reference Class Loader default Class Loader Creates an instance of the component registry The configuration passed in is automatically registered param configuration configuration with which this is created public Global Component Registry Global Configuration configuration Embedded Cache Manager cache Manager Set String created Caches Class Loader configured Class Loader configuration class Loader module Lifecycles Module Properties resolve Module Lifecycles configured Class Loader component Metadata Repo new Component Metadata Repo Load up the component metadata component Metadata Repo initialize Module Properties get Module Metadata Files configured Class Loader configured Class Loader default Class Loader new Weak Reference register Default Class Loader configured Class Loader try this order is important global Configuration configuration register Component this Global Component Registry class register Component configuration Global Configuration class register Component cache Manager Embedded Cache Manager class register Component new Cache Manager Jmx Registration Cache Manager Jmx Registration class register Component new Cache Manager Notifier Impl Cache Manager Notifier class register Component new Internal Cache Registry Impl Internal Cache Registry class register Component new Cache Store Factory Registry Cache Store Factory Registry class register Component new Global Site Admin Operations Global Site Admin Operations class module Properties load Module Command Handlers configured Class Loader Map Byte Module Command Factory factories module Properties module Command Factories if factories null factories is Empty register Non Volatile Component factories Known Component Names else register Non Volatile Component Collections empty Map Known Component Names this created Caches created Caches get Or Create Component Event Log Manager class This is necessary to make sure the transport has been started and is available to other components that may need it This is a messy approach though a proper fix will be in get Or Create Component Transport class These two should not be necessary but they are here as a workaround for get Or Create Component Local Topology Manager class get Or Create Component Cluster Topology Manager class get Or Create Component Cluster Container Stats class get Or Create Component Encoder Registry class get Or Create Component Scheduled Executor Service class Known Component Names catch Exception e throw new Cache Exception Unable to construct a Global Component Registry e Override protected Class Loader get Class Loader return default Class Loader get Override protected Log get Log return log Override public Component Metadata Repo get Component Metadata Repo return component Metadata Repo Override protected synchronized void remove Shutdown Hook if this is called from a source other than the shutdown hook de register the shutdown hook if invoked From Shutdown Hook shutdown Hook null Runtime get Runtime remove Shutdown Hook shutdown Hook Override public Time Service get Time Service return get Or Create Component Time Service class Override protected synchronized void add Shutdown Hook Array List Bean Server al Bean Server Factory find Bean Server null Shutdown Hook Behavior shutdown Hook Behavior global Configuration shutdown hook Behavior boolean register Shutdown Hook shutdown Hook Behavior Shutdown Hook Behavior al is Empty shutdown Hook Behavior Shutdown Hook Behavior if register Shutdown Hook log tracef Registering a shutdown hook Configured behavior s shutdown Hook Behavior shutdown Hook new Thread try invoked From Shutdown Hook true Global Component Registry this stop finally invoked From Shutdown Hook false Runtime get Runtime add Shutdown Hook shutdown Hook else log tracef Not registering a shutdown hook Configured behavior s shutdown Hook Behavior public final Component Registry get Named Component Registry String name no need so sync this method as named Components is thread safe and correctly published final return get Named Component Registry Byte String from String name public final Component Registry get Named Component Registry Byte String name no need so sync this method as named Components is thread safe and correctly published final return named Components get name public synchronized final void register Named Component Registry Component Registry component Registry String name named Components put Byte String from String name component Registry public synchronized final void unregister Named Component Registry String name named Components remove Byte String from String name public synchronized final void rewire Named Registries for Component Registry cr named Components values cr rewire public Map Byte Module Command Initializer get Module Command Initializers module Properties is final so we do n t need to synchronize this method for safe publishing return Collections unmodifiable Map module Properties module Command Initializers Override public void start try boolean need To Notify synchronized this Do nothing if the global components are already running if state start Allowed return need To Notify state Component Status state Component Status if need To Notify for Module Lifecycle l module Lifecycles if log is Trace Enabled log tracef Invoking s cache Manager Starting l l cache Manager Starting this global Configuration super start if version Logged compare And Set false true log version Version print Version super post Start if need To Notify state Component Status for Module Lifecycle l module Lifecycles if log is Trace Enabled log tracef Invoking s cache Manager Started l l cache Manager Started this warn About Uber Jar Duplicates catch Runtime Exception rte Embedded Cache Manager Startup Exception exception new Embedded Cache Manager Startup Exception rte state Component Status try super stop catch Exception e exception add Suppressed e throw exception private void warn About Uber Jar Duplicates Uber Jar Duplicated Jars Warner scanner new Manifest Uber Jar Duplicated Jars Warner scanner is Classpath Correct Async then Accept Async is Classpath Correct if is Classpath Correct log warn About Uber Jar Duplicates Override public synchronized void stop boolean need To Notify state Component Status state Component Status if need To Notify for Module Lifecycle l module Lifecycles if log is Trace Enabled log tracef Invoking s cache Manager Stopping l l cache Manager Stopping this super stop if state Component Status need To Notify for Module Lifecycle l module Lifecycles if log is Trace Enabled log tracef Invoking s cache Manager Stopped l l cache Manager Stopped this public void notify Cache Started String cache Name Component Registry cr get Named Component Registry cache Name for Module Lifecycle l module Lifecycles if log is Trace Enabled log tracef Invoking s cache Started l l cache Started cr cache Name public final Global Configuration get Global Configuration this is final so no need to synchronise it return global Configuration Removes a cache with the given name returning true if the cache was removed public synchronized boolean remove Cache String cache Name return created Caches remove cache Name public Module Properties get Module Properties return module Properties 
package org infinispan configuration global import java lang ref Weak Reference import java util Collections import java util Hash Map import java util List import java util Map import java util Optional import org infinispan Version import org infinispan factories annotations Survives Restarts import org infinispan factories scopes Scope import org infinispan factories scopes Scopes p Configuration component that exposes the global configuration p author Manik Surtani author Vladimir Blagojevic author Mircea Markus jboss com author Galder Zamarre o author Pete Muir author Pedro Ruivo since see a href config html ce infinispan global Configuration reference a Scope Scopes Survives Restarts public class Global Configuration Default replication version from link org infinispan Version get Version Short public static final short Version get Version Short private final Global Jmx Statistics Configuration global Jmx Statistics private final Transport Configuration transport private final Global Security Configuration security private final Serialization Configuration serialization private final Shutdown Configuration shutdown private final Global State Configuration global State private final Map Class modules private final Site Configuration site private final Weak Reference Class Loader cl private final Thread Pool Configuration expiration Thread Pool private final Thread Pool Configuration listener Thread Pool private final Thread Pool Configuration replication Queue Thread Pool private final Thread Pool Configuration persistence Thread Pool private final Thread Pool Configuration state Transfer Thread Pool private final Thread Pool Configuration async Thread Pool private final Optional String default Cache Name Global Configuration Thread Pool Configuration expiration Thread Pool Thread Pool Configuration listener Thread Pool Thread Pool Configuration replication Queue Thread Pool Thread Pool Configuration persistence Thread Pool Thread Pool Configuration state Transfer Thread Pool Thread Pool Configuration async Thread Pool Global Jmx Statistics Configuration global Jmx Statistics Transport Configuration transport Global Security Configuration security Serialization Configuration serialization Shutdown Configuration shutdown Global State Configuration global State List modules Site Configuration site Optional String default Cache Name Class Loader cl this expiration Thread Pool expiration Thread Pool this listener Thread Pool listener Thread Pool this replication Queue Thread Pool replication Queue Thread Pool this persistence Thread Pool persistence Thread Pool this state Transfer Thread Pool state Transfer Thread Pool this async Thread Pool async Thread Pool this global Jmx Statistics global Jmx Statistics this transport transport this security security this serialization serialization this shutdown shutdown this global State global State Map Class Object module Map new Hash Map for Object module modules module Map put module get Class module this modules Collections unmodifiable Map module Map this site site this default Cache Name default Cache Name this cl new Weak Reference cl deprecated This method always returns null now Look for a thread pool named as link listener Thread Pool instead Deprecated public Executor Factory Configuration async Listener Executor return null deprecated This method always returns null now Look for a thread pool named as link persistence Thread Pool instead Deprecated public Executor Factory Configuration persistence Executor return null deprecated This method always returns null now Look for a thread pool named as link Transport Configuration transport Thread Pool instead Deprecated public Executor Factory Configuration async Transport Executor return null deprecated This method always returns null now Look for a thread pool named as link Transport Configuration remote Command Thread Pool instead Deprecated public Executor Factory Configuration remote Commands Executor return null deprecated This method always returns null now Look for a thread pool named as link expiration Thread Pool instead Deprecated public Scheduled Executor Factory Configuration eviction Scheduled Executor return null public Thread Pool Configuration expiration Thread Pool return expiration Thread Pool deprecated Use link expiration Thread Pool instead Deprecated public Thread Pool Configuration eviction Thread Pool return expiration Thread Pool public Thread Pool Configuration listener Thread Pool return listener Thread Pool deprecated Since no longer used Deprecated public Thread Pool Configuration replication Queue Thread Pool return replication Queue Thread Pool public Thread Pool Configuration persistence Thread Pool return persistence Thread Pool public Thread Pool Configuration state Transfer Thread Pool return state Transfer Thread Pool public Thread Pool Configuration async Thread Pool return async Thread Pool public Global Jmx Statistics Configuration global Jmx Statistics return global Jmx Statistics public Transport Configuration transport return transport public Global Security Configuration security return security public Serialization Configuration serialization return serialization public Shutdown Configuration shutdown return shutdown public Global State Configuration global State return global State Suppress Warnings unchecked public module Class module Class return modules get module Class public Map Class modules return modules Get the classloader in use by this configuration public Class Loader class Loader return cl get public Site Configuration sites return site public Optional String default Cache Name return default Cache Name Override public String to String return Global Configuration listener Thread Pool listener Thread Pool expiration Thread Pool expiration Thread Pool persistence Thread Pool persistence Thread Pool state Transfer Thread Pool state Transfer Thread Pool replication Queue Thread Pool replication Queue Thread Pool global Jmx Statistics global Jmx Statistics transport transport security security serialization serialization shutdown shutdown global State global State modules modules site site default Cache Name default Cache Name cl cl public boolean is Clustered return transport transport null 
package org infinispan configuration global import java lang ref Weak Reference import java lang reflect Constructor import java util Array List import java util Arrays import java util Linked List import java util List import java util Optional import org infinispan commons Cache Configuration Exception import org infinispan commons configuration Builder import org infinispan commons configuration Built By import org infinispan commons util Util public class Global Configuration Builder implements Global Configuration Child Builder private Weak Reference Class Loader cl private final Transport Configuration Builder transport private final Global Jmx Statistics Configuration Builder global Jmx Statistics private final Serialization Configuration Builder serialization private final Global Security Configuration Builder security private final Thread Pool Configuration Builder expiration Thread Pool private final Thread Pool Configuration Builder listener Thread Pool private final Thread Pool Configuration Builder replication Queue Thread Pool private final Thread Pool Configuration Builder persistence Thread Pool private final Thread Pool Configuration Builder state Transfer Thread Pool private final Thread Pool Configuration Builder async Thread Pool private final Shutdown Configuration Builder shutdown private final Global State Configuration Builder global State private final List Builder modules new Array List private final Site Configuration Builder site private Optional String default Cache Name public Global Configuration Builder In Gi contexts the should not be used Use the infinispan core bundle as default instead Class Loader default null if Util is Gi Context default Thread current Thread get Context Class Loader if default null default Global Configuration Builder class get Class Loader this cl new Weak Reference default this transport new Transport Configuration Builder this this global Jmx Statistics new Global Jmx Statistics Configuration Builder this this serialization new Serialization Configuration Builder this this security new Global Security Configuration Builder this this shutdown new Shutdown Configuration Builder this this global State new Global State Configuration Builder this this site new Site Configuration Builder this this expiration Thread Pool new Thread Pool Configuration Builder this this listener Thread Pool new Thread Pool Configuration Builder this this replication Queue Thread Pool new Thread Pool Configuration Builder this this persistence Thread Pool new Thread Pool Configuration Builder this this state Transfer Thread Pool new Thread Pool Configuration Builder this this async Thread Pool new Thread Pool Configuration Builder this this default Cache Name Optional empty Helper method that gets you a default constructed Global Configuration preconfigured to use the default clustering stack return a new global configuration public Global Configuration Builder clustered Default transport default Transport clear Properties return this Helper method that gets you a default constructed Global Configuration preconfigured for use in mode return a new global configuration public Global Configuration Builder non Clustered Default transport transport null clear Properties return this protected Class Loader get Class Loader return cl get public Global Configuration Builder class Loader Class Loader cl this cl new Weak Reference cl return this Override public Transport Configuration Builder transport return transport Override public Global Jmx Statistics Configuration Builder global Jmx Statistics return global Jmx Statistics Override public Serialization Configuration Builder serialization return serialization Deprecated Override public Thread Pool Configuration Builder eviction Thread Pool return expiration Thread Pool Override public Thread Pool Configuration Builder expiration Thread Pool return expiration Thread Pool Override public Thread Pool Configuration Builder listener Thread Pool return listener Thread Pool Deprecated Override public Thread Pool Configuration Builder replication Queue Thread Pool return replication Queue Thread Pool Override public Thread Pool Configuration Builder persistence Thread Pool return persistence Thread Pool Override public Thread Pool Configuration Builder state Transfer Thread Pool return state Transfer Thread Pool Override public Thread Pool Configuration Builder async Thread Pool return async Thread Pool Override public Global Security Configuration Builder security return security Override public Shutdown Configuration Builder shutdown return shutdown Override public List Builder modules return modules public Global Configuration Builder clear Modules modules clear return this Override public Site Configuration Builder site return site public extends Builder add Module Class klass try Constructor constructor klass get Declared Constructor Global Configuration Builder class builder constructor new Instance this this modules add builder return builder catch Exception e throw new Cache Configuration Exception Could not instantiate module configuration builder klass get Name e Override public Global State Configuration Builder global State return global State Override public Global Configuration Builder default Cache Name String default Cache Name this default Cache Name Optional of default Cache Name return this public Optional String default Cache Name return default Cache Name Suppress Warnings unchecked public void validate List Runtime Exception validation Exceptions new Array List Arrays as List expiration Thread Pool listener Thread Pool replication Queue Thread Pool persistence Thread Pool state Transfer Thread Pool async Thread Pool global Jmx Statistics transport security serialization shutdown global State site for Each c try c validate catch Runtime Exception e validation Exceptions add e modules for Each c try c validate catch Runtime Exception e validation Exceptions add e Cache Configuration Exception from Multiple Runtime Exceptions validation Exceptions if Present e throw e Override public Global Configuration build validate List Object modules Config new Linked List for Builder module modules modules Config add module create return new Global Configuration expiration Thread Pool create listener Thread Pool create replication Queue Thread Pool create persistence Thread Pool create state Transfer Thread Pool create async Thread Pool create global Jmx Statistics create transport create security create serialization create shutdown create global State create modules Config site create default Cache Name cl get public Global Configuration Builder read Global Configuration template this cl new Weak Reference template class Loader this default Cache Name template default Cache Name for Object c template modules values Built By built By c get Class get Annotation Built By class Builder Object builder this add Module built By value builder read c expiration Thread Pool read template expiration Thread Pool listener Thread Pool read template listener Thread Pool replication Queue Thread Pool read template replication Queue Thread Pool persistence Thread Pool read template persistence Thread Pool state Transfer Thread Pool read template state Transfer Thread Pool async Thread Pool read template async Thread Pool global Jmx Statistics read template global Jmx Statistics security read template security serialization read template serialization shutdown read template shutdown global State read template global State transport read template transport site read template sites return this public static Global Configuration Builder default Clustered Builder Global Configuration Builder builder new Global Configuration Builder builder transport default Transport return builder Override public String to String return Global Configuration Builder expiration Thread Pool expiration Thread Pool listener Executor Thread Pool listener Thread Pool cl cl transport transport global Jmx Statistics global Jmx Statistics serialization serialization replication Queue Thread Pool replication Queue Thread Pool persistence Thread Pool persistence Thread Pool state Transfer Thread Pool state Transfer Thread Pool async Thread Pool async Thread Pool security security shutdown shutdown global State global State site site Override public boolean equals Object o if this o return true if o null get Class o get Class return false Global Configuration Builder that Global Configuration Builder o if expiration Thread Pool equals that expiration Thread Pool return false if listener Thread Pool equals that listener Thread Pool return false if replication Queue Thread Pool equals that replication Queue Thread Pool return false if persistence Thread Pool equals that persistence Thread Pool return false if state Transfer Thread Pool equals that state Transfer Thread Pool return false if async Thread Pool equals that async Thread Pool return false if cl null cl equals that cl that cl null return false if global Jmx Statistics equals that global Jmx Statistics return false if serialization equals that serialization return false if shutdown equals that shutdown return false if site equals that site return false if security equals that security return false if global State equals that global State return false if default Cache Name equals that default Cache Name return false return transport equals that transport Override public int hash Code int result cl null cl hash Code result result transport hash Code result result global Jmx Statistics hash Code result result serialization hash Code result result expiration Thread Pool hash Code result result listener Thread Pool hash Code result result replication Queue Thread Pool hash Code result result persistence Thread Pool hash Code result result state Transfer Thread Pool hash Code result result async Thread Pool hash Code result result shutdown hash Code result result site hash Code result result security hash Code result result global State hash Code result result modules hash Code result result default Cache Name hash Code return result 
package org infinispan marshall core import java io Exception import java io Input Stream import java io Object Input import java io Object Output import java io Output Stream import java io Serializable import java lang reflect Array import java util function Bi Consumer import org infinispan commands Remote Commands Factory import org infinispan commons Cache Exception import org infinispan commons io Byte Buffer import org infinispan commons io Exposed Byte Array Output Stream import org infinispan commons marshall Advanced Externalizer import org infinispan commons marshall Buffer Size Predictor import org infinispan commons marshall Externalizer import org infinispan commons marshall Marshallable Type Hints import org infinispan commons marshall Marshaller import org infinispan commons marshall Not Serializable Exception import org infinispan commons marshall Serialize Function With import org infinispan commons marshall Serialize With import org infinispan commons marshall Streaming Marshaller import org infinispan configuration global Global Configuration import org infinispan factories Global Component Registry import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan factories scopes Scope import org infinispan factories scopes Scopes import org infinispan marshall core Class To Externalizer Map Id To Externalizer Map import org infinispan util logging Log import org infinispan util logging Log Factory globally scoped marshaller This is needed so that the transport layer can unmarshall requests even before it s known which cache s marshaller can do the job author Galder Zamarre o since Scope Scopes public class Global Marshaller implements Streaming Marshaller private static final Log log Log Factory get Log Global Marshaller class private static final boolean trace log is Trace Enabled static final int static final int x static final int x static final int x static final int x static final int x static final int x The array will be encoded as follows flags component type component type info array length element type element type info array elements ssncieee depends on type bytes eee depends on type Flags ss link link link link n link i link c link eee link link link link Element type will be present only if the link is set In that case the array elements wo n t be preceded by the instance type identifier this will be common for all elements Multidimensional arrays are not supported static final int x static final int x Type is in last bits static final int x Array size is in first bits static final int x All elements are of the same type static final int x Component type matches to instance type static final int x All elements of the array are null static final int x Length of the array static final int x static final int x static final int x static final int x private final Marshallable Type Hints marshallable Type Hints new Marshallable Type Hints private Global Component Registry gcr private Remote Commands Factory cmd Factory private Class To Externalizer Map internal Exts private Id To Externalizer Map reverse Internal Exts private Class To Externalizer Map external Exts private Id To Externalizer Map reverse External Exts private Class Identifiers class Identifiers private Marshaller external public Global Marshaller public Global Marshaller Marshaller external this external external Inject public void inject Global Component Registry gcr Remote Commands Factory cmd Factory this gcr gcr this cmd Factory cmd Factory Override Start priority Should start after the externalizer table and before transport public void start internal Exts Internal Externalizers load this gcr cmd Factory reverse Internal Exts internal Exts reverse Map Ids if trace log tracef Internal class to externalizer ids s internal Exts log tracef Internal reverse externalizers s reverse Internal Exts external Exts External Externalizers load gcr get Global Configuration reverse External Exts external Exts reverse Map if trace log tracef External class to externalizer ids s external Exts log tracef External reverse externalizers s reverse External Exts if external null this external start Default External Marshaller gcr get Global Configuration class Identifiers Class Identifiers load gcr get Global Configuration public Marshaller start Default External Marshaller Global Configuration global Cfg Streaming Marshaller marshaller new External Boss Marshaller this global Cfg marshaller start return marshaller Override Stop priority Stop after transport to avoid send receive and marshaller not being ready public void stop internal Exts clear reverse Internal Exts clear external Exts clear reverse External Exts clear class Identifiers null stop Default External Marshaller public void stop Default External Marshaller if external instanceof Streaming Marshaller Streaming Marshaller external stop Override public byte object To Byte Buffer Object obj throws Exception Interrupted Exception try Bytes Object Output out write Object Output obj return out to Bytes trim out unused bytes catch java io Not Serializable Exception nse if log is Debug Enabled log debug Object is not serializable nse throw new Not Serializable Exception nse get Message nse get Cause private Bytes Object Output write Object Output Object obj throws Exception Buffer Size Predictor size Predictor marshallable Type Hints get Buffer Size Predictor obj Bytes Object Output out write Object Output obj size Predictor next Size obj size Predictor record Size out pos return out private Bytes Object Output write Object Output Object obj int estimated Size throws Exception Bytes Object Output out new Bytes Object Output estimated Size this write Nullable Object obj out return out Override public Object object From Byte Buffer byte buf throws Exception Class Not Found Exception Bytes Object Input in Bytes Object Input from buf this return object From Object Input in private Object object From Object Input Bytes Object Input in throws Exception Class Not Found Exception return read Nullable Object in Override public Object Output start Object Output Output Stream os boolean is Reentrant int estimated Size throws Exception Bytes Object Output out new Bytes Object Output estimated Size this return new Stream Bytes Object Output os out Override public void object To Object Stream Object obj Object Output out throws Exception out write Object obj Override public void finish Object Output Object Output oo try oo flush catch Exception e ignored Override public Object object From Byte Buffer byte bytes int offset int len throws Exception Class Not Found Exception Ignore length since boundary checks are not so useful here where the unmarshalling code knows what to expect specifically g if reading a byte subset within it it s always appended with length Bytes Object Input in Bytes Object Input from bytes offset this return object From Object Input in Override public Object object From Input Stream Input Stream is throws Exception Class Not Found Exception This is a very limited use case e g reading from a Result Set Input Stream So this copying of the stream into a byte has not been problematic so far though it s not really ideal int len is available Exposed Byte Array Output Stream bytes byte buf if len bytes new Exposed Byte Array Output Stream len buf new byte Math min len else Some input stream providers do not implement available bytes new Exposed Byte Array Output Stream buf new byte int bytes Read while bytes Read is read buf buf length bytes write buf bytes Read return object From Byte Buffer bytes get Raw Buffer bytes size Override public boolean is Marshallable Object o throws Exception Class clazz o get Class boolean contains Marshallable marshallable Type Hints is Known Marshallable clazz if contains Marshallable boolean marshallable marshallable Type Hints is Marshallable clazz if trace log tracef Marshallable type s known and is marshallable b clazz get Name marshallable return marshallable else if is Marshallable Candidate o boolean is Marshallable true try object To Buffer o catch Exception e is Marshallable false throw e finally marshallable Type Hints mark Marshallable clazz is Marshallable return is Marshallable return false private boolean is Marshallable Candidate Object o return o instanceof Serializable internal Exts get o get Class null external Exts get o get Class null o get Class get Annotation Serialize With class null is External Marshallable o private boolean is External Marshallable Object o try return external is Marshallable o catch Exception e throw new Not Serializable Exception Object of type o get Class expected to be marshallable e Override public Buffer Size Predictor get Buffer Size Predictor Object o return marshallable Type Hints get Buffer Size Predictor o get Class Override public Byte Buffer object To Buffer Object o throws Exception Interrupted Exception try Bytes Object Output out write Object Output o return out to Byte Buffer catch java io Not Serializable Exception nse if log is Debug Enabled log debug Object is not serializable nse throw new Not Serializable Exception nse get Message nse get Cause Override public byte object To Byte Buffer Object obj int estimated Size throws Exception Interrupted Exception try Bytes Object Output out write Object Output obj estimated Size return out to Bytes catch java io Not Serializable Exception nse if log is Debug Enabled log debug Object is not serializable nse throw new Not Serializable Exception nse get Message nse get Cause Override public Object Input start Object Input Input Stream is boolean is Reentrant throw new Unsupported Operation Exception No longer in use Override public void finish Object Input Object Input oi throw new Unsupported Operation Exception No longer in use Override public Object object From Object Stream Object Input in throw new Unsupported Operation Exception No longer in use public Externalizer find Externalizer For Object obj Class clazz obj get Class Externalizer ext internal Exts get clazz if ext null ext external Exts get clazz if ext null ext find Annotated Externalizer clazz return ext void write Nullable Object Object obj Bytes Object Output out throws Exception if obj null out write Byte else write Non Nullable Object obj out Object read Nullable Object Bytes Object Input in throws Exception Class Not Found Exception int type in read Unsigned Byte return type null read Non Nullable Object type in Bi Consumer Object Output Object find Writer Object obj Class clazz obj get Class Advanced Externalizer internal Ext internal Exts get clazz if internal Ext null return out object write Internal Clean object internal Ext out Advanced Externalizer external Ext external Exts get clazz if external Ext null return out object write External Clean object external Ext out return null Advanced Externalizer find Externalizer In Object Input in throws Exception int type in read Unsigned Byte switch type case return reverse Internal Exts get in read Unsigned Byte case return reverse External Exts get in read Int default return null private void write Non Nullable Object Object obj Bytes Object Output out throws Exception Class clazz obj get Class int id Primitives get clazz if id write Primitive obj out id else if clazz is Array write Array clazz obj out else Advanced Externalizer ext internal Exts get clazz if ext null write Internal obj ext out else ext external Exts get clazz if ext null write External obj ext out else Externalizer annot Ext find Annotated Externalizer clazz if annot Ext null write Annotated obj out annot Ext else write Unknown obj out private void write Array Class clazz Object array Bytes Object Output out throws Exception out write Byte Class component Type clazz get Component Type int length Array get Length array boolean single Type true Class element Type null int flags if length flags else if length Primitives flags else if length Primitives flags else flags Object first Element Array get array if first Element null element Type first Element get Class for int i i length i Object element Array get array i if element null if element Type null single Type false break else if element get Class element Type single Type false break boolean component Type Match false if single Type flags if element Type null flags else if element Type component Type flags component Type Match true Advanced Externalizer ext if ext internal Exts get component Type null write Flags With Externalizer out component Type component Type Match ext flags else if ext external Exts get component Type null write Flags With Externalizer out component Type component Type Match ext flags else We can not use annotated externalizer to specify the component type so we will clear the component type match flag and use class identifier or full name Theoretically we could write annotated externalizer and component type saving one byte but it s not worth the complexity component Type Match false flags int class Id if class Id class Identifiers get Id component Type out write Byte flags if class Id Class Ids out write Byte class Id else out write Byte Class Ids out write Int class Id else out write Byte flags out write Object component Type if length else if length Primitives out write Byte length Primitives else if length Primitives out write Short length Primitives else out write Int length if single Type Externalizer element Ext int primitive Id if element Type null return else if component Type Match Note ext can be null here element Ext ext else if element Ext internal Exts get element Type null out write Byte out write Byte Advanced Externalizer element Ext get Id else if element Ext external Exts get element Type null out write Byte out write Int Advanced Externalizer element Ext get Id else if element Ext find Annotated Externalizer element Type null We could try if the externalizer class is registered in Class Identifier but most likely it is not because if an user registered it he could rather explicitly register Advanced Externalizer instead out write Byte out write Object element Ext get Class else if primitive Id Primitives get element Type out write Byte out write Byte primitive Id for int i i length i Object element Array get array i assert element null Primitives write Raw Primitive element out primitive Id We are finished return else out write Byte Do not write element type if element Ext null for int i i length i Object element Array get array i assert element null element Ext write Object out element else component type matches but this type does not have an externalizer for int i i length i Object element Array get array i assert element null write Raw Unknown element out else for int i i length i Object element Array get array i write Nullable Object element out private void write Flags With Externalizer Bytes Object Output out Class component Type boolean component Type Match Advanced Externalizer ext int flags int externalizer Type throws Exception If the class can be identified by its externalizer do that If there s a component type match write the externalizer here anyway otherwise we would have to write it as element type later If the class can not be uniquely identified by its externalizer try class identifiers boolean has Single Class ext get Type Classes size int class Id if component Type Match has Single Class out write Byte flags externalizer Type switch externalizer Type case out write Byte ext get Id break case out write Int ext get Id break default throw new Illegal State Exception if has Single Class class Id class Identifiers get Id component Type else if class Id class Identifiers get Id component Type out write Byte flags else out write Byte flags if has Single Class if class Id out write Object component Type else if class Id Class Ids out write Byte class Id else out write Byte Class Ids out write Int class Id private void write Unknown Object obj Bytes Object Output out throws Exception assert Externally Marshallable is Allowed obj Check support for obj get Class out write Byte write Raw Unknown obj out private void write Raw Unknown Object obj Bytes Object Output out throws Exception if external instanceof Streaming Marshaller Streaming Marshaller external object To Object Stream obj out else try byte bytes external object To Byte Buffer obj out write Int bytes length out write bytes catch Interrupted Exception e Thread current Thread interrupt private void write Annotated Object obj Bytes Object Output out Externalizer ext throws Exception out write Byte out write Object ext get Class ext write Object out obj private void write Internal Object obj Advanced Externalizer ext Object Output out throws Exception out write Byte out write Byte ext get Id ext write Object out obj private void write Internal Clean Object obj Advanced Externalizer ext Object Output out try write Internal obj ext out catch Exception e throw new Cache Exception e private void write External Object obj Advanced Externalizer ext Object Output out throws Exception out write Byte out write Int ext get Id ext write Object out obj private void write External Clean Object obj Advanced Externalizer ext Object Output out try write External obj ext out catch Exception e throw new Cache Exception e private void write Primitive Object obj Bytes Object Output out int id throws Exception out write Byte Primitives write Primitive obj out id private Externalizer find Annotated Externalizer Class clazz try Serialize With serial Ann clazz get Annotation Serialize With class if serial Ann null return Externalizer serial Ann value new Instance else Serialize Function With func Serial Ann clazz get Annotation Serialize Function With class if func Serial Ann null return Externalizer func Serial Ann value new Instance return null catch Exception e throw new Illegal Argument Exception String format Can not instantiate externalizer for s clazz e private Object read Non Nullable Object int type Bytes Object Input in throws Exception Class Not Found Exception switch type case return Primitives read Primitive in case return read With Externalizer in read Unsigned Byte reverse Internal Exts in case return read With Externalizer in read Int reverse External Exts in case return read Annotated in case return read Unknown in case return read Array in default throw new Exception Unknown type type private Object read With Externalizer int id Id To Externalizer Map reverse Map Bytes Object Input in throws Exception Class Not Found Exception Advanced Externalizer ext reverse Map get id return ext read Object in private Object read Annotated Bytes Object Input in throws Exception Class Not Found Exception Class extends Externalizer clazz Class extends Externalizer in read Object try Externalizer ext clazz new Instance return ext read Object in catch Exception e throw new Cache Exception Error instantiating class clazz e private Object read Array Bytes Object Input in throws Exception Class Not Found Exception int flags in read Byte int type flags Advanced Externalizer component Ext null Class ext Clazz null Class component Type switch type case case case throw new Exception Unexpected component type type case component Ext reverse Internal Exts get in read Byte component Type get Or Read Class in component Ext break case component Ext reverse External Exts get in read Int component Type get Or Read Class in component Ext break case ext Clazz Class in read Object intentional no break case component Type Class in read Object break case int class Id in read Byte if class Id Class Ids component Type class Identifiers get Class class Id else component Type class Identifiers get Class in read Int break default throw new Exception Unknown component type type int length int masked Size flags switch masked Size case length break case length in read Unsigned Byte Primitives break case length in read Unsigned Short Primitives break case length in read Int break default throw new Exception Unknown array size masked Size Object array Array new Instance component Type length if flags return array boolean single Type flags boolean component Type Match flags If component type match is set this must be a single type assert component Type Match single Type true if single Type Externalizer ext if component Type Match ext get Externalizer type component Ext ext Clazz else type in read Byte ext read Externalizer in type if ext null for int i i length i Array set array i ext read Object in else switch type case for int i i length i Array set array i read Unknown in return array case int primitive Id in read Byte for int i i length i Array set array i Primitives read Raw Primitive in primitive Id return array default throw new Illegal State Exception else for int i i length i Array set array i read Nullable Object in return array private Externalizer get Externalizer int type Advanced Externalizer component Ext Class ext Clazz throws Exception switch type case case return component Ext case try return Externalizer ext Clazz new Instance catch Exception e throw new Cache Exception Error instantiating class ext Clazz e case return null default throw new Exception Unexpected component type type private Externalizer read Externalizer Bytes Object Input in int type throws Class Not Found Exception Exception Class ext Clazz switch type case return reverse Internal Exts get in read Byte case return reverse External Exts get in read Int case ext Clazz Class in read Object try return Externalizer ext Clazz new Instance catch Exception e throw new Cache Exception Error instantiating class ext Clazz e case case return null default throw new Exception Unexpected component type type private Class get Or Read Class Bytes Object Input in Advanced Externalizer component Ext throws Class Not Found Exception Exception if component Ext get Type Classes size return component Ext get Type Classes iterator next else return Class in read Object private Object read Unknown Bytes Object Input in throws Exception Class Not Found Exception if external instanceof Streaming Marshaller try return Streaming Marshaller external object From Object Stream in catch Interrupted Exception e Thread current Thread interrupt return null else int length in read Int byte bytes new byte length in read Fully bytes return external object From Byte Buffer bytes 
package org infinispan transaction xa import java io Exception import java io Object Input import java io Object Output import java util Objects import java util Set import java util concurrent atomic Atomic Long import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan remoting transport Address Uniquely identifies a transaction that spans all Ms in a cluster This is used when replicating all modifications in a transaction the and or messages have to have a unique identifier to associate the changes with br Global Transaction should be instantiated thorough link Transaction Factory class as their type depends on the runtime configuration author a href mailto bela jboss org Bela Ban a Apr author a href mailto manik jboss org Manik Surtani manik jboss org a author Mircea Markus jboss com since public class Global Transaction implements Cloneable private static final Atomic Long sid new Atomic Long protected long id protected Address addr null private int hash code in the worst case hash Code returns then increases so we re safe here private boolean remote false empty ctor used by externalization protected Global Transaction protected Global Transaction Address addr boolean remote this id sid increment And Get this addr addr this remote remote public Address get Address return addr public long get Id return id public boolean is Remote return remote public void set Remote boolean remote this remote remote Override public int hash Code if hash code hash code addr null addr hash Code int id return hash code Override public boolean equals Object other if this other return true if other instanceof Global Transaction return false Global Transaction other Gtx Global Transaction other boolean aeq addr null other Gtx addr null addr equals other Gtx addr return aeq id other Gtx id Override public String to String return Global Tx Objects to String addr local id Returns a simplified representation of the transaction public final String global Id return get Address get Id public void set Id long id this id id public void set Address Address address this addr address Override public Object clone try return super clone catch Clone Not Supported Exception e throw new Illegal State Exception Impossible protected abstract static class Abstract Global Tx Externalizer extends Global Transaction extends Abstract Externalizer Override public void write Object Object Output output gtx throws Exception output write Long gtx id output write Object gtx addr Factory method for Global Transactions return a newly constructed instance of Global Transaction or one of its subclasses protected abstract create Global Transaction Override public read Object Object Input input throws Exception Class Not Found Exception gtx create Global Transaction gtx id input read Long gtx addr Address input read Object return gtx public static class Externalizer extends Abstract Global Tx Externalizer Global Transaction Override Suppress Warnings unchecked public Set Class extends Global Transaction get Type Classes return Util Class extends Global Transaction as Set Global Transaction class Override public Integer get Id return Ids Override protected Global Transaction create Global Transaction return Transaction Factory Tx Factory Enum new Global Transaction 
package org infinispan interceptors impl import java util List import java util Map import java util concurrent Concurrent Linked Queue import org infinispan commands remote Get Keys In Group Command import org infinispan configuration cache Configuration import org infinispan container Internal Entry Factory import org infinispan container entries Cache Entry import org infinispan container entries Entry import org infinispan context Invocation Context import org infinispan distribution Distribution Manager import org infinispan distribution group impl Group Filter import org infinispan distribution group impl Group Manager import org infinispan factories annotations Inject import org infinispan interceptors Async Interceptor import org infinispan notifications Listener import org infinispan notifications cachelistener Cache Notifier import org infinispan notifications cachelistener annotation Cache Entry Activated import org infinispan notifications cachelistener event Cache Entry Activated Event An interceptor that keeps track of the keys added removed during the processing of a link Get Keys In Group Command author Pedro Ruivo since public class Grouping Interceptor extends Async Interceptor private Cache Notifier cache Notifier private Group Manager group Manager private Internal Entry Factory factory private boolean is Passivation Enabled private Distribution Manager distribution Manager Inject public void inject Dependencies Cache Notifier cache Notifier Group Manager group Manager Internal Entry Factory factory Configuration configuration Distribution Manager distribution Manager this cache Notifier cache Notifier this group Manager group Manager this factory factory this is Passivation Enabled configuration persistence passivation this distribution Manager distribution Manager Override public Object visit Get Keys In Group Command Invocation Context ctx Get Keys In Group Command command throws Throwable final Object group Name command get Group Name no need to contact the primary owner if we are a backup owner command set Group Owner distribution Manager null distribution Manager get Cache Topology is Write Owner group Name if command is Group Owner is Passivation Enabled return invoke Next And Finally ctx command r Ctx r Command rv t if rv instanceof List noinspection unchecked filter List Cache Entry rv Key Listener listener new Key Listener group Name group Manager factory this is just to try to make the snapshot the most recent possible by picking some modification on the fly cache Notifier add Listener listener return invoke Next And Finally ctx command r Ctx r Command rv t cache Notifier remove Listener listener if rv instanceof List noinspection unchecked List rv add All listener activated Keys noinspection unchecked filter List Cache Entry rv else if rv instanceof Map for Cache Entry entry listener activated Keys noinspection unchecked Map rv put entry get Key entry get Value private void filter List Cache Entry list for int i i list size i Cache Entry entry list get i if entry instanceof Entry list set i factory create entry Listener public static class Key Listener private final Concurrent Linked Queue Cache Entry activated Keys private final Group Filter Object filter private final Internal Entry Factory factory public Key Listener Object group Name Group Manager group Manager Internal Entry Factory factory this factory factory filter new Group Filter group Name group Manager activated Keys new Concurrent Linked Queue Cache Entry Activated public void handle Remove Cache Entry Activated Event event final Object key event get Key if filter accept key activated Keys add factory create key event get Value event get Metadata 
package org infinispan distribution group impl import org infinispan distribution ch Key Partitioner Key partitioner that uses link org infinispan distribution group Group annotations to map grouped keys to the same segment author Dan Berindei since public class Grouping Partitioner implements Key Partitioner private final Key Partitioner partitioner private final Group Manager group Manager public Grouping Partitioner Key Partitioner partitioner Group Manager group Manager this partitioner partitioner this group Manager group Manager Override public int get Segment Object key Object group Key group Manager get Group key return partitioner get Segment group Key null group Key key public Key Partitioner unwrap return partitioner 
package org infinispan distribution group impl import org infinispan configuration cache Groups Configuration import org infinispan factories Abstract Named Cache Component Factory import org infinispan factories Auto Instantiable Factory import org infinispan factories annotations Default Factory For import org infinispan factories scopes Scope import org infinispan factories scopes Scopes Scope Scopes Default Factory For classes Group Manager class public class Group Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override public construct Class component Type Groups Configuration groups Configuration configuration clustering hash groups if groups Configuration enabled return null return component Type cast new Group Manager Impl groups Configuration groupers 
package org infinispan distribution group impl import static org infinispan commons util Reflection Util invoke Accessibly import java lang reflect Method import java security Access Controller import java security Privileged Action import java util Collection import java util Collections import java util List import java util concurrent Concurrent Map import org infinispan commons util Collection Factory import org infinispan commons util Reflection Util import org infinispan commons util Util import org infinispan distribution Distribution Manager import org infinispan distribution group Group import org infinispan distribution group Grouper import org infinispan factories annotations Inject import org infinispan remoting transport Address public class Group Manager Impl implements Group Manager private interface Group Metadata Group Metadata instance null Object get Group Object instance private static class Group Metadata Impl implements Group Metadata private final Method method Group Metadata Impl Method method if method get Parameter Types length throw new Illegal Argument Exception Util format String Group method s must have zero arguments method this method method Override public Object get Group Object instance Object object if System get Security Manager null return invoke Accessibly instance method Util else return Access Controller do Privileged Privileged Action Object invoke Accessibly instance method Util private static Group Metadata create Group Metadata Class clazz Collection Method possible Methods if System get Security Manager null possible Methods Reflection Util get All Methods clazz Group class else possible Methods Access Controller do Privileged Privileged Action List Method Reflection Util get All Methods clazz Group class if possible Methods is Empty return Group Metadata else if possible Methods size return new Group Metadata Impl possible Methods iterator next else throw new Illegal State Exception Util format String Can not define more that one Group method for class hierarchy rooted at s clazz get Name private final Concurrent Map Class Group Metadata group Metadata Cache private final List Grouper groupers private Distribution Manager distribution Manager public Group Manager Impl List Grouper groupers this group Metadata Cache Collection Factory make Concurrent Map if groupers null this groupers groupers else this groupers Collections empty List Inject public void inject Dependencies Distribution Manager distribution Manager this distribution Manager distribution Manager Override public Object get Group Object key Group Metadata metadata get Metadata key if metadata null return apply Groupers metadata get Group key key else return apply Groupers null key Override public boolean is Owner Object group return distribution Manager get Cache Topology is Write Owner group Override public Address get Primary Owner Object group return distribution Manager get Cache Topology get Distribution group primary Override public boolean is Primary Owner Object group return distribution Manager get Cache Topology get Distribution group is Primary private Object apply Groupers Object group Object key for Grouper grouper groupers if grouper get Key Type is Assignable From key get Class group Grouper Object grouper compute Group key group return group private Group Metadata get Metadata final Object key final Class key Class key get Class Group Metadata group Metadata group Metadata Cache get key Class if group Metadata null this is not ideal as it is possible for the group metadata to be redundantly calculated several times however profiling showed that using the Map Class Future cache approach is significantly slower on the long run group Metadata create Group Metadata key Class Group Metadata previous group Metadata Cache put If Absent key Class group Metadata if previous null in case another thread added a metadata already discard what we created and reuse the existing return previous return group Metadata 
package org infinispan configuration cache import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set import org infinispan commons configuration attributes Identity Attribute Copier import org infinispan commons configuration attributes Simple Instance Attribute Copier import org infinispan commons hash Hash import org infinispan commons hash Murmur Hash import org infinispan distribution ch Consistent Hash import org infinispan distribution ch Consistent Hash Factory import org infinispan distribution ch Key Partitioner import org infinispan distribution ch impl Hash Function Partitioner Allows fine tuning of rehashing characteristics Must only used with distributed cache mode author pmuir public class Hash Configuration public static final Attribute Definition Consistent Hash Factory Attribute Definition builder consistent Hash Factory null Consistent Hash Factory class immutable build public static final Attribute Definition Hash Attribute Definition builder hash Hash Murmur Hash get Instance copier Identity Attribute Copier immutable build public static final Attribute Definition Integer Attribute Definition builder num Owners xml Name owners immutable build Because it assigns owners randomly Sync Consistent Hash Factory does n t work very well with a low number of segments With Default Consistent Hash Factory segments was ok up to nodes public static final Attribute Definition Integer Attribute Definition builder num Segments xml Name segments immutable build public static final Attribute Definition Float Attribute Definition builder capacity Factor f immutable xml Name capacity build public static final Attribute Definition Key Partitioner Attribute Definition builder key Partitioner new Hash Function Partitioner Key Partitioner class copier Simple Instance Attribute Copier immutable build static Attribute Set attribute Definition Set return new Attribute Set Hash Configuration class private final Attribute Consistent Hash Factory consistent Hash Factory private final Attribute Hash hash private final Attribute Integer num Owners private final Attribute Integer num Segments private final Attribute Float capacity Factor private final Attribute Key Partitioner key Partitioner private final Groups Configuration groups Configuration private final State Transfer Configuration state Transfer Configuration private final Attribute Set attributes Hash Configuration Attribute Set attributes Groups Configuration groups Configuration State Transfer Configuration state Transfer Configuration this attributes attributes check Protection this groups Configuration groups Configuration this state Transfer Configuration state Transfer Configuration consistent Hash Factory attributes attribute hash attributes attribute num Owners attributes attribute num Segments attributes attribute capacity Factor attributes attribute key Partitioner attributes attribute deprecated Since replaced by link consistent Hash Factory Deprecated public Consistent Hash consistent Hash return null The consistent hash factory in use public Consistent Hash Factory consistent Hash Factory return consistent Hash Factory get The hash function in use Used as a bit spreader and a general hash code generator Typically one of the the many default link org infinispan distribution ch Consistent Hash implementations shipped deprecated Since use link key Partitioner instead Deprecated public Hash hash return hash get Number of cluster wide replicas for each cache entry public int num Owners return num Owners get Controls the total number of hash space segments per cluster p hash space segment is the granularity for key distribution in the cluster a node can own or primary own one or more full segments but not a fraction of a segment As such larger code num Segments values will mean a more even distribution of keys between nodes p On the other hand the memory bandwidth usage of the new consistent hash grows linearly with code num Segments So we recommend keeping code num Segments cluster Size public int num Segments return num Segments get If false no rebalancing or rehashing will take place when a new node joins the cluster or a node leaves deprecated Use link org infinispan configuration cache State Transfer Configuration fetch In Memory State instead Deprecated public boolean rehash Enabled return state Transfer Configuration fetch In Memory State Rehashing timeout deprecated Use link org infinispan configuration cache State Transfer Configuration timeout instead Deprecated public long rehash Rpc Timeout return state Transfer Configuration timeout deprecated Use link org infinispan configuration cache State Transfer Configuration timeout instead Deprecated public long rehash Wait return state Transfer Configuration timeout Controls the proportion of entries that will reside on the local node compared to the other nodes in the cluster This is just a suggestion there is no guarantee that a node with a capacity factor of code will have twice as many entries as a node with a capacity factor of code public float capacity Factor return capacity Factor get public Key Partitioner key Partitioner return key Partitioner get Configuration for various grouper definitions See the user guide for more information public Groups Configuration groups return groups Configuration public Attribute Set attributes return attributes Override public String to String return Hash Configuration attributes attributes Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Hash Configuration other Hash Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result 
package org infinispan configuration cache import static org infinispan configuration cache Hash Configuration import static org infinispan configuration cache Hash Configuration import static org infinispan configuration cache Hash Configuration import static org infinispan configuration cache Hash Configuration import static org infinispan configuration cache Hash Configuration import static org infinispan configuration cache Hash Configuration import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan commons hash Hash import org infinispan configuration global Global Configuration import org infinispan distribution ch Consistent Hash import org infinispan distribution ch Consistent Hash Factory import org infinispan distribution ch Key Partitioner import org infinispan util logging Log import org infinispan util logging Log Factory Allows fine tuning of rehashing characteristics Must only used with distributed cache mode author pmuir public class Hash Configuration Builder extends Abstract Clustering Configuration Child Builder implements Builder Hash Configuration private static final Log log Log Factory get Log Hash Configuration Builder class private final Attribute Set attributes private final Groups Configuration Builder groups Configuration Builder Hash Configuration Builder Clustering Configuration Builder builder super builder this attributes Hash Configuration attribute Definition Set this groups Configuration Builder new Groups Configuration Builder builder deprecated Since replaced by link consistent Hash Factory Consistent Hash Factory Deprecated public Hash Configuration Builder consistent Hash Consistent Hash consistent Hash log consistent Hash Deprecated return this The consistent hash factory in use public Hash Configuration Builder consistent Hash Factory Consistent Hash Factory extends Consistent Hash consistent Hash Factory attributes attribute set consistent Hash Factory return this Number of cluster wide replicas for each cache entry public Hash Configuration Builder num Owners int num Owners if num Owners throw new Illegal Argument Exception num Owners can not be less than attributes attribute set num Owners return this boolean is Num Owners Set return attributes attribute is Modified int num Owners return attributes attribute get deprecated No longer used since replaced by link num Segments int which works like a code num Virtual Nodes value for the entire cluster Deprecated public Hash Configuration Builder num Virtual Nodes int num Virtual Nodes log hash Num Virtual Nodes Deprecated return this Controls the total number of hash space segments per cluster p hash space segment is the granularity for key distribution in the cluster a node can own or primary own one or more full segments but not a fraction of a segment As such larger code num Segments values will mean a more even distribution of keys between nodes p On the other hand the memory bandwidth usage of the new consistent hash grows linearly with code num Segments So we recommend keeping code num Segments cluster Size param num Segments the number of hash space segments Must be strictly positive public Hash Configuration Builder num Segments int num Segments if num Segments throw new Illegal Argument Exception num Segments can not be less than attributes attribute set num Segments return this Enable rebalancing and rehashing which will take place when a new node joins the cluster or a node leaves deprecated Use link State Transfer Configuration Builder fetch In Memory State boolean instead Deprecated public Hash Configuration Builder rehash Enabled state Transfer fetch In Memory State true return this Enable rebalancing and rehashing which will take place when a new node joins the cluster or a node leaves deprecated Use link State Transfer Configuration Builder fetch In Memory State boolean instead Deprecated public Hash Configuration Builder rehash Enabled boolean enabled state Transfer fetch In Memory State enabled return this Disable rebalancing and rehashing which would have taken place when a new node joins the cluster or a node leaves deprecated Use link State Transfer Configuration Builder fetch In Memory State boolean instead Deprecated public Hash Configuration Builder rehash Disabled state Transfer fetch In Memory State false return this Rehashing timeout deprecated Use link State Transfer Configuration Builder timeout long instead Deprecated public Hash Configuration Builder rehash Rpc Timeout long rehash Rpc Timeout state Transfer timeout rehash Rpc Timeout return this deprecated No longer used Deprecated public Hash Configuration Builder rehash Wait long rehash Wait return this The hash function in use Used as a bit spreader and a general hash code generator Typically used in conjunction with the many default link org infinispan distribution ch Consistent Hash implementations shipped Currently Infinispan will not use the object instance but instead instantiate a new instance of the class Therefore do not expect any state to survive and provide a no args constructor to any instance This will be resolved in Infinispan deprecated Since use link key Partitioner Key Partitioner instead Deprecated public Hash Configuration Builder hash Hash hash attributes attribute set hash return this Controls the proportion of entries that will reside on the local node compared to the other nodes in the cluster This is just a suggestion there is no guarantee that a node with a capacity factor of code will have twice as many entries as a node with a capacity factor of code param capacity Factor the capacity factor for the local node Must be positive public Hash Configuration Builder capacity Factor float capacity Factor if capacity Factor throw new Illegal Argument Exception capacity Factor must be positive attributes attribute set capacity Factor return this Key partitioner controlling the mapping of keys to hash segments p The default implementation code org infinispan distribution ch impl Hash Function Partitioner uses the hash function configured via link hash Hash Future versions may ignore the hash function since public Hash Configuration Builder key Partitioner Key Partitioner key Partitioner attributes attribute set key Partitioner return this public Groups Configuration Builder groups return groups Configuration Builder Override public void validate groups Configuration Builder validate Override public void validate Global Configuration global Config groups Configuration Builder validate global Config Override public Hash Configuration create state Transfer create will create a duplicate State Transfer Configuration instance That s ok as long as none of the state Transfer settings are modifiable at runtime return new Hash Configuration attributes protect groups Configuration Builder create state Transfer create Override public Hash Configuration Builder read Hash Configuration template this attributes read template attributes this groups Configuration Builder read template groups return this Override public String to String return Hash Configuration Builder attributes attributes groups Configuration Builder groups Configuration Builder 
package org infinispan distribution ch impl import java util Array List import java util List import java util Objects import org infinispan commons hash Hash import org infinispan commons util Util import org infinispan configuration cache Hash Configuration import org infinispan distribution ch Key Partitioner Key partitioner that computes a key s segment based on a hash function author Dan Berindei since public class Hash Function Partitioner implements Key Partitioner private Hash hash Function private int num Segments private int segment Size Override public void init Hash Configuration configuration Objects require Non Null configuration init configuration hash configuration num Segments private void init Hash hash Function int num Segments Objects require Non Null hash Function if num Segments throw new Illegal Argument Exception num Segments must be strictly positive this hash Function hash Function this num Segments num Segments this segment Size Util get Segment Size num Segments Override public int get Segment Object key The result must always be positive so we make sure the dividend is positive first return hash Function hash key Integer segment Size public Hash get Hash return hash Function public List Integer get Segment End Hashes List Integer hashes new Array List num Segments for int i i num Segments i hashes add i num Segments segment Size return hashes Override public boolean equals Object o if this o return true if o null get Class o get Class return false Hash Function Partitioner that Hash Function Partitioner o if num Segments that num Segments return false return Objects equals hash Function that hash Function Override public int hash Code int result hash Function null hash Function hash Code result result num Segments return result Override public String to String return Hash Function Partitioner hash Function hash Function ns num Segments 
package org infinispan container entries import static org infinispan commons util Util to Str import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan metadata Embedded Metadata import org infinispan metadata Metadata cache entry that is immortal can not expire author Manik Surtani since public class Immortal Cache Entry extends Abstract Internal Cache Entry public Object value public Immortal Cache Entry Object key Object value super key this value value Override public final boolean is Expired long now return false Override public final boolean is Expired return false Override public final boolean can Expire return false Override public final long get Created return Override public final long get Last Used return Override public final long get Lifespan return Override public final long get Max Idle return Override public final long get Expiry Time return Override public final void touch no op Override public void touch long current Time Millis no op Override public final void reincarnate no op Override public void reincarnate long now no op Override public Internal Cache Value to Internal Cache Value return new Immortal Cache Value value Override public Object get Value return value Override public Object set Value Object value return this value value Override public Metadata get Metadata return new Embedded Metadata Builder build Override public void set Metadata Metadata metadata throw new Illegal State Exception Metadata can not be set on immortal entries They need to be recreated via the entry factory Override public Immortal Cache Entry clone return Immortal Cache Entry super clone public static class Externalizer extends Abstract Externalizer Immortal Cache Entry Override public void write Object Object Output output Immortal Cache Entry ice throws Exception output write Object ice key output write Object ice value Override public Immortal Cache Entry read Object Object Input input throws Exception Class Not Found Exception Object k input read Object Object v input read Object return new Immortal Cache Entry k v Override public Integer get Id return Ids Override public Set Class extends Immortal Cache Entry get Type Classes return Util as Set Immortal Cache Entry class Override public String to String return Immortal Cache Entry key to Str key value to Str value 
package org infinispan container entries import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan metadata Embedded Metadata import org infinispan metadata Metadata An immortal cache value to correspond with link org infinispan container entries Immortal Cache Entry author Manik Surtani since public class Immortal Cache Value implements Internal Cache Value Cloneable public Object value public Immortal Cache Value Object value this value value Override public Internal Cache Entry to Internal Cache Entry Object key return new Immortal Cache Entry key value public final Object set Value Object value Object old this value this value value return old Override public Object get Value return value Override public boolean is Expired long now return false Override public boolean is Expired return false Override public boolean can Expire return false Override public long get Created return Override public long get Last Used return Override public long get Lifespan return Override public long get Max Idle return Override public long get Expiry Time return Override public Metadata get Metadata return new Embedded Metadata Builder lifespan get Lifespan max Idle get Max Idle build Override public boolean equals Object o if this o return true if o instanceof Immortal Cache Value return false Immortal Cache Value that Immortal Cache Value o if value null value equals that value that value null return false return true Override public int hash Code return value null value hash Code Override public String to String return get Class get Simple Name value value Override public Immortal Cache Value clone try return Immortal Cache Value super clone catch Clone Not Supported Exception e throw new Runtime Exception Should never happen e public static class Externalizer extends Abstract Externalizer Immortal Cache Value Override public void write Object Object Output output Immortal Cache Value icv throws Exception output write Object icv value Override public Immortal Cache Value read Object Object Input input throws Exception Class Not Found Exception Object v input read Object return new Immortal Cache Value v Override public Integer get Id return Ids Override public Set Class extends Immortal Cache Value get Type Classes return Util Class extends Immortal Cache Value as Set Immortal Cache Value class 
package org infinispan commons util import java io Exception import java io Input Stream import java io Object Input import java io Object Output import java io Reader import java io Serializable import java lang reflect Array import java util Array List import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Map Entry import java util Objects import java util Set import org infinispan commons marshall Abstract Externalizer import org infinispan commons marshall Ids import org infinispan commons marshall Marshall Util Factory for generating immutable type wrappers author Jason Greene author Galder Zamarre o author Tristan Tarrant since public class Immutables Whether or not this collection type is immutable param o a Collection Set List or Map return true if immutable false if not public static boolean is Immutable Object o return o instanceof Immutable Converts a Collection to an immutable List by copying it param source the collection to convert return a copied converted immutable list public static List immutable List Convert Collection extends source return new Immutable List Copy source Creates an immutable copy of the list param list the list to copy return the immutable copy public static List immutable List Copy List list if list null return null if list is Empty return Collections empty List if list size return Collections singleton List list get return new Immutable List Copy list Creates an immutable copy of the properties param properties the Typed Properties to copy return the immutable copy public static Typed Properties immutable Typed Properties Typed Properties properties if properties null return null return new Immutable Typed Properties properties Wraps an array with an immutable list There is no copying involved param param array the array to wrap return a list containing the array public static List immutable List Wrap array return new Immutable List Copy array Creates a new immutable list containing the union combined entries of both lists param list contains the first elements of the new list param list contains the successor elements of the new list return a new immutable merged copy of list and list public static List immutable List Merge List extends list List extends list return new Immutable List Copy list list public static Immutable List Copy immutable List Add List list int position element copy new Object list size for int i i position i copy i list get i copy position element for int i position i list size i copy i list get i return new Immutable List Copy copy public static Immutable List Copy immutable List Replace List list int position element copy new Object list size for int i i position i copy i list get i copy position element for int i position i list size i copy i list get i return new Immutable List Copy copy public static List immutable List Remove List list int position copy new Object list size for int i i position i copy i list get i for int i position i list size i copy i list get i return new Immutable List Copy copy Converts a Collections into an immutable Set by copying it param collection the collection to convert copy return a new immutable set containing the elements in collection public static Set immutable Set Convert Collection extends collection return immutable Set Wrap new Hash Set collection Wraps a set with an immutable set There is no copying involved param set the set to wrap return an immutable set wrapper that delegates to the original set public static Set immutable Set Wrap Set extends set return new Immutable Set Wrapper set Creates an immutable copy of the specified set param set the set to copy from return an immutable set copy public static Set immutable Set Copy Set set if set null return null if set is Empty return Collections empty Set if set size return Collections singleton set iterator next Set extends copy Object Duplicator duplicate Set set if copy null Set uses Collection copy ctor copy attempt Copy Constructor set Collection class if copy null copy new Hash Set set return new Immutable Set Wrapper copy Wraps a map with an immutable map There is no copying involved param map the map to wrap return an immutable map wrapper that delegates to the original map public static Map immutable Map Wrap Map extends extends map return new Immutable Map Wrapper map Creates an immutable copy of the specified map param map the map to copy from return an immutable map copy public static Map immutable Map Copy Map map if map null return null if map is Empty return Collections empty Map if map size Map Entry me map entry Set iterator next return Collections singleton Map me get Key me get Value Map extends extends copy Object Duplicator duplicate Map map if copy null copy attempt Copy Constructor map Map class if copy null copy new Hash Map map return new Immutable Map Wrapper copy Creates a new immutable copy of the specified Collection param collection the collection to copy return an immutable copy public static Collection immutable Collection Copy Collection collection if collection null return null if collection is Empty return Collections empty Set if collection size return Collections singleton collection iterator next Collection extends copy Object Duplicator duplicate Collection collection if copy null copy attempt Copy Constructor collection Collection class if copy null copy new Array List collection return new Immutable Collection Wrapper copy Wraps a collection with an immutable collection There is no copying involved param collection the collection to wrap return an immutable collection wrapper that delegates to the original collection public static Collection immutable Collection Wrap Collection extends collection return new Immutable Collection Wrapper collection Suppress Warnings unchecked private static attempt Copy Constructor source Class super clazz try return source get Class get Constructor clazz new Instance source catch Exception e return null Wraps a link Map Entry with an immutable link Map Entry There is no copying involved param entry the mapping to wrap return an immutable link Map Entry wrapper that delegates to the original mapping public static Map Entry immutable Entry Map Entry entry return new Immutable Entry entry Wraps a key and value with an immutable link Map Entry There is no copying involved param key the key to wrap param value the value to wrap return an immutable link Map Entry wrapper that delegates to the original mapping public static Map Entry immutable Entry key value return new Immutable Entry key value public interface Immutable Immutable wrapper types We have to re implement Collections unmodifiable since it is not simple to detect them the class names are dependent private static class Immutable Iterator Wrapper implements Iterator private Iterator extends iterator public Immutable Iterator Wrapper Iterator extends iterator this iterator iterator Override public boolean has Next return iterator has Next Override public next return iterator next Override public void remove throw new Unsupported Operation Exception private static class Immutable Collection Wrapper implements Collection Serializable Immutable private static final long serial Version Collection extends collection public Immutable Collection Wrapper Collection extends collection this collection collection Override public boolean add o throw new Unsupported Operation Exception Override public boolean add All Collection extends c throw new Unsupported Operation Exception Override public void clear throw new Unsupported Operation Exception Override public boolean contains Object o return collection contains o Override public boolean contains All Collection c return collection contains All c Override public boolean equals Object o return collection equals o Override public int hash Code return collection hash Code Override public boolean is Empty return collection is Empty Override public Iterator iterator return new Immutable Iterator Wrapper collection iterator Override public boolean remove Object o throw new Unsupported Operation Exception Override public boolean remove All Collection c throw new Unsupported Operation Exception Override public boolean retain All Collection c throw new Unsupported Operation Exception Override public int size return collection size Override public Object to Array return collection to Array Override public to Array a return collection to Array a Override public String to String return collection to String Immutable version of Map Entry for traversing immutable collections private static class Immutable Entry implements Entry Immutable private key private value private int hash Immutable Entry Entry extends extends entry this key entry get Key this value entry get Value this hash entry hash Code Immutable Entry key value this key key this value value this hash Objects hash Code key Objects hash Code value Override public get Key return key Override public get Value return value Override public set Value value throw new Unsupported Operation Exception private static boolean eq Object o Object o return o o o null o equals o Override Suppress Warnings unchecked public boolean equals Object o if o instanceof Entry return false Entry entry Entry o return eq entry get Key key eq entry get Value value Override public int hash Code return hash Override public String to String return get Key get Value private static class Immutable Set Wrapper extends Immutable Collection Wrapper implements Set Serializable Immutable private static final long serial Version public Immutable Set Wrapper Set extends set super set private static class Immutable Reversible Ordered Set Wrapper extends Immutable Collection Wrapper implements Reversible Ordered Set Serializable Immutable private static final long serial Version public Immutable Reversible Ordered Set Wrapper Set extends set super set Override public Iterator reverse Iterator return new Immutable Iterator Wrapper Reversible Ordered Set extends collection reverse Iterator private static class Immutable Entry Set Wrapper extends Immutable Set Wrapper Entry private static final long serial Version Suppress Warnings unchecked public Immutable Entry Set Wrapper Set extends Entry extends extends set super Set Entry set Override public Object to Array Object array new Object collection size int i for Entry entry this array i entry return array Override Suppress Warnings unchecked public to Array array int size collection size if array length size array Array new Instance array get Class get Component Type size int i Object result array for Entry entry this result i entry return array Override public Iterator Entry iterator return new Immutable Iterator Wrapper Entry collection iterator Override public Entry next return new Immutable Entry super next public static class Immutable Set Wrapper Externalizer extends Abstract Externalizer Set Override public void write Object Object Output output Set set throws Exception Marshall Util marshall Collection set output Override public Set read Object Object Input input throws Exception Class Not Found Exception Set Object set Marshall Util unmarshall Collection input Hash Set new return Immutables immutable Set Wrap set Override public Integer get Id return Ids Override Suppress Warnings unchecked public Set Class extends Set get Type Classes return Util as Set Immutable Set Wrapper class private static class Immutable Map Wrapper implements Map Serializable Immutable private static final long serial Version private Map extends extends map public Immutable Map Wrapper Map extends extends map this map map Override public void clear throw new Unsupported Operation Exception Override public boolean contains Key Object key return map contains Key key Override public boolean contains Value Object value return map contains Value value Override public Set Entry entry Set return new Immutable Entry Set Wrapper map entry Set Override public boolean equals Object o return map equals o Override public get Object key return map get key Override public int hash Code return map hash Code Override public boolean is Empty return map is Empty Override public Set key Set return new Immutable Set Wrapper map key Set Override public put key value throw new Unsupported Operation Exception Override public void put All Map extends extends t throw new Unsupported Operation Exception Override public remove Object key throw new Unsupported Operation Exception Override public int size return map size Override public Collection values return new Immutable Collection Wrapper map values Override public String to String return map to String public static class Immutable Map Wrapper Externalizer extends Abstract Externalizer Map Override public void write Object Object Output output Map map throws Exception Marshall Util marshall Map map output Override public Map read Object Object Input input throws Exception Class Not Found Exception return Immutables immutable Map Wrap Marshall Util unmarshall Map input Hash Map new Override public Integer get Id return Ids Override Suppress Warnings unchecked public Set Class extends Map get Type Classes return Util as Set Immutable Map Wrapper class private static class Immutable Typed Properties extends Typed Properties Immutable Typed Properties Typed Properties properties super if properties null properties is Empty for Map Entry Object Object e properties entry Set super put e get Key e get Value Override public synchronized void clear throw new Unsupported Operation Exception Override public Set java util Map Entry Object Object entry Set return new Immutable Entry Set Wrapper super entry Set Override public Set Object key Set return new Immutable Set Wrapper super key Set Override public synchronized void load Input Stream in Stream throws Exception throw new Unsupported Operation Exception Override public synchronized void load Reader reader throws Exception throw new Unsupported Operation Exception Override public synchronized void load From Input Stream in throws Exception throw new Unsupported Operation Exception Override public synchronized Object put Object key Object value throw new Unsupported Operation Exception Override public synchronized void put All Map t throw new Unsupported Operation Exception Override public synchronized Object remove Object key throw new Unsupported Operation Exception Override public synchronized Typed Properties set Property String key String value throw new Unsupported Operation Exception Override public Set String string Property Names return new Immutable Set Wrapper super string Property Names Override public Collection Object values return new Immutable Collection Wrapper super values 
package org infinispan persistence sifs import java io File import java io Exception import java io Random Access File import java nio Byte Buffer import java nio channels File Channel import java util Array List import java util List import java util Map import java util Tree Map import java util concurrent Blocking Queue import java util concurrent Count Down Latch import java util concurrent atomic Atomic Long import java util concurrent locks Lock import java util concurrent locks Read Write Lock import java util concurrent locks Reentrant Read Write Lock import org infinispan util Time Service import org infinispan util logging Log import org infinispan util logging Log Factory Keeps the entry positions persisted in a file It consists of couple of segments each for one modulo range of key s hashcodes according to Data Container s key equivalence configuration writes to each index segment are performed by single thread having multiple segments spreads the load between them author Radim Vansa lt rvansa redhat com gt class Index private static final Log log Log Factory get Log Index class private static final boolean trace log is Trace Enabled private static final int x private static final int x protected static final int private final String index Dir private final File Provider file Provider private final Compactor compactor private final int min Node Size private final int max Node Size private final Read Write Lock lock new Reentrant Read Write Lock private final Segment segments private final Time Service time Service public Index File Provider file Provider String index Dir int segments int min Node Size int max Node Size Index Queue index Queue Temporary Table temporary Table Compactor compactor Time Service time Service throws Exception this file Provider file Provider this compactor compactor this time Service time Service this index Dir index Dir this min Node Size min Node Size this max Node Size max Node Size new File index Dir mkdirs this segments new Segment segments for int i i segments i this segments i new Segment i index Queue sub Queue i temporary Table return True if the index was loaded from well persisted state public boolean is Loaded for int i i segments length i if segments i loaded return false return true public void start for int i i segments length i segments i start Get record or null if expired param key param serialized Key return throws Exception public Entry Record get Record Object key byte serialized Key throws Exception int segment key hash Code Integer segments length lock read Lock lock try return Index Node apply On Leaf segments segment serialized Key segments segment root Read Lock Index Node Read Operation finally lock read Lock unlock Get position or null if expired param key param serialized Key return throws Exception public Entry Position get Position Object key byte serialized Key throws Exception int segment key hash Code Integer segments length lock read Lock lock try return Index Node apply On Leaf segments segment serialized Key segments segment root Read Lock Index Node Read Operation finally lock read Lock unlock Get position num Records without expiration param key param serialized Key return throws Exception public Entry Info get Info Object key byte serialized Key throws Exception int segment key hash Code Integer segments length lock read Lock lock try return Index Node apply On Leaf segments segment serialized Key segments segment root Read Lock Index Node Read Operation finally lock read Lock unlock public void clear throws Exception lock write Lock lock try Array List Count Down Latch pauses new Array List Count Down Latch for Segment seg segments pauses add seg pause And Clear for Count Down Latch pause pauses pause count Down catch Interrupted Exception e throw new Runtime Exception e finally lock write Lock unlock public void stop Operations throws Interrupted Exception for Segment seg segments seg stop Operations public long size throws Interrupted Exception long size for Segment seg segments size seg size return size class Segment extends Thread private final Blocking Queue Index Request index Queue private final Temporary Table temporary Table private final Tree Map Integer List Index Space free Blocks new Tree Map Integer List Index Space private final Read Write Lock root Lock new Reentrant Read Write Lock private final File index File File private final boolean loaded private File Channel index File private long index File Size private Atomic Long size new Atomic Long private volatile Index Node root private Segment int id Blocking Queue Index Request index Queue Temporary Table temporary Table throws Exception super Index Updater id this set Daemon true this index Queue index Queue this temporary Table temporary Table this index File File new File index Dir index id this index File new Random Access File index File File rw get Channel index File position Byte Buffer buffer Byte Buffer allocate if index File size read index File buffer buffer get Int long root Offset buffer get Long short root Occupied buffer get Short long free Blocks Offset buffer get Long size set buffer get Long root new Index Node this root Offset root Occupied load Free Blocks free Blocks Offset index File Size free Blocks Offset loaded true else this index File truncate root Index Node empty With Leaves this loaded false reserve space for shutdown index File Size buffer put Int buffer position buffer limit index File position write index File buffer private void write File Channel index File Byte Buffer buffer throws Exception do int written index File write buffer if written throw new Illegal State Exception Can not write to index file while buffer position buffer limit private boolean read File Channel index File Byte Buffer buffer throws Exception do int read index File read buffer if read return false while buffer position buffer limit return true Override public void run try int counter while true if counter log debug Queue size is index Queue size final Index Request request index Queue take if trace log trace Indexing request Index Node Overwrite Hook overwrite Hook Index Node Record Change record Change switch request get Type case Index Request cleared while cleared index Queue poll null cleared set Result false Count Down Latch pause new Count Down Latch request set Result pause log debug Waiting for cleared pause await continue case the last segment that processes the delete request actually deletes the file if request count Down file Provider delete File request get File compactor release Stats request get File continue case assert index Queue poll null shutdown return case request set Result size get continue case record Change Index Node Record Change overwrite Hook new Index Node Overwrite Hook Override public boolean check int old File int old Offset return old File request get Prev File old Offset request get Prev Offset Override public void set Overwritten boolean overwritten int prev File int prev Offset if overwritten request get Offset request get Prev Offset size decrement And Get break case record Change Index Node Record Change overwrite Hook new Index Node Overwrite Hook Override public void set Overwritten boolean overwritten int prev File int prev Offset request set Result overwritten if request get Offset prev Offset size increment And Get else if request get Offset prev Offset size decrement And Get break case record Change Index Node Record Change overwrite Hook new Index Node Overwrite Hook Override public void set Overwritten boolean overwritten int prev File int prev Offset if request get Prev File prev File request get Prev Offset prev Offset size decrement And Get break case record Change Index Node Record Change overwrite Hook Index Node Overwrite Hook break default throw new Illegal Argument Exception request to String try Index Node set Position root request get Serialized Key request get File request get Offset request get Size overwrite Hook record Change catch Illegal State Exception e throw new Illegal State Exception request to String e temporary Table remove Conditionally request get Key request get File request get Offset catch Exception e throw new Runtime Exception e catch Interrupted Exception e throw new Runtime Exception e catch Throwable e log error Error in indexer thread e finally try index File close catch Exception e log error Failed to close delete the index e private void shutdown throws Exception Index Space root Space allocate Index Space root length root store root Space index File position index File Size Byte Buffer buffer Byte Buffer allocate buffer put Int free Blocks size write index File buffer for Map Entry Integer List Index Space entry free Blocks entry Set List Index Space list entry get Value int required Size list size buffer buffer capacity required Size Byte Buffer allocate required Size buffer buffer position buffer limit required Size buffer put Int entry get Key buffer put Int list size for Index Space space list buffer put Long space offset buffer put Short short space length buffer flip write index File buffer int header Without Magic buffer buffer capacity header Without Magic Byte Buffer allocate header Without Magic buffer buffer put Long root Space offset buffer put Short short root Space length buffer put Long index File Size buffer put Long size get buffer position buffer limit header Without Magic index File position write index File buffer buffer put Int buffer position buffer limit index File position write index File buffer private void load Free Blocks long free Blocks Offset throws Exception index File position free Blocks Offset Byte Buffer buffer Byte Buffer allocate buffer limit if read index File buffer throw new Exception Can not read free blocks lists int num Lists buffer get Int for int i i num Lists i buffer position buffer limit if read index File buffer throw new Exception Can not read free blocks lists int block Length buffer get Int int list Size buffer get Int int required Size list Size buffer buffer capacity required Size Byte Buffer allocate required Size buffer buffer position buffer limit required Size if read index File buffer throw new Exception Can not read free blocks lists buffer flip Array List Index Space list new Array List list Size for int j j list Size j list add new Index Space buffer get Long buffer get Short free Blocks put block Length list public Count Down Latch pause And Clear throws Interrupted Exception Exception Index Request clear Index Request clear Request index Queue put clear Count Down Latch pause Count Down Latch clear get Result root Index Node empty With Leaves this index File truncate index File Size free Blocks clear size set return pause public long size throws Interrupted Exception Index Request size Request Index Request size Request index Queue put size Request return Long size Request get Result public File Channel get Index File return index File public File Provider get File Provider return file Provider public Compactor get Compactor return compactor public Index Node get Root this has to be called with root Lock locked return root public void set Root Index Node root root Lock write Lock lock this root root root Lock write Lock unlock public int get Max Node Size return max Node Size public int get Min Node Size return min Node Size this should be accessed only from the updater thread Index Space allocate Index Space int length Map Entry Integer List Index Space entry free Blocks ceiling Entry length if entry null entry get Value is Empty long old Size index File Size index File Size length return new Index Space old Size length else return entry get Value remove entry get Value size this should be accessed only from the updater thread void free Index Space long offset int length if length throw new Illegal Argument Exception Offset offset length length fragmentation memory bounds if offset length index File Size List Index Space list free Blocks get length if list null free Blocks put length list new Array List Index Space list add new Index Space offset length else index File Size length try index File truncate index File Size catch Exception e log warn Can not truncate index e public Lock root Read Lock return root Lock read Lock public void stop Operations throws Interrupted Exception index Queue put Index Request stop Request this join public Time Service get Time Service return time Service Offset length pair static class Index Space protected long offset protected int length public Index Space long offset int length this offset offset this length length Override public boolean equals Object o if this o return true if o null o instanceof Index Space return false Index Space inner Node Index Space o if length inner Node length return false if offset inner Node offset return false return true Override public int hash Code int result int offset offset result result length return result Override public String to String return String format d d d offset offset length length 
package org infinispan configuration cache import java util Hash Set import java util Set import org infinispan commons configuration Abstract Typed Properties Configuration import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Initializer import org infinispan commons configuration attributes Attribute Set import org infinispan commons configuration attributes Collection Attribute Copier import org infinispan commons util Typed Properties Configures indexing of entries in the cache for searching public class Indexing Configuration extends Abstract Typed Properties Configuration public static final Attribute Definition Index Attribute Definition builder index Index immutable build public static final Attribute Definition Boolean Attribute Definition builder auto Config false immutable build public static final Attribute Definition Set Class Attribute Definition builder indexed entities null Class Set Class Class Set class copier Collection Attribute Copier initializer new Attribute Initializer Set Class Override public Set Class initialize return new Hash Set immutable build static Attribute Set attribute Definition Set return new Attribute Set Indexing Configuration class Abstract Typed Properties Configuration attribute Set private static final String directory provider Legacy name ram was replaced by local heap Deprecated private static final String ram private static final String local heap private static final String org hibernate search store impl Directory Provider private final Attribute Index index private final Attribute Boolean auto Config private final Attribute Set Class indexed Entities public Indexing Configuration Attribute Set attributes super attributes index attributes attribute auto Config attributes attribute indexed Entities attributes attribute Whether indexing is enabled False by default deprecated Use link index instead Deprecated public boolean enabled return index is Enabled If true only index changes made locally ignoring remote changes This is useful if indexes are shared across a cluster to prevent redundant indexing of updates deprecated Use link index instead Deprecated public boolean index Local Only return index is Local Only p These properties are passed directly to the embedded Hibernate Search engine so for the complete and up to date documentation about available properties refer to the Hibernate Search reference of the version you re using with Infinispan Query p see a href http docs jboss org hibernate stable search reference en html single Hibernate Search a Override public Typed Properties properties Overridden to replace Javadoc return super properties Returns the indexing mode of this cache public Index index return index get Determines if autoconfig is enabled for this Indexing Configuration public boolean auto Config return auto Config get public Set Class indexed Entities return indexed Entities get public Attribute Set attributes return attributes Check if the indexes can be shared Currently only ram based indexes do n t allow any sort of sharing return false if the index is ram only and thus not shared public boolean index Shareable Typed Properties properties properties boolean has Ram Directory Provider false for Object obj Key properties key Set String key String obj Key if key ends With String directory Implementation Name String value Of properties get key trim if equals Ignore Case directory Implementation Name equals Ignore Case directory Implementation Name equals directory Implementation Name has Ram Directory Provider true else return true return has Ram Directory Provider Override public String to String return Indexing Configuration attributes attributes 
package org infinispan configuration cache import static org infinispan commons configuration Abstract Typed Properties Configuration import static org infinispan configuration cache Indexing Configuration import static org infinispan configuration cache Indexing Configuration import static org infinispan configuration cache Indexing Configuration import java util Properties import java util Set import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Set import org infinispan commons util Typed Properties import org infinispan commons util Util import org infinispan configuration global Global Configuration import org infinispan util logging Log import org infinispan util logging Log Factory Configures indexing of entries in the cache for searching public class Indexing Configuration Builder extends Abstract Configuration Child Builder implements Builder Indexing Configuration private static final Log log Log Factory get Log Indexing Configuration Builder class private final Attribute Set attributes Indexing Configuration Builder Configuration Builder builder super builder attributes Indexing Configuration attribute Definition Set Enable indexing deprecated Use link index Index instead Deprecated public Indexing Configuration Builder enable Attribute Index index attributes attribute if index get Index index set Index return this Disable indexing deprecated Use link index Index instead Deprecated public Indexing Configuration Builder disable attributes attribute set Index return this Enable or disable indexing deprecated Use link index Index instead Deprecated public Indexing Configuration Builder enabled boolean enabled Attribute Index index attributes attribute if index get Index enabled index set Index else if enabled index set Index return this boolean enabled return attributes attribute get is Enabled If true only index changes made locally ignoring remote changes This is useful if indexes are shared across a cluster to prevent redundant indexing of updates deprecated Use link index Index instead Deprecated public Indexing Configuration Builder index Local Only boolean b if b attributes attribute set Index return this boolean index Local Only return attributes attribute get is Local Only p Defines a single property Can be used multiple times to define all needed properties but the full set is overridden by link with Properties Properties p p These properties are passed directly to the embedded Hibernate Search engine so for the complete and up to date documentation about available properties refer to the the Hibernate Search reference of the version used by Infinispan Query p see a href http docs jboss org hibernate stable search reference en html single Hibernate Search a param key Property key param value Property value return code this code for method chaining public Indexing Configuration Builder add Property String key String value return set Property key value p Defines a single value Can be used multiple times to define all needed property values but the full set is overridden by link with Properties Properties p p These properties are passed directly to the embedded Hibernate Search engine so for the complete and up to date documentation about available properties refer to the the Hibernate Search reference of the version used by Infinispan Query p see a href http docs jboss org hibernate stable search reference en html single Hibernate Search a param key Property key param value Property value return code this code for method chaining public Indexing Configuration Builder set Property String key Object value Typed Properties properties attributes attribute get properties put key value attributes attribute set properties return this p The Query engine relies on properties for configuration p p These properties are passed directly to the embedded Hibernate Search engine so for the complete and up to date documentation about available properties refer to the Hibernate Search reference of the version you re using with Infinispan Query p see a href http docs jboss org hibernate stable search reference en html single Hibernate Search a param props the properties return code this code for method chaining public Indexing Configuration Builder with Properties Properties props attributes attribute set Typed Properties to Typed Properties props return this Indicates indexing mode public Indexing Configuration Builder index Index index attributes attribute set index return this When enabled applies to properties default configurations based on the cache type param auto Config boolean return code this code for method chaining public Indexing Configuration Builder auto Config boolean auto Config attributes attribute set auto Config return this public boolean auto Config return attributes attribute get public Indexing Configuration Builder add Indexed Entity Class indexed Entity Set Class indexed Entities indexed Entities indexed Entities add indexed Entity attributes attribute set indexed Entities return this Set Class indexed Entities return attributes attribute get Override public void validate if enabled Indexing is not conceptually compatible with Invalidation mode if clustering cache Mode is Invalidation throw log invalid Configuration Indexing With Invalidation if indexed Entities is Empty get Builder template anistor This does not take into account eventual programmatically defined entity mappings log no Indexable Classes Defined anistor Infinispan must not allow definition of indexed entities or indexing properties if indexing is not enabled Override public void validate Global Configuration global Config if enabled Check that the query module is on the classpath try String clazz org infinispan query Search Util load Class Strict clazz global Config class Loader catch Class Not Found Exception e throw log invalid Configuration Indexing Without Module Override public Indexing Configuration create Typed Properties typed Properties attributes attribute get if auto Config if clustering cache Mode is Distributed Index Overlay apply typed Properties else Index Overlay apply typed Properties attributes attribute set typed Properties return new Indexing Configuration attributes protect Override public Indexing Configuration Builder read Indexing Configuration template attributes read template attributes return this Override public String to String return Indexing Configuration Builder attributes attributes 
package org infinispan transaction xa recovery import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Hash Set import java util Set import javax transaction xa Xid import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Small Int Set import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan remoting transport Address author Mircea Markus since public class In Doubt Tx Info Impl implements Recovery Manager In Doubt Tx Info private Xid xid private Long internal Id private Small Int Set status private transient Set Address owners new Hash Set private transient boolean is Local public In Doubt Tx Info Impl Xid xid Long internal Id Integer status this xid xid this internal Id internal Id this status new Small Int Set status this status set status public In Doubt Tx Info Impl Xid xid long internal Id Set Integer status this xid xid this internal Id internal Id this status new Small Int Set status public In Doubt Tx Info Impl Xid xid long internal Id this xid internal Id Collections empty Set Override public Xid get Xid return xid Override public Long get Internal Id return internal Id Override public Set Integer get Status return status Override public Set Address get Owners return owners public void add Status Set Integer status Set status add All status Set public void add Owner Address owner owners add owner Override public boolean is Local return is Local public void set Local boolean local is Local local public static class Externalizer extends Abstract Externalizer In Doubt Tx Info Impl public Externalizer Override public void write Object Object Output output In Doubt Tx Info Impl in Doubt Tx Info Impl throws Exception output write Object in Doubt Tx Info Impl get Xid output write Long in Doubt Tx Info Impl get Internal Id Small Int Set write To output in Doubt Tx Info Impl status Override public In Doubt Tx Info Impl read Object Object Input input throws Exception Class Not Found Exception return new In Doubt Tx Info Impl Xid input read Object input read Long Small Int Set read From input Override public Integer get Id return Ids Override public Set Class extends In Doubt Tx Info Impl get Type Classes return Util as Set In Doubt Tx Info Impl class Override public boolean equals Object o if this o return true if o null get Class o get Class return false In Doubt Tx Info Impl that In Doubt Tx Info Impl o if is Local that is Local return false if internal Id null internal Id equals that internal Id that internal Id null return false if owners null owners equals that owners that owners null return false if status null status equals that status that status null return false if xid null xid equals that xid that xid null return false return true Override public int hash Code int result xid null xid hash Code result result internal Id null internal Id hash Code result result status null status hash Code result result owners null owners hash Code result result is Local return result Override public String to String return get Class get Simple Name xid xid internal Id internal Id status status owners owners is Local is Local 
package org infinispan util concurrent locks impl import static java util concurrent atomic Atomic Reference Field Updater new Updater import static org infinispan util concurrent Completable Futures await import java util Objects import java util Queue import java util concurrent Completable Future import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Linked Queue import java util concurrent Concurrent Map import java util concurrent Time Unit import java util concurrent atomic Atomic Reference Field Updater import org infinispan util Time Service import org infinispan util concurrent Timeout Exception import org infinispan util concurrent locks Deadlock Checker import org infinispan util concurrent locks Deadlock Detected Exception import org infinispan util concurrent locks Extended Lock Promise import org infinispan util concurrent locks Lock Listener import org infinispan util concurrent locks Lock State import org infinispan util logging Log import org infinispan util logging Log Factory special lock for Infinispan cache p The main different with the traditional link java util concurrent locks Lock is allowing to use any object as lock owner It is possible to use a link Thread as lock owner that makes similar to link java util concurrent locks Lock p In addition it has an asynchronous interface link acquire Object long Time Unit will not acquire the lock immediately except if it is free but will return a link Extended Lock Promise This promise allow to test if the lock is acquired asynchronously and cancel the lock acquisition without any blocking author Pedro Ruivo since public class Infinispan Lock private static final Log log Log Factory get Log Infinispan Lock class private static final boolean trace log is Trace Enabled private static final Atomic Reference Field Updater Infinispan Lock Lock Place Holder new Updater Infinispan Lock class Lock Place Holder class current private static final Atomic Reference Field Updater Lock Place Holder Lock State new Updater Lock Place Holder class Lock State class lock State private final Queue Lock Place Holder pending Request private final Concurrent Map Object Lock Place Holder lock Owners private final Runnable release Runnable private Time Service time Service private volatile Lock Place Holder current Creates a new instance param time Service the link Time Service to check for timeouts public Infinispan Lock Time Service time Service this time Service time Service pending Request new Concurrent Linked Queue lock Owners new Concurrent Hash Map current null release Runnable null Creates a new instance param time Service the link Time Service to check for timeouts param release Runnable a link Runnable that is invoked every time this lock is released public Infinispan Lock Time Service time Service Runnable release Runnable this time Service time Service pending Request new Concurrent Linked Queue lock Owners new Concurrent Hash Map current null this release Runnable release Runnable Tests purpose only public void set Time Service Time Service time Service if time Service null this time Service time Service It tries to acquire this lock p If it is invoked multiple times with the same owner the same link Extended Lock Promise is returned until it has timed out or link release Object is invoked p If the lock is free it is immediately acquired otherwise the lock owner is queued param lock Owner the lock owner who needs to acquire the lock param time the timeout value param time Unit the timeout unit return an link Extended Lock Promise throws Null Pointer Exception if code lock Owner or code time Unit is code null public Extended Lock Promise acquire Object lock Owner long time Time Unit time Unit Objects require Non Null lock Owner Lock Owner should be non null Objects require Non Null time Unit Time Unit should be non null if trace log tracef Acquire lock for s Timeout s s lock Owner time time Unit Lock Place Holder lock Place Holder lock Owners get lock Owner if lock Place Holder null if trace log tracef Lock owner already exists s lock Place Holder return lock Place Holder lock Place Holder create Lock Info lock Owner time time Unit Lock Place Holder other lock Owners put If Absent lock Owner lock Place Holder if other null if trace log tracef Lock owner already exists s other return other if trace log tracef Created a new one s lock Place Holder pending Request add lock Place Holder try Acquire null return lock Place Holder It tries to release the lock held by code lock Owner p If the lock is not acquired is waiting or timed out deadlocked by code lock Owner its link Extended Lock Promise is canceled If code lock Owner is the current lock owner the lock is released and the next lock owner available will acquire the lock If the code lock Owner never tried to acquire the lock this method does nothing param lock Owner the lock owner who wants to release the lock throws Null Pointer Exception if code lock Owner is code null public void release Object lock Owner Objects require Non Null lock Owner Lock Owner should be non null if trace log tracef Release lock for s lock Owner Lock Place Holder want To Release lock Owners get lock Owner if want To Release null if trace log tracef s not found lock Owner nothing to release return final boolean released want To Release set Released if trace log tracef Release lock for s s want To Release released Lock Place Holder current Locked current if current Locked want To Release try Acquire want To Release return the current lock owner or code null if it is not acquired public Object get Lock Owner Lock Place Holder lock Place Holder current return lock Place Holder null null lock Place Holder owner It checks if the lock is acquired p code false return value does not mean the lock is free since it may have queued lock owners return code true if the lock is acquired public boolean is Locked return current null It forces a deadlock checking public void deadlock Check Deadlock Checker deadlock Checker if deadlock Checker null return no op Lock Place Holder holder current if holder null for Lock Place Holder pending pending Request pending check Deadlock deadlock Checker holder owner It tests if the lock has the lock owner p It return code true if the lock owner is the current lock owner or it in the queue param lock Owner the lock owner to test return code true if it contains the lock owner public boolean contains Lock Owner Object lock Owner return lock Owners contains Key lock Owner private void on Canceled Lock Place Holder canceled if trace log tracef Release lock for s It was canceled canceled owner Lock Place Holder current Locked current if current Locked canceled try Acquire canceled private boolean cas Release Lock Place Holder lock Place Holder return cas lock Place Holder null private boolean remove Object lock Owner return lock Owners remove lock Owner null private void trigger Released if release Runnable null release Runnable run private boolean cas Lock Place Holder release Lock Place Holder acquire boolean cas compare And Set this release acquire if trace log tracef Lock Owner s s s release acquire cas return cas private void try Acquire Lock Place Holder release Lock Place Holder to Release release do Lock Place Holder to Acquire pending Request peek if trace log tracef Try acquire Next in queue s Current s to Acquire current if to Acquire null to Release null return else if to Acquire null nothing to acquire but we have to release the current if cas Release to Release to Release null continue in the meanwhile we could have a new request recheck return if cas to Release to Acquire we set the current lock owner so we must remove it from the queue pending Request remove to Acquire if to Acquire set Acquire if trace log tracef s successfully acquired the lock to Acquire return if trace log tracef s failed to acquire invalid state Retrying to Acquire oh oh probably the next Pending Timed Out we are going to retry with the next in queue to Release to Acquire else if trace log tracef Unable to acquire Lock is held other thread already set the current lock owner return while true private Lock Place Holder create Lock Info Object lock Owner long time Time Unit time Unit return new Lock Place Holder lock Owner time Service expected End Time time time Unit private class Lock Place Holder implements Extended Lock Promise private final Object owner private final long timeout private final Completable Future Void notifier volatile Lock State lock State private Lock Place Holder Object owner long timeout this owner owner this timeout timeout lock State Lock State notifier new Completable Future Override public boolean is Available check Timeout return lock State Lock State Override public void lock throws Interrupted Exception Timeout Exception do Lock State current State lock State switch current State case check Timeout await notifier time Service remaining Time timeout Time Unit Time Unit break case return acquired case throw new Illegal State Exception Lock already released case cleanup throw new Timeout Exception Timeout waiting for lock case cleanup throw new Deadlock Detected Exception Dead Lock detected default throw new Illegal State Exception Unknown lock state current State while true Override public void add Listener Lock Listener listener notifier then Run this invoke listener Override public void cancel Lock State state check Valid Cancel State state do Lock State current State lock State switch current State case if cas State Lock State state on Canceled this notify Listeners return break case no op a thread is inside the critical section case case case return no op the lock is in final state default throw new Illegal State Exception Unknown lock state current State while true Override public Object get Requestor return owner Override public Object get Owner Lock Place Holder owner current return owner null owner owner null Override public String to String return Lock Place Holder lock State lock State owner owner private void invoke Lock Listener invoker Lock State state lock State switch state case throw new Illegal State Exception is not a valid state to invoke the listener case case invoker on Event Lock State break case case invoker on Event state break default throw new Illegal State Exception Unknown lock state state private void check Valid Cancel State Lock State state if state Lock State state Lock State throw new Illegal Argument Exception Lock State state is not valid to cancel private void check Deadlock Deadlock Checker checker Object current Owner check Timeout check timeout before checking the deadlock check deadlock are more expensive if lock State Lock State we are waiting for a lock owner equals current Owner needed just to be safe checker deadlock Detected owner current Owner deadlock has been detected cas State Lock State Lock State state could have been changed to available or timed out on Canceled this notify Listeners private boolean set Acquire if cas State Lock State Lock State notify Listeners return lock State Lock State private boolean set Released do Lock State state lock State switch state case if cas State state Lock State cleanup notify Listeners return true break case case case if cas State state Lock State cleanup return true break case return false default throw new Illegal State Exception Unknown lock state state while true private boolean cas State Lock State expect Lock State update boolean updated compare And Set this expect update if updated trace log tracef State changed for s s s this expect update return updated private void cleanup if remove owner trigger Released private void check Timeout if lock State Lock State time Service is Time Expired timeout cas State Lock State Lock State on Canceled this notify Listeners private void notify Listeners if lock State Lock State notifier complete null 
package org infinispan interceptors import java util Array List import java util List import org infinispan commands Visitable Command import org infinispan context Invocation Context import org infinispan factories scopes Scope import org infinispan factories scopes Scopes import org infinispan interceptors base Command Interceptor Knows how to build and manage an chain of interceptors Also in charge with invoking methods on the chain author Mircea Markus jboss com author Galder Zamarre o since deprecated Since use link Async Interceptor Chain instead Some methods will ignore the interceptors that do not extend link Command Interceptor Scope Scopes Deprecated public class Interceptor Chain private Async Interceptor Chain async Interceptor Chain public Interceptor Chain Async Interceptor Chain async Interceptor Chain this async Interceptor Chain async Interceptor Chain Inserts the given interceptor at the specified position in the chain o based indexing throws Illegal Argument Exception if the position is invalid e g and there are only interceptors in the chain public void add Interceptor Command Interceptor interceptor int position async Interceptor Chain add Interceptor interceptor position Removes the interceptor at the given postion throws Illegal Argument Exception if the position is invalid e g and there are only interceptors in the chain public void remove Interceptor int position async Interceptor Chain remove Interceptor position Returns the number of interceptors in the chain public int size return async Interceptor Chain size Returns an unmofiable list with all the interceptors in sequence If first in chain is null an empty list is returned public List Command Interceptor as List Array List Command Interceptor list new Array List async Interceptor Chain get Interceptors size async Interceptor Chain get Interceptors for Each ci if ci instanceof Command Interceptor list add Command Interceptor ci return list Removes all the occurences of supplied interceptor type from the chain public void remove Interceptor Class extends Command Interceptor clazz async Interceptor Chain remove Interceptor clazz Adds a new interceptor in list after an interceptor of a given type return true if the interceptor was added i e the after Interceptor exists public boolean add Interceptor After Command Interceptor to Add Class extends Command Interceptor after Interceptor return async Interceptor Chain add Interceptor After to Add after Interceptor deprecated Use link add Interceptor Before Command Interceptor Class instead Deprecated public boolean add Interceptor Before Command Interceptor to Add Class extends Command Interceptor before Interceptor boolean is Custom return async Interceptor Chain add Interceptor Before to Add before Interceptor Adds a new interceptor in list after an interceptor of a given type return true if the interceptor was added i e the after Interceptor exists public boolean add Interceptor Before Command Interceptor to Add Class extends Command Interceptor before Interceptor return async Interceptor Chain add Interceptor Before to Add before Interceptor Replaces an existing interceptor of the given type in the interceptor chain with a new interceptor instance passed as parameter param replacing Interceptor the interceptor to add to the interceptor chain param to Be Replaced Interceptor Type the type of interceptor that should be swapped with the new one return true if the interceptor was replaced public boolean replace Interceptor Command Interceptor replacing Interceptor Class extends Command Interceptor to Be Replaced Interceptor Type return async Interceptor Chain replace Interceptor replacing Interceptor to Be Replaced Interceptor Type Appends at the end public void append Interceptor Command Interceptor ci boolean is Custom async Interceptor Chain append Interceptor ci is Custom Walks the command through the interceptor chain The received ctx is being passed in p Note Reusing the context for multiple invocations is allowed However the two invocations must not overlap so calling code invoke ctx command from an interceptor is not allowed If an interceptor needs to invoke a new command through the entire chain it must first copy the invocation context with link Invocation Context clone p public Object invoke Invocation Context ctx Visitable Command command return async Interceptor Chain invoke ctx command return the first code Command Interceptor in the chain Since there will likely be other link Async Interceptor s before it Deprecated public Command Interceptor get First In Chain return async Interceptor Chain find Interceptor Extending Command Interceptor class Mainly used by unit tests to replace the interceptor chain with the starting point passed in param interceptor interceptor to be used as the first interceptor in the chain public void set First In Chain Command Interceptor interceptor add Interceptor interceptor Returns all interceptors which extend the given command interceptor public List Command Interceptor get Interceptors Which Extend Class extends Command Interceptor interceptor Class Array List Command Interceptor list new Array List async Interceptor Chain get Interceptors size async Interceptor Chain get Interceptors for Each ci if interceptor Class is Instance ci list add Command Interceptor ci return list Returns all the interceptors that have the fully qualified name of their class equal with the supplied class name public List Command Interceptor get Interceptors With Class Class clazz Array List Command Interceptor list new Array List async Interceptor Chain get Interceptors size async Interceptor Chain get Interceptors for Each ci if clazz ci get Class list add Command Interceptor ci return list Checks whether the chain contains the supplied interceptor instance public boolean contains Instance Command Interceptor interceptor return async Interceptor Chain contains Instance interceptor public boolean contains Interceptor Type Class extends Command Interceptor interceptor Type return async Interceptor Chain contains Interceptor Type interceptor Type public boolean contains Interceptor Type Class extends Command Interceptor interceptor Type boolean also Match Sub Classes return async Interceptor Chain contains Interceptor Type interceptor Type also Match Sub Classes 
package org infinispan factories import java util List import org infinispan commons Cache Configuration Exception import org infinispan commons Cache Exception import org infinispan configuration cache Cache Mode import org infinispan configuration cache Compatibility Mode Configuration import org infinispan configuration cache Configuration import org infinispan configuration cache Configurations import org infinispan configuration cache Custom Interceptors Configuration import org infinispan configuration cache Interceptor Configuration import org infinispan configuration cache Store Configuration import org infinispan factories annotations Default Factory For import org infinispan interceptors Async Interceptor import org infinispan interceptors Async Interceptor Chain import org infinispan interceptors Interceptor Chain import org infinispan interceptors distribution Distribution Bulk Interceptor import org infinispan interceptors distribution Last Chance Interceptor import org infinispan interceptors distribution Non Tx Interceptor import org infinispan interceptors distribution Tx Interceptor import org infinispan interceptors distribution Non Tx Distribution Interceptor import org infinispan interceptors distribution Scattered Distribution Interceptor import org infinispan interceptors distribution Triangle Distribution Interceptor import org infinispan interceptors distribution Tx Distribution Interceptor import org infinispan interceptors distribution Versioned Distribution Interceptor import org infinispan interceptors impl Async Interceptor Chain Impl import org infinispan interceptors impl Batching Interceptor import org infinispan interceptors impl Cache Loader Interceptor import org infinispan interceptors impl Cache Mgmt Interceptor import org infinispan interceptors impl Cache Writer Interceptor import org infinispan interceptors impl Call Interceptor import org infinispan interceptors impl Clustered Cache Loader Interceptor import org infinispan interceptors impl Compatibility Interceptor import org infinispan interceptors impl Dist Cache Writer Interceptor import org infinispan interceptors impl Entry Wrapping Interceptor import org infinispan interceptors impl Grouping Interceptor import org infinispan interceptors impl Invalidation Interceptor import org infinispan interceptors impl Invocation Context Interceptor import org infinispan interceptors impl Is Marshallable Interceptor import org infinispan interceptors impl Notification Interceptor import org infinispan interceptors impl Passivation Writer Interceptor import org infinispan interceptors impl Prefetch Interceptor import org infinispan interceptors impl Retrying Entry Wrapping Interceptor import org infinispan interceptors impl Scattered Cache Writer Interceptor import org infinispan interceptors impl Transactional Store Interceptor import org infinispan interceptors impl Tx Interceptor import org infinispan interceptors impl Versioned Entry Wrapping Interceptor import org infinispan interceptors locking Non Transactional Locking Interceptor import org infinispan interceptors locking Optimistic Locking Interceptor import org infinispan interceptors locking Pessimistic Locking Interceptor import org infinispan interceptors totalorder Total Order Distribution Interceptor import org infinispan interceptors totalorder Total Order Interceptor import org infinispan interceptors totalorder Total Order State Transfer Interceptor import org infinispan interceptors totalorder Total Order Versioned Distribution Interceptor import org infinispan interceptors totalorder Total Order Versioned Entry Wrapping Interceptor import org infinispan interceptors xsite Non Transactional Backup Interceptor import org infinispan interceptors xsite Optimistic Backup Interceptor import org infinispan interceptors xsite Pessimistic Backup Interceptor import org infinispan partitionhandling Partition Handling import org infinispan partitionhandling impl Partition Handling Interceptor import org infinispan statetransfer State Transfer Interceptor import org infinispan statetransfer Transaction Synchronizer Interceptor import org infinispan transaction Locking Mode import org infinispan transaction Transaction Mode import org infinispan util logging Log import org infinispan util logging Log Factory Factory class that builds an interceptor chain based on cache configuration For backwards compatibility the factory will register both a link Async Interceptor Chain and a link Interceptor Chain before initializing the interceptors author a href mailto manik jboss org Manik Surtani manik jboss org a author Mircea Markus jboss com author Marko Luksa author Pedro Ruivo since Default Factory For classes Async Interceptor Chain class Interceptor Chain class public class Interceptor Chain Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory private static final Log log Log Factory get Log Interceptor Chain Factory class private Async Interceptor create Interceptor Async Interceptor interceptor Class extends Async Interceptor interceptor Type Async Interceptor chained Interceptor component Registry get Component interceptor Type if chained Interceptor null register interceptor Type interceptor chained Interceptor interceptor return chained Interceptor private void register Class extends Async Interceptor clazz Async Interceptor chained Interceptor try component Registry register Component chained Interceptor clazz catch Runtime Exception e log unable To Create Interceptor clazz e throw e public Async Interceptor Chain build Interceptor Chain Transaction Mode transaction Mode configuration transaction transaction Mode boolean needs Version Aware Components transaction Mode is Transactional Configurations is Tx Versioned configuration Async Interceptor Chain interceptor Chain new Async Interceptor Chain Impl component Registry get Component Metadata Repo add the interceptor chain to the registry first since some interceptors may ask for it Add both the old class and the new interface component Registry register Component interceptor Chain Async Interceptor Chain class component Registry register Component new Interceptor Chain interceptor Chain Interceptor Chain class boolean invocation Batching configuration invocation Batching enabled boolean is Total Order configuration transaction transaction Protocol is Total Order Cache Mode cache Mode configuration clustering cache Mode if cache Mode needs State Transfer interceptor Chain append Interceptor create Interceptor new Distribution Bulk Interceptor Distribution Bulk Interceptor class false load the ic Interceptor first if invocation Batching interceptor Chain append Interceptor create Interceptor new Batching Interceptor Batching Interceptor class false interceptor Chain append Interceptor create Interceptor new Invocation Context Interceptor Invocation Context Interceptor class false Compatibility Mode Configuration compatibility configuration compatibility if compatibility enabled interceptor Chain append Interceptor create Interceptor new Compatibility Interceptor Compatibility Interceptor class false add marshallable check interceptor for situations where we want to figure out before marshalling if has Async Store interceptor Chain append Interceptor create Interceptor new Is Marshallable Interceptor Is Marshallable Interceptor class false load the cache management interceptor next if configuration jmx Statistics available interceptor Chain append Interceptor create Interceptor new Cache Mgmt Interceptor Cache Mgmt Interceptor class false load the state transfer lock interceptor the state transfer lock ensures that the cache member list is up to date so it s necessary even if state transfer is disabled if cache Mode needs State Transfer if is Total Order interceptor Chain append Interceptor create Interceptor new Total Order State Transfer Interceptor Total Order State Transfer Interceptor class false else interceptor Chain append Interceptor create Interceptor new State Transfer Interceptor State Transfer Interceptor class false if transaction Mode is Transactional interceptor Chain append Interceptor create Interceptor new Transaction Synchronizer Interceptor Transaction Synchronizer Interceptor class false if configuration clustering partition Handling when Split Partition Handling interceptor Chain append Interceptor create Interceptor new Partition Handling Interceptor Partition Handling Interceptor class false load total order interceptor if is Total Order interceptor Chain append Interceptor create Interceptor new Total Order Interceptor Total Order Interceptor class false load the tx interceptor if transaction Mode is Transactional interceptor Chain append Interceptor create Interceptor new Tx Interceptor Tx Interceptor class false the total order protocol does n t need locks if is Total Order cache Mode is Scattered if transaction Mode is Transactional if configuration transaction locking Mode Locking Mode interceptor Chain append Interceptor create Interceptor new Pessimistic Locking Interceptor Pessimistic Locking Interceptor class false else interceptor Chain append Interceptor create Interceptor new Optimistic Locking Interceptor Optimistic Locking Interceptor class false else interceptor Chain append Interceptor create Interceptor new Non Transactional Locking Interceptor Non Transactional Locking Interceptor class false Notification Interceptor is used only for Prepare Commit Rollback notifications This needs to be after locking interceptor to guarantee that locks are still held when raising notifications if transaction Mode is Transactional configuration transaction notifications interceptor Chain append Interceptor create Interceptor new Notification Interceptor Notification Interceptor class false if configuration sites has Enabled Backups configuration sites disable Backups if transaction Mode Transaction Mode if configuration transaction locking Mode Locking Mode interceptor Chain append Interceptor create Interceptor new Optimistic Backup Interceptor Optimistic Backup Interceptor class false else interceptor Chain append Interceptor create Interceptor new Pessimistic Backup Interceptor Pessimistic Backup Interceptor class false else interceptor Chain append Interceptor create Interceptor new Non Transactional Backup Interceptor Non Transactional Backup Interceptor class false This needs to be added after the locking interceptor for tx caches but before the wrapping interceptor if configuration clustering l enabled interceptor Chain append Interceptor create Interceptor new Last Chance Interceptor Last Chance Interceptor class false if configuration clustering hash groups enabled interceptor Chain append Interceptor create Interceptor new Grouping Interceptor Grouping Interceptor class false if cache Mode is Scattered interceptor Chain append Interceptor create Interceptor new Prefetch Interceptor Prefetch Interceptor class false if needs Version Aware Components if is Total Order interceptor Chain append Interceptor create Interceptor new Total Order Versioned Entry Wrapping Interceptor Total Order Versioned Entry Wrapping Interceptor class false else interceptor Chain append Interceptor create Interceptor new Versioned Entry Wrapping Interceptor Versioned Entry Wrapping Interceptor class false else if cache Mode is Scattered interceptor Chain append Interceptor create Interceptor new Retrying Entry Wrapping Interceptor Retrying Entry Wrapping Interceptor class false else interceptor Chain append Interceptor create Interceptor new Entry Wrapping Interceptor Entry Wrapping Interceptor class false if configuration persistence using Stores if cache Mode is Clustered interceptor Chain append Interceptor create Interceptor new Clustered Cache Loader Interceptor Clustered Cache Loader Interceptor class false else interceptor Chain append Interceptor create Interceptor new Cache Loader Interceptor Cache Loader Interceptor class false if configuration persistence passivation interceptor Chain append Interceptor create Interceptor new Passivation Writer Interceptor Passivation Writer Interceptor class false else boolean transactional Store configuration persistence stores stream any Match Store Configuration transactional if transactional Store transaction Mode is Transactional interceptor Chain append Interceptor create Interceptor new Transactional Store Interceptor Transactional Store Interceptor class false switch cache Mode case case case case interceptor Chain append Interceptor create Interceptor new Dist Cache Writer Interceptor Dist Cache Writer Interceptor class false break case interceptor Chain append Interceptor create Interceptor new Scattered Cache Writer Interceptor Scattered Cache Writer Interceptor class false break default interceptor Chain append Interceptor create Interceptor new Cache Writer Interceptor Cache Writer Interceptor class false break if configuration clustering l enabled if transaction Mode is Transactional interceptor Chain append Interceptor create Interceptor new Tx Interceptor Tx Interceptor class false else interceptor Chain append Interceptor create Interceptor new Non Tx Interceptor Non Tx Interceptor class false switch cache Mode case case interceptor Chain append Interceptor create Interceptor new Invalidation Interceptor Invalidation Interceptor class false break case case if needs Version Aware Components if is Total Order interceptor Chain append Interceptor create Interceptor new Total Order Versioned Distribution Interceptor Total Order Versioned Distribution Interceptor class false else interceptor Chain append Interceptor create Interceptor new Versioned Distribution Interceptor Versioned Distribution Interceptor class false break case case if transaction Mode is Transactional if is Total Order interceptor Chain append Interceptor create Interceptor new Total Order Distribution Interceptor Total Order Distribution Interceptor class false else interceptor Chain append Interceptor create Interceptor new Tx Distribution Interceptor Tx Distribution Interceptor class false else if cache Mode is Distributed Configurations is Embedded Mode global Configuration interceptor Chain append Interceptor create Interceptor new Triangle Distribution Interceptor Triangle Distribution Interceptor class false else interceptor Chain append Interceptor create Interceptor new Non Tx Distribution Interceptor Non Tx Distribution Interceptor class false break case interceptor Chain append Interceptor create Interceptor new Scattered Distribution Interceptor Scattered Distribution Interceptor class false break case Nothing Async Interceptor call Interceptor create Interceptor new Call Interceptor Call Interceptor class interceptor Chain append Interceptor call Interceptor false log trace Finished building default interceptor chain build Custom Interceptors interceptor Chain configuration custom Interceptors return interceptor Chain private void build Custom Interceptors Async Interceptor Chain interceptor Chain Custom Interceptors Configuration custom Interceptors for Interceptor Configuration config custom Interceptors interceptors if interceptor Chain contains Interceptor Type config async Interceptor get Class continue Async Interceptor custom Interceptor config async Interceptor Security Actions apply Properties custom Interceptor config properties register custom Interceptor get Class custom Interceptor if config first interceptor Chain add Interceptor custom Interceptor else if config last interceptor Chain add Interceptor Before custom Interceptor Call Interceptor class else if config index interceptor Chain add Interceptor custom Interceptor config index else if config after null boolean added interceptor Chain add Interceptor After custom Interceptor config after if added throw new Cache Configuration Exception Can not add after class config after as no such interceptor exists in the default chain else if config before null boolean added interceptor Chain add Interceptor Before custom Interceptor config before if added throw new Cache Configuration Exception Can not add before class config before as no such interceptor exists in the default chain else if config position Interceptor Configuration Position interceptor Chain add Interceptor custom Interceptor private boolean has Async Store List Store Configuration loader Configs configuration persistence stores for Store Configuration loader Config loader Configs if loader Config async enabled return true return false Override public construct Class component Type try Async Interceptor Chain async Interceptor Chain build Interceptor Chain if component Type Interceptor Chain class return component Type cast component Registry get Component Interceptor Chain class else return component Type cast async Interceptor Chain catch Cache Exception ce throw ce catch Exception e throw new Cache Configuration Exception Unable to build interceptor chain e public static Interceptor Chain Factory get Instance Component Registry component Registry Configuration configuration Interceptor Chain Factory icf new Interceptor Chain Factory icf component Registry component Registry icf configuration configuration return icf 
package org infinispan stream impl intops import java io Exception import java io Object Input import java io Object Output import java util Comparator import java util Set import java util function Consumer import java util function Double Consumer import java util function Double Function import java util function Double Predicate import java util function Double To Int Function import java util function Double To Long Function import java util function Double Unary Operator import java util function Function import java util function Int Consumer import java util function Int Function import java util function Int Predicate import java util function Int To Double Function import java util function Int To Long Function import java util function Int Unary Operator import java util function Long Consumer import java util function Long Function import java util function Long Predicate import java util function Long To Double Function import java util function Long To Int Function import java util function Long Unary Operator import java util function Predicate import java util function To Double Function import java util function To Int Function import java util function To Long Function import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Advanced Externalizer import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan stream impl intops object Distinct Operation import org infinispan stream impl intops object Filter Operation import org infinispan stream impl intops object Flat Map Operation import org infinispan stream impl intops object Flat Map To Double Operation import org infinispan stream impl intops object Flat Map To Int Operation import org infinispan stream impl intops object Flat Map To Long Operation import org infinispan stream impl intops object Limit Operation import org infinispan stream impl intops object Map Operation import org infinispan stream impl intops object Map To Double Operation import org infinispan stream impl intops object Map To Int Operation import org infinispan stream impl intops object Map To Long Operation import org infinispan stream impl intops object Peek Operation import org infinispan stream impl intops object Sorted Comparator Operation import org infinispan stream impl intops object Sorted Operation import org infinispan stream impl intops primitive d Boxed Double Operation import org infinispan stream impl intops primitive d Distinct Double Operation import org infinispan stream impl intops primitive d Filter Double Operation import org infinispan stream impl intops primitive d Flat Map Double Operation import org infinispan stream impl intops primitive d Limit Double Operation import org infinispan stream impl intops primitive d Map Double Operation import org infinispan stream impl intops primitive d Map To Int Double Operation import org infinispan stream impl intops primitive d Map To Long Double Operation import org infinispan stream impl intops primitive d Map To Obj Double Operation import org infinispan stream impl intops primitive d Peek Double Operation import org infinispan stream impl intops primitive d Sorted Double Operation import org infinispan stream impl intops primitive i As Double Int Operation import org infinispan stream impl intops primitive i As Long Int Operation import org infinispan stream impl intops primitive i Boxed Int Operation import org infinispan stream impl intops primitive i Distinct Int Operation import org infinispan stream impl intops primitive i Filter Int Operation import org infinispan stream impl intops primitive i Flat Map Int Operation import org infinispan stream impl intops primitive i Limit Int Operation import org infinispan stream impl intops primitive i Map Int Operation import org infinispan stream impl intops primitive i Map To Double Int Operation import org infinispan stream impl intops primitive i Map To Long Int Operation import org infinispan stream impl intops primitive i Map To Obj Int Operation import org infinispan stream impl intops primitive i Peek Int Operation import org infinispan stream impl intops primitive i Sorted Int Operation import org infinispan stream impl intops primitive l As Double Long Operation import org infinispan stream impl intops primitive l Boxed Long Operation import org infinispan stream impl intops primitive l Distinct Long Operation import org infinispan stream impl intops primitive l Filter Long Operation import org infinispan stream impl intops primitive l Flat Map Long Operation import org infinispan stream impl intops primitive l Limit Long Operation import org infinispan stream impl intops primitive l Map Long Operation import org infinispan stream impl intops primitive l Map To Double Long Operation import org infinispan stream impl intops primitive l Map To Int Long Operation import org infinispan stream impl intops primitive l Map To Obj Long Operation import org infinispan stream impl intops primitive l Peek Long Operation import org infinispan stream impl intops primitive l Sorted Long Operation import org jboss marshalling util Identity Int Map Externalizer to be used for serializing the various intermediate operations public class Intermediate Operation Externalizer implements Advanced Externalizer Intermediate Operation Object stream intermediate operations private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int Double stream intermediate operations private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int Int stream intermediate operations private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int Long stream intermediate operations private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private final Identity Int Map Class extends Intermediate Operation operations new Identity Int Map public Intermediate Operation Externalizer operations put Distinct Operation class operations put Filter Operation class operations put Flat Map Operation class operations put Flat Map To Double Operation class operations put Flat Map To Int Operation class operations put Flat Map To Long Operation class operations put Limit Operation class operations put Map Operation class operations put Map To Double Operation class operations put Map To Int Operation class operations put Map To Long Operation class operations put Peek Operation class operations put Sorted Comparator Operation class operations put Sorted Operation class operations put Boxed Double Operation class operations put Distinct Double Operation class operations put Filter Double Operation class operations put Flat Map Double Operation class operations put Limit Double Operation class operations put Map Double Operation class operations put Map To Int Double Operation class operations put Map To Long Double Operation class operations put Map To Obj Double Operation class operations put Peek Double Operation class operations put Sorted Double Operation class operations put As Double Int Operation class operations put As Long Int Operation class operations put Boxed Int Operation class operations put Distinct Int Operation class operations put Filter Int Operation class operations put Flat Map Int Operation class operations put Limit Int Operation class operations put Map Int Operation class operations put Map To Double Int Operation class operations put Map To Long Int Operation class operations put Map To Obj Int Operation class operations put Peek Int Operation class operations put Sorted Int Operation class operations put As Double Long Operation class operations put Boxed Long Operation class operations put Distinct Long Operation class operations put Filter Long Operation class operations put Flat Map Long Operation class operations put Limit Long Operation class operations put Map Long Operation class operations put Map To Double Long Operation class operations put Map To Int Long Operation class operations put Map To Obj Long Operation class operations put Peek Long Operation class operations put Sorted Long Operation class Override public Set Class extends Intermediate Operation get Type Classes return Util Class extends Intermediate Operation as Set Distinct Operation class Filter Operation class Flat Map Operation class Flat Map To Double Operation class Flat Map To Int Operation class Flat Map To Long Operation class Limit Operation class Map Operation class Map To Double Operation class Map To Int Operation class Map To Long Operation class Peek Operation class Sorted Comparator Operation class Sorted Operation class Boxed Double Operation class Distinct Double Operation class Filter Double Operation class Flat Map Double Operation class Limit Double Operation class Map Double Operation class Map To Int Double Operation class Map To Long Double Operation class Map To Double Operation class Peek Double Operation class Sorted Double Operation class As Double Int Operation class As Long Int Operation class Boxed Int Operation class Distinct Operation class Filter Int Operation class Flat Map Int Operation class Limit Int Operation class Map Int Operation class Map To Double Int Operation class Map To Long Int Operation class Map To Obj Int Operation class Peek Int Operation class Sorted Int Operation class As Double Long Operation class Boxed Long Operation class Distinct Operation class Filter Long Operation class Flat Map Long Operation class Limit Operation class Map Long Operation class Map To Double Long Operation class Map To Int Long Operation class Map To Obj Long Operation class Peek Long Operation class Sorted Long Operation class Override public Integer get Id return Ids Override public void write Object Object Output output Intermediate Operation object throws Exception int number operations get object get Class output write Byte number switch number case output write Object Filter Operation object get Predicate break case output write Object Flat Map Operation object get Function break case output write Object Flat Map To Double Operation object get Function break case output write Object Flat Map To Int Operation object get Function break case output write Object Flat Map To Long Operation object get Function break case Unsigned Numeric write Unsigned Long output Limit Operation object get Limit break case output write Object Map Operation object get Function break case output write Object Map To Double Operation object get Function break case output write Object Map To Int Operation object get Function break case output write Object Map To Long Operation object get Function break case output write Object Peek Operation object get Consumer break case output write Object Sorted Comparator Operation object get Comparator break case output write Object Filter Double Operation object get Predicate break case output write Object Flat Map Double Operation object get Function break case Unsigned Numeric write Unsigned Long output Limit Double Operation object get Limit break case output write Object Map Double Operation object get Operator break case output write Object Map To Int Double Operation object get Function break case output write Object Map To Long Double Operation object get Function break case output write Object Map To Obj Double Operation object get Function break case output write Object Peek Double Operation object get Consumer break case output write Object Filter Int Operation object get Predicate break case output write Object Flat Map Int Operation object get Function break case Unsigned Numeric write Unsigned Long output Limit Int Operation object get Limit break case output write Object Map Int Operation object get Operator break case output write Object Map To Double Int Operation object get Function break case output write Object Map To Long Int Operation object get Function break case output write Object Map To Obj Int Operation object get Function break case output write Object Peek Int Operation object get Consumer break case output write Object Filter Long Operation object get Predicate break case output write Object Flat Map Long Operation object get Function break case Unsigned Numeric write Unsigned Long output Limit Long Operation object get Limit break case output write Object Map Long Operation object get Operator break case output write Object Map To Double Long Operation object get Function break case output write Object Map To Int Long Operation object get Function break case output write Object Map To Obj Long Operation object get Function break case output write Object Peek Long Operation object get Consumer break Override public Intermediate Operation read Object Object Input input throws Exception Class Not Found Exception int number input read Unsigned Byte switch number case return Distinct Operation get Instance case return new Filter Operation Predicate input read Object case return new Flat Map Operation Function input read Object case return new Flat Map To Double Operation Function input read Object case return new Flat Map To Int Operation Function input read Object case return new Flat Map To Long Operation Function input read Object case return new Limit Operation Unsigned Numeric read Unsigned Long input case return new Map Operation Function input read Object case return new Map To Double Operation To Double Function input read Object case return new Map To Int Operation To Int Function input read Object case return new Map To Long Operation To Long Function input read Object case return new Peek Operation Consumer input read Object case return new Sorted Comparator Operation Comparator input read Object case return Sorted Operation get Instance case return Boxed Double Operation get Instance case return Distinct Double Operation get Instance case return new Filter Double Operation Double Predicate input read Object case return new Flat Map Double Operation Double Function input read Object case return new Limit Double Operation Unsigned Numeric read Unsigned Long input case return new Map Double Operation Double Unary Operator input read Object case return new Map To Int Double Operation Double To Int Function input read Object case return new Map To Long Double Operation Double To Long Function input read Object case return new Map To Obj Double Operation Double Function input read Object case return new Peek Double Operation Double Consumer input read Object case return Sorted Double Operation get Instance case return As Double Int Operation get Instance case return As Long Int Operation get Instance case return Boxed Int Operation get Instance case return Distinct Int Operation get Instance case return new Filter Int Operation Int Predicate input read Object case return new Flat Map Int Operation Int Function input read Object case return new Limit Int Operation Unsigned Numeric read Unsigned Long input case return new Map Int Operation Int Unary Operator input read Object case return new Map To Double Int Operation Int To Double Function input read Object case return new Map To Long Int Operation Int To Long Function input read Object case return new Map To Obj Int Operation Int Function input read Object case return new Peek Int Operation Int Consumer input read Object case return Sorted Int Operation get Instance case return As Double Long Operation get Instance case return Boxed Long Operation get Instance case return Distinct Long Operation get Instance case return new Filter Long Operation Long Predicate input read Object case return new Flat Map Long Operation Long Function input read Object case return new Limit Long Operation Unsigned Numeric read Unsigned Long input case return new Map Long Operation Long Unary Operator input read Object case return new Map To Double Long Operation Long To Double Function input read Object case return new Map To Int Long Operation Long To Int Function input read Object case return new Map To Obj Long Operation Long Function input read Object case return new Peek Long Operation Long Consumer input read Object case return Sorted Long Operation get Instance default throw new Illegal Argument Exception Found invalid number number 
package org infinispan factories import org infinispan Advanced Cache import org infinispan Cache import org infinispan cache impl Cache Impl import org infinispan cache impl Encoder Cache import org infinispan cache impl Simple Cache Impl import org infinispan cache impl Stats Collecting Cache import org infinispan commons Cache Configuration Exception import org infinispan commons dataconversion Binary Encoder import org infinispan commons dataconversion Byte Array Wrapper import org infinispan commons dataconversion Compat Mode Encoder import org infinispan commons dataconversion Encoder import org infinispan commons dataconversion Global Marshaller Encoder import org infinispan commons dataconversion Identity Encoder import org infinispan commons marshall Streaming Marshaller import org infinispan configuration cache Configuration import org infinispan configuration cache Configurations import org infinispan configuration cache Statistics Configuration import org infinispan configuration cache Storage Type import org infinispan configuration global Global Configuration import org infinispan encoding Data Conversion import org infinispan eviction Activation Manager import org infinispan eviction Passivation Manager import org infinispan eviction impl Activation Manager Stub import org infinispan eviction impl Passivation Manager Stub import org infinispan expiration Expiration Manager import org infinispan jmx Cache Jmx Registration import org infinispan manager Default Cache Manager import org infinispan notifications cachelistener cluster Cluster Event Manager import org infinispan notifications cachelistener cluster impl Cluster Event Manager Stub import org infinispan persistence manager Persistence Manager import org infinispan persistence manager Persistence Manager Stub import org infinispan stats impl Stats Collector import org infinispan transaction xa recovery Recovery Admin Operations import org infinispan upgrade Rolling Upgrade Manager import org infinispan xsite Site Admin Operations An internal factory for constructing Caches Used by the link Default Cache Manager this is not intended as public p This is a special instance of a link Abstract Component Factory which contains bootstrap information for the link Component Registry p author a href mailto manik jboss org Manik Surtani manik jboss org a since public class Internal Cache Factory extends Abstract Named Cache Component Factory This implementation clones the configuration passed in before using it param configuration to use param global Component Registry global component registry to attach the cache to param cache Name name of the cache return a cache throws Cache Configuration Exception if there are problems with the cfg public Cache create Cache Configuration configuration Global Component Registry global Component Registry String cache Name throws Cache Configuration Exception try if configuration simple Cache return create Simple Cache configuration global Component Registry cache Name else return create And Wire configuration global Component Registry cache Name catch Cache Configuration Exception ce throw ce catch Runtime Exception re throw re catch Exception e throw new Runtime Exception e private Class extends Encoder get Encoder Class Global Configuration global Configuration Configuration configuration boolean compat Enabled configuration compatibility enabled boolean embedded Mode Configurations is Embedded Mode global Configuration if compat Enabled embedded Mode return Compat Mode Encoder class Storage Type storage Type configuration memory storage Type if storage Type Storage Type return Binary Encoder class if embedded Mode storage Type Storage Type return Global Marshaller Encoder class return Identity Encoder class protected Advanced Cache create And Wire Configuration configuration Global Component Registry global Component Registry String cache Name throws Exception Class extends Encoder encoder Class get Encoder Class global Component Registry get Global Configuration configuration Data Conversion key Data Conversion new Data Conversion encoder Class Byte Array Wrapper class Data Conversion value Data Conversion new Data Conversion encoder Class Byte Array Wrapper class Streaming Marshaller marshaller global Component Registry get Or Create Component Streaming Marshaller class Advanced Cache cache new Cache Impl cache Name cache new Encoder Cache cache key Data Conversion value Data Conversion bootstrap cache Name cache configuration global Component Registry marshaller if marshaller null component Registry wire Dependencies marshaller return cache private Advanced Cache create Simple Cache Configuration configuration Global Component Registry global Component Registry String cache Name Advanced Cache cache Class extends Encoder encoder Class get Encoder Class global Component Registry get Global Configuration configuration Statistics Configuration jmx Statistics configuration jmx Statistics boolean statistics Available jmx Statistics null jmx Statistics available Data Conversion key Data Conversion new Data Conversion encoder Class Byte Array Wrapper class Data Conversion value Data Conversion new Data Conversion encoder Class Byte Array Wrapper class if statistics Available cache new Stats Collecting Cache cache Name key Data Conversion value Data Conversion else cache new Simple Cache Impl cache Name key Data Conversion value Data Conversion this configuration configuration cache new Encoder Cache cache key Data Conversion value Data Conversion component Registry new Component Registry cache Name configuration cache global Component Registry global Component Registry get Class Loader Override protected void bootstrap Components if statistics Available register Component new Stats Collector Factory Stats Collector Factory class register Component new Cluster Event Manager Stub Cluster Event Manager class register Component new Passivation Manager Stub Passivation Manager class register Component new Activation Manager Stub Activation Manager class register Component new Persistence Manager Stub Persistence Manager class Override public void cache Components get Or Create Component Expiration Manager class component Registry register Component new Cache Jmx Registration Cache Jmx Registration class get Name true component Registry register Component new Rolling Upgrade Manager Rolling Upgrade Manager class get Name true component Registry register Component cache Cache class get Name true return cache Bootstraps this factory with a Configuration and a Component Registry private void bootstrap String cache Name Advanced Cache cache Configuration configuration Global Component Registry global Component Registry Streaming Marshaller marshaller this configuration configuration injection bootstrap stuff component Registry new Component Registry cache Name configuration cache global Component Registry global Component Registry get Class Loader This is where the bootstrap really happens Registering the cache in the component registry will cause the component registry to look at the cache s Inject methods and construct various components and their dependencies in turn component Registry register Component cache Cache class get Name true component Registry register Component new Cache Jmx Registration Cache Jmx Registration class get Name true if configuration transaction recovery enabled component Registry register Component new Recovery Admin Operations Recovery Admin Operations class get Name true if configuration sites has Enabled Backups component Registry register Component new Site Admin Operations Site Admin Operations class get Name true The Rolling Upgrade Manager should always be added so it is registered in component Registry register Component new Rolling Upgrade Manager Rolling Upgrade Manager class get Name true Override public construct Class component Type throw new Unsupported Operation Exception Should never be invoked this is a bootstrap factory 
package org infinispan registry impl import java lang invoke Method Handles import java util Enum Set import java util Set import java util concurrent Concurrent Map import org infinispan Cache import org infinispan commons util Collection Factory import org infinispan commons util concurrent Concurrent Hash Set import org infinispan configuration cache Configuration import org infinispan configuration cache Configuration Builder import org infinispan configuration global Global Configuration import org infinispan factories annotations Inject import org infinispan manager Embedded Cache Manager import org infinispan registry Internal Cache Registry import org infinispan util logging Log import org infinispan util logging Log Factory Internal Cache Registry Impl author Tristan Tarrant since public class Internal Cache Registry Impl implements Internal Cache Registry private static final Log log Log Factory get Log Method Handles lookup lookup Class private Embedded Cache Manager cache Manager private final Concurrent Map String Enum Set Flag internal Caches Collection Factory make Bounded Concurrent Map private final Set String private Caches new Concurrent Hash Set Inject public void init Embedded Cache Manager cache Manager this cache Manager cache Manager Override public void register Internal Cache String name Configuration configuration register Internal Cache name configuration Enum Set none Of Flag class Synchronized to prevent users from registering the same configuration at the same time Override public synchronized void register Internal Cache String name Configuration configuration Enum Set Flag flags boolean config Present cache Manager get Cache Configuration name null check if it already has been defined Currently we do n t support existing user defined configuration if flags contains Flag internal Caches contains Key name config Present throw log existing Config For Internal Cache name Do n t redefine if config Present return Configuration Builder builder new Configuration Builder read configuration builder jmx Statistics disable Internal caches must not be included in stats counts Global Configuration global Configuration cache Manager get Cache Manager Configuration if flags contains Flag global Configuration global State enabled builder persistence add Single File Store location global Configuration global State persistent Location purge On Startup false preload true fetch Persistent State true Security Actions define Configuration cache Manager name builder build internal Caches put name flags if flags contains Flag private Caches add name Override public synchronized void unregister Internal Cache String name if is Internal Cache name Cache Object Object cache cache Manager get Cache name false if cache null cache stop internal Caches remove name private Caches remove name Security Actions undefine Configuration cache Manager name Override public boolean is Internal Cache String name return internal Caches contains Key name Override public boolean is Private Cache String name return private Caches contains name Override public Set String get Internal Cache Names return internal Caches key Set Override public void filter Private Caches Set String names names remove All private Caches Override public boolean internal Cache Has Flag String name Flag flag Enum Set Flag flags internal Caches get name return flags null flags contains flag 
package org infinispan container import org infinispan container entries Cache Entry import org infinispan container entries Immortal Cache Entry import org infinispan container entries Immortal Cache Value import org infinispan container entries Internal Cache Entry import org infinispan container entries Internal Cache Value import org infinispan container entries Internal Cache Entry import org infinispan container entries Mortal Cache Entry import org infinispan container entries Mortal Cache Value import org infinispan container entries Transient Cache Entry import org infinispan container entries Transient Cache Value import org infinispan container entries Transient Mortal Cache Entry import org infinispan container entries Transient Mortal Cache Value import org infinispan container entries metadata Metadata Internal Cache Entry import org infinispan container entries metadata Metadata Immortal Cache Entry import org infinispan container entries metadata Metadata Immortal Cache Value import org infinispan container entries metadata Metadata Mortal Cache Entry import org infinispan container entries metadata Metadata Mortal Cache Value import org infinispan container entries metadata Metadata Transient Cache Entry import org infinispan container entries metadata Metadata Transient Cache Value import org infinispan container entries metadata Metadata Transient Mortal Cache Entry import org infinispan container entries metadata Metadata Transient Mortal Cache Value import org infinispan container versioning Entry Version import org infinispan container versioning Entry Versions Map import org infinispan context Invocation Context import org infinispan context impl Tx Invocation Context import org infinispan factories annotations Inject import org infinispan metadata Embedded Metadata import org infinispan metadata Metadata import org infinispan util Time Service An implementation that generates non versioned entries author Manik Surtani since public class Internal Entry Factory Impl implements Internal Entry Factory private Time Service time Service Inject public void inject Time Service Time Service time Service this time Service time Service Override public Internal Cache Entry create Object key Object value Metadata metadata long lifespan metadata null metadata lifespan long max Idle metadata null metadata max Idle if is Store Metadata metadata null if lifespan max Idle return new Immortal Cache Entry key value if lifespan max Idle return new Mortal Cache Entry key value lifespan time Service wall Clock Time if lifespan max Idle return new Transient Cache Entry key value max Idle time Service wall Clock Time return new Transient Mortal Cache Entry key value max Idle lifespan time Service wall Clock Time else if lifespan max Idle return new Metadata Immortal Cache Entry key value metadata if lifespan max Idle return new Metadata Mortal Cache Entry key value metadata time Service wall Clock Time if lifespan max Idle return new Metadata Transient Cache Entry key value metadata time Service wall Clock Time return new Metadata Transient Mortal Cache Entry key value metadata time Service wall Clock Time Override public Internal Cache Entry create Cache Entry cache Entry return create cache Entry get Key cache Entry get Value cache Entry get Metadata cache Entry get Lifespan cache Entry get Max Idle Override public Internal Cache Entry create Object key Object value Internal Cache Entry cache Entry return create key value cache Entry get Metadata cache Entry get Created cache Entry get Lifespan cache Entry get Last Used cache Entry get Max Idle Override public Internal Cache Entry create Object key Object value Entry Version version long created long lifespan long last Used long max Idle if version null if lifespan max Idle return new Immortal Cache Entry key value if lifespan max Idle return new Mortal Cache Entry key value lifespan created if lifespan max Idle return new Transient Cache Entry key value max Idle last Used return new Transient Mortal Cache Entry key value max Idle lifespan last Used created else If no metadata passed assumed embedded metadata Metadata metadata new Embedded Metadata Builder lifespan lifespan max Idle max Idle version version build if lifespan max Idle return new Metadata Immortal Cache Entry key value metadata if lifespan max Idle return new Metadata Mortal Cache Entry key value metadata created if lifespan max Idle return new Metadata Transient Cache Entry key value metadata last Used return new Metadata Transient Mortal Cache Entry key value metadata last Used created Override public Internal Cache Entry create Object key Object value Metadata metadata long created long lifespan long last Used long max Idle if is Store Metadata metadata null if lifespan max Idle return new Immortal Cache Entry key value if lifespan max Idle return new Mortal Cache Entry key value lifespan created if lifespan max Idle return new Transient Cache Entry key value max Idle last Used return new Transient Mortal Cache Entry key value max Idle lifespan last Used created else Metadata to store take lifespan and max Idle settings from it long meta Lifespan metadata lifespan long meta Max Idle metadata max Idle if meta Lifespan meta Max Idle return new Metadata Immortal Cache Entry key value metadata if meta Lifespan meta Max Idle return new Metadata Mortal Cache Entry key value metadata created if meta Lifespan meta Max Idle return new Metadata Transient Cache Entry key value metadata last Used return new Metadata Transient Mortal Cache Entry key value metadata last Used created Override public Internal Cache Value create Value Cache Entry cache Entry Metadata metadata cache Entry get Metadata long lifespan cache Entry get Lifespan long max Idle cache Entry get Max Idle if is Store Metadata metadata null if lifespan max Idle return new Immortal Cache Value cache Entry get Value if lifespan max Idle return new Mortal Cache Value cache Entry get Value lifespan if lifespan max Idle return new Transient Cache Value cache Entry get Value max Idle return new Transient Mortal Cache Value cache Entry get Value lifespan max Idle else if lifespan max Idle return new Metadata Immortal Cache Value cache Entry get Value cache Entry get Metadata if lifespan max Idle return new Metadata Mortal Cache Value cache Entry get Value cache Entry get Metadata if lifespan max Idle return new Metadata Transient Cache Value cache Entry get Value cache Entry get Metadata return new Metadata Transient Mortal Cache Value cache Entry get Value cache Entry get Metadata Override Do we need this public Internal Cache Entry create Object key Object value Metadata metadata long lifespan long max Idle if is Store Metadata metadata null if lifespan max Idle return new Immortal Cache Entry key value if lifespan max Idle return new Mortal Cache Entry key value lifespan time Service wall Clock Time if lifespan max Idle return new Transient Cache Entry key value max Idle time Service wall Clock Time return new Transient Mortal Cache Entry key value max Idle lifespan time Service wall Clock Time else Metadata to store take lifespan and max Idle settings from it long meta Lifespan metadata lifespan long meta Max Idle metadata max Idle if meta Lifespan meta Max Idle return new Metadata Immortal Cache Entry key value metadata if meta Lifespan meta Max Idle return new Metadata Mortal Cache Entry key value metadata time Service wall Clock Time if meta Lifespan meta Max Idle return new Metadata Transient Cache Entry key value metadata time Service wall Clock Time return new Metadata Transient Mortal Cache Entry key value metadata time Service wall Clock Time Override public Internal Cache Entry update Internal Cache Entry ice Metadata metadata if is Store Metadata metadata ice return update Metadata Unaware Entry ice metadata lifespan metadata max Idle else return update Metadata Aware Entry ice metadata Override public Internal Cache Entry update Internal Cache Entry cache Entry Object value Metadata metadata Update value and metadata atomically Any attempt to get a copy of the cache entry should also acquire the same lock to avoid returning partially applied cache entry updates synchronized cache Entry cache Entry set Value value Internal Cache Entry original cache Entry cache Entry update cache Entry metadata we have the same instance So we need to reincarnate if mortal if cache Entry get Lifespan original cache Entry cache Entry reincarnate time Service wall Clock Time return cache Entry Override public Cache Entry copy Cache Entry cache Entry synchronized cache Entry return cache Entry clone Override public Internal Cache Entry create key value Metadata metadata if is Store Metadata metadata null return new Internal Cache Entry key value metadata lifespan time Service wall Clock Time else return new Metadata Internal Cache Entry key value metadata time Service wall Clock Time Override public Internal Cache Value get Value From Ctx Or Create New Object key Invocation Context ctx Cache Entry entry ctx lookup Entry key if entry instanceof Internal Cache Entry return Internal Cache Entry entry to Internal Cache Value else if ctx is In Tx Scope Entry Versions Map updated Versions Tx Invocation Context ctx get Cache Transaction get Updated Entry Versions if updated Versions null Entry Version version updated Versions get entry get Key if version null Metadata metadata entry get Metadata if metadata null If no metadata passed assumed embedded metadata metadata new Embedded Metadata Builder lifespan entry get Lifespan max Idle entry get Max Idle version version build return create entry get Key entry get Value metadata to Internal Cache Value else metadata metadata builder version version build return create entry get Key entry get Value metadata to Internal Cache Value return create entry to Internal Cache Value private Internal Cache Entry update Metadata Unaware Entry Internal Cache Entry ice long lifespan long max Idle if ice instanceof Immortal Cache Entry if lifespan if max Idle return ice else return new Transient Cache Entry ice get Key ice get Value max Idle time Service wall Clock Time else if max Idle return new Mortal Cache Entry ice get Key ice get Value lifespan time Service wall Clock Time else long ctm time Service wall Clock Time return new Transient Mortal Cache Entry ice get Key ice get Value max Idle lifespan ctm ctm else if ice instanceof Mortal Cache Entry if lifespan if max Idle return new Immortal Cache Entry ice get Key ice get Value else return new Transient Cache Entry ice get Key ice get Value max Idle time Service wall Clock Time else if max Idle Mortal Cache Entry ice set Lifespan lifespan return ice else long ctm time Service wall Clock Time return new Transient Mortal Cache Entry ice get Key ice get Value max Idle lifespan ctm ctm else if ice instanceof Transient Cache Entry if lifespan if max Idle return new Immortal Cache Entry ice get Key ice get Value else Transient Cache Entry ice set Max Idle max Idle return ice else if max Idle return new Mortal Cache Entry ice get Key ice get Value lifespan time Service wall Clock Time else long ctm time Service wall Clock Time return new Transient Mortal Cache Entry ice get Key ice get Value max Idle lifespan ctm ctm else if ice instanceof Transient Mortal Cache Entry if lifespan if max Idle return new Immortal Cache Entry ice get Key ice get Value else return new Transient Cache Entry ice get Key ice get Value max Idle time Service wall Clock Time else if max Idle return new Mortal Cache Entry ice get Key ice get Value lifespan time Service wall Clock Time else Transient Mortal Cache Entry transient Mortal Entry Transient Mortal Cache Entry ice transient Mortal Entry set Lifespan lifespan transient Mortal Entry set Max Idle max Idle return ice return ice private Internal Cache Entry update Metadata Aware Entry Internal Cache Entry ice Metadata metadata long lifespan metadata lifespan long max Idle metadata max Idle if ice instanceof Metadata Immortal Cache Entry if lifespan if max Idle ice set Metadata metadata return ice else return new Metadata Transient Cache Entry ice get Key ice get Value metadata time Service wall Clock Time else if max Idle return new Metadata Mortal Cache Entry ice get Key ice get Value metadata time Service wall Clock Time else long ctm time Service wall Clock Time return new Metadata Transient Mortal Cache Entry ice get Key ice get Value metadata ctm ctm else if ice instanceof Metadata Mortal Cache Entry if lifespan if max Idle return new Metadata Immortal Cache Entry ice get Key ice get Value metadata else return new Metadata Transient Cache Entry ice get Key ice get Value metadata time Service wall Clock Time else if max Idle ice set Metadata metadata return ice else long ctm time Service wall Clock Time return new Metadata Transient Mortal Cache Entry ice get Key ice get Value metadata ctm ctm else if ice instanceof Metadata Transient Cache Entry if lifespan if max Idle return new Metadata Immortal Cache Entry ice get Key ice get Value metadata else ice set Metadata metadata return ice else if max Idle return new Metadata Mortal Cache Entry ice get Key ice get Value metadata time Service wall Clock Time else long ctm time Service wall Clock Time return new Metadata Transient Mortal Cache Entry ice get Key ice get Value metadata ctm ctm else if ice instanceof Metadata Transient Mortal Cache Entry if lifespan if max Idle return new Metadata Immortal Cache Entry ice get Key ice get Value metadata else return new Metadata Transient Cache Entry ice get Key ice get Value metadata time Service wall Clock Time else if max Idle return new Metadata Mortal Cache Entry ice get Key ice get Value metadata time Service wall Clock Time else ice set Metadata metadata return ice return ice Indicates whether the entire metadata object needs to be stored or not This check is done to avoid keeping the entire metadata object around when only lifespan or max Idle time is stored If more information needs to be stored i e version or the metadata object is not the embedded one keep the entire metadata object around return true if the entire metadata object needs to be stored otherwise simply store lifespan and or max Idle in existing cache entries private boolean is Store Metadata Metadata metadata Internal Cache Entry ice return metadata null ice null is Entry Metadata Aware ice metadata version null metadata instanceof Embedded Metadata private boolean is Entry Metadata Aware Internal Cache Entry ice return ice instanceof Metadata Immortal Cache Entry ice instanceof Metadata Mortal Cache Entry ice instanceof Metadata Transient Cache Entry ice instanceof Metadata Transient Mortal Cache Entry 
package org infinispan interceptors impl import static org infinispan commons util Util to Str import java util Collection import java util Collections import javax transaction Status import javax transaction System Exception import javax transaction Transaction import org infinispan Invalid Cache Usage Exception import org infinispan commands Flag Affected Command import org infinispan commands Visitable Command import org infinispan commands control Lock Control Command import org infinispan commands tx Transaction Boundary Command import org infinispan commands write Write Command import org infinispan commons Cache Exception import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan context impl Tx Invocation Context import org infinispan factories Component Registry import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan interceptors Base Async Interceptor import org infinispan interceptors Invocation Exception Function import org infinispan lifecycle Component Status import org infinispan manager Cache Container import org infinispan statetransfer Outdated Topology Exception import org infinispan transaction Write Skew Exception import org infinispan transaction impl Abstract Cache Transaction import org infinispan transaction impl Transaction Table import org infinispan util User Raised Functional Exception import org infinispan util logging Log import org infinispan util logging Log Factory author Mircea Markus jboss com author Galder Zamarre o since public class Invocation Context Interceptor extends Base Async Interceptor private Component Registry component Registry private Transaction Table tx Table private static final Log log Log Factory get Log Invocation Context Interceptor class private static final boolean trace log is Trace Enabled private volatile boolean shutting Down false private final Invocation Exception Function suppress Exceptions Handler new Invocation Exception Function Override public Object apply Invocation Context r Ctx Visitable Command r Command Throwable throwable throws Throwable if throwable instanceof Invalid Cache Usage Exception throwable instanceof Interrupted Exception throw throwable if throwable instanceof User Raised Functional Exception throw throwable get Cause else rethrow Exception r Ctx r Command throwable Ignore the exception return r Command instanceof Lock Control Command Boolean null Start priority private void set Start Status shutting Down false Stop priority private void set Stop Status shutting Down true Inject public void init Component Registry component Registry Transaction Table tx Table this component Registry component Registry this tx Table tx Table Override public Object visit Command Invocation Context ctx Visitable Command command throws Throwable if trace log tracef Invoked with command s and Invocation Context s command ctx if ctx null throw new Illegal State Exception Null context not allowed Component Status status component Registry get Status if status allow Invocations ignore Command ctx command status return invoke Next And Exceptionally ctx command suppress Exceptions Handler private void ignore Command Invocation Context ctx Visitable Command command Component Status status throws Exception switch status case case throw log cache Is Terminated get Cache Name Prefix status to String case if stopping And Not Allowed status ctx throw log cache Is Stopping get Cache Name Prefix default Allow the command to run private void rethrow Exception Invocation Context ctx Visitable Command command Throwable th throws Throwable Only check for fail silently if there s a failure boolean suppress Exceptions command instanceof Flag Affected Command Flag Affected Command command has Any Flag Flag Bit Sets If we are shutting down there is every possibility that the invocation fails suppress Exceptions suppress Exceptions shutting Down if suppress Exceptions if shutting Down log trace Exception while executing code but we re shutting down so failing silently th else log trace Exception while executing code failing silently th else if th instanceof Write Skew Exception We log this as rather than see log debug Exception executing call th else if th instanceof Outdated Topology Exception if trace log tracef Topology changed retrying command s th else Collection affected Keys extract Written Keys ctx command log execution Error command get Class get Simple Name to Str affected Keys th if ctx is In Tx Scope ctx is Origin Local if trace log trace Transaction marked for rollback as exception was received mark Tx For Rollback ctx if ctx is Origin Local th instanceof Cache Exception th new Cache Exception th throw th private Collection extract Written Keys Invocation Context ctx Visitable Command command if command instanceof Write Command return Write Command command get Affected Keys else if command instanceof Lock Control Command return Collections empty List else if command instanceof Transaction Boundary Command return Tx Invocation Context Abstract Cache Transaction ctx get Affected Keys return Collections empty List private String get Cache Name Prefix String cache Name component Registry get Cache Name String prefix Cache cache Name if cache Name equals Cache Container prefix Default cache return prefix If the cache is non transaction invocations or transactional invocations for transaction others than the ongoing ones are no allowed This method returns true if under this circumstances meet Otherwise it returns false private boolean stopping And Not Allowed Component Status status Invocation Context ctx throws Exception return status is Stopping ctx is In Tx Scope is Ongoing Transaction ctx private void mark Tx For Rollback Invocation Context ctx throws Throwable if ctx is Origin Local ctx is In Tx Scope Transaction transaction Tx Invocation Context ctx get Transaction if transaction null is Valid Running Tx transaction transaction set Rollback Only private boolean is Valid Running Tx Transaction tx throws Exception int status try status tx get Status catch System Exception e throw new Cache Exception Unexpected e return status Status private boolean is Ongoing Transaction Invocation Context ctx throws System Exception if ctx is In Tx Scope return false if ctx is Origin Local return tx Table contains Local Tx Tx Invocation Context ctx get Global Transaction else return tx Table contain Remote Tx Tx Invocation Context ctx get Global Transaction 
package org infinispan marshall core import java io Exception import java io Object Output import java util function Bi Consumer import org infinispan commons marshall Advanced Externalizer import org infinispan commons marshall Serialize With import org infinispan commons marshall Streaming Marshaller import org infinispan commons marshall jboss Abstract Boss Marshaller import org infinispan commons marshall jboss Default Context Class Resolver import org infinispan commons marshall jboss Serialize With Ext Factory import org infinispan configuration global Global Configuration import org jboss marshalling Class Resolver import org jboss marshalling Externalize import org jboss marshalling Object Table import org jboss marshalling Unmarshaller Boss Marshalling based marshaller that is oriented at internal embedded Infinispan usage It uses of a custom object table for Infinispan based Externalizer instances that are either internal or user defined p The reason why this is implemented specially in Infinispan rather than resorting to Java serialization or even the more efficient Boss serialization is that a lot of efficiency can be gained when a majority of the serialization that occurs has to do with a small set of known types such as link org infinispan transaction xa Global Transaction or link org infinispan commands Replicable Command and class type information can be replaced with simple magic numbers p Unknown types typically user data falls back to Java serialization author Galder Zamarre o author Sanne Grinovero since public class Boss Marshaller extends Abstract Boss Marshaller implements Streaming Marshaller final Global Configuration global Cfg final Global Marshaller marshaller public Boss Marshaller this global Cfg null this marshaller null public Boss Marshaller Global Marshaller marshaller Global Configuration global Cfg this global Cfg global Cfg this marshaller marshaller Override public void start super start base Cfg set Class Externalizer Factory new Serialize With Ext Factory base Cfg set Object Table new Object Table Override public Writer get Object Writer Object object throws Exception Bi Consumer Object Output Object writer marshaller find Writer object return writer null writer accept null Override public Object read Object Unmarshaller unmarshaller throws Exception Class Not Found Exception Advanced Externalizer Object ext marshaller find Externalizer In unmarshaller return ext read Object unmarshaller Class Resolver class Resolver global Cfg serialization class Resolver if class Resolver null Override the class resolver with one that can detect injected classloaders via Advanced Cache with Class Loader calls Class Loader cl global Cfg class Loader class Resolver new Default Context Class Resolver cl base Cfg set Class Resolver class Resolver Override public void stop super stop Just in case to avoid leaking class resolver which references classloader base Cfg set Class Resolver null Override public boolean is Marshallable Candidate Object o return super is Marshallable Candidate o o get Class get Annotation Serialize With class null o get Class get Annotation Externalize class null 
package org infinispan remoting transport jgroups import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons marshall Instance Reusing Advanced Externalizer import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan remoting transport Address An encapsulation of a Groups Address author Manik Surtani since public class Groups Address implements Address protected final org jgroups Address address private final int hash Code public Groups Address final org jgroups Address address if address null throw new Illegal Argument Exception Address shall not be null this address address this hash Code address hash Code Override public boolean equals final Object o if this o return true if o null get Class o get Class return false Groups Address that Groups Address o return hash Code that hash Code address equals that address Override public int hash Code return hash Code Override public String to String return String value Of address public org jgroups Address get Groups Address return address Override public int compare To Address o Groups Address oa Groups Address o return address compare To oa address public static final class Externalizer extends Instance Reusing Advanced Externalizer Groups Address public Externalizer super false Override public void do Write Object Object Output output Groups Address address throws Exception try org jgroups util Util write Address address address output catch Exception e throw new Exception e Override public Groups Address do Read Object Object Input unmarshaller throws Exception Class Not Found Exception try Note Use org jgroups Address not the concrete class Otherwise applications that only use local caches would have to bundle the Groups jar because the verifier needs to check the arguments of from Groups Address even if this method is never called org jgroups Address address org jgroups util Util read Address unmarshaller return Groups Address Groups Address Cache from Groups Address address catch Exception e throw new Exception e Override public Integer get Id return Ids Override public Set Class extends Groups Address get Type Classes return Util Class extends Groups Address as Set Groups Address class 
package org infinispan remoting transport jgroups import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import org jgroups Address import org jgroups util Extended import org jgroups util Name Cache Cache Groups Address instances author Dan Berindei since public class Groups Address Cache private static final Concurrent Map Address Groups Address address Cache new Concurrent Hash Map public static org infinispan remoting transport Address from Groups Address Address jgroups Address New entries are rarely added added after startup but compute If Absent synchronizes every time Groups Address ispn Address address Cache get jgroups Address if ispn Address null return ispn Address return address Cache compute If Absent jgroups Address uuid if jgroups Address instanceof Extended return new Groups Topology Aware Address Extended jgroups Address else return new Groups Address jgroups Address static void prune Address Cache Prune the Groups addresses Local Ds no longer in the cache from the our address cache address Cache for Each address ignore if Name Cache get address null address Cache remove address 
package org infinispan remoting transport jgroups import java io Exception import java io Object Input import java io Object Output import java util Arrays import java util Collections import java util Set import org infinispan commons marshall Instance Reusing Advanced Externalizer import org infinispan marshall core Ids import org infinispan remoting transport Topology Aware Address import org jgroups util Extended import org jgroups util Name Cache import org jgroups util Util An encapsulation of a Groups link Extended with a site id a rack id and a machine id author Bela Ban since public class Groups Topology Aware Address extends Groups Address implements Topology Aware Address private static final byte Util string To Bytes site id private static final byte Util string To Bytes rack id private static final byte Util string To Bytes machine id public static Extended random String name String site Id String rack Id String machine Id Extended uuid Extended random name if name null Name Cache add uuid name add Id uuid site Id add Id uuid rack Id add Id uuid machine Id return uuid private static void add Id Extended uuid byte key String string Value if string Value null uuid put key Util string To Bytes string Value public Groups Topology Aware Address Extended address super address Override public String get Site Id return get String Override public String get Rack Id return get String Override public String get Machine Id return get String public boolean matches String site Id String rack Id String machine Id return check Component site Id check Component rack Id check Component machine Id Override public boolean is Same Site Topology Aware Address addr if addr instanceof Groups Topology Aware Address Extended other Groups Topology Aware Address addr topology Address return check Component other return check Component addr get Site Id Override public boolean is Same Rack Topology Aware Address addr if addr instanceof Groups Topology Aware Address Extended other Groups Topology Aware Address addr topology Address return check Component other check Component other return check Component addr get Site Id check Component addr get Rack Id Override public boolean is Same Machine Topology Aware Address addr if addr instanceof Groups Topology Aware Address Extended other Groups Topology Aware Address addr topology Address return check Component other check Component other check Component other return check Component addr get Site Id check Component addr get Rack Id check Component addr get Machine Id private boolean check Component byte key Extended uuid return check Component key uuid get key private boolean check Component byte key String string Value return check Component key Util string To Bytes string Value private boolean check Component byte key byte expected Value return Arrays equals get Bytes key expected Value private String get String byte key return Util bytes To String get Bytes key private byte get Bytes byte key return topology Address get key private Extended topology Address return Extended address public static final class Externalizer extends Instance Reusing Advanced Externalizer Groups Topology Aware Address public Externalizer super false Override public void do Write Object Object Output output Groups Topology Aware Address address throws Exception try org jgroups util Util write Address address address output catch Exception e throw new Exception e Override public Groups Topology Aware Address do Read Object Object Input unmarshaller throws Exception Class Not Found Exception try org jgroups Address jgroups Address org jgroups Address org jgroups util Util read Address unmarshaller Note Use org jgroups Address not the concrete class Otherwise applications that only use local caches would have to bundle the Groups jar because the verifier needs to check the arguments of from Groups Address even if this method is never called return Groups Topology Aware Address Groups Address Cache from Groups Address jgroups Address catch Exception e throw new Exception e Override public Set Class extends Groups Topology Aware Address get Type Classes return Collections singleton Groups Topology Aware Address class Override public Integer get Id return Ids 
package org infinispan remoting transport jgroups import static org infinispan remoting transport jgroups Groups Address Cache from Groups Address import static org infinispan util logging Log Factory import java io Byte Array Input Stream import java io Exception import java net import java util Array List import java util Arrays import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Objects import java util Properties import java util Set import java util concurrent Completable Future import java util concurrent Execution Exception import java util concurrent Executor import java util concurrent Executor Service import java util concurrent Future import java util concurrent Scheduled Executor Service import java util concurrent Time Unit import java util concurrent locks Condition import java util concurrent locks Lock import java util concurrent locks Reentrant Lock import java util function Function import java util stream Collectors import javax management Bean Server import javax management Object Name import org infinispan Illegal Lifecycle State Exception import org infinispan commands Flag Affected Command import org infinispan commands Replicable Command import org infinispan commons Cache Configuration Exception import org infinispan commons Cache Exception import org infinispan commons io Byte Buffer import org infinispan commons marshall Streaming Marshaller import org infinispan commons util File Lookup import org infinispan commons util File Lookup Factory import org infinispan commons util Typed Properties import org infinispan commons util Util import org infinispan configuration global Global Configuration import org infinispan configuration global Transport Configuration import org infinispan configuration global Transport Configuration Builder import org infinispan configuration parsing Xml Config Helper import org infinispan context impl Flag Bit Sets import org infinispan factories Known Component Names import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan jmx Jmx Util import org infinispan notifications cachemanagerlistener Cache Manager Notifier import org infinispan remoting inboundhandler Deliver Order import org infinispan remoting inboundhandler Inbound Invocation Handler import org infinispan remoting inboundhandler Reply import org infinispan remoting responses Cache Not Found Response import org infinispan remoting responses Exception Response import org infinispan remoting responses Response import org infinispan remoting responses Successful Response import org infinispan remoting rpc Response Filter import org infinispan remoting rpc Response Mode import org infinispan remoting transport Abstract Request import org infinispan remoting transport Address import org infinispan remoting transport Backup Response import org infinispan remoting transport impl Filter Map Response Collector import org infinispan remoting transport impl Multi Target Request import org infinispan remoting transport Request import org infinispan remoting transport impl Request Repository import org infinispan remoting transport Response Collector import org infinispan remoting transport Transport import org infinispan remoting transport impl Single Target Request import org infinispan util Time Service import org infinispan util concurrent Completable Futures import org infinispan util logging Log import org infinispan util logging Log Factory import org infinispan xsite Site Backup import org infinispan xsite Site Replicate Command import org jgroups Anycast Address import org jgroups Event import org jgroups Header import org jgroups Channel import org jgroups Merge View import org jgroups Message import org jgroups Receiver import org jgroups Up Handler import org jgroups View import org jgroups blocks Request Correlator import org jgroups conf Class Configurator import org jgroups jmx Jmx Configurator import org jgroups protocols relay import org jgroups protocols relay Route Status Listener import org jgroups protocols relay Site Address import org jgroups protocols relay Site Master import org jgroups protocols tom import org jgroups util Extended import org jgroups util Message Batch An encapsulation of a Groups transport Groups transports can be configured using a variety of methods usually by passing in one of the following properties ul li tt configuration String tt a Groups configuration String li li tt configuration Xml tt Groups configuration as a String li li tt configuration File tt String pointing to a Groups configuration file li li tt channel Lookup tt Fully qualified class name of a link Groups Channel Lookup instance li ul These are normally passed in as Properties in link Transport Configuration Builder with Properties Properties or in the Infinispan configuration file author Manik Surtani author Galder Zamarre o since public class Groups Transport implements Transport public static final String configuration String public static final String configuration Xml public static final String configuration File public static final String channel Lookup public static final short short Message Flag value Message Flag value Message Flag value protected static final String default configs default jgroups udp xml private static final Log log Log Factory get Log Groups Transport class private static final boolean trace log is Trace Enabled private static final Completable Future Map Address Response Completable Future completed Future Collections empty Map private static final Response Collector Map Address Response new Singleton Map Response Collector false private static final Response Collector Map Address Response new Singleton Map Response Collector true private static final short short private static final short Class Configurator get Protocol Id Request Correlator class private static final byte private static final byte private static final byte private final Lock view Update Lock new Reentrant Lock private final Condition view Update Condition view Update Lock new Condition private final Thread Pool Probe Handler probe Handler private final Channel Callbacks channel Callbacks new Channel Callbacks protected boolean connect Channel true disconnect Channel true close Channel true protected Global Configuration configuration protected Typed Properties props protected Streaming Marshaller marshaller protected Cache Manager Notifier notifier protected Time Service time Service protected Inbound Invocation Handler invocation Handler protected Scheduled Executor Service timeout Executor protected Executor remote Executor protected Channel channel protected Address address protected Address physical Address these members are not valid until we have received the first view on a second thread and channel Connected Latch is signaled protected volatile Cluster View cluster View new Cluster View Cluster View Collections empty List null private volatile Set String sites View Collections empty Set private Completable Future Void next View Future new Completable Future private Request Repository requests Lifecycle and setup stuff private boolean global Stats Enabled private Bean Server mbean Server private String domain This form is used when the transport is created by an external source and passed in to the Global Configuration param channel created and running channel to use public Groups Transport Channel channel this channel channel if channel null throw new Illegal Argument Exception Can not deal with a null channel if channel is Connected throw new Illegal Argument Exception Channel passed in can not already be connected probe Handler new Thread Pool Probe Handler public Groups Transport probe Handler new Thread Pool Probe Handler private static List org jgroups Address to Groups Address List Collection Address addresses if addresses null return null return addresses stream map Groups Transport to Groups Address collect Collectors to List Initializes the transport with global cache configuration and transport specific properties Inject public void initialize Global Configuration configuration Streaming Marshaller marshaller Cache Manager Notifier notifier Time Service time Service Inbound Invocation Handler global Handler Component Name Known Component Names Scheduled Executor Service timeout Executor Component Name Known Component Names Executor Service remote Executor this configuration configuration this marshaller marshaller this notifier notifier this time Service time Service this invocation Handler global Handler this timeout Executor timeout Executor this remote Executor remote Executor this probe Handler update Thread Pool remote Executor Override public Map Address Response invoke Remotely Collection Address recipients Replicable Command command Response Mode mode long timeout Response Filter response Filter Deliver Order deliver Order boolean anycast throws Exception Completable Future Map Address Response future invoke Remotely Async recipients command mode timeout response Filter deliver Order anycast try no need to set a timeout for the future The rpc invocation is guaranteed to complete within the timeout milliseconds return Completable Futures await future catch Execution Exception e throw Util rewrap As Cache Exception e get Cause Override public Completable Future Map Address Response invoke Remotely Async Collection Address recipients Replicable Command command Response Mode mode long timeout Response Filter response Filter Deliver Order deliver Order boolean anycast if recipients null recipients is Empty do n t send if recipients list is empty log tracef Destination list is empty no need to send command s command return Cluster View view this cluster View List Address local Members view get Members int members Size local Members size boolean ignore Leavers mode Response Mode mode Response Mode boolean total Order deliver Order Deliver Order boolean send Staggered Request mode Response Mode deliver Order Deliver Order recipients null recipients size timeout boolean rsvp is Rsvp Command command Never allow a switch from anycast broadcast and broadcast unicast We re still keeping the option to switch for a while in case forcing a broadcast in a node replicated cache impacts performance significantly If that is the case we may need to use close Connection instead boolean broadcast recipients null if total Order recipients null members Size do n t send if recipients list is empty log tracef The cluster has a single node no need to broadcast command s command return Address single Target compute Single Target recipients local Members members Size broadcast total Order if total Order address equals single Target log tracef Skipping request to self for command s command return if mode is Asynchronous Asynchronous Send the message but do n t wait for responses return perform Async Remote Invocation recipients command deliver Order rsvp broadcast single Target Collection Address actual Targets broadcast local Members recipients assert single Target null actual Targets null return perform Sync Remote Invocation actual Targets command mode timeout response Filter deliver Order ignore Leavers send Staggered Request broadcast single Target Override public void send To Address destination Replicable Command command Deliver Order deliver Order throws Exception if destination equals address removed require Non Null this will throw a in that case if trace log trace send To not sending to self return send Command destination command Request deliver Order is Rsvp Command command true Override public void send To Many Collection Address targets Replicable Command command Deliver Order deliver Order throws Exception if targets null send Command To All command Request deliver Order false else send Command targets command Request deliver Order false Override public Map Address Response invoke Remotely Map Address Replicable Command commands Response Mode mode long timeout boolean use Priority Queue Response Filter response Filter boolean total Order boolean anycast throws Exception Deliver Order deliver Order Deliver Order if total Order deliver Order Deliver Order else if use Priority Queue deliver Order Deliver Order return invoke Remotely commands mode timeout response Filter deliver Order anycast Override public Map Address Response invoke Remotely Map Address Replicable Command commands Response Mode mode long timeout Response Filter response Filter Deliver Order deliver Order boolean anycast throws Exception if commands null commands is Empty do n t send if recipients list is empty log trace Destination list is empty no need to send message return Collections empty Map if mode is Synchronous Sync Map Response Collector collector new Sync Map Response Collector false commands size Completable Future Map Address Response request invoke Commands commands key Set commands get collector timeout deliver Order try return Completable Futures await request catch Execution Exception e throw Util rewrap As Cache Exception e get Cause else commands for Each a command send Command a command Request deliver Order is Rsvp Command command true return Collections empty Map Override public Backup Response backup Remotely Collection Site Backup backups Site Replicate Command command throws Exception if trace log tracef About to send to backups s command s backups command boolean rsvp is Rsvp Command command Map Site Backup Future Response sync Backup Calls new Hash Map backups size for Site Backup xsb backups Address recipient Groups Address Cache from Groups Address new Site Master xsb get Site Name if xsb is Sync long timeout xsb get Timeout long request Id requests new Request Id Single Site Request Response request new Single Site Request Passthrough Single Response Collector request Id requests xsb get Site Name add Request request try send Command recipient command request get Request Id Deliver Order rsvp false if timeout request set Timeout timeout Executor timeout Time Unit catch Throwable t request cancel true throw t sync Backup Calls put xsb request else send Command recipient command Request Deliver Order false false return new Groups Backup Response sync Backup Calls time Service Override public boolean is Coordinator return cluster View is Coordinator Override public Address get Coordinator return cluster View get Coordinator Override public Address get Address return address Override public List Address get Physical Addresses if physical Address null channel null org jgroups Address addr org jgroups Address channel down new Event Event channel get Address if addr null return Collections empty List physical Address new Groups Address addr return Collections singleton List physical Address Override public List Address get Members return cluster View get Members Override public boolean is Multicast Capable return channel get Protocol Stack get Transport supports Multicasting Override public void start props Typed Properties to Typed Properties configuration transport properties requests new Request Repository if log is Info Enabled log starting Groups Channel configuration transport cluster Name init Channel channel set Receiver channel Callbacks set Site View Listener channel Callbacks set Site Master Picker new Site Master Picker Impl start Groups Channel If Needed wait For Initial Nodes channel get Protocol Stack get Transport register Probe Handler probe Handler protected void init Channel final Transport Configuration transport Cfg configuration transport if channel null build Channel if connect Channel Can not change the name if the channel Lookup already connected the channel String transport Node Name transport Cfg node Name if transport Node Name null transport Node Name length long range Short long random In Range long Math random range range transport Node Name transport Node Name random In Range channel set Name transport Node Name Channel must be set to false so we do n t see our own messages otherwise invalidations targeted at remote instances will be received by self total order needs to deliver own messages the invoke Remotely method has a total order boolean that when it is false it discard our own messages maintaining the property needed channel set Discard Own Messages false if we have a Topology Aware Consistent Hash we need to set our own address generator in Groups if transport Cfg has Topology Info We can do this only if the channel has n t been started already if connect Channel channel add Address Generator Groups Topology Aware Address random channel get Name transport Cfg site Id transport Cfg rack Id transport Cfg machine Id else org jgroups Address jgroups Address channel get Address if jgroups Address instanceof Extended Groups Topology Aware Address address new Groups Topology Aware Address Extended jgroups Address if address matches transport Cfg site Id transport Cfg rack Id transport Cfg machine Id throw new Cache Exception Topology information does not match the one set by the provided Groups channel else throw new Cache Exception Groups address does not contain topology coordinates private void set Site View Listener Route Status Listener listener relay channel get Protocol Stack find Protocol class if relay null relay set Route Status Listener listener private void set Site Master Picker Site Master Picker Impl site Master Picker relay channel get Protocol Stack find Protocol class if relay null relay site Master Picker site Master Picker private void start Groups Channel If Needed String cluster Name configuration transport cluster Name if connect Channel try channel connect cluster Name catch Exception e throw new Cache Exception Unable to start Groups Channel e try Normally this would be done by Cache Manager Jmx Registration but the channel is not started when the cache manager starts but when first cache starts so it s safer to do it here global Stats Enabled configuration global Jmx Statistics enabled if global Stats Enabled String group Name String format type channel cluster s Object Name quote cluster Name mbean Server Jmx Util lookup Bean Server configuration domain Jmx Util build Jmx Domain configuration mbean Server group Name Jmx Configurator register Channel channel mbean Server domain cluster Name true catch Exception e throw new Cache Exception Channel connected but unable to register Beans e if connect Channel the channel was already started externally we need to initialize our member list receive Cluster View channel get View if log is Info Enabled log local And Physical Address cluster Name get Address get Physical Addresses private void wait For Initial Nodes int initial Cluster Size configuration transport initial Cluster Size if initial Cluster Size return long timeout configuration transport initial Cluster Timeout long remaining Nanos Time Unit to Nanos timeout view Update Lock lock try while channel null channel get View get Members size initial Cluster Size remaining Nanos log debugf Waiting for d nodes current view has d initial Cluster Size channel get View get Members size remaining Nanos view Update Condition await Nanos remaining Nanos catch Interrupted Exception e log interrupted Waiting For Coordinator e Thread current Thread interrupt finally view Update Lock unlock if remaining Nanos throw log timeout Waiting For Initial Nodes initial Cluster Size channel get View get Members log debugf Initial cluster size of d nodes reached initial Cluster Size This is per so the in use should be the private void build Channel File Lookup file Lookup File Lookup Factory new Instance in order of preference we first look for an external Groups file then a set of properties and finally the legacy Groups String properties String cfg if props null if props contains Key String channel Lookup Class Name props get Property try Groups Channel Lookup lookup Util get Instance channel Lookup Class Name configuration class Loader channel lookup get Groups Channel props connect Channel lookup should Connect disconnect Channel lookup should Disconnect close Channel lookup should Close catch Class Cast Exception e log wrong Type For Groups Channel Lookup channel Lookup Class Name e throw new Cache Exception e catch Exception e log error Instantiating Groups Channel Lookup channel Lookup Class Name e throw new Cache Exception e if channel null props contains Key cfg props get Property Collection confs Collections empty List try confs file Lookup lookup File Locations cfg configuration class Loader catch Exception io ignore we check confs later for various states if confs is Empty throw log jgroups Configuration Not Found cfg else if confs size log ambiguous Configuration Files Util to Str confs try channel new Channel confs iterator next catch Exception e throw log error Creating Channel From Config File cfg e if channel null props contains Key cfg props get Property try channel new Channel Xml Config Helper string To Element cfg catch Exception e throw log error Creating Channel From cfg e if channel null props contains Key cfg props get Property try channel new Channel new Byte Array Input Stream cfg get Bytes catch Exception e throw log error Creating Channel From Config String cfg e if channel null log unable To Use Groups Properties Provided props try channel new Channel file Lookup lookup File Location configuration class Loader catch Exception e throw log error Creating Channel From Config File e protected void receive Cluster View View new View The first view is installed before returning from Channel connect So we need to set the local address here if address null address from Groups Address channel get Address List List Address sub Groups if new View instanceof Merge View received Merged View channel cluster Name new View sub Groups new Array List List View jgroups Sub Groups Merge View new View get Subgroups for View group jgroups Sub Groups sub Groups add from Groups Address List group get Members else received Cluster View channel cluster Name new View sub Groups Collections empty List long view Id new View get View Id get Id List Address members from Groups Address List new View get Members if members is Empty return Cluster View old View this cluster View Update every view related field while holding the lock so that wait For View only returns after everything was updated Completable Future Void old Future null view Update Lock lock try Delta view debug log for large cluster if log is Debug Enabled old View get Members null List Address joined new Array List members joined remove All old View get Members List Address left new Array List old View get Members left remove All members log debugf Joined s Left s joined left this cluster View new Cluster View int view Id members address Create a completable future for the new view old Future next View Future next View Future new Completable Future Wake up any threads that are waiting to know about who the is Coordinator is do it before the notifications so if a listener throws an exception we can still start view Update Condition signal All finally view Update Lock unlock Complete the future for the old view if old Future null Completable Future Void future old Future remote Executor execute future complete null now notify listeners after updating the is Coordinator boolean has Notifier notifier null if has Notifier if sub Groups is Empty final Address address get Address notifier notify Merge members old View get Members address int view Id sub Groups else notifier notify View Change members old View get Members get Address int view Id Targets leaving may finish some requests and potentially potentially block for a long time We do n t want to block view handling so we unblock the commands on a separate thread remote Executor execute requests for Each request request on New View cluster View get Members Set Groups Address Cache prune Address Cache private static List Address from Groups Address List List org jgroups Address list return Collections unmodifiable List list stream map Groups Address Cache from Groups Address collect Collectors to List Override public void stop if channel null channel get Protocol Stack get Transport unregister Probe Handler probe Handler String cluster Name configuration transport cluster Name try if disconnect Channel channel null channel is Connected log disconnect Groups cluster Name Unregistering before disconnecting closing because after that the cluster name is null if global Stats Enabled Jmx Configurator unregister Channel channel mbean Server domain channel get Cluster Name channel disconnect if close Channel channel null channel is Open channel close catch Exception to Log log problem Closing Channel to Log cluster Name if requests null requests for Each request request cancel log cache Manager Is Stopping channel null address null cluster View new Cluster View Cluster View Collections empty List null requests null Completable Future Void old Future null view Update Lock lock try Create a completable future for the new view old Future next View Future next View Future new Completable Future Wake up any threads blocked in wait For View view Update Condition signal All finally view Update Lock unlock And finally complete the future for the old view if old Future null old Future complete null Override public int get View Id if channel null throw new Cache Exception The cache has been stopped and invocations are not allowed return cluster View get View Id Override public Completable Future Void with View int expected View Id Cluster View view this cluster View if view is View Id At Least expected View Id return Completable Futures completed Null if trace log tracef Waiting for transaction data for view d current view is d expected View Id view get View Id view Update Lock lock try view this cluster View if view is View Id At Least Cluster View throw new Illegal Lifecycle State Exception else if view is View Id At Least expected View Id return Completable Futures completed Null else return next View Future then Compose nil with View expected View Id finally view Update Lock unlock Override public void wait For View int view Id throws Interrupted Exception if channel null return log tracef Waiting on view d being accepted view Id long remaining Nanos Long view Update Lock lock try while channel null get View Id view Id remaining Nanos remaining Nanos view Update Condition await Nanos remaining Nanos finally view Update Lock unlock Override public Log get Log return log Override public final void check Total Order Supported For replicated and distributed tx caches we use as total order protocol if channel get Protocol Stack find Protocol class null throw new Cache Configuration Exception In order to support total order based transaction the protocol must be present in the Groups s config Override public Set String get Sites View return sites View Override public Completable Future invoke Command Address target Replicable Command command Response Collector collector Deliver Order deliver Order long timeout Time Unit unit long request Id requests new Request Id Single Target Request request new Single Target Request collector request Id requests target add Request request send Command target command request Id deliver Order is Rsvp Command command true if timeout request set Timeout timeout Executor timeout unit return request Override public Completable Future invoke Command Collection Address targets Replicable Command command Response Collector collector Deliver Order deliver Order long timeout Time Unit unit long request Id requests new Request Id Address excluded Target deliver Order Deliver Order null get Address Multi Target Request request new Multi Target Request collector request Id requests targets excluded Target try add Request request send Command targets command request Id deliver Order is Rsvp Command command catch Throwable t request cancel true throw t if timeout request set Timeout timeout Executor timeout unit return request Override public Completable Future invoke Command On All Replicable Command command Response Collector collector Deliver Order deliver Order long timeout Time Unit unit long request Id requests new Request Id Address excluded Target deliver Order Deliver Order null get Address Multi Target Request request new Multi Target Request collector request Id requests cluster View get Members excluded Target try add Request request send Command To All command request Id deliver Order is Rsvp Command command catch Throwable t request cancel true throw t if timeout request set Timeout timeout Executor timeout unit return request Override public Completable Future invoke Command Staggered Collection Address targets Replicable Command command Response Collector collector Deliver Order deliver Order long timeout Time Unit unit long request Id requests new Request Id Staggered Request request new Staggered Request collector request Id requests targets get Address command deliver Order timeout unit this try add Request request request send Next Message catch Throwable t request cancel true throw t return request Override public Completable Future invoke Commands Collection Address targets Function Address Replicable Command command Generator Response Collector response Collector long timeout Deliver Order deliver Order long request Id request Id requests new Request Id Address excluded Target get Address Multi Target Request request new Multi Target Request response Collector request Id requests targets excluded Target add Request request try for Address target targets Replicable Command command command Generator apply target boolean rsvp is Rsvp Command command send Command target command request Id deliver Order rsvp true catch Throwable t request cancel true throw t if timeout request set Timeout timeout Executor timeout Time Unit return request private void add Request Abstract Request request try requests add Request request request on New View cluster View get Members Set catch Throwable t Removes the request and the scheduled task if necessary request cancel true throw t void send Command Address target Replicable Command command long request Id Deliver Order deliver Order boolean rsvp boolean no Relay Message message new Message to Groups Address target marshall Request message command request Id set Message Flags message deliver Order rsvp no Relay if trace log Command command request Id target to String send message private static boolean is Rsvp Command Replicable Command command return command instanceof Flag Affected Command Flag Affected Command command has Any Flag Flag Bit Sets private static org jgroups Address to Groups Address Address address return Groups Address address get Groups Address private void marshall Request Message message Replicable Command command long request Id try Byte Buffer bytes marshaller object To Buffer command message set Buffer bytes get Buf bytes get Offset bytes get Length add Request Header message request Id catch Runtime Exception e throw e catch Exception e throw new Runtime Exception Failure to marshal argument s e private static void set Message Flags Message message Deliver Order deliver Order boolean rsvp boolean no Relay if no Relay message set Flag Message Flag value short flags encode Deliver Mode deliver Order message set Flag flags Only the commands in total order must be received by the originator if deliver Order Deliver Order message set Transient Flag Message Transient Flag value if rsvp message set Flag Message Flag value private void log Command Replicable Command command long request Id String targets if request Id Request log tracef s sending request d to s s address request Id targets command else log tracef s sending command to s s address targets command private void send Message message try channel send message catch Exception e if channel is Connected throw new Cache Exception e else throw log cache Manager Is Stopping private void add Request Header Message message long request Id Remove the header and store the request id in the buffer if request Id Request Header header new Request Correlator Header request Id message put Header header private static short encode Deliver Mode Deliver Order deliver Order switch deliver Order case return Message Flag value case return Message Flag value case return short Message Flag value Message Flag value default throw new Illegal Argument Exception Unsupported deliver mode deliver Order return The single target s address or code null if there are multiple targets private Address compute Single Target Collection Address targets List Address local Members int members Size boolean broadcast boolean total Order Address single Target if broadcast total Order single Target null else if targets null No broadcast means we eliminated the members Size and members Size possibilities assert members Size single Target local Members get equals address local Members get local Members get else if targets size single Target targets iterator next else single Target null return single Target private Completable Future Map Address Response perform Async Remote Invocation Collection Address recipients Replicable Command command Deliver Order deliver Order boolean rsvp boolean broadcast Address single Target if broadcast send Command To All command Request deliver Order rsvp else if single Target null send Command single Target command Request deliver Order rsvp true else send Command recipients command Request deliver Order rsvp return private Completable Future Map Address Response perform Sync Remote Invocation Collection Address targets Replicable Command command Response Mode mode long timeout Response Filter response Filter Deliver Order deliver Order boolean ignore Leavers boolean send Staggered Request boolean broadcast Address single Target Completable Future Map Address Response request if send Staggered Request Filter Map Response Collector collector new Filter Map Response Collector response Filter false targets size request invoke Command Staggered targets command collector deliver Order timeout Time Unit else if single Target null Response Collector Map Address Response collector ignore Leavers request invoke Command single Target command collector deliver Order timeout Time Unit else Response Collector Map Address Response collector if mode Response Mode collector new Filter Map Response Collector response Filter false targets size else if response Filter null collector new Filter Map Response Collector response Filter true targets size else collector new Sync Map Response Collector ignore Leavers targets size if broadcast request invoke Command On All command collector deliver Order timeout Time Unit else request invoke Command targets command collector deliver Order timeout Time Unit return request public void send To All Replicable Command command Deliver Order deliver Order throws Exception send Command To All command Request deliver Order false Send a command to the entire cluster Does n t send the command to itself unless code deliver Order private void send Command To All Replicable Command command long request Id Deliver Order deliver Order boolean rsvp Message message new Message marshall Request message command request Id set Message Flags message deliver Order rsvp true if deliver Order Deliver Order message dest new Anycast Address if trace log Command command request Id all send message public Channel get Channel return channel private void update Sites View Collection String sites Up Collection String sites Down view Update Lock lock try Set String reachable Sites new Hash Set sites View reachable Sites add All sites Up reachable Sites remove All sites Down log tracef Sites view changed up s down s new view is s sites Up sites Down reachable Sites log received Site Cluster View reachable Sites sites View Collections unmodifiable Set reachable Sites finally view Update Lock unlock private void site Unreachable String site requests for Each request if request instanceof Single Site Request Single Site Request request sites Unreachable Collections singleton site Send a command to multiple targets Does n t send the command to itself unless code deliver Order private void send Command Collection Address targets Replicable Command command long request Id Deliver Order deliver Order boolean rsvp Objects require Non Null targets Message message new Message marshall Request message command request Id set Message Flags message deliver Order rsvp true if trace log Command command request Id targets to String if deliver Order Deliver Order message dest new Anycast Address to Groups Address List targets send message else Iterator Address it targets iterator send Skipping Self message it next for it has Next Message copy message copy true send Skipping Self copy it next private void send Skipping Self Message message Address address if address equals get Address message dest to Groups Address address send message Time Service get Time Service return time Service Scheduled Executor Service get Timeout Executor return timeout Executor private void process Message Message message org jgroups Address src message src short flags message get Flags byte buffer message raw Buffer int offset message offset int length message length Request Correlator Header header message get Header byte type long request Id if header null type header type request Id header request Id else type request Id Request if address null if trace log tracef Ignoring message received before initial view if type send Response src Cache Not Found Response request Id null return switch type case case process Request src flags buffer offset length request Id break case process Response src buffer offset length request Id break default log invalid Message Type type src private void send Response org jgroups Address target Response response long request Id Replicable Command command if trace log tracef s sending response for request d to s s get Address request Id target response Byte Buffer bytes Channel channel this channel if channel null Avoid Es during stop return try bytes marshaller object To Buffer response catch Throwable t try this call should succeed all exceptions are serializable Exception e t instanceof Exception Exception t new Cache Exception t bytes marshaller object To Buffer new Exception Response e catch Throwable tt if channel is Connected log error Sending Response request Id target command return try Message message new Message target set Flag message set Buffer bytes get Buf bytes get Offset bytes get Length Request Correlator Header header new Request Correlator Header request Id message put Header header channel send message catch Throwable t if channel is Connected log error Sending Response request Id target command private void process Request org jgroups Address src short flags byte buffer int offset int length long request Id try Deliver Order deliver Order decode Deliver Mode flags Replicable Command command Replicable Command marshaller object From Byte Buffer buffer offset length Reply reply if request Id Request if trace log tracef s received request d from s s get Address request Id src command reply response send Response src response request Id command else if trace log tracef s received command from s s get Address src command reply Reply if src instanceof Site Address String origin Site Site Address src get Site Site Replicate Command command set Origin Site origin Site invocation Handler handle From Remote Site origin Site Site Replicate Command command reply deliver Order else invocation Handler handle From Cluster from Groups Address src command reply deliver Order catch Throwable t log error Processing Request request Id src Exception e t instanceof Exception Exception t new Cache Exception t send Response src new Exception Response e request Id null private void process Response org jgroups Address src byte buffer int offset int length long request Id try Response response if length Empty buffer signals the Fork Channel with this name is not running on the remote node response Cache Not Found Response else response Response marshaller object From Byte Buffer buffer offset length if response null response Successful Response if trace log tracef s received response for request d from s s get Address request Id src response Address address from Groups Address src requests add Response request Id address response catch Throwable t log error Processing Response request Id src private Deliver Order decode Deliver Mode short flags boolean no Total Order Message is Flag Set flags Message Flag boolean oob Message is Flag Set flags Message Flag if no Total Order oob return Deliver Order else if no Total Order oob return Deliver Order else if no Total Order oob is not set at this point but the no total order flag should return Deliver Order throw new Illegal Argument Exception Unable to decode order from flags flags private class Channel Callbacks implements Receiver Route Status Listener Up Handler Override public void view Accepted View new view receive Cluster View new view Override public void sites Up String sites update Sites View Arrays as List sites Collections empty List Override public void sites Down String sites update Sites View Collections empty List Arrays as List sites Override public void receive Message message process Message message Override public void receive Message Batch batch batch for Each message messages process Message message Override public Object up Event evt switch evt get Type case Event site Unreachable evt get Arg break return null Override public Object up Message msg return null Override public void up Message Batch batch 
package org infinispan jmx import java util Set import javax management Instance Already Exists Exception import javax management Bean Server import javax management Malformed Object Name Exception import javax management Object Instance import javax management Object Name import org infinispan commons Cache Exception import org infinispan configuration global Global Configuration import org infinispan util logging Log import org infinispan util logging Log Factory Class containing related utility methods author Galder Zamarre o since public class Jmx Util private static final Log log Log Factory get Log Jmx Util class private static final boolean trace log is Trace Enabled Looks up the link javax management Bean Server instance based on the configuration parameters param cfg configuration instance indicating how to lookup the link javax management Bean Server return an instance of link javax management Bean Server public static Bean Server lookup Bean Server Global Configuration cfg Bean Server Lookup lookup cfg global Jmx Statistics mbean Server Lookup return lookup get Bean Server cfg global Jmx Statistics properties Build the domain name param cfg configuration instance containig rules on domains allowed param m Bean Server the link javax management Bean Server where to check whether the domain is allowed or not param group Name String containing the group name for the Bean return string that combines the allowed domain and the group name public static String build Jmx Domain Global Configuration cfg Bean Server m Bean Server String group Name String jmx Domain find Jmx Domain cfg global Jmx Statistics domain m Bean Server group Name String config Jmx Domain cfg global Jmx Statistics domain if jmx Domain equals config Jmx Domain cfg global Jmx Statistics allow Duplicate Domains throw log jmx Bean Already Registered group Name config Jmx Domain return jmx Domain Register the given dynamic Bean param mbean Dynamic Bean to register param object Name link javax management Object Name under which to register the Bean param m Bean Server link javax management Bean Server where to store the Bean throws Exception If registration could not be completed public static void register Bean Object mbean Object Name object Name Bean Server m Bean Server throws Exception if m Bean Server is Registered object Name try Security Actions register Bean mbean object Name m Bean Server log tracef Registered s under s mbean object Name catch Instance Already Exists Exception e this might happen if multiple instances are trying to concurrently register same object Name log could Not Register Object Name object Name e else log debugf Object name s already registered object Name Unregister the Bean located under the given link javax management Object Name param object Name link javax management Object Name where the Bean is registered param m Bean Server link javax management Bean Server from which to unregister the Bean throws Exception If unregistration could not be completed public static void unregister Bean Object Name object Name Bean Server m Bean Server throws Exception if m Bean Server is Registered object Name Security Actions unregister Bean object Name m Bean Server log tracef Unregistered s object Name Unregister all mbeans whose object names match a given filter param filter Object Name style formatted filter param m Bean Server mbean server from which to unregister mbeans return number of mbeans unregistered public static int unregister Beans String filter Bean Server m Bean Server try Object Name filter Obj Name new Object Name filter Set Object Instance mbeans m Bean Server query Beans filter Obj Name null for Object Instance mbean mbeans Object Name name mbean get Object Name if trace log trace Unregistering mbean with name name Security Actions unregister Bean name m Bean Server return mbeans size catch Exception e throw new Cache Exception Unable to register mbeans with filter filter e private static String find Jmx Domain String jmx Domain Bean Server m Bean Server String group Name int index String final Name jmx Domain boolean done false while done done true try Object Name target Name new Object Name final Name group Name if Security Actions query Names target Name null m Bean Server size final Name jmx Domain index done false catch Malformed Object Name Exception e throw new Cache Exception Unable to check for duplicate names e return final Name 
package org infinispan notifications cachelistener filter import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Objects import java util Set import org infinispan commons marshall Abstract Externalizer import org infinispan factories Component Registry import org infinispan factories annotations Inject import org infinispan filter Key Filter import org infinispan marshall core Ids import org infinispan metadata Metadata Cache Event Filter that implements it s filtering solely on the use of the provided Key Filter author wburns since public class Key Filter As Cache Event Filter implements Cache Event Filter Object private final Key Filter super filter public Key Filter As Cache Event Filter Key Filter super filter this filter Objects require Non Null filter Override public boolean accept key Object old Value Metadata old Metadata Object new Value Metadata new Metadata Event Type event Type return filter accept key Inject protected void inject Dependencies Component Registry cr cr wire Dependencies filter public static class Externalizer extends Abstract Externalizer Key Filter As Cache Event Filter Override public Set Class extends Key Filter As Cache Event Filter get Type Classes return Collections singleton Key Filter As Cache Event Filter class Override public void write Object Object Output output Key Filter As Cache Event Filter object throws Exception output write Object object filter Override public Key Filter As Cache Event Filter read Object Object Input input throws Exception Class Not Found Exception return new Key Filter As Cache Event Filter Key Filter input read Object Override public Integer get Id return Ids 
package org infinispan filter import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import org infinispan commons marshall Abstract Externalizer import org infinispan factories Component Registry import org infinispan factories annotations Inject import org infinispan marshall core Ids import org infinispan metadata Metadata Key Value Filter that implements it s filtering solely on the use of the provided Key Filter author wburns since public class Key Filter As Key Value Filter implements Key Value Filter private final Key Filter super filter public Key Filter As Key Value Filter Key Filter super filter if filter null throw new Null Pointer Exception this filter filter Override public boolean accept key value Metadata metadata return filter accept key Inject protected void inject Dependencies Component Registry cr cr wire Dependencies filter public static class Externalizer extends Abstract Externalizer Key Filter As Key Value Filter Override public Set Class extends Key Filter As Key Value Filter get Type Classes return Collections singleton Key Filter As Key Value Filter class Override public void write Object Object Output output Key Filter As Key Value Filter object throws Exception output write Object object filter Override public Key Filter As Key Value Filter read Object Object Input input throws Exception Class Not Found Exception return new Key Filter As Key Value Filter Key Filter input read Object Override public Integer get Id return Ids 
package org infinispan distribution ch impl import org infinispan distribution ch Key Partitioner import org infinispan distribution group impl Group Manager import org infinispan distribution group impl Grouping Partitioner import org infinispan factories Abstract Named Cache Component Factory import org infinispan factories Auto Instantiable Factory import org infinispan factories annotations Default Factory For import org infinispan factories annotations Inject Key partitioner factory that uses the hash function defined in the configuration In the future we will probably remove the hash function from the configuration and leave only the key partitioner author Dan Berindei since Default Factory For classes Key Partitioner class public class Key Partitioner Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory private Group Manager group Manager Inject public void inject Group Manager group Manager this group Manager group Manager Override public construct Class component Type Key Partitioner partitioner configuration clustering hash key Partitioner partitioner init configuration clustering hash if group Manager null return component Type cast partitioner Grouping is enabled Since the configured partitioner will not be registered in the component registry we need to inject dependencies explicitly component Registry wire Dependencies partitioner Grouping Partitioner grouping Partitioner new Grouping Partitioner partitioner group Manager return component Type cast grouping Partitioner 
package org infinispan filter import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import org infinispan commons marshall Abstract Externalizer import org infinispan factories Component Registry import org infinispan factories annotations Inject import org infinispan marshall core Ids This is a Key Filter that utilizes the given link org infinispan filter Key Value Filter to determine if to filter the key Note this filter will be passed null for both the value and metadata on every pass author wburns since public class Key Value Filter As Key Filter implements Key Filter private final Key Value Filter super filter public Key Value Filter As Key Filter Key Value Filter super filter this filter filter Override public boolean accept key return filter accept key null null Inject protected void inject Dependencies Component Registry cr cr wire Dependencies filter public static class Externalizer extends Abstract Externalizer Key Value Filter As Key Filter Override public Set Class extends Key Value Filter As Key Filter get Type Classes return Collections singleton Key Value Filter As Key Filter class Override public void write Object Object Output output Key Value Filter As Key Filter object throws Exception output write Object object filter Override public Key Value Filter As Key Filter read Object Object Input input throws Exception Class Not Found Exception return new Key Value Filter As Key Filter Key Value Filter input read Object Override public Integer get Id return Ids 
package org infinispan factories import java util Arrays import java util Collection import java util Hash Map import java util Map Holder for known named component names To be used with link org infinispan factories annotations Component Name annotation author Manik Surtani since public class Known Component Names public static final String org infinispan executors transport public static final String org infinispan executors remote public static final String org infinispan executors notification public static final String org infinispan executors persistence public static final String org infinispan executors expiration deprecated Since no longer used Deprecated public static final String org infinispan executors replication Queue public static final String org infinispan modules command initializers public static final String org infinispan modules command factories public static final String java lang Class Loader public static final String org infinispan executors state Transfer Executor public static final String org infinispan transaction version Generator public static final String org infinispan executors async public static final String org infinispan executors timeout public static final String org infinispan Cache Dependency Graph Please make sure this is kept up to date public static final Collection String Arrays as List private static final Map String Integer new Hash Map private static final Map String Integer new Hash Map private static final Map String Integer new Hash Map static put put put put put put put put put put put put put put put Thread put Thread put Thread put Thread put Thread put Thread put Thread put Thread public static int get Default Threads String component Name return get component Name public static int get Default Thread Prio String component Name return get component Name public static int get Default Queue Size String component Name return get component Name public static String shortened String cn int dot Index cn last Index Of int dot Index Plus One dot Index String cname cn if dot Index Plus One cn length cname shortened cn substring cn length else if dot Index cn length dot Index Plus One cname cn substring dot Index Plus One cname thread return cname 
package org infinispan configuration cache import java util concurrent Time Unit import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set Configures the cache behavior in distributed caches instances In any other cache modes this element is ignored public class Configuration public static final Attribute Definition Boolean Attribute Definition builder enabled false immutable auto Persist false build public static final Attribute Definition Integer Attribute Definition builder invalidation Threshold immutable auto Persist false build public static final Attribute Definition Long Attribute Definition builder lifespan Time Unit to Millis xml Name l lifespan immutable build public static final Attribute Definition Long Attribute Definition builder cleanup Task Frequency Time Unit to Millis xml Name l cleanup interval immutable build static Attribute Set attribute Definition Set return new Attribute Set Configuration class private final Attribute Boolean enabled private final Attribute Integer invalidation Threshold private final Attribute Long lifespan private final Attribute Long cleanup Task Frequency private final Attribute Set attributes Configuration Attribute Set attributes this attributes attributes check Protection enabled attributes attribute invalidation Threshold attributes attribute lifespan attributes attribute cleanup Task Frequency attributes attribute public boolean enabled return enabled get p Determines whether a multicast or a web of unicasts are used when performing invalidations p p By default multicast will be used p p If the threshold is set to then unicasts will always be used If the threshold is set to then multicast will be always be used p public int invalidation Threshold return invalidation Threshold get Determines how often a cleanup thread runs to clean up an internal log of requestors for a specific key public long cleanup Task Frequency return cleanup Task Frequency get Maximum lifespan of an entry placed in the cache Default minutes public long lifespan return lifespan get public Attribute Set attributes return attributes Override public String to String return Configuration attributes attributes Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Configuration other Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result 
package org infinispan configuration cache import static org infinispan configuration cache Configuration import static org infinispan configuration cache Configuration import static org infinispan configuration cache Configuration import static org infinispan configuration cache Configuration import java util concurrent Time Unit import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration import org infinispan util logging Log import org infinispan util logging Log Factory Configures the cache behavior in distributed caches instances In any other cache modes this element is ignored public class Configuration Builder extends Abstract Clustering Configuration Child Builder implements Builder Configuration private final static Log log Log Factory get Log Configuration Builder class Log class private final Attribute Set attributes Configuration Builder Clustering Configuration Builder builder super builder attributes Configuration attribute Definition Set p Determines whether a multicast or a web of unicasts are used when performing invalidations p p By default multicast will be used p p If the threshold is set to then unicasts will always be used If the threshold is set to then multicast will be always be used p param invalidation Threshold the threshold over which to use a multicast public Configuration Builder invalidation Threshold int invalidation Threshold attributes attribute set invalidation Threshold return this Maximum lifespan of an entry placed in the cache public Configuration Builder lifespan long lifespan attributes attribute set lifespan return this Maximum lifespan of an entry placed in the cache public Configuration Builder lifespan long lifespan Time Unit unit return lifespan unit to Millis lifespan How often the requestors map is cleaned up of stale items public Configuration Builder cleanup Task Frequency long frequency Millis attributes attribute set frequency Millis return this How often the requestors map is cleaned up of stale items public Configuration Builder cleanup Task Frequency long frequency Millis Time Unit unit return cleanup Task Frequency unit to Millis frequency Millis public Configuration Builder enable attributes attribute set true return this public Configuration Builder disable attributes attribute set false return this public Configuration Builder enabled boolean enabled attributes attribute set enabled return this Override public void validate if attributes attribute get if clustering cache Mode is Distributed throw log l Only For Distributed Cache clustering cache Mode friendly Cache Mode String if attributes attribute get throw log l Invalid Lifespan Override public void validate Global Configuration global Config Override public Configuration create return new Configuration attributes protect Override public Configuration Builder read Configuration template attributes read template attributes return this Override public String to String return Configuration Builder attributes attributes 
package org infinispan executors import java util Collection import java util Collections import java util List import java util concurrent Callable import java util concurrent Execution Exception import java util concurrent Executor Service import java util concurrent Future import java util concurrent Thread Factory import java util concurrent Time Unit import java util concurrent Timeout Exception import org infinispan commons executors Thread Pool Executor Factory import org infinispan util Time Service import org infinispan util concurrent Blocking Runnable import org infinispan util concurrent Blocking Task Aware Executor Service import org infinispan util concurrent Blocking Task Aware Executor Service Impl delegating executor that lazily constructs and initializes the underlying executor author Pedro Ruivo since public final class Lazy Initializing Blocking Task Aware Executor Service implements Blocking Task Aware Executor Service private final Thread Pool Executor Factory Executor Service executor Factory private final Thread Factory thread Factory private final Time Service time Service private final String controller Thread Name private volatile Blocking Task Aware Executor Service delegate public Lazy Initializing Blocking Task Aware Executor Service Thread Pool Executor Factory Executor Service executor Factory Thread Factory thread Factory Time Service time Service String controller Thread Name this executor Factory executor Factory this thread Factory thread Factory this time Service time Service this controller Thread Name controller Thread Name Override public void execute Blocking Runnable runnable init If Needed delegate execute runnable Override public void check For Ready Tasks if delegate null delegate check For Ready Tasks Override public void shutdown if delegate null delegate shutdown Override public List Runnable shutdown Now if delegate null return Collections empty List else return delegate shutdown Now Override public boolean is Shutdown return delegate null delegate is Shutdown Override public boolean is Terminated return delegate null delegate is Terminated Override public boolean await Termination long timeout Time Unit unit throws Interrupted Exception if delegate null return true else return delegate await Termination timeout unit Override public Future submit Callable task init If Needed return delegate submit task Override public Future submit Runnable task result init If Needed return delegate submit task result Override public Future submit Runnable task init If Needed return delegate submit task Override public List Future invoke All Collection extends Callable tasks throws Interrupted Exception init If Needed return delegate invoke All tasks Override public List Future invoke All Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception init If Needed return delegate invoke All tasks timeout unit Override public invoke Any Collection extends Callable tasks throws Interrupted Exception Execution Exception init If Needed return delegate invoke Any tasks Override public invoke Any Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception Execution Exception Timeout Exception init If Needed return delegate invoke Any tasks timeout unit Override public void execute Runnable command init If Needed delegate execute command public Blocking Task Aware Executor Service get Executor Service return delegate private void init If Needed if delegate null synchronized this if delegate null delegate new Blocking Task Aware Executor Service Impl controller Thread Name executor Factory create Executor thread Factory time Service 
package org infinispan executors import java util Collection import java util Collections import java util List import java util concurrent Callable import java util concurrent Execution Exception import java util concurrent Executor Service import java util concurrent Future import java util concurrent Thread Factory import java util concurrent Time Unit import java util concurrent Timeout Exception import org infinispan commons executors Thread Pool Executor Factory delegating executor that lazily constructs and initializes the underlying executor since unused executors are expensive author Manik Surtani since public final class Lazy Initializing Executor Service implements Executor Service private volatile Executor Service delegate private final Thread Pool Executor Factory Executor Service executor Factory private final Thread Factory thread Factory public Lazy Initializing Executor Service Thread Pool Executor Factory Executor Service executor Factory Thread Factory thread Factory this executor Factory executor Factory this thread Factory thread Factory private void init If Needed if delegate null synchronized this if delegate null delegate executor Factory create Executor thread Factory Override public void shutdown if delegate null delegate shutdown Override public List Runnable shutdown Now if delegate null return Collections empty List else return delegate shutdown Now Override public boolean is Shutdown return delegate null delegate is Shutdown Override public boolean is Terminated return delegate null delegate is Terminated Override public boolean await Termination long timeout Time Unit unit throws Interrupted Exception if delegate null return true else return delegate await Termination timeout unit Override public Future submit Callable task init If Needed return delegate submit task Override public Future submit Runnable task result init If Needed return delegate submit task result Override public Future submit Runnable task init If Needed return delegate submit task Override public List Future invoke All Collection extends Callable tasks throws Interrupted Exception init If Needed return delegate invoke All tasks Override public List Future invoke All Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception init If Needed return delegate invoke All tasks timeout unit Override public invoke Any Collection extends Callable tasks throws Interrupted Exception Execution Exception init If Needed return delegate invoke Any tasks Override public invoke Any Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception Execution Exception Timeout Exception init If Needed return delegate invoke Any tasks timeout unit Override public void execute Runnable command init If Needed delegate execute command 
package org infinispan executors import java util Collection import java util Collections import java util List import java util concurrent Callable import java util concurrent Execution Exception import java util concurrent Future import java util concurrent Scheduled Executor Service import java util concurrent Scheduled Future import java util concurrent Thread Factory import java util concurrent Time Unit import java util concurrent Timeout Exception import org infinispan commons executors Thread Pool Executor Factory delegating scheduled executor that lazily constructs and initializes the underlying scheduled executor since unused executors are expensive author Manik Surtani since public class Lazy Initializing Scheduled Executor Service implements Scheduled Executor Service private volatile Scheduled Executor Service delegate private final Thread Pool Executor Factory Scheduled Executor Service executor Factory private final Thread Factory thread Factory public Lazy Initializing Scheduled Executor Service Thread Pool Executor Factory Scheduled Executor Service executor Factory Thread Factory thread Factory this executor Factory executor Factory this thread Factory thread Factory private void init If Needed if delegate null synchronized this if delegate null delegate executor Factory create Executor thread Factory Override public void shutdown if delegate null delegate shutdown Override public List Runnable shutdown Now if delegate null return Collections empty List else return delegate shutdown Now Override public boolean is Shutdown return delegate null delegate is Shutdown Override public boolean is Terminated return delegate null delegate is Terminated Override public boolean await Termination long timeout Time Unit unit throws Interrupted Exception if delegate null return true else return delegate await Termination timeout unit Override public Future submit Callable task init If Needed return delegate submit task Override public Future submit Runnable task result init If Needed return delegate submit task result Override public Future submit Runnable task init If Needed return delegate submit task Override public List Future invoke All Collection extends Callable tasks throws Interrupted Exception init If Needed return delegate invoke All tasks Override public List Future invoke All Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception init If Needed return delegate invoke All tasks timeout unit Override public invoke Any Collection extends Callable tasks throws Interrupted Exception Execution Exception init If Needed return delegate invoke Any tasks Override public invoke Any Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception Execution Exception Timeout Exception init If Needed return delegate invoke Any tasks timeout unit Override public void execute Runnable command init If Needed delegate execute command Override public Scheduled Future schedule Runnable command long delay Time Unit unit init If Needed return delegate schedule command delay unit Override public Scheduled Future schedule Callable callable long delay Time Unit unit init If Needed return delegate schedule callable delay unit Override public Scheduled Future schedule At Fixed Rate Runnable command long initial Delay long period Time Unit unit init If Needed return delegate schedule At Fixed Rate command initial Delay period unit Override public Scheduled Future schedule With Fixed Delay Runnable command long initial Delay long delay Time Unit unit init If Needed return delegate schedule With Fixed Delay command initial Delay delay unit 
package org infinispan persistence remote import java util Map import org infinispan commons marshall Advanced Externalizer import org infinispan configuration global Global Configuration import org infinispan factories Global Component Registry import org infinispan lifecycle Module Lifecycle import org infinispan persistence remote upgrade Migration Task import org infinispan persistence remote upgrade Removed Filter author gustavonalle since public class Lifecycle Callbacks implements Module Lifecycle Override public void cache Manager Starting Global Component Registry gcr Global Configuration global Cfg Map Integer Advanced Externalizer externalizer Map global Cfg serialization advanced Externalizers externalizer Map put Externalizer Ids new Migration Task Externalizer externalizer Map put Externalizer Ids new Removed Filter Externalizer 
package org infinispan notifications import java lang annotation Element Type import java lang annotation Retention import java lang annotation Retention Policy import java lang annotation Target Class level annotation used to annotate an object as being a valid cache listener Used with the link org infinispan Cache add Listener Object and related Is p Note that even if a class is annotated with this annotation it still needs method level annotation such as link org infinispan notifications cachemanagerlistener annotation Cache Started to actually receive notifications p Objects annotated with this annotation listeners can be attached to a running link org infinispan Cache so users can be notified of link org infinispan Cache events p p There can be multiple methods that are annotated to receive the same event and a method may receive multiple events by using a super type p p h Delivery Semantics h p An event is delivered immediately after the respective operation but before the underlying cache call returns For this reason it is important to keep listener processing logic short lived If a long running task needs to be performed it s recommended to use another thread p p h Transactional Semantics h p Since the event is delivered during the actual cache call the transactional outcome is not yet known For this reason i events are always delivered even if the changes they represent are discarded by their containing transaction i For applications that must only process events that represent changes in a completed transaction link org infinispan notifications cachelistener event Transactional Event get Global Transaction can be used along with link org infinispan notifications cachelistener event Transaction Completed Event is Transaction Successful to record events and later process them once the transaction has been successfully committed Example demonstrates this p p h Threading Semantics h p listener implementation must be capable of handling concurrent invocations Local notifications reuse the calling thread remote notifications reuse the network thread p p Since notifications reuse the calling or network thread it is important to realise that if your listener implementation blocks or performs a long running task the original caller which triggered the cache event may block until the listener callback completes It is therefore a good idea to use the listener to be notified of an event but to perform any long running tasks in a separate thread so as not to block the original caller p p In addition any locks acquired for the operation being performed will still be held for the callback This needs to be kept in mind as locks may be held longer than necessary or intended to and may cause deadlocking in certain situations See above paragraph on long running tasks that should be run in a separate thread p b Note b The tt sync tt parameter on this annotation defaults to tt true tt which provides the above semantics Alternatively if you set tt sync tt to tt false tt then invocations are made in a i separate i thread which will not cause any blocking on the caller or network thread The separate thread is taken from a pool which can be configured using link org infinispan config Global Configuration set Async Listener Executor Properties java util Properties and link org infinispan config Global Configuration set Async Listener Executor Factory Class String p b Summary of Notification Annotations b table border cellpadding cellspacing summary Summary of notification annotations tr th bgcolor align left Annotation th th bgcolor align left Event th th bgcolor align left Description th tr tr td valign top link org infinispan notifications cachemanagerlistener annotation Cache Started td td valign top link org infinispan notifications cachemanagerlistener event Cache Started Event td td valign top cache was started td tr tr td valign top link org infinispan notifications cachemanagerlistener annotation Cache Stopped td td valign top link org infinispan notifications cachemanagerlistener event Cache Stopped Event td td valign top cache was stopped td tr tr td valign top link org infinispan notifications cachelistener annotation Cache Entry Modified td td valign top link org infinispan notifications cachelistener event Cache Entry Modified Event td td valign top cache entry was modified td tr tr td valign top link org infinispan notifications cachelistener annotation Cache Entry Created td td valign top link org infinispan notifications cachelistener event Cache Entry Created Event td td valign top cache entry was created td tr tr td valign top link org infinispan notifications cachelistener annotation Cache Entry Removed td td valign top link org infinispan notifications cachelistener event Cache Entry Removed Event td td valign top cache entry was removed td tr tr td valign top link org infinispan notifications cachelistener annotation Cache Entry Visited td td valign top link org infinispan notifications cachelistener event Cache Entry Visited Event td td valign top cache entry was visited td tr tr td valign top link org infinispan notifications cachelistener annotation Cache Entry Loaded td td valign top link org infinispan notifications cachelistener event Cache Entry Loaded Event td td valign top cache entry was loaded td tr tr td valign top link org infinispan notifications cachelistener annotation Cache Entries Evicted td td valign top link org infinispan notifications cachelistener event Cache Entries Evicted Event td td valign top cache entries were evicted td tr tr td valign top link org infinispan notifications cachelistener annotation Cache Entry Activated td td valign top link org infinispan notifications cachelistener event Cache Entry Activated Event td td valign top cache entry was activated td tr tr td valign top link org infinispan notifications cachelistener annotation Cache Entry Passivated td td valign top link org infinispan notifications cachelistener event Cache Entry Passivated Event td td valign top One or more cache entries were passivated td tr tr td valign top link org infinispan notifications cachemanagerlistener annotation View Changed td td valign top link org infinispan notifications cachemanagerlistener event View Changed Event td td valign top view change event was detected td tr tr td valign top link org infinispan notifications cachelistener annotation Transaction Registered td td valign top link org infinispan notifications cachelistener event Transaction Registered Event td td valign top The cache has started to participate in a transaction td tr tr td valign top link org infinispan notifications cachelistener annotation Transaction Completed td td valign top link org infinispan notifications cachelistener event Transaction Completed Event td td valign top The cache has completed its participation in a transaction td tr tr td valign top link org infinispan notifications cachelistener annotation Cache Entry Invalidated td td valign top link org infinispan notifications cachelistener event Cache Entry Invalidated Event td td valign top cache entry was invalidated by a remote cache Only if cache mode is or td tr p table p h Example Method receiving a single event h pre Listener public class Single Event Listener Cache Started public void do Something Event event System out println quot Cache started Details quot event pre p h Example Method receiving multiple events h pre Listener public class Multiple Event Listener Cache Started Cache Stopped public void do Something Event event if event get Type Event Type System out println quot Cache started Details quot event else if event get Type Event Type System out println quot Cache stopped Details quot event pre p h Example Multiple methods receiving the same event h pre Listener public class Single Event Listener Cache Started public void handle Start Event event System out println quot Cache started quot p Cache Started Cache Stopped Cache Blocked Cache Unblocked View Changed public void log Event Event event log System log Event event get Type pre p p b Example Processing only events with a committed transaction b p pre Listener public class Event Handler private Concurrent Map lt Global Transaction Queue lt Event gt gt map new Concurrent Hash Map lt Global Transaction Queue lt Event gt gt Transaction Registered public void start Transaction Transaction Registered Event event map put event get Global Transaction new Concurrent Linked Queue lt Event gt Cache Entry Created Cache Entry Modified Cache Entry Removed public void add Event Transactional Event event map get event get Global Transaction add event Transaction Completed public void end Transaction Transaction Completed Event event Queue lt Event gt events map get event get Global Transaction map remove event get Global Transaction System out println Ended transaction event get Global Transaction get Id if event is Transaction Successful for Event e events System out println Event e pre author a href mailto manik jboss org Manik Surtani a author Jason Greene see org infinispan notifications cachemanagerlistener annotation Cache Started see org infinispan notifications cachemanagerlistener annotation Cache Stopped see org infinispan notifications cachelistener annotation Cache Entry Modified see org infinispan notifications cachelistener annotation Cache Entry Created see org infinispan notifications cachelistener annotation Cache Entry Removed see org infinispan notifications cachelistener annotation Cache Entry Visited see org infinispan notifications cachelistener annotation Cache Entry Loaded see org infinispan notifications cachelistener annotation Cache Entries Evicted see org infinispan notifications cachelistener annotation Cache Entry Activated see org infinispan notifications cachelistener annotation Cache Entry Passivated see org infinispan notifications cachemanagerlistener annotation View Changed see org infinispan notifications cachelistener annotation Transaction Completed see org infinispan notifications cachelistener annotation Transaction Registered see org infinispan notifications cachelistener annotation Cache Entry Invalidated see org infinispan notifications cachelistener annotation Data Rehashed see org infinispan notifications cachelistener annotation Topology Changed since Retention Retention Policy Target Element Type public interface Listener Specifies whether callbacks on any class annotated with this annotation happens synchronously in the caller s thread or asynchronously using a separate thread Defaults to tt true tt return true if the expectation is that callbacks are called using the caller s thread false if they are to be made in a separate thread since boolean sync default true Specifies whether the event should be fired on the primary data owner of the affected key or all nodes that see the update p Note that is value is ignored when link org infinispan notifications Listener clustered is true return true if the expectation is that only the primary data owner will fire the event false if all nodes that see the update fire the event since boolean primary Only default false Defines whether the annotated listener is clustered or not Important Clustered listener can only be notified for Cache Entry Removed Cache Entry Created Cache Entry Modified and Cache Entry Expired events return true if the expectation is that this listener is to be a cluster listener as in it will receive all notifications for data modifications since boolean clustered default false If set to true then the entire existing state within the cluster is evaluated For existing matches of the value an Cache Entry Created event is triggered against the listener during registration This is only supported if the listener is also link org infinispan notifications Listener clustered p If using a distributed clustered cache it is possible to retrieve new events before the initial transfer is completed This is handled since only new events are queued until the segment it belongs to is completed for iteration This also will help reduce memory strain since a distributed clustered listener will need to eventually retrieve all values from the cache return true if the expectation is that when the listener is installed that all of the current data is sent as new events to the listener before receiving new events since boolean include Current State default false Returns the type of observation level this listener defines return the observation level of this listener see Observation since Observation observation default Observation Enumeration that defines when a listener event can be observed listener can receive an event before and or after an operation has occurred If the user wishes to be notified just before the operation completes the listener should observe using link Observation level If the user wishes to be notified only after the operation completes the listener should observe using link Observation level If the user wishes to have an event before and after they should observe using link Observation level enum Observation Observation level used to only be notified of an operation before it completes Override public boolean should Invoke boolean pre return pre Observation level used to only be notified of an operation after it has completed Override public boolean should Invoke boolean pre return pre Observation level used to be notified of an operation before and after it occurs Override public boolean should Invoke boolean pre return true public abstract boolean should Invoke boolean pre 
package org infinispan stream impl local import java util Comparator import java util Optional import java util Set import java util Spliterator import java util concurrent Time Unit import java util function Bi Consumer import java util function Bi Function import java util function Binary Operator import java util function Consumer import java util function Function import java util function Int Function import java util function Predicate import java util function Supplier import java util function To Double Function import java util function To Int Function import java util function To Long Function import java util stream Collector import java util stream Double Stream import java util stream Int Stream import java util stream Long Stream import java util stream Stream import org infinispan Cache import org infinispan Cache Stream import org infinispan commons util Closeable Iterator import org infinispan commons util Closeables import org infinispan factories Component Registry import org infinispan stream Cache Aware import org infinispan stream impl intops Intermediate Operation import org infinispan stream impl intops object Distinct Operation import org infinispan stream impl intops object Filter Operation import org infinispan stream impl intops object Flat Map Operation import org infinispan stream impl intops object Flat Map To Double Operation import org infinispan stream impl intops object Flat Map To Int Operation import org infinispan stream impl intops object Flat Map To Long Operation import org infinispan stream impl intops object Limit Operation import org infinispan stream impl intops object Map Operation import org infinispan stream impl intops object Map To Double Operation import org infinispan stream impl intops object Map To Int Operation import org infinispan stream impl intops object Map To Long Operation import org infinispan stream impl intops object Peek Operation import org infinispan stream impl intops object Skip Operation import org infinispan stream impl intops object Sorted Comparator Operation import org infinispan stream impl intops object Sorted Operation import org infinispan util function Removable Function import org infinispan util function Serializable Supplier Cache Stream that is to be used locally This allows for full functionality of a regular stream but also has options to filter by keys and other functionality param type of the stream public class Local Cache Stream extends Abstract Local Cache Stream Stream Cache Stream implements Cache Stream public Local Cache Stream Stream Supplier Stream stream Supplier boolean parallel Component Registry registry super stream Supplier parallel registry public Local Cache Stream Abstract Local Cache Stream other super other Override public Local Cache Stream sequential Distribution return this Override public Local Cache Stream parallel Distribution return this Override public Local Cache Stream filter Key Segments Set Integer segments segments To Filter segments return this Override public Local Cache Stream filter Keys Set keys keys To Filter keys return this Override public Local Cache Stream distributed Batch Size int batch Size Does this change cache loader return this Override public Local Cache Stream segment Completion Listener Segment Completion Listener listener All segments are completed when the get Stream is completed so we do n t track them return this Override public Local Cache Stream disable Rehash Aware Local stream does n t matter for rehash return this Override public Local Cache Stream filter Predicate super predicate registry wire Dependencies predicate intermediate Operations add new Filter Operation predicate return this Override public Local Cache Stream map Function super extends mapper registry wire Dependencies mapper intermediate Operations add new Map Operation mapper return Local Cache Stream this Override public Local Int Cache Stream map To Int To Int Function super mapper intermediate Operations add new Map To Int Operation mapper return new Local Int Cache Stream this Override public Local Long Cache Stream map To Long To Long Function super mapper intermediate Operations add new Map To Long Operation mapper return new Local Long Cache Stream this Override public Local Double Cache Stream map To Double To Double Function super mapper intermediate Operations add new Map To Double Operation mapper return new Local Double Cache Stream this Override public Local Cache Stream flat Map Function super extends Stream extends mapper intermediate Operations add new Flat Map Operation mapper return Local Cache Stream this Override public Local Int Cache Stream flat Map To Int Function super extends Int Stream mapper intermediate Operations add new Flat Map To Int Operation mapper return new Local Int Cache Stream this Override public Local Long Cache Stream flat Map To Long Function super extends Long Stream mapper intermediate Operations add new Flat Map To Long Operation mapper return new Local Long Cache Stream this Override public Local Double Cache Stream flat Map To Double Function super extends Double Stream mapper intermediate Operations add new Flat Map To Double Operation mapper return new Local Double Cache Stream this Override public Local Cache Stream distinct intermediate Operations add Distinct Operation get Instance return this Override public Local Cache Stream sorted intermediate Operations add Sorted Operation get Instance return this Override public Local Cache Stream sorted Comparator super comparator intermediate Operations add new Sorted Comparator Operation comparator return this Override public Local Cache Stream peek Consumer super action intermediate Operations add new Peek Operation action return this Override public Local Cache Stream limit long max Size intermediate Operations add new Limit Operation max Size return this Override public Local Cache Stream skip long n intermediate Operations add new Skip Operation n return this Override public void for Each Consumer super action inject Cache action create Stream for Each action Override public void for Each Bi Consumer Cache super action Cache cache registry get Component Cache class registry wire Dependencies action create Stream for Each e action accept cache e Override public void for Each Ordered Consumer super action inject Cache action create Stream for Each Ordered action Method to inject a cache into a consumer Note we only support this for the consumer at this time param cache Aware the instance that may be a link Cache Aware private void inject Cache Consumer super cache Aware if cache Aware instanceof Cache Aware Cache Aware cache Aware inject Cache registry get Component Cache class Override public Object to Array return create Stream to Array Override public to Array Int Function generator return create Stream to Array generator Override public reduce identity Binary Operator accumulator return create Stream reduce identity accumulator Override public Optional reduce Binary Operator accumulator return create Stream reduce accumulator Override public reduce identity Bi Function super accumulator Binary Operator combiner return create Stream reduce identity accumulator combiner Override public collect Supplier supplier Bi Consumer super accumulator Bi Consumer combiner return create Stream collect supplier accumulator combiner Override public collect Collector super collector return create Stream collect collector Override public collect Serializable Supplier Collector super supplier return create Stream collect supplier get Override public collect Supplier Collector super supplier return create Stream collect supplier get Override public Optional min Comparator super comparator return create Stream min comparator Override public Optional max Comparator super comparator return create Stream max comparator Override public long count return create Stream count Override public boolean any Match Predicate super predicate return create Stream any Match predicate Override public boolean all Match Predicate super predicate return create Stream all Match predicate Override public boolean none Match Predicate super predicate return create Stream none Match predicate Override public Optional find First return create Stream find First Override public Optional find Any return create Stream find Any Override public Closeable Iterator iterator int size intermediate Operations size if size If no intermediate operations we can support remove return stream Supplier removable Iterator Closeables iterator create Stream else if size Intermediate Operation int Op intermediate Operations peek if int Op instanceof Map Operation Map Operation map Map Operation int Op if map get Function instanceof Removable Function If function was removable means we can just use remove as is return stream Supplier removable Iterator Closeables iterator create Stream return Closeables iterator create Stream Override public Spliterator spliterator return create Stream spliterator Override public Local Cache Stream timeout long timeout Time Unit unit Timeout does nothing for a local cache stream return this 
package org infinispan persistence factory import org infinispan commons Cache Configuration Exception import org infinispan commons util Util import org infinispan configuration cache Store Configuration import org infinispan util logging Log import org infinispan util logging Log Factory Default implementation which uses Local class loader No external class loading is allowed author Sebastian Laskawiec since public class Local Class Loader Cache Store Factory implements Cache Store Factory private static final Log log Log Factory get Log Local Class Loader Cache Store Factory class Override public create Instance Store Configuration cfg Class class Based On Configuration Annotation Configuration For Class Extractor get Class Based On Configuration Annotation cfg log try get Instance is heavily used so refactoring it might be risky However we can safely catch and ignore the exception Returning null is perfectly legal here Object instance Util get Instance class Based On Configuration Annotation if instance null return instance catch Cache Configuration Exception unable To Instantiate log debugv Could not instantiate class using local classloader class Based On Configuration Annotation get Name return null Override public Store Configuration process Configuration Store Configuration store Configuration return null 
package org infinispan stream impl import java util Collection import java util Collections import java util Hash Set import java util Iterator import java util Map import java util Set import java util concurrent Completable Future import java util concurrent Concurrent Map import java util concurrent Fork Join Pool import java util stream Stream import org infinispan Advanced Cache import org infinispan Cache import org infinispan Cache Set import org infinispan cache impl Abstract Delegating Cache import org infinispan commands Commands Factory import org infinispan commons Cache Exception import org infinispan commons util Collection Factory import org infinispan configuration cache Cache Mode import org infinispan configuration cache Configuration import org infinispan container entries Cache Entry import org infinispan context Flag import org infinispan distribution ch Consistent Hash import org infinispan factories Component Registry import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan lifecycle Component Status import org infinispan notifications Listener import org infinispan notifications cachelistener annotation Data Rehashed import org infinispan notifications cachelistener event Data Rehashed Event import org infinispan remoting responses Response import org infinispan remoting rpc Rpc Manager import org infinispan remoting transport Address import org infinispan statetransfer State Transfer Manager import org infinispan topology Cache Topology import org infinispan util Byte String import org infinispan util logging Log import org infinispan util logging Log Factory Local stream manager implementation that handles injection of the stream supplier invoking the operation and subsequently notifying the operation if a rehash has changed one of its segments param key type of underlying cache param value type of underlying cache Listener observation Listener Observation public class Local Stream Manager Impl implements Local Stream Manager private final static Log log Log Factory get Log Local Stream Manager Impl class private static final boolean trace log is Trace Enabled private Advanced Cache cache private Component Registry registry private State Transfer Manager stm private Rpc Manager rpc private Commands Factory factory private boolean has Loader private Address local Address private Cache Mode cache Mode private final Concurrent Map Object Segment Listener change Listener Collection Factory make Concurrent Map private Byte String cache Name class Segment Listener private final Set Integer segments private final Segment Aware Operation op private final Set Integer segments Lost Segment Listener Set Integer segments Segment Aware Operation op this segments new Hash Set segments this op op this segments Lost new Hash Set public void local Segments Set Integer local Segments segments for Each s if local Segments contains s if trace log tracef Could not process segment s s segments Lost add s public void lost Segments Set Integer lost Segments for Integer segment lost Segments if segments contains segment if trace log tracef Lost segment s segment if op lost Segment false if segments Lost add segment segments Lost size segments size if trace log tracef All segments s are now lost segments op lost Segment true Inject public void inject Cache cache Component Registry registry State Transfer Manager stm Rpc Manager rpc Configuration configuration Commands Factory factory We need to unwrap the cache as a local stream should only deal with values and obviously only with local entries Any mappings will be provided by the originator node in their intermediate operation stack in the operation itself this cache Abstract Delegating Cache unwrap Cache cache get Advanced Cache with Flags Flag this cache Name Byte String from String cache get Name this registry registry this stm stm this rpc rpc this factory factory this has Loader configuration persistence using Stores Start public void start local Address rpc get Address cache add Listener this cache Mode cache get Cache Configuration clustering cache Mode We need to listen to data rehash events in case if data moves while we are iterating over it If a rehash occurs causing this node to lose a segment and there is something iterating over the stream looking for values of that segment we ca n t guarantee that the data has all been seen correctly so we must therefore suspect that node by sending it back to the owner param event The data rehash event Data Rehashed public void data Rehashed Data Rehashed Event event Consistent Hash start Hash event get Consistent Hash At Start Consistent Hash end Hash event get Consistent Hash At End boolean trace log is Trace Enabled if start Hash null end Hash null if trace log tracef Data rehash occurred start Hash s and end Hash s with new topology s and was pre s start Hash end Hash event get New Topology Id event is Pre if change Listener is Empty if trace log tracef Previous segments s start Hash get Segments For Owner local Address log tracef After segments s end Hash get Segments For Owner local Address we do n t care about newly added segments since that means our run would n t include them anyways Set Integer before Segments new Hash Set start Hash get Segments For Owner local Address Now any that were there before but are n t there now should be added we do n t care about new segments since our current request should n t be working on it it will have to retrieve it later before Segments remove All end Hash get Segments For Owner local Address if before Segments is Empty We have to make sure all current listeners get the newest hashes updated This has to occur for new nodes and nodes leaving as the hash segments will change in both cases for Map Entry Object Segment Listener entry change Listener entry Set if trace log tracef Notifying s through Segment Change Listener entry get Key entry get Value lost Segments before Segments else if trace log tracef No segments have been removed from data rehash no notification required else if trace log tracef No change listeners present private Advanced Cache get Cache Respecting Loader boolean include Loader We only need to skip the loader if there is one and we were told to skip it if has Loader include Loader return cache get Advanced Cache with Flags Flag return cache private Stream Cache Entry get Stream Cache Set Cache Entry cache Entry Set boolean parallel Stream Set Integer segments Set keys To Include Set keys To Exclude Stream Cache Entry stream parallel Stream cache Entry Set parallel Stream cache Entry Set stream filter Keys keys To Include filter Key Segments segments if cache Mode is Scattered stream stream filter entry entry get Value null if keys To Exclude is Empty return stream filter e keys To Exclude contains e get Key return stream private Stream Cache Entry get Rehash Stream Cache Set Cache Entry cache Entry Set Object request Id Segment Listener listener boolean parallel Stream Set Integer segments Set keys To Include Set keys To Exclude Cache Topology topology stm get Cache Topology if trace log tracef Topology for supplier is s for id s topology request Id Consistent Hash read topology get Current Consistent Hash pending topology get Pending if pending null Set Integer lost Segments new Hash Set Iterator Integer iterator segments iterator while iterator has Next Integer segment iterator next This is to ensure we only unbox the value once as below will twice most times happy path int int Segment segment int Value If the segment is not owned by both Hs we ca n t use it during rehash if pending locate Owners For Segment int Segment contains local Address read locate Owners For Segment int Segment contains local Address iterator remove lost Segments add segment if lost Segments is Empty if trace log tracef Lost segments s during rehash for id s lost Segments request Id listener lost Segments lost Segments else if trace log tracef Currently in the middle of a rehash for id s request Id else Set Integer our Segments read get Segments For Owner local Address if segments retain All our Segments if trace log tracef We found to be missing some segments requested for id s request Id listener local Segments our Segments else if trace log tracef Hash s for id s read request Id return get Stream cache Entry Set parallel Stream segments keys To Include keys To Exclude private void handle Response Error Completable Future Map Address Response completable Future Object request Id Address origin if trace completable Future when Complete v e if v null Response response v values iterator next if response is Successful log tracef Unsuccessful response for s sending response to s request Id origin else if e null log tracef e Encounted exception for s sending response to s request Id origin else log tracef Response successfully sent for s request Id Override public void stream Operation Object request Id Address origin boolean parallel Stream Set Integer segments Set keys To Include Set keys To Exclude boolean include Loader Terminal Operation operation if trace log tracef Received operation request for id s from s for segments s request Id origin segments Cache Set Cache Entry cache Entry Set get Cache Respecting Loader include Loader cache Entry Set operation set Supplier get Stream cache Entry Set parallel Stream segments keys To Include keys To Exclude operation handle Injection registry value operation perform Operation Completable Future Map Address Response completable Future rpc invoke Remotely Async Collections singleton origin factory build Stream Response Command request Id true Collections empty Set value rpc get Default Rpc Options true handle Response Error completable Future request Id origin Override public void stream Operation Rehash Aware Object request Id Address origin boolean parallel Stream Set Integer segments Set keys To Include Set keys To Exclude boolean include Loader Terminal Operation operation if trace log tracef Received rehash aware operation request for id s from s for segments s request Id origin segments Cache Set Cache Entry cache Entry Set get Cache Respecting Loader include Loader cache Entry Set Segment Listener listener new Segment Listener segments operation value operation handle Injection registry We currently only allow request per id we may change this later change Listener put request Id listener if trace log tracef Registered change listener for s request Id try operation set Supplier get Rehash Stream cache Entry Set request Id listener parallel Stream segments keys To Include keys To Exclude value operation perform Operation if trace log tracef Request s completed for segments s with s suspected segments request Id segments listener segments Lost finally change Listener remove request Id if trace log tracef Un Registered change listener for s request Id if cache get Status Component Status if trace log tracef Cache status is no longer running all segments are now suspect for s request Id listener segments Lost add All segments value null if trace log tracef Sending response for s request Id Completable Future Map Address Response completable Future rpc invoke Remotely Async Collections singleton origin factory build Stream Response Command request Id true listener segments Lost value rpc get Default Rpc Options true handle Response Error completable Future request Id origin Override public void stream Operation Object request Id Address origin boolean parallel Stream Set Integer segments Set keys To Include Set keys To Exclude boolean include Loader Key Tracking Terminal Operation operation if trace log tracef Received key aware operation request for id s from s for segments s request Id origin segments Cache Set Cache Entry cache Entry Set get Cache Respecting Loader include Loader cache Entry Set operation set Supplier get Stream cache Entry Set parallel Stream segments keys To Include keys To Exclude operation handle Injection registry Collection value operation perform Operation new Non Rehash Intermediate Collector origin request Id parallel Stream Completable Future Map Address Response completable Future rpc invoke Remotely Async Collections singleton origin factory build Stream Response Command request Id true Collections empty Set value rpc get Default Rpc Options true handle Response Error completable Future request Id origin Override public void stream Operation Rehash Aware Object request Id Address origin boolean parallel Stream Set Integer segments Set keys To Include Set keys To Exclude boolean include Loader Key Tracking Terminal Operation operation if trace log tracef Received key rehash aware operation request for id s from s for segments s request Id origin segments Cache Set Cache Entry cache Entry Set get Cache Respecting Loader include Loader cache Entry Set Segment Listener listener new Segment Listener segments operation Collection Cache Entry results operation handle Injection registry We currently only allow request per id we may change this later change Listener put request Id listener if trace log tracef Registered change listener for s request Id try operation set Supplier get Rehash Stream cache Entry Set request Id listener parallel Stream segments keys To Include keys To Exclude results operation perform Operation Rehash Aware new Non Rehash Intermediate Collector origin request Id parallel Stream if trace log tracef Request s completed segments s with s suspected segments request Id segments listener segments Lost finally change Listener remove request Id if trace log tracef Un Registered change listener for s request Id if cache get Status Component Status if trace log tracef Cache status is no longer running all segments are now suspect for s request Id listener segments Lost add All segments results null Completable Future Map Address Response completable Future rpc invoke Remotely Async Collections singleton origin factory build Stream Response Command request Id true listener segments Lost results rpc get Default Rpc Options true handle Response Error completable Future request Id origin class Non Rehash Intermediate Collector implements Key Tracking Terminal Operation Intermediate Collector private final Address origin private final Object request Id private final boolean use Managed Blocker Non Rehash Intermediate Collector Address origin Object request Id boolean use Managed Blocker this origin origin this request Id request Id this use Managed Blocker use Managed Blocker Override public void send Data Resonse response If we know we were in a parallel stream we should use a managed blocker to not consume core fork join threads if applicable if use Managed Blocker try We use a managed blocker just in case if this invoked in the common thread pool Fork Join Pool managed Block new Response Blocker response catch Interrupted Exception e throw new Cache Exception e else rpc invoke Remotely Collections singleton origin new Stream Response Command cache Name local Address request Id false response rpc get Default Rpc Options true class Response Blocker implements Fork Join Pool Managed Blocker private final response private boolean completed false Response Blocker response this response response Override public boolean block throws Interrupted Exception if completed This way we do n t send more than response to the originating node but still inside managed blocker so we do n t consume a thread synchronized Non Rehash Intermediate Collector this rpc invoke Remotely Collections singleton origin new Stream Response Command cache Name local Address request Id false response rpc get Default Rpc Options true completed true return completed Override public boolean is Releasable return completed 
package org infinispan topology import static org infinispan factories Known Component Names import java util Collections import java util Hash Map import java util Map import java util concurrent Completable Future import java util concurrent Execution Exception import java util concurrent Executor Service import java util concurrent Future import java util concurrent Time Unit import java util concurrent Timeout Exception import org infinispan Version import org infinispan commands Replicable Command import org infinispan commons Cache Exception import org infinispan commons marshall Not Serializable Exception import org infinispan distribution ch Consistent Hash import org infinispan distribution ch Consistent Hash Factory import org infinispan eviction Passivation Manager import org infinispan executors Limited Executor import org infinispan factories Component Registry import org infinispan factories Global Component Registry import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan globalstate Global State Manager import org infinispan globalstate Global State Provider import org infinispan globalstate Scoped Persistent State import org infinispan globalstate impl Global State Manager Impl import org infinispan globalstate impl Scoped Persistent State Impl import org infinispan jmx annotations Data Type import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Attribute import org infinispan partitionhandling Availability Mode import org infinispan partitionhandling impl Partition Handling Manager import org infinispan remoting inboundhandler Deliver Order import org infinispan remoting responses Exception Response import org infinispan remoting responses Response import org infinispan remoting responses Successful Response import org infinispan remoting rpc Response Mode import org infinispan remoting transport Address import org infinispan remoting transport Transport import org infinispan remoting transport jgroups Suspect Exception import org infinispan util Time Service import org infinispan util concurrent Within Thread Executor import org infinispan util logging Log import org infinispan util logging Log Factory import net jcip annotations Guarded By The code Local Topology Manager implementation author Dan Berindei since Bean object Name Local Topology Manager description Controls the cache membership and state transfer public class Local Topology Manager Impl implements Local Topology Manager Global State Provider private static Log log Log Factory get Log Local Topology Manager Impl class private static final boolean trace log is Trace Enabled private Transport transport private Executor Service async Transport Executor private Global Component Registry gcr private Time Service time Service private Global State Manager global State Manager private Persistent Manager persistent Manager private final Within Thread Executor within Thread Executor new Within Thread Executor We synchronize on the entire map while handling a status request to make sure there are no concurrent topology updates from the old coordinator private final Map String Local Cache Status running Caches Collections synchronized Map new Hash Map String Local Cache Status private volatile boolean running Guarded By running Caches private int latest Status Response View Id private Persistent persistent Inject public void inject Transport transport Component Name Executor Service async Transport Executor Global Component Registry gcr Time Service time Service Global State Manager global State Manager Persistent Manager persistent Manager this transport transport this async Transport Executor async Transport Executor this gcr gcr this time Service time Service if global State Manager null this global State Manager global State Manager global State Manager register State Provider this this persistent Manager persistent Manager Arbitrary value only need to start after the optional Global State Manager and Groups Transport Start priority Start is n t called with any locks but it runs before the component is accessible from other threads Guarded By running Caches public void start if trace log tracef Starting Local Topology Manager on s transport get Address if persistent null persistent Persistent random if global State Manager null global State Manager write Global State persistent Manager add Persistent Address Mapping transport get Address persistent running true latest Status Response View Id transport get View Id Need to stop before the Groups Transport Stop priority public void stop if trace log tracef Stopping Local Topology Manager on s transport get Address persistent Manager remove Persistent Address Mapping persistent running false within Thread Executor shutdown Override public Cache Topology join String cache Name Cache Join Info join Info Cache Topology Handler stm Partition Handling Manager phm throws Exception log debugf Node s joining cache s transport get Address cache Name For Total Order caches we must not move the topology updates to another thread Executor Service topology Updates Executor join Info is Total Order within Thread Executor async Transport Executor Local Cache Status cache Status new Local Cache Status cache Name join Info stm phm topology Updates Executor Pretend the join is using up a thread from the topology updates executor This ensures that the initial topology and the request will happen on this thread and other topology updates are only handled after we complete join Future Completable Future Void join Future new Completable Future cache Status get Topology Updates Executor execute Async join Future running Caches put cache Name cache Status long timeout join Info get Timeout long end Time time Service expected End Time timeout Time Unit try while true int view Id transport get View Id try Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address join Info view Id Cache Status Response initial Status Cache Status Response execute On Coordinator command timeout if initial Status null log debug Ignoring null join response coordinator is probably shutting down wait For View view Id cache Status get Join Info get Timeout Time Unit continue if do Handle Topology Update cache Name initial Status get Cache Topology initial Status get Availability Mode view Id transport get Coordinator cache Status throw new Illegal State Exception We already had a newer topology by the time we received the join response do Handle Stable Topology Update cache Name initial Status get Stable Topology view Id transport get Coordinator cache Status return initial Status get Cache Topology catch Not Serializable Exception e There s no point in retrying if the cache join info is not serializable throw new Cache Join Exception e catch Exception e log debugf e Error sending join request for cache s to coordinator cache Name if e get Cause null e get Cause instanceof Cache Join Exception throw Cache Join Exception e get Cause if time Service is Time Expired end Time throw e Add some configuration for this or use a fraction of state transfer timeout Thread sleep finally join Future complete null Override public void leave String cache Name log debugf Node s leaving cache s transport get Address cache Name Local Cache Status cache Status running Caches remove cache Name Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address transport get View Id try execute On Coordinator command cache Status get Join Info get Timeout catch Exception e log debugf e Error sending the leave request for cache s to coordinator cache Name Override public void confirm Rebalance Phase String cache Name int topology Id int rebalance Id Throwable throwable Note that if the coordinator changes again after we sent the command we will get another query for the status of our running caches So we do n t need to retry if the command failed Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address topology Id rebalance Id throwable transport get View Id try execute On Coordinator Async command catch Exception e log debugf e Error sending the rebalance completed notification for cache s to the coordinator cache Name called by the coordinator Override public Manager Status Response handle Status Request int view Id try As long as we have an older view we can still process topologies from the old coordinator wait For View view Id get Global Timeout Time Unit catch Interrupted Exception e Shutting down send back an empty status Thread current Thread interrupt return new Manager Status Response Collections empty Map true Map String Cache Status Response caches new Hash Map synchronized running Caches latest Status Response View Id view Id for Map Entry String Local Cache Status e running Caches entry Set String cache Name e get Key Local Cache Status cache Status running Caches get cache Name caches put e get Key new Cache Status Response cache Status get Join Info cache Status get Current Topology cache Status get Stable Topology cache Status get Partition Handling Manager get Availability Mode boolean rebalancing Enabled true Avoid adding a direct dependency to the Cluster Topology Manager Replicable Command command new Cache Topology Control Command null Cache Topology Control Command Type transport get Address transport get View Id try gcr wire Dependencies command Successful Response response Successful Response command invoke rebalancing Enabled Boolean response get Response Value catch Throwable t log warn Failed to obtain the rebalancing status t log debugf Sending cluster status response for view d view Id return new Manager Status Response caches rebalancing Enabled Override public void handle Topology Update final String cache Name final Cache Topology cache Topology final Availability Mode availability Mode final int view Id final Address sender throws Interrupted Exception if ignore Topology Update cache Name cache Topology return final Local Cache Status cache Status running Caches get cache Name cache Status get Topology Updates Executor execute try do Handle Topology Update cache Name cache Topology availability Mode view Id sender cache Status catch Throwable t log topology Update Error cache Name t private boolean ignore Topology Update final String cache Name final Cache Topology cache Topology if running log tracef Ignoring consistent hash update s for cache s the local cache manager is not running cache Topology get Topology Id cache Name return true if running Caches get cache Name null log tracef Ignoring consistent hash update s for cache s that does n t exist locally cache Topology get Topology Id cache Name return true return false Update the cache topology in the Local Cache Status and pass it to the Cache Topology Handler return code true if the topology was applied code false if it was ignored private boolean do Handle Topology Update String cache Name Cache Topology cache Topology Availability Mode availability Mode int view Id Address sender Local Cache Status cache Status try wait For View view Id cache Status get Join Info get Timeout Time Unit catch Interrupted Exception e Shutting down ignore the exception and the rebalance return false synchronized cache Status if cache Topology null No topology yet happens when a cache is being restarted from state Still return true because we do n t want to re send the join request return true Register all persistent Ds locally register Persistent cache Topology Cache Topology existing Topology cache Status get Current Topology if existing Topology null cache Topology get Topology Id existing Topology get Topology Id log debugf Ignoring late consistent hash update for cache s current topology is s s cache Name existing Topology get Topology Id cache Topology return false Cache Topology Handler handler cache Status get Handler reset Local Topology Before Rebalance cache Name cache Topology existing Topology handler if update Cache Topology cache Name cache Topology view Id sender cache Status return false Consistent Hash current cache Topology get Current Consistent Hash union null if cache Topology get Pending null Consistent Hash Factory chf cache Status get Join Info get Consistent Hash Factory switch cache Topology get Phase case When removing members from topology we have to make sure that the union has owners from pending which is used as the read in this phase before owners from current as primary owners must match in read and write union chf union cache Topology get Pending cache Topology get Current break case Ensure that this node utilises it s old partitions read Consistent Hash during conflict resolution But has an updated write consistent hash which contains owners from the pre and post merge hashes union chf union existing Topology get Write Consistent Hash cache Topology get Pending current existing Topology get Current break default union chf union cache Topology get Current cache Topology get Pending Cache Topology union Topology new Cache Topology cache Topology get Topology Id cache Topology get Rebalance Id current cache Topology get Pending union cache Topology get Phase cache Topology get Actual Members persistent Manager map Addresses cache Topology get Actual Members union Topology log Routing Table Information boolean update Availability Mode First availability Mode Availability Mode if update Availability Mode First availability Mode null cache Status get Partition Handling Manager set Availability Mode availability Mode boolean start Conflict Resolution cache Topology get Phase Cache Topology Phase if start Conflict Resolution existing Topology null existing Topology get Rebalance Id cache Topology get Rebalance Id union null This command was sent after a command but arrived first We will start the rebalance now and ignore the command when it arrives log tracef This topology update has a pending starting the rebalance now handler rebalance union Topology else handler update Consistent Hash union Topology if update Availability Mode First cache Status get Partition Handling Manager set Availability Mode availability Mode return true private void register Persistent Cache Topology cache Topology int count cache Topology get Actual Members size for int i i count i persistent Manager add Persistent Address Mapping cache Topology get Actual Members get i cache Topology get Members Persistent Ds get i private boolean update Cache Topology String cache Name Cache Topology cache Topology int view Id Address sender Local Cache Status cache Status synchronized running Caches if validate Command View Id cache Topology view Id sender cache Name return false log debugf Updating local topology for cache s s cache Name cache Topology cache Status set Current Topology cache Topology return true Synchronization is required to prevent topology updates while preparing the status response Guarded By running Caches private boolean validate Command View Id Cache Topology cache Topology int view Id Address sender String cache Name if sender equals transport get Coordinator log debugf Ignoring topology d for cache s from old coordinator s cache Topology get Topology Id cache Name sender return false if view Id latest Status Response View Id log debugf Ignoring topology d for cache s from view d received after status request from view d cache Topology get Topology Id cache Name view Id latest Status Response View Id return false return true private void reset Local Topology Before Rebalance String cache Name Cache Topology new Cache Topology Cache Topology old Cache Topology Cache Topology Handler handler boolean new Rebalance new Cache Topology get Pending null if new Rebalance The initial topology does n t need a reset because we are guaranteed not to be a member if old Cache Topology null return We only need a reset if we missed a topology update if new Cache Topology get Topology Id old Cache Topology get Topology Id return We have missed a topology update and that topology might have removed some of our segments If this rebalance adds those same segments we need to remove the old data inbound transfers first This can happen when the coordinator changes either because the old one left or because there was a merge and the rebalance after merge arrives before the merged topology update if new Cache Topology get Rebalance Id old Cache Topology get Rebalance Id The current changed we need to install a reset topology with the new current first register Persistent new Cache Topology Cache Topology reset Topology new Cache Topology new Cache Topology get Topology Id new Cache Topology get Rebalance Id new Cache Topology get Current null Cache Topology Phase new Cache Topology get Actual Members persistent Manager map Addresses new Cache Topology get Actual Members log debugf Installing fake cache topology s for cache s reset Topology cache Name handler update Consistent Hash reset Topology Override public void handle Stable Topology Update final String cache Name final Cache Topology new Stable Topology final Address sender final int view Id final Local Cache Status cache Status running Caches get cache Name if cache Status null cache Status get Topology Updates Executor execute do Handle Stable Topology Update cache Name new Stable Topology view Id sender cache Status private void do Handle Stable Topology Update String cache Name Cache Topology new Stable Topology int view Id Address sender Local Cache Status cache Status synchronized running Caches if validate Command View Id new Stable Topology view Id sender cache Name return Cache Topology stable Topology cache Status get Stable Topology if stable Topology null stable Topology get Topology Id new Stable Topology get Topology Id log tracef Updating stable topology for cache s s cache Name new Stable Topology cache Status set Stable Topology new Stable Topology Override public void handle Rebalance final String cache Name final Cache Topology cache Topology final int view Id final Address sender throws Interrupted Exception if running log debugf Ignoring rebalance request s for cache s the local cache manager is not running cache Topology get Topology Id cache Name return final Local Cache Status cache Status running Caches get cache Name if cache Status null log tracef Ignoring rebalance s for cache s that does n t exist locally cache Topology get Topology Id cache Name return cache Status get Topology Updates Executor execute try do Handle Rebalance view Id cache Status cache Topology cache Name sender catch Throwable t log rebalance Start Error cache Name t private void do Handle Rebalance int view Id Local Cache Status cache Status Cache Topology cache Topology String cache Name Address sender try wait For View view Id cache Status get Join Info get Timeout Time Unit catch Interrupted Exception e Shutting down ignore the exception and the rebalance return synchronized cache Status Cache Topology existing Topology cache Status get Current Topology if existing Topology null cache Topology get Topology Id existing Topology get Topology Id Start rebalance commands are sent asynchronously to the entire cluster So it s possible to receive an old one on a joiner after the joiner has already become a member log debugf Ignoring old rebalance for cache s current topology is s s cache Name existing Topology get Topology Id cache Topology return if update Cache Topology cache Name cache Topology view Id sender cache Status return log debugf Starting local rebalance for cache s topology s cache Name cache Topology cache Topology log Routing Table Information Cache Topology Handler handler cache Status get Handler reset Local Topology Before Rebalance cache Name cache Topology existing Topology handler Consistent Hash union cache Status get Join Info get Consistent Hash Factory union cache Topology get Current cache Topology get Pending Cache Topology new Topology new Cache Topology cache Topology get Topology Id cache Topology get Rebalance Id cache Topology get Current cache Topology get Pending union cache Topology get Phase cache Topology get Actual Members cache Topology get Members Persistent Ds handler rebalance new Topology Override public Cache Topology get Cache Topology String cache Name Local Cache Status cache Status running Caches get cache Name return cache Status null cache Status get Current Topology null Override public Cache Topology get Stable Cache Topology String cache Name Local Cache Status cache Status running Caches get cache Name return cache Status null cache Status get Stable Topology null Override public boolean is Total Order Cache String cache Name if running log tracef is Total Order Cache s returning false because the local cache manager is not running cache Name return false Local Cache Status cache Status running Caches get cache Name if cache Status null log tracef is Total Order Cache s returning false because the cache does n t exist locally cache Name return false boolean total Order cache Status get Join Info is Total Order log tracef is Total Order Cache s returning s cache Name total Order return total Order private void wait For View int view Id long timeout Time Unit time Unit throws Interrupted Exception try transport with View view Id get timeout time Unit catch Execution Exception e The view future should never complete with an exception throw new Cache Exception e get Cause catch Timeout Exception e throw log timeout Waiting For View view Id transport get View Id Managed Attribute description Rebalancing enabled display Name Rebalancing enabled data Type Data Type writable true Override public boolean is Rebalancing Enabled throws Exception return is Cache Rebalancing Enabled null Override public void set Rebalancing Enabled boolean enabled throws Exception set Cache Rebalancing Enabled null enabled Override public boolean is Cache Rebalancing Enabled String cache Name throws Exception int view Id transport get View Id Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address view Id return execute On Coordinator Retry command view Id public execute On Coordinator Retry Replicable Command command int view Id throws Exception boolean retried false long end Nanos time Service expected End Time get Global Timeout Time Unit while true try long remaining Millis time Service remaining Time end Nanos Time Unit return execute On Coordinator command remaining Millis catch Suspect Exception e if trace log tracef Coordinator left the cluster while querying rebalancing status retrying The view information in Groups Transport is not updated atomically so we could have sent the request to the old coordinator We work around this by sending the request a second time with the same view id if retried view Id Math max view Id transport get View Id long remaining Nanos time Service remaining Time end Nanos Time Unit wait For View view Id remaining Nanos Time Unit retried false else retried true Override public void set Cache Rebalancing Enabled String cache Name boolean enabled throws Exception Cache Topology Control Command Type type enabled Cache Topology Control Command Type Cache Topology Control Command Type Replicable Command command new Cache Topology Control Command cache Name type transport get Address transport get View Id execute On Cluster Sync command get Global Timeout false false Override public Rebalancing Status get Rebalancing Status String cache Name throws Exception Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address transport get View Id int view Id transport get View Id return execute On Coordinator Retry command view Id Managed Attribute description Cluster availability display Name Cluster availability data Type Data Type writable false public String get Cluster Availability Availability Mode cluster Availability Availability Mode synchronized running Caches for Local Cache Status cache Status running Caches values Availability Mode availability Mode cache Status get Partition Handling Manager get Availability Mode cluster Availability cluster Availability min availability Mode return cluster Availability to String Override public Availability Mode get Cache Availability String cache Name Local Cache Status cache Status running Caches get cache Name return cache Status get Partition Handling Manager get Availability Mode Override public void set Cache Availability String cache Name Availability Mode availability Mode throws Exception Cache Topology Control Command Type type Cache Topology Control Command Type Replicable Command command new Cache Topology Control Command cache Name type transport get Address availability Mode transport get View Id execute On Coordinator command get Global Timeout Override public void cache Shutdown String name throws Exception Replicable Command command new Cache Topology Control Command name Cache Topology Control Command Type transport get Address transport get View Id execute On Coordinator command get Global Timeout Override public void handle Cache Shutdown String cache Name Component Registry cr gcr get Named Component Registry cache Name Perform any orderly shutdown operations here Passivation Manager passivation Manager cr get Component Passivation Manager class if passivation Manager null passivation Manager passivate All The cache has shutdown write the state Scoped Persistent State cache State new Scoped Persistent State Impl cache Name cache State set Property Global State Manager Impl Version get Version cache State set Property Global State Manager Impl time Service instant to String cache State set Property Global State Manager Impl Version get Major Local Cache Status cache Status running Caches get cache Name cache Status get Current Topology get Current remap Addresses persistent Manager address To Persistent to Scoped State cache State if global State Manager null global State Manager write Scoped State cache State private Object execute On Coordinator Replicable Command command long timeout throws Exception Response response if transport is Coordinator try if trace log tracef Attempting to execute command on self s command gcr wire Dependencies command response Response command invoke catch Throwable t throw new Cache Exception Error handling join request t else this node is not the coordinator Address coordinator transport get Coordinator Map Address Response response Map transport invoke Remotely Collections singleton coordinator command Response Mode timeout null Deliver Order false response response Map get coordinator if response null response is Successful Throwable exception response instanceof Exception Response Exception Response response get Exception null throw new Cache Exception Bad response received from coordinator response exception return Successful Response response get Response Value private void execute On Coordinator Async final Replicable Command command throws Exception if we are the coordinator the execution is actually synchronous if transport is Coordinator async Transport Executor execute if trace log tracef Attempting to execute command on self s command gcr wire Dependencies command try command invoke catch Throwable t log errorf t Failed to execute Replicable Command s on coordinator async s command t get Message else Address coordinator transport get Coordinator ignore the responses transport invoke Remotely Collections singleton coordinator command Response Mode null Deliver Order false private Map Address Object execute On Cluster Sync final Replicable Command command final int timeout boolean total Order boolean distributed throws Exception first invoke remotely if total Order Map Address Response response Map transport invoke Remotely null command Response Mode timeout null Deliver Order distributed return parse Responses response Map Future Map Address Response remote Future transport invoke Remotely Async null command Response Mode timeout null Deliver Order false invoke the command on the local node gcr wire Dependencies command Response local Response try if trace log tracef Attempting to execute command on self s command local Response Response command invoke catch Throwable throwable throw new Exception throwable if local Response is Successful throw new Cache Exception Unsuccessful local response wait for the remote commands to finish Map Address Response response Map remote Future get timeout Time Unit parse the responses Map Address Object response Values parse Responses response Map response Values put transport get Address Successful Response local Response get Response Value return response Values private Map Address Object parse Responses Map Address Response response Map Map Address Object response Values new Hash Map transport get Members size for Map Entry Address Response entry response Map entry Set Address address entry get Key Response response entry get Value if response is Successful Throwable cause response instanceof Exception Response Exception Response response get Exception null throw new Cache Exception Unsuccessful response received from node address response cause response Values put address Successful Response response get Response Value return response Values private int get Global Timeout Rename setting to something like global Rpc Timeout return int gcr get Global Configuration transport distributed Sync Timeout Override public void prepare For Persist Scoped Persistent State state state set Property uuid persistent to String Override public void prepare For Restore Scoped Persistent State state persistent Persistent from String state get Property uuid Override public Persistent get Persistent return persistent class Local Cache Status private final Cache Join Info join Info private final Cache Topology Handler handler private final Partition Handling Manager partition Handling Manager private volatile Cache Topology current Topology private volatile Cache Topology stable Topology private final Limited Executor topology Updates Executor Local Cache Status String cache Name Cache Join Info join Info Cache Topology Handler handler Partition Handling Manager phm Executor Service executor this join Info join Info this handler handler this partition Handling Manager phm this topology Updates Executor new Limited Executor Topology cache Name executor public Cache Join Info get Join Info return join Info public Cache Topology Handler get Handler return handler public Partition Handling Manager get Partition Handling Manager return partition Handling Manager Cache Topology get Current Topology return current Topology void set Current Topology Cache Topology current Topology this current Topology current Topology Cache Topology get Stable Topology return stable Topology void set Stable Topology Cache Topology stable Topology this stable Topology stable Topology partition Handling Manager on Topology Update current Topology Limited Executor get Topology Updates Executor return topology Updates Executor 
package org infinispan factories import org infinispan factories annotations Default Factory For import org infinispan util concurrent locks impl Lock Container import org infinispan util concurrent locks impl Per Key Lock Container import org infinispan util concurrent locks impl Striped Lock Container Factory class that creates instances of link Lock Container author Pedro Ruivo since Default Factory For classes Lock Container class public class Lock Container Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Suppress Warnings unchecked Override public construct Class component Type return configuration locking use Lock Striping new Striped Lock Container configuration locking concurrency Level new Per Key Lock Container 
package org infinispan configuration cache import java util concurrent Time Unit import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set import org infinispan util concurrent Isolation Level Defines the local in locking and concurrency characteristics of the cache author pmuir public class Locking Configuration public static final Attribute Definition Integer Attribute Definition builder concurrency Level immutable build public static final Attribute Definition Isolation Level Attribute Definition builder isolation Level Isolation Level xml Name isolation immutable build public static final Attribute Definition Long Attribute Definition builder lock Acquisition Timeout Time Unit to Millis xml Name acquire timeout build public static final Attribute Definition Boolean Attribute Definition builder striping false immutable build public static final Attribute Definition Boolean Attribute Definition builder write Skew Check true xml Name write skew immutable build static Attribute Set attribute Definition Set return new Attribute Set Locking Configuration class private final Attribute Integer concurrency Level private final Attribute Isolation Level isolation Level private final Attribute Long lock Acquisition Timeout private final Attribute Boolean use Lock Striping private final Attribute Set attributes Locking Configuration Attribute Set attributes attributes check Protection this attributes attributes concurrency Level attributes attribute isolation Level attributes attribute lock Acquisition Timeout attributes attribute use Lock Striping attributes attribute Concurrency level for lock containers Adjust this value according to the number of concurrent threads interacting with Infinispan Similar to the concurrency Level tuning parameter seen in the s Concurrent Hash Map public int concurrency Level return concurrency Level get This option applies to non transactional caches only both clustered and local if set to true default value the cache keeps data consistent in the case of concurrent updates For clustered caches this comes at the cost of an additional so if you do n t expect your application to write data concurrently disabling this flag increases performance deprecated this option is always code true code and can not be modified since version Deprecated public boolean supports Concurrent Updates return true Cache isolation level Infinispan only supports or isolation levels See a href http en wikipedia org wiki Isolation level http en wikipedia org wiki Isolation level a for a discussion on isolation levels public Isolation Level isolation Level return isolation Level get Maximum time to attempt a particular lock acquisition public long lock Acquisition Timeout return lock Acquisition Timeout get public Locking Configuration lock Acquisition Timeout long timeout lock Acquisition Timeout set timeout return this If true a pool of shared locks is maintained for all entries that need to be locked Otherwise a lock is created per entry in the cache Lock striping helps control memory footprint but may reduce concurrency in the system public boolean use Lock Striping return use Lock Striping get This setting is only applicable in the case of When write skew check is set to false if the writer at commit time discovers that the working entry and the underlying entry have different versions the working entry will overwrite the underlying entry If true such version conflict known as a write skew will throw an Exception deprecated since Deprecated public boolean write Skew Check return true public Attribute Set attributes return attributes Override public String to String return Locking Configuration attributes attributes Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Locking Configuration other Locking Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result 
package org infinispan configuration cache import static org infinispan configuration cache Locking Configuration import static org infinispan configuration cache Locking Configuration import static org infinispan configuration cache Locking Configuration import static org infinispan configuration cache Locking Configuration import java util concurrent Time Unit import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration import org infinispan util concurrent Isolation Level import org infinispan util logging Log import org infinispan util logging Log Factory Defines the local in locking and concurrency characteristics of the cache author pmuir public class Locking Configuration Builder extends Abstract Configuration Child Builder implements Builder Locking Configuration private static final Log log Log Factory get Log Locking Configuration Builder class private final Attribute Set attributes protected Locking Configuration Builder Configuration Builder builder super builder attributes Locking Configuration attribute Definition Set Concurrency level for lock containers Adjust this value according to the number of concurrent threads interacting with Infinispan Similar to the concurrency Level tuning parameter seen in the s Concurrent Hash Map public Locking Configuration Builder concurrency Level int i attributes attribute set i return this Cache isolation level Infinispan only supports or isolation levels See a href http en wikipedia org wiki Isolation level http en wikipedia org wiki Isolation level a for a discussion on isolation levels public Locking Configuration Builder isolation Level Isolation Level isolation Level attributes attribute set isolation Level return this public Isolation Level isolation Level return attributes attribute get see org infinispan configuration cache Locking Configuration supports Concurrent Updates deprecated Deprecated public Locking Configuration Builder supports Concurrent Updates boolean it Does if it Does log warn Concurrent Update Support Cannot Be Configured return this Maximum time to attempt a particular lock acquisition public Locking Configuration Builder lock Acquisition Timeout long l attributes attribute set l return this Maximum time to attempt a particular lock acquisition public Locking Configuration Builder lock Acquisition Timeout long l Time Unit unit return lock Acquisition Timeout unit to Millis l If true a pool of shared locks is maintained for all entries that need to be locked Otherwise a lock is created per entry in the cache Lock striping helps control memory footprint but may reduce concurrency in the system public Locking Configuration Builder use Lock Striping boolean b attributes attribute set b return this This setting is only applicable in the case of When write skew check is set to false if the writer at commit time discovers that the working entry and the underlying entry have different versions the working entry will overwrite the underlying entry If true such version conflict known as a write skew will throw an Exception deprecated since It will be automatically enabled for and transactions Deprecated public Locking Configuration Builder write Skew Check boolean b return this Override public void validate Attribute Isolation Level isolation Level attributes attribute if get Builder clustering cache Mode is Clustered isolation Level get Isolation Level isolation Level set Isolation Level if isolation Level get Isolation Level isolation Level set Isolation Level if isolation Level get Isolation Level isolation Level set Isolation Level Override public void validate Global Configuration global Config Override public Locking Configuration create return new Locking Configuration attributes protect Override public Locking Configuration Builder read Locking Configuration template this attributes read template attributes return this Override public String to String return this get Class get Simple Name attributes 
package org infinispan factories import org infinispan factories annotations Default Factory For import org infinispan util concurrent locks Lock Manager import org infinispan util concurrent locks Pending Lock Manager import org infinispan util concurrent locks impl Default Lock Manager import org infinispan util concurrent locks impl Default Pending Lock Manager import org infinispan util concurrent locks impl No Op Pending Lock Manager Factory class that creates instances of link Lock Manager author Manik Surtani a href mailto manik jboss org manik jboss org a since Default Factory For classes Lock Manager class Pending Lock Manager class public class Lock Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override public construct Class component Type if Pending Lock Manager class equals component Type return component Type cast configuration clustering cache Mode is Clustered new Default Pending Lock Manager No Op Pending Lock Manager get Instance else if Lock Manager class equals component Type return component Type cast new Default Lock Manager throw new Illegal Argument Exception Unexpected component type component Type 
package org infinispan util concurrent locks The link org infinispan util concurrent locks impl Infinispan Lock possible states p Used in listener to notify when the state changes author Pedro Ruivo since public enum Lock State The lock owner is in the queue waiting for the lock to be available The lock owner left the queue and it is available to acquire the lock The time out occurred while the lock owner waits on the queue The deadlock occurred with another possible lock owner and it should abort The lock owner released the lock 
package org infinispan client hotrod logging import static org jboss logging Logger Level import static org jboss logging Logger Level import static org jboss logging Logger Level import static org jboss logging Logger Level import static org jboss logging Logger Level import java io Exception import java lang reflect Method import java net Socket Address import java util Collection import java util List import java util No Such Element Exception import java util Set import org infinispan client hotrod event Client Event import org infinispan client hotrod event Incorrect Client Listener Exception import org infinispan client hotrod exceptions Hot Rod Client Exception import org infinispan client hotrod impl transport Transport import org infinispan client hotrod impl transport tcp Tcp Transport import org infinispan commons Cache Configuration Exception import org infinispan commons Cache Exception import org infinispan commons Cache Listener Exception import org jboss logging Basic Logger import org jboss logging annotations Cause import org jboss logging annotations Log Message import org jboss logging annotations Message import org jboss logging annotations Message Logger Log abstraction for the hot rod client For this module message ids ranging from to inclusively have been reserved author Galder Zamarre o since Message Logger project Code public interface Log extends Basic Logger Log Message level Message value Could not find s file in classpath using defaults id void could Not Find Properties File String properties File Log Message level Message value Can not perform operations on a cache associated with an unstarted Remote Cache Manager Use Remote Cache Manager start before using the remote cache id void unstarted Remote Cache Manager Log Message level Message value Invalid magic number Expected x and received x id void invalid Magic Number short expected Magic Number short received Magic Log Message level Message value Invalid message id Expected d and received d id void invalid Message Id long expected Msg Id long received Msg Id Log Message level Message value Error received from the server s id void error From Server String message Log Message level Message value s sent new topology view id d age d containing d addresses s id void new Topology Socket Address address int view Id int age int topology Size Set Socket Address topology Log Message level Message value Exception encountered Retry d out of d id void exception And No Retries Left int retry int max Retries Cause Hot Rod Client Exception te id is now logged to Log Message level Message value Issues closing socket for s s id void error Closing Socket Tcp Transport transport Exception e Log Message level Message value No hash function configured for version d id void no Has Function Configured int hash Function Version Log Message level Message value Could not invalidate connection s id void could No Invalidate Connection Tcp Transport transport Cause Exception e Log Message level Message value Could not release connection s id void could Not Release Connection Tcp Transport transport Cause Exception e Log Message level Message value New server added s adding to the pool id void new Server Added Socket Address server Log Message level Message value Failed adding new server s id void failed Adding New Server Socket Address server Cause Exception e Log Message level Message value Server not in cluster anymore s removing from the pool id void removing Server Socket Address server Log Message level Message value Unable to convert string property s to an int Using default value of d id void unable To Convert String Property To Int String value int default Value Log Message level Message value Unable to convert string property s to a long Using default value of d id void unable To Convert String Property To Long String value long default Value Log Message level Message value Unable to convert string property s to a boolean Using default value of b id void unable To Convert String Property To Boolean String value boolean default Value Log Message level Message value Infinispan version s id void version String version Message value Enabled but no Trust Store specified id Cache Configuration Exception no Trust Manager Configuration Message value password is required to open the Key Store s id Cache Configuration Exception missing Key Store Password String key Store Message value password is required to open the Trust Store s id Cache Configuration Exception missing Trust Store Password String trust Store Message value Can not configure custom Key Store and or Trust Store when specifying a Context id Cache Configuration Exception xor Context Message value Unable to parse server address s id Cache Configuration Exception parse Error Server Address String server Message value Invalid max retries value s Value should be greater or equal than zero id Cache Configuration Exception invalid Max Retries int retries Per Server Message value Can not enable authentication without specifying a Callback Handler or a client Subject id Cache Configuration Exception invalid Callback Handler Message value The selected authentication mechanism s is not among the supported server mechanisms s id Security Exception unsupported Mech String auth Mech List String server Mechs Message value s is an invalid mechanism id Cache Configuration Exception invalid Sasl Mechanism String sasl Mechanism Message value Connection dedicated to listener with id s but received event for listener with id s id Illegal State Exception unexpected Listener Id String listener Id String expected Listener Id Message value Unable to unmarshall bytes s id Hot Rod Client Exception unable To Unmarshall Bytes String bytes Cause Exception e Message value Caught exception s while invoking method s on listener instance s id Cache Listener Exception exception Invoking Listener String name Method m Object target Cause Throwable cause Message value Methods annotated with s must accept exactly one parameter of assignable from type s id Incorrect Client Listener Exception incorrect Client Listener String annotation Name Collection allowed Parameters Message value Methods annotated with s should have a return type of void id Incorrect Client Listener Exception incorrect Client Listener String annotation Name Log Message level Message value Unexpected error consuming event s id void unexpected Error Consuming Event Client Event client Event Cause Throwable t Log Message level Message value Unable to complete reading event from server s id void unable To Read Event From Server Cause Throwable t Socket Address server Message value Cache listener class s must be annotated with org infinispan client hotrod annotation Client Listener id Incorrect Client Listener Exception missing Client Listener Annotation String class Name Message value Unknown event type s received id Hot Rod Client Exception unknown Event short event Type Id Log Message level Message value Unable to set method s accessible id void unable To Set Accesible Method m Cause Exception e Log Message level Message value Unrecoverable error reading event from server s exiting event reader thread id void unrecoverable Error Reading Event Cause Throwable t Socket Address server Log Message level Message value Unable to read s bytes s id void unable To Unmarshall Bytes Error String element String bytes Cause Exception e Message value When enabling near caching number of max entries must be configured id Cache Configuration Exception near Cache Max Entries Undefined Log Message level Message value Successfully closed remote iterator s id void iteration Closed String iteration Id Message value Invalid iteration id s id Illegal State Exception error Closing Iteration String iteration Id Message value Invalid iteration id s id No Such Element Exception error Retrieving Next String iteration Id Log Message level Message value Switched to cluster s id void switched To Cluster String cluster Name Log Message level Message value Switched back to main cluster id void switched Back To Main Cluster Log Message level Message value Manually switched to cluster s id void manually Switched To Cluster String cluster Name Log Message level Message value Manually switched back to main cluster id void manually Switched Back To Main Cluster Message value Name of the failover cluster needs to be specified id Cache Configuration Exception missing Cluster Name Definition Message value Host needs to be specified in server definition of failover cluster id Cache Configuration Exception missing Host Definition Message value At least one server address needs to be specified for failover cluster s id Cache Configuration Exception missing Cluster Servers Definition String site Name Message value Duplicate failover cluster s has been specified id Cache Configuration Exception duplicate Cluster Definition String site Name Message value The client listener must use raw data when it uses a query as a filter s id Incorrect Client Listener Exception client Listener Must Use Raw Data String class Name Message value The client listener must use the s filter converter factory id Incorrect Client Listener Exception client Listener Must Use Designated Filter Converter Factory String filter Converter Factory Name Log Message level Message value Ignoring error when closing iteration s id void ignoring Error During Iteration Close String iteration Id Cause Exception e Log Message level Message value Started iteration s id void started Iteration String iteration Id Log Message level Message value Transport s obtained for iteration s id void iteration Transport Obtained Transport transport String iteration Id Log Message level Message value Tracking key s belonging to segment d already tracked b id void tracking Segment Key String key int segment boolean is Tracked Log Message level Message value Classpath does not look correct Make sure you are not mixing uber and jars id void warn About Uber Jar Duplicates Log Message level Message value Unable to convert property s to an enum Using default value of d id void unable To Convert String Property To Enum String value String default Value Message value Can not specify both a callback handler and a username for authentication id Cache Configuration Exception callback Handler And Username Mutually Exclusive Message value Class s blocked by Java standard deserialization white list Adjust the client configuration java serialization white list regular expression to include this class id Cache Exception class Not In Whitelist String class Name 
package org infinispan client hotrod logging import org jboss logging Logger Factory that creates link Log instances author Manik Surtani since public class Log Factory public static Log get Log Class clazz return Logger get Message Logger Log class clazz get Name public static get Log Class clazz Class log Class return Logger get Message Logger log Class clazz get Name 
package org infinispan topology import java io Exception import java io Object Input import java io Object Output import java io Serializable import java util Collections import java util Map import java util Set import org infinispan commons marshall Instance Reusing Advanced Externalizer import org infinispan marshall core Ids author Dan Berindei since public class Manager Status Response implements Serializable private final Map String Cache Status Response caches private final boolean rebalancing Enabled public Manager Status Response Map String Cache Status Response caches boolean rebalancing Enabled this rebalancing Enabled rebalancing Enabled this caches caches public Map String Cache Status Response get Caches return caches public boolean is Rebalancing Enabled return rebalancing Enabled Override public String to String return Manager Status Response caches caches rebalancing Enabled rebalancing Enabled public static class Externalizer extends Instance Reusing Advanced Externalizer Manager Status Response Override public void do Write Object Object Output output Manager Status Response cache Status Response throws Exception output write Object cache Status Response caches output write Boolean cache Status Response rebalancing Enabled Override public Manager Status Response do Read Object Object Input unmarshaller throws Exception Class Not Found Exception Map String Cache Status Response caches Map String Cache Status Response unmarshaller read Object boolean rebalancing Enabled unmarshaller read Boolean return new Manager Status Response caches rebalancing Enabled Override public Integer get Id return Ids Override public Set Class extends Manager Status Response get Type Classes return Collections Class extends Manager Status Response singleton Manager Status Response class 
package org infinispan marshall exts import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Hash Map import java util Map import java util Set import java util Tree Map import java util concurrent Concurrent Hash Map import org infinispan commons equivalence Equivalence import org infinispan commons equivalence Equivalent Hash Map import org infinispan commons marshall Abstract Externalizer import org infinispan commons marshall Marshall Util import org infinispan commons util Fast Copy Hash Map import org infinispan commons util Util import org infinispan container versioning Entry Versions Map import org infinispan distribution util Read Only Segment Aware Map import org infinispan marshall core Ids import org jboss marshalling util Identity Int Map Map externalizer for all map implementations except immutable maps and singleton maps i e Fast Copy Hash Map Hash Map Tree Map author Galder Zamarre o since public class Map Externalizer extends Abstract Externalizer Map private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private final Identity Int Map Class numbers new Identity Int Map Class public Map Externalizer numbers put Hash Map class numbers put Read Only Segment Aware Map class numbers put Tree Map class numbers put Fast Copy Hash Map class numbers put Equivalent Hash Map class numbers put Concurrent Hash Map class numbers put Entry Versions Map class numbers put get Private Singleton Map Class numbers put get Private Empty Map Class Override public void write Object Object Output output Map map throws Exception int number numbers get map get Class output write number switch number case case case case Marshall Util marshall Map map output break case Equivalent Hash Map equivalent Map Equivalent Hash Map map output write Object equivalent Map get Key Equivalence output write Object equivalent Map get Value Equivalence Marshall Util marshall Map map output break case copy the map to avoid Concurrent Modification Exception Marshall Util marshall Map Fast Copy Hash Map map clone output break case Map Entry singleton Map Entry map entry Set iterator next output write Object singleton get Key output write Object singleton get Value break default break Override public Map read Object Object Input input throws Exception Class Not Found Exception int magic Number input read Unsigned Byte switch magic Number case return Marshall Util unmarshall Map input Hash Map new case return Marshall Util unmarshall Map input size new Tree Map case return Marshall Util unmarshall Map input Fast Copy Hash Map new case Equivalence Object key Eq Equivalence Object input read Object Equivalence Object value Eq Equivalence Object input read Object return Marshall Util unmarshall Map input size new Equivalent Hash Map key Eq value Eq case return Marshall Util unmarshall Map input Concurrent Hash Map new case return Marshall Util unmarshall Map input Entry Versions Map new case return Collections singleton Map input read Object input read Object case return Collections empty Map default throw new Illegal State Exception Unknown Map type magic Number Override public Integer get Id return Ids Override public Set Class extends Map get Type Classes return Util Class extends Map as Set Hash Map class Tree Map class Fast Copy Hash Map class Equivalent Hash Map class Read Only Segment Aware Map class Concurrent Hash Map class Entry Versions Map class get Private Singleton Map Class get Private Empty Map Class private static Class extends Map get Private Singleton Map Class return get Map Class java util Collections Singleton Map private static Class extends Map get Private Empty Map Class return get Map Class java util Collections Empty Map private static Class extends Map get Map Class String class Name return Util Map load Class class Name Map class get Class Loader 
package org infinispan stream impl intops object import java util function Function import java util stream Stream import org infinispan factories Component Registry import org infinispan stream impl intops Intermediate Operation Performs map to operation on a regular link Stream param the type of the input stream param the type of the output stream public class Map Operation implements Intermediate Operation Stream Stream private final Function super extends function public Map Operation Function super extends function this function function Override public Stream perform Stream stream return stream map function Override public void handle Injection Component Registry registry registry wire Dependencies function public Function super extends get Function return function 
package org infinispan factories import org infinispan commons Cache Exception import org infinispan commons marshall Marshaller import org infinispan commons marshall Streaming Marshaller import org infinispan factories annotations Default Factory For import org infinispan marshall core Global Marshaller Marshaller Factory author Galder Zamarre o since Default Factory For classes Streaming Marshaller class Marshaller class public class Marshaller Factory extends Empty Constructor Factory implements Auto Instantiable Factory Override public construct Class component Type Object comp Marshaller config Marshaller global Configuration serialization marshaller if config Marshaller null comp new Global Marshaller else comp new Global Marshaller config Marshaller try return component Type cast comp catch Exception e throw new Cache Exception Problems casting bootstrap component comp get Class to type component Type e 
package org infinispan configuration cache import org infinispan commons configuration Abstract Typed Properties Configuration import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set import org infinispan commons configuration attributes Identity Attribute Copier import org infinispan eviction Eviction Type Controls the memory storage configuration for the cache author William Burns public class Memory Configuration public static final Attribute Definition Integer Attribute Definition builder address count build public static final Attribute Definition Storage Type Attribute Definition builder storage Storage Type copier Identity Attribute Copier immutable build public static final Attribute Definition Long Attribute Definition builder size build public static final Attribute Definition Eviction Type Attribute Definition builder type Eviction Type build static public Attribute Set attribute Definition Set return new Attribute Set Memory Configuration class Abstract Typed Properties Configuration attribute Set private final Attribute Long size private final Attribute Eviction Type eviction Type private final Attribute Storage Type storage Type private final Attribute Integer address Count private final Attribute Set attributes Memory Configuration Attribute Set attributes this attributes attributes storage Type attributes attribute size attributes attribute eviction Type attributes attribute address Count attributes attribute Storage type to use for the data container return public Storage Type storage Type return storage Type get Size of the eviction if disabled return public long size return size get public void size long new Size size set new Size The configured eviction type return public Eviction Type eviction Type return eviction Type get public boolean is Eviction Enabled return size get The address pointer count return public int address Count return address Count get public Attribute Set attributes return attributes Override public String to String return Memory Configuration attributes attributes 
package org infinispan configuration cache import static org infinispan configuration cache Memory Configuration import static org infinispan configuration cache Memory Configuration import static org infinispan configuration cache Memory Configuration import static org infinispan configuration cache Memory Configuration import org infinispan commons Cache Configuration Exception import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration import org infinispan eviction Eviction Type Controls the data container for the cache author William Burns public class Memory Configuration Builder extends Abstract Configuration Child Builder implements Builder Memory Configuration private Attribute Set attributes Memory Configuration Builder Configuration Builder builder super builder attributes Memory Configuration attribute Definition Set Set the link Storage Type to determine how the data is stored in the data container param storage Type the storage type of the underlying data return this configuration builder public Memory Configuration Builder storage Type Storage Type storage Type attributes attribute set storage Type return this Defines the maximum size before eviction occurs See link eviction Type Eviction Type for more details on the size is interpreted param size public Memory Configuration Builder size long size attributes attribute set size return this Sets the eviction type which can either be ul li entries will be evicted when the number of entries exceeds the link size long li li entries will be evicted when the approximate combined size of all values exceeds the link size long li ul Cache size is guaranteed not to exceed upper limit specified by max entries However due to the nature of eviction it is unlikely to ever be exactly maximum number of entries specified here param type public Memory Configuration Builder eviction Type Eviction Type type attributes attribute set type return this Configuration setting when using off heap that defines how many address pointers there are This number will be rounded up to the next power of two This helps performance in that the more address pointers there are the less collisions there will be which improve performance of both read and write operations param address Count return this public Memory Configuration Builder address Count int address Count attributes attribute set address Count return this Override public void validate Storage Type type attributes attribute get if type Storage Type get Builder compatibility is Enabled throw new Cache Configuration Exception Compatibility mode requires storage type but was type long size attributes attribute get if size Eviction Type eviction Type attributes attribute get if eviction Type Eviction Type type Storage Type throw new Cache Configuration Exception based eviction requires binary but was type Override public void validate Global Configuration global Config Override public Memory Configuration create return new Memory Configuration attributes protect Override public Memory Configuration Builder read Memory Configuration template attributes read template attributes return this Override public String to String return Data Container Configuration Builder attributes attributes 
package org infinispan container entries metadata import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan container entries Abstract Internal Cache Entry import org infinispan container entries Expiry Helper import org infinispan container entries Internal Cache Value import org infinispan marshall core Ids import org infinispan metadata Metadata cache entry that is mortal and is link Metadata Aware author Galder Zamarre o since public class Metadata Mortal Cache Entry extends Abstract Internal Cache Entry implements Metadata Aware protected Object value protected Metadata metadata protected long created public Metadata Mortal Cache Entry Object key Object value Metadata metadata long created super key this value value this metadata metadata this created created Override public Object get Value return value Override public Object set Value Object value return this value value Override public final boolean is Expired long now return Expiry Helper is Expired Mortal metadata lifespan created now Override public final boolean is Expired return is Expired System current Time Millis Override public final boolean can Expire return true Override public final long get Created return created Override public final long get Last Used return Override public final long get Lifespan return metadata lifespan Override public final long get Max Idle return Override public final long get Expiry Time long lifespan metadata lifespan return lifespan created lifespan Override public final void touch no op Override public final void touch long current Time Millis no op Override public final void reincarnate reincarnate System current Time Millis Override public void reincarnate long now this created now Override public Internal Cache Value to Internal Cache Value return new Metadata Mortal Cache Value value metadata created Override public Metadata get Metadata return metadata Override public void set Metadata Metadata metadata this metadata metadata public static class Externalizer extends Abstract Externalizer Metadata Mortal Cache Entry Override public void write Object Object Output output Metadata Mortal Cache Entry ice throws Exception output write Object ice key output write Object ice value output write Object ice metadata Unsigned Numeric write Unsigned Long output ice created Override public Metadata Mortal Cache Entry read Object Object Input input throws Exception Class Not Found Exception Object k input read Object Object v input read Object Metadata metadata Metadata input read Object long created Unsigned Numeric read Unsigned Long input return new Metadata Mortal Cache Entry k v metadata created Override public Integer get Id return Ids Override public Set Class extends Metadata Mortal Cache Entry get Type Classes return Util as Set Metadata Mortal Cache Entry class 
package org infinispan container entries metadata import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan container entries Expiry Helper import org infinispan container entries Immortal Cache Value import org infinispan container entries Internal Cache Entry import org infinispan marshall core Ids import org infinispan metadata Metadata mortal cache value to correspond with link org infinispan container entries metadata Metadata Mortal Cache Entry author Galder Zamarre o since public class Metadata Mortal Cache Value extends Immortal Cache Value implements Metadata Aware Metadata metadata long created public Metadata Mortal Cache Value Object value Metadata metadata long created super value this metadata metadata this created created Override public Internal Cache Entry to Internal Cache Entry Object key return new Metadata Mortal Cache Entry key value metadata created Override public Metadata get Metadata return metadata Override public void set Metadata Metadata metadata this metadata metadata Override public final long get Created return created Override public final long get Lifespan return metadata lifespan Override public boolean is Expired long now return Expiry Helper is Expired Mortal metadata lifespan created now Override public boolean is Expired return is Expired System current Time Millis Override public long get Expiry Time long lifespan metadata lifespan return lifespan created lifespan Override public final boolean can Expire return true public static class Externalizer extends Abstract Externalizer Metadata Mortal Cache Value Override public void write Object Object Output output Metadata Mortal Cache Value mcv throws Exception output write Object mcv value output write Object mcv metadata Unsigned Numeric write Unsigned Long output mcv created Override public Metadata Mortal Cache Value read Object Object Input input throws Exception Class Not Found Exception Object v input read Object Metadata metadata Metadata input read Object long created Unsigned Numeric read Unsigned Long input return new Metadata Mortal Cache Value v metadata created Override public Integer get Id return Ids Override public Set Class extends Metadata Mortal Cache Value get Type Classes return Util Class extends Metadata Mortal Cache Value as Set Metadata Mortal Cache Value class 
package org infinispan container entries metadata import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan container entries Abstract Internal Cache Entry import org infinispan container entries Expiry Helper import org infinispan container entries Internal Cache Value import org infinispan marshall core Ids import org infinispan metadata Metadata cache entry that is transient i e it can be considered expired after a period of not being used and link org infinispan container entries metadata Metadata Aware author Galder Zamarre o since public class Metadata Transient Cache Entry extends Abstract Internal Cache Entry implements Metadata Aware protected Object value protected Metadata metadata protected long last Used public Metadata Transient Cache Entry Object key Object value Metadata metadata long last Used super key this value value this metadata metadata this last Used last Used Override public Object get Value return value Override public Object set Value Object value return this value value Override public final void touch touch System current Time Millis Override public final void touch long current Time Millis last Used current Time Millis Override public final void reincarnate no op Override public void reincarnate long now no op Override public final boolean can Expire return true Override public boolean is Expired long now return Expiry Helper is Expired Transient metadata max Idle last Used now Override public boolean is Expired return is Expired System current Time Millis Override public long get Created return Override public final long get Last Used return last Used Override public long get Lifespan return Override public long get Expiry Time long max Idle metadata max Idle return max Idle last Used max Idle Override public final long get Max Idle return metadata max Idle Override public Internal Cache Value to Internal Cache Value return new Metadata Transient Cache Value value metadata last Used Override public Metadata get Metadata return metadata Override public void set Metadata Metadata metadata this metadata metadata public static class Externalizer extends Abstract Externalizer Metadata Transient Cache Entry Override public void write Object Object Output output Metadata Transient Cache Entry ice throws Exception output write Object ice key output write Object ice value output write Object ice metadata Unsigned Numeric write Unsigned Long output ice last Used Override public Metadata Transient Cache Entry read Object Object Input input throws Exception Class Not Found Exception Object k input read Object Object v input read Object Metadata metadata Metadata input read Object long last Used Unsigned Numeric read Unsigned Long input return new Metadata Transient Cache Entry k v metadata last Used Override public Integer get Id return Ids Override public Set Class extends Metadata Transient Cache Entry get Type Classes return Util as Set Metadata Transient Cache Entry class 
package org infinispan container entries metadata import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan container entries Expiry Helper import org infinispan container entries Immortal Cache Value import org infinispan container entries Internal Cache Entry import org infinispan marshall core Ids import org infinispan metadata Metadata transient cache value to correspond with link org infinispan container entries Transient Cache Entry which is link org infinispan container entries metadata Metadata Aware author Galder Zamarre o since public class Metadata Transient Cache Value extends Immortal Cache Value implements Metadata Aware Metadata metadata long last Used public Metadata Transient Cache Value Object value Metadata metadata long last Used super value this metadata metadata this last Used last Used Override public Internal Cache Entry to Internal Cache Entry Object key return new Metadata Transient Cache Entry key value metadata last Used Override public long get Max Idle return metadata max Idle Override public long get Last Used return last Used Override public final boolean is Expired long now return Expiry Helper is Expired Transient metadata max Idle last Used now Override public final boolean is Expired return is Expired System current Time Millis Override public boolean can Expire return true Override public Metadata get Metadata return metadata Override public void set Metadata Metadata metadata this metadata metadata Override public long get Expiry Time long max Idle metadata max Idle return max Idle last Used max Idle public static class Externalizer extends Abstract Externalizer Metadata Transient Cache Value Override public void write Object Object Output output Metadata Transient Cache Value tcv throws Exception output write Object tcv value output write Object tcv metadata Unsigned Numeric write Unsigned Long output tcv last Used Override public Metadata Transient Cache Value read Object Object Input input throws Exception Class Not Found Exception Object v input read Object Metadata metadata Metadata input read Object long last Used Unsigned Numeric read Unsigned Long input return new Metadata Transient Cache Value v metadata last Used Override public Integer get Id return Ids Override public Set Class extends Metadata Transient Cache Value get Type Classes return Util Class extends Metadata Transient Cache Value as Set Metadata Transient Cache Value class 
package org infinispan container entries metadata import static java lang Math min import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan container entries Abstract Internal Cache Entry import org infinispan container entries Expiry Helper import org infinispan container entries Internal Cache Value import org infinispan marshall core Ids import org infinispan metadata Metadata form of link org infinispan container entries Transient Mortal Cache Entry that is link org infinispan container entries versioned Versioned author Manik Surtani since public class Metadata Transient Mortal Cache Entry extends Abstract Internal Cache Entry implements Metadata Aware Object value Metadata metadata long created long last Used public Metadata Transient Mortal Cache Entry Object key Object value Metadata metadata long now this key value metadata now now public Metadata Transient Mortal Cache Entry Object key Object value Metadata metadata long last Used long created super key this value value this metadata metadata this last Used last Used this created created Override public Object get Value return value Override public long get Lifespan return metadata lifespan Override public final boolean can Expire return true Override public long get Created return created Override public boolean is Expired long now return Expiry Helper is Expired Transient Mortal metadata max Idle last Used metadata lifespan created now Override public boolean is Expired return is Expired System current Time Millis Override public final long get Expiry Time long lifespan metadata lifespan long lset lifespan created lifespan long max Idle metadata max Idle long muet max Idle last Used max Idle if lset return muet if muet return lset return min lset muet Override public Internal Cache Value to Internal Cache Value return new Metadata Transient Mortal Cache Value value metadata created last Used Override public long get Last Used return last Used Override public final void touch last Used System current Time Millis Override public final void touch long current Time Millis last Used current Time Millis Override public final void reincarnate reincarnate System current Time Millis Override public void reincarnate long now created now Override public long get Max Idle return metadata max Idle Override public Object set Value Object value return this value value Override public Metadata get Metadata return metadata Override public void set Metadata Metadata metadata this metadata metadata public static class Externalizer extends Abstract Externalizer Metadata Transient Mortal Cache Entry Override public void write Object Object Output output Metadata Transient Mortal Cache Entry ice throws Exception output write Object ice key output write Object ice value output write Object ice metadata Unsigned Numeric write Unsigned Long output ice created Unsigned Numeric write Unsigned Long output ice last Used Override public Metadata Transient Mortal Cache Entry read Object Object Input input throws Exception Class Not Found Exception Object k input read Object Object v input read Object Metadata metadata Metadata input read Object long created Unsigned Numeric read Unsigned Long input long last Used Unsigned Numeric read Unsigned Long input return new Metadata Transient Mortal Cache Entry k v metadata last Used created Override public Integer get Id return Ids Override public Set Class extends Metadata Transient Mortal Cache Entry get Type Classes return Util as Set Metadata Transient Mortal Cache Entry class 
package org infinispan container entries metadata import static java lang Math min import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan container entries Expiry Helper import org infinispan container entries Internal Cache Entry import org infinispan marshall core Ids import org infinispan metadata Metadata form of link org infinispan container entries Transient Mortal Cache Value that is link org infinispan container entries versioned Versioned author Manik Surtani since public class Metadata Transient Mortal Cache Value extends Metadata Mortal Cache Value implements Metadata Aware long last Used public Metadata Transient Mortal Cache Value Object v Metadata metadata long created long last Used super v metadata created this last Used last Used Override public Internal Cache Entry to Internal Cache Entry Object key return new Metadata Transient Mortal Cache Entry key value metadata last Used created Override public long get Max Idle return metadata max Idle Override public long get Last Used return last Used Override public boolean is Expired long now return Expiry Helper is Expired Transient Mortal metadata max Idle last Used metadata lifespan created now Override public boolean is Expired return is Expired System current Time Millis Override public long get Expiry Time long lifespan metadata lifespan long lset lifespan created lifespan long max Idle metadata max Idle long muet max Idle last Used max Idle if lset return muet if muet return lset return min lset muet public static class Externalizer extends Abstract Externalizer Metadata Transient Mortal Cache Value Override public void write Object Object Output output Metadata Transient Mortal Cache Value value throws Exception output write Object value value output write Object value metadata Unsigned Numeric write Unsigned Long output value created Unsigned Numeric write Unsigned Long output value last Used Override public Metadata Transient Mortal Cache Value read Object Object Input input throws Exception Class Not Found Exception Object v input read Object Metadata metadata Metadata input read Object long created Unsigned Numeric read Unsigned Long input long last Used Unsigned Numeric read Unsigned Long input return new Metadata Transient Mortal Cache Value v metadata created last Used Override public Integer get Id return Ids Override public Set Class extends Metadata Transient Mortal Cache Value get Type Classes return Util Class extends Metadata Transient Mortal Cache Value as Set Metadata Transient Mortal Cache Value class 
package org infinispan remoting import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids import java io Exception import java io Object Input import java io Object Output import java io Serializable import java util Arrays import java util Set Wrapper object for entries that arrive via Tful interface author Michael Neale since public class Cache Entry implements Serializable private static final long serial Version The a href http en wikipedia org wiki Content type a value for example application octet stream Often used in headers public String content Type The payload The actual form of the contents depends on the content Type field Will be String data if the content Type is application json application xml or text public byte data public Cache Entry public Cache Entry String content Type byte data this content Type content Type this data data Override public boolean equals Object o if this o return true if o instanceof Cache Entry return false Cache Entry that Cache Entry o return content Type null content Type equals that content Type that content Type null Arrays equals data that data Override public int hash Code return content Type null content Type hash Code data null Arrays hash Code data public static class Externalizer extends Abstract Externalizer Cache Entry Override public Set Class extends Cache Entry get Type Classes return Util Class extends Cache Entry as Set Cache Entry class Override public void write Object Object Output out Cache Entry obj throws Exception out write obj content Type out write Int obj data length out write obj data Override public Cache Entry read Object Object Input in throws Exception Class Not Found Exception String content Type in read int len in read Int byte data new byte len in read Fully data return new Cache Entry content Type data Override public Integer get Id return Ids 
package org infinispan util import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util Map import java util Properties import org infinispan commands Replicable Command import org infinispan commands module Module Command Extensions import org infinispan commands module Module Command Factory import org infinispan commands module Module Command Initializer import org infinispan commands remote Cache Rpc Command import org infinispan commons util Service Finder import org infinispan factories components Module Metadata File Finder import org infinispan lifecycle Module Lifecycle import org infinispan util logging Log import org infinispan util logging Log Factory The code Module Properties code class represents Infinispan s module service extensions author Vladimir Blagojevic author Sanne Grinovero author Galder Zamarre o since public class Module Properties extends Properties private static final long serial Version private static final Log log Log Factory get Log Module Properties class private Map Byte Module Command Factory command Factories private Map Byte Module Command Initializer command Initializers private Collection Class extends Replicable Command module Commands public static Collection Module Lifecycle resolve Module Lifecycles Class Loader cl return Service Finder load Module Lifecycle class cl Retrieves an Iterable containing metadata file finders declared by each module param cl class loader to use return an Iterable of Module Metadata File Finders public static Iterable Module Metadata File Finder get Module Metadata Files Class Loader cl return Service Finder load Module Metadata File Finder class cl Suppress Warnings unchecked public void load Module Command Handlers Class Loader cl Collection Module Command Extensions module Cmd Ext Loader Service Finder load Module Command Extensions class cl if module Cmd Ext Loader iterator has Next command Factories new Hash Map Byte Module Command Factory command Initializers new Hash Map Byte Module Command Initializer module Commands new Hash Set Class extends Replicable Command for Module Command Extensions extension module Cmd Ext Loader log debugf Loading module command extension class s extension Module Command Factory cmd Factory extension get Module Command Factory Module Command Initializer cmd Initializer extension get Module Command Initializer for Map Entry Byte Class extends Replicable Command command cmd Factory get Module Commands entry Set byte id command get Key if command Factories contains Key id throw new Illegal Argument Exception String format Can not use id d for commands as it is already in use by s id command Factories get id get Class get Name command Factories put id cmd Factory module Commands add command get Value command Initializers put id cmd Initializer else log debugf No module command extensions to load command Initializers Collections empty Map command Factories Collections empty Map public Collection Class extends Replicable Command module Commands return module Commands public Map Byte Module Command Factory module Command Factories return command Factories public Map Byte Module Command Initializer module Command Initializers return command Initializers Suppress Warnings unchecked public Collection Class extends Cache Rpc Command module Cache Rpc Commands Collection Class extends Replicable Command cmds module Commands if cmds null cmds is Empty return Collections empty Set Collection Class extends Cache Rpc Command cache Rpc Cmds new Hash Set Class extends Cache Rpc Command for Class extends Replicable Command module Cmd Class cmds if Cache Rpc Command class is Assignable From module Cmd Class cache Rpc Cmds add Class extends Cache Rpc Command module Cmd Class return cache Rpc Cmds public Collection Class extends Replicable Command module Only Replicable Commands Collection Class extends Replicable Command cmds module Commands if cmds null cmds is Empty return Collections empty Set Collection Class extends Replicable Command replicable Only Cmds new Hash Set Class extends Replicable Command for Class extends Replicable Command module Cmd Class cmds if Cache Rpc Command class is Assignable From module Cmd Class replicable Only Cmds add module Cmd Class return replicable Only Cmds 
package org infinispan container entries import static org infinispan commons util Util to Str import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan metadata Embedded Metadata import org infinispan metadata Metadata cache entry that is mortal e has a lifespan author Manik Surtani since public class Mortal Cache Entry extends Abstract Internal Cache Entry protected Object value protected long lifespan protected long created public Mortal Cache Entry Object key Object value long lifespan long created super key this value value this lifespan lifespan this created created Override public Object get Value return value Override public Object set Value Object value return this value value Override public final boolean is Expired long now return Expiry Helper is Expired Mortal lifespan created now Override public final boolean is Expired return is Expired System current Time Millis Override public final boolean can Expire return true public void set Lifespan long lifespan this lifespan lifespan Override public final long get Created return created Override public final long get Last Used return Override public final long get Lifespan return lifespan Override public final long get Max Idle return Override public final long get Expiry Time return lifespan created lifespan Override public final void touch no op Override public final void touch long current Time Millis no op Override public final void reincarnate reincarnate System current Time Millis Override public void reincarnate long now this created now Override public Internal Cache Value to Internal Cache Value return new Mortal Cache Value value created lifespan Override public Metadata get Metadata return new Embedded Metadata Builder lifespan lifespan build Override public void set Metadata Metadata metadata throw new Illegal State Exception Metadata can not be set on mortal entries They need to be recreated via the entry factory Override public Mortal Cache Entry clone return Mortal Cache Entry super clone public static class Externalizer extends Abstract Externalizer Mortal Cache Entry Override public void write Object Object Output output Mortal Cache Entry mce throws Exception output write Object mce key output write Object mce value Unsigned Numeric write Unsigned Long output mce created output write Long mce lifespan could be negative so should not use unsigned longs Override public Mortal Cache Entry read Object Object Input input throws Exception Class Not Found Exception Object k input read Object Object v input read Object long created Unsigned Numeric read Unsigned Long input Long lifespan input read Long return new Mortal Cache Entry k v lifespan created Override public Integer get Id return Ids Override public Set Class extends Mortal Cache Entry get Type Classes return Util as Set Mortal Cache Entry class Override public String to String return Mortal Cache Entry key to Str key value to Str value 
package org infinispan container entries import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids mortal cache value to correspond with link org infinispan container entries Mortal Cache Entry author Manik Surtani since public class Mortal Cache Value extends Immortal Cache Value protected long created protected long lifespan public Mortal Cache Value Object value long created long lifespan super value this created created this lifespan lifespan Override public final long get Created return created public final void set Created long created this created created Override public final long get Lifespan return lifespan public final void set Lifespan long lifespan this lifespan lifespan Override public boolean is Expired long now return Expiry Helper is Expired Mortal lifespan created now Override public boolean is Expired return is Expired System current Time Millis Override public final boolean can Expire return true Override public Internal Cache Entry to Internal Cache Entry Object key return new Mortal Cache Entry key value lifespan created Override public long get Expiry Time return lifespan created lifespan Override public boolean equals Object o if this o return true if o instanceof Mortal Cache Value return false if super equals o return false Mortal Cache Value that Mortal Cache Value o if created that created return false if lifespan that lifespan return false return true Override public int hash Code int result super hash Code result result int created created result result int lifespan lifespan return result Override public String to String return Mortal Cache Value value value lifespan lifespan created created Override public Mortal Cache Value clone return Mortal Cache Value super clone public static class Externalizer extends Abstract Externalizer Mortal Cache Value Override public void write Object Object Output output Mortal Cache Value mcv throws Exception output write Object mcv value Unsigned Numeric write Unsigned Long output mcv created output write Long mcv lifespan could be negative so should not use unsigned longs Override public Mortal Cache Value read Object Object Input input throws Exception Class Not Found Exception Object v input read Object long created Unsigned Numeric read Unsigned Long input Long lifespan input read Long return new Mortal Cache Value v created lifespan Override public Integer get Id return Ids Override public Set Class extends Mortal Cache Value get Type Classes return Util Class extends Mortal Cache Value as Set Mortal Cache Value class 
package org infinispan commons hash import java io Object Input import java util Collections import java util Set import org infinispan commons marshall Ids import org infinispan commons marshall Wrapped Byte Array import org infinispan commons marshall exts No State Externalizer import net jcip annotations Immutable import net jcip annotations Thread Safe Murmur Hash implementation in Java based on Austin Appleby s a href https code google com p smhasher source browse trunk Murmur Hash cpp original in a Only implementing x version because this should always be faster on bit native processors even bit being ran with a bit this should also be as fast or faster than the x version on some modern bit processors author Patrick Mc Farland see a href http sites google com site murmurhash Murmur Hash website a see a href http en wikipedia org wiki Murmur Hash Murmur Hash entry on Wikipedia a since Thread Safe Immutable public class Murmur Hash implements Hash private final static Murmur Hash instance new Murmur Hash public static final byte byte public static Murmur Hash get Instance return instance private Murmur Hash static class State long h long h long k long k long c long c static long getblock byte key int i return key i x key i x key i x key i x key i x key i x key i x key i x static void bmix State state state k state c state k state k state k state k state c state h state k state h state h state h state h state h state k state c state k state k state k state k state c state h state k state h state h state h state h x dce state h state h x ab state c state c x b d c state c state c x bce static long fmix long k k k k xff afd ed ccd k k k xc ceb fe a ec k k return k Hash a value using the x bit variant of Murmur Hash param key value to hash param seed random value return bit hashed key in an array containing two longs public static long Murmur Hash x final byte key final int seed State state new State state h x e c f af seed state h x dcd f cd fd seed state c x c b d state c x cf ad f for int i i key length i state k getblock key i state k getblock key i bmix state state k state k int tail key length switch key length case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k key tail bmix state state h key length state h state h state h state h state h fmix state h state h fmix state h state h state h state h state h return new long state h state h Hash a value using the x bit variant of Murmur Hash param key value to hash param seed random value return bit hashed key public static long Murmur Hash x final byte key final int seed Exactly the same as Murmur Hash x except it only returns state h State state new State state h x e c f af seed state h x dcd f cd fd seed state c x c b d state c x cf ad f for int i i key length i state k getblock key i state k getblock key i bmix state state k state k int tail key length switch key length case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k key tail bmix state state h key length state h state h state h state h state h fmix state h state h fmix state h state h state h state h state h return state h Hash a value using the x bit variant of Murmur Hash param key value to hash param seed random value return bit hashed key public static int Murmur Hash x final byte key final int seed return int Murmur Hash x key seed Hash a value using the x bit variant of Murmur Hash param key value to hash param seed random value return bit hashed key in an array containing two longs public static long Murmur Hash x final long key final int seed State state new State state h x e c f af seed state h x dcd f cd fd seed state c x c b d state c x cf ad f for int i i key length i state k key i state k key i bmix state long tail key key length Key length is odd if key length state k tail bmix state state h key length state h state h state h state h state h fmix state h state h fmix state h state h state h state h state h return new long state h state h Hash a value using the x bit variant of Murmur Hash param key value to hash param seed random value return bit hashed key public static long Murmur Hash x final long key final int seed Exactly the same as Murmur Hash x except it only returns state h State state new State state h x e c f af seed state h x dcd f cd fd seed state c x c b d state c x cf ad f for int i i key length i state k key i state k key i bmix state long tail key key length if key length state k tail bmix state state h key length state h state h state h state h state h fmix state h state h fmix state h state h state h state h state h return state h Hash a value using the x bit variant of Murmur Hash param key value to hash param seed random value return bit hashed key public static int Murmur Hash x final long key final int seed return int Murmur Hash x key seed Override public int hash byte payload return Murmur Hash x payload Hashes a byte array efficiently param payload a byte array to hash return a hash code for the byte array public static int hash long payload return Murmur Hash x payload Override public int hash int hashcode Obtained by inlining Murmur Hash x byte and removing all the unused code since we know the input is always bytes and we only need bytes of output byte b byte hashcode byte b byte hashcode byte b byte hashcode byte b byte hashcode State state new State state h x e c f af state h x dcd f cd fd state c x c b d state c x cf ad f state k state k state k long b state k long b state k long b state k b bmix state state h state h state h state h state h state h fmix state h state h fmix state h state h state h state h state h return int state h Override public int hash Object o if o instanceof byte return hash byte o else if o instanceof Wrapped Byte Array return hash Wrapped Byte Array o get Bytes else if o instanceof long return hash long o else if o instanceof String return hash String String o else return hash o hash Code private int hash String String s return int Murmur Hash x String s private long Murmur Hash x String String s long seed Exactly the same as Murmur Hash x except it works directly on a String s chars Murmur Hash State state new Murmur Hash State state h x e c f af seed state h x dcd f cd fd seed state c x c b d state c x cf ad f int byte Len int string Len s length for int i i string Len i char c s char At i int cp if Character is Surrogate c cp c else if Character is High Surrogate c if i string Len char c s char At i if Character is Low Surrogate c i cp Character to Code Point c c else cp else cp else cp if cp x f add Byte state byte cp byte Len else if cp x ff byte b byte xc x f cp byte b byte x x f cp add Byte state b byte Len add Byte state b byte Len else if cp xffff byte b byte xe x f cp byte b byte x x f cp byte b byte x x f cp add Byte state b byte Len add Byte state b byte Len add Byte state b byte Len else byte b byte xf x cp byte b byte x x f cp byte b byte x x f cp byte b byte x x f cp add Byte state b byte Len add Byte state b byte Len add Byte state b byte Len add Byte state b byte Len long saved state k long saved state k state k state k switch byte Len case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k byte saved bmix state state h byte Len state h state h state h state h state h fmix state h state h fmix state h state h state h state h state h return state h private void add Byte State state byte b int len int shift len x long bb b xff shift if len x state k bb else state k bb if len xf xf bmix state state k state k Override public boolean equals Object other return other null other get Class get Class Override public int hash Code return Override public String to String return Murmur Hash public static class Externalizer extends No State Externalizer Murmur Hash Override public Set Class extends Murmur Hash get Type Classes return Collections singleton Murmur Hash class Override public Murmur Hash read Object Object Input input return instance Override public Integer get Id return Ids 
package org infinispan factories import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names get Default Thread Prio import static org infinispan factories Known Component Names shortened import java util concurrent Executor import java util concurrent Executor Service import java util concurrent Scheduled Executor Service import java util concurrent Thread Factory import org infinispan commons Cache Configuration Exception import org infinispan commons executors Blocking Thread Pool Executor Factory import org infinispan commons executors Scheduled Thread Pool Executor Factory import org infinispan commons executors Thread Pool Executor Factory import org infinispan configuration global Global Configuration import org infinispan configuration global Thread Pool Configuration import org infinispan executors Lazy Initializing Blocking Task Aware Executor Service import org infinispan executors Lazy Initializing Executor Service import org infinispan executors Lazy Initializing Scheduled Executor Service import org infinispan factories annotations Default Factory For import org infinispan factories annotations Stop import org infinispan factories threads Default Thread Factory import org infinispan util concurrent Blocking Task Aware Executor Service factory that specifically knows how to create named executors author Manik Surtani author Pedro Ruivo since Default Factory For classes Executor Service class Executor class Scheduled Executor Service class Blocking Task Aware Executor Service class public class Named Executors Factory extends Named Component Factory implements Auto Instantiable Factory private Executor Service notification Executor private Executor Service async Transport Executor private Executor Service persistence Executor private Blocking Task Aware Executor Service remote Commands Executor private Scheduled Executor Service expiration Executor private Executor Service state Transfer Executor private Executor Service async Operations Executor private Scheduled Executor Service timeout Executor Override Suppress Warnings unchecked public construct Class component Type String component Name try Construction happens only on startup of either Cache Manager or Cache so using synchronized protection does not have a great impact on app performance if component Name equals synchronized this if notification Executor null notification Executor create Executor Service global Configuration listener Thread Pool Executor Service Type return notification Executor else if component Name equals synchronized this if persistence Executor null persistence Executor create Executor Service global Configuration persistence Thread Pool Executor Service Type return persistence Executor else if component Name equals synchronized this if async Transport Executor null async Transport Executor create Executor Service global Configuration transport transport Thread Pool Executor Service Type return async Transport Executor else if component Name equals synchronized this if expiration Executor null expiration Executor create Executor Service global Configuration expiration Thread Pool Executor Service Type return expiration Executor else if component Name equals synchronized this if remote Commands Executor null remote Commands Executor create Executor Service global Configuration transport remote Command Thread Pool Executor Service Type return remote Commands Executor else if component Name equals synchronized this if state Transfer Executor null state Transfer Executor create Executor Service global Configuration state Transfer Thread Pool Executor Service Type return state Transfer Executor else if component Name equals synchronized this if async Operations Executor null async Operations Executor create Executor Service global Configuration async Thread Pool Executor Service Type return async Operations Executor else if component Name ends With synchronized this if timeout Executor null timeout Executor create Executor Service null Executor Service Type return timeout Executor else throw new Cache Configuration Exception Unknown named executor component Name catch Cache Configuration Exception ce throw ce catch Exception e throw new Cache Configuration Exception Unable to instantiate Executor Factory for named component component Name e Stop priority public void stop if remote Commands Executor null remote Commands Executor shutdown Now if notification Executor null notification Executor shutdown Now if persistence Executor null persistence Executor shutdown Now if async Transport Executor null async Transport Executor shutdown Now if expiration Executor null expiration Executor shutdown Now if state Transfer Executor null state Transfer Executor shutdown Now if timeout Executor null timeout Executor shutdown Now if async Operations Executor null async Operations Executor shutdown Now Suppress Warnings unchecked private extends Executor Service create Executor Service Thread Pool Configuration thread Pool Configuration String component Name Executor Service Type type Thread Factory thread Factory Thread Pool Executor Factory executor Factory if thread Pool Configuration null thread Factory thread Pool Configuration thread Factory null thread Pool Configuration thread Factory create Thread Factory With Defaults global Configuration component Name executor Factory thread Pool Configuration thread Pool Factory null thread Pool Configuration thread Pool Factory create Thread Pool Factory With Defaults component Name type else thread Factory create Thread Factory With Defaults global Configuration component Name executor Factory create Thread Pool Factory With Defaults component Name type switch type case return new Lazy Initializing Scheduled Executor Service executor Factory thread Factory case final String controller Name Controller shortened component Name global Configuration transport node Name return new Lazy Initializing Blocking Task Aware Executor Service executor Factory thread Factory global Component Registry get Time Service controller Name default return new Lazy Initializing Executor Service executor Factory thread Factory private Thread Factory create Thread Factory With Defaults Global Configuration global Cfg final String component Name Use defaults return new Default Thread Factory null get Default Thread Prio component Name Default Thread Factory global Cfg transport node Name shortened component Name private Thread Pool Executor Factory create Thread Pool Factory With Defaults final String component Name Executor Service Type type switch type case return Scheduled Thread Pool Executor Factory create default int default Queue Size Known Component Names get Default Queue Size component Name int default Max Threads Known Component Names get Default Threads component Name return Blocking Thread Pool Executor Factory create default Max Threads default Queue Size private enum Executor Service Type 
package org infinispan interceptors locking import java util Collection import java util function Predicate import org infinispan Invalid Cache Usage Exception import org infinispan commands Data Command import org infinispan commands Flag Affected Command import org infinispan commands write Data Write Command import org infinispan context Invocation Context import org infinispan util logging Log import org infinispan util logging Log Factory Locking interceptor to be used for non transactional caches author Mircea Markus public class Non Transactional Locking Interceptor extends Abstract Locking Interceptor private static final Log log Log Factory get Log Non Transactional Locking Interceptor class private final Predicate Object should Lock Key this should Lock Key Override protected Log get Log return log Override protected final Object visit Data Read Command Invocation Context ctx Data Command command throws Throwable assert Non Transactional ctx return invoke Next ctx command Override protected Object visit Data Write Command Invocation Context ctx Data Write Command command throws Throwable assert Non Transactional ctx return visit Non Tx Data Write Command ctx command Override protected Object handle Read Many Command Invocation Context ctx Flag Affected Command command Collection keys assert Non Transactional ctx return invoke Next ctx command Override protected Object handle Write Many Command Invocation Context ctx Flag Affected Command command Collection keys boolean forwarded throws Throwable assert Non Transactional ctx if forwarded has Skip Locking command return invoke Next ctx command try lock All And Record ctx keys stream filter should Lock Key get Lock Timeout Millis command catch Throwable t lock Manager unlock All ctx throw t return invoke Next And Finally ctx command unlock All Return Handler private void assert Non Transactional Invocation Context ctx this only happens if the cache is used in a transaction s scope if ctx is In Tx Scope throw new Invalid Cache Usage Exception This is a non transactional cache and can not be accessed with a transactional Invocation Context 
package org infinispan interceptors distribution import java util Array List import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Map Entry import java util Set import java util concurrent Completable Future import java util function Bi Consumer import org infinispan commands functional Read Write Key Command import org infinispan commands functional Read Write Key Value Command import org infinispan commands functional Read Write Many Command import org infinispan commands functional Read Write Many Entries Command import org infinispan commands functional Write Only Key Command import org infinispan commands functional Write Only Key Value Command import org infinispan commands functional Write Only Many Command import org infinispan commands functional Write Only Many Entries Command import org infinispan commands read Get Cache Entry Command import org infinispan commands write Compute Command import org infinispan commands write Compute If Absent Command import org infinispan commands write Put Key Value Command import org infinispan commands write Put Map Command import org infinispan commands write Remove Command import org infinispan commands write Replace Command import org infinispan commands write Write Command import org infinispan container entries Cache Entry import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan distribution Localized Cache Topology import org infinispan distribution ch Consistent Hash import org infinispan interceptors Invocation Finally Action import org infinispan interceptors Invocation Success Function import org infinispan remoting responses Successful Response import org infinispan remoting transport Address import org infinispan statetransfer Outdated Topology Exception import org infinispan util concurrent Completable Futures import org infinispan util logging Log import org infinispan util logging Log Factory Non transactional interceptor used by distributed caches that support concurrent writes It is implemented based on lock forwarding g k is written on node owners k forwards the given command to acquires a lock on k then it forwards it to the remaining owners applies the change and returns to no lock acquisition is needed applies the result as well releases the lock and returns the result of the operation to p Note that even though this introduces an additional the forwarding it behaves very well in conjunction with consistent hash aware hotrod clients which connect directly to the lock owner author Mircea Markus author Dan Berindei since public class Non Tx Distribution Interceptor extends Base Distribution Interceptor private static Log log Log Factory get Log Non Tx Distribution Interceptor class private static final boolean trace log is Trace Enabled private final Put Map Helper put Map Helper new Put Map Helper this create Remote Callback private final Read Write Many Helper read Write Many Helper new Read Write Many Helper this create Remote Callback private final Read Write Many Entries Helper read Write Many Entries Helper new Read Write Many Entries Helper this create Remote Callback private final Write Only Many Entries Helper write Only Many Entries Helper new Write Only Many Entries Helper this create Remote Callback private final Write Only Many Helper write Only Many Helper new Write Only Many Helper this create Remote Callback private Map Address Set Integer primary Owners Of Segments Consistent Hash ch Map Address Set Integer map new Hash Map ch get Members size for int segment segment ch get Num Segments segment Address owner ch locate Primary Owner For Segment segment map compute If Absent owner o new Hash Set add segment return map we re assuming that this function is ran on primary owner of given segments private Map Address Set Integer backup Owners Of Segments Consistent Hash ch Set Integer segments Map Address Set Integer map new Hash Map ch get Members size if ch is Replicated for Address member ch get Members map put member segments map remove rpc Manager get Address else for Integer segment segments List Address owners ch locate Owners For Segment segment for int i i owners size i map compute If Absent owners get i o new Hash Set add segment return map Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Compute If Absent Command Invocation Context ctx Compute If Absent Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable return handle Read Write Many Command ctx command put Map Helper Override public Object visit Write Only Many Entries Command Invocation Context ctx Write Only Many Entries Command command throws Throwable return handle Write Only Many Command ctx command write Only Many Entries Helper Override public Object visit Write Only Many Command Invocation Context ctx Write Only Many Command command throws Throwable return handle Write Only Many Command ctx command write Only Many Helper Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable return handle Read Write Many Command ctx command read Write Many Helper Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable return handle Read Write Many Command ctx command read Write Many Entries Helper private extends Write Command Container Item Object handle Write Only Many Command Invocation Context ctx command Write Many Command Helper Container Item helper throws Exception due to possible repeating of the operation after Outdated Topology Exception is thrown it is possible that the function will be applied multiple times on some of the nodes There is no general solution for this proper solution will probably record Command Invocation Id in the entry and implement some housekeeping Localized Cache Topology cache Topology check Topology Id command Consistent Hash ch cache Topology get Write Consistent Hash if ctx is Origin Local Map Address Set Integer segment Map primary Owners Of Segments ch Count Down Completable Future all Future new Count Down Completable Future segment Map size Go through all members for this node invoke Next if this node is an owner of some keys for the others that own some keys issue a remote call Everything is finished when all Future is completed for Entry Address Set Integer pair segment Map entry Set Address member pair get Key Set Integer segments pair get Value handle Segments For Write Only Many Command ctx command helper ch all Future member segments return async Value all Future else origin is not local check that we have all the data we need return handle Remote Write Only Many Command ctx command helper private extends Write Command Container Item void handle Segments For Write Only Many Command Invocation Context ctx command Write Many Command Helper Container Item helper Consistent Hash ch Count Down Completable Future all Future Address member Set Integer segments if member equals rpc Manager get Address Container my Items filter And Wrap ctx command segments helper local Command helper copy For Local command my Items Local keys are backed up in the handler and counters on all Future are decremented when the backup calls complete invoke Next And Finally ctx local Command create Local Invocation Handler ch all Future segments helper f rv return copy helper copy For Primary command ch segments int size helper get Items copy size if size all Future count Down return rpc Manager invoke Remotely Async Collections singleton List member copy default Sync Options when Complete response Map throwable if throwable null all Future complete Exceptionally throwable else if get Successful Response Or Fail response Map all Future rsp all Future complete Exceptionally Outdated Topology Exception null return all Future count Down private extends Write Command Item Object handle Remote Write Only Many Command Invocation Context ctx command Write Many Command Helper Item helper for Item item helper get Items command Object key helper item key item if ctx lookup Entry key null entry Factory wrap External Entry ctx key null false true if helper should Register Remote Callback command return invoke Next Then Apply ctx command helper remote Callback else return invoke Next ctx command private extends Write Command Container Item Container filter And Wrap Invocation Context ctx command Set Integer segments Write Many Command Helper Container Item helper Filter command keys entries into the collection and wrap null for those that are not in context yet Container my Items helper new Container for Item item helper get Items command Object key helper item key item if segments contains key Partitioner get Segment key helper accumulate my Items item Cache Entry entry ctx lookup Entry key if entry null executed only be write only commands entry Factory wrap External Entry ctx key null false true return my Items private extends Write Command Container Item Object handle Read Write Many Command Invocation Context ctx command Write Many Command Helper Item Container helper throws Exception due to possible repeating of the operation after Outdated Topology Exception is thrown it is possible that the function will be applied multiple times on some of the nodes There is no general solution for this proper solution will probably record Command Invocation Id in the entry and implement some housekeeping Consistent Hash ch check Topology Id command get Write Consistent Hash if ctx is Origin Local Map Address Set Integer segment Map primary Owners Of Segments ch Object results null if command has Any Flag Flag Bit Sets results new Object helper get Items command size Merging Completable Future Object all Future new Merging Completable Future segment Map size results helper transform Result Mutable Int offset new Mutable Int Go through all members for this node invoke Next if this node is an owner of some keys for the others that own some keys issue a remote call Everything is finished when all Future is completed for Entry Address Set Integer pair segment Map entry Set Address member pair get Key Set Integer segments pair get Value if member equals rpc Manager get Address handle Local Segments For Read Write Many Command ctx command helper ch all Future offset segments else handle Remote Segments For Read Write Many Command command helper ch all Future offset member segments return async Value all Future else origin is not local return handle Remote Read Write Many Command ctx command helper private extends Write Command Container Item void handle Local Segments For Read Write Many Command Invocation Context ctx command Write Many Command Helper Container Item helper Consistent Hash ch Merging Completable Future Object all Future Mutable Int offset Set Integer segments throws Exception Container my Items helper new Container List Completable Future retrievals null Filter command keys entries into the collection and record remote retrieval for those that are not in the context yet for Item item helper get Items command Object key helper item key item if segments contains key Partitioner get Segment key helper accumulate my Items item retrievals add Remote Get ctx command retrievals key int size helper container Size my Items if size all Future count Down return final int my Offset offset value offset value size local Command helper copy For Local command my Items Invocation Finally Action handler create Local Invocation Handler ch all Future segments helper Merging Completable Future move List Items To Future my Offset if retrievals null invoke Next And Finally ctx local Command handler else We must wait until all retrievals finish before proceeding with the local command Completable Future ra retrievals to Array new Completable Future retrievals size Object result async Invoke Next ctx command Completable Future all Of ra make Stage result and Finally ctx command handler Local keys are backed up in the handler and counters on all Future are decremented when the backup calls complete private extends Write Command Item void handle Remote Segments For Read Write Many Command command Write Many Command Helper Item helper Consistent Hash ch Merging Completable Future Object all Future Mutable Int offset Address member Set Integer segments final int my Offset offset value here we iterate through all entries is the Read Only Segment Aware Map really worth it copy helper copy For Primary command ch segments int size helper get Items copy size offset value size if size all Future count Down return Send the command to primary owner rpc Manager invoke Remotely Async Collections singleton List member copy default Sync Options when Complete responses throwable if throwable null all Future complete Exceptionally throwable else Successful Response response get Successful Response Or Fail responses all Future rsp all Future complete Exceptionally Outdated Topology Exception if response null return Object response Value response get Response Value Merging Completable Future move List Items To Future response Value all Future my Offset all Future count Down private extends Write Command Item Object handle Remote Read Write Many Command Invocation Context ctx command Write Many Command Helper Item helper throws Exception List Completable Future retrievals null check that we have all the data we need for Item item helper get Items command retrievals add Remote Get ctx command retrievals helper item key item Completable Future Void delay if retrievals null Completable Future ra retrievals to Array new Completable Future retrievals size delay Completable Future all Of ra else delay Completable Futures completed Null Object result async Invoke Next ctx command delay if helper should Register Remote Callback command return make Stage result then Apply ctx command helper remote Callback else return result private List Completable Future add Remote Get Invocation Context ctx Write Command command List Completable Future retrievals Object key throws Exception Cache Entry cache Entry ctx lookup Entry key if cache Entry null this should be a rare situation so we do n t mind being a bit ineffective with the remote gets if command has Any Flag Flag Bit Sets command has Any Flag Flag Bit Sets entry Factory wrap External Entry ctx key null false true else if retrievals null retrievals new Array List Get Cache Entry Command fake Get Command cf build Get Cache Entry Command key command get Flags Bit Set Completable Future get Future remote Get ctx fake Get Command fake Get Command get Key true retrievals add get Future return retrievals private extends Write Command extends Count Down Completable Future Item Invocation Finally Action create Local Invocation Handler Consistent Hash ch all Future Set Integer segments Write Many Command Helper Item helper Bi Consumer Object return Value Consumer return r Ctx r Command rv throwable if throwable null all Future complete Exceptionally throwable else try return Value Consumer accept all Future rv Map Address Set Integer backup Owners backup Owners Of Segments ch segments for Entry Address Set Integer backup backup Owners entry Set r Command is the original command backup Copy helper copy For Backup r Command ch backup get Value if helper get Items backup Copy is Empty continue Set Address backup Owner Collections singleton backup get Key if is Synchronous backup Copy all Future increment rpc Manager invoke Remotely Async backup Owner backup Copy default Sync Options when Complete response Map remote Throwable if remote Throwable null all Future complete Exceptionally remote Throwable else all Future count Down else rpc Manager invoke Remotely Async backup Owner backup Copy default Async Options all Future count Down catch Throwable t all Future complete Exceptionally t Override public Object visit Write Only Key Value Command Invocation Context ctx Write Only Key Value Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Write Only Key Command Invocation Context ctx Write Only Key Command command throws Throwable return handle Non Tx Write Command ctx command private final static class Mutable Int public int value private extends Write Command Object write Many Remote Callback Write Many Command Helper helper Invocation Context ctx command Object rv Consistent Hash ch check Topology Id command get Write Consistent Hash We have already checked that the command topology is actual so we can assume that we really are primary owner Map Address Set Integer backups backup Owners Of Segments ch ch get Primary Segments For Owner rpc Manager get Address if backups is Empty return rv boolean is Sync is Synchronous command Completable Future futures is Sync new Completable Future backups size null int future for Entry Address Set Integer backup backups entry Set copy helper copy For Backup command ch backup get Value if is Sync futures future rpc Manager invoke Remotely Async Collections singleton backup get Key copy default Sync Options else rpc Manager invoke Remotely Async Collections singleton backup get Key copy default Async Options return is Sync async Value Completable Future all Of futures then Apply nil rv rv private extends Write Command Invocation Success Function create Remote Callback Write Many Command Helper helper return ctx command rv write Many Remote Callback helper ctx command rv 
package org infinispan context impl import java util Collections import java util Map import java util Set import org infinispan commons util Collection Factory import org infinispan container entries Cache Entry import org infinispan remoting transport Address Context to be used for non transactional calls both remote and local author Mircea Markus jboss com since public class Non Tx Invocation Context extends Abstract Invocation Context private static final int private final Map Object Cache Entry looked Up Entries private Set Object locked Keys private Object lock Owner public Non Tx Invocation Context int num Entries Address origin super origin looked Up Entries Collection Factory make Map Collection Factory compute Capacity num Entries public Non Tx Invocation Context Address origin super origin looked Up Entries Collection Factory make Map Override public Cache Entry lookup Entry Object k return looked Up Entries get k Override public void remove Looked Up Entry Object key looked Up Entries remove key Override public void put Looked Up Entry Object key Cache Entry e looked Up Entries put key e Override Suppress Warnings unchecked public Map Object Cache Entry get Looked Up Entries return Map Object Cache Entry looked Up Entries null Collections empty Map looked Up Entries Override public boolean is In Tx Scope return false Override public Object get Lock Owner return lock Owner Override public void set Lock Owner Object lock Owner this lock Owner lock Owner Override public Non Tx Invocation Context clone Non Tx Invocation Context dolly Non Tx Invocation Context super clone dolly looked Up Entries put All looked Up Entries return dolly Override public void add Locked Key Object key if locked Keys null locked Keys Collection Factory make Set locked Keys add key Override public Set Object get Locked Keys return locked Keys null Collections empty Set locked Keys Override public void clear Locked Keys locked Keys null 
package org infinispan commons marshall exts import java io Exception import java io Object Output import org infinispan commons marshall Abstract Externalizer An externalizer that writes no state It simply marshalls class information author Galder Zamarre o since public abstract class No State Externalizer extends Abstract Externalizer Override public void write Object Object Output output object throws Exception The instance has no state so no op 
package org infinispan container offheap import java io Exception import org infinispan commons Cache Exception import org infinispan commons marshall Marshaller import org infinispan commons marshall Wrapped Byte Array import org infinispan commons marshall Wrapped Bytes import org infinispan configuration cache Configuration import org infinispan container Internal Entry Factory import org infinispan container entries Internal Cache Entry import org infinispan container versioning Entry Version import org infinispan factories annotations Inject import org infinispan metadata Embedded Metadata import org infinispan metadata Metadata import org infinispan util Time Service Factory that can create Cache Entry instances from off heap memory author wburns since public class Off Heap Entry Factory Impl implements Off Heap Entry Factory private static final Off Heap Memory Off Heap Memory private static final byte new byte private Marshaller marshaller private Off Heap Memory Allocator allocator private Time Service time Service private Internal Entry Factory internal Entry Factory private boolean eviction Enabled If custom than we just store the metadata as is no other bits should be used private static final byte Version can be set with any combination of the following types private static final byte Only one of the following should ever be set private static final byte private static final byte private static final byte private static final byte is composed of hash Code int key Length int metadata Length int value Length int type byte private static final int Inject public void inject Marshaller marshaller Off Heap Memory Allocator allocator Time Service time Service Internal Entry Factory internal Entry Factory Configuration configuration this marshaller marshaller this allocator allocator this time Service time Service this internal Entry Factory internal Entry Factory this eviction Enabled configuration memory is Eviction Enabled Create an entry off heap The first bytes will always be reserved for a future reference to another entry param key the key to use param value the value to use param metadata the metadata to use return the address of the entry created off heap Override public long create Wrapped Bytes key Wrapped Bytes value Metadata metadata byte type byte metadata Bytes if metadata instanceof Embedded Metadata Entry Version version metadata version byte version Bytes if version null type try version Bytes marshaller object To Byte Buffer version catch Exception Interrupted Exception e throw new Cache Exception e else type version Bytes long lifespan metadata lifespan long max Idle metadata max Idle if lifespan max Idle type metadata Bytes version Bytes else if lifespan max Idle type metadata Bytes new byte version Bytes length Bits put Long metadata Bytes lifespan Bits put Long metadata Bytes time Service wall Clock Time System arraycopy version Bytes metadata Bytes version Bytes length else if lifespan max Idle type metadata Bytes new byte version Bytes length Bits put Long metadata Bytes max Idle Bits put Long metadata Bytes time Service wall Clock Time System arraycopy version Bytes metadata Bytes version Bytes length else type metadata Bytes new byte version Bytes length Bits put Long metadata Bytes max Idle Bits put Long metadata Bytes lifespan long time time Service wall Clock Time Bits put Long metadata Bytes time Bits put Long metadata Bytes time System arraycopy version Bytes metadata Bytes version Bytes length else type try metadata Bytes marshaller object To Byte Buffer metadata catch Exception Interrupted Exception e throw new Cache Exception e int key Size key get Length int metadata Size metadata Bytes length int value Size value get Length Eviction requires an additional memory pointer at the beginning that points to its linked node int header Offset eviction Enabled long total Size header Offset key Size metadata Size value Size long memory Address allocator allocate total Size header Offset int offset eviction Enabled Write the empty linked address pointer first put Long memory Address offset offset put Int memory Address offset key hash Code offset put Int memory Address offset key get Length offset put Int memory Address offset metadata Bytes length offset put Int memory Address offset value get Length offset put Byte memory Address offset type offset put Bytes key get Bytes key back Array Offset memory Address offset key Size offset key Size put Bytes metadata Bytes memory Address offset metadata Size offset metadata Size put Bytes value get Bytes value back Array Offset memory Address offset value Size offset value Size assert offset total Size return memory Address Override public long get Size long entry Address int header Offset eviction Enabled int key Length get Int entry Address header Offset int metadata Length get Int entry Address header Offset int value Length get Int entry Address header Offset return header Offset key Length metadata Length value Length Override public long get Next long entry Address return get Long entry Address eviction Enabled Override public void set Next long entry Address long value put Long entry Address eviction Enabled value Override public long get Lru Node long entry Address return get Long entry Address Override public void set Lru Node long entry Address long value put Long entry Address value Override public int get Hash Code long entry Address bytes for eviction if needed optional bytes for linked pointer int header Offset eviction Enabled return get Int entry Address header Offset Assumes the address does n t contain the linked pointer at the beginning param address the address to read the entry from return the entry at the memory location Override public Internal Cache Entry Wrapped Bytes Wrapped Bytes from Memory long address int header Offset eviction Enabled int offset header Offset int hash Code get Int address offset offset byte key Bytes new byte get Int address offset offset byte metadata Bytes new byte get Int address offset offset byte value Bytes new byte get Int address offset offset byte metadata Type get Byte address offset offset get Bytes address offset key Bytes key Bytes length offset key Bytes length get Bytes address offset metadata Bytes metadata Bytes length offset metadata Bytes length get Bytes address offset value Bytes value Bytes length offset value Bytes length Metadata metadata This is a custom metadata if metadata Type try metadata Metadata marshaller object From Byte Buffer metadata Bytes catch Exception Class Not Found Exception e throw new Cache Exception e return internal Entry Factory create new Wrapped Byte Array key Bytes new Wrapped Byte Array value Bytes metadata else long lifespan long max Idle long created long last Used offset boolean has Version metadata Type Ignore and to find type switch metadata Type x case lifespan max Idle created last Used break case max Idle lifespan Bits get Long metadata Bytes offset created Bits get Long metadata Bytes offset last Used break case lifespan max Idle Bits get Long metadata Bytes offset created last Used Bits get Long metadata Bytes offset break case lifespan Bits get Long metadata Bytes offset max Idle Bits get Long metadata Bytes offset created Bits get Long metadata Bytes offset last Used Bits get Long metadata Bytes offset break default throw new Illegal Argument Exception Unsupported type metadata Type if has Version try Entry Version version Entry Version marshaller object From Byte Buffer metadata Bytes offset metadata Bytes length offset return internal Entry Factory create new Wrapped Byte Array key Bytes hash Code new Wrapped Byte Array value Bytes version created lifespan last Used max Idle catch Exception Class Not Found Exception e throw new Cache Exception e else return internal Entry Factory create new Wrapped Byte Array key Bytes hash Code new Wrapped Byte Array value Bytes Metadata null created lifespan last Used max Idle Override public Wrapped Bytes get Key long address long header Offset eviction Enabled int key Length get Int address header Offset byte key Bytes new byte key Length get Bytes address header Offset key Bytes key Bytes length return new Wrapped Byte Array key Bytes Assumes the address points to the entry excluding the pointer reference at the beginning param address the address of an entry to read param wrapped Bytes the key to check if it equals return whether the key and address are equal Override public boolean equals Key long address Wrapped Bytes wrapped Bytes int header Offset eviction Enabled int hash Code wrapped Bytes hash Code if hash Code get Int address header Offset return false int key Length get Int address header Offset if key Length wrapped Bytes get Length return false for int i i key Length i byte b get Byte address header Offset i if b wrapped Bytes get Byte i return false return true 
package org infinispan distribution ch impl import java util Arrays import java util Hash Map import java util List import java util Map import org infinispan distribution ch Consistent Hash import org infinispan remoting transport Address This class holds statistics about a consistent hash It counts how many segments are owned or primary owned by each member author Dan Berindei since public class Ownership Statistics private final Map Address Integer nodes private final int primary Owned private final int owned public Ownership Statistics List Address nodes this nodes new Hash Map Address Integer nodes size for int i i nodes size i this nodes put nodes get i i this primary Owned new int nodes size this owned new int nodes size public Ownership Statistics Consistent Hash ch List Address active Nodes this active Nodes for int i i ch get Num Segments i List Address owners ch locate Owners For Segment i for int j j owners size j Address address owners get j Integer node Index nodes get address if node Index null if j primary Owned node Index owned node Index public Ownership Statistics Ownership Statistics other this nodes new Hash Map Address Integer other nodes this primary Owned Arrays copy Of other primary Owned other primary Owned length this owned Arrays copy Of other owned other owned length public int get Primary Owned Address a Integer i nodes get a if i null return return primary Owned i public int get Owned Address a Integer i nodes get a if i null return return owned i public void inc Primary Owned Address a Integer i nodes get a if i null throw new Illegal Argument Exception Trying to modify statistics for a node that does n t exist a primary Owned i public void inc Owned Address a Integer i nodes get a if i null throw new Illegal Argument Exception Trying to modify statistics for a node that does n t exist a owned i public void dec Primary Owned Address a Integer i nodes get a if i null throw new Illegal Argument Exception Trying to modify statistics for a node that does n t exist a primary Owned i public void dec Owned Address a Integer i nodes get a if i null throw new Illegal Argument Exception Trying to modify statistics for a node that does n t exist a owned i public int sum Primary Owned int segments With Primary Owners for int owned Count primary Owned segments With Primary Owners owned Count return segments With Primary Owners public int sum Owned int all Owners Count for int owned Count owned all Owners Count owned Count return all Owners Count public String to String String Builder sb new String Builder Ownership Statistics boolean is First true for Map Entry Address Integer e nodes entry Set if is First sb append Address node e get Key Integer index e get Value sb append node append append primary Owned index append append owned index primary Owned index is First false return sb to String 
package org infinispan configuration parsing import static org infinispan commons util String Property Replacer replace Properties import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names import static org infinispan factories Known Component Names shortened import java util Collections import java util Hash Map import java util Map import java util Objects import java util Properties import java util concurrent Thread Factory import java util concurrent Time Unit import javax xml stream Stream Constants import javax xml stream Stream Exception import org infinispan commons api Basic Cache Container import org infinispan commons configuration Built By import org infinispan commons configuration Configured By import org infinispan commons equivalence Equivalence import org infinispan commons executors Blocking Thread Pool Executor Factory import org infinispan commons executors Cached Thread Pool Executor Factory import org infinispan commons executors Scheduled Thread Pool Executor Factory import org infinispan commons executors Thread Pool Executor Factory import org infinispan commons marshall Advanced Externalizer import org infinispan commons util Util import org infinispan configuration cache Abstract Store Configuration Builder import org infinispan configuration cache Async Store Configuration Builder import org infinispan configuration cache Authorization Configuration Builder import org infinispan configuration cache Backup Configuration import org infinispan configuration cache Backup Configuration Builder import org infinispan configuration cache Backup Failure Policy import org infinispan configuration cache Cache Mode import org infinispan configuration cache Cluster Loader Configuration Builder import org infinispan configuration cache Configuration import org infinispan configuration cache Configuration Builder import org infinispan configuration cache Custom Store Configuration Builder import org infinispan configuration cache Index import org infinispan configuration cache Interceptor Configuration import org infinispan configuration cache Interceptor Configuration Builder import org infinispan configuration cache Memory Configuration Builder import org infinispan configuration cache Partition Handling Configuration Builder import org infinispan configuration cache Security Configuration Builder import org infinispan configuration cache Single File Store Configuration Builder import org infinispan configuration cache Storage Type import org infinispan configuration cache Store Configuration Builder import org infinispan configuration global Global Authorization Configuration Builder import org infinispan configuration global Global Configuration Builder import org infinispan configuration global Global Role Configuration Builder import org infinispan configuration global Global State Configuration Builder import org infinispan configuration global Shutdown Hook Behavior import org infinispan configuration global Thread Pool Configuration import org infinispan configuration global Thread Pool Configuration Builder import org infinispan configuration global Transport Configuration Builder import org infinispan conflict Entry Merge Policy import org infinispan conflict Merge Policies import org infinispan eviction Eviction Type import org infinispan factories threads Default Thread Factory import org infinispan partitionhandling Partition Handling import org infinispan persistence cluster Cluster Loader import org infinispan persistence file Single File Store import org infinispan persistence spi Cache Loader import org infinispan remoting transport Transport import org infinispan security Principal Role Mapper import org infinispan security impl Cluster Role Mapper import org infinispan security impl Common Name Role Mapper import org infinispan security impl Identity Role Mapper import org infinispan transaction Locking Mode import org infinispan transaction Transaction Protocol import org infinispan util concurrent Isolation Level import org infinispan util logging Log import org infinispan util logging Log Factory import org kohsuke Meta Inf Services This class implements the parser for Infinispan schema files author Tristan Tarrant author Galder Zamarre o since Meta Inf Services Namespaces Namespace uri urn infinispan config root infinispan Namespace uri urn infinispan config root infinispan Namespace uri urn infinispan config root infinispan Namespace root infinispan Namespace uri urn infinispan config root infinispan Namespace uri urn infinispan config root infinispan Namespace uri urn infinispan config root infinispan Namespace uri urn infinispan config root infinispan Namespace uri urn infinispan config root infinispan Namespace uri urn infinispan config root infinispan public class Parser implements Configuration Parser static final Log log Log Factory get Log Parser class private final Map String Default Thread Factory thread Factories new Hash Map private final Map String Thread Pool Configuration Builder thread Pools new Hash Map private final Map String String thread Pool To Thread Factory new Hash Map public Parser Override public void read Element final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case parse Container reader holder break case parse Groups reader holder break case parse Threads reader holder break default throw Parse Utils unexpected Element reader private void parse Serialization final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Global Configuration Builder builder holder get Global Configuration Builder for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder serialization marshaller Util get Instance value holder get Class Loader break case builder serialization version value break default throw Parse Utils unexpected Attribute reader i parse Advanced Externalizers reader holder private void parse Advanced Externalizers final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Global Configuration Builder builder holder get Global Configuration Builder while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case int attributes reader get Attribute Count Advanced Externalizer advanced Externalizer null Integer id null Parse Utils require Attributes reader Attribute get Local Name for int i i attributes i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case advanced Externalizer Util get Instance value holder get Class Loader break case id Integer value Of value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader if id null builder serialization add Advanced Externalizer id advanced Externalizer else builder serialization add Advanced Externalizer advanced Externalizer break default throw Parse Utils unexpected Element reader private void parse Threads Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case parse Thread Factory reader break case parse Cached Thread Pool reader holder break case parse Scheduled Thread Pool reader holder break case parse Blocking Bounded Queue Thread Pool reader holder break default throw Parse Utils unexpected Element reader Link up thread factories with the thread pools that have referenced them for Map Entry String Thread Pool Configuration Builder entry thread Pools entry Set String thread Factory Name thread Pool To Thread Factory get entry get Key if thread Factory Name null Thread Factory thread Factory thread Factories get thread Factory Name entry get Value thread Factory thread Factory private void parse Blocking Bounded Queue Thread Pool Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Thread Pool Configuration Builder builder new Thread Pool Configuration Builder holder get Global Configuration Builder String name null String thread Factory Name null int max Threads int core Threads int queue Length long keep Alive for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case name value break case thread Factory Name value break case core Threads Integer value Of value break case max Threads Integer value Of value break case queue Length Integer value Of value break case keep Alive Long value Of value break default throw Parse Utils unexpected Attribute reader i Thread Pool Executor Factory factory new Blocking Thread Pool Executor Factory max Threads core Threads queue Length keep Alive builder thread Pool Factory factory Keep track of the thread pool to thread factory name mapping and wait until all threads section has been processed to link the actual thread factories with the thread pools thread Pool To Thread Factory put name thread Factory Name thread Pools put name builder Parse Utils require No Content reader private void parse Scheduled Thread Pool Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Thread Pool Configuration Builder builder new Thread Pool Configuration Builder holder get Global Configuration Builder String name null String thread Factory Name null for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case name value break case thread Factory Name value break default throw Parse Utils unexpected Attribute reader i Thread Pool Executor Factory factory Scheduled Thread Pool Executor Factory create builder thread Pool Factory factory Keep track of the thread pool to thread factory name mapping and wait until all threads section has been processed to link the actual thread factories with the thread pools thread Pool To Thread Factory put name thread Factory Name thread Pools put name builder Parse Utils require No Content reader private void parse Cached Thread Pool Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Thread Pool Configuration Builder builder new Thread Pool Configuration Builder holder get Global Configuration Builder String name null String thread Factory Name null for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case name value break case thread Factory Name value break default throw Parse Utils unexpected Attribute reader i Thread Pool Executor Factory factory Cached Thread Pool Executor Factory create builder thread Pool Factory factory Keep track of the thread pool to thread factory name mapping and wait until all threads section has been processed to link the actual thread factories with the thread pools thread Pool To Thread Factory put name thread Factory Name thread Pools put name builder Parse Utils require No Content reader private void parse Thread Factory Extended Stream Reader reader throws Stream Exception String name null Thread Group thread Group null String thread Name Pattern null int priority minimum priority for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case name value break case thread Group new Thread Group value break case thread Name Pattern value break case priority Integer value Of value break default throw Parse Utils unexpected Attribute reader i Default Thread Factory thread Factory new Default Thread Factory name thread Group priority thread Name Pattern null null thread Factories put name thread Factory Parse Utils require No Content reader private void parse Groups Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Transport transport null for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case transport Util get Instance value holder get Class Loader break default throw Parse Utils unexpected Attribute reader i if transport null Set up default transport holder get Global Configuration Builder transport default Transport else holder get Global Configuration Builder transport transport transport while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case parse Stack File reader holder break default throw Parse Utils unexpected Element reader private void parse Stack File Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception String stack Name null for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case stack Name value holder get Global Configuration Builder transport add Property stack stack Name value break case holder get Global Configuration Builder transport add Property stack File Path stack Name value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Container Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception holder push Scope Parser Scope Global Configuration Builder builder holder get Global Configuration Builder if reader get Schema since builder default Cache Name Basic Cache Container for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder global Jmx Statistics cache Manager Name value break case log ignore Xml Attribute attribute break case builder default Cache Name value break case log ignore Xml Attribute attribute break case log ignore Xml Attribute attribute break case builder async Thread Pool read create Thread Pool Configuration value break case builder listener Thread Pool read create Thread Pool Configuration value break case log eviction Executor Deprecated fallthrough case builder expiration Thread Pool read create Thread Pool Configuration value break case if reader get Schema since throw Parse Utils unexpected Attribute reader attribute get Local Name else log ignored Replication Queue Attribute attribute get Local Name reader get Location get Line Number break case builder persistence Thread Pool read create Thread Pool Configuration value break case builder state Transfer Thread Pool read create Thread Pool Configuration value break case log ignore Xml Attribute attribute break case builder global Jmx Statistics enabled Boolean value Of value break case builder shutdown hook Behavior Shutdown Hook Behavior value Of value break default throw Parse Utils unexpected Attribute reader i while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case parse Transport reader holder break case parse Local Cache reader holder false break case parse Local Cache reader holder true break case parse Invalidation Cache reader holder false break case parse Invalidation Cache reader holder true break case parse Replicated Cache reader holder false break case parse Replicated Cache reader holder true break case parse Distributed Cache reader holder false break case parse Distributed Cache reader holder true break case if reader get Schema since parse Scattered Cache reader holder false else throw Parse Utils unexpected Element reader break case if reader get Schema since parse Scattered Cache reader holder true else throw Parse Utils unexpected Element reader break case parse Serialization reader holder break case if reader get Schema since throw Parse Utils unexpected Element reader else parse Modules reader holder break case parse Jmx reader holder break case parse Global Security reader holder break case if reader get Schema since parse Global State reader holder else throw Parse Utils unexpected Element reader break default reader handle Any holder holder pop Scope private void parse Global Security Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Parse Utils require No Attributes reader while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case parse Global Authorization reader holder break default throw Parse Utils unexpected Element reader private void parse Global Authorization Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Global Authorization Configuration Builder builder holder get Global Configuration Builder security authorization enable for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder audit Logger Util get Instance value holder get Class Loader break default throw Parse Utils unexpected Attribute reader i Principal Role Mapper role Mapper null while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case if role Mapper null throw Parse Utils unexpected Element reader Parse Utils require No Attributes reader Parse Utils require No Content reader role Mapper new Identity Role Mapper break case if role Mapper null throw Parse Utils unexpected Element reader Parse Utils require No Attributes reader Parse Utils require No Content reader role Mapper new Common Name Role Mapper break case if role Mapper null throw Parse Utils unexpected Element reader Parse Utils require No Attributes reader Parse Utils require No Content reader role Mapper new Cluster Role Mapper break case if role Mapper null throw Parse Utils unexpected Element reader role Mapper parse Custom Mapper reader holder break case parse Global Role reader builder break default throw Parse Utils unexpected Element reader if role Mapper null builder principal Role Mapper role Mapper private Principal Role Mapper parse Custom Mapper Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception String mapper Class Parse Utils require Single Attribute reader Attribute get Local Name Parse Utils require No Content reader return Util get Instance mapper Class holder get Class Loader private void parse Global Role Extended Stream Reader reader Global Authorization Configuration Builder builder throws Stream Exception String attributes Parse Utils require Attributes reader Attribute get Local Name Attribute get Local Name Global Role Configuration Builder role builder role attributes for String permission attributes split s role permission permission for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case case Already handled break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Jmx Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Global Configuration Builder builder holder get Global Configuration Builder for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder global Jmx Statistics jmx Domain value break case builder global Jmx Statistics m Bean Server Lookup Util get Instance value holder get Class Loader break case builder global Jmx Statistics allow Duplicate Domains Boolean value Of value break default throw Parse Utils unexpected Attribute reader i Properties properties parse Properties reader builder global Jmx Statistics with Properties properties private void parse Modules Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception while reader has Next reader next Tag Stream Constants reader handle Any holder private void parse Transport Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Global Configuration Builder global Builder holder get Global Configuration Builder if holder get Global Configuration Builder transport get Transport null holder get Global Configuration Builder transport default Transport Transport Configuration Builder transport holder get Global Configuration Builder transport for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case boolean stack Found transport get Property stack value null if stack Found String file Path transport get Property stack File Path value transport add Property stack value transport add Property configuration File file Path break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case global Builder transport cluster Name value break case break case break case break case break case break case break case break case break case global Builder transport transport Thread Pool read create Thread Pool Configuration value break case if reader get Schema since throw Parse Utils unexpected Attribute reader attribute get Local Name else log ignored Attribute total order executor attribute get Local Name reader get Location get Line Number case global Builder transport remote Command Thread Pool read create Thread Pool Configuration value break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case global Builder transport distributed Sync Timeout Long value Of value break case global Builder transport node Name value for Default Thread Factory thread Factory thread Factories values thread Factory set Node value break case break case global Builder transport machine Id value break case global Builder transport rack Id value break case global Builder transport site Id value global Builder site local Site value break case if reader get Schema since global Builder transport initial Cluster Size Integer value Of value else throw Parse Utils unexpected Attribute reader i break case if reader get Schema since global Builder transport initial Cluster Timeout Long parse Long value Time Unit else throw Parse Utils unexpected Attribute reader i break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Global State Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Parse Utils require No Attributes reader Global State Configuration Builder builder holder get Global Configuration Builder global State enable while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case builder persistent Location parse Global State Path reader break case builder temporary Location parse Global State Path reader break default throw Parse Utils unexpected Element reader private String parse Global State Path Extended Stream Reader reader throws Stream Exception String path replace Properties Parse Utils require Attributes reader Attribute get Local Name for int i i reader get Attribute Count i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case log ignore Xml Attribute attribute break case Handled above break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader return path private Thread Pool Configuration create Thread Pool Configuration String thread Pool Name String component Name Thread Pool Configuration Builder thread Pool thread Pools get thread Pool Name if thread Pool null throw log undefined Thread Pool Name thread Pool Name Thread Pool Configuration thread Pool Configuration thread Pool create Default Thread Factory thread Factory thread Pool Configuration thread Factory thread Factory set Component shortened component Name return thread Pool Configuration private void parse Local Cache Extended Stream Reader reader Configuration Builder Holder holder boolean template throws Stream Exception holder push Scope template Parser Scope Parser Scope String name reader get Attribute Value null Attribute get Local Name String configuration reader get Attribute Value null Attribute get Local Name Configuration Builder builder get Configuration Builder holder name template configuration builder clustering cache Mode Cache Mode for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i this parse Cache Attribute reader i attribute value builder while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name this parse Cache Element reader element holder holder pop Scope private void parse Cache Attribute Extended Stream Reader reader int index Attribute attribute String value Configuration Builder builder throws Stream Exception switch attribute case case Handled by the caller break case case case log ignore Xml Attribute attribute break case builder simple Cache Boolean value Of value break case builder jmx Statistics enabled Boolean value Of value break case builder jmx Statistics available Boolean value Of value break case log ignore Xml Attribute attribute break case builder unsafe unreliable Return Values Boolean value Of value break default throw Parse Utils unexpected Attribute reader index private void parse Shared State Cache Element Extended Stream Reader reader Element element Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder switch element case this parse State Transfer reader builder break default this parse Cache Element reader element holder private void parse Backups Extended Stream Reader reader Configuration Builder builder throws Stream Exception If backups is present then remove any existing backups as they were added by the default config builder sites backups clear while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case this parse Backup reader builder break default throw Parse Utils unexpected Element reader private void parse Partition Handling Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder Partition Handling Configuration Builder ph builder clustering partition Handling for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case log partition Handling Configuration Enabled Deprecated ph enabled Boolean value Of value break case ph when Split Partition Handling value Of value to Upper Case break case Merge Policy mp Merge Policy from String value Entry Merge Policy merge Policy mp Merge Policy Util get Instance value holder get Class Loader mp impl ph merge Policy merge Policy break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Backup Extended Stream Reader reader Configuration Builder builder throws Stream Exception Backup Configuration Builder backup builder sites add Backup for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case backup site value break case backup strategy Backup Configuration Backup Strategy value Of value break case backup backup Failure Policy Backup Failure Policy value Of value break case backup replication Timeout Long value Of value break case backup enabled Boolean value Of value break case backup use Two Phase Commit Boolean parse Boolean value break case backup failure Policy Class value break default throw Parse Utils unexpected Attribute reader i if backup site null throw Parse Utils missing Required reader Collections singleton Attribute while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case this parse Take Offline reader backup break case this parse Site State Transfer reader backup break default throw Parse Utils unexpected Element reader private void parse Take Offline Extended Stream Reader reader Backup Configuration Builder backup throws Stream Exception for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case backup take Offline after Failures Integer value Of value break case backup take Offline min Time To Wait Long value Of value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Site State Transfer Extended Stream Reader reader Backup Configuration Builder backup throws Stream Exception for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case backup state Transfer chunk Size Integer parse Int value break case backup state Transfer timeout Long parse Long value break case backup state Transfer max Retries Integer parse Int value break case backup state Transfer wait Time Long parse Long value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Backup For Extended Stream Reader reader Configuration Builder builder throws Stream Exception builder sites backup For reset for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder sites backup For remote Cache value break case builder sites backup For remote Site value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Cache Security Extended Stream Reader reader Configuration Builder builder throws Stream Exception Security Configuration Builder security Builder builder security Parse Utils require No Attributes reader while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case parse Cache Authorization reader security Builder authorization enable break default throw Parse Utils unexpected Element reader private void parse Cache Authorization Extended Stream Reader reader Authorization Configuration Builder authz Builder throws Stream Exception for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case authz Builder enabled Boolean parse Boolean value break case for String role value split s authz Builder role role break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader protected void parse Cache Element Extended Stream Reader reader Element element Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder switch element case this parse Locking reader builder break case this parse Transaction reader builder holder break case this parse Eviction reader builder break case this parse Expiration reader builder break case this parse Persistence reader holder break case this parse Indexing reader holder break case this parse Custom Interceptors reader holder break case parse Versioning reader holder break case parse Compatibility reader holder break case parse Store As Binary reader holder break case if reader get Schema since throw Parse Utils unexpected Element reader else parse Modules reader holder break case parse Data Container reader holder break case parse Memory reader holder break case this parse Backups reader builder break case this parse Backup For reader builder break case this parse Partition Handling reader holder break case this parse Cache Security reader builder break default reader handle Any holder private void parse Data Container final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case log data Container Configuration Deprecated builder data Container data Container Util get Instance value holder get Class Loader break case builder data Container key Equivalence Util Equivalence get Instance value holder get Class Loader break case builder data Container value Equivalence Util Equivalence get Instance value holder get Class Loader break default throw Parse Utils unexpected Attribute reader i Properties properties new Properties while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case parse Property reader properties break default throw Parse Utils unexpected Element reader builder data Container with Properties properties private void parse Memory final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Memory Configuration Builder memory Builder holder get Current Configuration Builder memory Parse Utils require No Attributes reader while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case memory Builder storage Type Storage Type parse Off Heap Memory Attributes reader holder break case memory Builder storage Type Storage Type parse Object Memory Attributes reader holder break case memory Builder storage Type Storage Type parse Binary Memory Attributes reader holder break default throw Parse Utils unexpected Element reader private void parse Off Heap Memory Attributes final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Memory Configuration Builder memory Builder holder get Current Configuration Builder memory for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case memory Builder size Long parse Long value break case memory Builder eviction Type Eviction Type value Of value break case memory Builder address Count Integer parse Int value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Object Memory Attributes final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Memory Configuration Builder memory Builder holder get Current Configuration Builder memory for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case memory Builder size Long parse Long value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Binary Memory Attributes final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Memory Configuration Builder memory Builder holder get Current Configuration Builder memory for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case memory Builder size Long parse Long value break case memory Builder eviction Type Eviction Type value Of value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Store As Binary final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception log element Deprecated Use Other Element Element Configuration Builder builder holder get Current Configuration Builder Boolean binary Keys null Boolean binary Values null builder memory storage Type Storage Type for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case binary Keys Boolean parse Boolean value break case binary Values Boolean parse Boolean value break default throw Parse Utils unexpected Attribute reader i if binary Keys null binary Keys binary Values null binary Values builder memory storage Type Storage Type explicitly disable Parse Utils require No Content reader private void parse Compatibility Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder builder compatibility enable for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder compatibility marshaller Util get Instance value holder get Class Loader break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Versioning final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case log ignored Attribute versioning attribute get Local Name reader get Location get Line Number break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Custom Interceptors Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Parse Utils require No Attributes reader while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case parse Interceptor reader holder break default throw Parse Utils unexpected Element reader private void parse Interceptor Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder Interceptor Configuration Builder interceptor Builder builder custom Interceptors add Interceptor for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case interceptor Builder after Util load Class value holder get Class Loader break case interceptor Builder before Util load Class value holder get Class Loader break case interceptor Builder interceptor Class Util load Class value holder get Class Loader break case interceptor Builder index Integer parse Int value break case interceptor Builder position Interceptor Configuration Position value Of value to Upper Case break default throw Parse Utils unexpected Attribute reader i interceptor Builder with Properties parse Properties reader protected void parse Locking Extended Stream Reader reader Configuration Builder builder throws Stream Exception for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder locking isolation Level Isolation Level value Of value break case builder locking use Lock Striping Boolean parse Boolean value break case builder locking lock Acquisition Timeout Long parse Long value break case builder locking concurrency Level Integer parse Int value break case log ignored Attribute write skew attribute attribute get Local Name reader get Location get Line Number break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader protected void parse Transaction Extended Stream Reader reader Configuration Builder builder Configuration Builder Holder holder throws Stream Exception for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder transaction cache Stop Timeout Long parse Long value break case Transaction Mode tx Mode Transaction Mode value Of value builder transaction transaction Mode tx Mode get Mode builder transaction use Synchronization tx Mode is Enabled tx Mode get Mode is Transactional builder transaction recovery enabled tx Mode is Recovery Enabled builder invocation Batching enable tx Mode is Batching Enabled break case builder transaction locking Mode Locking Mode value Of value break case builder transaction transaction Manager Lookup Util get Instance value holder get Class Loader break case builder transaction reaper Wake Up Interval Long parse Long value break case builder transaction completed Tx Timeout Long parse Long value break case builder transaction transaction Protocol Transaction Protocol value Of value break case builder transaction auto Commit Boolean parse Boolean value break case builder transaction recovery recovery Info Cache Name value break case builder transaction notifications Boolean parse Boolean value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Eviction Extended Stream Reader reader Configuration Builder builder throws Stream Exception log element Deprecated Use Other Element Element for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case case case log ignore Xml Element attribute break case log eviction Max Entries Deprecated case builder memory size Long parse Long value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Expiration Extended Stream Reader reader Configuration Builder builder throws Stream Exception for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder expiration max Idle Long parse Long value break case builder expiration lifespan Long parse Long value break case builder expiration wake Up Interval Long parse Long value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Invalidation Cache Extended Stream Reader reader Configuration Builder Holder holder boolean template throws Stream Exception holder push Scope template Parser Scope Parser Scope String name reader get Attribute Value null Attribute get Local Name String configuration reader get Attribute Value null Attribute get Local Name Configuration Builder builder get Configuration Builder holder name template configuration Cache Mode base Cache Mode configuration null Cache Mode builder clustering cache Mode builder clustering cache Mode base Cache Mode for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder clustering hash key Partitioner Util get Instance value holder get Class Loader break default this parse Clustered Cache Attribute reader i attribute value builder base Cache Mode while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element default this parse Cache Element reader element holder holder pop Scope private void parse Segmented Cache Attribute Extended Stream Reader reader int index Attribute attribute String value Configuration Builder builder Class Loader class Loader Cache Mode base Cache Mode throws Stream Exception switch attribute case builder clustering hash num Segments Integer parse Int value break case builder clustering hash consistent Hash Factory Util get Instance value class Loader break case if reader get Schema since builder clustering hash key Partitioner Util get Instance value class Loader else throw Parse Utils unexpected Attribute reader index break default this parse Clustered Cache Attribute reader index attribute value builder base Cache Mode private void parse Clustered Cache Attribute Extended Stream Reader reader int index Attribute attribute String value Configuration Builder builder Cache Mode base Cache Mode throws Stream Exception switch attribute case if reader get Schema since throw Parse Utils unexpected Attribute reader attribute get Local Name else log ignored Replication Queue Attribute attribute get Local Name reader get Location get Line Number break case Mode mode Mode value Of value builder clustering cache Mode mode apply base Cache Mode break case log ignored Replication Queue Attribute attribute get Local Name reader get Location get Line Number break case log ignored Replication Queue Attribute attribute get Local Name reader get Location get Line Number break case builder clustering remote Timeout Long parse Long value break default this parse Cache Attribute reader index attribute value builder private void parse Replicated Cache Extended Stream Reader reader Configuration Builder Holder holder boolean template throws Stream Exception holder push Scope template Parser Scope Parser Scope String name reader get Attribute Value null Attribute get Local Name String configuration reader get Attribute Value null Attribute get Local Name Configuration Builder builder get Configuration Builder holder name template configuration Cache Mode base Cache Mode configuration null Cache Mode builder clustering cache Mode builder clustering cache Mode base Cache Mode for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i parse Segmented Cache Attribute reader i attribute value builder holder get Class Loader base Cache Mode while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element default this parse Shared State Cache Element reader element holder holder pop Scope private void parse State Transfer Extended Stream Reader reader Configuration Builder builder throws Stream Exception for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder clustering state Transfer await Initial Transfer Boolean parse Boolean value break case builder clustering state Transfer fetch In Memory State Boolean parse Boolean value break case builder clustering state Transfer timeout Long parse Long value break case builder clustering state Transfer chunk Size Integer parse Int value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader private void parse Distributed Cache Extended Stream Reader reader Configuration Builder Holder holder boolean template throws Stream Exception holder push Scope template Parser Scope Parser Scope String name reader get Attribute Value null Attribute get Local Name String configuration reader get Attribute Value null Attribute get Local Name Configuration Builder builder get Configuration Builder holder name template configuration Cache Mode base Cache Mode configuration null Cache Mode builder clustering cache Mode builder clustering cache Mode base Cache Mode for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder clustering hash num Owners Integer parse Int value break case long lifespan Long parse Long value if lifespan builder clustering l enable lifespan lifespan else builder clustering l disable break case builder clustering l cleanup Task Frequency Long parse Long value break case builder clustering hash capacity Factor Float parse Float value break default this parse Segmented Cache Attribute reader i attribute value builder holder get Class Loader base Cache Mode while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case parse Groups reader holder break default this parse Shared State Cache Element reader element holder holder pop Scope private void parse Groups final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder Parse Utils require Single Attribute reader enabled for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case if Boolean parse Boolean value builder clustering hash groups enabled else builder clustering hash groups disabled break default throw Parse Utils unexpected Attribute reader i while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case String value Parse Utils read String Attribute Element reader class builder clustering hash groups add Grouper Util get Instance value holder get Class Loader break default throw Parse Utils unexpected Element reader private void parse Scattered Cache Extended Stream Reader reader Configuration Builder Holder holder boolean template throws Stream Exception String name reader get Attribute Value null Attribute get Local Name String configuration reader get Attribute Value null Attribute get Local Name Configuration Builder builder get Configuration Builder holder name template configuration Cache Mode base Cache Mode configuration null Cache Mode builder clustering cache Mode builder clustering cache Mode base Cache Mode for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder clustering invalidation Batch Size Integer parse Int value break default this parse Segmented Cache Attribute reader i attribute value builder holder get Class Loader base Cache Mode while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element default this parse Shared State Cache Element reader element holder private Configuration Builder get Configuration Builder Configuration Builder Holder holder String name boolean template String base Configuration Name if holder get Named Configuration Builders contains Key name throw log duplicate Cache Name name Configuration Builder builder holder new Configuration Builder name template template if base Configuration Name null Configuration Builder base Configuration Builder holder get Named Configuration Builders get base Configuration Name if base Configuration Builder null throw log undeclared Configuration base Configuration Name name Configuration base Configuration base Configuration Builder build if base Configuration is Template throw log no Configuration base Configuration Name builder read base Configuration return builder private void parse Persistence final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case builder persistence passivation Boolean parse Boolean value break default throw Parse Utils unexpected Attribute reader i clear in order to override any configuration defined in default cache builder persistence clear Stores while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case parse Cluster Loader reader holder break case parse File Store reader holder break case parse Custom Store reader holder break case log ignore Xml Element element break default reader handle Any holder private void parse Cluster Loader Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder Cluster Loader Configuration Builder cclb builder persistence add Cluster Loader for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i String attr Name reader get Attribute Local Name i Attribute attribute Attribute for Name attr Name switch attribute case cclb remote Call Timeout Long parse Long value break default parse Store Attribute reader i cclb break parse Store Elements reader cclb protected void parse File Store Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Single File Store Configuration Builder store Builder holder get Current Configuration Builder persistence add Single File Store for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case log ignore Xml Attribute attribute break case store Builder location value break case store Builder max Entries Integer value Of value break case store Builder fragmentation Factor Float parse Float value break default parse Store Attribute reader i store Builder this parse Store Elements reader store Builder This method is public static so that it can be reused by custom cache store loader configuration parsers public static void parse Store Attribute Extended Stream Reader reader int index Abstract Store Configuration Builder store Builder throws Stream Exception String value replace Properties reader get Attribute Value index Attribute attribute Attribute for Name reader get Attribute Local Name index switch attribute case store Builder shared Boolean parse Boolean value break case store Builder ignore Modifications Boolean value Of value break case store Builder preload Boolean parse Boolean value break case store Builder fetch Persistent State Boolean parse Boolean value break case store Builder purge On Startup Boolean parse Boolean value break case store Builder singleton enabled Boolean parse Boolean value break case store Builder transactional Boolean parse Boolean value break case store Builder max Batch Size Integer parse Int value break default throw Parse Utils unexpected Attribute reader index private void parse Store Elements Extended Stream Reader reader Store Configuration Builder store Builder throws Stream Exception while reader has Next reader next Tag Stream Constants parse Store Element reader store Builder public static void parse Store Element Extended Stream Reader reader Store Configuration Builder store Builder throws Stream Exception Element element Element for Name reader get Local Name switch element case parse Store Write Behind reader store Builder async enable break case parse Store Property reader store Builder break default throw Parse Utils unexpected Element reader public static void parse Store Write Behind Extended Stream Reader reader Async Store Configuration Builder store Builder throws Stream Exception for int i i reader get Attribute Count i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case if reader get Schema since throw Parse Utils unexpected Attribute reader attribute get Local Name else store Builder flush Lock Timeout Long parse Long value break case store Builder modification Queue Size Integer parse Int value break case if reader get Schema since throw Parse Utils unexpected Attribute reader attribute get Local Name else store Builder shutdown Timeout Long parse Long value break case store Builder thread Pool Size Integer parse Int value break default throw Parse Utils unexpected Attribute reader i Parse Utils require No Content reader public static void parse Store Property Extended Stream Reader reader Store Configuration Builder store Builder throws Stream Exception String property Parse Utils require Single Attribute reader Attribute get Local Name String value reader get Element Text store Builder add Property property value private void parse Custom Store final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder Boolean fetch Persistent State null Boolean ignore Modifications null Boolean purge On Startup null Boolean preload null Boolean shared null Boolean singleton null Boolean transactional null Cache Loader store null for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case store Util get Instance value holder get Class Loader break case fetch Persistent State Boolean value Of value break case ignore Modifications Boolean value Of value break case purge On Startup Boolean value Of value break case preload Boolean parse Boolean value break case shared Boolean parse Boolean value break case singleton Boolean parse Boolean value break case transactional Boolean parse Boolean value break default throw Parse Utils unexpected Attribute reader i if store null if store instanceof Single File Store Single File Store Configuration Builder sfs builder persistence add Single File Store if fetch Persistent State null sfs fetch Persistent State fetch Persistent State if ignore Modifications null sfs ignore Modifications ignore Modifications if purge On Startup null sfs purge On Startup purge On Startup if preload null sfs preload preload if shared null sfs shared shared if singleton null sfs singleton enabled singleton if transactional null sfs transactional transactional parse Store Elements reader sfs else if store instanceof Cluster Loader Cluster Loader Configuration Builder cscb builder persistence add Cluster Loader parse Store Elements reader cscb else Configured By annotation store get Class get Annotation Configured By class Class extends Store Configuration Builder builder Class null if annotation null Class configured By annotation value if configured By null Built By built By configured By get Annotation Built By class builder Class built By value as Subclass Store Configuration Builder class Store Configuration Builder config Builder If they do n t specify a builder just use the custom configuration builder and set the class if builder Class null config Builder builder persistence add Store Custom Store Configuration Builder class custom Store Class store get Class else config Builder builder persistence add Store builder Class if fetch Persistent State null config Builder fetch Persistent State fetch Persistent State if ignore Modifications null config Builder ignore Modifications ignore Modifications if purge On Startup null config Builder purge On Startup purge On Startup if preload null config Builder preload preload if shared null config Builder shared shared if transactional null config Builder transactional transactional parse Store Elements reader config Builder private void parse Indexing final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder for int i i reader get Attribute Count i Parse Utils require No Namespace Attribute reader i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case Index index Index value Of value builder indexing index index break case builder indexing auto Config Boolean value Of value break default throw Parse Utils unexpected Attribute reader i Properties indexing Properties new Properties while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case parse Indexed Entities reader holder builder break case parse Property reader indexing Properties break default throw Parse Utils unexpected Element reader builder indexing with Properties indexing Properties private void parse Indexed Entities Extended Stream Reader reader Configuration Builder Holder holder Configuration Builder builder throws Stream Exception Parse Utils require No Attributes reader while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case Parse Utils require No Attributes reader String class Name reader get Element Text Class indexed Entity Util load Class class Name holder get Class Loader builder indexing add Indexed Entity indexed Entity break default throw Parse Utils unexpected Element reader private static void parse Property Extended Stream Reader reader Properties properties throws Stream Exception int attributes reader get Attribute Count Parse Utils require Attributes reader Attribute get Local Name String key null String property Value for int i i attributes i String value replace Properties reader get Attribute Value i Attribute attribute Attribute for Name reader get Attribute Local Name i switch attribute case key value break default throw Parse Utils unexpected Attribute reader i property Value replace Properties reader get Element Text properties set Property key property Value public static Properties parse Properties final Extended Stream Reader reader throws Stream Exception Properties properties new Properties while reader has Next reader next Tag Stream Constants Element element Element for Name reader get Local Name switch element case parse Property reader properties break default throw Parse Utils unexpected Element reader return properties public enum Merge Policy null null Merge Policies Merge Policies Merge Policies private final Entry Merge Policy impl Merge Policy Entry Merge Policy policy this impl policy public Entry Merge Policy get Impl return impl public static Merge Policy from String String str for Merge Policy mp Merge Policy values if mp name equals Ignore Case str return mp return public static Merge Policy from Configuration Entry Merge Policy policy if policy null return for Merge Policy mp Merge Policy values if mp impl null Objects equals mp impl get Class policy get Class return mp return public enum Transaction Mode org infinispan transaction Transaction Mode false false false org infinispan transaction Transaction Mode false false true org infinispan transaction Transaction Mode false false false org infinispan transaction Transaction Mode true false false org infinispan transaction Transaction Mode true true false private final org infinispan transaction Transaction Mode mode private final boolean xa Enabled private final boolean recovery Enabled private final boolean batching Enabled Transaction Mode org infinispan transaction Transaction Mode mode boolean xa Enabled boolean recovery Enabled boolean batching Enabled this mode mode this xa Enabled xa Enabled this recovery Enabled recovery Enabled this batching Enabled batching Enabled public static Transaction Mode from Configuration org infinispan transaction Transaction Mode mode boolean xa Enabled boolean recovery Enabled boolean batching Enabled if mode org infinispan transaction Transaction Mode return for Transaction Mode tx Mode Transaction Mode values if tx Mode mode mode tx Mode xa Enabled xa Enabled tx Mode recovery Enabled recovery Enabled tx Mode batching Enabled batching Enabled return tx Mode throw log unknown Transaction Configuration mode xa Enabled recovery Enabled batching Enabled public org infinispan transaction Transaction Mode get Mode return this mode public boolean is Enabled return this xa Enabled public boolean is Recovery Enabled return this recovery Enabled public boolean is Batching Enabled return batching Enabled public enum Mode true false private final boolean sync Mode boolean sync this sync sync public static Mode for Cache Mode Cache Mode mode return mode is Synchronous public Cache Mode apply Cache Mode mode return this sync mode to Sync mode to Async public boolean is Synchronous return this sync Override public Namespace get Namespaces return Parse Utils get Namespace Annotations get Class 
package org infinispan configuration parsing import static javax xml stream Stream Constants import static javax xml stream Stream Constants import static javax xml stream Stream Constants import java io Buffered Input Stream import java io Buffered Output Stream import java io File Not Found Exception import java io Exception import java io Input Stream import java io Output Stream import java lang ref Weak Reference import java util Collection import java util Map import java util Service Loader import java util concurrent Concurrent Map import javax xml namespace Name import javax xml stream Input Factory import javax xml stream Output Factory import javax xml stream Stream Exception import javax xml stream Stream Reader import javax xml stream Stream Writer import org infinispan commons Cache Configuration Exception import org infinispan commons util Collection Factory import org infinispan commons util File Lookup import org infinispan commons util File Lookup Factory import org infinispan commons util Service Finder import org infinispan commons util Util import org infinispan configuration cache Configuration import org infinispan configuration global Global Configuration import org infinispan configuration serializing Configuration Holder import org infinispan configuration serializing Serializer import org infinispan configuration serializing Extended Stream Writer import org infinispan configuration serializing Extended Stream Writer Impl import org infinispan util logging Log import org infinispan util logging Log Factory Parser Registry is a namespace mapping aware meta parser which provides a way to delegate the parsing of multi namespace files to appropriate parsers defined by the link Configuration Parser interface registry of available parsers is built using the link Service Loader system Implementations of link Configuration Parser should include a services org infinispan configuration parsing Configuration Parser file containing a list of available parsers author Tristan Tarrant since public class Parser Registry implements Namespace Mapping Parser private static final Log log Log Factory get Log Parser Registry class private final Weak Reference Class Loader cl private final Concurrent Map Name Configuration Parser parser Mappings public Parser Registry this Thread current Thread get Context Class Loader public Parser Registry Class Loader class Loader this class Loader false public Parser Registry Class Loader class Loader boolean default Only this parser Mappings Collection Factory make Concurrent Map this cl new Weak Reference class Loader Collection Configuration Parser parsers Service Finder load Configuration Parser class cl get Parser Registry class get Class Loader for Configuration Parser parser parsers Namespace namespaces parser get Namespaces if namespaces null throw log parser Does Not Declare Namespaces parser get Class get Name boolean skip Parser default Only if skip Parser for Namespace ns namespaces if equals ns uri skip Parser false if skip Parser for Namespace ns namespaces Name q Name new Name ns uri ns root Configuration Parser existing Parser parser Mappings put If Absent q Name parser if existing Parser null parser get Class equals existing Parser get Class log parser Root Element Already Registered q Name parser get Class get Name existing Parser get Class get Name public Configuration Builder Holder parse File String filename throws Exception File Lookup file Lookup File Lookup Factory new Instance Input Stream is file Lookup lookup File filename cl get if is null throw new File Not Found Exception filename try return parse is finally Util close is public Configuration Builder Holder parse Input Stream is try Configuration Builder Holder holder new Configuration Builder Holder cl get parse is holder holder validate return holder catch Cache Configuration Exception e throw e catch Exception e throw new Cache Configuration Exception e public void parse Input Stream is Configuration Builder Holder holder throws Stream Exception Buffered Input Stream input new Buffered Input Stream is Stream Reader sub Reader Input Factory new Instance create Stream Reader input Extended Stream Reader reader new Extended Stream Reader Impl this sub Reader parse reader holder sub Reader close Fire all parsing Complete events if any for Parser Context parser Context holder get Parser Contexts values parser Context fire Parsing Complete public void parse Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception try reader require null null reader next Tag reader require null null parse Element reader holder while reader next consume remaining parsing events finally try reader close catch Exception e Override public void parse Element Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Name name reader get Name Configuration Parser parser parser Mappings get name if parser null throw log unsupported Configuration name get Local Part name get Namespace Schema old Schema reader get Schema reader set Schema Schema from Namespace name get Namespace parser read Element reader holder reader set Schema old Schema public void serialize Output Stream os Global Configuration global Configuration Map String Configuration configurations throws Stream Exception Buffered Output Stream output new Buffered Output Stream os Stream Writer sub Writer Output Factory new Instance create Stream Writer output Extended Stream Writer writer new Extended Stream Writer Impl sub Writer serialize writer global Configuration configurations sub Writer close public void serialize Extended Stream Writer writer Global Configuration global Configuration Map String Configuration configurations throws Stream Exception writer write Start Document writer write Start Element infinispan Serializer serializer new Serializer serializer serialize writer new Configuration Holder global Configuration configurations writer write End Element writer write End Document 
package org infinispan configuration parsing import static javax xml stream Stream Constants import static org infinispan commons util String Property Replacer replace Properties import java util Collections import java util Iterator import java util Set import javax xml Constants import javax xml stream Location import javax xml stream Stream Exception import javax xml stream Stream Reader author a href mailto david lloyd redhat com David Lloyd a public final class Parse Utils private Parse Utils public static Element next Element Stream Reader reader throws Stream Exception if reader next Tag return null return Element for Name reader get Local Name Get an exception reporting an unexpected element param reader the stream reader return the exception public static Stream Exception unexpected Element final Stream Reader reader return new Stream Exception Unexpected element reader get Name encountered reader get Location Get an exception reporting an unexpected end tag for an element param reader the stream reader return the exception public static Stream Exception unexpected End Element final Stream Reader reader return new Stream Exception Unexpected end of element reader get Name encountered reader get Location Get an exception reporting an unexpected attribute param reader the stream reader param index the attribute index return the exception public static Stream Exception unexpected Attribute final Stream Reader reader final int index return new Stream Exception Unexpected attribute reader get Attribute Name index encountered reader get Location Get an exception reporting an unexpected attribute param reader the stream reader param name the attribute name return the exception public static Stream Exception unexpected Attribute final Stream Reader reader final String name return new Stream Exception Unexpected attribute name encountered reader get Location Get an exception reporting an invalid attribute value param reader the stream reader param index the attribute index return the exception public static Stream Exception invalid Attribute Value final Stream Reader reader final int index return new Stream Exception Invalid value reader get Attribute Value index for attribute reader get Attribute Name index reader get Location Get an exception reporting a missing required attribute param reader the stream reader param required a set of enums whose to String method returns the attribute name return the exception public static Stream Exception missing Required final Stream Reader reader final Set required final String Builder b new String Builder Iterator iterator required iterator while iterator has Next final Object o iterator next b append o to String if iterator has Next b append return new Stream Exception Missing required attribute s b reader get Location Get an exception reporting a missing required child element param reader the stream reader param required a set of enums whose to String method returns the attribute name return the exception public static Stream Exception missing Required Element final Stream Reader reader final Set required final String Builder b new String Builder Iterator iterator required iterator while iterator has Next final Object o iterator next b append o to String if iterator has Next b append return new Stream Exception Missing required element s b reader get Location Checks that the current element has no attributes throwing an link javax xml stream Stream Exception if one is found param reader the reader throws javax xml stream Stream Exception if an error occurs public static void require No Attributes final Stream Reader reader throws Stream Exception if reader get Attribute Count throw unexpected Attribute reader Consumes the remainder of the current element throwing an link javax xml stream Stream Exception if it contains any child elements param reader the reader throws javax xml stream Stream Exception if an error occurs public static void require No Content final Stream Reader reader throws Stream Exception if reader has Next reader next Tag throw unexpected Element reader Get an exception reporting that an attribute of a given name has already been declared in this scope param reader the stream reader param name the name that was redeclared return the exception public static Stream Exception duplicate Attribute final Stream Reader reader final String name return new Stream Exception An attribute named name has already been declared reader get Location Get an exception reporting that an element of a given type and name has already been declared in this scope param reader the stream reader param name the name that was redeclared return the exception public static Stream Exception duplicate Named Element final Stream Reader reader final String name return new Stream Exception An element of this type named name has already been declared reader get Location Read an element which contains only a single boolean attribute param reader the reader param attribute Name the attribute name usually value return the boolean value throws javax xml stream Stream Exception if an error occurs or if the element does not contain the specified attribute contains other attributes or contains child elements public static boolean read Boolean Attribute Element final Stream Reader reader final String attribute Name throws Stream Exception require Single Attribute reader attribute Name final boolean value Boolean parse Boolean reader get Attribute Value require No Content reader return value Read an element which contains only a single string attribute param reader the reader param attribute Name the attribute name usually value or name return the string value throws javax xml stream Stream Exception if an error occurs or if the element does not contain the specified attribute contains other attributes or contains child elements public static String read String Attribute Element final Stream Reader reader final String attribute Name throws Stream Exception require Single Attribute reader attribute Name final String value reader get Attribute Value require No Content reader return value Require that the current element have only a single attribute with the given name param reader the reader param attribute Name the attribute name throws javax xml stream Stream Exception if an error occurs public static String require Single Attribute final Stream Reader reader final String attribute Name throws Stream Exception final int count reader get Attribute Count if count throw missing Required reader Collections singleton attribute Name require No Namespace Attribute reader if attribute Name equals reader get Attribute Local Name throw unexpected Attribute reader if count throw unexpected Attribute reader return reader get Attribute Value Require all the named attributes returning their values in order param reader the reader param attribute Names the attribute names return the attribute values in order throws javax xml stream Stream Exception if an error occurs public static String require Attributes final Stream Reader reader boolean replace final String attribute Names throws Stream Exception final int length attribute Names length final String result new String length for int i i length i final String name attribute Names i final String value reader get Attribute Value null name if value null throw missing Required reader Collections singleton name result i replace replace Properties value value return result public static String require Attributes final Stream Reader reader final String attribute Names throws Stream Exception return require Attributes reader false attribute Names public static boolean is No Namespace Attribute final Stream Reader reader final int index String namespace reader get Attribute Namespace index when is done remove the null check return namespace null Constants equals namespace public static void require No Namespace Attribute final Stream Reader reader final int index throws Stream Exception if is No Namespace Attribute reader index throw unexpected Attribute reader index public static String get Warning Message final String msg final Location location return String format Parsing problem at row col d d n Message s n location get Line Number location get Column Number msg public static Namespace get Namespace Annotations Class cls Namespaces namespaces Annotation cls get Annotation Namespaces class if namespaces Annotation null return namespaces Annotation value Namespace namespace Annotation cls get Annotation Namespace class if namespace Annotation null return new Namespace namespace Annotation return null public static String get List Attribute Value String value return value split s 
package org infinispan distribution group impl import java util List import java util Objects import java util Set import java util function Unary Operator import org infinispan commons hash Hash import org infinispan distribution ch Consistent Hash import org infinispan distribution ch Key Partitioner import org infinispan globalstate Scoped Persistent State import org infinispan remoting transport Address link Consistent Hash wrapper that uses a link Key Partitioner instead of a link Hash author Dan Berindei since public class Partitioner Consistent Hash implements Consistent Hash private final Consistent Hash ch private final Key Partitioner key Partitioner public Partitioner Consistent Hash Consistent Hash ch Key Partitioner key Partitioner this ch Objects require Non Null ch this key Partitioner Objects require Non Null key Partitioner Override public int get Num Segments return ch get Num Segments Override public int get Num Owners return ch get Num Owners Override public List Address get Members return ch get Members Override public int get Segment Object key return key Partitioner get Segment key Override public List Address locate Owners For Segment int segment Id return ch locate Owners For Segment segment Id Override public Address locate Primary Owner For Segment int segment Id return ch locate Primary Owner For Segment segment Id Override public boolean is Segment Local To Node Address node Address int segment Id return ch is Segment Local To Node node Address segment Id Override public boolean is Replicated return ch is Replicated Override public Set Integer get Segments For Owner Address owner return ch get Segments For Owner owner Override public Set Integer get Primary Segments For Owner Address owner return ch get Primary Segments For Owner owner Override public String get Routing Table As String return ch get Routing Table As String Override public boolean is Key Local To Node Address node Address Object key int segment ch is Replicated get Segment key return ch is Segment Local To Node node Address segment Override public Hash get Hash Function return ch get Hash Function public Key Partitioner get Key Partitioner return key Partitioner Override public void to Scoped State Scoped Persistent State state ch to Scoped State state Override public Consistent Hash remap Addresses Unary Operator Address remapper return ch remap Addresses remapper Override public boolean equals Object o if this o return true if o null get Class o get Class return false Partitioner Consistent Hash that Partitioner Consistent Hash o if ch equals that ch return false return key Partitioner equals that key Partitioner Override public int hash Code int result ch hash Code result result key Partitioner hash Code return result Override public String to String return Partitioner Consistent Hash ch 
package org infinispan configuration cache import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set import org infinispan conflict Entry Merge Policy import org infinispan partitionhandling Partition Handling Controls how the cache handles partitioning and or multiple node failures author Mircea Markus since public class Partition Handling Configuration Deprecated public static final Attribute Definition Boolean Attribute Definition builder enabled false immutable build public static final Attribute Definition Partition Handling Attribute Definition builder when Split Partition Handling immutable build public static final Attribute Definition Entry Merge Policy Attribute Definition builder merge Policy null Entry Merge Policy class immutable build static Attribute Set attribute Definition Set return new Attribute Set Partition Handling Configuration class private final Attribute Set attributes public Partition Handling Configuration Attribute Set attributes this attributes attributes check Protection Deprecated public boolean enabled return when Split Partition Handling public Partition Handling when Split return attributes attribute get public Entry Merge Policy merge Policy return attributes attribute get public Attribute Set attributes return attributes Override public String to String return Partition Handling Configuration attributes attributes Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Partition Handling Configuration other Partition Handling Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true 
package org infinispan configuration cache import static org infinispan configuration cache Partition Handling Configuration import static org infinispan configuration cache Partition Handling Configuration import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration import org infinispan conflict Entry Merge Policy import org infinispan partitionhandling Partition Handling Controls how the cache handles partitioning and or multiple node failures author Mircea Markus since public class Partition Handling Configuration Builder extends Abstract Clustering Configuration Child Builder implements Builder Partition Handling Configuration private final Attribute Set attributes public Partition Handling Configuration Builder Clustering Configuration Builder builder super builder attributes Partition Handling Configuration attribute Definition Set param enabled If code true partitions will enter degraded mode If code false they will keep working independently Deprecated public Partition Handling Configuration Builder enabled boolean enabled when Split enabled Partition Handling Partition Handling return this public Partition Handling Configuration Builder when Split Partition Handling partition Handling attributes attribute set partition Handling return this public Partition Handling Configuration Builder merge Policy Entry Merge Policy merge Policy attributes attribute set merge Policy return this Override public void validate Override public void validate Global Configuration global Config Override public Partition Handling Configuration create return new Partition Handling Configuration attributes protect Override public Builder read Partition Handling Configuration template attributes read template attributes return this 
package org infinispan eviction impl import static org infinispan commons util Util to Str import static org infinispan persistence Persistence Util internal Metadata import static org infinispan persistence manager Persistence Manager Access Mode import java util concurrent Time Unit import java util concurrent atomic Atomic Long import org infinispan commons Cache Exception import org infinispan commons util Iterator Mapper import org infinispan commons util Util import org infinispan configuration cache Configuration import org infinispan container Data Container import org infinispan container entries Internal Cache Entry import org infinispan context impl Immutable Context import org infinispan distribution Distribution Manager import org infinispan eviction Passivation Manager import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan marshall core Marshalled Entry import org infinispan marshall core Marshalled Entry Factory import org infinispan notifications cachelistener Cache Notifier import org infinispan persistence manager Persistence Manager import org infinispan persistence spi Persistence Exception import org infinispan util Time Service import org infinispan util logging Log import org infinispan util logging Log Factory public class Passivation Manager Impl implements Passivation Manager Persistence Manager persistence Manager Cache Notifier notifier Configuration cfg private volatile boolean skip On Stop false boolean stats Enabled false boolean enabled false private static final Log log Log Factory get Log Passivation Manager Impl class private final Atomic Long passivations new Atomic Long private Data Container Object Object container private Time Service time Service private static final boolean trace log is Trace Enabled private Marshalled Entry Factory marshalled Entry Factory private Distribution Manager distribution Manager Inject public void inject Persistence Manager persistence Manager Cache Notifier notifier Configuration cfg Data Container container Time Service time Service Marshalled Entry Factory marshalled Entry Factory Distribution Manager distribution Manager this persistence Manager persistence Manager this notifier notifier this cfg cfg this container container this time Service time Service this marshalled Entry Factory marshalled Entry Factory this distribution Manager distribution Manager Start priority public void start enabled cfg persistence passivation cfg persistence using Stores if enabled stats Enabled cfg jmx Statistics enabled Override public boolean is Enabled return enabled private boolean is Key Object key return distribution Manager null distribution Manager get Cache Topology is Write Owner key Override public void passivate Internal Cache Entry entry Object key if enabled entry null is Key key entry get Key notify listeners that this entry is about to be passivated notifier notify Cache Entry Passivated key entry get Value true Immutable Context null if trace log tracef Passivating entry s to Str key try Marshalled Entry marshalled Entry marshalled Entry Factory new Marshalled Entry entry get Key entry get Value internal Metadata entry persistence Manager write To All Non Tx Stores marshalled Entry if stats Enabled passivations get And Increment catch Cache Exception e log unable To Passivate Entry key e notifier notify Cache Entry Passivated key null false Immutable Context null Override public void passivate All throws Persistence Exception if enabled skip On Stop long start time Service time log passivating All Entries int count container size Including Expired Iterable Marshalled Entry iterable new Iterator Mapper container iterator e marshalled Entry Factory new Marshalled Entry e get Key e get Value internal Metadata e persistence Manager write Batch To All Non Tx Stores iterable log passivated Entries count Util pretty Print Time time Service time Duration start Time Unit Override public void skip Passivation On Stop boolean skip this skip On Stop skip Override public long get Passivations return passivations get Override public boolean get Statistics Enabled return stats Enabled Override public void set Statistics Enabled boolean enabled stats Enabled enabled Override public void reset Statistics passivations set 
package org infinispan util concurrent locks impl import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import java util concurrent Time Unit import org infinispan commons util By Ref import org infinispan factories annotations Inject import org infinispan util Time Service import org infinispan util concurrent locks Deadlock Checker import org infinispan util concurrent locks Extended Lock Promise lock container that creates and maintains a new lock per entry author Pedro Ruivo since public class Per Key Lock Container implements Lock Container private static final int private final Concurrent Map Object Infinispan Lock lock Map private Time Service time Service public Per Key Lock Container lock Map new Concurrent Hash Map Inject public void inject Time Service time Service this time Service time Service for Infinispan Lock lock lock Map values lock set Time Service time Service Override public Extended Lock Promise acquire Object key Object lock Owner long time Time Unit time Unit By Ref Extended Lock Promise reference By Ref create null lock Map compute key a Key lock if lock null lock create Infinispan Lock a Key reference set lock acquire lock Owner time time Unit return lock return reference get Override public Infinispan Lock get Lock Object key return lock Map get key Override public void release Object key Object lock Owner lock Map compute If Present key ignored Key lock lock release lock Owner return lock is Locked null lock remove it if empty Override public int get Num Locks Held int count for Infinispan Lock lock lock Map values if lock is Locked count return count Override public boolean is Locked Object key Infinispan Lock lock lock Map get key return lock null lock is Locked Override public int size return lock Map size Override public void deadlock Check Deadlock Checker deadlock Checker lock Map values for Each lock lock deadlock Check deadlock Checker Override public String to String return Per Key Lock Container locks lock Map private Infinispan Lock create Infinispan Lock Object key return new Infinispan Lock time Service lock Map compute If Present key ignored Key lock lock is Locked lock null 
package org infinispan configuration cache import static org infinispan configuration cache Persistence Configuration import java lang reflect Constructor import java util Array List import java util List import java util concurrent Time Unit import org infinispan commons Cache Configuration Exception import org infinispan commons configuration Builder import org infinispan commons configuration Configuration Utils import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration import org infinispan util logging Log import org infinispan util logging Log Factory Configuration for cache stores public class Persistence Configuration Builder extends Abstract Configuration Child Builder implements Builder Persistence Configuration private static final Log log Log Factory get Log Persistence Configuration Builder class private final List Store Configuration Builder stores new Array List Store Configuration Builder private final Attribute Set attributes protected Persistence Configuration Builder Configuration Builder builder super builder attributes Persistence Configuration attribute Definition Set public Persistence Configuration Builder passivation boolean b attributes attribute set b return this If true data is only written to the cache store when it is evicted from memory a phenomenon known as passivation Next time the data is requested it will be activated which means that data will be brought back to memory and removed from the persistent store This gives you the ability to overflow to disk similar to swapping in an operating system br br If false the cache store contains a copy of the contents in memory so writes to cache result in cache store writes This essentially gives you a write through configuration boolean passivation return attributes attribute get Adds a cache loader which uses the specified builder class to build its configuration public extends Store Configuration Builder add Store Class klass try Constructor constructor klass get Declared Constructor Persistence Configuration Builder class builder constructor new Instance this this stores add builder return builder catch Exception e throw new Cache Configuration Exception Could not instantiate loader configuration builder klass get Name e Adds a cache loader which uses the specified builder instance to build its configuration param builder an instance of link Store Configuration Builder public Store Configuration Builder add Store Store Configuration Builder builder this stores add builder return builder Adds a cluster cache loader public Cluster Loader Configuration Builder add Cluster Loader Cluster Loader Configuration Builder builder new Cluster Loader Configuration Builder this this stores add builder return builder Adds a single file cache store public Single File Store Configuration Builder add Single File Store Single File Store Configuration Builder builder new Single File Store Configuration Builder this this stores add builder return builder Removes any configured stores from this builder public Persistence Configuration Builder clear Stores this stores clear return this Override public void validate boolean is Local Cache builder clustering create cache Mode equals Cache Mode int num Fetch Persistent State for Store Configuration Builder b stores b validate Store Configuration store Configuration b create if store Configuration shared store Configuration singleton Store enabled throw log singleton Store Cannot Be Shared store Configuration get Class get Simple Name if store Configuration shared store Configuration transactional is Local Cache throw log clustered Transactional Store Must Be Shared store Configuration get Class get Simple Name if store Configuration async enabled store Configuration transactional throw log transactional Store Cannot Be Async store Configuration get Class get Simple Name if store Configuration fetch Persistent State num Fetch Persistent State if num Fetch Persistent State throw log only One Fetch Persistent Store Allowed If we have a store we have to guarantee the reaper expiration thread is enabled if stores is Empty boolean reaper Enabled builder expiration reaper Enabled long wakeup Interval builder expiration wakeup Interval if reaper Enabled wakeup Interval builder expiration enable Reaper if wakeup Interval log debug Store present and expiration reaper wakeup was less than explicitly enabling and setting wakeup interval to minute builder expiration wake Up Interval Time Unit else log debug Store present however expiration reaper was not enabled explicitly enabling Override public void validate Global Configuration global Config for Store Configuration Builder b stores b validate global Config Override public Persistence Configuration create List Store Configuration stores new Array List Store Configuration this stores size for Store Configuration Builder loader this stores stores add loader create return new Persistence Configuration attributes protect stores Suppress Warnings unchecked Override public Persistence Configuration Builder read Persistence Configuration template this attributes read template attributes clear Stores for Store Configuration c template stores Class extends Store Configuration Builder builder Class get Builder Class c Store Configuration Builder builder this add Store builder Class builder read c return this private Class extends Store Configuration Builder get Builder Class Store Configuration c Class extends Store Configuration Builder builder Class Class extends Store Configuration Builder Configuration Utils builder For Non Strict c if builder Class null builder Class Custom Store Configuration Builder class return builder Class public List Store Configuration Builder stores return stores Override public String to String return Persistence Configuration Builder stores stores attributes attributes 
package org infinispan persistence manager import static java util concurrent Time Unit import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan factories Known Component Names import static org infinispan persistence manager Persistence Manager Access Mode import java util Array List import java util Arrays import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import java util concurrent Executor import java util concurrent Executor Service import java util concurrent Time Unit import java util concurrent atomic Atomic Integer import java util concurrent atomic Atomic Reference import java util concurrent locks Read Write Lock import java util concurrent locks Reentrant Read Write Lock import java util function Consumer import javax transaction Transaction import javax transaction Transaction Manager import org infinispan Advanced Cache import org infinispan commons Cache Exception import org infinispan commons api Lifecycle import org infinispan commons io Byte Buffer Factory import org infinispan commons marshall Streaming Marshaller import org infinispan commons util By Ref import org infinispan commons util Util import org infinispan configuration cache Cache Mode import org infinispan configuration cache Configuration import org infinispan configuration cache Store Configuration import org infinispan context Flag import org infinispan context Invocation Context import org infinispan eviction Eviction Type import org infinispan expiration Expiration Manager import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan filter Key Filter import org infinispan interceptors Async Interceptor import org infinispan interceptors Async Interceptor Chain import org infinispan interceptors impl Cache Loader Interceptor import org infinispan interceptors impl Cache Writer Interceptor import org infinispan interceptors impl Transactional Store Interceptor import org infinispan marshall core Marshalled Entry import org infinispan marshall core Marshalled Entry Factory import org infinispan metadata Metadata import org infinispan metadata impl Internal Metadata Impl import org infinispan persistence Initialization Context Impl import org infinispan persistence async Advanced Async Cache Loader import org infinispan persistence async Advanced Async Cache Writer import org infinispan persistence async Async Cache Loader import org infinispan persistence async Async Cache Writer import org infinispan persistence async State import org infinispan persistence factory Cache Store Factory Registry import org infinispan persistence spi Advanced Cache Expiration Writer import org infinispan persistence spi Advanced Cache Loader import org infinispan persistence spi Advanced Cache Writer import org infinispan persistence spi Cache Loader import org infinispan persistence spi Cache Writer import org infinispan persistence spi Flag Affected Store import org infinispan persistence spi Local Only Cache Loader import org infinispan persistence spi Persistence Exception import org infinispan persistence spi Transactional Cache Writer import org infinispan persistence support Advanced Singleton Cache Writer import org infinispan persistence support Batch Modification import org infinispan persistence support Delegating Cache Loader import org infinispan persistence support Delegating Cache Writer import org infinispan persistence support Singleton Cache Writer import org infinispan util Time Service import org infinispan util concurrent Within Thread Executor import org infinispan util logging Log import org infinispan util logging Log Factory public class Persistence Manager Impl implements Persistence Manager private static final Log log Log Factory get Log Persistence Manager Impl class private static final boolean trace log is Trace Enabled Configuration configuration Advanced Cache Object Object cache Streaming Marshaller m Transaction Manager transaction Manager private Time Service time Service private final List Cache Loader loaders new Array List private final List Cache Writer non Tx Writers new Array List private final List Transactional Cache Writer tx Writers new Array List private final Read Write Lock stores Mutex new Reentrant Read Write Lock private final Map Object Store Configuration config Map new Hash Map private Cache Store Factory Registry cache Store Factory Registry private Expiration Manager expiration Manager private Advanced Purge Listener advanced Listener making it volatile as it might change after Start so it needs the visibility volatile boolean enabled private Executor persistence Executor private Byte Buffer Factory byte Buffer Factory private Marshalled Entry Factory marshalled Entry Factory private volatile boolean clear On Stop private boolean preloaded Inject public void inject Advanced Cache Object Object cache Streaming Marshaller marshaller Configuration configuration Transaction Manager transaction Manager Time Service time Service Component Name Executor Service persistence Executor Byte Buffer Factory byte Buffer Factory Marshalled Entry Factory marshalled Entry Factory Cache Store Factory Registry cache Store Factory Registry Expiration Manager expiration Manager this cache cache this m marshaller this configuration configuration this transaction Manager transaction Manager this time Service time Service this persistence Executor persistence Executor this byte Buffer Factory byte Buffer Factory this marshalled Entry Factory marshalled Entry Factory this cache Store Factory Registry cache Store Factory Registry this expiration Manager expiration Manager this advanced Listener new Advanced Purge Listener expiration Manager Override Start priority public void start preloaded false enabled configuration persistence using Stores if enabled return try create Loaders And Writers Transaction xa Tx null if transaction Manager null xa Tx transaction Manager suspend try Set undelegated new Hash Set black magic to make sure the store start only gets invoked once Consumer Cache Writer start Writer writer writer start if writer instanceof Delegating Cache Writer Cache Writer actual undelegate writer actual start undelegated add actual else undelegated add writer if config Map get writer purge On Startup if writer instanceof Advanced Cache Writer throw new Persistence Exception purge On Startup can only be set on stores implementing Advanced Cache Writer class get Name Advanced Cache Writer writer clear non Tx Writers for Each start Writer tx Writers for Each start Writer for Cache Loader l loaders if undelegated contains l l start if l instanceof Delegating Cache Loader Cache Loader actual undelegate l if undelegated contains actual actual start finally if xa Tx null transaction Manager resume xa Tx catch Exception e throw new Cache Exception Unable to start cache loaders e Override Stop public void stop If needed clear the persistent store before stopping if clear On Stop clear All Stores Access Mode Set undelegated new Hash Set Consumer Cache Writer stop Writers writer writer stop if writer instanceof Delegating Cache Writer Cache Writer actual undelegate writer actual stop undelegated add actual else undelegated add writer non Tx Writers for Each stop Writers non Tx Writers clear tx Writers for Each stop Writers tx Writers clear for Cache Loader l loaders if undelegated contains l l stop if l instanceof Delegating Cache Loader Cache Loader actual undelegate l if undelegated contains actual actual stop loaders clear preloaded false Override public boolean is Preloaded return preloaded Override Start priority public void preload if enabled return Advanced Cache Loader preload Cl null for Cache Loader l loaders if config Map get l preload if l instanceof Advanced Cache Loader throw new Persistence Exception Can not preload from cache loader l get Class get Name as it does n t implement Advanced Cache Loader class get Name preload Cl Advanced Cache Loader l if preload Cl instanceof Advanced Async Cache Loader preload Cl Advanced Cache Loader Advanced Async Cache Loader preload Cl undelegate break if preload Cl null return long start time Service time final long max Entries get Max Entries final Atomic Integer loaded Entries new Atomic Integer final Advanced Cache Object Object flagged Cache get Cache For State Insertion By Ref Boolean preloaded new By Ref Boolean true preload Cl process null me task Context if loaded Entries get And Increment max Entries task Context stop preloaded set false return Metadata metadata me get Metadata null Internal Metadata Impl me get Metadata actual null the downcast will go away with preload Key flagged Cache me get Key me get Value metadata new Within Thread Executor true true this preloaded preloaded get log debugf Preloaded d keys in s loaded Entries get Util pretty Print Time time Service time Duration start Override public void disable Store String store Type if enabled stores Mutex write Lock lock try remove Cache Loader store Type loaders remove Cache Writer store Type non Tx Writers remove Cache Writer store Type tx Writers finally stores Mutex write Lock unlock if loaders is Empty non Tx Writers is Empty tx Writers is Empty Async Interceptor Chain chain cache get Advanced Cache get Async Interceptor Chain Async Interceptor loader Interceptor chain find Interceptor Extending Cache Loader Interceptor class if loader Interceptor null log persistence Without Cache Loader Interceptor else chain remove Interceptor loader Interceptor get Class Async Interceptor writer Interceptor chain find Interceptor Extending Cache Writer Interceptor class if writer Interceptor null writer Interceptor chain find Interceptor With Class Transactional Store Interceptor class if writer Interceptor null log persistence Without Cache Write Interceptor else chain remove Interceptor writer Interceptor get Class else chain remove Interceptor writer Interceptor get Class enabled false Override public Set get Stores Class store Class stores Mutex read Lock lock try Set result new Hash Set for Cache Loader l loaders Cache Loader real undelegate l if store Class is Instance real result add real Consumer Cache Writer get Writers writer Cache Writer real undelegate writer if store Class is Instance real result add real non Tx Writers for Each get Writers tx Writers for Each get Writers return result finally stores Mutex read Lock unlock Override public Collection String get Stores As String stores Mutex read Lock lock try Set String loader Types new Hash Set loaders size for Cache Loader loader loaders loader Types add undelegate loader get Class get Name for Cache Writer writer non Tx Writers loader Types add undelegate writer get Class get Name for Cache Writer writer tx Writers loader Types add undelegate writer get Class get Name return loader Types finally stores Mutex read Lock unlock private static class Advanced Purge Listener implements Advanced Cache Expiration Writer Expiration Purge Listener private final Expiration Manager expiration Manager private Advanced Purge Listener Expiration Manager expiration Manager this expiration Manager expiration Manager Override public void marshalled Entry Purged Marshalled Entry entry expiration Manager handle In Store Expiration entry Override public void entry Purged key expiration Manager handle In Store Expiration key Override public void purge Expired if enabled return long start try if trace log trace Purging cache store of expired entries start time Service time stores Mutex read Lock lock try Consumer Cache Writer purge Writer writer Shared stores should only be purged by the coordinator if config Map get writer shared cache get Cache Manager is Coordinator return if writer instanceof Advanced Cache Expiration Writer Advanced Cache Expiration Writer writer purge persistence Executor advanced Listener else if writer instanceof Advanced Cache Writer Advanced Cache Writer writer purge persistence Executor key expiration Manager handle In Store Expiration key non Tx Writers for Each purge Writer tx Writers for Each purge Writer finally stores Mutex read Lock unlock if trace log tracef Purging cache store completed in s Util pretty Print Time time Service time Duration start Time Unit catch Exception e log exception Purging Data Container e Override public void clear All Stores Access Mode mode stores Mutex read Lock lock try Apply to tx Writers as well as clear does not happen in a Tx context Consumer Cache Writer clear Writer writer if writer instanceof Advanced Cache Writer if mode can Perform config Map get writer Advanced Cache Writer writer clear non Tx Writers for Each clear Writer tx Writers for Each clear Writer finally stores Mutex read Lock unlock Override public boolean delete From All Stores Object key Access Mode mode stores Mutex read Lock lock try boolean removed false for Cache Writer w non Tx Writers if mode can Perform config Map get w removed w delete key return removed finally stores Mutex read Lock unlock Override public void process On All Stores Key Filter key Filter Advanced Cache Loader Cache Loader Task task boolean fetch Value boolean fetch Metadata process On All Stores persistence Executor key Filter task fetch Value fetch Metadata Override public void process On All Stores Executor executor Key Filter key Filter Advanced Cache Loader Cache Loader Task task boolean fetch Value boolean fetch Metadata process On All Stores executor key Filter task fetch Value fetch Metadata Override public void process On All Stores Key Filter key Filter Advanced Cache Loader Cache Loader Task task boolean fetch Value boolean fetch Metadata Access Mode mode process On All Stores persistence Executor key Filter task fetch Value fetch Metadata mode Override public void process On All Stores Executor executor Key Filter key Filter Advanced Cache Loader Cache Loader Task task boolean fetch Value boolean fetch Metadata Access Mode mode stores Mutex read Lock lock try for Cache Loader loader loaders if mode can Perform config Map get loader loader instanceof Advanced Cache Loader Advanced Cache Loader loader process key Filter task executor fetch Value fetch Metadata finally stores Mutex read Lock unlock Override public Marshalled Entry load From All Stores Object key Invocation Context context stores Mutex read Lock lock try for Cache Loader l loaders if context is Origin Local is Local Only Loader l continue Marshalled Entry load l load key if load null return load return null finally stores Mutex read Lock unlock private boolean is Local Only Loader Cache Loader loader if loader instanceof Local Only Cache Loader return true if loader instanceof Delegating Cache Loader Cache Loader unwrapped Loader Delegating Cache Loader loader undelegate if unwrapped Loader instanceof Local Only Cache Loader return true return false Override public void write To All Non Tx Stores Marshalled Entry marshalled Entry Access Mode access Mode write To All Non Tx Stores marshalled Entry access Mode Override public void write To All Non Tx Stores Marshalled Entry marshalled Entry Access Mode access Mode long flags stores Mutex read Lock lock try non Tx Writers stream filter writer writer instanceof Flag Affected Store Flag Affected Store class cast writer should Write flags filter writer access Mode can Perform config Map get writer for Each writer writer write marshalled Entry finally stores Mutex read Lock unlock Override public void write Batch To All Non Tx Stores Iterable Marshalled Entry entries Access Mode access Mode long flags stores Mutex read Lock lock try non Tx Writers stream filter writer writer instanceof Flag Affected Store Flag Affected Store class cast writer should Write flags filter writer access Mode can Perform config Map get writer for Each writer writer write Batch entries finally stores Mutex read Lock unlock Override public void delete Batch From All Non Tx Stores Iterable Object keys Access Mode access Mode long flags stores Mutex read Lock lock try non Tx Writers stream filter writer access Mode can Perform config Map get writer for Each writer writer delete Batch keys finally stores Mutex read Lock unlock Override public void prepare All Tx Stores Transaction transaction Batch Modification batch Modification Access Mode access Mode throws Persistence Exception stores Mutex read Lock lock try for Cache Writer writer tx Writers if access Mode can Perform config Map get writer configuration clustering cache Mode equals Cache Mode Transactional Cache Writer tx Writer Transactional Cache Writer undelegate writer tx Writer prepare With Modifications transaction batch Modification finally stores Mutex read Lock unlock Override public void commit All Tx Stores Transaction transaction Access Mode access Mode perform On All Tx Stores access Mode writer writer commit transaction Override public void rollback All Tx Stores Transaction transaction Access Mode access Mode perform On All Tx Stores access Mode writer writer rollback transaction Override public Advanced Cache Loader get State Transfer Provider stores Mutex read Lock lock try for Cache Loader l loaders Store Configuration store Configuration config Map get l if store Configuration fetch Persistent State store Configuration shared return Advanced Cache Loader l return null finally stores Mutex read Lock unlock Override public int size stores Mutex read Lock lock try for Cache Loader l loaders if l instanceof Advanced Cache Loader return Advanced Cache Loader l size finally stores Mutex read Lock unlock return Override public void set Clear On Stop boolean clear On Stop this clear On Stop clear On Stop public List Cache Loader get All Loaders return Collections unmodifiable List loaders public List Cache Writer get All Writers return Collections unmodifiable List non Tx Writers public List Cache Writer get All Tx Writers return Collections unmodifiable List tx Writers private void create Loaders And Writers for Store Configuration cfg configuration persistence stores Object bare Instance cache Store Factory Registry create Instance cfg Store Configuration processed Configuration cache Store Factory Registry process Store Configuration cfg Cache Writer writer create Cache Writer bare Instance Cache Loader loader create Cache Loader bare Instance writer post Process Writer processed Configuration writer loader post Process Reader processed Configuration writer loader Initialization Context Impl ctx new Initialization Context Impl processed Configuration cache m time Service byte Buffer Factory marshalled Entry Factory initialize Loader processed Configuration loader ctx initialize Writer processed Configuration writer ctx initialize Bare Instance bare Instance ctx private Cache Loader post Process Reader Store Configuration cfg Cache Writer writer Cache Loader loader if cfg async enabled loader null writer null loader create Async Loader loader Async Cache Writer writer return loader private Cache Writer post Process Writer Store Configuration cfg Cache Writer writer if writer null if cfg ignore Modifications writer null else if cfg singleton Store enabled writer create Singleton Writer cfg writer else if cfg async enabled writer create Async Writer writer return writer private Cache Loader create Async Loader Cache Loader loader Async Cache Writer async Writer Atomic Reference State state async Writer get State loader loader instanceof Advanced Cache Loader new Advanced Async Cache Loader loader state new Async Cache Loader loader state return loader private Singleton Cache Writer create Singleton Writer Store Configuration cfg Cache Writer writer return writer instanceof Advanced Cache Writer new Advanced Singleton Cache Writer writer cfg singleton Store new Singleton Cache Writer writer cfg singleton Store private void initialize Writer Store Configuration cfg Cache Writer writer Initialization Context Impl ctx if writer null if writer instanceof Delegating Cache Writer writer init ctx if undelegate writer instanceof Transactional Cache Writer cfg transactional if configuration transaction transaction Mode is Transactional tx Writers add Transactional Cache Writer writer else If cache is non transactional then it is not possible for the store to be so treat as normal store Should n t happen as a Cache Configuration Exception should be thrown on validation non Tx Writers add writer else non Tx Writers add writer config Map put writer cfg private void initialize Loader Store Configuration cfg Cache Loader loader Initialization Context Impl ctx if loader null if loader instanceof Delegating Cache Loader loader init ctx loaders add loader config Map put loader cfg private void initialize Bare Instance Object instance Initialization Context Impl ctx the delegates only propagate init if the underlaying object is a delegate as well we do this in order to assure the init is only invoked once if instance instanceof Cache Writer Cache Writer instance init ctx else Cache Loader instance init ctx private Cache Loader create Cache Loader Object instance return instance instanceof Cache Loader Cache Loader instance null private Cache Writer create Cache Writer Object instance return instance instanceof Cache Writer Cache Writer instance null protected Async Cache Writer create Async Writer Cache Writer writer return writer instanceof Advanced Cache Writer new Advanced Async Cache Writer writer new Async Cache Writer writer private Cache Loader undelegate Cache Loader l return l instanceof Delegating Cache Loader Delegating Cache Loader l undelegate l private Cache Writer undelegate Cache Writer w return w instanceof Delegating Cache Writer Delegating Cache Writer w undelegate w private Advanced Cache Object Object get Cache For State Insertion List Flag flags new Array List Arrays as List boolean has Shared false for Cache Writer w non Tx Writers if config Map get w shared has Shared true break if has Shared if index Shareable flags add else flags add return cache get Advanced Cache with Flags flags to Array new Flag flags size private boolean index Shareable return configuration indexing index Shareable private long get Max Entries if configuration memory is Eviction Enabled configuration memory eviction Type Eviction Type return configuration memory size return Long private void preload Key Advanced Cache Object Object cache Object key Object value Metadata metadata final Transaction transaction suspend If Needed boolean success false try try begin If Needed cache put key value metadata success true catch Exception e throw new Persistence Exception Unable to preload e finally commit If Needed success finally commit If Needed can throw an exception so we need a try finally resume If Needed transaction private void resume If Needed Transaction transaction if configuration transaction transaction Mode is Transactional transaction Manager null transaction null try transaction Manager resume transaction catch Exception e throw new Persistence Exception e private Transaction suspend If Needed if configuration transaction transaction Mode is Transactional transaction Manager null try return transaction Manager suspend catch Exception e throw new Persistence Exception e return null private void begin If Needed if configuration transaction transaction Mode is Transactional transaction Manager null try transaction Manager begin catch Exception e throw new Persistence Exception e private void commit If Needed boolean success if configuration transaction transaction Mode is Transactional transaction Manager null try if success transaction Manager commit else transaction Manager rollback catch Exception e throw new Persistence Exception e public Executor get Persistence Executor return persistence Executor public Streaming Marshaller get Marshaller return m private void remove Cache Loader String store Type Collection Cache Loader collection for Iterator Cache Loader it collection iterator it has Next Cache Loader loader it next do Remove it store Type loader undelegate loader private void remove Cache Writer String store Type Collection extends Cache Writer collection for Iterator extends Cache Writer it collection iterator it has Next Cache Writer writer it next do Remove it store Type writer undelegate writer private void do Remove Iterator extends Lifecycle it String store Type Lifecycle wrapper Lifecycle actual if actual get Class get Name equals store Type wrapper stop if actual wrapper actual stop it remove private void perform On All Tx Stores Access Mode access Mode Consumer Transactional Cache Writer action stores Mutex read Lock lock try tx Writers stream filter writer access Mode can Perform config Map get writer for Each action finally stores Mutex read Lock unlock 
package org infinispan topology import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import java util import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan remoting transport Address Persistent special link Address whose purpose is to remain unchanged across node restarts when using global state author Tristan Tarrant since public class Persistent implements Address final uuid final int hash Code private Persistent uuid this uuid uuid this hash Code uuid hash Code public Persistent long msb long lsb this new msb lsb public static Persistent random return new Persistent Util thread Local Random public static Persistent from String String name return new Persistent from String name public long get Most Significant Bits return uuid get Most Significant Bits public long get Least Significant Bits return uuid get Least Significant Bits Override public int compare To Address o Persistent other Persistent o return uuid compare To other uuid Override public int hash Code return hash Code Override public String to String return uuid to String Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Persistent other Persistent obj if uuid null if other uuid null return false else if uuid equals other uuid return false return true public static class Externalizer extends Abstract Externalizer Persistent Override public Set Class extends Persistent get Type Classes return Collections Class extends Persistent singleton Persistent class Override public void write Object Object Output output Persistent uuid throws Exception output write Long uuid get Most Significant Bits output write Long uuid get Least Significant Bits Override public Persistent read Object Object Input input throws Exception Class Not Found Exception return new Persistent input read Long input read Long Override public Integer get Id return Ids 
package org infinispan topology import java util Array List import java util List import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import java util function Unary Operator import org infinispan remoting transport Address import org infinispan util logging Log import org infinispan util logging Log Factory Implementation of the link Persistent Manager interface author Tristan Tarrant since public class Persistent Manager Impl implements Persistent Manager private static final Log log Log Factory get Log Persistent Manager Impl class private final Concurrent Map Address Persistent address uuid new Concurrent Hash Map private final Concurrent Map Persistent Address uuid address new Concurrent Hash Map Override public void add Persistent Address Mapping Address address Persistent persistent address uuid put address persistent uuid address put persistent address Override public Persistent get Persistent Uuid Address address return address uuid get address Override public Address get Address Persistent persistent return uuid address get persistent Override public void remove Persistent Address Mapping Persistent persistent if persistent null null would be invalid here but letting it proceed would trigger an which would hide the real issue return Address address uuid address get persistent if address null address uuid remove address uuid address remove persistent Override public void remove Persistent Address Mapping Address address Persistent uuid address uuid get address if uuid null uuid address remove uuid address uuid remove address Override public List Persistent map Addresses List Address addresses Array List Persistent list new Array List addresses size for Address address addresses Persistent persistent address uuid get address if persistent null This should never happen but if it does better log it here to avoid it being swallowed elsewhere Null Pointer Exception npe new Null Pointer Exception log fatal Can not find mapping for address address npe throw npe else list add persistent return list Override public Unary Operator Address address To Persistent return address address uuid get address Override public Unary Operator Address persistent To Address return address uuid address get address 
package org infinispan jmx import java lang management Management Factory import java util Properties import javax management Bean Server Default implementation for link Bean Server Lookup will return the platform Bean server p Note to enable platform Bean Server the following system property should be passed to the Sun b Dcom sun management jmxremote b author Mircea Markus jboss com since public class Platform Bean Server Lookup implements Bean Server Lookup Override public Bean Server get Bean Server Properties properties return Management Factory get Platform Bean Server 
package org infinispan partitionhandling impl import static org infinispan util logging events Messages import java util Array List import java util Comparator import java util List import java util Map import java util Objects import java util stream Collectors import org infinispan distribution ch Consistent Hash import org infinispan distribution ch Consistent Hash Factory import org infinispan partitionhandling Availability Mode import org infinispan remoting transport Address import org infinispan topology Cache Join Info import org infinispan topology Cache Status Response import org infinispan topology Cache Topology import org infinispan topology Persistent Manager import org infinispan util logging Log import org infinispan util logging Log Factory import org infinispan util logging events Event Log Category import org infinispan util logging events Event Log Manager public class Prefer Availability Strategy implements Availability Strategy public static final Comparator Cache Status Response s s if s null return Cache Topology t s get Cache Topology Cache Topology t s get Cache Topology int topology Id Integer t get Topology Id compare To t get Topology Id if topology Id return topology Id int rebalance Id Integer t get Rebalance Id compare To t get Rebalance Id if rebalance Id return topology Id List Address m t get Members List Address m t get Members if m size m size int compare Address m get compare To m get if compare Address return Integer t hash Code compare To t hash Code return m size m size private static final Log log Log Factory get Log Prefer Availability Strategy class private final Event Log Manager event Log Manager private final Persistent Manager persistent Manager private final Lost Data Check lost Data Check private final boolean resolve Conflicts On Merge public Prefer Availability Strategy Event Log Manager event Log Manager Persistent Manager persistent Manager Lost Data Check lost Data Check boolean resolve Conflicts On Merge this event Log Manager event Log Manager this persistent Manager persistent Manager this lost Data Check lost Data Check this resolve Conflicts On Merge resolve Conflicts On Merge Override public void on Join Availability Strategy Context context Address joiner context queue Rebalance context get Expected Members Override public void on Graceful Leave Availability Strategy Context context Address leaver Cache Topology current Topology context get Current Topology List Address new Members new Array List current Topology get Members new Members remove leaver if new Members is Empty log debugf The last node of cache s left context get Cache Name context update Current Topology new Members return if context get Stable Topology null lost Data Check test context get Stable Topology get Current new Members event Log Manager get Event Logger context context get Cache Name warn Event Log Category lost Data Because Of Graceful Leaver leaver We have to do this in case rebalancing is disabled or there is another rebalance in progress context update Current Topology new Members context queue Rebalance new Members Override public void on Cluster View Change Availability Strategy Context context List Address cluster Members Cache Topology current Topology context get Current Topology List Address new Members new Array List current Topology get Members if new Members retain All cluster Members log tracef Cache s did not lose any members skipping rebalance context get Cache Name return check For Lost Data context new Members We have to do the update in case rebalancing is disabled or there is another rebalance in progress context update Current Topology new Members context queue Rebalance new Members protected void check For Lost Data Availability Strategy Context context List Address new Members Cache Topology stable Topology context get Stable Topology List Address stable Members stable Topology get Members List Address lost Members new Array List stable Members lost Members remove All new Members if lost Data Check test stable Topology get Current new Members event Log Manager get Event Logger context context get Cache Name fatal Event Log Category lost Data Because Of Abrupt Leavers lost Members else if lost Members size Math ceil stable Members size d event Log Manager get Event Logger context context get Cache Name warn Event Log Category minority Partition new Members lost Members stable Members Override public void on Partition Merge Availability Strategy Context context Map Address Cache Status Response status Response Map We must first sort the response list here to ensure that the max Topology is chosen deterministically in the event that multiple topologies exist with the same number of members List Cache Status Response status Responses status Response Map values stream sorted collect Collectors to List Pick the biggest stable topology i e the one with most members Cache Topology max Stable Topology null for Cache Status Response response status Responses Cache Topology stable Topology response get Stable Topology if stable Topology null The node has n t properly joined yet continue if max Stable Topology null max Stable Topology get Members size stable Topology get Members size max Stable Topology stable Topology Now pick the biggest current topology derived from the biggest stable topology Cache Topology max Topology null for Cache Status Response response status Responses Cache Topology stable Topology response get Stable Topology if Objects equals stable Topology max Stable Topology continue Cache Topology topology response get Cache Topology if topology null The node has n t properly joined yet continue if max Topology null max Topology get Members size topology get Members size max Topology topology if max Topology null log debugf No current topology recovered only joiners for cache s context get Cache Name Since we picked the biggest topology its topology id may not be the biggest int max Topology Id int max Rebalance Id for Cache Status Response response status Responses Cache Topology topology response get Cache Topology if topology null if max Topology Id topology get Topology Id max Topology Id topology get Topology Id if max Rebalance Id topology get Rebalance Id max Rebalance Id topology get Rebalance Id Increment the topology id so that it s bigger than any topology that might have been sent by the old coordinator is enough because there nodes wait for the new Groups view before answering the status request and after they have the new view they ca n t process topology updates with the old view id Also cancel any pending rebalance by removing the pending because we do n t recover the rebalance confirmation status yet Cache Topology merged Topology null List Address new Members context get Expected Members boolean resolve Conflicts resolve Conflicts On Merge is Split Brain Healing context max Topology max Stable Topology if max Topology null If we are required to resolve Conflicts then we utilise the of the expected members This is necessary so that during conflict resolution writes go to all owners if resolve Conflicts Cache Join Info join Info context get Join Info Consistent Hash Factory chf join Info get Consistent Hash Factory Consistent Hash mergehash chf create join Info get Hash Function join Info get Num Owners join Info get Num Segments new Members context get Capacity Factors merged Topology new Cache Topology max Topology Id max Rebalance Id max Topology get Current mergehash mergehash Cache Topology Phase new Members persistent Manager map Addresses new Members else merged Topology new Cache Topology max Topology Id max Rebalance Id max Topology get Current null Cache Topology Phase max Topology get Actual Members persistent Manager map Addresses max Topology get Actual Members context update Topologies After Merge merged Topology max Stable Topology null resolve Conflicts First update the Hs to remove any nodes that left from the current topology List Address surviving Members new Array List new Members if merged Topology null surviving Members retain All merged Topology get Members check For Lost Data context surviving Members context update Current Topology surviving Members Then start a rebalance with the merged members context queue Rebalance new Members If we have more expected members than stable members then we know that a split brain heal is occurring However if the max Topology Size then we know that we have a new coordinator private boolean is Split Brain Healing Availability Strategy Context context Cache Topology max Topology Cache Topology max Stable Topology boolean is New Coordinator max Topology null max Topology get Members size boolean membership Increased is New Coordinator max Stable Topology null context get Expected Members size max Stable Topology get Members size return is New Coordinator membership Increased Override public void on Rebalance End Availability Strategy Context context Do nothing if we need another rebalance it s already in the queue Override public void on Manual Availability Change Availability Strategy Context context Availability Mode new Availability Mode The cache should always be 
package org infinispan commands write import static org infinispan commons util Util to Str import java io Exception import java io Object Input import java io Object Output import org infinispan commands Command Invocation Id import org infinispan commands Metadata Aware Command import org infinispan commands Visitor import org infinispan commons marshall Marshall Util import org infinispan container entries Entry import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan metadata Metadata import org infinispan metadata Metadatas import org infinispan notifications cachelistener Cache Notifier Implements functionality defined by link org infinispan Cache put Object Object author Mircea Markus jboss com since public class Put Key Value Command extends Abstract Data Write Command implements Metadata Aware Command public static final byte private Object value private boolean put If Absent private Cache Notifier Object Object notifier private boolean successful true private Metadata metadata private Value Matcher value Matcher public Put Key Value Command public Put Key Value Command Object key Object value boolean put If Absent Cache Notifier notifier Metadata metadata long flags Bit Set Command Invocation Id command Invocation Id super key flags Bit Set command Invocation Id this value value this put If Absent put If Absent this value Matcher put If Absent Value Matcher Value Matcher noinspection unchecked this notifier notifier this metadata metadata public void init Cache Notifier notifier noinspection unchecked this notifier notifier public Object get Value return value public void set Value Object value this value value Override public Object accept Visitor Invocation Context ctx Visitor visitor throws Throwable return visitor visit Put Key Value Command ctx this Override public Load Type load Type if is Conditional has Any Flag Flag Bit Sets return Load Type else return Load Type Override public Object perform Invocation Context ctx throws Throwable It s not worth looking up the entry if we re never going to apply the change if value Matcher Value Matcher successful false return null noinspection unchecked Entry Object Object e Entry ctx lookup Entry key if e null throw new Illegal State Exception Not wrapped Object prev Value e get Value if value Matcher matches prev Value null value successful false return prev Value return perform Put e ctx Override public byte get Command Id return Override public void write To Object Output output throws Exception output write Object key output write Object value output write Object metadata Marshall Util marshall Enum value Matcher output Command Invocation Id write To output command Invocation Id output write Long Flag Bit Sets copy Without Remotable Flags get Flags Bit Set output write Boolean put If Absent Override public void read From Object Input input throws Exception Class Not Found Exception key input read Object value input read Object metadata Metadata input read Object value Matcher Marshall Util unmarshall Enum input Value Matcher value Of command Invocation Id Command Invocation Id read From input set Flags Bit Set input read Long put If Absent input read Boolean Override public Metadata get Metadata return metadata Override public void set Metadata Metadata metadata this metadata metadata public boolean is Put If Absent return put If Absent public void set Put If Absent boolean put If Absent this put If Absent put If Absent Override public boolean equals Object o if this o return true if o null get Class o get Class return false if super equals o return false Put Key Value Command that Put Key Value Command o if put If Absent that put If Absent return false if value null value equals that value that value null return false return metadata null metadata equals that metadata that metadata null Override public int hash Code int result super hash Code result result value null value hash Code result result put If Absent result result metadata null metadata hash Code return result Override public String to String return new String Builder append Put Key Value Command key append to Str key append value append to Str value append flags append print Flags append command Invocation Id append Command Invocation Id show command Invocation Id append put If Absent append put If Absent append value Matcher append value Matcher append metadata append metadata append successful append successful append topology Id append get Topology Id append to String Override public boolean is Successful return successful Override public boolean is Conditional return put If Absent Override public Value Matcher get Value Matcher return value Matcher Override public void set Value Matcher Value Matcher value Matcher this value Matcher value Matcher Override public void init Backup Write Rpc Command Backup Write Rpc Command command command set Write command Invocation Id key value metadata get Flags Bit Set get Topology Id Override public void fail successful false Override public boolean is Return Value Expected return is Conditional super is Return Value Expected private Object perform Put Entry Object Object e Invocation Context ctx Object entry Value e get Value Object o Non tx and tx both have this set if it was state transfer if has Any Flag Flag Bit Sets Flag Bit Sets if e is Created notifier notify Cache Entry Created key value metadata true ctx this else notifier notify Cache Entry Modified key value metadata entry Value e get Metadata true ctx this o e set Value value Metadatas update Metadata e metadata if e is Removed e set Created true e set Expired false e set Removed false e set Valid true o null e set Changed true Return the expected value when retrying a put If Absent command i e null return value Matcher Value Matcher o null 
package org infinispan client hotrod impl operations import java util concurrent Time Unit import java util concurrent atomic Atomic Integer import org infinispan client hotrod configuration Configuration import org infinispan client hotrod exceptions Invalid Response Exception import org infinispan client hotrod impl protocol Codec import org infinispan client hotrod impl protocol Hot Rod Constants import org infinispan client hotrod impl transport Transport import org infinispan client hotrod impl transport Transport Factory import net jcip annotations Immutable Implements put as defined by a href http community jboss org wiki Hot Rod Protocol Hot Rod protocol specification a author Mircea Markus jboss com since Immutable public class Put Operation extends Abstract Key Value Operation public Put Operation Codec codec Transport Factory transport Factory Object key byte key Bytes byte cache Name Atomic Integer topology Id int flags Configuration cfg byte value long lifespan Time Unit lifespan Time Unit long max Idle Time Unit max Idle Time Unit super codec transport Factory key key Bytes cache Name topology Id flags cfg value lifespan lifespan Time Unit max Idle max Idle Time Unit Override protected execute Operation Transport transport short status send Put Operation transport if Hot Rod Constants is Success status throw new Invalid Response Exception Unexpected response status Integer to Hex String status return return Possible Prev Value transport status 
package org infinispan transaction xa recovery import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import javax transaction xa Xid import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan remoting transport Address import org infinispan transaction xa Dld Global Transaction import org infinispan transaction xa Global Transaction Dld Global Transaction that also holds xid information required for recovery The purpose of this class is to avoid the serialization of Xid objects over the wire in the case recovery is not enabled author Mircea Markus jboss com since deprecated Since no longer used Deprecated public class Recovery Aware Dld Global Transaction extends Dld Global Transaction implements Recoverable Transaction Identifier public Recovery Aware Dld Global Transaction public Recovery Aware Dld Global Transaction Address addr boolean remote super addr remote private volatile Xid xid private volatile long internal Id Override public Xid get Xid return xid Override public void set Xid Xid xid this xid xid Override public long get Internal Id return internal Id Override public void set Internal Id long internal Id this internal Id internal Id Deprecated public static class Externalizer extends Global Transaction Abstract Global Tx Externalizer Recovery Aware Dld Global Transaction Override public void write Object Object Output output Recovery Aware Dld Global Transaction global Transaction throws Exception super write Object output global Transaction output write Long global Transaction get Coin Toss if global Transaction locks At Origin is Empty output write Object null else output write Object global Transaction locks At Origin output write Object global Transaction xid output write Long global Transaction internal Id Override protected Recovery Aware Dld Global Transaction create Global Transaction return new Recovery Aware Dld Global Transaction Override Suppress Warnings unchecked public Recovery Aware Dld Global Transaction read Object Object Input input throws Exception Class Not Found Exception Recovery Aware Dld Global Transaction global Transaction super read Object input global Transaction set Coin Toss input read Long Object locks At Origin Obj input read Object if locks At Origin Obj null global Transaction set Locks Held At Origin Collections empty Set else global Transaction set Locks Held At Origin Set Object locks At Origin Obj Xid xid Xid input read Object global Transaction set Xid xid global Transaction set Internal Id input read Long return global Transaction Override public Integer get Id return Ids Override public Set Class extends Recovery Aware Dld Global Transaction get Type Classes return Util Class extends Recovery Aware Dld Global Transaction as Set Recovery Aware Dld Global Transaction class Override public String to String return get Class get Simple Name xid xid internal Id internal Id super to String 
package org infinispan transaction xa recovery import java io Exception import java io Object Input import java io Object Output import java util Set import javax transaction xa Xid import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan remoting transport Address import org infinispan transaction xa Global Transaction import org infinispan transaction xa Transaction Factory Global Transaction that also holds xid information required for recovery author Mircea Markus jboss com since public class Recovery Aware Global Transaction extends Global Transaction implements Recoverable Transaction Identifier private volatile Xid xid private volatile long internal Id public Recovery Aware Global Transaction super public Recovery Aware Global Transaction Address addr boolean remote super addr remote Override public Xid get Xid return xid Override public void set Xid Xid xid this xid xid Override public long get Internal Id return internal Id Override public void set Internal Id long internal Id this internal Id internal Id Override public String to String return get Class get Simple Name xid xid internal Id internal Id super to String public static class Externalizer extends Global Transaction Abstract Global Tx Externalizer Recovery Aware Global Transaction Override protected Recovery Aware Global Transaction create Global Transaction return Recovery Aware Global Transaction Transaction Factory Tx Factory Enum new Global Transaction Override public void write Object Object Output output Recovery Aware Global Transaction xid Gtx throws Exception super write Object output xid Gtx output write Object xid Gtx xid output write Long xid Gtx get Internal Id Override public Recovery Aware Global Transaction read Object Object Input input throws Exception Class Not Found Exception Recovery Aware Global Transaction xid Gtx super read Object input Xid xid Xid input read Object xid Gtx set Xid xid xid Gtx set Internal Id input read Long return xid Gtx Override public Integer get Id return Ids Override public Set Class extends Recovery Aware Global Transaction get Type Classes return Util Class extends Recovery Aware Global Transaction as Set Recovery Aware Global Transaction class 
package org infinispan configuration cache import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set Defines recovery configuration for the cache author pmuir public class Recovery Configuration public static final String recovery Info Cache Name public static final Attribute Definition Boolean Attribute Definition builder enabled false immutable build public static final Attribute Definition String Attribute Definition builder recovery Info Cache Name xml Name recovery cache immutable build static Attribute Set attribute Definition Set return new Attribute Set Recovery Configuration class private final Attribute Boolean enabled private final Attribute String recovery Info Cache Name private final Attribute Set attributes Recovery Configuration Attribute Set attributes this attributes attributes check Protection enabled attributes attribute recovery Info Cache Name attributes attribute Determines if recovery is enabled for the cache public boolean enabled return enabled get Sets the name of the cache where recovery related information is held If not specified defaults to a cache named link Recovery Configuration public String recovery Info Cache Name return recovery Info Cache Name get public Attribute Set attributes return attributes Override public String to String return Recovery Configuration attributes attributes Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Recovery Configuration other Recovery Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result 
package org infinispan configuration cache import static org infinispan configuration cache Recovery Configuration import static org infinispan configuration cache Recovery Configuration import java lang invoke Method Handles import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration import org infinispan transaction Transaction Mode import org infinispan transaction Transaction Protocol import org infinispan util logging Log import org infinispan util logging Log Factory Defines recovery configuration for the cache author pmuir public class Recovery Configuration Builder extends Abstract Transport Configuration Child Builder implements Builder Recovery Configuration private static final Log log Log Factory get Log Method Handles lookup lookup Class private final Attribute Set attributes Recovery Configuration Builder Transaction Configuration Builder builder super builder attributes Recovery Configuration attribute Definition Set Enable recovery for this cache public Recovery Configuration Builder enable attributes attribute set true return this Disable recovery for this cache public Recovery Configuration Builder disable attributes attribute set false return this Enable recovery for this cache public Recovery Configuration Builder enabled boolean enabled attributes attribute set enabled return this boolean is Enabled return attributes attribute get Sets the name of the cache where recovery related information is held If not specified defaults to a cache named link Recovery Configuration public Recovery Configuration Builder recovery Info Cache Name String recovery Info Name attributes attribute set recovery Info Name return this Override public void validate if attributes attribute get return nothing to validate if transaction transaction Mode Transaction Mode throw log recovery Not Supported With Non Tx Cache if transaction use Synchronization throw log recovery Not Supported With Synchronization if transaction transaction Protocol Transaction Protocol throw log unavailable Total Order With Tx Recovery Override public void validate Global Configuration global Config validate Override public Recovery Configuration create return new Recovery Configuration attributes protect Override public Recovery Configuration Builder read Recovery Configuration template this attributes read template attributes return this Override public String to String return Recovery Configuration Builder attributes attributes 
package org infinispan factories import java util concurrent Concurrent Map import java util concurrent Time Unit import org infinispan Cache import org infinispan commons Cache Configuration Exception import org infinispan configuration cache Cache Mode import org infinispan configuration cache Configuration import org infinispan configuration cache Configuration Builder import org infinispan configuration cache Recovery Configuration import org infinispan factories annotations Default Factory For import org infinispan manager Embedded Cache Manager import org infinispan registry Internal Cache Registry import org infinispan transaction Transaction Mode import org infinispan transaction xa recovery Recovery Aware Remote Transaction import org infinispan transaction xa recovery Recovery Info Key import org infinispan transaction xa recovery Recovery Manager import org infinispan transaction xa recovery Recovery Manager Impl import org infinispan util logging Log import org infinispan util logging Log Factory Factory for Recovery Manager author Mircea Markus jboss com since Default Factory For classes Recovery Manager class public class Recovery Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory private static final Log log Log Factory get Log Recovery Manager Factory class private static final long Time Unit to Millis Override Suppress Warnings unchecked public Recovery Manager Recovery Manager construct Class Recovery Manager component Type if configuration transaction recovery enabled String recovery Cache Name configuration transaction recovery recovery Info Cache Name log tracef Using recovery cache name s recovery Cache Name Embedded Cache Manager cm component Registry get Global Component Registry get Component Embedded Cache Manager class boolean use Default Cache recovery Cache Name equals Recovery Configuration if use a defined cache if use Default Cache check to see that the cache is defined if cm get Cache Configuration Names contains recovery Cache Name throw new Cache Configuration Exception Recovery cache recovery Cache Name does not exist else Internal Cache Registry internal Cache Registry component Registry get Global Component Registry get Component Internal Cache Registry class internal Cache Registry register Internal Cache recovery Cache Name get Default Recovery Cache Config return Recovery Manager build Recovery Manager component Registry get Cache Name recovery Cache Name cm use Default Cache else return null private Configuration get Default Recovery Cache Config Configuration Builder builder new Configuration Builder the recovery cache should not participate in main cache s transactions especially because removals from this cache are executed in the context of a finalised transaction and cause issues builder transaction transaction Mode Transaction Mode builder clustering cache Mode Cache Mode builder expiration lifespan builder transaction recovery disable return builder build private Recovery Manager build Recovery Manager String cache Name String recovery Cache Name Embedded Cache Manager cm boolean is Default log tracef About to obtain a reference to the recovery cache s recovery Cache Name Cache recovery Cache cm get Cache recovery Cache Name if recovery Cache get Cache Configuration transaction transaction Mode is Transactional see comment in get Default Recovery Cache Config throw new Cache Configuration Exception The recovery cache should n t be transactional log tracef Obtained a reference to the recovery cache s recovery Cache Name return new Recovery Manager Impl Concurrent Map Recovery Info Key Recovery Aware Remote Transaction recovery Cache cache Name 
package org infinispan commons util import java lang annotation Annotation import java lang reflect Field import java lang reflect Method import java util Array List import java util Arrays import java util Collection import java util Linked List import java util List import org infinispan commons Cache Exception import org infinispan commons logging Log import org infinispan commons logging Log Factory Basic reflection utilities to enhance what the provides author Manik Surtani a href mailto manik jboss org manik jboss org a since public class Reflection Util private static final Log log Log Factory get Log Reflection Util class private static final String private static final Class primitives int class byte class short class long class float class double class boolean class char class private static final Class primitive Arrays int class byte class short class long class float class double class boolean class char class public static final Class new Class Returns a set of Methods that contain the given method annotation This includes all public protected package and private methods as well as those of superclasses Note that this does not include overridden methods param c class to inspect param annotation Type the type of annotation to look for return List of Method objects that require injection public static List Method get All Methods Class c Class extends Annotation annotation Type List Method annotated new Linked List inspect Recursively c annotated annotation Type return annotated Returns a set of Methods that contain the given method annotation This includes all public protected package and private methods but not those of superclasses and interfaces param c class to inspect param annotation Type the type of annotation to look for return List of Method objects that require injection public static List Method get All Methods Shallow Class c Class extends Annotation annotation Type List Method annotated new Linked List for Method m c get Declared Methods if m is Annotation Present annotation Type annotated add m return annotated private static void get Annotated Field Helper List Field list Class c Class extends Annotation annotation Type Field declared Fields c get Declared Fields for Field field declared Fields if field is Annotation Present annotation Type list add field public static List Field get Annotated Fields Class c Class extends Annotation annotation Type List Field fields new Array List Class could be null in the case of an interface for c null c equals Object class c c get Superclass get Annotated Field Helper fields c annotation Type return fields public static Method find Method Class type String method Name try return type get Declared Method method Name catch No Such Method Exception e if type equals Object class type is Interface throw new Cache Exception e return find Method type get Superclass method Name public static Method find Method Class type String method Name Class parameters throws Class Not Found Exception try return type get Declared Method method Name parameters catch No Such Method Exception e if type equals Object class type is Interface throw new Cache Exception e return find Method type get Superclass method Name parameters Inspects a class and its superclasses all the way to link Object for method instances that contain a given annotation This even identifies private package and protected methods not just public ones param c param s param annotation Type private static void inspect Recursively Class c List Method s Class extends Annotation annotation Type for Method m c get Declared Methods do n t bother if this method has already been overridden by a subclass if not Found m s m is Annotation Present annotation Type s add m if c equals Object class if c is Interface inspect Recursively c get Superclass s annotation Type for Class ifc c get Interfaces inspect Recursively ifc s annotation Type Tests whether a method has already been found i e overridden param m method to inspect param s collection of methods found return true a method with the same signature already exists private static boolean not Found Method m Collection Method s for Method found s if m get Name equals found get Name Arrays equals m get Parameter Types found get Parameter Types return false return true private static Field find Field Recursively Class c String field Name Field f null try f c get Declared Field field Name catch No Such Field Exception e if c equals Object class f find Field Recursively c get Superclass field Name return f Invokes a method using reflection in an accessible manner by using link Method set Accessible boolean param instance instance on which to execute the method param method method to execute param parameters parameters public static Object invoke Accessibly Object instance Method method Object parameters return Security Actions invoke Accessibly instance method parameters public static Method find Getter For Field Class c String field Name Method retval find Getter For Field Using Reflection c field Name if retval null if c equals Object class if c is Interface retval find Getter For Field c get Superclass field Name if retval null for Class ifc c get Interfaces retval find Getter For Field ifc field Name if retval null break return retval private static Method find Getter For Field Using Reflection Class c String field Name for Method m c get Declared Methods String name m get Name String s null if name starts With get s name substring else if name starts With is s name substring if s null s equals Ignore Case field Name return m return null public static Method find Setter For Field Class c String field Name if c Object class return null for Method m c get Declared Methods String name m get Name String s null if name starts With set s name substring if s null s equals Ignore Case field Name return m Try parent class until we run out return find Setter For Field c get Superclass field Name public static String extract Field Name String setter Or Getter String field null if setter Or Getter starts With set setter Or Getter starts With get field setter Or Getter substring else if setter Or Getter starts With is field setter Or Getter substring if field null field length String Builder sb new String Builder sb append Character to Lower Case field char At if field length sb append field substring return sb to String return null Retrieves the value of a field of an object instance via reflection param instance to inspect param field Name name of field to retrieve return a value public static Object get Value Object instance String field Name Field f find Field Recursively instance get Class field Name if f null throw new Cache Exception Could not find field named field Name on instance instance try f set Accessible true return f get instance catch Illegal Access Exception iae throw new Cache Exception Can not access field f iae Inspects the class passed in for the class level annotation specified If the annotation is not available this method recursively inspects superclasses and interfaces until it finds the required annotation p Returns null if the annotation can not be found param clazz class to inspect param ann annotation to search for Must be a class level annotation return the annotation instance or null Suppress Warnings unchecked public static extends Annotation get Annotation Class clazz Class ann while true first check class a clazz get Annotation ann if a null return a check interfaces if clazz is Interface Class interfaces clazz get Interfaces for Class inter interfaces a get Annotation inter ann if a null return a check superclasses Class superclass clazz get Superclass if superclass null return null no where else to look clazz superclass Tests whether an annotation is present on a class The order tested is ul li The class itself li li All implemented interfaces li li Any superclasses li ul param clazz class to test param annotation annotation to look for return true if the annotation is found false otherwise public static boolean is Annotation Present Class clazz Class extends Annotation annotation return get Annotation clazz annotation null public static Class to Class Array String type List Class Loader class Loader throws Class Not Found Exception if type List null return Class retval new Class type List length int i for String s type List retval i get Class For Name s class Loader return retval public static Class get Class For Name String name Class Loader cl throws Class Not Found Exception try return Util load Class Strict name cl catch Class Not Found Exception cnfe Could be a primitive let s check for Class primitive primitives if name equals primitive get Name return primitive for Class primitive primitive Arrays if name equals primitive get Name return primitive throw new Class Not Found Exception Class name can not be found public static String to String Array Class classes if classes null return else String class Names new String classes length for int i i classes length i class Names i classes i get Name return class Names public static Field get Field String field Name Class object Class try return object Class get Declared Field field Name catch No Such Field Exception e if object Class equals Object class return get Field field Name object Class get Superclass else return null public static unwrap Object obj Class clazz if clazz null clazz is Assignable From obj get Class return clazz cast obj throw log unable To Unwrap obj clazz public static unwrap Any Class clazz Object objs if clazz null for Object o objs if clazz is Assignable From o get Class return clazz cast o throw log unable To Unwrap Any Arrays to String objs clazz 
package org infinispan commands import java util Map import org infinispan commands control Lock Control Command import org infinispan commands functional Read Only Key Command import org infinispan commands functional Read Only Many Command import org infinispan commands functional Read Write Key Command import org infinispan commands functional Read Write Key Value Command import org infinispan commands functional Read Write Many Command import org infinispan commands functional Read Write Many Entries Command import org infinispan commands functional Tx Read Only Key Command import org infinispan commands functional Tx Read Only Many Command import org infinispan commands functional Write Only Key Command import org infinispan commands functional Write Only Key Value Command import org infinispan commands functional Write Only Many Command import org infinispan commands functional Write Only Many Entries Command import org infinispan commands module Module Command Factory import org infinispan commands read Distributed Execute Command import org infinispan commands read Get Cache Entry Command import org infinispan commands read Get Key Value Command import org infinispan commands remote Cache Rpc Command import org infinispan commands remote Clustered Get All Command import org infinispan commands remote Clustered Get Command import org infinispan commands remote Get Keys In Group Command import org infinispan commands remote Single Rpc Command import org infinispan commands remote recovery Complete Transaction Command import org infinispan commands remote recovery Get In Doubt Transactions Command import org infinispan commands remote recovery Get In Doubt Tx Info Command import org infinispan commands remote recovery Tx Completion Notification Command import org infinispan commands tx Commit Command import org infinispan commands tx Prepare Command import org infinispan commands tx Rollback Command import org infinispan commands tx Versioned Commit Command import org infinispan commands tx Versioned Prepare Command import org infinispan commands tx totalorder Total Order Commit Command import org infinispan commands tx totalorder Total Order Non Versioned Prepare Command import org infinispan commands tx totalorder Total Order Rollback Command import org infinispan commands tx totalorder Total Order Versioned Commit Command import org infinispan commands tx totalorder Total Order Versioned Prepare Command import org infinispan commands write Backup Put Map Rpc Command import org infinispan commands write Backup Write Rpc Command import org infinispan commands write Clear Command import org infinispan commands write Compute Command import org infinispan commands write Compute If Absent Command import org infinispan commands write Invalidate Command import org infinispan commands write Invalidate Command import org infinispan commands write Invalidate Versions Command import org infinispan commands write Put Key Value Command import org infinispan commands write Put Map Command import org infinispan commands write Remove Command import org infinispan commands write Remove Expired Command import org infinispan commands write Replace Command import org infinispan commons Cache Exception import org infinispan factories Known Component Names import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan factories scopes Scope import org infinispan factories scopes Scopes import org infinispan manager Embedded Cache Manager import org infinispan manager impl Replicable Command Manager Function import org infinispan manager impl Replicable Command Runnable import org infinispan statetransfer State Request Command import org infinispan statetransfer State Response Command import org infinispan stream impl Stream Request Command import org infinispan stream impl Stream Response Command import org infinispan stream impl Stream Segment Response Command import org infinispan topology Cache Topology Control Command import org infinispan util Byte String import org infinispan xsite Single Site Rpc Command import org infinispan xsite Site Admin Command import org infinispan xsite statetransfer Site State Push Command import org infinispan xsite statetransfer Site State Transfer Control Command Specifically used to create un initialized link org infinispan commands Replicable Command s from a byte stream This is a link Scopes component and does n t have knowledge of initializing a command by injecting cache specific components into it p Usually a second step to unmarshalling a command from a byte stream after creating an un initialized version using this factory is to pass the command though link Commands Factory initialize Replicable Command Replicable Command boolean see Commands Factory initialize Replicable Command Replicable Command boolean author Manik Surtani author Mircea Markus jboss com since Scope Scopes public class Remote Commands Factory private Embedded Cache Manager cache Manager private Map Byte Module Command Factory command Factories Inject public void inject Embedded Cache Manager cache Manager Component Name Known Component Names Map Byte Module Command Factory command Factories this cache Manager cache Manager this command Factories command Factories Creates an un initialized command Un initialized in the sense that parameters will be set but any components specific to the cache in question will not be set p You would typically set these parameters using link Commands Factory initialize Replicable Command Replicable Command boolean p param id id of the command param type type of the command return a replicable command public Replicable Command from Stream byte id byte type Replicable Command command if type switch id case Put Key Value Command command new Put Key Value Command break case Put Map Command command new Put Map Command break case Remove Command command new Remove Command break case Replace Command command new Replace Command break case Compute Command command new Compute Command break case Compute If Absent Command command new Compute If Absent Command break case Get Key Value Command command new Get Key Value Command break case Clear Command command new Clear Command break case Invalidate Command command new Invalidate Command break case Invalidate Command command new Invalidate Command break case Cache Topology Control Command command new Cache Topology Control Command break case Get Keys In Group Command command new Get Keys In Group Command break case Get Cache Entry Command command new Get Cache Entry Command break case Read Write Key Command command new Read Write Key Command break case Read Write Key Value Command command new Read Write Key Value Command break case Read Write Many Command command new Read Write Many Command break case Read Write Many Entries Command command new Read Write Many Entries Command break case Write Only Key Command command new Write Only Key Command break case Write Only Key Value Command command new Write Only Key Value Command break case Write Only Many Command command new Write Only Many Command break case Write Only Many Entries Command command new Write Only Many Entries Command break case Remove Expired Command command new Remove Expired Command break case Replicable Command Runnable command new Replicable Command Runnable break case Replicable Command Manager Function command new Replicable Command Manager Function break case Read Only Key Command command new Read Only Key Command break case Read Only Many Command command new Read Only Many Command break case Tx Read Only Key Command command new Tx Read Only Key Command break case Tx Read Only Many Command command new Tx Read Only Many Command break default throw new Cache Exception Unknown command id id else Module Command Factory mcf command Factories get id if mcf null return mcf from Stream id else throw new Cache Exception Unknown command id id return command Resolve an link Cache Rpc Command from the stream param id id of the command param type type of command whether internal or user defined param cache Name cache name at which this command is directed return an instance of link Cache Rpc Command public Cache Rpc Command from Stream byte id byte type Byte String cache Name Cache Rpc Command command if type switch id case Lock Control Command command new Lock Control Command cache Name break case Prepare Command command new Prepare Command cache Name break case Versioned Prepare Command command new Versioned Prepare Command cache Name break case Total Order Non Versioned Prepare Command command new Total Order Non Versioned Prepare Command cache Name break case Total Order Versioned Prepare Command command new Total Order Versioned Prepare Command cache Name break case Commit Command command new Commit Command cache Name break case Versioned Commit Command command new Versioned Commit Command cache Name break case Total Order Commit Command command new Total Order Commit Command cache Name break case Total Order Versioned Commit Command command new Total Order Versioned Commit Command cache Name break case Rollback Command command new Rollback Command cache Name break case Total Order Rollback Command command new Total Order Rollback Command cache Name break case Single Rpc Command command new Single Rpc Command cache Name break case Clustered Get Command command new Clustered Get Command cache Name break case State Request Command command new State Request Command cache Name break case State Response Command command new State Response Command cache Name break case Remove Cache Command command new Remove Cache Command cache Name cache Manager break case Tx Completion Notification Command command new Tx Completion Notification Command cache Name break case Get In Doubt Transactions Command command new Get In Doubt Transactions Command cache Name break case Distributed Execute Command command new Distributed Execute Command cache Name break case Get In Doubt Tx Info Command command new Get In Doubt Tx Info Command cache Name break case Complete Transaction Command command new Complete Transaction Command cache Name break case Create Cache Command command new Create Cache Command cache Name break case Site Admin Command command new Site Admin Command cache Name break case Cancel Command command new Cancel Command cache Name break case Site State Transfer Control Command command new Site State Transfer Control Command cache Name break case Site State Push Command command new Site State Push Command cache Name break case Single Site Rpc Command command new Single Site Rpc Command cache Name break case Clustered Get All Command command new Clustered Get All Command cache Name break case Stream Request Command command new Stream Request Command cache Name break case Stream Segment Response Command command new Stream Segment Response Command cache Name break case Stream Response Command command new Stream Response Command cache Name break case Backup Write Rpc Command command new Backup Write Rpc Command cache Name break case Backup Put Map Rpc Command command new Backup Put Map Rpc Command cache Name break case Invalidate Versions Command command new Invalidate Versions Command cache Name break default throw new Cache Exception Unknown command id id else Module Command Factory mcf command Factories get id if mcf null return mcf from Stream id cache Name else throw new Cache Exception Unknown command id id return command 
package org infinispan commands write import static org infinispan commons util Util to Str import java io Exception import java io Object Input import java io Object Output import java util Objects import org infinispan commands Command Invocation Id import org infinispan commands Metadata Aware Command import org infinispan commands Visitor import org infinispan commons marshall Marshall Util import org infinispan container entries Entry import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan metadata Metadata import org infinispan notifications cachelistener Cache Notifier import org infinispan util logging Log import org infinispan util logging Log Factory author Mircea Markus jboss com author a href mailto galder zamarreno jboss com Galder Zamarreno a since public class Remove Command extends Abstract Data Write Command implements Metadata Aware Command private static final Log log Log Factory get Log Remove Command class public static final byte protected Cache Notifier Object Object notifier protected boolean successful true private boolean non Existent false protected Metadata metadata protected Value Matcher value Matcher When not null value indicates that the entry should only be removed if the key is mapped to this value When null the entry should be removed regardless of what value it is mapped to protected Object value public Remove Command Object key Object value Cache Notifier notifier long flags Bit Set Command Invocation Id command Invocation Id super key flags Bit Set command Invocation Id this value value noinspection unchecked this notifier notifier this value Matcher value null Value Matcher Value Matcher public void init Cache Notifier notifier noinspection unchecked this notifier notifier public Remove Command Override public Object accept Visitor Invocation Context ctx Visitor visitor throws Throwable return visitor visit Remove Command ctx this Override public Object perform Invocation Context ctx throws Throwable It s not worth looking up the entry if we re never going to apply the change if value Matcher Value Matcher successful false return null Entry e Entry ctx lookup Entry key Object prev Value e get Value if prev Value null non Existent true if value Matcher matches null value null e set Changed true e set Removed true e set Created false if this instanceof Evict Command e set Evicted true e set Value null return is Conditional true null else log trace Nothing to remove since the entry does n t exist in the context or it is null successful false return false if value Matcher matches prev Value value null successful false return false if this instanceof Evict Command e set Evicted true return perform Remove e prev Value ctx public void notify Invocation Context ctx Object removed Value Metadata removed Metadata boolean is Pre notifier notify Cache Entry Removed key removed Value removed Metadata is Pre ctx this Override public byte get Command Id return Override public void set Metadata Metadata metadata this metadata metadata Override public Metadata get Metadata return metadata Override public boolean equals Object o if super equals o return false Remove Command that Remove Command o return Objects equals value that value Override public int hash Code int result super hash Code result result value null value hash Code return result Override public String to String return new String Builder append Remove Command key append to Str key append value append to Str value append metadata append metadata append flags append print Flags append command Invocation Id append Command Invocation Id show command Invocation Id append value Matcher append value Matcher append topology Id append get Topology Id append to String Override public boolean is Successful return successful Override public boolean is Conditional return value null public boolean is Non Existent return non Existent Override public void write To Object Output output throws Exception output write Object key output write Object value output write Object metadata output write Long Flag Bit Sets copy Without Remotable Flags get Flags Bit Set Marshall Util marshall Enum value Matcher output Command Invocation Id write To output command Invocation Id Override public void read From Object Input input throws Exception Class Not Found Exception key input read Object value input read Object metadata Metadata input read Object set Flags Bit Set input read Long value Matcher Marshall Util unmarshall Enum input Value Matcher value Of command Invocation Id Command Invocation Id read From input Override public Value Matcher get Value Matcher return value Matcher Override public void set Value Matcher Value Matcher value Matcher this value Matcher value Matcher Override public void fail successful false Override public Load Type load Type return is Conditional has Any Flag Flag Bit Sets Load Type Load Type public Object get Value return value public void set Value Object value this value value Override public final boolean is Return Value Expected ignored for conditional remove return is Conditional super is Return Value Expected Override public void init Backup Write Rpc Command Backup Write Rpc Command command command set Remove command Invocation Id key get Flags Bit Set get Topology Id protected Object perform Remove Entry e Object prev Value Invocation Context ctx notify ctx prev Value e get Metadata true e set Removed true e set Valid false e set Changed true e set Value null if metadata null e set Metadata metadata if value Matcher Value Matcher return is Conditional true prev Value else Return the expected value when retrying return is Conditional true value 
package org infinispan commands write import static org infinispan commons util Util to Str import java io Exception import java io Object Input import java io Object Output import java util Objects import org infinispan commands Command Invocation Id import org infinispan commons util Enum Util import org infinispan container entries Entry import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan metadata Metadata import org infinispan notifications cachelistener Cache Notifier import org infinispan util logging Log import org infinispan util logging Log Factory Removes an entry that is expired from memory author William Burns since public class Remove Expired Command extends Remove Command public static final int private static final Log log Log Factory get Log Remove Expired Command class private Long lifespan public Remove Expired Command The value matcher will always be the same so we do n t need to serialize it like we do for the other commands this value Matcher Value Matcher public Remove Expired Command Object key Object value Long lifespan Cache Notifier notifier Command Invocation Id command Invocation Id value Equivalence can be null because this command never compares values super key value notifier Enum Util command Invocation Id this lifespan lifespan this value Matcher Value Matcher Performs an expiration on a specified entry param ctx invocation context return null Override public Object perform Invocation Context ctx throws Throwable Entry e Entry ctx lookup Entry key if e null e is Removed Object value e get Value If the provided lifespan is null that means it is a store removal command so we ca n t compare lifespan Object prev Value e get Value if lifespan null if value Matcher matches prev Value value null e set Expired true return perform Remove e prev Value ctx else if e get Metadata null If there is no metadata and no value that means it is gone currently or not shown due to expired If we have a value though we should verify it matches the value as well if value null value Matcher matches prev Value value null e set Expired true return perform Remove e prev Value ctx else if e get Lifespan e get Lifespan lifespan If the entries lifespan is not positive that means it ca n t expire so do n t even try to remove it Lastly if there is metadata we have to verify it equals our lifespan and the value match add a threshold to verify this was n t just created with the same value lifespan just before expiring if value Matcher matches prev Value value null e set Expired true return perform Remove e prev Value ctx else log trace Can not remove entry as its lifespan or value do not match else log trace Nothing to remove since the entry does n t exist in the context or it is already removed successful false return false Override public boolean is Conditional return true Override public void notify Invocation Context ctx Object removed Value Metadata removed Metadata boolean is Pre if is Pre notifier notify Cache Entry Expired key value removed Metadata ctx Override public byte get Command Id return Override public String to String return Remove Expired Command key to Str key value to Str value lifespan lifespan Override public void write To Object Output output throws Exception Command Invocation Id write To output command Invocation Id output write Object key output write Object value if lifespan null output write Boolean true output write Long lifespan else output write Boolean false Override public void read From Object Input input throws Exception Class Not Found Exception command Invocation Id Command Invocation Id read From input key input read Object value input read Object boolean lifespan Provided input read Boolean if lifespan Provided lifespan input read Long else lifespan null Override public boolean equals Object o if this o return true if o null get Class o get Class return false if super equals o return false Remove Expired Command that Remove Expired Command o return Objects equals lifespan that lifespan Override public int hash Code return Objects hash super hash Code lifespan Override public long get Flags Bit Set Override the flags return Flag Bit Sets Override public void init Backup Write Rpc Command Backup Write Rpc Command command command set Remove Expired command Invocation Id key value Flag Bit Sets get Topology Id 
package org infinispan client hotrod impl operations import java util concurrent atomic Atomic Integer import org infinispan client hotrod configuration Configuration import org infinispan client hotrod impl protocol Codec import org infinispan client hotrod impl protocol Hot Rod Constants import org infinispan client hotrod impl transport Transport import org infinispan client hotrod impl transport Transport Factory import net jcip annotations Immutable Implement remove operation as described in a href http community jboss org wiki Hot Rod Protocol Hot Rod protocol specification a author Mircea Markus jboss com since Immutable public class Remove Operation extends Abstract Key Operation public Remove Operation Codec codec Transport Factory transport Factory Object key byte key Bytes byte cache Name Atomic Integer topology Id int flags Configuration cfg super codec transport Factory key key Bytes cache Name topology Id flags cfg Override public execute Operation Transport transport short status send Key Operation key Bytes transport result return Possible Prev Value transport status if Hot Rod Constants is Not Exist status return null return result 
package org infinispan commands import java io Exception import java io Object Input import java io Object Output import java util concurrent Completable Future import java util concurrent Completion Exception import org infinispan context Invocation Context import org infinispan remoting transport Address import org infinispan util concurrent Completable Futures The core of the command based cache framework Commands correspond to specific areas of functionality in the cache and can be replicated using the link org infinispan remoting rpc Rpc Manager author Mircea Markus jboss com author Manik Surtani since public interface Replicable Command Invoke the command asynchronously p p This method replaces link perform Invocation Context for remote execution The default implementation and link perform Invocation Context will be removed in future versions p since default Completable Future Object invoke Async throws Throwable return Completable Future completed Future perform null Invoke the command synchronously p p This method is optional Unless your command never blocks please implement link invoke Async instead p since default Object invoke throws Throwable try return invoke Async join catch Completion Exception e throw Completable Futures extract Exception e Performs the primary function of the command Please see specific implementation classes for details on what is performed as well as return types b Important b this method will be invoked at the end of interceptors chain It should never be called directly from a custom interceptor param ctx invocation context return arbitrary return value generated by performing this command throws Throwable in the event of problems deprecated Since split into link invoke Async and link Visitable Command perform Invocation Context Deprecated default Object perform Invocation Context ctx throws Throwable return invoke Used by marshallers to convert this command into an id for streaming return the method id of this command This is compatible with pre Method Call ids byte get Command Id If true a return value will be provided when performed remotely Otherwise a remote link org infinispan remoting responses Response Generator may choose to simply return null to save on marshalling costs return true or false boolean is Return Value Expected If true a return value will be marshalled as a link org infinispan remoting responses Successful Response otherwise it will be marshalled as a link org infinispan remoting responses Unsuccessful Response default boolean is Successful return true If true the command is processed asynchronously in a thread provided by an Infinispan thread pool Otherwise the command is processed directly in the Groups thread p This feature allows to avoid keep a Groups thread busy that can originate discard of messages and retransmissions So the commands that can block waiting for some state acquiring locks etc should return true return code true if the command can block wait code false otherwise boolean can Block Writes this instance to the link Object Output param output the stream throws Exception if an error occurred during the void write To Object Output output throws Exception Reads this instance from the stream written by link write To Object Output param input the stream to read throws Exception if an error occurred during the throws Class Not Found Exception if it tries to load an undefined class void read From Object Input input throws Exception Class Not Found Exception Sets the sender s link Address p By default it does n t set anything Implement this method if the sender s link Address is needed param origin the sender s link Address default void set Origin Address origin no op by default 
package org infinispan marshall exts import java io Exception import java io Object Input import java io Object Output import java util Collection import java util Set import org infinispan commands Remote Commands Factory import org infinispan commands Replicable Command import org infinispan commands Topology Affected Command import org infinispan commands functional Read Only Key Command import org infinispan commands functional Read Only Many Command import org infinispan commands functional Read Write Key Command import org infinispan commands functional Read Write Key Value Command import org infinispan commands functional Read Write Many Command import org infinispan commands functional Read Write Many Entries Command import org infinispan commands functional Tx Read Only Key Command import org infinispan commands functional Tx Read Only Many Command import org infinispan commands functional Write Only Key Command import org infinispan commands functional Write Only Key Value Command import org infinispan commands functional Write Only Many Command import org infinispan commands functional Write Only Many Entries Command import org infinispan commands read Distributed Execute Command import org infinispan commands read Get Key Value Command import org infinispan commands remote Cache Rpc Command import org infinispan commands remote Get Keys In Group Command import org infinispan commands write Clear Command import org infinispan commands write Compute Command import org infinispan commands write Compute If Absent Command import org infinispan commands write Evict Command import org infinispan commands write Invalidate Command import org infinispan commands write Invalidate Command import org infinispan commands write Put Key Value Command import org infinispan commands write Put Map Command import org infinispan commands write Remove Command import org infinispan commands write Remove Expired Command import org infinispan commands write Replace Command import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan factories Global Component Registry import org infinispan manager impl Replicable Command Manager Function import org infinispan manager impl Replicable Command Runnable import org infinispan marshall core Ids import org infinispan topology Cache Topology Control Command import org infinispan util Byte String Replicable Command Externalizer author Galder Zamarre o since public class Replicable Command Externalizer extends Abstract Externalizer Replicable Command private final Remote Commands Factory cmd Factory private final Global Component Registry global Component Registry public Replicable Command Externalizer Remote Commands Factory cmd Factory Global Component Registry global Component Registry this cmd Factory cmd Factory this global Component Registry global Component Registry Override public void write Object Object Output output Replicable Command command throws Exception write Command Header output command write Command Parameters output command protected void write Command Parameters Object Output output Replicable Command command throws Exception command write To output if command instanceof Topology Affected Command output write Int Topology Affected Command command get Topology Id protected void write Command Header Object Output output Replicable Command command throws Exception To decide whether it s a core or user defined command load them all and check Collection Class extends Replicable Command module Commands get Module Commands Write an indexer to separate commands defined external to the infinispan core module from the ones defined via module commands if module Commands null module Commands contains command get Class output write Byte else output write Byte output write Short command get Command Id Override public Replicable Command read Object Object Input input throws Exception Class Not Found Exception Replicable Command replicable Command read Command Header input read Command Parameters input replicable Command return replicable Command private Replicable Command read Command Header Object Input input throws Exception byte type input read Byte short method Id input read Short return cmd Factory from Stream byte method Id type void read Command Parameters Object Input input Replicable Command command throws Exception Class Not Found Exception command read From input if command instanceof Topology Affected Command Topology Affected Command command set Topology Id input read Int protected Cache Rpc Command from Stream byte id byte type Byte String cache Name return cmd Factory from Stream id type cache Name Override public Integer get Id return Ids Override public Set Class extends Replicable Command get Type Classes noinspection unchecked Set Class extends Replicable Command core Commands Util as Set Cache Topology Control Command class Distributed Execute Command class Get Key Value Command class Clear Command class Evict Command class Invalidate Command class Invalidate Command class Put Key Value Command class Put Map Command class Remove Command class Remove Expired Command class Replace Command class Compute Command class Compute If Absent Command class Get Keys In Group Command class Read Only Key Command class Read Only Many Command class Read Write Key Command class Read Write Key Value Command class Write Only Key Command class Write Only Key Value Command class Write Only Many Command class Write Only Many Entries Command class Read Write Many Command class Read Write Many Entries Command class Tx Read Only Key Command class Tx Read Only Many Command class Replicable Command Runnable class Replicable Command Manager Function class Search only those commands that replicable and not cache specific replicable commands Collection Class extends Replicable Command module Commands global Component Registry get Module Properties module Only Replicable Commands if module Commands null module Commands is Empty core Commands add All module Commands return core Commands private Collection Class extends Replicable Command get Module Commands return global Component Registry get Module Properties module Commands 
package org infinispan distribution ch impl import java io Exception import java io Object Input import java io Object Output import java util Array List import java util Arrays import java util Collection import java util Collections import java util Hash Set import java util Iterator import java util List import java util Set import java util function Unary Operator import org infinispan commons hash Hash import org infinispan commons marshall Instance Reusing Advanced Externalizer import org infinispan commons util Util import org infinispan distribution ch Consistent Hash import org infinispan globalstate Scoped Persistent State import org infinispan marshall core Ids import org infinispan remoting transport Address import org infinispan topology Persistent import org infinispan commons util Small Int Set import org infinispan util Range Set Special implementation of link org infinispan distribution ch Consistent Hash for replicated caches The hash space has several segments owned by all members and the primary ownership of each segment is evenly spread between members author Dan Berindei author anistor redhat com since public class Replicated Consistent Hash implements Consistent Hash private static final String primary Owners d private static final String primary Owners private final Hash hash Function private final int primary Owners private final List Address members private final Set Address members Set private final Set Integer segments private final int segment Size public Replicated Consistent Hash Hash hash Function List Address members int primary Owners this hash Function hash Function this members Collections unmodifiable List new Array List members this members Set Collections unmodifiable Set new Hash Set members this primary Owners primary Owners segments new Range Set primary Owners length segment Size Util get Segment Size primary Owners length public Replicated Consistent Hash union Replicated Consistent Hash ch if this get Hash Function equals ch get Hash Function throw new Illegal Argument Exception The consistent hash objects must have the same hash function if this get Num Segments ch get Num Segments throw new Illegal Argument Exception The consistent hash objects must have the same number of segments List Address union Members new Array List this get Members for Address member ch get Members if union Members contains member union Members add member int primary Owners new int this get Num Segments for int segment Id segment Id primary Owners length segment Id Address primary Owner this locate Primary Owner For Segment segment Id int primary Owner Index union Members index Of primary Owner primary Owners segment Id primary Owner Index return new Replicated Consistent Hash this get Hash Function union Members primary Owners Replicated Consistent Hash Scoped Persistent State state this hash Function Util get Instance state get Property Consistent Hash Persistence Constants null int num Members Integer parse Int state get Property Consistent Hash Persistence Constants this members new Array List num Members for int i i num Members i Persistent uuid Persistent from String state get Property String format Consistent Hash Persistence Constants i this members add uuid this members Set Collections unmodifiable Set new Hash Set this members int num Primary Owners state get Int Property this primary Owners new int num Primary Owners for int i i num Primary Owners i this primary Owners i state get Int Property String format i segments new Range Set primary Owners length segment Size Util get Segment Size primary Owners length Override public int get Num Segments return primary Owners length Override public int get Num Owners return members size Override public List Address get Members return members Override public Hash get Hash Function return hash Function Override public int get Segment Object key The result must always be positive so we make sure the dividend is positive first return hash Function hash key Integer segment Size Override public List Address locate Owners For Segment int segment Id Address primary Owner locate Primary Owner For Segment segment Id List Address owners new Array List members size owners add primary Owner for Address member members if member equals primary Owner owners add member return owners Override public Address locate Primary Owner For Segment int segment Id return members get primary Owners segment Id Override public Set Integer get Segments For Owner Address owner if owner null throw new Illegal Argument Exception owner can not be null if members Set contains owner throw new Illegal Argument Exception The node is not a member owner return segments Override public Set Integer get Primary Segments For Owner Address owner int index members index Of owner if index throw new Illegal Argument Exception The node is not a member owner Set Integer primary Segments new Small Int Set primary Owners length for int i i primary Owners length i if primary Owners i index primary Segments add i return primary Segments Override public String get Routing Table As String String Builder sb new String Builder for Address a members if sb length sb append n Set Integer primary Segments get Primary Segments For Owner a sb append a append primary append primary Segments return sb to String Override public Set Address locate All Owners Collection Object keys return members Set Override public boolean is Key Local To Node Address node Address Object key return is Segment Local To Node node Address Override public boolean is Segment Local To Node Address node Address int segment Id return members Set contains node Address Override public boolean is Replicated return true public void to Scoped State Scoped Persistent State state state set Property Consistent Hash Persistence Constants this get Class get Name state set Property Consistent Hash Persistence Constants hash Function get Class get Name state set Property Consistent Hash Persistence Constants Integer to String members size for int i i members size i state set Property String format Consistent Hash Persistence Constants i members get i to String state set Property Integer to String primary Owners length for int i i primary Owners length i state set Property String format i Integer to String primary Owners i Override public Consistent Hash remap Addresses Unary Operator Address remapper List Address remapped Members new Array List members size for Iterator Address i members iterator i has Next Address a remapper apply i next if a null return null remapped Members add a return new Replicated Consistent Hash hash Function remapped Members primary Owners Override public String to String String Builder sb new String Builder Replicated Consistent Hash sb append ns append segments size sb append owners append members size append int primary Owned new int members size for int i i primary Owners length i primary Owned primary Owners i boolean first true for int i i members size i Address a members get i if first first false else sb append sb append a append append primary Owned i sb append return sb to String Override public int hash Code final int prime int result result prime result hash Function null hash Function hash Code result prime result members null members hash Code result prime result Arrays hash Code primary Owners return result Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Replicated Consistent Hash other Replicated Consistent Hash obj if hash Function null if other hash Function null return false else if hash Function equals other hash Function return false if members null if other members null return false else if members equals other members return false if Arrays equals primary Owners other primary Owners return false return true public static class Externalizer extends Instance Reusing Advanced Externalizer Replicated Consistent Hash Override public void do Write Object Object Output output Replicated Consistent Hash ch throws Exception output write Object ch hash Function output write Object ch members output write Object ch primary Owners Override Suppress Warnings unchecked public Replicated Consistent Hash do Read Object Object Input unmarshaller throws Exception Class Not Found Exception Hash hash Function Hash unmarshaller read Object List Address members List Address unmarshaller read Object int primary Owners int unmarshaller read Object return new Replicated Consistent Hash hash Function members primary Owners Override public Integer get Id return Ids Override public Set Class extends Replicated Consistent Hash get Type Classes return Collections singleton Replicated Consistent Hash class 
package org infinispan distribution ch impl import java io Object Input import java io Object Output import java util Array Deque import java util Collections import java util List import java util Map import java util Queue import java util Set import org infinispan commons hash Hash import org infinispan commons marshall Abstract Externalizer import org infinispan distribution ch Consistent Hash Factory import org infinispan globalstate Scoped Persistent State import org infinispan marshall core Ids import org infinispan remoting transport Address import org infinispan util logging Log import org infinispan util logging Log Factory Factory for Replicated Consistent Hash author Dan Berindei author anistor redhat com since public class Replicated Consistent Hash Factory implements Consistent Hash Factory Replicated Consistent Hash private static final Log log Log Factory get Log Replicated Consistent Hash Factory class Override public Replicated Consistent Hash create Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors int primary Owners new int num Segments for int i i num Segments i primary Owners i i members size return new Replicated Consistent Hash hash Function members primary Owners Override public Replicated Consistent Hash from Persistent State Scoped Persistent State state String consistent Hash Class state get Property consistent Hash if Replicated Consistent Hash class get Name equals consistent Hash Class throw log persistent Consistent Hash Mismatch this get Class get Name consistent Hash Class return new Replicated Consistent Hash state Override public Replicated Consistent Hash update Members Replicated Consistent Hash base List Address new Members Map Address Float actual Capacity Factors if new Members equals base get Members return base recompute primary ownership based on the new list of members removes leavers int num Segments base get Num Segments int primary Owners new int num Segments int node Usage new int new Members size boolean found Orphan Segments false for int segment Id segment Id num Segments segment Id Address primary Owner base locate Primary Owner For Segment segment Id int primary Owner Index new Members index Of primary Owner primary Owners segment Id primary Owner Index if primary Owner Index found Orphan Segments true else node Usage primary Owner Index ensure leavers are replaced with existing members so no segments are orphan if found Orphan Segments for int i i num Segments i if primary Owners i int least Used find Least Used Node node Usage primary Owners i least Used node Usage least Used ensure even spread of ownership int min Segments Per Node num Segments new Members size Queue Integer segments By Node new Queue new Members size for int segment Id segment Id primary Owners length segment Id int owner primary Owners segment Id Queue Integer segments segments By Node owner if segments null segments By Node owner segments new Array Deque Integer min Segments Per Node segments add segment Id int most Used Node for int node node node Usage length node while node Usage node min Segments Per Node we can take segment from any node that has min Segments Per Node not only the most used if node Usage most Used Node min Segments Per Node most Used Node find Most Used Node node Usage int segment Id segments By Node most Used Node poll we do n t have to add the segment Id to the new owner s queue primary Owners segment Id node node Usage most Used Node node Usage node return new Replicated Consistent Hash base get Hash Function new Members primary Owners private int find Least Used Node int node Usage int res for int node node node Usage length node if node Usage node node Usage res res node return res private int find Most Used Node int node Usage int res for int node node node Usage length node if node Usage node node Usage res res node return res Override public Replicated Consistent Hash rebalance Replicated Consistent Hash base return base Override public Replicated Consistent Hash union Replicated Consistent Hash ch Replicated Consistent Hash ch return ch union ch Override public boolean equals Object other return other null other get Class get Class Override public int hash Code return public static class Externalizer extends Abstract Externalizer Replicated Consistent Hash Factory Override public void write Object Object Output output Replicated Consistent Hash Factory chf Override Suppress Warnings unchecked public Replicated Consistent Hash Factory read Object Object Input unmarshaller return new Replicated Consistent Hash Factory Override public Integer get Id return Ids Override public Set Class extends Replicated Consistent Hash Factory get Type Classes return Collections Class extends Replicated Consistent Hash Factory singleton Replicated Consistent Hash Factory class 
package org infinispan jmx import java lang reflect Field import java lang reflect Invocation Target Exception import java lang reflect Method import java lang reflect Modifier import java util Hash Map import java util Map import javax management Attribute import javax management Attribute List import javax management Attribute Not Found Exception import javax management Dynamic Bean import javax management Bean Attribute Info import javax management Bean Exception import javax management Bean Info import javax management Bean Operation Info import javax management Bean Parameter Info import javax management Reflection Exception import javax management Service Not Found Exception import org infinispan commons util Collection Factory import org infinispan commons util Reflection Util import org infinispan factories components Jmx Attribute Metadata import org infinispan factories components Jmx Operation Metadata import org infinispan factories components Jmx Operation Parameter import org infinispan factories components Manageable Component Metadata import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Operation import org infinispan util logging Log import org infinispan util logging Log Factory This class was entirely copied from Groups same name there Could n t simply reuse it because Groups does not ship with Bean Managed Attribute and Managed Operation p The original Group s Resource Bean logic has been modified so that invoke method checks whether the operation called has been exposed as a link Managed Operation otherwise the call fails Groups deviated from this logic on purpose because they liked the fact that you could expose all class methods by simply annotating class with link Bean annotation author Mircea Markus jboss com author Galder Zamarre o since public class Resource Bean implements Dynamic Bean private static final String Dynamic Bean Description private static final Log log Log Factory get Log Resource Bean class private static final boolean trace log is Trace Enabled private final Object obj private final Class object Class private final Ispn Bean Operation Info op Infos private final Bean Attribute Info att Infos private final Hash Map String Invokable Bean Attribute Info atts new Hash Map String Invokable Bean Attribute Info private final Manageable Component Metadata m Bean Metadata private static final Map String Field Collection Factory make Concurrent Map private static final Map String Method Collection Factory make Concurrent Map public Resource Bean Object instance Manageable Component Metadata m Bean Metadata throws No Such Field Exception Class Not Found Exception if instance null throw new Null Pointer Exception Can not make an Bean wrapper for null instance this obj instance this object Class instance get Class this m Bean Metadata m Bean Metadata Load up all fields int i att Infos new Bean Attribute Info m Bean Metadata get Attribute Metadata size for Jmx Attribute Metadata attribute Metadata m Bean Metadata get Attribute Metadata String attribute Name attribute Metadata get Name Invokable Bean Attribute Info info to Jmx Info attribute Metadata if atts contains Key attribute Name throw new Illegal Argument Exception Component m Bean Metadata get Name metadata has a duplicate attribute attribute Name atts put attribute Name info att Infos i info get Bean Attribute Info if trace log tracef Attribute s r b w b is b type s attribute Name info get Bean Attribute Info is Readable info get Bean Attribute Info is Writable info get Bean Attribute Info is Is info get Bean Attribute Info get Type And operations Ispn Bean Operation Info op op Infos new Ispn Bean Operation Info m Bean Metadata get Operation Metadata size i for Jmx Operation Metadata operation m Bean Metadata get Operation Metadata op to Jmx Info operation op Infos i op if trace log tracef Operation s s op get Return Type op get Name private static Field find Field Class object Class String field Name throws No Such Field Exception String key object Class get Name field Name Field f get key if f null f Reflection Util get Field field Name object Class if f null put key f return f private static Method find Setter Class object Class String field Name throws No Such Field Exception String key object Class get Name s field Name Method m get key if m null m Reflection Util find Setter For Field object Class field Name if m null put key m return m private static Method find Getter Class object Class String field Name throws No Such Field Exception String key object Class get Name g field Name Method m get key if m null m Reflection Util find Getter For Field object Class field Name if m null put key m return m private Invokable Bean Attribute Info to Jmx Info Jmx Attribute Metadata attribute Metadata throws No Such Field Exception if attribute Metadata is Use Setter Field field find Field object Class attribute Metadata get Name if field null return new Invokable Field Based Bean Attribute Info attribute Metadata get Name attribute Metadata get Type attribute Metadata get Description true attribute Metadata is Writable attribute Metadata is Is field this Method setter attribute Metadata is Writable find Setter object Class attribute Metadata get Name null Method getter find Getter object Class attribute Metadata get Name return new Invokable Setter Based Bean Attribute Info attribute Metadata get Name attribute Metadata get Type attribute Metadata get Description true attribute Metadata is Writable attribute Metadata is Is getter setter this private Ispn Bean Operation Info to Jmx Info Jmx Operation Metadata operation Metadata throws Class Not Found Exception Jmx Operation Parameter parameters operation Metadata get Method Parameters Bean Parameter Info params new Bean Parameter Info parameters length for int i i parameters length i params i new Bean Parameter Info parameters i get Name parameters i get Type parameters i get Description return new Ispn Bean Operation Info operation Metadata get Method Name operation Metadata get Description params operation Metadata get Return Type Bean Operation Info operation Metadata get Operation Name Object get Object return obj Override public synchronized Bean Info get Bean Info the client does n t know about Ispn Bean Operation Info so we need to convert first Bean Operation Info operation Info For Client new Bean Operation Info op Infos length for int i i op Infos length i Ispn Bean Operation Info current op Infos i operation Info For Client i new Bean Operation Info current get Operation Name current get Description current get Signature current get Return Type Bean Operation Info return new Bean Info get Object get Class get Canonical Name m Bean Metadata get Description att Infos null operation Info For Client null Override public Object get Attribute String name throws Attribute Not Found Exception if name null name length throw new Null Pointer Exception Invalid attribute requested name Attribute attr get Named Attribute name if attr null throw new Attribute Not Found Exception Unknown attribute name Known attributes names are atts key Set return attr get Value Override public synchronized void set Attribute Attribute attribute throws Attribute Not Found Exception Bean Exception if attribute null attribute get Name null throw new Null Pointer Exception Invalid attribute requested attribute set Named Attribute attribute Override public synchronized Attribute List get Attributes String names Attribute List al new Attribute List for String name names Attribute attr get Named Attribute name if attr null al add attr else log could Not Find Attribute name return al Override public synchronized Attribute List set Attributes Attribute List list Attribute List results new Attribute List for Object a List list Attribute attr Attribute a List try set Named Attribute attr results add attr catch Exception e log failed To Update Attribute attr get Name attr get Value return results Override public Object invoke String name Object args String sig throws Bean Exception Reflection Exception if log is Debug Enabled log debugf Invoke method called on s name Bean Operation Info op Info null for Ispn Bean Operation Info op op Infos if op get Operation Name equals name op Info op break if op Info null final String msg Operation name not amongst operations in op Infos throw new Bean Exception new Service Not Found Exception msg msg Argument type transformation according to signatures for int i i sig length i Some clients e g will pass the arguments as java lang String but we need some fields to be numbers if args i null if log is Debug Enabled log debugf Argument value before transformation s and its class s For method invoke we need it to be class s args i args i get Class sig i if sig i equals int class get Canonical Name sig i equals Integer class get Canonical Name if args i get Class Integer class args i get Class int class args i Integer parse Int String args i if sig i equals Long class get Canonical Name sig i equals long class get Canonical Name if args i get Class Long class args i get Class long class args i Long parse Long String args i try Class classes new Class sig length for int i i classes length i classes i Reflection Util get Class For Name sig i null Method method get Object get Class get Method op Info get Name classes return method invoke get Object args catch Exception e throw new Bean Exception new Exception get Root Cause e public Throwable get Root Cause Throwable throwable Throwable cause while cause throwable get Cause null throwable cause return throwable private Attribute get Named Attribute String name Attribute result null if name equals result new Attribute m Bean Metadata get Description else Invokable Bean Attribute Info i atts get name if i null name length This is legacy Earlier versions used an upper case starting letter for some attributes Character first Char name char At if Character is Upper Case first Char name name replace First Character to String first Char Character to String Character to Lower Case first Char i atts get name if i null try result new Attribute name i invoke null if trace log tracef Attribute s has r b w b is b and value s name i get Bean Attribute Info is Readable i get Bean Attribute Info is Writable i get Bean Attribute Info is Is result get Value catch Exception e log debugf e Exception while reading value of attribute s name else log queried Attribute Not Found name return result private void set Named Attribute Attribute attribute throws Bean Exception Attribute Not Found Exception if log is Debug Enabled log debugf Invoking set on attribute s with value s attribute get Name attribute get Value String name attribute get Name Invokable Bean Attribute Info i atts get name if i null name length This is legacy Earlier versions used an upper case starting letter for some attributes Character first Char name char At if Character is Upper Case first Char name name replace First Character to String first Char Character to String Character to Lower Case first Char i atts get name if i null try i invoke attribute catch Exception e log error Writing Value For Attribute name e throw new Bean Exception e Error invoking setter for attribute name else log could Not Invoke Set On Attribute name attribute get Value throw new Attribute Not Found Exception Could not find attribute name private static abstract class Invokable Bean Attribute Info private final Bean Attribute Info attribute Info public Invokable Bean Attribute Info String name String type String description boolean is Readable boolean is Writable boolean is Is attribute Info new Bean Attribute Info name type description is Readable is Writable is Is public abstract Object invoke Attribute a throws Illegal Access Exception Invocation Target Exception public Bean Attribute Info get Bean Attribute Info return attribute Info private static class Invokable Field Based Bean Attribute Info extends Invokable Bean Attribute Info private transient final Field field private transient final Resource Bean resource public Invokable Field Based Bean Attribute Info String name String type String description boolean is Readable boolean is Writable boolean is Is Field field Resource Bean resource super name type description is Readable is Writable is Is this field field this resource resource Override public Object invoke Attribute a throws Illegal Access Exception if Modifier is Public field get Modifiers field set Accessible true if a null return field get resource get Object else field set resource get Object a get Value return null private static class Invokable Setter Based Bean Attribute Info extends Invokable Bean Attribute Info private transient final Method setter private transient final Method getter private transient final Resource Bean resource public Invokable Setter Based Bean Attribute Info String name String type String description boolean is Readable boolean is Writable boolean is Is Method getter Method setter Resource Bean resource super name type description is Readable is Writable is Is this setter setter this getter getter this resource resource Override public Object invoke Attribute a throws Illegal Access Exception Invocation Target Exception if a null if Modifier is Public getter get Modifiers getter set Accessible true return getter invoke resource get Object null else if Modifier is Public setter get Modifiers setter set Accessible true return setter invoke resource get Object a get Value public String get Object Name String s m Bean Metadata get Jmx Object Name return s null s trim length s object Class get Simple Name 
package org infinispan factories import org infinispan factories annotations Default Factory For import org infinispan remoting responses Default Response Generator import org infinispan remoting responses Response Generator Creates a Response Generator author Manik Surtani since Default Factory For classes Response Generator class public class Response Generator Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override public construct Class component Type return component Type cast new Default Response Generator 
package org infinispan remoting rpc Represents different handling mechanisms when dealing with remote command responses These include waiting for responses from all nodes in the cluster link Response Mode not waiting for any responses at all link Response Mode or waiting for first valid response link Response Mode author Manik Surtani since public enum Response Mode Most commands should use this mode to prevent Suspect Exceptions when we are doing a broadcast or anycast that translates to Groups broadcast That would cause Suspect Exceptions in mode in a situation when node is leaving we want to address all living members but while topology was already updated view was not yet we use asymmetric cluster so the other nodes respond with Cache Not Found Response to such broadcast public boolean is Synchronous return is Asynchronous public boolean is Asynchronous return this 
package org infinispan upgrade import java util Hash Set import java util Set import java util concurrent Time Unit import org infinispan Cache import org infinispan commons util Service Finder import org infinispan commons util Util import org infinispan factories annotations Inject import org infinispan factories annotations Survives Restarts import org infinispan factories scopes Scope import org infinispan factories scopes Scopes import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Operation import org infinispan jmx annotations Parameter import org infinispan util Time Service import org infinispan util logging Log import org infinispan util logging Log Factory This component handles the control hooks to handle migrating from one version of Infinispan to another author Manik Surtani author Tristan Tarrant since Bean object Name Rolling Upgrade Manager description This component handles the control hooks to handle migrating data from one version of Infinispan to another Scope value Scopes Survives Restarts public class Rolling Upgrade Manager private static final Log log Log Factory get Log Rolling Upgrade Manager class private final Set Source Migrator source Migrators new Hash Set private Cache Object Object cache private Time Service time Service Inject public void initialize final Cache Object Object cache Time Service time Service this cache cache this time Service time Service Managed Operation description Synchronizes data from the old cluster to this using the specified migrator display Name Synchronizes data from the old cluster to this using the specified migrator public long synchronize Data Parameter name migrator Name description The name of the migrator to use String migrator Name throws Exception Target Migrator migrator get Migrator migrator Name long start time Service time long count migrator synchronize Data cache log entries Migrated count cache get Name Util pretty Print Time time Service time Duration start Time Unit return count Managed Operation description Synchronizes data from the old cluster to this using the specified migrator display Name Synchronizes data from the old cluster to this using the specified migrator public long synchronize Data Parameter name migrator Name description The name of the migrator to use String migrator Name Parameter name read Batch description Numbers of entries transferred at a time from the old cluster int read Batch Parameter name threads description Number of threads per node used to write data to the new cluster int threads throws Exception Target Migrator migrator get Migrator migrator Name long start time Service time long count migrator synchronize Data cache read Batch threads log entries Migrated count cache get Name Util pretty Print Time time Service time Duration start Time Unit return count Managed Operation description Disconnects the target cluster from the source cluster according to the specified migrator display Name Disconnects the target cluster from the source cluster public void disconnect Source Parameter name migrator Name description The name of the migrator to use String migrator Name throws Exception Target Migrator migrator get Migrator migrator Name migrator disconnect Source cache private Target Migrator get Migrator String name throws Exception Class Loader cl cache get Cache Manager get Cache Manager Configuration class Loader for Target Migrator m Service Finder load Target Migrator class cl if name equals Ignore Case m get Name return m throw log unknown Migrator name Registers a migrator for a specific data format or endpoint In the Infinispan ecosystem we d typically have one Migrator implementation for Hot Rod one for memcached one for and one for embedded in mode and these would typically be added to the upgrade manager on first access via any of these protocols param migrator public void add Source Migrator Source Migrator migrator source Migrators add migrator 
package org infinispan factories import org infinispan commons Cache Configuration Exception import org infinispan factories annotations Default Factory For import org infinispan remoting rpc Rpc Manager import org infinispan remoting rpc Rpc Manager Impl factory for the Rpc Manager author Manik Surtani a href mailto manik jboss org manik jboss org a since Default Factory For classes Rpc Manager class public class Rpc Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override public construct Class component Type if configuration clustering cache Mode is Clustered return null only do this if we have a transport configured if global Configuration is Clustered throw new Cache Configuration Exception Transport should be configured in order to use clustered caches return component Type cast new Rpc Manager Impl 
package org infinispan remoting rpc import java text Number Format import java util Collection import java util Hash Map import java util List import java util Map import java util Set import java util concurrent Completable Future import java util concurrent Completion Exception import java util concurrent Execution Exception import java util concurrent Time Unit import java util concurrent atomic Atomic Long import org infinispan commands Commands Factory import org infinispan commands Replicable Command import org infinispan commands Topology Affected Command import org infinispan commands remote Cache Rpc Command import org infinispan commons Cache Exception import org infinispan configuration cache Configuration import org infinispan distribution ch Consistent Hash import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan jmx Jmx Statistics Exposer import org infinispan jmx annotations Data Type import org infinispan jmx annotations Display Type import org infinispan jmx annotations Bean import org infinispan jmx annotations Managed Attribute import org infinispan jmx annotations Managed Operation import org infinispan jmx annotations Measurement Type import org infinispan jmx annotations Parameter import org infinispan jmx annotations Units import org infinispan remoting inboundhandler Deliver Order import org infinispan remoting responses Response import org infinispan remoting transport Address import org infinispan remoting transport Transport import org infinispan statetransfer State Transfer Manager import org infinispan topology Cache Topology import org infinispan util Time Service import org infinispan util concurrent Completable Futures import org infinispan util logging Log import org infinispan util logging Log Factory This component really is just a wrapper around a link org infinispan remoting transport Transport implementation and is used to set up the transport and provide lifecycle and dependency hooks into external transport implementations author Manik Surtani author Galder Zamarre o author Mircea Markus jboss com author Pedro Ruivo since Bean object Name Rpc Manager description Manages all remote calls to remote cache instances in the cluster public class Rpc Manager Impl implements Rpc Manager Jmx Statistics Exposer private static final Log log Log Factory get Log Rpc Manager Impl class private static final boolean trace log is Trace Enabled private Transport t private final Atomic Long replication Count new Atomic Long private final Atomic Long replication Failures new Atomic Long private final Atomic Long total Replication Time new Atomic Long private boolean statistics Enabled false by default do n t gather statistics private Configuration configuration private Commands Factory cf private State Transfer Manager state Transfer Manager private Time Service time Service Inject public void inject Dependencies Transport t Configuration cfg Commands Factory cf State Transfer Manager state Transfer Manager Time Service time Service this t t this configuration cfg this cf cf this state Transfer Manager state Transfer Manager this time Service time Service Start priority private void start statistics Enabled configuration jmx Statistics enabled if configuration transaction transaction Protocol is Total Order t check Total Order Supported Managed Attribute description Retrieves the committed view display Name Committed view data Type Data Type public String get Committed View As String Cache Topology cache Topology state Transfer Manager get Cache Topology if cache Topology null return return cache Topology get Current get Members to String Managed Attribute description Retrieves the pending view display Name Pending view data Type Data Type public String get Pending View As String Cache Topology cache Topology state Transfer Manager get Cache Topology if cache Topology null return Consistent Hash pending cache Topology get Pending return pending null pending get Members to String null Override public Completable Future Map Address Response invoke Remotely Async Collection Address recipients Replicable Command rpc Rpc Options options if trace log tracef s invoking s to recipient list s with options s t get Address rpc recipients options if configuration clustering cache Mode is Clustered throw new Illegal State Exception Trying to invoke a remote command but the cache is not clustered Set the topology id of the command in case we do n t have it yet set Topology Id rpc Cache Rpc Command cache Rpc rpc instanceof Cache Rpc Command Cache Rpc Command rpc cf build Single Rpc Command rpc long start Time Nanos statistics Enabled time Service time Completable Future Map Address Response invocation try invocation t invoke Remotely Async recipients cache Rpc options response Mode options time Unit to Millis options timeout options response Filter options deliver Order configuration clustering cache Mode is Distributed catch Exception e log unexpected Error Replicating e if statistics Enabled replication Failures increment And Get return rethrow As Cache Exception e return invocation handle response Map throwable if statistics Enabled long time Taken time Service time Duration start Time Nanos Time Unit total Replication Time get And Add time Taken if throwable null if statistics Enabled replication Count increment And Get if trace log tracef Response s to s is s rpc response Map return response Map else if statistics Enabled replication Failures increment And Get return rethrow As Cache Exception throwable private rethrow As Cache Exception Throwable throwable if throwable get Cause null throwable instanceof Completion Exception throwable throwable get Cause if throwable instanceof Cache Exception log trace Replication exception throwable throw Cache Exception throwable else log unexpected Error Replicating throwable throw new Cache Exception throwable Override public Map Address Response invoke Remotely Collection Address recipients Replicable Command rpc Rpc Options options Completable Future Map Address Response future invoke Remotely Async recipients rpc options try return Completable Futures await future catch Interrupted Exception e Thread current Thread interrupt throw new Cache Exception Thread interrupted while invoking e catch Execution Exception e Throwable cause e get Cause if cause instanceof Cache Exception throw Cache Exception cause else throw new Cache Exception Unexpected exception replicating command cause Override public Map Address Response invoke Remotely Map Address Replicable Command rpcs Rpc Options options if trace log tracef s invoking s with options s t get Address rpcs options do n t use replication queue as we do n t want to send the command to all other nodes if configuration clustering cache Mode is Clustered throw new Illegal State Exception Trying to invoke a remote command but the cache is not clustered Map Address Replicable Command replaced Commands null for Map Entry Address Replicable Command entry rpcs entry Set Replicable Command rpc entry get Value Set the topology id of the command in case we do n t have it yet set Topology Id rpc if rpc instanceof Cache Rpc Command rpc cf build Single Rpc Command rpc we ca n t modify the map during iteration if replaced Commands null replaced Commands new Hash Map replaced Commands put entry get Key rpc if replaced Commands null rpcs put All replaced Commands long start Time Nanos if statistics Enabled start Time Nanos time Service time try Map Address Response result t invoke Remotely rpcs options response Mode options time Unit to Millis options timeout options response Filter options deliver Order configuration clustering cache Mode is Distributed if statistics Enabled replication Count increment And Get if trace log tracef Response s to s is s rpcs result return result catch Interrupted Exception e Thread current Thread interrupt throw new Cache Exception Thread interrupted while invoking e catch Cache Exception e log trace replication exception e if statistics Enabled replication Failures increment And Get throw e catch Throwable th log unexpected Error Replicating th if statistics Enabled replication Failures increment And Get throw new Cache Exception th finally if statistics Enabled long time Taken time Service time Duration start Time Nanos Time Unit total Replication Time get And Add time Taken private Cache Rpc Command to Cache Rpc Command Replicable Command command return command instanceof Cache Rpc Command Cache Rpc Command command cf build Single Rpc Command command Override public void send To Address destination Replicable Command command Deliver Order deliver Order if trace log tracef s invoking s to s ordered by s t get Address command destination deliver Order Set the topology id of the command in case we do n t have it yet set Topology Id command Cache Rpc Command cache Rpc to Cache Rpc Command command try t send To destination cache Rpc deliver Order catch Exception e error Replicating e Override public void send To Many Collection Address destinations Replicable Command command Deliver Order deliver Order if trace log tracef s invoking s to list s ordered by s t get Address command destinations deliver Order Set the topology id of the command in case we do n t have it yet set Topology Id command Cache Rpc Command cache Rpc to Cache Rpc Command command try t send To Many destinations cache Rpc deliver Order catch Exception e error Replicating e private void error Replicating Exception e log unexpected Error Replicating e if statistics Enabled replication Failures increment And Get rethrow As Cache Exception e Override public Transport get Transport return t private void set Topology Id Replicable Command command if command instanceof Topology Affected Command Topology Affected Command topology Affected Command Topology Affected Command command if topology Affected Command get Topology Id int current Topology Id state Transfer Manager get Cache Topology get Topology Id if trace log tracef Topology id missing on command s setting it to d command current Topology Id topology Affected Command set Topology Id current Topology Id information Override Managed Operation description Resets statistics gathered by this component display Name Reset statistics public void reset Statistics replication Count set replication Failures set total Replication Time set Managed Attribute description Number of successful replications display Name Number of successful replications measurement Type Measurement Type display Type Display Type public long get Replication Count if is Statistics Enabled return return replication Count get Managed Attribute description Number of failed replications display Name Number of failed replications measurement Type Measurement Type display Type Display Type public long get Replication Failures if is Statistics Enabled return return replication Failures get Managed Attribute description Enables or disables the gathering of statistics by this component display Name Statistics enabled data Type Data Type writable true public boolean is Statistics Enabled return statistics Enabled Override public boolean get Statistics Enabled return is Statistics Enabled deprecated We already have an attribute we should n t have an operation for the same thing Override Deprecated Managed Operation display Name Enable disable statistics Deprecated use the statistics Enabled attribute instead public void set Statistics Enabled Parameter name enabled description Whether statistics should be enabled or disabled true false boolean statistics Enabled this statistics Enabled statistics Enabled Managed Attribute description Successful replications as a ratio of total replications display Name Successful replications ratio public String get Success Ratio if replication Count get statistics Enabled return double ration calculate Success Ratio d return Number Format get Instance format ration Managed Attribute description Successful replications as a ratio of total replications in numeric double format display Name Successful replication ratio units Units display Type Display Type public double get Success Ratio Floating Point if replication Count get statistics Enabled return return calculate Success Ratio private double calculate Success Ratio double total Count replication Count get replication Failures get return replication Count get total Count Managed Attribute description The average time spent in the transport layer in milliseconds display Name Average time spent in the transport layer units Units display Type Display Type public long get Average Replication Time if replication Count get return return total Replication Time get replication Count get Managed Attribute description Retrieves the x site view display Name Cross site x site view data Type Data Type public String get Sites View Set String sites View t get Sites View return sites View null sites View to String mainly for unit testing public void set Transport Transport t this t t Override public Address get Address return t null t get Address null Override public int get Topology Id Cache Topology cache Topology state Transfer Manager get Cache Topology return cache Topology null cache Topology get Topology Id Override public Rpc Options Builder get Rpc Options Builder Response Mode response Mode return get Rpc Options Builder response Mode response Mode is Synchronous Deliver Order Deliver Order Override public Rpc Options Builder get Rpc Options Builder Response Mode response Mode Deliver Order deliver Order return new Rpc Options Builder configuration clustering remote Timeout Time Unit response Mode deliver Order Override public Rpc Options get Default Rpc Options boolean sync return get Default Rpc Options sync sync Deliver Order Deliver Order Override public Rpc Options get Default Rpc Options boolean sync Deliver Order deliver Order return get Rpc Options Builder sync Response Mode Response Mode deliver Order build Override public List Address get Members return state Transfer Manager get Cache Topology get Members 
package org infinispan commons executors import java util concurrent Scheduled Executor Service import java util concurrent Scheduled Thread Pool Executor import java util concurrent Thread Factory author Galder Zamarre o public enum Scheduled Thread Pool Executor Factory implements Thread Pool Executor Factory Scheduled Executor Service Override public Scheduled Executor Service create Executor Thread Factory factory Scheduled Thread Pool Executor result new Scheduled Thread Pool Executor factory result set Remove On Cancel Policy true return result Override public void validate No op public static Scheduled Thread Pool Executor Factory create return 
package org infinispan client hotrod event import java lang reflect Method import java security Access Controller import java security Privileged Action import org infinispan client hotrod logging Log import org infinispan client hotrod logging Log Factory Security Actions for the org infinispan client hotrod event package Do not move Do not change class and method visibility to avoid being called from other link java security Code Source s thus granting privilege escalation to external code author Galder Zamarre o since final class Security Actions private static final Log log Log Factory get Log Security Actions class private Security Actions static void set Accessible final Method m try if System get Security Manager null Access Controller do Privileged new Privileged Action Void Override public Void run m set Accessible true return null else m set Accessible true catch Exception e log unable To Set Accesible m e 
package org infinispan stream impl termop import java util concurrent atomic Atomic Boolean import java util concurrent atomic Atomic Reference import java util function Function import java util function Supplier import java util stream Base Stream import java util stream Stream import org infinispan stream impl Terminal Operation import org infinispan stream impl intops Intermediate Operation import org infinispan util logging Log import org infinispan util logging Log Factory terminal based operation that runs the provided function to evaluate the operation If a segment is lost during the evaluation of the function the function results will be ignored and subsequently retried with the new stable segments This is repeated until either a full stable run is completed of the function or if the lost segment states that there are no more segments left param output type of the function param type of the stream entries param type of the stream itself public class Segment Retrying Operation extends Base Stream extends extends Base Terminal Operation implements Terminal Operation private static final Log log Log Factory get Log Segment Retrying Operation class private static final Base Stream Stream empty private final Function super extends function private transient Atomic Reference Base Stream stream Ref new Atomic Reference private transient Atomic Boolean continue Trying new Atomic Boolean true public Segment Retrying Operation Iterable Intermediate Operation intermediate Operations Supplier extends Stream supplier Function super extends function super intermediate Operations supplier this function function Override public boolean lost Segment boolean stop If Lost Base Stream old Stream stream Ref get continue Trying set stop If Lost boolean affected if old Stream null If the stream was non null and was n t empty that means we were processing it at the time of the segment being lost so we tell that one to close if old Stream This can only fail if the operation completes concurrently if affected stream Ref compare And Set old Stream This can short circuit some things like sending a response or waiting for retrieval from a cache loader old Stream close else affected true else affected false return affected private inner Perform Operation Base Stream stream for Intermediate Operation int Op intermediate Operations stream int Op perform stream return function apply stream Override public perform Operation boolean keep Trying true Base Stream stream value do stream supplier get stream Ref set stream value inner Perform Operation stream log trace Completed an operation trying to see if we are done while stream Ref compare And Set stream null keep Trying continue Trying get log tracef Operation now done due to try denial keep Trying return keep Trying value null public Function super extends get Function return function 
package org infinispan transaction xa recovery import java io Exception import java io Object Input import java io Object Output import java util Arrays import java util Set import javax transaction xa Xid import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids import net jcip annotations Immutable This xid implementation is needed because link javax transaction xa Xid is not link java io Serializable and we need to serialize it and send it over the network As the spec does not enforce in anyway the equals and hashcode methods on Xid providers are expected to be able to cope with this Xid class when returned from Resource s methods author Mircea Markus jboss com since deprecated use link org infinispan commons tx Xid Impl instead Immutable Deprecated public class Serializable Xid implements Xid private final byte branch Qualifier private final byte global Transaction Id private final int format Id public Serializable Xid byte branch Qualifier byte global Transaction Id int formant Id this branch Qualifier branch Qualifier this global Transaction Id global Transaction Id this format Id formant Id public Serializable Xid Xid xid this xid get Branch Qualifier xid get Global Transaction Id xid get Format Id Override public byte get Branch Qualifier return branch Qualifier Override public byte get Global Transaction Id return global Transaction Id Override public int get Format Id return format Id Override public boolean equals Object o if this o return true if o null o instanceof Xid return false Xid xid Xid o if format Id xid get Format Id return false if Arrays equals branch Qualifier xid get Branch Qualifier return false if Arrays equals global Transaction Id xid get Global Transaction Id return false return true Override public int hash Code int result branch Qualifier null Arrays hash Code branch Qualifier result result global Transaction Id null Arrays hash Code global Transaction Id result result format Id return result Override public String to String taken from com arjuna ats jta xa String Builder string Builder new String Builder string Builder append string Builder append format Id string Builder append string Builder append global Transaction Id length string Builder append string Builder append branch Qualifier length string Builder append for byte a Global Transaction Id global Transaction Id string Builder append a Global Transaction Id string Builder append for byte a Branch Qualifier branch Qualifier string Builder append a Branch Qualifier string Builder append return string Builder to String public static class Xid Externalizer extends Abstract Externalizer Serializable Xid Override public void write Object Object Output output Serializable Xid object throws Exception output write Object object get Branch Qualifier output write Object object get Global Transaction Id output write Int object get Format Id Override public Serializable Xid read Object Object Input input throws Exception Class Not Found Exception byte bq byte input read Object byte gt Id byte input read Object int type input read Int return new Serializable Xid bq gt Id type Override public Set Class extends Serializable Xid get Type Classes return Util Class extends Serializable Xid as Set Serializable Xid class Override public Integer get Id return Ids 
package org infinispan configuration global import java util Map import org infinispan Version import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set import org infinispan commons marshall Advanced Externalizer import org infinispan commons marshall Marshaller import org jboss marshalling Class Resolver public class Serialization Configuration public static final Attribute Definition Marshaller Attribute Definition builder marshaller null Marshaller class immutable build public static final Attribute Definition Short Attribute Definition builder version Version get Marshall Version immutable build public static final Attribute Definition Class Resolver Attribute Definition builder class Resolver null Class Resolver class immutable build static Attribute Set attribute Definition Set return new Attribute Set Serialization Configuration class private final Map Integer Advanced Externalizer advanced Externalizers private final Class Resolver class Resolver private final Marshaller marshaller private final short version private final Attribute Set attributes Serialization Configuration Attribute Set attributes Map Integer Advanced Externalizer advanced Externalizers this attributes attributes check Protection this marshaller attributes attribute get this version attributes attribute get this class Resolver attributes attribute get this advanced Externalizers advanced Externalizers public Marshaller marshaller return marshaller public short version return version public Map Integer Advanced Externalizer advanced Externalizers return advanced Externalizers public Class Resolver class Resolver return class Resolver public Attribute Set attributes return attributes Override public String to String return Serialization Configuration advanced Externalizers advanced Externalizers attributes attributes Override public int hash Code final int prime int result result prime result advanced Externalizers null advanced Externalizers hash Code result prime result attributes null attributes hash Code return result Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Serialization Configuration other Serialization Configuration obj if advanced Externalizers null if other advanced Externalizers null return false else if advanced Externalizers equals other advanced Externalizers return false if attributes null if other attributes null return false else if attributes equals other attributes return false return true 
package org infinispan configuration global import static org infinispan configuration global Serialization Configuration import static org infinispan configuration global Serialization Configuration import static org infinispan configuration global Serialization Configuration import java util Hash Map import java util Map import org infinispan Version import org infinispan commons Cache Configuration Exception import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan commons marshall Advanced Externalizer import org infinispan commons marshall Marshaller import org jboss marshalling Class Resolver Configures serialization and marshalling settings public class Serialization Configuration Builder extends Abstract Global Configuration Builder implements Builder Serialization Configuration private final Attribute Set attributes private Map Integer Advanced Externalizer advanced Externalizers new Hash Map Serialization Configuration Builder Global Configuration Builder global Config super global Config attributes Serialization Configuration attribute Definition Set Set the marshaller instance that will marshall and unmarshall cache entries param marshaller public Serialization Configuration Builder marshaller Marshaller marshaller attributes attribute set marshaller return this public Marshaller get Marshaller return attributes attribute get Largest allowable version to use when marshalling internal state Set this to the lowest version cache instance in your cluster to ensure compatibility of communications However setting this too low will mean you lose out on the benefit of improvements in newer versions of the marshaller param marshall Version public Serialization Configuration Builder version short marshall Version attributes attribute set marshall Version return this Largest allowable version to use when marshalling internal state Set this to the lowest version cache instance in your cluster to ensure compatibility of communications However setting this too low will mean you lose out on the benefit of improvements in newer versions of the marshaller param marshall Version public Serialization Configuration Builder version String marshall Version this version Version get Version Short marshall Version return this Helper method that allows for quick registration of an link Advanced Externalizer implementation alongside its corresponding identifier Remember that the identifier needs to a be positive number including and can not clash with other identifiers in the system param id param advanced Externalizer public Serialization Configuration Builder add Advanced Externalizer int id Advanced Externalizer advanced Externalizer Advanced Externalizer ext advanced Externalizers get id if ext null throw new Cache Configuration Exception String format Duplicate externalizer id found Externalizer id d for s is shared by another externalizer s id advanced Externalizer get Class get Name ext get Class get Name advanced Externalizers put id advanced Externalizer return this Helper method that allows for quick registration of an link Advanced Externalizer implementation alongside its corresponding identifier Remember that the identifier needs to a be positive number including and can not clash with other identifiers in the system param advanced Externalizer public Serialization Configuration Builder add Advanced Externalizer Advanced Externalizer advanced Externalizer Integer id advanced Externalizer get Id if id null throw new Cache Configuration Exception String format No advanced externalizer identifier set for externalizer s advanced Externalizer get Class get Name this add Advanced Externalizer id int Value advanced Externalizer return this Helper method that allows for quick registration of link Advanced Externalizer implementations param advanced Externalizers public Serialization Configuration Builder add Advanced Externalizer Advanced Externalizer advanced Externalizers for Advanced Externalizer advanced Externalizer advanced Externalizers this add Advanced Externalizer advanced Externalizer return this Class resolver to use when unmarshalling objects param class Resolver public Serialization Configuration Builder class Resolver Class Resolver class Resolver attributes attribute set class Resolver return this Override public void validate No op no validation required Override public Serialization Configuration create return new Serialization Configuration attributes protect advanced Externalizers Override public Serialization Configuration Builder read Serialization Configuration template this attributes read template attributes this advanced Externalizers template advanced Externalizers return this Override public String to String return Serialization Configuration Builder attributes attributes advanced Externalizers advanced Externalizers 
package org infinispan commons marshall jboss import org infinispan commons marshall Serialize Function With import org infinispan commons marshall Serialize With import org jboss marshalling Annotation Class Externalizer Factory import org jboss marshalling Class Externalizer Factory import org jboss marshalling Externalizer Boss Marshalling plugin class for link Class Externalizer Factory that allows for Infinispan annotations to be used instead of Boss Marshalling ones in order to discover which classes are serializable with Infinispan externalizers author Galder Zamarre o since public class Serialize With Ext Factory implements Class Externalizer Factory final Class Externalizer Factory jbmar Ext Factory new Annotation Class Externalizer Factory Override public Externalizer get Externalizer Class type Serialize With serial With Ann type get Annotation Serialize With class Serialize Function With lambda Serial With Ann type get Annotation Serialize Function With class if serial With Ann null lambda Serial With Ann null Check for Boss Marshaller s Externalize return jbmar Ext Factory get Externalizer type else try org infinispan commons marshall Externalizer ext serial With Ann null serial With Ann value new Instance lambda Serial With Ann value new Instance return new Boss Externalizer Adapter ext catch Exception e throw new Illegal Argument Exception String format Can not instantiate externalizer for s type e 
package org infinispan commons util import java util Collection import java util Iterator import java util Linked Hash Map import java util Map import java util Service Configuration Error import java util Service Loader import org infinispan commons logging Log import org infinispan commons logging Log Factory import org osgi framework Bundle Context import org osgi framework Framework Util import org osgi util tracker Service Tracker Service Finder is a link java util Service Loader replacement which understands multiple classpaths author Tristan Tarrant author Brett Meyer since public class Service Finder private static final Log Log Factory get Log Service Finder class public static Collection load Class contract Class Loader loaders Map String services new Linked Hash Map if loaders length try Service Loader loaded Services Service Loader load contract add Services loaded Services services catch Exception e Ignore else for Class Loader loader loaders if loader null continue try Service Loader loaded Services Service Loader load contract loader add Services loaded Services services catch Exception e Ignore add Osgi Services contract services if services is Empty debugf No service impls found s contract get Simple Name return services values private static void add Services Service Loader loaded Services Map String services Iterator i loaded Services iterator while i has Next try service i next if services put If Absent service get Class get Name service null debugf Loading service impl s service get Class get Simple Name else debugf Ignoring already loaded service s service get Class get Simple Name catch Service Configuration Error e debugf Skipping service impl e private static void add Osgi Services Class contract Map String services if Util is Gi Context return final Bundle Context bundle Context Framework Util get Bundle Service Finder class get Bundle Context final Service Tracker service Tracker new Service Tracker bundle Context contract get Name null service Tracker open try final Object osgi Services service Tracker get Services if osgi Services null for Object osgi Service osgi Services if services put If Absent osgi Service get Class get Name osgi Service null debugf Loading service impl s osgi Service get Class get Simple Name else debugf Ignoring already loaded service s osgi Service get Class get Simple Name catch Exception e ignore 
package org infinispan context import java util Collections import java util Map import java util Set import org infinispan container entries Cache Entry import org infinispan remoting transport Address author Mircea Markus author Sanne Grinovero deprecated Since this class is going to be moved to an internal package Deprecated public final class Single Key Non Tx Invocation Context implements Invocation Context It is possible for the key to only be wrapped but not locked e g when a get takes place private boolean is Locked private Object key private Cache Entry cache Entry move the Origin s address to the Invocation Context Factory when is Origin Local true all addresses are the same Memory allocation cost verify if this is worth it by looking at object alignment would need a different implementation as pointing to null would n t help private final Address origin private Object lock Owner public Single Key Non Tx Invocation Context final Address origin this origin origin Override public boolean is Origin Local return origin null Override public boolean is In Tx Scope return false Override public Object get Lock Owner return lock Owner Override public void set Lock Owner Object lock Owner this lock Owner lock Owner Override public Invocation Context clone try return Invocation Context super clone catch Clone Not Supported Exception e throw new Illegal State Exception Impossible e Override public Set Object get Locked Keys return is Locked Collections singleton key Collections empty Set Override public void clear Locked Keys is Locked false Dan this should n t be necessary but we do n t clear the looked up keys when retrying a non tx command because of a topology change cache Entry null Override public void add Locked Key final Object key if this key null Set the key here this key key else if is Key Equals key throw illegal State Exception is Locked true private Illegal State Exception illegal State Exception return new Illegal State Exception This is a single key invocation context using multiple keys should n t be possible Override public Cache Entry lookup Entry final Object key if this key null is Key Equals key return cache Entry return null public boolean is Key Equals Object key return this key key this key equals key Override public Map Object Cache Entry get Looked Up Entries return cache Entry null Collections empty Map Collections singleton Map key cache Entry Override public void put Looked Up Entry final Object key final Cache Entry e if this key null Set the key here this key key else if is Key Equals key throw illegal State Exception this cache Entry e Override public void remove Looked Up Entry final Object key if this key null is Key Equals key this cache Entry null public Object get Key return key public Cache Entry get Cache Entry return cache Entry Override public Address get Origin return origin Override public Class Loader get Class Loader return null Override public void set Class Loader Class Loader class Loader No op Override public boolean has Locked Key final Object key return is Locked is Key Equals key Override public boolean is Entry Removed In Context final Object key Cache Entry ce lookup Entry key return ce null ce is Removed ce is Changed public void reset State this key null this cache Entry null this is Locked false Override public String to String final String Builder sb new String Builder Single Key Non Tx Invocation Context sb append is Locked append is Locked sb append key append key sb append cache Entry append cache Entry sb append origin append origin sb append lock Owner append lock Owner sb append return sb to String 
package org infinispan configuration cache import java util Array List import java util Collections import java util Hash Set import java util List import java util Set import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Initializer import org infinispan commons configuration attributes Attribute Set author Mircea Markus jboss com since public class Sites Configuration public static final Attribute Definition Boolean Attribute Definition builder disable false immutable build public static final Attribute Definition Set String Attribute Definition builder backup sites in use null Class Set String Class Set class initializer new Attribute Initializer Set String Override public Set String initialize return new Hash Set immutable build static final Attribute Set attribute Definition Set return new Attribute Set Sites Configuration class private final Backup For Configuration backup For private final List Backup Configuration all Backups private final Attribute Boolean disable Backups private final Attribute Set String in Use Backup Sites private final Attribute Set attributes public Sites Configuration Attribute Set attributes List Backup Configuration all Backups Backup For Configuration backup For this attributes attributes check Protection this all Backups Collections unmodifiable List all Backups this disable Backups attributes attribute this in Use Backup Sites attributes attribute this backup For backup For Returns true if this cache wo n t backup its data remotely It would still accept other sites backing up data on this site public boolean disable Backups return disable Backups get Returns the list of all sites where this cache might back up its data The list of actual sites is defined by link in Use Backup Sites public List Backup Configuration all Backups return all Backups Returns the list of link Backup Configuration that have link org infinispan configuration cache Backup Configuration enabled true public List Backup Configuration enabled Backups List Backup Configuration result new Array List for Backup Configuration bc all Backups if bc enabled result add bc return result return information about caches that backup data into this cache public Backup For Configuration backup For return backup For public Backup Failure Policy get Failure Policy String site Name for Backup Configuration bc all Backups if bc site equals site Name return bc backup Failure Policy throw new Illegal State Exception There must be a site configured for site Name public boolean has In Use Backup String site Name for Backup Configuration bc all Backups if bc site equals site Name return bc enabled return false public boolean has Enabled Backups for Backup Configuration bc all Backups if bc enabled return true return false public Set String in Use Backup Sites return in Use Backup Sites get public Attribute Set attributes return attributes Override public int hash Code final int prime int result result prime result attributes null attributes hash Code result prime result backup For null backup For hash Code return result Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Sites Configuration other Sites Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false if backup For null if other backup For null return false else if backup For equals other backup For return false return true Override public String to String return Sites Configuration backup For backup For all Backups all Backups attributes attributes 
package org infinispan statetransfer import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan factories Known Component Names import static org infinispan persistence manager Persistence Manager Access Mode import java util Array List import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import java util concurrent Completable Future import java util concurrent Count Down Latch import java util concurrent Executor Service import java util concurrent Time Unit import java util concurrent atomic Atomic Boolean import java util concurrent atomic Atomic Integer import java util stream Collectors import java util stream Int Stream import javax transaction System Exception import javax transaction Transaction Manager import org infinispan Cache import org infinispan commands Commands Factory import org infinispan commands write Invalidate Command import org infinispan commands write Put Key Value Command import org infinispan commons Cache Exception import org infinispan commons util Enum Util import org infinispan commons util Small Int Set import org infinispan commons util concurrent Concurrent Hash Set import org infinispan configuration cache Cache Mode import org infinispan configuration cache Configuration import org infinispan configuration cache Partition Handling Configuration import org infinispan conflict impl Internal Conflict Manager import org infinispan container Data Container import org infinispan container entries Internal Cache Entry import org infinispan context Invocation Context import org infinispan context Invocation Context Factory import org infinispan context impl Tx Invocation Context import org infinispan distexec Distributed Callable import org infinispan distribution Distribution Info import org infinispan distribution Distribution Manager import org infinispan distribution Triangle Order Manager import org infinispan distribution ch Consistent Hash import org infinispan distribution ch Key Partitioner import org infinispan executors Limited Executor import org infinispan factories Known Component Names import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan filter Key Filter import org infinispan interceptors Async Interceptor Chain import org infinispan notifications cachelistener Cache Notifier import org infinispan partitionhandling Partition Handling import org infinispan persistence manager Persistence Manager import org infinispan remoting responses Cache Not Found Response import org infinispan remoting responses Response import org infinispan remoting responses Successful Response import org infinispan remoting rpc Response Mode import org infinispan remoting rpc Rpc Manager import org infinispan remoting rpc Rpc Options import org infinispan remoting transport Address import org infinispan remoting transport jgroups Suspect Exception import org infinispan topology Cache Topology import org infinispan topology Local Topology Manager import org infinispan transaction impl Remote Transaction import org infinispan transaction impl Transaction Table import org infinispan transaction totalorder Total Order Latch import org infinispan transaction totalorder Total Order Manager import org infinispan transaction xa Cache Transaction import org infinispan transaction xa Global Transaction import org infinispan util concurrent Blocking Task Aware Executor Service import org infinispan util concurrent Command Ack Collector import org infinispan util concurrent Completable Futures import org infinispan util concurrent Timeout Exception import org infinispan util logging Log import org infinispan util logging Log Factory import net jcip annotations Guarded By link State Consumer implementation author anistor redhat com since public class State Consumer Impl implements State Consumer protected static final Log log Log Factory get Log State Consumer Impl class protected static final boolean trace log is Trace Enabled protected static final int protected static final long Enum Util bit Set Of protected Cache cache protected State Transfer Manager state Transfer Manager protected Local Topology Manager local Topology Manager protected String cache Name protected Configuration configuration protected Rpc Manager rpc Manager protected Transaction Manager transaction Manager optional protected Commands Factory commands Factory protected Transaction Table transaction Table optional protected Data Container Object Object data Container protected Persistence Manager persistence Manager protected Async Interceptor Chain interceptor Chain protected Invocation Context Factory icf protected State Transfer Lock state Transfer Lock protected Cache Notifier cache Notifier protected Total Order Manager total Order Manager protected Blocking Task Aware Executor Service remote Commands Executor protected long timeout protected boolean is Fetch Enabled protected boolean is Transactional protected boolean is Invalidation Mode protected boolean is Total Order protected volatile Key Invalidation Listener key Invalidation Listener for test purpose only protected Commit Manager commit Manager protected Executor Service state Transfer Executor protected Command Ack Collector command Ack Collector protected Triangle Order Manager triangle Order Manager protected Distribution Manager distribution Manager protected Key Partitioner key Partitioner private Internal Conflict Manager conflict Manager protected volatile Cache Topology cache Topology Indicates if there is a state transfer in progress It is set to the new topology id when on Topology Update with is Rebalance true is called It is changed back to when a topology update with a null pending is received protected final Atomic Integer state Transfer Topology Id new Atomic Integer Indicates if there is a rebalance in progress and there the local node has not yet received all the new segments yet It is set to true when rebalance starts and becomes when all inbound transfers have completed before state Transfer Topology Id is set back to protected final Atomic Boolean waiting For State new Atomic Boolean false protected Completable Future Void state Transfer Future Completable Futures completed Null protected final Object transfer Maps Lock new Object map that keeps track of current inbound state transfers by source address There could be multiple transfers flowing in from the same source but for different segments so the values are lists This works in tandem with transfers By Segment so they always need to be kept in sync and updates to both of them need to be atomic Guarded By transfer Maps Lock private final Map Address List Inbound Transfer Task transfers By Source new Hash Map map that keeps track of current inbound state transfers by segment id There is at most one transfers per segment This works in tandem with transfers By Source so they always need to be kept in sync and updates to both of them need to be atomic Guarded By transfer Maps Lock protected final Map Integer List Inbound Transfer Task transfers By Segment new Hash Map Push Cs on a background thread protected Limited Executor state Request Executor private volatile boolean owns Data false protected Rpc Options synchronous Rpc Options protected Rpc Options synchronous Ignore Leavers Rpc Options public State Consumer Impl Stops applying incoming state Also stops tracking updated keys Should be called at the end of state transfer or when a Clear Command is committed during state transfer param topology Id Override public void stop Applying State int topology Id if trace log tracef Stop keeping track of changed keys for state transfer in topology d topology Id commit Manager stop Track Inject public void init Cache cache Component Name Executor Service state Transfer Executor State Transfer Manager state Transfer Manager Local Topology Manager local Topology Manager Async Interceptor Chain interceptor Chain Invocation Context Factory icf Configuration configuration Rpc Manager rpc Manager Transaction Manager transaction Manager Commands Factory commands Factory Persistence Manager persistence Manager Data Container Object Object data Container Transaction Table transaction Table State Transfer Lock state Transfer Lock Cache Notifier cache Notifier Total Order Manager total Order Manager Component Name Known Component Names Blocking Task Aware Executor Service remote Commands Executor Commit Manager commit Manager Command Ack Collector command Ack Collector Triangle Order Manager triangle Order Manager Distribution Manager distribution Manager Key Partitioner key Partitioner Internal Conflict Manager conflict Manager this cache cache this cache Name cache get Name this state Transfer Executor state Transfer Executor this state Transfer Manager state Transfer Manager this local Topology Manager local Topology Manager this interceptor Chain interceptor Chain this icf icf this configuration configuration this rpc Manager rpc Manager this transaction Manager transaction Manager this commands Factory commands Factory this persistence Manager persistence Manager this data Container data Container this transaction Table transaction Table this state Transfer Lock state Transfer Lock this cache Notifier cache Notifier this total Order Manager total Order Manager this remote Commands Executor remote Commands Executor this commit Manager commit Manager this command Ack Collector command Ack Collector this triangle Order Manager triangle Order Manager this distribution Manager distribution Manager this key Partitioner key Partitioner this conflict Manager conflict Manager is Invalidation Mode configuration clustering cache Mode is Invalidation is Transactional configuration transaction transaction Mode is Transactional is Total Order configuration transaction transaction Protocol is Total Order timeout configuration clustering state Transfer timeout public boolean has Active Transfers synchronized transfer Maps Lock return transfers By Source is Empty Override public boolean is State Transfer In Progress return state Transfer Topology Id get Override public boolean is State Transfer In Progress For Key Object key if is Invalidation Mode In invalidation mode it is of not much relevance if the key is actually being transferred right now false response to this will just mean the usual remote lookup before a write operation is not performed and a null is assumed But in invalidation mode the user must expect the data can disappear from cache at any time so this null previous value should not cause any trouble return false Distribution Info distribution Info distribution Manager get Cache Topology get Distribution key return distribution Info is Write Owner distribution Info is Read Owner Override public boolean owns Data return owns Data Override public Completable Future Void on Topology Update final Cache Topology cache Topology final boolean is Rebalance final boolean is Member cache Topology get Members contains rpc Manager get Address final boolean start Conflict Resolution is Rebalance cache Topology get Phase Cache Topology Phase if trace log tracef Received new topology for cache s is Rebalance b is Member b topology s cache Name is Rebalance is Member cache Topology if owns Data is Member owns Data true else if owns Data is Member This can happen after a merge if the local node was in a minority partition owns Data false If a member leaves crashes immediately after a rebalance was started the new command may be executed before the command so it has to start the rebalance boolean start Rebalance is Rebalance if is Rebalance start Conflict Resolution if cache Topology get Pending null this cache Topology get Pending null if trace log tracef Forcing start Rebalance true start Rebalance true if start Rebalance Only update the rebalance topology id when starting the rebalance as we re going to ignore any state response with a smaller topology id state Transfer Topology Id compare And Set cache Topology get Topology Id conflict Manager cancel Version Requests cache Notifier notify Data Rehashed cache Topology get Current cache Topology get Pending cache Topology get Union cache Topology get Topology Id true if start Conflict Resolution This stops state being applied from a prior rebalance and also prevents tracking from being stopped state Transfer Topology Id set await Total Order Transactions cache Topology start Rebalance Make sure we do n t send a command before we ve added all the transfer tasks even if some of the tasks are removed and re added waiting For State set false state Transfer Future new Completable Future final Consistent Hash new Write Ch cache Topology get Write Consistent Hash final Cache Topology previous Cache Topology this cache Topology final Consistent Hash previous Read Ch previous Cache Topology null previous Cache Topology get Current null final Consistent Hash previous Write Ch previous Cache Topology null previous Cache Topology get Write Consistent Hash null Ensures writes to the data container use the right consistent hash No need for a try finally block since it s just an assignment state Transfer Lock acquire Exclusive Topology Lock before Topology Installed cache Topology get Topology Id start Rebalance previous Write Ch new Write Ch this cache Topology cache Topology triangle Order Manager update Cache Topology cache Topology if distribution Manager null distribution Manager set Cache Topology cache Topology conflict Manager on Topology Update distribution Manager get Cache Topology We need to track changes so that user puts during conflict resolution are prioritised over Merge Policy updates Tracking is stopped once the subsequent rebalance completes if start Rebalance start Conflict Resolution if trace log tracef Start keeping track of keys for rebalance commit Manager stop Track commit Manager start Track state Transfer Lock release Exclusive Topology Lock state Transfer Lock notify Topology Installed cache Topology get Topology Id remote Commands Executor check For Ready Tasks try fetch transactions and data segments from other owners if this is enabled if start Conflict Resolution is Transactional is Fetch Enabled Set Integer added Segments removed Segments if previous Write Ch null If we have any segments assigned in the initial it means we are the first member If we are not the first member we can only add segments via rebalance removed Segments Collections empty Set added Segments Collections empty Set Perhaps we should only do this once we are a member as listener installation should happen only on cache members if configuration clustering cache Mode is Distributed configuration clustering cache Mode is Scattered Collection Distributed Callable callables get Cluster Listeners cache Topology for Distributed Callable callable callables callable set Environment cache null try callable call catch Exception e log cluster Listener Installation Failure e if trace log tracef On cache s we have added segments s cache Name added Segments else Set Integer previous Segments get Owned Segments previous Write Ch Set Integer new Segments get Owned Segments new Write Ch if new Segments size new Write Ch get Num Segments Optimization for replicated caches removed Segments new Small Int Set else removed Segments new Small Int Set previous Segments removed Segments remove All new Segments This is a rebalance we need to request the segments we own in the new added Segments new Small Int Set new Segments added Segments remove All previous Segments if trace log tracef On cache s we have new segments s old segments s cache Name new Segments previous Segments log tracef On cache s we have added segments s removed segments s cache Name added Segments removed Segments remove inbound transfers for segments we no longer own cancel Transfers removed Segments Scattered cache gets added segments on the first and we want to keep these if start Rebalance added Segments is Empty configuration clustering cache Mode is Scattered If the last owner of a segment leaves the cluster a new set of owners is assigned but the new owners should not try to retrieve the segment from each other If this happens during a rebalance we might have already sent our rebalance confirmation so the coordinator wo n t wait for us to retrieve those segments anyway log debugf Not requesting segments s because the last owner left the cluster added Segments added Segments clear check if any of the existing transfers should be restarted from a different source because the initial source is no longer a member restart Broken Transfers cache Topology added Segments handle Segments start Rebalance added Segments removed Segments int state Transfer Topology Id this state Transfer Topology Id get if trace log tracef Topology update processed state Transfer Topology Id d start Rebalance s pending s Object state Transfer Topology Id start Rebalance cache Topology get Pending if state Transfer Topology Id start Rebalance cache Topology get Phase is Rebalance we have received a topology update without a pending signalling the end of the rebalance boolean changed this state Transfer Topology Id compare And Set state Transfer Topology Id if changed stop Applying State state Transfer Topology Id if the coordinator changed we might get two concurrent topology updates but we only want to notify the Data Rehashed listeners once Consistent Hash next Consistent Hash cache Topology get Pending if next Consistent Hash null next Consistent Hash cache Topology get Current cache Notifier notify Data Rehashed previous Read Ch next Consistent Hash previous Write Ch cache Topology get Topology Id false if trace log tracef Unlock State Transfer in Progress for topology s cache Topology get Topology Id if is Total Order total Order Manager notify State Transfer End finally state Transfer Lock notify Transaction Data Received cache Topology get Topology Id remote Commands Executor check For Ready Tasks Only set the flag here after all the transfers have been added to the transfers By Source map if state Transfer Topology Id get is Member waiting For State set true notify End Of State Transfer If Needed Remove the transactions whose originators have left the cache Need to do it now after we have applied any transactions from other nodes and after notify Transaction Data Received otherwise the Rollback Commands would block try if transaction Table null transaction Table cleanup Leaver Transactions rpc Manager get Transport get Members catch Exception e Do not fail state transfer when the cleanup fails See for details log transaction Cleanup Error e command Ack Collector on Members Change new Write Ch get Members The rebalance is completed through notify End Of State Transfer If Needed and does not have to be confirmed at all switch cache Topology get Phase case case state Transfer Future complete null Partition Handling Configuration ph Config configuration clustering partition Handling boolean was Member previous Write Ch null previous Write Ch get Members contains rpc Manager get Address boolean delete Past Member Vals was Member ph Config when Split Partition Handling ph Config merge Policy null Any data for segments we do not own should be removed from data container and cache store We need to discard data from all segments we do n t own not just those we previously owned when we lose membership e g because there was a merge the local partition was in degraded mode and the other partition was available or when is enabled The only exception is if a merge policy has been enabled in which case we must only perform the removal when this node is a member of the new topology otherwise entries updated during conflict resolution can be removed resulting in only a subset of the owners hosting the resolved entry Set Integer removed Segments if is Member delete Past Member Vals cache Topology get Phase Cache Topology Phase removed Segments Int Stream range new Write Ch get Num Segments boxed collect Collectors to Set Set Integer new Segments get Owned Segments new Write Ch removed Segments remove All new Segments try remove Stale Data removed Segments catch Interrupted Exception e Thread current Thread interrupt throw new Cache Exception e conflict Manager restart Version Requests return state Transfer Future protected void before Topology Installed int topology Id boolean start Rebalance Consistent Hash previous Write Ch Consistent Hash new Write Ch protected void handle Segments boolean start Rebalance Set Integer added Segments Set Integer removed Segments if added Segments is Empty add transfers for new or restarted segments add Transfers added Segments private void await Total Order Transactions Cache Topology cache Topology boolean is Rebalance in total order we should wait for remote transactions before proceeding if is Total Order if trace log trace State Transfer in Total Order cache Waiting for remote transactions to finish try for Total Order Latch block total Order Manager notify State Transfer Start cache Topology get Topology Id is Rebalance block await Until Un Block catch Interrupted Exception e interrupted Thread current Thread interrupt throw new Cache Exception e if trace log trace State Transfer in Total Order cache All remote transactions are finished Moving on protected void notify End Of State Transfer If Needed if waiting For State get if has Active Transfers return if waiting For State compare And Set true false int topology Id state Transfer Topology Id get log debugf Finished receiving of segments for cache s for topology d cache Name topology Id stop Applying State topology Id state Transfer Future complete null protected Set Integer get Owned Segments Consistent Hash consistent Hash Address address rpc Manager get Address return consistent Hash get Members contains address consistent Hash get Segments For Owner address Collections empty Set Override public void apply State final Address sender int topology Id boolean push Transfer Collection State Chunk state Chunks Consistent Hash w Ch cache Topology get Write Consistent Hash Ignore responses received after we are no longer a member if w Ch get Members contains rpc Manager get Address if trace log tracef Ignoring received state because we are no longer a member of cache s cache Name return Ignore segments that we requested for a previous rebalance Can happen when the coordinator leaves and the new coordinator cancels the rebalance in progress int rebalance Topology Id state Transfer Topology Id get if rebalance Topology Id push Transfer log debugf Discarding state response with topology id d for cache s we do n t have a state transfer in progress topology Id cache Name return if topology Id rebalance Topology Id log debugf Discarding state response with old topology id d for cache s state transfer request topology was b topology Id cache Name waiting For State return if trace log tracef Before applying the received state the data container of cache s has d keys cache Name data Container size Including Expired final Count Down Latch count Down Latch new Count Down Latch state Chunks size if push Transfer push transfer is specific for scattered cache but this is the easiest way to integrate it for State Chunk state Chunk state Chunks if state Chunk get Cache Entries null state Transfer Executor submit do Apply State sender state Chunk get Segment Id state Chunk get Cache Entries count Down Latch count Down else Set Integer my Segments w Ch get Segments For Owner rpc Manager get Address for State Chunk state Chunk state Chunks state Transfer Executor submit try apply Chunk sender my Segments state Chunk catch Throwable e log error Failed applying state e count Down Latch count Down log tracef Latch d count Down Latch get Count try boolean await count Down Latch await timeout Time Unit if await throw new Timeout Exception Timed out applying state catch Interrupted Exception e Thread current Thread interrupt throw new Cache Exception e if trace log tracef After applying the received state the data container of cache s has d keys cache Name data Container size Including Expired synchronized transfer Maps Lock log tracef Segments not received yet for cache s s cache Name transfers By Source private void apply Chunk Address sender Set Integer my Segments State Chunk state Chunk if my Segments contains state Chunk get Segment Id log warnf Discarding received cache entries for segment d of cache s because they do not belong to this node state Chunk get Segment Id cache Name return Notify the inbound task that a chunk of cache entries was received Inbound Transfer Task inbound Transfer null synchronized transfer Maps Lock List Inbound Transfer Task inbound Transfers transfers By Segment get state Chunk get Segment Id if inbound Transfers null inbound Transfer inbound Transfers stream filter task task get Source equals sender find First or Else null if inbound Transfer null if state Chunk get Cache Entries null do Apply State sender state Chunk get Segment Id state Chunk get Cache Entries inbound Transfer on State Received state Chunk get Segment Id state Chunk is Last Chunk else if cache get Status allow Invocations log ignoring Unsolicited State sender state Chunk get Segment Id cache Name private void do Apply State Address sender int segment Id Collection Internal Cache Entry cache Entries if trace log tracef Applying new state chunk for segment d of cache s from node s received d cache entries segment Id cache Name sender cache Entries size avoids handling by State Transfer Interceptor and any potential locks in State Transfer Lock boolean transactional transaction Manager null for Internal Cache Entry e cache Entries try Invocation Context ctx if transactional transaction Manager begin ctx icf create Invocation Context transaction Manager get Transaction true Tx Invocation Context ctx get Cache Transaction set State Transfer Flag else non tx cache ctx icf create Single Key Non Tx Invocation Context Put Key Value Command put commands Factory build Put Key Value Command e get Key e get Value e get Metadata ctx set Lock Owner put get Key Lock Owner interceptor Chain invoke ctx put if transaction Manager null transaction Manager commit catch Exception ex if cache get Status allow Invocations log debugf Cache s is shutting down stopping state transfer cache Name break else log problem Applying State For Key ex get Message e get Key ex finally try if transactional transaction Manager get Transaction null transaction Manager rollback catch System Exception e Ignore if trace log tracef Finished applying chunk of segment d of cache s segment Id cache Name private void apply Transactions Address sender Collection Transaction Info transactions int topology Id log debugf Applying d transactions for cache s transferred from node s transactions size cache Name sender if is Transactional for Transaction Info transaction Info transactions Global Transaction gtx transaction Info get Global Transaction if rpc Manager get Address equals gtx get Address continue it is a transaction originated in this node can happen with partition handling Mark the global transaction as remote Only used for logging hash Code equals ignore it gtx set Remote true Cache Transaction tx transaction Table get Local Transaction gtx if tx null tx transaction Table get Remote Transaction gtx if tx null try tx transaction Table get Or Create Remote Transaction gtx transaction Info get Modifications Force this node to replay the given transaction data by making it think it is behind Remote Transaction tx set Looked Up Entries Topology topology Id catch Throwable t if trace log tracef t Failed to create remote transaction s gtx if tx null transaction Info get Locked Keys for Each tx add Backup Lock For Key Must run after the Persistence Manager Start priority public void start Cache Mode mode configuration clustering cache Mode is Fetch Enabled mode needs State Transfer configuration clustering state Transfer fetch In Memory State configuration persistence fetch Persistent State rpc options does not changes in runtime we can use always the same instance synchronous Rpc Options rpc Manager get Rpc Options Builder Response Mode timeout timeout Time Unit build synchronous Ignore Leavers Rpc Options rpc Manager get Rpc Options Builder Response Mode timeout timeout Time Unit build state Request Executor new Limited Executor State Request cache Name state Transfer Executor Stop priority Override public void stop if trace log tracef Shutting down State Consumer of cache s on node s cache Name rpc Manager get Address try synchronized transfer Maps Lock cancel all inbound transfers state Request Executor cancel Queued Tasks make a copy cancel might remove the transfers Collection List Inbound Transfer Task transfers new Array List transfers By Source values for List Inbound Transfer Task inbound Transfers transfers inbound Transfers for Each Inbound Transfer Task cancel transfers By Source clear transfers By Segment clear catch Throwable t log errorf t Failed to stop State Consumer of cache s on node s cache Name rpc Manager get Address Override public Cache Topology get Cache Topology return cache Topology public void set Key Invalidation Listener Key Invalidation Listener key Invalidation Listener this key Invalidation Listener key Invalidation Listener not used in scattered cache private void add Transfers Set Integer segments log debugf Adding inbound state transfer for segments s segments the set of nodes that reported errors when fetching data from them these will not be retried in this topology Set Address excluded Sources new Hash Set the sources and segments we are going to get from each source Map Address Set Integer sources new Hash Map if is Transactional is Total Order request Transactions segments sources excluded Sources if is Fetch Enabled request Segments segments sources excluded Sources if trace log tracef Finished adding inbound state transfer for segments s segments cache Name private void find Sources Set Integer segments Map Address Set Integer sources Set Address excluded Sources if cache get Status is Terminated return Small Int Set segments Without Source new Small Int Set configuration clustering hash num Segments for Integer segment Id segments Address source find Source segment Id excluded Sources ignore all segments for which there are no other owners to pull data from these segments are considered empty or lost and do not require a state transfer if source null Set Integer segments From Source sources compute If Absent source k new Small Int Set segments From Source add segment Id else segments Without Source set segment Id if segments Without Source is Empty log no Live Owners Found For Segments segments Without Source cache Name excluded Sources private Address find Source int segment Id Set Address excluded Sources List Address owners cache Topology get Read Consistent Hash locate Owners For Segment segment Id if owners contains rpc Manager get Address We prefer that transactions are sourced from primary owners Needed in pessimistic mode if the originator is the primary owner of the key than the lock command is not replicated to the backup owners See Pessimistic Distribution Interceptor acquire Remote If Needed for Address o owners if o equals rpc Manager get Address excluded Sources contains o return o return null private void request Transactions Set Integer segments Map Address Set Integer sources Set Address excluded Sources find Sources segments sources excluded Sources boolean seen Failures false while true Small Int Set failed Segments new Small Int Set int topology Id cache Topology get Topology Id for Map Entry Address Set Integer source Entry sources entry Set Address source source Entry get Key Set Integer segments From Source source Entry get Value boolean failed false boolean exclude false try Response response get Transactions source segments From Source topology Id if response instanceof Successful Response List Transaction Info transactions List Transaction Info Successful Response response get Response Value apply Transactions source transactions topology Id else if response instanceof Cache Not Found Response log debugf Cache s was stopped on node s before sending transaction information cache Name source failed true exclude true else log unsuccessful Response Retrieving Transactions For Segments source response failed true catch Suspect Exception e log debugf Node s left the cluster before sending transaction information source failed true exclude true catch Exception e if cache get Status is Terminated log debugf Cache s has stopped while requesting transactions cache Name sources clear return else log failed To Retrieve Transactions For Segments cache Name source segments e The primary owner is still in the cluster so we ca n t exclude it see failed true If requesting the transactions failed we need to retry if failed failed Segments add All segments From Source If the primary owner is no longer running we can retry on a backup owner if exclude excluded Sources add source if failed Segments is Empty break look for other sources for all failed segments seen Failures true sources clear find Sources failed Segments sources excluded Sources if seen Failures start fresh when next step starts fetching segments sources clear private Collection Distributed Callable get Cluster Listeners Cache Topology topology for Address source topology get Members Do n t send to ourselves if source equals rpc Manager get Address if trace log tracef Requesting cluster listeners of cache s from node s cache Name source get cluster listeners try State Request Command cmd commands Factory build State Request Command State Request Command Type rpc Manager get Address topology get Topology Id null Map Address Response responses rpc Manager invoke Remotely Collections singleton source cmd synchronous Ignore Leavers Rpc Options Response response responses get source if response instanceof Successful Response return Collection Distributed Callable Successful Response response get Response Value else log unsuccessful Response For Cluster Listeners source response catch Cache Exception e log exception During Cluster Listener Retrieval source e if trace log trace Unable to acquire cluster listeners from other members assuming none are present return Collections empty Set private Response get Transactions Address source Set Integer segments int topology Id if trace log tracef Requesting transactions from node s for segments s source segments get transactions and locks State Request Command cmd commands Factory build State Request Command State Request Command Type rpc Manager get Address topology Id segments Map Address Response responses rpc Manager invoke Remotely Collections singleton source cmd synchronous Rpc Options return responses get source not used in scattered cache private void request Segments Set Integer segments Map Address Set Integer sources Set Address excluded Sources if sources is Empty find Sources segments sources excluded Sources for Map Entry Address Set Integer e sources entry Set add Transfer e get Key e get Value Cancel transfers for segments we no longer own param removed Segments segments to be cancelled protected void cancel Transfers Set Integer removed Segments synchronized transfer Maps Lock List Integer segments To Cancel new Array List removed Segments while segments To Cancel is Empty int segment Id segments To Cancel remove List Inbound Transfer Task inbound Transfers transfers By Segment get segment Id if inbound Transfers null we need to check the transfer was not already completed for Inbound Transfer Task inbound Transfer inbound Transfers Set Integer cancelled Segments new Small Int Set removed Segments cancelled Segments retain All inbound Transfer get Segments segments To Cancel remove All cancelled Segments transfers By Segment key Set remove All cancelled Segments this will also remove it from transfers By Source if the entire task gets cancelled inbound Transfer cancel Segments cancelled Segments if inbound Transfer is Cancelled remove Transfer inbound Transfer protected void remove Stale Data final Set Integer removed Segments throws Interrupted Exception log debugf Removing no longer owned entries for cache s cache Name if key Invalidation Listener null key Invalidation Listener before Invalidation removed Segments Collections empty Set if removed Segments is Empty return Keys that we used to own and need to be removed from the data container the cache stores final Concurrent Hash Set Object keys To Remove new Concurrent Hash Set data Container execute Task Key Filter o ice Object key ice get Key int key Segment get Segment key if removed Segments contains key Segment keys To Remove add key gather all keys from cache store that belong to the segments that are being removed moved to if removed Segments is Empty try Key Filter filter key if data Container contains Key key return false int key Segment get Segment key return removed Segments contains key Segment persistence Manager process On All Stores filter marshalled Entry task Context keys To Remove add marshalled Entry get Key false false catch Cache Exception e log failed Loading Keys From Cache Store e if keys To Remove is Empty try Invalidate Command invalidate Cmd commands Factory build Invalidate Command Enum Util bit Set Of keys To Remove to Array Invocation Context ctx icf create Non Tx Invocation Context ctx set Lock Owner invalidate Cmd get Key Lock Owner interceptor Chain invoke ctx invalidate Cmd if trace log tracef Removed d keys data container now has d keys keys To Remove size data Container size Including Expired catch Cache Exception e log failed To Invalidate Keys e Check if any of the existing transfers should be restarted from a different source because the initial source is no longer a member private void restart Broken Transfers Cache Topology cache Topology Set Integer added Segments Set Address members new Hash Set cache Topology get Read Consistent Hash get Members synchronized transfer Maps Lock for Iterator Map Entry Address List Inbound Transfer Task it transfers By Source entry Set iterator it has Next Map Entry Address List Inbound Transfer Task entry it next Address source entry get Key if members contains source if trace log tracef Removing inbound transfers from source s for cache s source cache Name List Inbound Transfer Task inbound Transfers entry get Value it remove for Inbound Transfer Task inbound Transfer inbound Transfers these segments will be restarted if they are still in new write if trace log tracef Removing inbound transfers from node s for segments s source inbound Transfer get Segments inbound Transfer cancel transfers By Segment key Set remove All inbound Transfer get Segments added Segments add All inbound Transfer get Unfinished Segments exclude those that are already in progress from a valid source added Segments remove All transfers By Segment key Set private int get Segment Object key here we can use any version because the routing table is not involved in computing the segment return key Partitioner get Segment key not used in scattered cache private Inbound Transfer Task add Transfer Address source Set Integer segments From Source final Inbound Transfer Task inbound Transfer synchronized transfer Maps Lock if trace log tracef Adding transfer from s for segments s source segments From Source segments From Source remove All transfers By Segment key Set already in progress segments are excluded if segments From Source is Empty if trace log tracef All segments are already in progress skipping return null inbound Transfer new Inbound Transfer Task segments From Source source cache Topology get Topology Id rpc Manager commands Factory timeout cache Name true add Transfer inbound Transfer segments From Source state Request Executor execute Async Completable Future Void transfer Started inbound Transfer request Segments if trace log tracef Waiting for inbound transfer to finish s inbound Transfer return transfer Started when Complete a Void throwable on Task Completion inbound Transfer return inbound Transfer Guarded By transfer Maps Lock protected void add Transfer Inbound Transfer Task inbound Transfer Set Integer segments for int segment Id segments transfers By Segment compute If Absent segment Id s new Array List add inbound Transfer transfers By Source compute If Absent inbound Transfer get Source s new Array List add inbound Transfer protected boolean remove Transfer Inbound Transfer Task inbound Transfer boolean found false synchronized transfer Maps Lock if trace log tracef Removing inbound transfers from node s for segments s inbound Transfer get Segments inbound Transfer get Source cache Name List Inbound Transfer Task transfers transfers By Source get inbound Transfer get Source if transfers null found transfers remove inbound Transfer transfers is Empty transfers By Source remove inbound Transfer get Source for int segment inbound Transfer get Segments transfers transfers By Segment get segment if transfers null transfers remove inbound Transfer transfers is Empty transfers By Segment remove segment return found protected void on Task Completion final Inbound Transfer Task inbound Transfer if trace log tracef Inbound transfer finished s inbound Transfer if inbound Transfer is Completed Successfully remove Transfer inbound Transfer notify End Of State Transfer If Needed public interface Key Invalidation Listener void before Invalidation Set Integer removed Segments Set Integer stale Segments 
package org infinispan statetransfer import static org infinispan factories Known Component Names import java util Array List import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import java util concurrent Completable Future import java util concurrent Executor Service import java util concurrent Time Unit import java util concurrent Timeout Exception import org infinispan Cache import org infinispan commands Commands Factory import org infinispan commands write Write Command import org infinispan configuration cache Configuration import org infinispan container Data Container import org infinispan container Internal Entry Factory import org infinispan distexec Distributed Callable import org infinispan distribution ch Consistent Hash import org infinispan distribution ch Key Partitioner import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan notifications Listener import org infinispan notifications cachelistener cluster Cluster Cache Notifier import org infinispan persistence manager Persistence Manager import org infinispan remoting rpc Rpc Manager import org infinispan remoting transport Address import org infinispan topology Cache Topology import org infinispan transaction impl Local Transaction import org infinispan transaction impl Transaction Originator Checker import org infinispan transaction impl Transaction Table import org infinispan transaction xa Cache Transaction import org infinispan transaction xa Global Transaction import org infinispan util concurrent Completable Futures import org infinispan util logging Log import org infinispan util logging Log Factory link State Provider implementation author anistor redhat com since Listener public class State Provider Impl implements State Provider protected static final Log log Log Factory get Log State Provider Impl class protected static final boolean trace log is Trace Enabled protected String cache Name private Configuration configuration protected Rpc Manager rpc Manager protected Commands Factory commands Factory private Cluster Cache Notifier cluster Cache Notifier private Transaction Table transaction Table optional protected Data Container data Container protected Persistence Manager persistence Manager optional protected Executor Service executor Service protected State Transfer Lock state Transfer Lock protected Internal Entry Factory entry Factory protected long timeout protected int chunk Size protected Key Partitioner key Partitioner protected State Consumer state Consumer private Transaction Originator Checker transaction Originator Checker map that keeps track of current outbound state transfers by destination address There could be multiple transfers flowing to the same destination but for different segments so the values are lists private final Map Address List Outbound Transfer Task transfers By Destination new Hash Map public State Provider Impl Inject public void init Cache cache Component Name Executor Service executor Service Use a dedicated Executor Service Configuration configuration Rpc Manager rpc Manager Commands Factory commands Factory Cluster Cache Notifier cluster Cache Notifier Persistence Manager persistence Manager Data Container data Container Transaction Table transaction Table State Transfer Lock state Transfer Lock State Consumer state Consumer Internal Entry Factory entry Factory Key Partitioner key Partitioner Transaction Originator Checker transaction Originator Checker this cache Name cache get Name this executor Service executor Service this configuration configuration this rpc Manager rpc Manager this commands Factory commands Factory this cluster Cache Notifier cluster Cache Notifier this persistence Manager persistence Manager this data Container data Container this transaction Table transaction Table this state Transfer Lock state Transfer Lock this state Consumer state Consumer this entry Factory entry Factory this transaction Originator Checker transaction Originator Checker timeout configuration clustering state Transfer timeout this chunk Size configuration clustering state Transfer chunk Size this key Partitioner key Partitioner public boolean is State Transfer In Progress synchronized transfers By Destination return transfers By Destination is Empty public Completable Future Void on Topology Update Cache Topology cache Topology boolean is Rebalance Cancel outbound state transfers for destinations that are no longer members in new topology If the rebalance was cancelled stop every outbound transfer This will prevent leaking transfers from one rebalance to the next Set Address members new Hash Set cache Topology get Write Consistent Hash get Members synchronized transfers By Destination for Iterator Address it transfers By Destination key Set iterator it has Next Address destination it next if members contains destination List Outbound Transfer Task transfers transfers By Destination get destination it remove for Outbound Transfer Task outbound Transfer transfers outbound Transfer cancel return Completable Futures completed Null todo anistor must cancel transfers for all segments that we no longer own Start priority Override public void start Stop priority Override public void stop if trace log tracef Shutting down State Provider of cache s on node s cache Name rpc Manager get Address cancel all outbound transfers try synchronized transfers By Destination for Iterator List Outbound Transfer Task it transfers By Destination values iterator it has Next List Outbound Transfer Task transfers it next it remove for Outbound Transfer Task outbound Transfer transfers outbound Transfer cancel catch Throwable t log errorf t Failed to stop State Provider of cache s on node s cache Name rpc Manager get Address public List Transaction Info get Transactions For Segments Address destination int request Topology Id Set Integer segments throws Interrupted Exception if trace log tracef Received request for transactions from node s for cache s topology id d segments s destination cache Name request Topology Id segments final Cache Topology cache Topology get Cache Topology request Topology Id destination true final Consistent Hash read Ch cache Topology get Read Consistent Hash Set Integer owned Segments read Ch get Segments For Owner rpc Manager get Address if owned Segments contains All segments segments remove All owned Segments throw new Illegal Argument Exception Segments segments are not owned by rpc Manager get Address List Transaction Info transactions new Array List we migrate locks only if the cache is transactional and distributed if configuration transaction transaction Mode is Transactional collect Transactions To Transfer destination transactions transaction Table get Remote Transactions segments cache Topology collect Transactions To Transfer destination transactions transaction Table get Local Transactions segments cache Topology if trace log tracef Found d transaction s to transfer transactions size return transactions Override public Collection Distributed Callable get Cluster Listeners To Install return cluster Cache Notifier retrieve Cluster Listener Callables To Install private Cache Topology get Cache Topology int request Topology Id Address destination boolean is Req For Transactions throws Interrupted Exception Cache Topology cache Topology state Consumer get Cache Topology int current Topology Id cache Topology null cache Topology get Topology Id if request Topology Id current Topology Id if is Req For Transactions log debugf Transactions were requested by node s with topology d older than the local topology d destination request Topology Id current Topology Id else log debugf Segments were requested by node s with topology d older than the local topology d destination request Topology Id current Topology Id else if request Topology Id current Topology Id if trace log tracef s were requested by node s with topology d greater than the local topology d Waiting for topology d to be installed locally is Req For Transactions Transactions Segments destination request Topology Id current Topology Id request Topology Id try state Transfer Lock wait For Topology request Topology Id timeout Time Unit catch Timeout Exception e throw log failed Waiting For Topology request Topology Id cache Topology state Consumer get Cache Topology return cache Topology private void collect Transactions To Transfer Address destination List Transaction Info transactions To Transfer Collection extends Cache Transaction transactions Set Integer segments Cache Topology cache Topology int topology Id cache Topology get Topology Id Set Address members new Hash Set cache Topology get Members no need to filter out state transfer generated transactions because there should not be any such transactions running for any of the requested segments for Cache Transaction tx transactions final Global Transaction gtx tx get Global Transaction Skip transactions whose originators left The topology id check is needed for joiners Also skip transactions that originates after state transfer starts if tx get Topology Id topology Id transaction Originator Checker is Originator Missing gtx members if trace log tracef Skipping transaction s as it was started in the current topology or by a leaver tx continue transfer only locked keys that belong to requested segments Set Object filtered Locked Keys new Hash Set Set Object locked Keys tx get Locked Keys synchronized locked Keys for Object key locked Keys if segments contains key Partitioner get Segment key filtered Locked Keys add key Set Object backup Locked Keys tx get Backup Locked Keys synchronized backup Locked Keys for Object key backup Locked Keys if segments contains key Partitioner get Segment key filtered Locked Keys add key if filtered Locked Keys is Empty if trace log tracef Skipping transaction s because the state requestor s does n t own any key tx destination continue if trace log tracef Sending transaction s to new owner s tx destination List Write Command tx Modifications tx get Modifications Write Command modifications null if tx Modifications is Empty modifications tx Modifications to Array new Write Command tx Modifications size If a key affected by a local transaction has a new owner we must add the new owner to the transaction s affected nodes set so that the it receives the commit rollback command See if tx instanceof Local Transaction Local Transaction local Tx Local Transaction tx local Tx locks Acquired Collections singleton destination if trace log tracef Adding affected node s to transferred transaction s keys s destination gtx filtered Locked Keys transactions To Transfer add new Transaction Info gtx tx get Topology Id modifications filtered Locked Keys Override public void start Outbound Transfer Address destination int request Topology Id Set Integer segments boolean apply State throws Interrupted Exception if trace log tracef Starting outbound transfer to node s for cache s topology id d segments s destination cache Name request Topology Id segments the destination node must already have an Inbound Transfer Task waiting for these segments Outbound Transfer Task outbound Transfer new Outbound Transfer Task destination segments chunk Size request Topology Id key Partitioner this on Task Completion chunks Outbound Transfer Task default Map Entry From Data Container Outbound Transfer Task default Map Entry From Store data Container persistence Manager rpc Manager commands Factory entry Factory timeout cache Name apply State false add Transfer outbound Transfer outbound Transfer execute executor Service protected void add Transfer Outbound Transfer Task transfer Task if trace log tracef Adding outbound transfer to s for segments s transfer Task get Destination transfer Task get Segments synchronized transfers By Destination List Outbound Transfer Task transfers transfers By Destination compute If Absent transfer Task get Destination k new Array List transfers add transfer Task Override public void cancel Outbound Transfer Address destination int topology Id Set Integer segments if trace log tracef Cancelling outbound transfer to node s for cache s topology id d segments s destination cache Name topology Id segments get the outbound transfers for this address and given segments and cancel the transfers synchronized transfers By Destination List Outbound Transfer Task transfer Tasks transfers By Destination get destination if transfer Tasks null get an array copy of the collection to avoid Concurrent Modification Exception if the entire task gets cancelled and remove Transfer transfer Task is called Outbound Transfer Task task List Copy transfer Tasks to Array new Outbound Transfer Task transfer Tasks size for Outbound Transfer Task transfer Task task List Copy if transfer Task get Topology Id topology Id transfer Task cancel Segments segments this can potentially result in a call to remove Transfer transfer Task private void remove Transfer Outbound Transfer Task transfer Task synchronized transfers By Destination List Outbound Transfer Task transfer Tasks transfers By Destination get transfer Task get Destination if transfer Tasks null transfer Tasks remove transfer Task if transfer Tasks is Empty transfers By Destination remove transfer Task get Destination protected void on Task Completion Outbound Transfer Task transfer Task if trace log tracef Removing s outbound transfer of segments to s for cache s segments s transfer Task is Cancelled cancelled completed transfer Task get Destination cache Name transfer Task get Segments remove Transfer transfer Task 
package org infinispan configuration cache import java util concurrent Time Unit import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set Configures how state is retrieved when a new cache joins the cluster Used with invalidation and replication clustered modes since public class State Transfer Configuration public static final Attribute Definition Boolean Attribute Definition builder await Initial Transfer true immutable build public static final Attribute Definition Boolean Attribute Definition builder fetch In Memory State true xml Name enabled immutable build public static final Attribute Definition Long Attribute Definition builder timeout Time Unit to Millis immutable build public static final Attribute Definition Integer Attribute Definition builder chunk Size immutable build static final Attribute Set attribute Definition Set return new Attribute Set Store As Binary Configuration class private final Attribute Boolean await Initial Transfer private final Attribute Boolean fetch In Memory State private final Attribute Long timeout private final Attribute Integer chunk Size private final Attribute Set attributes State Transfer Configuration Attribute Set attributes this attributes attributes check Protection await Initial Transfer attributes attribute fetch In Memory State attributes attribute timeout attributes attribute chunk Size attributes attribute If code true the cache will fetch data from the neighboring caches when it starts up so the cache starts warm although it will impact startup time p In distributed mode state is transferred between running caches as well as the ownership of keys changes e g because a cache left the cluster Disabling this setting means a key will sometimes have less than code num Owner owners public boolean fetch In Memory State return fetch In Memory State get This is the maximum amount of time in milliseconds to wait for state from neighboring caches before throwing an exception and aborting startup public long timeout return timeout get This is the maximum amount of time in milliseconds to wait for state from neighboring caches before throwing an exception and aborting startup public State Transfer Configuration timeout long l timeout set l return this The state will be transferred in batches of code chunk Size cache entries If chunk Size is equal to Integer the state will be transferred in all at once Not recommended public int chunk Size return chunk Size get If code true this will cause the first call to method code Cache Manager get Cache on the joiner node to block and wait until the joining is complete and the cache has finished receiving state from neighboring caches if fetch In Memory State is enabled This option applies to distributed and replicated caches only and is enabled by default Please note that setting this to code false will make the cache object available immediately but any access to keys that should be available locally but are not yet transferred will actually cause a transparent remote access While this will not have any impact on the logic of your application it might impact performance public boolean await Initial Transfer return await Initial Transfer get We want to remember if the user did n t configure await Initial Transfer for the default cache private boolean original Await Initial Transfer return await Initial Transfer is Modified public Attribute Set attributes return attributes Override public String to String return this get Class get Simple Name attributes Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false State Transfer Configuration other State Transfer Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result 
package org infinispan configuration cache import static org infinispan configuration cache State Transfer Configuration import static org infinispan configuration cache State Transfer Configuration import static org infinispan configuration cache State Transfer Configuration import static org infinispan configuration cache State Transfer Configuration import java util concurrent Time Unit import org infinispan commons Cache Configuration Exception import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration import org infinispan util logging Log import org infinispan util logging Log Factory Configures how state is transferred when a cache joins or leaves the cluster Used in distributed and replication clustered modes since public class State Transfer Configuration Builder extends Abstract Clustering Configuration Child Builder implements Builder State Transfer Configuration private static final Log log Log Factory get Log State Transfer Configuration Builder class private final Attribute Set attributes State Transfer Configuration Builder Clustering Configuration Builder builder super builder attributes State Transfer Configuration attribute Definition Set If code true the cache will fetch data from the neighboring caches when it starts up so the cache starts warm although it will impact startup time p In distributed mode state is transferred between running caches as well as the ownership of keys changes e g because a cache left the cluster Disabling this setting means a key will sometimes have less than code num Owner owners public State Transfer Configuration Builder fetch In Memory State boolean b attributes attribute set b return this If code true this will cause the first call to method code Cache Manager get Cache on the joiner node to block and wait until the joining is complete and the cache has finished receiving state from neighboring caches if fetch In Memory State is enabled This option applies to distributed and replicated caches only and is enabled by default Please note that setting this to code false will make the cache object available immediately but any access to keys that should be available locally but are not yet transferred will actually cause a transparent remote access While this will not have any impact on the logic of your application it might impact performance public State Transfer Configuration Builder await Initial Transfer boolean b attributes attribute set b return this The state will be transferred in batches of code chunk Size cache entries If chunk Size is equal to Integer the state will be transferred in all at once Not recommended public State Transfer Configuration Builder chunk Size int i attributes attribute set i return this This is the maximum amount of time in milliseconds to wait for state from neighboring caches before throwing an exception and aborting startup public State Transfer Configuration Builder timeout long l attributes attribute set l return this This is the maximum amount of time in milliseconds to wait for state from neighboring caches before throwing an exception and aborting startup public State Transfer Configuration Builder timeout long l Time Unit unit return timeout unit to Millis l Override public void validate if attributes attribute get throw new Cache Configuration Exception chunk Size can not be if clustering cache Mode is Invalidation Attribute Boolean fetch Attribute attributes attribute if fetch Attribute is Modified fetch Attribute get throw log attribute Not Allowed In Invalidation Mode name Attribute Boolean await Initial Transfer attributes attribute if await Initial Transfer is Modified await Initial Transfer get get Clustering Builder cache Mode needs State Transfer throw log await Initial Transfer Only For Dist Or Repl Override public void validate Global Configuration global Config Override public State Transfer Configuration create return new State Transfer Configuration attributes protect Override public State Transfer Configuration Builder read State Transfer Configuration template this attributes read template attributes return this Override public String to String return State Transfer Configuration Builder attributes attributes 
package org infinispan statetransfer import java util concurrent Completable Future import org infinispan commands Topology Affected Command import org infinispan commands Visitable Command import org infinispan commands control Lock Control Command import org infinispan commands functional Read Write Key Command import org infinispan commands functional Read Write Key Value Command import org infinispan commands functional Read Write Many Command import org infinispan commands functional Read Write Many Entries Command import org infinispan commands functional Write Only Key Command import org infinispan commands functional Write Only Key Value Command import org infinispan commands functional Write Only Many Command import org infinispan commands functional Write Only Many Entries Command import org infinispan commands tx Commit Command import org infinispan commands tx Prepare Command import org infinispan commands tx Rollback Command import org infinispan commands tx Transaction Boundary Command import org infinispan commands write Clear Command import org infinispan commands write Compute Command import org infinispan commands write Compute If Absent Command import org infinispan commands write Evict Command import org infinispan commands write Invalidate Command import org infinispan commands write Invalidate Command import org infinispan commands write Put Key Value Command import org infinispan commands write Put Map Command import org infinispan commands write Remove Command import org infinispan commands write Replace Command import org infinispan commands write Write Command import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan context impl Tx Invocation Context import org infinispan interceptors Invocation Finally Function import org infinispan interceptors impl Base State Transfer Interceptor import org infinispan remoting Remote Exception import org infinispan remoting responses Unsure Response import org infinispan remoting transport Address import org infinispan remoting transport jgroups Suspect Exception import org infinispan util logging Log import org infinispan util logging Log Factory This interceptor has two tasks ol li If the command s topology id is higher than the current topology id wait for the node to receive transaction data for the new topology id li li If the topology id changed during a command s execution retry the command but only on the originator which replicates it to the new owners li ol If the cache is configured with asynchronous replication owners can not signal to the originator that they saw a new topology so instead each owner forwards the command to all the other owners in the new topology author anistor redhat com public class State Transfer Interceptor extends Base State Transfer Interceptor private static final Log log Log Factory get Log State Transfer Interceptor class private static final boolean trace log is Trace Enabled private final Invocation Finally Function handle Tx Return this handle Tx Return private final Invocation Finally Function handle Tx Write Return this handle Tx Write Return private final Invocation Finally Function handle Non Tx Write Return this handle Non Tx Write Return Override public Object visit Prepare Command Tx Invocation Context ctx Prepare Command command throws Throwable return handle Tx Command ctx command Override public Object visit Commit Command Tx Invocation Context ctx Commit Command command throws Throwable return handle Tx Command ctx command Override public Object visit Rollback Command Tx Invocation Context ctx Rollback Command command throws Throwable return handle Tx Command ctx command Override public Object visit Lock Control Command Tx Invocation Context ctx Lock Control Command command throws Throwable if trace log tracef handle Tx Command for command s origin s command get Origin ctx update Topology Id command return invoke Next And Handle ctx command handle Tx Return Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable return handle Write Command ctx command Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable return handle Write Command ctx command Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable return handle Write Command ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return handle Write Command ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable return handle Write Command ctx command Override public Object visit Compute If Absent Command Invocation Context ctx Compute If Absent Command command throws Throwable return handle Write Command ctx command Override public Object visit Clear Command Invocation Context ctx Clear Command command throws Throwable return handle Write Command ctx command Override public Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable return handle Write Command ctx command Override public Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable no need to forward this command return invoke Next ctx command Override public Object visit Evict Command Invocation Context ctx Evict Command command throws Throwable it s not necessary to propagate eviction to the new owners in case of state transfer return invoke Next ctx command Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable return handle Write Command ctx command Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Only Key Command Invocation Context ctx Write Only Key Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Only Many Entries Command Invocation Context ctx Write Only Many Entries Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Only Key Value Command Invocation Context ctx Write Only Key Value Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Only Many Command Invocation Context ctx Write Only Many Command command throws Throwable return handle Write Command ctx command Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable return handle Write Command ctx command Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable return handle Write Command ctx command Special processing required for transaction commands private Object handle Tx Command Tx Invocation Context ctx Transaction Boundary Command command if trace log tracef handle Tx Command for command s origin s command get Origin ctx update Topology Id command return invoke Next And Handle ctx command handle Tx Return private Address get Origin Tx Invocation Context ctx For local commands we may not have a Global Transaction yet return ctx is Origin Local ctx get Origin ctx get Global Transaction get Address private Object handle Tx Return Invocation Context ctx Visitable Command command Object rv Throwable t throws Throwable Transaction Boundary Command tx Command Transaction Boundary Command command int retry Topology Id int current Topology current Topology Id if t instanceof Outdated Topology Exception t instanceof All Owners Lost Exception This can only happen on the originator retry Topology Id Math max current Topology tx Command get Topology Id else if t null throw t if ctx is Origin Local On the originator we only retry if we got an Outdated Topology Exception Which could be caused either by an owner leaving or by an owner having a newer topology No need to retry just because we have a new topology on the originator all entries were wrapped anyway if retry Topology Id Only the originator can retry the command tx Command set Topology Id retry Topology Id if tx Command instanceof Prepare Command Prepare Command tx Command set Retried Command true Completable Future Void transaction Data Future state Transfer Lock transaction Data Future retry Topology Id return retry When Done transaction Data Future retry Topology Id ctx tx Command handle Tx Return else if current Topology tx Command get Topology Id Signal the originator to retry return Unsure Response return rv private Object handle Write Command Invocation Context ctx Write Command command if ctx is In Tx Scope return handle Tx Write Command ctx command else return handle Non Tx Write Command ctx command private Object handle Tx Write Command Invocation Context ctx Write Command command if trace log tracef handle Tx Write Command for command s origin s command ctx get Origin update Topology Id command return invoke Next And Handle ctx command handle Tx Write Return private Object handle Tx Write Return Invocation Context r Ctx Visitable Command r Command Object rv Throwable t throws Throwable int retry Topology Id Write Command write Command Write Command r Command if t instanceof Outdated Topology Exception t instanceof All Owners Lost Exception This can only happen on the originator retry Topology Id Math max current Topology Id write Command get Topology Id else if t null throw t if r Ctx is Origin Local On the originator we only retry if we got an Outdated Topology Exception Which could be caused either by an owner leaving or by an owner having a newer topology No need to retry just because we have a new topology on the originator all entries were wrapped anyway if retry Topology Id Only the originator can retry the command write Command set Topology Id retry Topology Id Completable Future Void transaction Data Future state Transfer Lock transaction Data Future retry Topology Id return retry When Done transaction Data Future retry Topology Id r Ctx write Command handle Tx Write Return else if current Topology Id write Command get Topology Id Signal the originator to retry return Unsure Response return rv For non tx write commands we retry the command locally if the topology changed But we only retry on the originator and only if the command does n t have the code flag private Object handle Non Tx Write Command Invocation Context ctx Write Command command if trace log tracef handle Non Tx Write Command for command s topology id d command command get Topology Id update Topology Id command Only catch Outdated Topology Exceptions on the originator if ctx is Origin Local return invoke Next ctx command return invoke Next And Handle ctx command handle Non Tx Write Return private Object handle Non Tx Write Return Invocation Context r Ctx Visitable Command r Command Object rv Throwable t throws Throwable if t null return rv Throwable ce t while ce instanceof Remote Exception ce ce get Cause if ce instanceof Outdated Topology Exception ce instanceof Suspect Exception ce instanceof All Owners Lost Exception throw t We increment the topology id so that update Topology Id And Wait For Transaction Data waits for the next topology Without this we could retry the command too fast and we could get the Outdated Topology Exception again int current Topology Id current Topology Id Write Command write Command Write Command r Command int new Topology Id get New Topology Id ce current Topology Id write Command if trace log tracef Retrying command because of topology change current topology is d requested d s current Topology Id new Topology Id write Command write Command set Topology Id new Topology Id write Command add Flags Flag Bit Sets In non tx context waiting for transaction data is equal to waiting for topology Completable Future Void transaction Data Future state Transfer Lock transaction Data Future new Topology Id return retry When Done transaction Data Future new Topology Id r Ctx write Command handle Non Tx Write Return Override public Object handle Default Invocation Context ctx Visitable Command command throws Throwable if command instanceof Topology Affected Command return handle Topology Affected Command ctx command ctx get Origin else return invoke Next ctx command private Object handle Topology Affected Command Invocation Context ctx Visitable Command command Address origin if trace log tracef handle Topology Affected Command for command s origin s command origin update Topology Id Topology Affected Command command return invoke Next ctx command Override protected Log get Log return log 
package org infinispan statetransfer import java util concurrent Completable Future import java util concurrent locks Read Write Lock import java util concurrent locks Reentrant Read Write Lock import org infinispan factories annotations Stop import org infinispan util concurrent Completable Futures import org infinispan util logging Log import org infinispan util logging Log Factory code State Transfer Lock implementation author anistor redhat com author Dan Berindei since public class State Transfer Lock Impl implements State Transfer Lock private static final Log log Log Factory get Log State Transfer Lock Impl class private static final boolean trace log is Trace Enabled private static final int Integer private final Read Write Lock ownership Lock new Reentrant Read Write Lock private volatile int topology Id future to topology equal to topology Id private Completable Future Void topology Future new Completable Future private volatile int transaction Data Topology Id private Completable Future Void transaction Data Future new Completable Future Stop public void stop notify Topology Installed notify Transaction Data Received Suppress Warnings Lock Acquired But Not Safely Released Override public void acquire Exclusive Topology Lock ownership Lock write Lock lock Override public void release Exclusive Topology Lock ownership Lock write Lock unlock Suppress Warnings Lock Acquired But Not Safely Released Override public void acquire Shared Topology Lock ownership Lock read Lock lock Override public void release Shared Topology Lock ownership Lock read Lock unlock Override public void notify Transaction Data Received int topology Id if topology Id transaction Data Topology Id log debugf Trying to set a topology id d that is lower than the current one d topology Id this topology Id return if trace log tracef Signalling transaction data received for topology d topology Id transaction Data Topology Id topology Id Completable Future Void old Future null try synchronized this old Future transaction Data Future transaction Data Future new Completable Future finally if old Future null old Future complete null Override public Completable Future Void transaction Data Future int expected Topology Id if transaction Data Topology Id expected Topology Id return Completable Futures completed Null if trace log tracef Waiting for transaction data for topology d current topology is d expected Topology Id transaction Data Topology Id synchronized this if transaction Data Topology Id expected Topology Id return Completable Futures completed Null else return transaction Data Future then Compose nil transaction Data Future expected Topology Id Override public boolean transaction Data Received int expected Topology Id if trace log tracef Checking if transaction data was received for topology s current topology is s expected Topology Id transaction Data Topology Id return transaction Data Topology Id expected Topology Id Override public void notify Topology Installed int topology Id if topology Id this topology Id log debugf Trying to set a topology id d that is lower than the current one d topology Id this topology Id return if trace log tracef Signalling topology d is installed topology Id this topology Id topology Id Completable Future Void old Future null try synchronized this old Future topology Future topology Future new Completable Future finally if old Future null old Future complete null Override public Completable Future Void topology Future int expected Topology Id if topology Id expected Topology Id return Completable Futures completed Null if trace log tracef Waiting for topology d to be installed current topology is d expected Topology Id topology Id synchronized this if topology Id expected Topology Id return Completable Futures completed Null else return topology Future then Compose nil topology Future expected Topology Id Override public boolean topology Received int expected Topology Id return topology Id expected Topology Id 
package org infinispan statetransfer import java util Collection import java util Collections import java util Hash Set import java util Map import java util Optional import java util Set import java util concurrent Completable Future import java util concurrent Count Down Latch import java util concurrent Time Unit import org infinispan Cache import org infinispan commands Topology Affected Command import org infinispan commons Cache Exception import org infinispan configuration cache Cache Mode import org infinispan configuration cache Configuration import org infinispan configuration global Global Configuration import org infinispan distribution Distribution Manager import org infinispan distribution Localized Cache Topology import org infinispan distribution ch Consistent Hash import org infinispan distribution ch Consistent Hash Factory import org infinispan distribution ch Key Partitioner import org infinispan distribution ch impl Scattered Consistent Hash Factory import org infinispan distribution ch impl Sync Consistent Hash Factory import org infinispan distribution ch impl Sync Replicated Consistent Hash Factory import org infinispan distribution ch impl Topology Aware Sync Consistent Hash Factory import org infinispan distribution group impl Partitioner Consistent Hash import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan globalstate Global State Manager import org infinispan globalstate Scoped Persistent State import org infinispan notifications cachelistener Cache Notifier import org infinispan partitionhandling impl Partition Handling Manager import org infinispan remoting inboundhandler Deliver Order import org infinispan remoting responses Response import org infinispan remoting rpc Rpc Manager import org infinispan remoting rpc Rpc Options import org infinispan remoting transport Address import org infinispan topology Cache Join Info import org infinispan topology Cache Topology import org infinispan topology Cache Topology Handler import org infinispan topology Local Topology Manager import org infinispan util logging Log import org infinispan util logging Log Factory link State Transfer Manager implementation author anistor redhat com since public class State Transfer Manager Impl implements State Transfer Manager private static final Log log Log Factory get Log State Transfer Manager Impl class private static final boolean trace log is Trace Enabled private State Consumer state Consumer private State Provider state Provider private Partition Handling Manager partition Handling Manager private Distribution Manager distribution Manager private String cache Name private Cache Notifier cache Notifier private Configuration configuration private Global Configuration global Configuration private Rpc Manager rpc Manager private Local Topology Manager local Topology Manager private Optional Integer persistent State Checksum private final Count Down Latch initial State Transfer Complete new Count Down Latch The first topology in which the local node was a member Any command with a lower topology id will be ignored private volatile int first Topology As Member Integer private Key Partitioner key Partitioner public State Transfer Manager Impl Inject public void init State Consumer state Consumer State Provider state Provider Cache cache Cache Notifier cache Notifier Configuration configuration Global Configuration global Configuration Rpc Manager rpc Manager Key Partitioner key Partitioner Local Topology Manager local Topology Manager Partition Handling Manager partition Handling Manager Global State Manager global State Manager Distribution Manager distribution Manager this state Consumer state Consumer this state Provider state Provider this cache Name cache get Name this cache Notifier cache Notifier this configuration configuration this global Configuration global Configuration this rpc Manager rpc Manager this key Partitioner key Partitioner this local Topology Manager local Topology Manager this partition Handling Manager partition Handling Manager this distribution Manager distribution Manager if global State Manager null persistent State Checksum global State Manager read Scoped State cache Name map Scoped Persistent State get Checksum else persistent State Checksum Optional empty needs to be the Distribution Manager and after the cache loader manager if any inits and preloads Start priority Override public void start throws Exception if trace log tracef Starting State Transfer Manager of cache s on node s cache Name rpc Manager get Address Cache Join Info join Info new Cache Join Info pick Consistent Hash Factory configuration clustering hash hash configuration clustering hash num Segments configuration clustering hash num Owners configuration clustering state Transfer timeout configuration transaction transaction Protocol is Total Order configuration clustering cache Mode configuration clustering partition Handling enabled configuration clustering hash capacity Factor local Topology Manager get Persistent persistent State Checksum Cache Topology initial Topology local Topology Manager join cache Name join Info new Cache Topology Handler Override public void update Consistent Hash Cache Topology cache Topology do Topology Update cache Topology false Override public void rebalance Cache Topology cache Topology do Topology Update cache Topology true partition Handling Manager if trace log tracef State Transfer Manager of cache s on node s received initial topology s cache Name rpc Manager get Address initial Topology If no Consistent Hash Factory was explicitly configured we choose a suitable one based on cache mode private Consistent Hash Factory pick Consistent Hash Factory Consistent Hash Factory factory configuration clustering hash consistent Hash Factory if factory null Cache Mode cache Mode configuration clustering cache Mode if cache Mode is Clustered if cache Mode is Distributed if global Configuration transport has Topology Info factory new Topology Aware Sync Consistent Hash Factory else factory new Sync Consistent Hash Factory else if cache Mode is Replicated cache Mode is Invalidation factory new Sync Replicated Consistent Hash Factory else if cache Mode is Scattered factory new Scattered Consistent Hash Factory else throw new Cache Exception Unexpected cache mode cache Mode return factory Decorates the given cache topology to add a key partitioner The key partitioner may include support for grouping as well private Cache Topology add Partitioner Cache Topology cache Topology Consistent Hash current cache Topology get Current current new Partitioner Consistent Hash current key Partitioner Consistent Hash pending cache Topology get Pending if pending null pending new Partitioner Consistent Hash pending key Partitioner Consistent Hash union cache Topology get Union if union null union new Partitioner Consistent Hash union key Partitioner return new Cache Topology cache Topology get Topology Id cache Topology get Rebalance Id current pending union cache Topology get Phase cache Topology get Actual Members cache Topology get Members Persistent Ds private void do Topology Update Cache Topology new Cache Topology boolean is Rebalance Cache Topology old Cache Topology state Consumer get Cache Topology int new Topology Id new Cache Topology get Topology Id if old Cache Topology null old Cache Topology get Topology Id new Topology Id throw new Illegal State Exception Old topology is higher old old Cache Topology new new Cache Topology if trace log tracef Installing new cache topology s on cache s new Cache Topology cache Name No need for extra synchronization here since Local Topology Manager already serializes topology updates if first Topology As Member Integer new Cache Topology get Members contains rpc Manager get Address first Topology As Member new Topology Id if trace log tracef This is the first topology d in which the local node is a member first Topology As Member handle the partitioner new Cache Topology add Partitioner new Cache Topology int new Rebalance Id new Cache Topology get Rebalance Id Cache Topology Phase phase new Cache Topology get Phase cache Notifier notify Topology Changed old Cache Topology new Cache Topology new Topology Id true Completable Future Void consumer Future state Consumer on Topology Update new Cache Topology is Rebalance Completable Future Void provider Future state Provider on Topology Update new Cache Topology is Rebalance Completable Future all Of consumer Future provider Future then Run switch phase case case case case local Topology Manager confirm Rebalance Phase cache Name new Topology Id new Rebalance Id null cache Notifier notify Topology Changed old Cache Topology new Cache Topology new Topology Id false if initial State Transfer Complete get Count assert state Consumer get Cache Topology new Cache Topology boolean is Joined phase Cache Topology Phase new Cache Topology get Read Consistent Hash get Members contains rpc Manager get Address if is Joined initial State Transfer Complete count Down log tracef Initial state transfer complete for cache s on node s cache Name rpc Manager get Address partition Handling Manager on Topology Update new Cache Topology Start priority Suppress Warnings unused public void wait For Initial State Transfer To Complete throws Exception if configuration clustering state Transfer await Initial Transfer if local Topology Manager is Cache Rebalancing Enabled cache Name initial State Transfer Complete count Down if trace log tracef Waiting for initial state transfer to finish for cache s on s cache Name rpc Manager get Address boolean success initial State Transfer Complete await configuration clustering state Transfer timeout Time Unit if success throw new Cache Exception String format Initial state transfer timed out for cache s on s cache Name rpc Manager get Address Stop priority Override public void stop if trace log tracef Shutting down State Transfer Manager of cache s on node s cache Name rpc Manager get Address initial State Transfer Complete count Down local Topology Manager leave cache Name Override public boolean is Join Complete return state Consumer get Cache Topology null anistor this does not mean we have received a topology update or a rebalance yet Override public String get Rebalancing Status throws Exception return local Topology Manager get Rebalancing Status cache Name to String Override public boolean is State Transfer In Progress return state Consumer is State Transfer In Progress Override public boolean is State Transfer In Progress For Key Object key return state Consumer is State Transfer In Progress For Key key Override public Cache Topology get Cache Topology return state Consumer get Cache Topology Override public Map Address Response forward Command If Needed Topology Affected Command command Set Object affected Keys Address origin Localized Cache Topology cache Topology distribution Manager get Cache Topology if cache Topology null if trace log tracef Not fowarding command s because topology is null command return Collections empty Map int cmd Topology Id command get Topology Id forward commands with older topology ids to their new targets but we need to make sure we have the latest topology int local Topology Id cache Topology get Topology Id if it s a tx lock write command forward it to the new owners if trace log tracef Command Topology Id s local Topology Id s cmd Topology Id local Topology Id if cmd Topology Id local Topology Id Collection Address new Targets new Hash Set cache Topology get Write Owners affected Keys new Targets remove rpc Manager get Address Forwarding to the originator would create a cycle This may not be the real originator but one of the original recipients or even one of the nodes that one of the original recipients forwarded the command to In non transactional caches the real originator keeps a lock for the duration of the so this means we could get a deadlock while forwarding to it new Targets remove origin if new Targets is Empty Update the topology id to prevent cycles command set Topology Id local Topology Id if trace log tracef Forwarding command s to new targets s command new Targets final Rpc Options rpc Options rpc Manager get Default Rpc Options false Deliver Order find a way to forward the command async if it was received async Tx Completion Notification Commands are the only commands forwarded asynchronously and they must be return rpc Manager invoke Remotely new Targets command rpc Options return Collections empty Map Investigate merging owns Data and get First Topology As Member as they serve a similar purpose Override public boolean owns Data return state Consumer owns Data Override public int get First Topology As Member return first Topology As Member Override public String to String return State Transfer Manager Impl cache Name rpc Manager get Address 
package org infinispan configuration cache import org infinispan configuration parsing Element Enumeration defining the various storage types for the data container author wburns since public enum Storage Type Objects are stored on heap as objects as provided These are serialized across to other nodes and stored as deserialized instances of the object Equality is defined by the equals method of the implementation class Element Entries are stored in Java heap but as byte instances This mode has equality defined by the byte created from the serialized from of the provided object Element Entries are stored off the normal Java heap This mode has equality defined by the byte created from the serialized from of the provided object Element Element element Storage Type Element element this element element public Element get Element return element 
package org infinispan configuration cache import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set Controls whether when stored in memory keys and values are stored as references to their original objects or in a serialized binary format There are benefits to both approaches but often if used in a clustered mode storing objects as binary means that the cost of serialization happens early on and can be amortized Further deserialization costs are incurred lazily which improves throughput p It is possible to control this on a fine grained basis you can choose to just store keys or values as binary or both p see Store As Binary Configuration Builder deprecated Use link Memory Configuration instead Deprecated public class Store As Binary Configuration public static final Attribute Definition Boolean Attribute Definition builder enabled false auto Persist false build public static final Attribute Definition Boolean Attribute Definition builder keys true immutable build public static final Attribute Definition Boolean Attribute Definition builder values true immutable build static Attribute Set attribute Definition Set return new Attribute Set Store As Binary Configuration class private final Attribute Boolean enabled private final Attribute Boolean store Keys As Binary private final Attribute Boolean store Values As Binary private final Attribute Set attributes Store As Binary Configuration Attribute Set attributes this attributes attributes check Protection enabled attributes attribute store Keys As Binary attributes attribute store Values As Binary attributes attribute Enables storing both keys and values as binary deprecated use link Memory Configuration storage Type instead Deprecated public boolean enabled return enabled get Deprecated public Store As Binary Configuration enabled boolean enabled this enabled set enabled return this Enables storing keys as binary deprecated when store as binary is enabled keys are always stored as binary Deprecated public boolean store Keys As Binary return store Keys As Binary get Enables storing values as binary deprecated when store as binary is enabled values are always stored as binary Deprecated public boolean store Values As Binary return store Values As Binary get Enables defensive copies deprecated Store as binary configuration is always defensive now Deprecated public boolean defensive return true public Attribute Set attributes return attributes Override public String to String return Store As Binary Configuration attributes attributes Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Store As Binary Configuration other Store As Binary Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result 
package org infinispan configuration cache import static org infinispan configuration cache Store As Binary Configuration import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration Controls whether when stored in memory keys and values are stored as references to their original objects or in a serialized binary format There are benefits to both approaches but often if used in a clustered mode storing objects as binary means that the cost of serialization happens early on and can be amortized Further deserialization costs are incurred lazily which improves throughput p It is possible to control this on a fine grained basis you can choose to just store keys or values as binary or both p see Store As Binary Configuration deprecated Please use link Memory Configuration Builder storage Type Storage Type method instead Deprecated public class Store As Binary Configuration Builder extends Abstract Configuration Child Builder implements Builder Store As Binary Configuration private final Attribute Set attributes Store As Binary Configuration Builder Configuration Builder builder super builder this attributes Store As Binary Configuration attribute Definition Set Enables storing both keys and values as binary public Store As Binary Configuration Builder enable attributes attribute set true get Builder memory storage Type Storage Type return this Disables storing both keys and values as binary public Store As Binary Configuration Builder disable attributes attribute set false get Builder memory storage Type Storage Type return this Sets whether this feature is enabled or disabled param enabled if true this feature is enabled If false it is disabled public Store As Binary Configuration Builder enabled boolean enabled attributes attribute set enabled get Builder memory storage Type enabled Storage Type Storage Type return this Specify whether keys are stored as binary or not param store Keys As Binary if true keys are stored as binary If false keys are stored as object references deprecated No longer supported keys and values are both enabled if store as binary is Deprecated public Store As Binary Configuration Builder store Keys As Binary boolean store Keys As Binary return this Specify whether values are stored as binary or not param store Values As Binary if true values are stored as binary If false values are stored as object references deprecated No longer supported keys and values are both enabled if store as binary is Deprecated public Store As Binary Configuration Builder store Values As Binary boolean store Values As Binary return this When defensive copying is disabled Infinispan keeps object references around and marshalls keys lazily So clients can modify entries via original object references and marshalling only happens when entries are to be replicated distributed or stored in a cache store Since client references are valid clients can make changes to entries in the cache using those references but these modifications are only local and you still need to call one of the cache s put replace methods in order for changes to replicate When defensive copies are enabled Infinispan marshalls objects the moment they re stored hence changes made to object references are not stored in the cache not even for local caches param defensive boolean indicating whether defensive copies should be enabled cache wide return a configuration builder for fluent programmatic configuration deprecated Store as binary configuration is always defensive now Deprecated public Store As Binary Configuration Builder defensive boolean defensive return this Override public void validate Nothing to validate Override public void validate Global Configuration global Config Override public Store As Binary Configuration create return new Store As Binary Configuration attributes protect Override public Store As Binary Configuration Builder read Store As Binary Configuration template this attributes read template attributes return this Override public String to String return Store As Binary Configuration Builder attributes attributes 
package org infinispan factories import org infinispan configuration cache Cache Mode import org infinispan factories annotations Default Factory For import org infinispan partitionhandling Partition Handling import org infinispan stream impl Cluster Stream Manager import org infinispan stream impl Cluster Stream Manager Impl import org infinispan stream impl Local Stream Manager import org infinispan stream impl Local Stream Manager Impl import org infinispan stream impl Partition Aware Cluster Stream Manager Factory that allows creation of a link Local Stream Manager or link Cluster Stream Manager based on the provided configuration author wburns since Default Factory For classes Local Stream Manager class Cluster Stream Manager class public class Stream Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override public construct Class component Type Cache Mode cache Mode configuration clustering cache Mode if cache Mode needs State Transfer if component Type equals Local Stream Manager class return component Type cast new Local Stream Manager Impl if component Type equals Cluster Stream Manager class if configuration clustering partition Handling when Split Partition Handling return component Type cast new Partition Aware Cluster Stream Manager else return component Type cast new Cluster Stream Manager Impl return null 
package org infinispan stream import java io Exception import java io Object Input import java io Object Output import java util Hash Map import java util Map import java util Objects import java util Set import java util function Function import java util function Predicate import org infinispan Advanced Cache import org infinispan Cache import org infinispan commons marshall Advanced Externalizer import org infinispan commons util Util import org infinispan container entries Cache Entry import org infinispan factories annotations Inject import org infinispan marshall core Ids Static factory class containing methods that will provide marshallable instances for very common use cases Every instance returned from the various static methods uses the Infinispan marshalling to reduce payload sizes considerably and should be used whenever possible public class Stream Marshalling private Stream Marshalling Provides a predicate that returns true when the object is equal param object the instance to test equality on return the predicate public static Predicate Object equality Predicate Object object return new Equality Predicate object Predicate that returns true if the object passed to it is not null return the predicate public static Predicate Object non Null Predicate return Non Null Predicate get Instance Predicate taht always returns true irrespective of the value provided return the predicate public static Predicate Object always True Predicate return Always True Predicate get Instance Provides a function that returns the key of the entry when invoked param key type of the entry param value type of the entry return a function that when applied to a given entry will return the key public static Function Map Entry entry To Key Function return Entry To Key Function get Instance Provides a function that returns the value of the entry when invoked param key type of the entry param value type of the entry return a function that when applied to a given entry will return the value public static Function Map Entry entry To Value Function return Entry To Value Function get Instance Provides a function that given a key will return the link Cache Entry that maps to this key This function only works when used with a link org infinispan Cache Stream returned from the desired link Cache The entry will be read from the b Cache b of which the b Cache Stream b was created from param the key type param the expected value type of the entry return a function that when applied returns the entry for the given key public static Function Cache Entry key To Entry Function return new Key To Entry Function private static final class Equality Predicate implements Predicate Object private final Object object private Equality Predicate Object object Objects non Null object this object object Override public boolean test Object t return object equals t private static final class Non Null Predicate implements Predicate Object private static final Non Null Predicate new Non Null Predicate public static Non Null Predicate get Instance return Override public boolean test Object t return t null private static final class Always True Predicate implements Predicate Object private static final Always True Predicate new Always True Predicate public static Always True Predicate get Instance return Override public boolean test Object t return true private static final class Entry To Key Function implements Function Map Entry private static final Entry To Key Function new Entry To Key Function public static Entry To Key Function get Instance return Entry To Key Function Override public apply Map Entry kv Entry return kv Entry get Key private static final class Entry To Value Function implements Function Map Entry private static final Entry To Value Function new Entry To Value Function public static Entry To Value Function get Instance return Entry To Value Function Override public apply Map Entry kv Entry return kv Entry get Value private static final class Key To Entry Function implements Function Cache Entry private Advanced Cache advanced Cache Override public Cache Entry apply k return advanced Cache get Cache Entry k Inject public void inject Cache cache this advanced Cache cache get Advanced Cache public static final class Stream Marshalling Externalizer implements Advanced Externalizer Object enum Externalizer Id Equality Predicate class Entry To Key Function class Entry To Value Function class Non Null Predicate class Always True Predicate class Key To Entry Function class private final Class extends Object marshalled Class Externalizer Id Class extends Object marshalled Class this marshalled Class marshalled Class private final Map Class extends Object Externalizer Id objects new Hash Map public Stream Marshalling Externalizer for Externalizer Id id Externalizer Id values objects put id marshalled Class id Override public Set Class get Type Classes return Util Class extends Object as Set Equality Predicate class Entry To Key Function class Entry To Value Function class Non Null Predicate class Always True Predicate class Key To Entry Function class Override public Integer get Id return Ids Override public void write Object Object Output output Object object throws Exception Externalizer Id id objects get object get Class if id null throw new Illegal Argument Exception Unsupported class object get Class was provided output write Byte id ordinal switch id case output write Object Equality Predicate object object break Override public Object read Object Object Input input throws Exception Class Not Found Exception int number input read Unsigned Byte Externalizer Id ids Externalizer Id values if number number ids length throw new Illegal Argument Exception Found invalid number number Externalizer Id id ids number switch id case return new Equality Predicate input read Object case return Entry To Key Function get Instance case return Entry To Value Function get Instance case return Non Null Predicate get Instance case return Always True Predicate get Instance case return new Key To Entry Function default throw new Illegal Argument Exception Externalizer Id not supported id 
package org infinispan stream impl import java io Exception import java io Object Input import java io Object Output import java util Hash Set import java util Set import java util concurrent Completable Future import org infinispan commands Topology Affected Command import org infinispan commands remote Base Rpc Command import org infinispan commons marshall Marshall Util import org infinispan commons util Util import org infinispan factories annotations Inject import org infinispan remoting transport Address import org infinispan util Byte String import org infinispan util concurrent Completable Futures Stream request command that is sent to remote nodes handle execution of remote intermediate and terminal operations param the key type public class Stream Request Command extends Base Rpc Command implements Topology Affected Command public static final byte private Local Stream Manager lsm private Object id private Type type private boolean parallel Stream private Set Integer segments private Set keys private Set excluded Keys private boolean include Loader private Object terminal Operation private int topology Id Override public int get Topology Id return topology Id Override public void set Topology Id int topology Id this topology Id topology Id public Object get Id return id public enum Type private static final Type values Only here for Command Id Uniqueness Test private Stream Request Command super null public Stream Request Command Byte String cache Name super cache Name public Stream Request Command Byte String cache Name Address origin Object id boolean parallel Stream Type type Set Integer segments Set keys Set excluded Keys boolean include Loader Object terminal Operation super cache Name set Origin origin this id id this parallel Stream parallel Stream this type type this segments segments this keys keys this excluded Keys excluded Keys this include Loader include Loader this terminal Operation terminal Operation Inject public void inject Local Stream Manager lsm this lsm lsm Override public Completable Future Object invoke Async throws Throwable switch type case lsm stream Operation id get Origin parallel Stream segments keys excluded Keys include Loader Terminal Operation terminal Operation break case lsm stream Operation Rehash Aware id get Origin parallel Stream segments keys excluded Keys include Loader Terminal Operation terminal Operation break case lsm stream Operation id get Origin parallel Stream segments keys excluded Keys include Loader Key Tracking Terminal Operation terminal Operation break case lsm stream Operation Rehash Aware id get Origin parallel Stream segments keys excluded Keys include Loader Key Tracking Terminal Operation terminal Operation break return Completable Futures completed Null Override public byte get Command Id return Override public void write To Object Output output throws Exception output write Object get Origin output write Object id output write Boolean parallel Stream Marshall Util marshall Enum type output Marshall Util marshall Collection segments output Marshall Util marshall Collection keys output Marshall Util marshall Collection excluded Keys output output write Boolean include Loader output write Object terminal Operation Override public void read From Object Input input throws Exception Class Not Found Exception set Origin Address input read Object id input read Object parallel Stream input read Boolean type Marshall Util unmarshall Enum input ordinal Type ordinal segments Marshall Util unmarshall Collection Unbounded input Hash Set new keys Marshall Util unmarshall Collection Unbounded input Hash Set new excluded Keys Marshall Util unmarshall Collection Unbounded input Hash Set new include Loader input read Boolean terminal Operation input read Object Override public boolean is Return Value Expected return false Override public boolean can Block return true Override public String to String final String Builder sb new String Builder Stream Request Command sb append type append type sb append include Loader append include Loader sb append terminal Operation append terminal Operation sb append topology Id append topology Id sb append id append id sb append segments append segments sb append keys append Util to Str keys sb append excluded Keys append Util to Str excluded Keys sb append return sb to String 
package org infinispan commons util import java io File import java util Properties import org infinispan commons logging Log import org infinispan commons logging Log Factory utility class for replacing properties in strings author a href mailto jason planet com Jason Dillon a author a href Scott Stark jboss org Scott Stark a author a href claudio vesco previnet it Claudio Vesco a author a href mailto adrian jboss com Adrian Brock a author a href mailto dimitris jboss org Dimitris Andreadis a since public class String Property Replacer private static final Log log Log Factory get Log String Property Replacer class New line string constant public static final String Security Actions get Property line separator n File separator value private static final String File separator Path separator value private static final String File path Separator File separator alias private static final String Path separator alias private static final String States used in property parsing private static final int private static final int private static final int Go through the input string and replace any occurance of p with the System get Property p value If there is no such property p defined then the p reference will remain unchanged p If the property reference is of the form p v and there is no such property p then the default value v will be returned p If the property reference is of the form p p or p p v then the primary and the secondary properties will be tried in turn before returning either the unchanged input or the default value p The property is replaced with System get Property file separator value and the property is replaced with System get Property path separator param string the string with possible references return the input string with all property references replaced if any If there are no valid references the input string will be returned public static String replace Properties final String string return replace Properties string null Go through the input string and replace any occurance of p with the props get Property p value If there is no such property p defined then the p reference will remain unchanged p If the property reference is of the form p v and there is no such property p then the default value v will be returned p If the property reference is of the form p p or p p v then the primary and the secondary properties will be tried in turn before returning either the unchanged input or the default value p The property is replaced with System get Property file separator value and the property is replaced with System get Property path separator param string the string with possible references param props the source for x property ref values null means use System get Property return the input string with all property references replaced if any If there are no valid references the input string will be returned public static String replace Properties final String string final Properties props if string null return null final char chars string to Char Array String Builder buffer new String Builder boolean properties false int state int start for int i i chars length i char c chars i Dollar sign outside brackets if c state state Open bracket immediatley after dollar else if c state buffer append string substring start i state start i No open bracket after dollar else if state state Closed bracket after open bracket else if c state No content if start i buffer append Correct else Collect the system property String value String key string substring start i check for alias if equals key value else if equals key value else check from the properties if props null value props get Property key else value Security Actions get Property key if value null Check for a default value key default int colon key index Of if colon String real Key key substring colon if props null value props get Property real Key else value Security Actions get Property real Key if value null Check for a composite key key key value resolve Composite Key real Key props Not a composite key either use the specified default if value null value key substring colon else No default check for a composite key key key value resolve Composite Key key props if value null properties true buffer append value else buffer append buffer append key buffer append log property Could Not Be Replaced key start i state No properties if properties return string Collect the trailing characters if start chars length buffer append string substring start chars length Done return buffer to String Try to resolve a key from the provided properties by checking if it is actually a key key in which case try first key then key If all fails return null p It also accepts key and key param key the key to resolve param props the properties to use return the resolved key or null private static String resolve Composite Key String key Properties props String value null Look for the comma int comma key index Of if comma If we have a first part try resolve it if comma Check the first part String key key substring comma if props null value props get Property key else value Security Actions get Property key Check the second part if there is one and first lookup failed if value null comma key length String key key substring comma if props null value props get Property key else value Security Actions get Property key Return whatever we ve found or null return value 
package org infinispan remoting responses import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids successful response author Manik Surtani since public class Successful Response extends Valid Response public static final Successful Response new Successful Response null private final Object response Value private Successful Response Object response Value this response Value response Value public static Successful Response create Object response Value return response Value null new Successful Response response Value Override public boolean is Successful return true public Object get Response Value return response Value Override public boolean equals Object o if this o return true if o null get Class o get Class return false Successful Response that Successful Response o if response Value null response Value equals that response Value that response Value null return false return true Override public int hash Code return response Value null response Value hash Code Override public String to String return Successful Response Util to Str response Value public static class Externalizer extends Abstract Externalizer Successful Response Override public void write Object Object Output output Successful Response response throws Exception output write Object response response Value Override public Successful Response read Object Object Input input throws Exception Class Not Found Exception return create input read Object Override public Integer get Id return Ids Override public Set Class extends Successful Response get Type Classes return Util Class extends Successful Response as Set Successful Response class 
package org infinispan configuration cache import java util concurrent Time Unit import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration If configured all communications are synchronous in that whenever a thread sends a message sent over the wire it blocks until it receives an acknowledgment from the recipient Sync Config is mutually exclusive with the Async Config deprecated Since the code repl Timeout attribute is now code Clustering Configuration Builder remote Timeout Deprecated public class Sync Configuration Builder extends Abstract Clustering Configuration Child Builder implements Builder Sync Configuration private final Attribute Set attributes protected Sync Configuration Builder Clustering Configuration Builder builder super builder this attributes Sync Configuration attribute Definition Set This is the timeout used to wait for an acknowledgment when making a remote call after which the call is aborted and an exception is thrown deprecated Since please use link Clustering Configuration Builder remote Timeout long Deprecated public Sync Configuration Builder repl Timeout long l attributes attribute Clustering Configuration set l return this This is the timeout used to wait for an acknowledgment when making a remote call after which the call is aborted and an exception is thrown deprecated Since please use link Clustering Configuration Builder remote Timeout long Time Unit Deprecated public Sync Configuration Builder repl Timeout long l Time Unit unit return repl Timeout unit to Millis l Override public void validate Override public void validate Global Configuration global Config Override public Sync Configuration create return new Sync Configuration attributes protect Override public Sync Configuration Builder read Sync Configuration template this attributes read template attributes return this Override public String to String return Sync Configuration Builder attributes attributes 
package org infinispan distribution ch impl import java io Object Input import java io Object Output import java util Array List import java util Collections import java util Comparator import java util Hash Map import java util Hash Set import java util List import java util Map import java util Set import org infinispan commons hash Hash import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan distribution ch Consistent Hash Factory import org infinispan globalstate Scoped Persistent State import org infinispan marshall core Ids import org infinispan remoting transport Address import org infinispan util logging Log import org infinispan util logging Log Factory One of the assumptions people made on consistent hashing involves thinking that given a particular key and same topology it would produce the same consistent hash value no matter which cache it was stored in However that s not exactly the case in Infinispan In order to the optimise the number of segments moved on join leave Infinispan uses a consistent hash that depends on the previous consistent hash Given two caches even if they contain exactly the same keyset it s very easy for the consistent hash history to differ e g if nodes join you might see two separate topology change in one cache and a single topology change in the other The reason for that each node has to send a link org infinispan topology Cache Topology Control Command for each cache it wants to join and Infinispan can and does batch cache topology changes For example if a rebalance is in progress joins are queued and send in one go when the rebalance has finished This link org infinispan distribution ch Consistent Hash Factory implementation avoids any of the issues mentioned and guarantees that multiple caches with the same members will have the same consistent hash It has a drawback compared to link org infinispan distribution ch impl Default Consistent Hash Factory though it can potentially move a lot more segments during a rebalance than strictly necessary because it s not taking advantage of the optimisation mentioned above author Dan Berindei since public class Sync Consistent Hash Factory implements Consistent Hash Factory Default Consistent Hash private static final Log log Log Factory get Log Sync Consistent Hash Factory class public static final float f public static final float f Override public Default Consistent Hash create Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors check Capacity Factors members capacity Factors Builder builder create Builder hash Function num Owners num Segments members capacity Factors builder populate Owners num Segments builder copy Owners return new Default Consistent Hash hash Function num Owners num Segments members capacity Factors builder segment Owners Override public Default Consistent Hash from Persistent State Scoped Persistent State state String consistent Hash Class state get Property consistent Hash if Default Consistent Hash class get Name equals consistent Hash Class throw log persistent Consistent Hash Mismatch this get Class get Name consistent Hash Class return new Default Consistent Hash state protected Builder create Builder Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors return new Builder hash Function num Owners num Segments members capacity Factors protected void check Capacity Factors List Address members Map Address Float capacity Factors if capacity Factors null float total Capacity for Address node members Float capacity Factor capacity Factors get node if capacity Factor null capacity Factor throw new Illegal Argument Exception Invalid capacity factor for node node total Capacity capacity Factor if total Capacity throw new Illegal Argument Exception There must be at least one node with a non zero capacity factor Override public Default Consistent Hash update Members Default Consistent Hash base List Address new Members Map Address Float actual Capacity Factors check Capacity Factors new Members actual Capacity Factors The Consistent Hash Factory contract says we should return the same instance if we re not making changes boolean same Capacity Factors actual Capacity Factors null base get Capacity Factors null actual Capacity Factors equals base get Capacity Factors if new Members equals base get Members same Capacity Factors return base int num Segments base get Num Segments int num Owners base get Num Owners We assume leavers are far fewer than members so it makes sense to check for leavers Hash Set Address leavers new Hash Set Address base get Members leavers remove All new Members Create a new balanced in case we need to allocate new owners for segments with owners Default Consistent Hash rebalanced null Remove leavers List Address new Segment Owners new List num Segments for int i i num Segments i List Address owners new Array List Address base locate Owners For Segment i owners remove All leavers if owners is Empty new Segment Owners i owners else this segment has owners fix it if rebalanced null rebalanced create base get Hash Function num Owners num Segments new Members actual Capacity Factors new Segment Owners i rebalanced locate Owners For Segment i return new Default Consistent Hash base get Hash Function num Owners num Segments new Members actual Capacity Factors new Segment Owners Override public Default Consistent Hash rebalance Default Consistent Hash base Default Consistent Hash rebalanced create base get Hash Function base get Num Owners base get Num Segments base get Members base get Capacity Factors the Consistent Hash Factory contract says we should return the same instance if we re not making changes if rebalanced equals base return base return rebalanced Override public Default Consistent Hash union Default Consistent Hash ch Default Consistent Hash ch return ch union ch protected static class Builder protected final Hash hash Function protected final int num Owners protected final Map Address Float capacity Factors protected final int actual Num Owners protected final int num Segments protected final List Address sorted Members protected final int segment Size protected final List Address segment Owners protected final Ownership Statistics stats protected boolean ignore Max Segments protected Builder Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors this hash Function hash Function this num Segments num Segments this num Owners num Owners this actual Num Owners Math min num Owners members size this sorted Members sort members capacity Factors this capacity Factors populate Capacity Factors capacity Factors sorted Members this segment Size Util get Segment Size num Segments this segment Owners new List num Segments for int i i num Segments i segment Owners i new Array List Address actual Num Owners stats new Ownership Statistics members private Map Address Float populate Capacity Factors Map Address Float capacity Factors List Address sorted Members if capacity Factors null return capacity Factors Map Address Float real Capacity Factors new Hash Map for Address member sorted Members real Capacity Factors put member f return real Capacity Factors protected void add Owner No Check int segment Address owner segment Owners segment add owner stats inc Owned owner if segment Owners segment size stats inc Primary Owned owner protected float compute Total Capacity if capacity Factors null return sorted Members size float total Capacity for Address member sorted Members Float capacity Factor capacity Factors get member total Capacity capacity Factor return total Capacity protected List Address sort List Address members final Map Address Float capacity Factors Array List Address result new Array List Address members Collections sort result new Comparator Address Override public int compare Address o Address o Sort descending by capacity factor and ascending by address int capacity Comparison capacity Factors null capacity Factors get o compare To capacity Factors get o return capacity Comparison capacity Comparison o compare To o return result protected void copy Owners ignore Max Segments false do Copy Owners ignore Max Segments true do Copy Owners protected void do Copy Owners The primary owners have been already assigned and sometimes backup owners as well For each segment with not enough owners add the owners from the previous segments for int segment segment num Segments segment List Address owners segment Owners segment int additional Owners Segment next Segment segment while can Add Owners owners additional Owners Segment segment List Address additional Owners segment Owners additional Owners Segment for Address additional Owner additional Owners add Backup Owner segment additional Owner if can Add Owners owners break additional Owners Segment next Segment additional Owners Segment protected boolean can Add Owners List Address owners return owners size actual Num Owners protected int next Segment int segment if segment num Segments return return segment protected void populate Owners int num Segments int virtual Node Loop until we have already assigned a primary owner to each segment do for Address member sorted Members int segment compute Segment member virtual Node add Primary Owner segment member virtual Node while stats sum Primary Owned num Segments If there are too few segments some members may not have any segments at this point Loop until we have assigned at least one segment to each member or until we have assigned num Owners owners to all segments virtual Node boolean members With Zero Segments false do for Address member sorted Members if stats get Owned member continue members With Zero Segments true int segment compute Segment member virtual Node add Backup Owner segment member virtual Node while members With Zero Segments stats sum Owned num Segments private int compute Segment Address member int virtual Node Add the virtual node count after applying Murmur Hash on the node s hash Code to make up for badly spread test addresses int virtual Node Hash normalized Hash hash Function member hash Code if virtual Node virtual Node Hash normalized Hash hash Function virtual Node Hash virtual Node return virtual Node Hash segment Size protected double compute Expected Segments For Node Address node int num Copies Float node Capacity Factor capacity Factors get node if node Capacity Factor return double remaining Capacity compute Total Capacity double remaining Copies num Copies num Segments for Address a sorted Members float capacity Factor capacity Factors get a double node Segments capacity Factor remaining Capacity remaining Copies if node Segments num Segments node Segments num Segments remaining Capacity capacity Factor remaining Copies node Segments if node equals a return node Segments else All the nodes from now on will have less than num Segments segments so we can stop the iteration if node equals a node Segments node Capacity Factor remaining Capacity remaining Copies return Math max node Segments throw new Illegal State Exception The nodes collection does not include node protected boolean add Primary Owner int segment Address candidate List Address owners segment Owners segment if owners is Empty double expected Segments compute Expected Segments For Node candidate long max Segments Math round Math ceil expected Segments if stats get Primary Owned candidate max Segments add Owner No Check segment candidate return true return false protected boolean add Backup Owner int segment Address candidate List Address owners segment Owners segment if owners size actual Num Owners owners contains candidate if ignore Max Segments double expected Segments compute Expected Segments For Node candidate actual Num Owners long max Segments Math round Math ceil expected Segments if stats get Owned candidate max Segments add Owner No Check segment candidate return true else if capacity Factors get candidate equals f add Owner No Check segment candidate return true return false protected int normalized Hash Hash hash Function int hashcode return hash Function hash hashcode Integer Override public boolean equals Object other return other null other get Class get Class Override public int hash Code return public static class Externalizer extends Abstract Externalizer Sync Consistent Hash Factory Override public void write Object Object Output output Sync Consistent Hash Factory chf Override Suppress Warnings unchecked public Sync Consistent Hash Factory read Object Object Input unmarshaller return new Sync Consistent Hash Factory Override public Integer get Id return Ids Override public Set Class extends Sync Consistent Hash Factory get Type Classes return Collections Class extends Sync Consistent Hash Factory singleton Sync Consistent Hash Factory class 
package org infinispan distribution ch impl import java io Object Input import java io Object Output import java util Collections import java util List import java util Map import java util Set import org infinispan commons hash Hash import org infinispan commons marshall Abstract Externalizer import org infinispan distribution ch Consistent Hash Factory import org infinispan globalstate Scoped Persistent State import org infinispan marshall core Ids import org infinispan remoting transport Address import org infinispan util logging Log import org infinispan util logging Log Factory link Sync Consistent Hash Factory adapted for replicated caches so that the primary owner of a key is the same in replicated and distributed caches author Dan Berindei since public class Sync Replicated Consistent Hash Factory implements Consistent Hash Factory Replicated Consistent Hash private static final Log log Log Factory get Log Sync Replicated Consistent Hash Factory class public static final float f public static final float f private static final Sync Consistent Hash Factory sync new Sync Consistent Hash Factory Override public Replicated Consistent Hash create Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors Default Consistent Hash dch sync create hash Function num Segments members null return replicated From Default dch Override public Replicated Consistent Hash from Persistent State Scoped Persistent State state String consistent Hash Class state get Property consistent Hash if Replicated Consistent Hash class get Name equals consistent Hash Class throw log persistent Consistent Hash Mismatch this get Class get Name consistent Hash Class return new Replicated Consistent Hash state private Replicated Consistent Hash replicated From Default Default Consistent Hash dch int num Segments dch get Num Segments List Address members dch get Members int primary Owners new int num Segments for int segment segment num Segments segment primary Owners segment members index Of dch locate Primary Owner For Segment segment return new Replicated Consistent Hash dch get Hash Function members primary Owners Override public Replicated Consistent Hash update Members Replicated Consistent Hash base List Address new Members Map Address Float actual Capacity Factors Default Consistent Hash base default From Replicated base Default Consistent Hash dch sync update Members base new Members null return replicated From Default dch private Default Consistent Hash default From Replicated Replicated Consistent Hash base int num Segments base get Num Segments List Address base Segment Owners new List num Segments for int segment segment num Segments segment base Segment Owners segment Collections singleton List base locate Primary Owner For Segment segment return new Default Consistent Hash base get Hash Function num Segments base get Members null base Segment Owners Override public Replicated Consistent Hash rebalance Replicated Consistent Hash base Default Consistent Hash base default From Replicated base Default Consistent Hash dch sync rebalance base return replicated From Default dch Override public Replicated Consistent Hash union Replicated Consistent Hash ch Replicated Consistent Hash ch return ch union ch public static class Externalizer extends Abstract Externalizer Sync Replicated Consistent Hash Factory Override public void write Object Object Output output Sync Replicated Consistent Hash Factory chf Override Suppress Warnings unchecked public Sync Replicated Consistent Hash Factory read Object Object Input unmarshaller return new Sync Replicated Consistent Hash Factory Override public Integer get Id return Ids Override public Set Class extends Sync Replicated Consistent Hash Factory get Type Classes return Collections Class extends Sync Replicated Consistent Hash Factory singleton Sync Replicated Consistent Hash Factory class 
package org infinispan stream impl import java io Exception import java io Object Input import java io Object Output import java util Comparator import java util Double Summary Statistics import java util Int Summary Statistics import java util Long Summary Statistics import java util Optional Double import java util Optional Int import java util Optional Long import java util function Bi Consumer import java util function Bi Function import java util function Binary Operator import java util function Consumer import java util function Double Binary Operator import java util function Double Consumer import java util function Double Predicate import java util function Function import java util function Int Binary Operator import java util function Int Consumer import java util function Int Function import java util function Int Predicate import java util function Long Binary Operator import java util function Long Consumer import java util function Long Predicate import java util function Obj Double Consumer import java util function Obj Int Consumer import java util function Obj Long Consumer import java util function Predicate import java util function Supplier import java util stream Collector import java util stream Double Stream import java util stream Int Stream import java util stream Long Stream import java util stream Stream import org infinispan Cache import org infinispan Cache Stream import org infinispan Double Cache Stream import org infinispan Int Cache Stream import org infinispan Long Cache Stream import org infinispan commons marshall Externalizer import org infinispan commons marshall Serialize With import org infinispan util logging Log import org infinispan util logging Log Factory Static factory class used to provide marshallable terminal operations final class Terminal Functions private static final Log log Log Factory get Log Terminal Functions class private Terminal Functions public static Function Stream Boolean all Match Function Predicate super predicate return new All Match Function predicate public static Function Double Stream Boolean all Match Function Double Predicate predicate return new All Match Double Function predicate public static Function Int Stream Boolean all Match Function Int Predicate predicate return new All Match Int Function predicate public static Function Long Stream Boolean all Match Function Long Predicate predicate return new All Match Long Function predicate public static Function Stream Boolean any Match Function Predicate super predicate return new Any Match Function predicate public static Function Double Stream Boolean any Match Function Double Predicate predicate return new Any Match Double Function predicate public static Function Int Stream Boolean any Match Function Int Predicate predicate return new Any Match Int Function predicate public static Function Long Stream Boolean any Match Function Long Predicate predicate return new Any Match Long Function predicate public static Function Double Stream double average Double Function return Average Double Function get Instance public static Function Int Stream long average Int Function return Average Int Function get Instance public static Function Long Stream long average Long Function return Average Long Function get Instance public static Function Stream collect Function Supplier supplier Bi Consumer super accumulator Bi Consumer combiner return new Collect Function supplier accumulator combiner public static Function Double Stream collect Function Supplier supplier Obj Double Consumer accumulator Bi Consumer combiner return new Collect Double Function supplier accumulator combiner public static Function Int Stream collect Function Supplier supplier Obj Int Consumer accumulator Bi Consumer combiner return new Collect Int Function supplier accumulator combiner public static Function Long Stream collect Function Supplier supplier Obj Long Consumer accumulator Bi Consumer combiner return new Collect Long Function supplier accumulator combiner public static Function Stream collector Function Collector super collector return new Collector Function collector public static Function Stream Long count Function return Count Function get Instance public static Function Double Stream Long count Double Function return Count Double Function get Instance public static Function Int Stream Long count Int Function return Count Int Function get Instance public static Function Long Stream Long count Long Function return Count Long Function get Instance public static Function Stream find Any Function return Find Any Function get Instance public static Function Double Stream Double find Any Double Function return Find Any Double Function get Instance public static Function Int Stream Integer find Any Int Function return Find Any Int Function get Instance public static Function Long Stream Long find Any Long Function return Find Any Long Function get Instance public static Function Stream Void for Each Function Consumer super consumer return new For Each Function consumer public static Function Cache Stream Void for Each Function Bi Consumer Cache super consumer return new For Each Bi Consumer Function consumer public static Function Double Stream Void for Each Function Double Consumer consumer return new For Each Double Function consumer public static Function Double Cache Stream Void for Each Function Obj Double Consumer Cache consumer return new For Each Obj Double Function consumer public static Function Int Stream Void for Each Function Int Consumer consumer return new For Each Int Function consumer public static Function Int Cache Stream Void for Each Function Obj Int Consumer Cache consumer return new For Each Obj Int Function consumer public static Function Long Stream Void for Each Function Long Consumer consumer return new For Each Long Function consumer public static Function Long Cache Stream Void for Each Function Obj Long Consumer Cache consumer return new For Each Obj Long Function consumer public static Function Stream max Function Comparator super comparator return new Max Function comparator public static Function Double Stream Double max Double Function return Max Double Function get Instance public static Function Int Stream Integer max Int Function return Max Int Function get Instance public static Function Long Stream Long max Long Function return Max Long Function get Instance public static Function Stream min Function Comparator super comparator return new Min Function comparator public static Function Double Stream Double min Double Function return Min Double Function get Instance public static Function Int Stream Integer min Int Function return Min Int Function get Instance public static Function Long Stream Long min Long Function return Min Long Function get Instance public static Function Stream Boolean none Match Function Predicate super predicate return new None Match Function predicate public static Function Double Stream Boolean none Match Function Double Predicate predicate return new None Match Double Function predicate public static Function Int Stream Boolean none Match Function Int Predicate predicate return new None Match Int Function predicate public static Function Long Stream Boolean none Match Function Long Predicate predicate return new None Match Long Function predicate public static Function Stream reduce Function Binary Operator accumulator return new Reduce Function accumulator public static Function Double Stream Double reduce Function Double Binary Operator accumulator return new Reduce Double Function accumulator public static Function Int Stream Integer reduce Function Int Binary Operator accumulator return new Reduce Int Function accumulator public static Function Long Stream Long reduce Function Long Binary Operator accumulator return new Reduce Long Function accumulator public static Function Stream reduce Function identity Binary Operator accumulator return new Identity Reduce Function identity accumulator public static Function Double Stream Double reduce Function double identity Double Binary Operator accumulator return new Identity Reduce Double Function identity accumulator public static Function Int Stream Integer reduce Function int identity Int Binary Operator accumulator return new Identity Reduce Int Function identity accumulator public static Function Long Stream Long reduce Function long identity Long Binary Operator accumulator return new Identity Reduce Long Function identity accumulator public static Function Stream reduce Function identity Bi Function super accumulator Binary Operator combiner return new Identity Reduce Combiner Function identity accumulator combiner public static Function Double Stream Double sum Double Function return Sum Double Function get Instance public static Function Int Stream Integer sum Int Function return Sum Int Function get Instance public static Function Long Stream Long sum Long Function return Sum Long Function get Instance public static Function Double Stream Double Summary Statistics summary Statistics Double Function return Summary Statistics Double Function get Instance public static Function Long Stream Long Summary Statistics summary Statistics Long Function return Summary Statistics Long Function get Instance public static Function Int Stream Int Summary Statistics summary Statistics Int Function return Summary Statistics Int Function get Instance public static Function Stream Object to Array Function return To Array Function get Instance public static Function Double Stream double to Array Double Function return To Array Double Function get Instance public static Function Int Stream int to Array Int Function return To Array Int Function get Instance public static Function Long Stream long to Array Long Function return To Array Long Function get Instance public static Function Stream to Array Function Int Function generator return new To Array Generator Function generator Serialize With value All Match Function All Match Function Externalizer class private static final class All Match Function implements Function Stream Boolean private final Predicate super predicate private All Match Function Predicate super predicate this predicate predicate Override public Boolean apply Stream stream return stream all Match predicate public static final class All Match Function Externalizer implements Externalizer All Match Function Override public void write Object Object Output output All Match Function object throws Exception output write Object object predicate Override public All Match Function read Object Object Input input throws Exception Class Not Found Exception return new All Match Function Predicate input read Object Serialize With value All Match Double Function All Match Double Function Externalizer class private static final class All Match Double Function implements Function Double Stream Boolean private final Double Predicate predicate private All Match Double Function Double Predicate predicate this predicate predicate Override public Boolean apply Double Stream stream return stream all Match predicate public static final class All Match Double Function Externalizer implements Externalizer All Match Double Function Override public void write Object Object Output output All Match Double Function object throws Exception output write Object object predicate Override public All Match Double Function read Object Object Input input throws Exception Class Not Found Exception return new All Match Double Function Double Predicate input read Object Serialize With value All Match Int Function All Match Int Function Externalizer class private static final class All Match Int Function implements Function Int Stream Boolean private final Int Predicate predicate private All Match Int Function Int Predicate predicate this predicate predicate Override public Boolean apply Int Stream stream return stream all Match predicate public static final class All Match Int Function Externalizer implements Externalizer All Match Int Function Override public void write Object Object Output output All Match Int Function object throws Exception output write Object object predicate Override public All Match Int Function read Object Object Input input throws Exception Class Not Found Exception return new All Match Int Function Int Predicate input read Object Serialize With value All Match Long Function All Match Long Function Externalizer class private static final class All Match Long Function implements Function Long Stream Boolean private final Long Predicate predicate private All Match Long Function Long Predicate predicate this predicate predicate Override public Boolean apply Long Stream stream return stream all Match predicate public static final class All Match Long Function Externalizer implements Externalizer All Match Long Function Override public void write Object Object Output output All Match Long Function object throws Exception output write Object object predicate Override public All Match Long Function read Object Object Input input throws Exception Class Not Found Exception return new All Match Long Function Long Predicate input read Object Serialize With value Any Match Function Any Match Function Externalizer class private static final class Any Match Function implements Function Stream Boolean private final Predicate super predicate private Any Match Function Predicate super predicate this predicate predicate Override public Boolean apply Stream stream return stream any Match predicate public static final class Any Match Function Externalizer implements Externalizer Any Match Function Override public void write Object Object Output output Any Match Function object throws Exception output write Object object predicate Override public Any Match Function read Object Object Input input throws Exception Class Not Found Exception return new Any Match Function Predicate input read Object Serialize With value Any Match Double Function Any Match Double Function Externalizer class private static final class Any Match Double Function implements Function Double Stream Boolean private final Double Predicate predicate private Any Match Double Function Double Predicate predicate this predicate predicate Override public Boolean apply Double Stream stream return stream any Match predicate public static final class Any Match Double Function Externalizer implements Externalizer Any Match Double Function Override public void write Object Object Output output Any Match Double Function object throws Exception output write Object object predicate Override public Any Match Double Function read Object Object Input input throws Exception Class Not Found Exception return new Any Match Double Function Double Predicate input read Object Serialize With value Any Match Int Function Any Match Int Function Externalizer class private static final class Any Match Int Function implements Function Int Stream Boolean private final Int Predicate predicate private Any Match Int Function Int Predicate predicate this predicate predicate Override public Boolean apply Int Stream stream return stream any Match predicate public static final class Any Match Int Function Externalizer implements Externalizer Any Match Int Function Override public void write Object Object Output output Any Match Int Function object throws Exception output write Object object predicate Override public Any Match Int Function read Object Object Input input throws Exception Class Not Found Exception return new Any Match Int Function Int Predicate input read Object Serialize With value Any Match Long Function Any Match Long Function Externalizer class private static final class Any Match Long Function implements Function Long Stream Boolean private final Long Predicate predicate private Any Match Long Function Long Predicate predicate this predicate predicate Override public Boolean apply Long Stream stream return stream any Match predicate public static final class Any Match Long Function Externalizer implements Externalizer Any Match Long Function Override public void write Object Object Output output Any Match Long Function object throws Exception output write Object object predicate Override public Any Match Long Function read Object Object Input input throws Exception Class Not Found Exception return new Any Match Long Function Long Predicate input read Object Serialize With value Average Double Function Average Double Function Externalizer class private static final class Average Double Function implements Function Double Stream double private static final Average Double Function new Average Double Function private Average Double Function public static Average Double Function get Instance return Override public double apply Double Stream stream Double Summary Statistics stats stream summary Statistics return new double stats get Sum stats get Count public static final class Average Double Function Externalizer implements Externalizer Average Double Function Override public void write Object Object Output output Average Double Function object throws Exception Override public Average Double Function read Object Object Input input throws Exception Class Not Found Exception return get Instance Serialize With value Average Int Function Average Int Function Externalizer class private static final class Average Int Function implements Function Int Stream long private static final Average Int Function new Average Int Function private Average Int Function public static Average Int Function get Instance return Override public long apply Int Stream stream Int Summary Statistics stats stream summary Statistics return new long stats get Sum stats get Count public static final class Average Int Function Externalizer implements Externalizer Average Int Function Override public void write Object Object Output output Average Int Function object throws Exception Override public Average Int Function read Object Object Input input throws Exception Class Not Found Exception return get Instance Serialize With value Average Long Function Average Long Function Externalizer class private static final class Average Long Function implements Function Long Stream long private static final Average Long Function new Average Long Function private Average Long Function public static Average Long Function get Instance return Override public long apply Long Stream stream Long Summary Statistics stats stream summary Statistics return new long stats get Sum stats get Count public static final class Average Long Function Externalizer implements Externalizer Average Long Function Override public void write Object Object Output output Average Long Function object throws Exception Override public Average Long Function read Object Object Input input throws Exception Class Not Found Exception return get Instance Serialize With value Count Function Count Function Externalizer class private static final class Count Function implements Function Stream Long private static final Count Function new Count Function private Count Function public static Count Function get Instance return Count Function Override public Long apply Stream stream long count stream count log tracef Count value is d count return count public static final class Count Function Externalizer implements Externalizer Count Function Override public void write Object Object Output output Count Function object throws Exception Override public Count Function read Object Object Input input throws Exception Class Not Found Exception return get Instance Serialize With value Count Double Function Count Double Function Externalizer class private static final class Count Double Function implements Function Double Stream Long private static final Count Double Function new Count Double Function private Count Double Function public static Count Double Function get Instance return Count Double Function Override public Long apply Double Stream stream return stream count public static final class Count Double Function Externalizer implements Externalizer Count Double Function Override public void write Object Object Output output Count Double Function object throws Exception Override public Count Double Function read Object Object Input input throws Exception Class Not Found Exception return get Instance Serialize With value Count Int Function Count Int Function Externalizer class private static final class Count Int Function implements Function Int Stream Long private static final Count Int Function new Count Int Function private Count Int Function public static Count Int Function get Instance return Count Int Function Override public Long apply Int Stream stream return stream count public static final class Count Int Function Externalizer implements Externalizer Count Int Function Override public void write Object Object Output output Count Int Function object throws Exception Override public Count Int Function read Object Object Input input throws Exception Class Not Found Exception return get Instance Serialize With value Count Long Function Count Long Function Externalizer class private static final class Count Long Function implements Function Long Stream Long private static final Count Long Function new Count Long Function private Count Long Function public static Count Long Function get Instance return Count Long Function Override public Long apply Long Stream stream return stream count public static final class Count Long Function Externalizer implements Externalizer Count Long Function Override public void write Object Object Output output Count Long Function object throws Exception Override public Count Long Function read Object Object Input input throws Exception Class Not Found Exception return get Instance Serialize With value Find Any Function Find Any Function Externalizer class private static final class Find Any Function implements Function Stream private static final Find Any Function new Find Any Function private Find Any Function public static Find Any Function get Instance return Find Any Function Override public apply Stream stream return stream find Any or Else null public static final class Find Any Function Externalizer implements Externalizer Find Any Function Override public void write Object Object Output output Find Any Function object throws Exception Override public Find Any Function read Object Object Input input throws Exception Class Not Found Exception return get Instance Serialize With value Find Any Double Function Find Any Double Function Externalizer class private static final class Find Any Double Function implements Function Double Stream Double private static final Find Any Double Function new Find Any Double Function private Find Any Double Function public static Find Any Double Function get Instance return Find Any Double Function Override public Double apply Double Stream stream Optional Double i stream find Any if i is Present return i get As Double else return null public static final class Find Any Double Function Externalizer implements Externalizer Find Any Double Function Override public void write Object Object Output output Find Any Double Function object throws Exception Override public Find Any Double Function read Object Object Input input throws Exception Class Not Found Exception return get Instance Serialize With value Find Any Int Function Find Any Int Function Externalizer class private static final class Find Any Int Function implements Function Int Stream Integer private static final Find Any Int Function new Find Any Int Function private Find Any Int Function public static Find Any Int Function get Instance return Find Any Int Function Override public Integer apply Int Stream stream Optional Int i stream find Any if i is Present return i get As Int else return null public static final class Find Any Int Function Externalizer implements Externalizer Find Any Int Function Override public void write Object Object Output output Find Any Int Function object throws Exception Override public Find Any Int Function read Object Object Input input throws Exception Class Not Found Exception return get Instance Serialize With value Find Any Long Function Find Any Long Function Externalizer class private static final class Find Any Long Function implements Function Long Stream Long private static final Find Any Long Function new Find Any Long Function private Find Any Long Function public static Find Any Long Function get Instance return Find Any Long Function Override public Long apply Long Stream stream Optional Long i stream find Any if i is Present return i get As Long else return null public static final class Find Any Long Function Externalizer implements Externalizer Find Any Long Function Override public void write Object Object Output output Find Any Long Function object throws Exception Override public Find Any Long Function read Object Object Input input throws Exception Class Not Found Exception return get Instance Serialize With value None Match Function None Match Function Externalizer class private static final class None Match Function implements Function Stream Boolean private final Predicate super predicate private None Match Function Predicate super predicate this predicate predicate Override public Boolean apply Stream stream return stream none Match predicate public static final class None Match Function Externalizer implements Externalizer None Match Function Override public void write Object Object Output output None Match Function object throws Exception output write Object object predicate Override public None Match Function read Object Object Input input throws Exception Class Not Found Exception return new None Match Function Predicate input read Object Serialize With value None Match Double Function None Match Double Function Externalizer class private static final class None Match Double Function implements Function Double Stream Boolean private final Double Predicate predicate private None Match Double Function Double Predicate predicate this predicate predicate Override public Boolean apply Double Stream stream return stream none Match predicate public static final class None Match Double Function Externalizer implements Externalizer None Match Double Function Override public void write Object Object Output output None Match Double Function object throws Exception output write Object object predicate Override public None Match Double Function read Object Object Input input throws Exception Class Not Found Exception return new None Match Double Function Double Predicate input read Object Serialize With value None Match Int Function None Match Int Function Externalizer class private static final class None Match Int Function implements Function Int Stream Boolean private final Int Predicate predicate private None Match Int Function Int Predicate predicate this predicate predicate Override public Boolean apply Int Stream stream return stream none Match predicate public static final class None Match Int Function Externalizer implements Externalizer None Match Int Function Override public void write Object Object Output output None Match Int Function object throws Exception output write Object object predicate Override public None Match Int Function read Object Object Input input throws Exception Class Not Found Exception return new None Match Int Function Int Predicate input read Object Serialize With value None Match Long Function None Match Long Function Externalizer class private static final class None Match Long Function implements Function Long Stream Boolean private final Long Predicate predicate private None Match Long Function Long Predicate predicate this predicate predicate Override public Boolean apply Long Stream stream return stream none Match predicate public static final class None Match Long Function Externalizer implements Externalizer None Match Long Function Override public void write Object Object Output output None Match Long Function object throws Exception output write Object object predicate Override public None Match Long Function read Object Object Input input throws Exception Class Not Found Exception return new None Match Long Function Long Predicate input read Object Serialize With value Collect Function Collect Function Externalizer class private static final class Collect Function implements Function Stream private final Supplier supplier private final Bi Consumer super accumulator private final Bi Consumer combiner private Collect Function Supplier supplier Bi Consumer super accumulator Bi Consumer combiner this supplier supplier this accumulator accumulator this combiner combiner Override public apply Stream stream return stream collect supplier accumulator combiner public static final class Collect Function Externalizer implements Externalizer Collect Function Override public void write Object Object Output output Collect Function object throws Exception output write Object object supplier output write Object object accumulator output write Object object combiner Override public Collect Function read Object Object Input input throws Exception Class Not Found Exception return new Collect Function Supplier input read Object Bi Consumer input read Object Bi Consumer input read Object Serialize With value Collect Double Function Collect Double Function Externalizer class private static final class Collect Double Function implements Function Double Stream private final Supplier supplier private final Obj Double Consumer accumulator private final Bi Consumer combiner private Collect Double Function Supplier supplier Obj Double Consumer accumulator Bi Consumer combiner this supplier supplier this accumulator accumulator this combiner combiner Override public apply Double Stream stream return stream collect supplier accumulator combiner public static final class Collect Double Function Externalizer implements Externalizer Collect Double Function Override public void write Object Object Output output Collect Double Function object throws Exception output write Object object supplier output write Object object accumulator output write Object object combiner Override public Collect Double Function read Object Object Input input throws Exception Class Not Found Exception return new Collect Double Function Supplier input read Object Obj Double Consumer input read Object Bi Consumer input read Object Serialize With value Collect Int Function Collect Int Function Externalizer class private static final class Collect Int Function implements Function Int Stream private final Supplier supplier private final Obj Int Consumer accumulator private final Bi Consumer combiner private Collect Int Function Supplier supplier Obj Int Consumer accumulator Bi Consumer combiner this supplier supplier this accumulator accumulator this combiner combiner Override public apply Int Stream stream return stream collect supplier accumulator combiner public static final class Collect Int Function Externalizer implements Externalizer Collect Int Function Override public void write Object Object Output output Collect Int Function object throws Exception output write Object object supplier output write Object object accumulator output write Object object combiner Override public Collect Int Function read Object Object Input input throws Exception Class Not Found Exception return new Collect Int Function Supplier input read Object Obj Int Consumer input read Object Bi Consumer input read Object Serialize With value Collect Long Function Collect Long Function Externalizer class private static final class Collect Long Function implements Function Long Stream private final Supplier supplier private final Obj Long Consumer accumulator private final Bi Consumer combiner private Collect Long Function Supplier supplier Obj Long Consumer accumulator Bi Consumer combiner this supplier supplier this accumulator accumulator this combiner combiner Override public apply Long Stream stream return stream collect supplier accumulator combiner public static final class Collect Long Function Externalizer implements Externalizer Collect Long Function Override public void write Object Object Output output Collect Long Function object throws Exception output write Object object supplier output write Object object accumulator output write Object object combiner Override public Collect Long Function read Object Object Input input throws Exception Class Not Found Exception return new Collect Long Function Supplier input read Object Obj Long Consumer input read Object Bi Consumer input read Object Serialize With value Collector Function Collector Function Externalizer class private static final class Collector Function implements Function Stream private final Collector super collector private Collector Function Collector super collector this collector collector Override public apply Stream stream return stream collect collector public static final class Collector Function Externalizer implements Externalizer Collector Function Override public void write Object Object Output output Collector Function object throws Exception output write Object object collector Override public Collector Function read Object Object Input input throws Exception Class Not Found Exception return new Collector Function Collector input read Object Serialize With value For Each Function For Each Function Externalizer class private static final class For Each Function implements Function Stream Void private final Consumer super consumer private For Each Function Consumer super consumer this consumer consumer Override public Void apply Stream stream stream for Each consumer return null public static final class For Each Function Externalizer implements Externalizer For Each Function Override public void write Object Object Output output For Each Function object throws Exception output write Object object consumer Override public For Each Function read Object Object Input input throws Exception Class Not Found Exception return new For Each Function Consumer input read Object Serialize With value For Each Bi Consumer Function For Each Bi Consumer Function Externalizer class private static final class For Each Bi Consumer Function implements Function Cache Stream Void private final Bi Consumer Cache super consumer private For Each Bi Consumer Function Bi Consumer Cache super consumer this consumer consumer Override public Void apply Cache Stream stream stream for Each consumer return null public static final class For Each Bi Consumer Function Externalizer implements Externalizer For Each Bi Consumer Function Override public void write Object Object Output output For Each Bi Consumer Function object throws Exception output write Object object consumer Override public For Each Bi Consumer Function read Object Object Input input throws Exception Class Not Found Exception return new For Each Bi Consumer Function Bi Consumer input read Object Serialize With value For Each Double Function For Each Double Function Externalizer class private static final class For Each Double Function implements Function Double Stream Void private final Double Consumer consumer private For Each Double Function Double Consumer consumer this consumer consumer Override public Void apply Double Stream stream stream for Each consumer return null public static final class For Each Double Function Externalizer implements Externalizer For Each Double Function Override public void write Object Object Output output For Each Double Function object throws Exception output write Object object consumer Override public For Each Double Function read Object Object Input input throws Exception Class Not Found Exception return new For Each Double Function Double Consumer input read Object Serialize With value For Each Obj Double Function For Each Obj Double Function Externalizer class private static final class For Each Obj Double Function implements Function Double Cache Stream Void private final Obj Double Consumer Cache consumer private For Each Obj Double Function Obj Double Consumer Cache consumer this consumer consumer Override public Void apply Double Cache Stream stream stream for Each consumer return null public static final class For Each Obj Double Function Externalizer implements Externalizer For Each Obj Double Function Override public void write Object Object Output output For Each Obj Double Function object throws Exception output write Object object consumer Override public For Each Obj Double Function read Object Object Input input throws Exception Class Not Found Exception return new For Each Obj Double Function Obj Double Consumer input read Object Serialize With value For Each Int Function For Each Int Function Externalizer class private static final class For Each Int Function implements Function Int Stream Void private final Int Consumer consumer private For Each Int Function Int Consumer consumer this consumer consumer Override public Void apply Int Stream stream stream for Each consumer return null public static final class For Each Int Function Externalizer implements Externalizer For Each Int Function Override public void write Object Object Output output For Each Int Function object throws Exception output write Object object consumer Override public For Each Int Function read Object Object Input input throws Exception Class Not Found Exception return new For Each Int Function Int Consumer input read Object Serialize With value For Each Obj Int Function For Each Obj Int Function Externalizer class private static final class For Each Obj Int Function implements Function Int Cache Stream Void private final Obj Int Consumer Cache consumer private For Each Obj Int Function Obj Int Consumer Cache consumer this consumer consumer Override public Void apply Int Cache Stream stream stream for Each consumer return null public static final class For Each Obj Int Function Externalizer implements Externalizer For Each Obj Int Function Override public void write Object Object Output output For Each Obj Int Function object throws Exception output write Object object consumer Override public For Each Obj Int Function read Object Object Input input throws Exception Class Not Found Exception return new For Each Obj Int Function Obj Int Consumer input read Object Serialize With value For Each Long Function For Each Long Function Externalizer class private static final class For Each Long Function implements Function Long Stream Void private final Long Consumer consumer private For Each Long Function Long Consumer consumer this consumer consumer Override public Void apply Long Stream stream stream for Each consumer return null public static final class For Each Long Function Externalizer implements Externalizer For Each Long Function Override public void write Object Object Output output For Each Long Function object throws Exception output write Object object consumer Override public For Each Long Function read Object Object Input input throws Exception Class Not Found Exception return new For Each Long Function Long Consumer input read Object Serialize With value For Each Obj Long Function For Each Obj Long Function Externalizer class private static final class For Each Obj Long Function implements Function Long Cache Stream Void private final Obj Long Consumer Cache consumer private For Each Obj Long Function Obj Long Consumer Cache consumer this consumer consumer Override public Void apply Long Cache Stream stream stream for Each consumer return null public static final class For Each Obj Long Function Externalizer implements Externalizer For Each Obj Long Function Override public void write Object Object Output output For Each Obj Long Function object throws Exception output write Object object consumer Override public For Each Obj Long Function read Object Object Input input throws Exception Class Not Found Exception return new For Each Obj Long Function Obj Long Consumer input read Object Serialize With value Max Function Max Function Externalizer class private static final class Max Function implements Function Stream private final Comparator super comparator private Max Function Comparator super comparator this comparator comparator Override public apply Stream stream return stream max comparator or Else null public static final class Max Function Externalizer implements Externalizer Max Function Override public void write Object Object Output output Max Function object throws Exception output write Object object comparator Override public Max Function read Object Object Input input throws Exception Class Not Found Exception return new Max Function Comparator input read Object Serialize With value Max Double Function Max Double Function Externalizer class private static final class Max Double Function implements Function Double Stream Double private static final Max Double Function new Max Double Function private Max Double Function public static Max Double Function get Instance return Override public Double apply Double Stream stream Optional Double op stream max if op is Present return op get As Double else return null public static final class Max Double Function Externalizer implements Externalizer Max Double Function Override public void write Object Object Output output Max Double Function object throws Exception Override public Max Double Function read Object Object Input input throws Exception Class Not Found Exception return Max Double Function get Instance Serialize With value Max Int Function Max Int Function Externalizer class private static final class Max Int Function implements Function Int Stream Integer private static final Max Int Function new Max Int Function private Max Int Function public static Max Int Function get Instance return Override public Integer apply Int Stream stream Optional Int op stream max if op is Present return op get As Int else return null public static final class Max Int Function Externalizer implements Externalizer Max Int Function Override public void write Object Object Output output Max Int Function object throws Exception Override public Max Int Function read Object Object Input input throws Exception Class Not Found Exception return Max Int Function get Instance Serialize With value Max Long Function Max Long Function Externalizer class private static final class Max Long Function implements Function Long Stream Long private static final Max Long Function new Max Long Function private Max Long Function public static Max Long Function get Instance return Override public Long apply Long Stream stream Optional Long op stream max if op is Present return op get As Long else return null public static final class Max Long Function Externalizer implements Externalizer Max Long Function Override public void write Object Object Output output Max Long Function object throws Exception Override public Max Long Function read Object Object Input input throws Exception Class Not Found Exception return Max Long Function get Instance Serialize With value Min Function Min Function Externalizer class private static final class Min Function implements Function Stream private final Comparator super comparator private Min Function Comparator super comparator this comparator comparator Override public apply Stream stream return stream min comparator or Else null public static final class Min Function Externalizer implements Externalizer Min Function Override public void write Object Object Output output Min Function object throws Exception output write Object object comparator Override public Min Function read Object Object Input input throws Exception Class Not Found Exception return new Min Function Comparator input read Object Serialize With value Min Double Function Min Double Function Externalizer class private static final class Min Double Function implements Function Double Stream Double private static final Min Double Function new Min Double Function private Min Double Function public static Min Double Function get Instance return Override public Double apply Double Stream stream Optional Double op stream min if op is Present return op get As Double else return null public static final class Min Double Function Externalizer implements Externalizer Min Double Function Override public void write Object Object Output output Min Double Function object throws Exception Override public Min Double Function read Object Object Input input throws Exception Class Not Found Exception return Min Double Function get Instance Serialize With value Min Int Function Min Int Function Externalizer class private static final class Min Int Function implements Function Int Stream Integer private static final Min Int Function new Min Int Function private Min Int Function public static Min Int Function get Instance return Override public Integer apply Int Stream stream Optional Int op stream min if op is Present return op get As Int else return null public static final class Min Int Function Externalizer implements Externalizer Min Int Function Override public void write Object Object Output output Min Int Function object throws Exception Override public Min Int Function read Object Object Input input throws Exception Class Not Found Exception return Min Int Function get Instance Serialize With value Min Long Function Min Long Function Externalizer class private static final class Min Long Function implements Function Long Stream Long private static final Min Long Function new Min Long Function private Min Long Function public static Min Long Function get Instance return Override public Long apply Long Stream stream Optional Long op stream min if op is Present return op get As Long else return null public static final class Min Long Function Externalizer implements Externalizer Min Long Function Override public void write Object Object Output output Min Long Function object throws Exception Override public Min Long Function read Object Object Input input throws Exception Class Not Found Exception return Min Long Function get Instance Serialize With value Reduce Function Reduce Function Externalizer class private static final class Reduce Function implements Function Stream private final Binary Operator accumulator private Reduce Function Binary Operator accumulator this accumulator accumulator Override public apply Stream stream return stream reduce accumulator or Else null public static final class Reduce Function Externalizer implements Externalizer Reduce Function Override public void write Object Object Output output Reduce Function object throws Exception output write Object object accumulator Override public Reduce Function read Object Object Input input throws Exception Class Not Found Exception return new Reduce Function Binary Operator input read Object Serialize With value Reduce Double Function Reduce Double Function Externalizer class private static final class Reduce Double Function implements Function Double Stream Double private final Double Binary Operator accumulator private Reduce Double Function Double Binary Operator accumulator this accumulator accumulator Override public Double apply Double Stream stream Optional Double optional Int stream reduce accumulator if optional Int is Present return optional Int get As Double else return null public static final class Reduce Double Function Externalizer implements Externalizer Reduce Double Function Override public void write Object Object Output output Reduce Double Function object throws Exception output write Object object accumulator Override public Reduce Double Function read Object Object Input input throws Exception Class Not Found Exception return new Reduce Double Function Double Binary Operator input read Object Serialize With value Reduce Int Function Reduce Int Function Externalizer class private static final class Reduce Int Function implements Function Int Stream Integer private final Int Binary Operator accumulator private Reduce Int Function Int Binary Operator accumulator this accumulator accumulator Override public Integer apply Int Stream stream Optional Int optional Int stream reduce accumulator if optional Int is Present return optional Int get As Int else return null public static final class Reduce Int Function Externalizer implements Externalizer Reduce Int Function Override public void write Object Object Output output Reduce Int Function object throws Exception output write Object object accumulator Override public Reduce Int Function read Object Object Input input throws Exception Class Not Found Exception return new Reduce Int Function Int Binary Operator input read Object Serialize With value Reduce Long Function Reduce Long Function Externalizer class private static final class Reduce Long Function implements Function Long Stream Long private final Long Binary Operator accumulator private Reduce Long Function Long Binary Operator accumulator this accumulator accumulator Override public Long apply Long Stream stream Optional Long optional Int stream reduce accumulator if optional Int is Present return optional Int get As Long else return null public static final class Reduce Long Function Externalizer implements Externalizer Reduce Long Function Override public void write Object Object Output output Reduce Long Function object throws Exception output write Object object accumulator Override public Reduce Long Function read Object Object Input input throws Exception Class Not Found Exception return new Reduce Long Function Long Binary Operator input read Object Serialize With value Identity Reduce Function Identity Reduct Function Externalizer class private static final class Identity Reduce Function implements Function Stream private final identity private final Binary Operator accumulator private Identity Reduce Function identity Binary Operator accumulator this identity identity this accumulator accumulator Override public apply Stream stream return stream reduce identity accumulator public static final class Identity Reduct Function Externalizer implements Externalizer Identity Reduce Function Override public void write Object Object Output output Identity Reduce Function object throws Exception output write Object object identity output write Object object accumulator Override public Identity Reduce Function read Object Object Input input throws Exception Class Not Found Exception return new Identity Reduce Function input read Object Binary Operator input read Object Serialize With value Identity Reduce Double Function Identity Reduct Function Externalizer class private static final class Identity Reduce Double Function implements Function Double Stream Double private final double identity private final Double Binary Operator accumulator private Identity Reduce Double Function double identity Double Binary Operator accumulator this identity identity this accumulator accumulator Override public Double apply Double Stream stream return stream reduce identity accumulator public static final class Identity Reduct Function Externalizer implements Externalizer Identity Reduce Double Function Override public void write Object Object Output output Identity Reduce Double Function object throws Exception output write Double object identity output write Object object accumulator Override public Identity Reduce Double Function read Object Object Input input throws Exception Class Not Found Exception return new Identity Reduce Double Function input read Double Double Binary Operator input read Object Serialize With value Identity Reduce Int Function Identity Reduct Function Externalizer class private static final class Identity Reduce Int Function implements Function Int Stream Integer private final int identity private final Int Binary Operator accumulator private Identity Reduce Int Function int identity Int Binary Operator accumulator this identity identity this accumulator accumulator Override public Integer apply Int Stream stream return stream reduce identity accumulator public static final class Identity Reduct Function Externalizer implements Externalizer Identity Reduce Int Function Override public void write Object Object Output output Identity Reduce Int Function object throws Exception output write Int object identity output write Object object accumulator Override public Identity Reduce Int Function read Object Object Input input throws Exception Class Not Found Exception return new Identity Reduce Int Function input read Int Int Binary Operator input read Object Serialize With value Identity Reduce Long Function Identity Reduct Function Externalizer class private static final class Identity Reduce Long Function implements Function Long Stream Long private final long identity private final Long Binary Operator accumulator private Identity Reduce Long Function long identity Long Binary Operator accumulator this identity identity this accumulator accumulator Override public Long apply Long Stream stream return stream reduce identity accumulator public static final class Identity Reduct Function Externalizer implements Externalizer Identity Reduce Long Function Override public void write Object Object Output output Identity Reduce Long Function object throws Exception output write Long object identity output write Object object accumulator Override public Identity Reduce Long Function read Object Object Input input throws Exception Class Not Found Exception return new Identity Reduce Long Function input read Long Long Binary Operator input read Object Serialize With value Identity Reduce Combiner Function Identity Reduct Function Externalizer class private static final class Identity Reduce Combiner Function implements Function Stream private final identity private final Bi Function super accumulator private final Binary Operator combiner private Identity Reduce Combiner Function identity Bi Function super accumulator Binary Operator combiner this identity identity this accumulator accumulator this combiner combiner Override public apply Stream stream return stream reduce identity accumulator combiner public static final class Identity Reduct Function Externalizer implements Externalizer Identity Reduce Combiner Function Override public void write Object Object Output output Identity Reduce Combiner Function object throws Exception output write Object object identity output write Object object accumulator output write Object object combiner Override public Identity Reduce Combiner Function read Object Object Input input throws Exception Class Not Found Exception return new Identity Reduce Combiner Function input read Object Bi Function input read Object Binary Operator input read Object Serialize With value Sum Double Function Sum Double Function Externalizer class private static final class Sum Double Function implements Function Double Stream Double private static final Sum Double Function new Sum Double Function private Sum Double Function public static Sum Double Function get Instance return Override public Double apply Double Stream stream return stream sum public static final class Sum Double Function Externalizer implements Externalizer Sum Double Function Override public void write Object Object Output output Sum Double Function object throws Exception Override public Sum Double Function read Object Object Input input throws Exception Class Not Found Exception return Sum Double Function get Instance Serialize With value Sum Int Function Sum Int Function Externalizer class private static final class Sum Int Function implements Function Int Stream Integer private static final Sum Int Function new Sum Int Function private Sum Int Function public static Sum Int Function get Instance return Override public Integer apply Int Stream stream return stream sum public static final class Sum Int Function Externalizer implements Externalizer Sum Int Function Override public void write Object Object Output output Sum Int Function object throws Exception Override public Sum Int Function read Object Object Input input throws Exception Class Not Found Exception return Sum Int Function get Instance Serialize With value Sum Long Function Sum Long Function Externalizer class private static final class Sum Long Function implements Function Long Stream Long private static final Sum Long Function new Sum Long Function private Sum Long Function public static Sum Long Function get Instance return Override public Long apply Long Stream stream return stream sum public static final class Sum Long Function Externalizer implements Externalizer Sum Long Function Override public void write Object Object Output output Sum Long Function object throws Exception Override public Sum Long Function read Object Object Input input throws Exception Class Not Found Exception return Sum Long Function get Instance Serialize With value Summary Statistics Double Function Summary Statistics Double Function Externalizer class private static final class Summary Statistics Double Function implements Function Double Stream Double Summary Statistics private static final Summary Statistics Double Function new Summary Statistics Double Function private Summary Statistics Double Function public static Summary Statistics Double Function get Instance return Override public Double Summary Statistics apply Double Stream stream return stream summary Statistics public static final class Summary Statistics Double Function Externalizer implements Externalizer Summary Statistics Double Function Override public void write Object Object Output output Summary Statistics Double Function object throws Exception Override public Summary Statistics Double Function read Object Object Input input throws Exception Class Not Found Exception return Summary Statistics Double Function get Instance Serialize With value Summary Statistics Int Function Summary Statistics Int Function Externalizer class private static final class Summary Statistics Int Function implements Function Int Stream Int Summary Statistics private static final Summary Statistics Int Function new Summary Statistics Int Function private Summary Statistics Int Function public static Summary Statistics Int Function get Instance return Override public Int Summary Statistics apply Int Stream stream return stream summary Statistics public static final class Summary Statistics Int Function Externalizer implements Externalizer Summary Statistics Int Function Override public void write Object Object Output output Summary Statistics Int Function object throws Exception Override public Summary Statistics Int Function read Object Object Input input throws Exception Class Not Found Exception return Summary Statistics Int Function get Instance Serialize With value Summary Statistics Long Function Summary Statistics Long Function Externalizer class private static final class Summary Statistics Long Function implements Function Long Stream Long Summary Statistics private static final Summary Statistics Long Function new Summary Statistics Long Function private Summary Statistics Long Function public static Summary Statistics Long Function get Instance return Override public Long Summary Statistics apply Long Stream stream return stream summary Statistics public static final class Summary Statistics Long Function Externalizer implements Externalizer Summary Statistics Long Function Override public void write Object Object Output output Summary Statistics Long Function object throws Exception Override public Summary Statistics Long Function read Object Object Input input throws Exception Class Not Found Exception return Summary Statistics Long Function get Instance Serialize With value To Array Function To Array Function Externalizer class private static final class To Array Function implements Function Stream Object private static final To Array Function new To Array Function private To Array Function public static To Array Function get Instance return Override public Object apply Stream stream return stream to Array public static final class To Array Function Externalizer implements Externalizer To Array Function Override public void write Object Object Output output To Array Function object throws Exception Override public To Array Function read Object Object Input input throws Exception Class Not Found Exception return To Array Function get Instance Serialize With value To Array Double Function To Array Double Function Externalizer class private static final class To Array Double Function implements Function Double Stream double private static final To Array Double Function new To Array Double Function private To Array Double Function public static To Array Double Function get Instance return Override public double apply Double Stream stream return stream to Array public static final class To Array Double Function Externalizer implements Externalizer To Array Double Function Override public void write Object Object Output output To Array Double Function object throws Exception Override public To Array Double Function read Object Object Input input throws Exception Class Not Found Exception return To Array Double Function get Instance Serialize With value To Array Int Function To Array Int Function Externalizer class private static final class To Array Int Function implements Function Int Stream int private static final To Array Int Function new To Array Int Function private To Array Int Function public static To Array Int Function get Instance return Override public int apply Int Stream stream return stream to Array public static final class To Array Int Function Externalizer implements Externalizer To Array Int Function Override public void write Object Object Output output To Array Int Function object throws Exception Override public To Array Int Function read Object Object Input input throws Exception Class Not Found Exception return To Array Int Function get Instance Serialize With value To Array Long Function To Array Long Function Externalizer class private static final class To Array Long Function implements Function Long Stream long private static final To Array Long Function new To Array Long Function private To Array Long Function public static To Array Long Function get Instance return Override public long apply Long Stream stream return stream to Array public static final class To Array Long Function Externalizer implements Externalizer To Array Long Function Override public void write Object Object Output output To Array Long Function object throws Exception Override public To Array Long Function read Object Object Input input throws Exception Class Not Found Exception return To Array Long Function get Instance Serialize With value To Array Generator Function To Array Generator Function Externalizer class private static final class To Array Generator Function implements Function Stream private final Int Function generator private To Array Generator Function Int Function generator this generator generator Override public apply Stream stream return stream to Array generator public static final class To Array Generator Function Externalizer implements Externalizer To Array Generator Function Override public void write Object Object Output output To Array Generator Function object throws Exception output write Object object generator Override public To Array Generator Function read Object Object Input input throws Exception Class Not Found Exception return new To Array Generator Function Int Function input read Object 
package org infinispan stream impl termop import java io Exception import java io Object Input import java io Object Output import java util Set import java util function Bi Consumer import java util function Consumer import java util function Double Consumer import java util function Function import java util function Int Consumer import java util function Long Consumer import java util function Obj Double Consumer import java util function Obj Int Consumer import java util function Obj Long Consumer import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Advanced Externalizer import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan stream impl intops Intermediate Operation import org infinispan stream impl termop object Flat Map Iterator Operation import org infinispan stream impl termop object For Each Bi Operation import org infinispan stream impl termop object For Each Operation import org infinispan stream impl termop object Map Iterator Operation import org infinispan stream impl termop object No Map Iterator Operation import org infinispan stream impl termop primitive For Each Double Operation import org infinispan stream impl termop primitive For Each Flat Map Double Operation import org infinispan stream impl termop primitive For Each Flat Map Int Operation import org infinispan stream impl termop primitive For Each Flat Map Long Operation import org infinispan stream impl termop primitive For Each Flat Map Obj Double Operation import org infinispan stream impl termop primitive For Each Flat Map Obj Int Operation import org infinispan stream impl termop primitive For Each Flat Map Obj Long Operation import org infinispan stream impl termop primitive For Each Int Operation import org infinispan stream impl termop primitive For Each Long Operation import org infinispan stream impl termop primitive For Each Obj Double Operation import org infinispan stream impl termop primitive For Each Obj Int Operation import org infinispan stream impl termop primitive For Each Obj Long Operation import org jboss marshalling util Identity Int Map link Advanced Externalizer that provides functionality required for marshalling all of the various terminal operations that are used by various distributed streams including the primitive forms public class Terminal Operation Externalizer implements Advanced Externalizer Base Terminal Operation private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private final Identity Int Map Class extends Base Terminal Operation operations new Identity Int Map public Terminal Operation Externalizer operations put Single Run Operation class operations put Segment Retrying Operation class operations put Flat Map Iterator Operation class operations put Map Iterator Operation class operations put No Map Iterator Operation class operations put For Each Operation class operations put For Each Flat Map Double Operation class operations put For Each Flat Map Int Operation class operations put For Each Flat Map Long Operation class operations put For Each Double Operation class operations put For Each Int Operation class operations put For Each Long Operation class operations put For Each Bi Operation class operations put For Each Obj Double Operation class operations put For Each Obj Int Operation class operations put For Each Obj Long Operation class operations put For Each Flat Map Obj Double Operation class operations put For Each Flat Map Obj Int Operation class operations put For Each Flat Map Obj Long Operation class Override public Set Class extends Base Terminal Operation get Type Classes return Util Class extends Base Terminal Operation as Set Single Run Operation class Segment Retrying Operation class Flat Map Iterator Operation class Map Iterator Operation class No Map Iterator Operation class For Each Operation class For Each Flat Map Double Operation class For Each Flat Map Int Operation class For Each Flat Map Long Operation class For Each Double Operation class For Each Int Operation class For Each Long Operation class For Each Bi Operation class For Each Obj Double Operation class For Each Obj Int Operation class For Each Obj Long Operation class For Each Flat Map Obj Double Operation class For Each Flat Map Obj Int Operation class For Each Flat Map Obj Long Operation class Override public Integer get Id return Ids Override public void write Object Object Output output Base Terminal Operation object throws Exception int number operations get object get Class output write Byte number output write Object object get Intermediate Operations switch number case output write Object Single Run Operation object get Function break case output write Object Segment Retrying Operation object get Function break case Unsigned Numeric write Unsigned Int output Flat Map Iterator Operation object get Batch Size break case Unsigned Numeric write Unsigned Int output Map Iterator Operation object get Batch Size break case Unsigned Numeric write Unsigned Int output No Map Iterator Operation object get Batch Size break case Unsigned Numeric write Unsigned Int output For Each Operation object get Batch Size output write Object For Each Operation object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Flat Map Double Operation object get Batch Size output write Object For Each Flat Map Double Operation object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Flat Map Int Operation object get Batch Size output write Object For Each Flat Map Int Operation object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Flat Map Long Operation object get Batch Size output write Object For Each Flat Map Long Operation object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Double Operation object get Batch Size output write Object For Each Double Operation object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Int Operation object get Batch Size output write Object For Each Int Operation object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Long Operation object get Batch Size output write Object For Each Long Operation object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Bi Operation object get Batch Size output write Object For Each Bi Operation object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Obj Double Operation object get Batch Size output write Object For Each Obj Double Operation object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Obj Int Operation object get Batch Size output write Object For Each Obj Int Operation Object object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Obj Long Operation object get Batch Size output write Object For Each Obj Long Operation object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Flat Map Obj Double Operation object get Batch Size output write Object For Each Flat Map Obj Double Operation object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Flat Map Obj Int Operation object get Batch Size output write Object For Each Flat Map Obj Int Operation object get Consumer break case Unsigned Numeric write Unsigned Int output For Each Flat Map Obj Long Operation object get Batch Size output write Object For Each Flat Map Obj Long Operation object get Consumer break default throw new Illegal Argument Exception Override public Base Terminal Operation read Object Object Input input throws Exception Class Not Found Exception int number input read Unsigned Byte switch number case return new Single Run Operation Iterable Intermediate Operation input read Object null Function input read Object case return new Segment Retrying Operation Iterable Intermediate Operation input read Object null Function input read Object case return new Flat Map Iterator Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input case return new Map Iterator Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input case return new No Map Iterator Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input case return new For Each Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Consumer input read Object case return new For Each Flat Map Double Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Double Consumer input read Object case return new For Each Flat Map Int Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Int Consumer input read Object case return new For Each Flat Map Long Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Long Consumer input read Object case return new For Each Double Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Double Consumer input read Object case return new For Each Int Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Int Consumer input read Object case return new For Each Long Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Long Consumer input read Object case return new For Each Bi Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Bi Consumer input read Object case return new For Each Obj Double Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Obj Double Consumer input read Object case return new For Each Obj Int Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Obj Int Consumer input read Object case return new For Each Obj Long Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Obj Long Consumer input read Object case return new For Each Flat Map Obj Double Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Obj Double Consumer input read Object case return new For Each Flat Map Obj Int Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Obj Int Consumer input read Object case return new For Each Flat Map Obj Long Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Obj Long Consumer input read Object default throw new Illegal Argument Exception Found invalid number number 
package org infinispan factories threads import java util regex Matcher import java util regex Pattern author Galder Zamarre o public class Thread Name Info private final long global Thread Sequence Num private final long per Factory Thread Sequence Num private final long factory Sequence Num private final String node private final String component Thread Name Info long global Thread Sequence Num long per Factory Thread Sequence Num long factory Sequence Num String node String component this global Thread Sequence Num global Thread Sequence Num this per Factory Thread Sequence Num per Factory Thread Sequence Num this factory Sequence Num factory Sequence Num this node node this component component private static final Pattern search Pattern Pattern compile Format the thread name string ul li code emit a percent sign li li code t emit the per factory thread sequence number li li code g emit the global thread sequence number li li code f emit the factory sequence number li li code p emit the code separated thread group path li li code i emit the thread li li code emit the thread group name li li code n emit the node name li li code c emit the component name li ul param thread the thread param format String the format string return the thread name string public String format Thread thread String format String final String Builder builder new String Builder format String length final Thread Group group thread get Thread Group final Matcher matcher search Pattern matcher format String while matcher find if matcher group null builder append matcher group else switch matcher group char At case builder append break case t builder append per Factory Thread Sequence Num break case g builder append global Thread Sequence Num break case f builder append factory Sequence Num break case p if group null append Group Path group builder break case i builder append thread get Id break case if group null builder append group get Name break case n if node null builder append node break case c if component null builder append component break return builder to String private static void append Group Path Thread Group group String Builder builder final Thread Group parent group get Parent if parent null append Group Path parent builder builder append builder append group get Name 
package org infinispan configuration global import java util concurrent Thread Factory import org infinispan commons executors Thread Pool Executor Factory author Galder Zamarre o public class Thread Pool Configuration private final Thread Factory thread Factory private final Thread Pool Executor Factory thread Pool Factory protected Thread Pool Configuration Thread Factory thread Factory Thread Pool Executor Factory thread Pool Factory this thread Factory thread Factory this thread Pool Factory thread Pool Factory public extends Thread Pool Executor Factory thread Pool Factory return thread Pool Factory public extends Thread Factory thread Factory return thread Factory Override public String to String return Thread Pool Configuration thread Factory thread Factory thread Pool Factory thread Pool Factory 
package org infinispan configuration global import java util concurrent Thread Factory import org infinispan commons configuration Builder import org infinispan commons executors Thread Pool Executor Factory author Galder Zamarre o public class Thread Pool Configuration Builder extends Abstract Global Configuration Builder implements Builder Thread Pool Configuration Thread Factory thread Factory Thread Pool Executor Factory thread Pool Factory public Thread Pool Configuration Builder Global Configuration Builder global Config super global Config Override public void validate if thread Pool Factory null thread Pool Factory validate public Thread Pool Configuration Builder thread Factory Thread Factory thread Factory this thread Factory thread Factory return this public Thread Pool Configuration Builder thread Pool Factory Thread Pool Executor Factory thread Pool Factory this thread Pool Factory thread Pool Factory return this Override public Thread Pool Configuration create return new Thread Pool Configuration thread Factory thread Pool Factory Override public Thread Pool Configuration Builder read Thread Pool Configuration template this thread Factory template thread Factory this thread Pool Factory template thread Pool Factory return this Override public boolean equals Object o if this o return true if o null get Class o get Class return false Thread Pool Configuration Builder that Thread Pool Configuration Builder o if thread Pool Factory null thread Pool Factory equals that thread Pool Factory that thread Pool Factory null return false if thread Factory null thread Factory equals that thread Factory that thread Factory null return false return true Override public int hash Code int result thread Factory null thread Factory hash Code result result thread Pool Factory null thread Pool Factory hash Code return result 
package org infinispan remoting transport jgroups import java util Hash Map import java util Map import java util concurrent Executor Service import java util concurrent Thread Pool Executor import java util concurrent Time Unit import org infinispan executors Lazy Initializing Blocking Task Aware Executor Service import org infinispan util concurrent Blocking Task Aware Executor Service Impl import org jgroups stack Diagnostics Handler probe handler for link org jgroups tests Probe protocol is Groups p It contains a single key and returns the information about the remote thread pool executor service author Pedro Ruivo since class Thread Pool Probe Handler implements Diagnostics Handler Probe Handler private static final String ispn remote private volatile Executor Service executor Override public Map String String handle Probe String keys if keys null keys length return null Thread Pool Executor exec extract executor if exec null return null Map String String map new Hash Map for String key keys switch key case map put active thread String value Of exec get Active Count map put min thread String value Of exec get Core Pool Size map put max thread String value Of exec get Maximum Pool Size map put current pool size String value Of exec get Pool Size map put largest pool size String value Of exec get Largest Pool Size map put keep alive String value Of exec get Keep Alive Time Time Unit map put queue size String value Of exec get Queue size break return map is Empty null map Override public String supported Keys return new String void update Thread Pool Executor Service executor Service if executor Service null this executor executor Service private static Thread Pool Executor extract Executor Service service if service instanceof Thread Pool Executor return Thread Pool Executor service else if service instanceof Blocking Task Aware Executor Service Impl return extract Blocking Task Aware Executor Service Impl service get Executor Service else if service instanceof Lazy Initializing Blocking Task Aware Executor Service return extract Lazy Initializing Blocking Task Aware Executor Service service get Executor Service return null we do n t know how to handle the remaining cases 
package org infinispan distribution ch impl import java io Object Input import java io Object Output import java util Collections import java util Hash Set import java util List import java util Set import org infinispan commons marshall Abstract Externalizer import org infinispan distribution topologyaware Topology Info import org infinispan distribution topologyaware Topology Level import org infinispan marshall core Ids import org infinispan remoting transport Address import org infinispan remoting transport Topology Aware Address Default topology aware consistent hash factory implementation author Dan Berindei since public class Topology Aware Consistent Hash Factory extends Default Consistent Hash Factory Override protected void add Backup Owners Builder builder Topology Info topology Info new Topology Info builder get Members builder get Capacity Factors Remove extra owners could be leftovers from add Primary Owners Do n t worry about location information yet remove Extra Backup Owners builder If owners segment num Owners add new owners Unlike the parent class we allow many more segments for one node just in order to get as many different sites racks and machines in the same owner list add Backup Owners For Level builder topology Info Topology Level add Backup Owners For Level builder topology Info Topology Level add Backup Owners For Level builder topology Info Topology Level add Backup Owners For Level builder topology Info Topology Level Now owners segment num Owners for every segment because of steps and replace Backup Owners For Level builder topology Info Topology Level replace Backup Owners For Level builder topology Info Topology Level replace Backup Owners For Level builder topology Info Topology Level Replace owners that have too many segments with owners that have too few replace Backup Owner No Level builder topology Info private void add Backup Owners For Level Builder builder Topology Info topology Info Topology Level level In the first phase the new owners must own min Segments segments It may not be possible to fill all the segments with num Owners owners this way so we repeat this in a loop each iteration with a higher limit of owned segments int extra Segments while do Add Backup Owners For Level builder topology Info level extra Segments extra Segments private boolean do Add Backup Owners For Level Builder builder Topology Info topology Info Topology Level level int extra Segments boolean sufficient Owners true for int segment segment builder get Num Segments segment List Address owners builder get Owners segment if owners size builder get Actual Num Owners continue int max Distinct Locations topology Info get Distinct Locations Count level builder get Actual Num Owners Topology Info owners Info new Topology Info owners builder get Capacity Factors int distinct Locations owners Info get Distinct Locations Count level builder get Actual Num Owners if distinct Locations max Distinct Locations continue float total Capacity topology Info compute Total Capacity builder get Members builder get Capacity Factors for Address candidate builder get Members int node Extra Segments int extra Segments builder get Capacity Factor candidate total Capacity int max Segments topology Info compute Expected Segments builder get Num Segments builder get Actual Num Owners candidate node Extra Segments if builder get Owned candidate max Segments if owners contains candidate location Is Duplicate owners candidate level builder add Owner segment candidate distinct Locations The owners list is live no need to query it again if owners size builder get Actual Num Owners break if distinct Locations max Distinct Locations owners size builder get Actual Num Owners sufficient Owners false return sufficient Owners private void replace Backup Owners For Level Builder builder Topology Info topology Info Topology Level level int extra Segments while do Replace Backup Owners For Level builder topology Info level extra Segments extra Segments private boolean do Replace Backup Owners For Level Builder builder Topology Info topology Info Topology Level level int extra Segments boolean sufficient Locations true At this point each segment already has actual Num Owners owners for int segment segment builder get Num Segments segment List Address owners builder get Owners segment int max Distinct Locations topology Info get Distinct Locations Count level builder get Actual Num Owners Topology Info owners Info new Topology Info owners builder get Capacity Factors int distinct Locations owners Info get Distinct Locations Count level builder get Actual Num Owners if distinct Locations max Distinct Locations continue float total Capacity topology Info compute Total Capacity builder get Members builder get Capacity Factors for int i owners size i i Address owner owners get i if location Is Duplicate owners owner level Got a duplicate site rack machine we might have an alternative for it for Address candidate builder get Members int expected Segments topology Info compute Expected Segments builder get Num Segments builder get Actual Num Owners candidate int node Extra Segments int extra Segments builder get Capacity Factor candidate total Capacity if builder get Owned candidate expected Segments node Extra Segments if owners contains candidate location Is Duplicate owners candidate level builder add Owner segment candidate builder remove Owner segment owner distinct Locations The owners list is live no need to query it again break if distinct Locations max Distinct Locations sufficient Locations false return sufficient Locations private void replace Backup Owner No Level Builder builder Topology Info topology Info If there is an owner with owned owner max Segments find another node with owned node max Segments and replace that owner with it do Replace Backup Owners No Level builder topology Info Same as step but also replace owners that own max Segments segments Doing this in a separate iteration minimizes the number of moves from nodes with owned node max Segments when num Owners num Segments does n t divide evenly with num Nodes do Replace Backup Owners No Level builder topology Info Same as step but allow replacing with nodes that already have owned node max Segments Necessary when num Owners num Segments does n t divide evenly with num Nodes because all nodes could own max Segments segments and yet one node could own max Segments num Owners num Segments num Nodes segments do Replace Backup Owners No Level builder topology Info private void do Replace Backup Owners No Level Builder builder Topology Info topology Info int min Segments Diff int max Segments Diff Iterate over the owners in the outer loop so that we minimize the number of owner changes for the same segment At this point each segment already has actual Num Owners owners for int owner Idx builder get Actual Num Owners owner Idx owner Idx for int segment segment builder get Num Segments segment List Address owners builder get Owners segment Address owner owners get owner Idx int max Segments topology Info compute Expected Segments builder get Num Segments builder get Actual Num Owners owner max Segments Diff if builder get Owned owner max Segments Owner has too many segments Find another node to replace it with for Address candidate builder get Members int min Segments topology Info compute Expected Segments builder get Num Segments builder get Actual Num Owners candidate min Segments Diff if builder get Owned candidate min Segments if owners contains candidate maintains Diversity owners candidate owner builder add Owner segment candidate builder remove Owner segment owner The owners list is live no need to query it again break private Object get Location Id Address address Topology Level level Topology Aware Address taa Topology Aware Address address Object location Id switch level case location Id taa get Site Id break case location Id taa get Site Id taa get Rack Id break case location Id taa get Site Id taa get Rack Id taa get Machine Id break case location Id address break default throw new Illegal State Exception Unknown level level return location Id private boolean location Is Duplicate List Address addresses Address target Topology Level level Object target Location Id get Location Id target level for Address address addresses if address target get Location Id address level equals target Location Id return true return false private boolean maintains Diversity List Address owners Address candidate Address replaced return maintains Diversity owners candidate replaced Topology Level maintains Diversity owners candidate replaced Topology Level maintains Diversity owners candidate replaced Topology Level private boolean maintains Diversity List Address owners Address candidate Address replaced Topology Level machine Set Object old Machines new Hash Set Object owners size Set Object new Machines new Hash Set Object owners size new Machines add get Location Id candidate machine for Address node owners old Machines add get Location Id node machine if node equals replaced new Machines add get Location Id node machine return new Machines size old Machines size public static class Externalizer extends Abstract Externalizer Topology Aware Consistent Hash Factory Override public void write Object Object Output output Topology Aware Consistent Hash Factory chf Override Suppress Warnings unchecked public Topology Aware Consistent Hash Factory read Object Object Input unmarshaller return new Topology Aware Consistent Hash Factory Override public Integer get Id return Ids Override public Set Class extends Topology Aware Consistent Hash Factory get Type Classes return Collections Class extends Topology Aware Consistent Hash Factory singleton Topology Aware Consistent Hash Factory class 
package org infinispan distribution ch impl import java io Object Input import java io Object Output import java util Collections import java util List import java util Map import java util Set import org infinispan commons hash Hash import org infinispan commons marshall Abstract Externalizer import org infinispan distribution topologyaware Topology Info import org infinispan distribution topologyaware Topology Level import org infinispan marshall core Ids import org infinispan remoting transport Address import org infinispan remoting transport Topology Aware Address link org infinispan distribution ch Consistent Hash Factory implementation that guarantees caches with the same members have the same consistent hash and also tries to distribute segments based on the topology information in link org infinispan configuration global Transport Configuration p It has a drawback compared to link org infinispan distribution ch impl Default Consistent Hash Factory it can potentially move a lot more segments during a rebalance than strictly necessary p It is not recommended using the code Topology Aware Sync Consistent Hash Factory with a very small number of segments The distribution of segments to owners gets better with a higher number of segments and is especially bad when code num Segments lt num Nodes author Dan Berindei since public class Topology Aware Sync Consistent Hash Factory extends Sync Consistent Hash Factory Override protected Builder create Builder Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors return new Builder hash Function num Owners num Segments members capacity Factors protected static class Builder extends Sync Consistent Hash Factory Builder protected final Topology Info topology Info protected Topology Level current Level Topology Level protected Builder Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors super hash Function num Owners num Segments members capacity Factors topology Info new Topology Info members capacity Factors Override protected void copy Owners copy Owners For Level Topology Level copy Owners For Level Topology Level copy Owners For Level Topology Level copy Owners For Level Topology Level private void copy Owners For Level Topology Level topology Level current Level topology Level ignore Max Segments false super do Copy Owners ignore Max Segments true super do Copy Owners Override protected boolean add Backup Owner int segment Address candidate List Address owners segment Owners segment if owners size actual Num Owners location Already Added candidate owners current Level if ignore Max Segments if owners is Empty long max Segments Math round compute Expected Segments For Node candidate if stats get Primary Owned candidate max Segments add Owner No Check segment candidate return true else long max Segments Math round compute Expected Segments For Node candidate actual Num Owners if stats get Owned candidate max Segments add Owner No Check segment candidate return true else if capacity Factors get candidate equals f add Owner No Check segment candidate return true return false Override protected boolean can Add Owners List Address owners return owners size topology Info get Distinct Locations Count current Level actual Num Owners Override protected double compute Expected Segments For Node Address node int num Copies return topology Info compute Expected Segments num Segments num Copies node private boolean location Already Added Address candidate List Address owners Topology Level level Topology Aware Address topology Aware Candidate Topology Aware Address candidate boolean location Already Added false for Address owner owners Topology Aware Address topology Aware Owner Topology Aware Address owner switch level case location Already Added topology Aware Candidate is Same Site topology Aware Owner break case location Already Added topology Aware Candidate is Same Rack topology Aware Owner break case location Already Added topology Aware Candidate is Same Machine topology Aware Owner break case location Already Added owner equals candidate if location Already Added break return location Already Added public static class Externalizer extends Abstract Externalizer Topology Aware Sync Consistent Hash Factory Override public void write Object Object Output output Topology Aware Sync Consistent Hash Factory chf Override Suppress Warnings unchecked public Topology Aware Sync Consistent Hash Factory read Object Object Input unmarshaller return new Topology Aware Sync Consistent Hash Factory Override public Integer get Id return Ids Override public Set Class extends Topology Aware Sync Consistent Hash Factory get Type Classes return Collections Class extends Topology Aware Sync Consistent Hash Factory singleton Topology Aware Sync Consistent Hash Factory class 
package org infinispan transaction totalorder import java util Array List import java util Collection import java util Collections import java util List import java util concurrent Concurrent Map import java util concurrent atomic Atomic Reference import org infinispan commons util Collection Factory import org infinispan factories Known Component Names import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan transaction impl Total Order Remote Transaction State import org infinispan util concurrent Blocking Task Aware Executor Service import org infinispan util logging Log import org infinispan util logging Log Factory This class behaves as a synchronization point between incoming transactions totally ordered and between incoming transactions and state transfer p Main functions ul li ensure an order between prepares before sending them to the thread pool i e non conflicting prepares can be processed concurrently li li ensure that the state transfer waits for the previous delivered prepares li li ensure that the prepare waits for state transfer in progress li ul author Pedro Ruivo since public class Total Order Manager private static final Log log Log Factory get Log Total Order Manager class private static final boolean trace log is Trace Enabled this map is used to keep track of concurrent transactions private final Concurrent Map Object Total Order Latch keys Locked private final Atomic Reference Total Order Latch state Transfer In Progress private Blocking Task Aware Executor Service total Order Executor public Total Order Manager keys Locked Collection Factory make Concurrent Map state Transfer In Progress new Atomic Reference null Inject public void inject Component Name Known Component Names Blocking Task Aware Executor Service total Order Executor this total Order Executor total Order Executor It ensures the validation order for the transaction corresponding to the prepare command This allow the prepare command to be moved to a thread pool param state the total order prepare state public final void ensure Order Total Order Remote Transaction State state Collection keys Modified throws Interrupted Exception the retries due to state transfer re uses the same state we need that the keys previous locked to be release in order to insert it again in the keys locked this method does not need to be synchronized because it is invoked by a one thread at the time namely the thread that is delivering the messages in total order state await Until Reset Total Order Latch transaction Synchronized Block new Total Order Latch Impl state get Global Transaction global Id state set Transaction Synchronized Block transaction Synchronized Block this will collect all the count down latch corresponding to the previous transactions in the queue for Object key keys Modified Total Order Latch prev Tx keys Locked put key transaction Synchronized Block if prev Tx null state add Synchronized Block prev Tx state add Locked Key key Total Order Latch state Transfer state Transfer In Progress get if state Transfer null state add Synchronized Block state Transfer if trace log tracef Transaction s will wait for s and locked s state get Global Transaction global Id state get Conflicting Transaction Blocks state get Locked Keys null Clear Command state get Locked Keys Release the locked key possibly unblock waiting prepares param state the state public final void release Total Order Remote Transaction State state Total Order Latch synchronized Block state get Transaction Synchronized Block if synchronized Block null already released return Collection Object locked Keys state get Locked Keys synchronized Block un Block for Object key locked Keys keys Locked remove key synchronized Block if trace log tracef Release s and locked keys s Checking pending tasks synchronized Block locked Keys state reset It notifies that a state transfer is about to start param topology Id the new topology return the current pending prepares public final Collection Total Order Latch notify State Transfer Start int topology Id boolean is Rebalance if state Transfer In Progress get null return Collections empty List List Total Order Latch preparing Transactions new Array List keys Locked size preparing Transactions add All keys Locked values if is Rebalance state Transfer In Progress set new Total Order Latch Impl State Transfer topology Id if trace log tracef State Transfer start It will wait for s preparing Transactions return preparing Transactions It notifies the end of the state transfer possibly unblock waiting prepares public final void notify State Transfer End Total Order Latch block state Transfer In Progress get And Set null if block null block un Block if trace log tracef State Transfer finish It will release s block total Order Executor check For Ready Tasks public final boolean has Any Lock Acquired return keys Locked is Empty 
package org infinispan configuration cache import java util concurrent Time Unit import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set import org infinispan commons configuration attributes Identity Attribute Copier import org infinispan transaction Locking Mode import org infinispan transaction Transaction Mode import org infinispan transaction Transaction Protocol import org infinispan transaction lookup Generic Transaction Manager Lookup import org infinispan transaction lookup Transaction Manager Lookup import org infinispan transaction lookup Transaction Synchronization Registry Lookup Defines transactional characteristics of the cache author pmuir author Pedro Ruivo public class Transaction Configuration public static final Attribute Definition Boolean Attribute Definition builder auto commit true immutable build public static final Attribute Definition Long Attribute Definition builder stop timeout Time Unit to Millis build public static final Attribute Definition Locking Mode Attribute Definition builder locking Locking Mode build public static final Attribute Definition Transaction Manager Lookup Attribute Definition Transaction Manager Lookup builder transaction manager lookup Generic Transaction Manager Lookup copier Identity Attribute Copier auto Persist false build public static final Attribute Definition Transaction Synchronization Registry Lookup Attribute Definition builder transaction synchronization registry lookup null Transaction Synchronization Registry Lookup class copier Identity Attribute Copier auto Persist false build public static final Attribute Definition Transaction Mode Attribute Definition builder mode Transaction Mode immutable auto Persist false build public static final Attribute Definition Boolean Attribute Definition builder synchronization false immutable auto Persist false build public static final Attribute Definition Boolean Attribute Definition builder single phase auto commit false build public static final Attribute Definition Long Attribute Definition builder reaper wake up interval immutable xml Name reaper interval build public static final Attribute Definition Long Attribute Definition builder complete timeout immutable build public static final Attribute Definition Transaction Protocol Attribute Definition builder transaction protocol Transaction Protocol immutable xml Name protocol build public static final Attribute Definition Boolean Attribute Definition builder notifications true immutable build static Attribute Set attribute Definition Set return new Attribute Set Transaction Configuration class private final Attribute Boolean auto Commit private final Attribute Long cache Stop Timeout private final Attribute Locking Mode locking Mode private final Attribute Transaction Manager Lookup transaction Manager Lookup private final Attribute Transaction Synchronization Registry Lookup transaction Synchronization Registry Lookup private final Attribute Transaction Mode transaction Mode private final Attribute Boolean use Synchronization private final Attribute Boolean use Pc For Auto Commit Transactions private final Attribute Long reaper Wake Up Interval private final Attribute Long completed Tx Timeout private final Attribute Transaction Protocol transaction Protocol private final Attribute Boolean notifications private final Attribute Set attributes private final Recovery Configuration recovery Transaction Configuration Attribute Set attributes Recovery Configuration recovery this attributes attributes check Protection auto Commit attributes attribute cache Stop Timeout attributes attribute locking Mode attributes attribute transaction Manager Lookup attributes attribute transaction Synchronization Registry Lookup attributes attribute transaction Mode attributes attribute use Synchronization attributes attribute use Pc For Auto Commit Transactions attributes attribute reaper Wake Up Interval attributes attribute completed Tx Timeout attributes attribute transaction Protocol attributes attribute notifications attributes attribute this recovery recovery If the cache is transactional i e link transaction Mode Transaction Mode and transaction Auto Commit is enabled then for single operation transactions the user does n t need to manually start a transaction but a transactions is injected by the system Defaults to true public boolean auto Commit return auto Commit get If there are any ongoing transactions when a cache is stopped Infinispan waits for ongoing remote and local transactions to finish The amount of time to wait for is defined by the cache stop timeout It is recommended that this value does not exceed the transaction timeout because even if a new transaction was started just before the cache was stopped this could only last as long as the transaction timeout allows it public Transaction Configuration cache Stop Timeout long l cache Stop Timeout set l return this If there are any ongoing transactions when a cache is stopped Infinispan waits for ongoing remote and local transactions to finish The amount of time to wait for is defined by the cache stop timeout It is recommended that this value does not exceed the transaction timeout because even if a new transaction was started just before the cache was stopped this could only last as long as the transaction timeout allows it public long cache Stop Timeout return cache Stop Timeout get Configures whether the cache uses optimistic or pessimistic locking If the cache is not transactional then the locking mode is ignored see Transaction Configuration transaction Mode public Locking Mode locking Mode return locking Mode get Configures whether the cache uses optimistic or pessimistic locking If the cache is not transactional then the locking mode is ignored see Transaction Configuration transaction Mode public Transaction Configuration locking Mode Locking Mode locking Mode this locking Mode set locking Mode return this If true the cluster wide commit phase in two phase commit transactions will be synchronous so Infinispan will wait for responses from all nodes to which the commit was sent Otherwise the commit phase will be asynchronous Keeping it as false improves performance of transactions but it can lead to inconsistencies when the primary owner releases the lock before the backup commits the change deprecated since no longer supported Deprecated public boolean sync Commit Phase return true If true the cluster wide commit phase in two phase commit transactions will be synchronous so Infinispan will wait for responses from all nodes to which the commit was sent Otherwise the commit phase will be asynchronous Keeping it as false improves performance of transactions but it can lead to inconsistencies when the primary owner releases the lock before the backup commits the change deprecated The sync Rollback Phase setting can no longer be modified at runtime It must be the same on all nodes Deprecated public Transaction Configuration sync Commit Phase boolean b return this If true the cluster wide rollback phase in two phase commit transactions will be synchronous so Infinispan will wait for responses from all nodes to which the rollback was sent Otherwise the rollback phase will be asynchronous Keeping it as false improves performance of transactions deprecated since no longer supported Deprecated public boolean sync Rollback Phase return true If true the cluster wide rollback phase in two phase commit transactions will be synchronous so Infinispan will wait for responses from all nodes to which the rollback was sent deprecated The sync Rollback Phase setting can no longer be modified at runtime It must be the same on all nodes Deprecated public Transaction Configuration sync Rollback Phase boolean b return this Configure Transaction manager lookup directly using an instance of Transaction Manager Lookup Calling this method marks the cache as transactional public Transaction Manager Lookup transaction Manager Lookup return transaction Manager Lookup get deprecated since The transaction manager is only looked up once during cache startup Deprecated public Transaction Configuration transaction Manager Lookup Transaction Manager Lookup transaction Manager Lookup this transaction Manager Lookup set transaction Manager Lookup return this Configure Transaction Synchronization Registry lookup directly using an instance of Transaction Manager Lookup Calling this method marks the cache as transactional public Transaction Synchronization Registry Lookup transaction Synchronization Registry Lookup return transaction Synchronization Registry Lookup get public Transaction Mode transaction Mode return transaction Mode get public boolean use Synchronization return use Synchronization get This method allows configuration of the transaction recovery cache When this method is called it automatically enables recovery So if you want it to be disabled make sure you call link Recovery Configuration Builder enabled boolean with false as parameter public Recovery Configuration recovery return recovery see Transaction Configuration Builder reaper Wake Up Interval long public long reaper Wake Up Interval return reaper Wake Up Interval get see Transaction Configuration Builder completed Tx Timeout long public long completed Tx Timeout return completed Tx Timeout get Before Infinispan you could access the cache both transactionally and non transactionally Naturally the non transactional access is faster and offers less consistency guarantees From Infinispan onwards mixed access is no longer supported so if you wan na speed up transactional caches and you re ready to trade some consistency guarantees you can enable use Pc For Auto Commit Transactions p What this configuration option does is force an induced transaction that has been started by Infinispan as a result of enabling auto Commit to commit in a single phase So only instead of Cs as in the case of a full Phase Commit p b b this option should be used when modifying the same key from multiple transactions as does not offer any consistency guarantees under concurrent access public boolean use Pc For Auto Commit Transactions return use Pc For Auto Commit Transactions get return the transaction protocol in use or Total Order public Transaction Protocol transaction Protocol return transaction Protocol get return are transactional notifications link org infinispan notifications cachelistener annotation Transaction Registered and link org infinispan notifications cachelistener annotation Transaction Completed triggered public boolean notifications return notifications get public Attribute Set attributes return attributes Override public String to String return Transaction Configuration attributes attributes recovery recovery Override public boolean equals Object obj if this obj return true if obj null return false if get Class obj get Class return false Transaction Configuration other Transaction Configuration obj if attributes null if other attributes null return false else if attributes equals other attributes return false if recovery null if other recovery null return false else if recovery equals other recovery return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code result prime result recovery null recovery hash Code return result 
package org infinispan configuration cache import static org infinispan configuration cache Transaction Configuration import static org infinispan configuration cache Transaction Configuration import static org infinispan configuration cache Transaction Configuration import static org infinispan configuration cache Transaction Configuration import static org infinispan configuration cache Transaction Configuration import static org infinispan configuration cache Transaction Configuration import static org infinispan configuration cache Transaction Configuration import static org infinispan configuration cache Transaction Configuration import static org infinispan configuration cache Transaction Configuration import static org infinispan configuration cache Transaction Configuration import static org infinispan configuration cache Transaction Configuration import static org infinispan configuration cache Transaction Configuration import java lang invoke Method Handles import java util concurrent Time Unit import javax transaction Synchronization import javax transaction Transaction Manager import javax transaction xa Resource import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration import org infinispan transaction Locking Mode import org infinispan transaction Transaction Mode import org infinispan transaction Transaction Protocol import org infinispan transaction lookup Transaction Manager Lookup import org infinispan transaction lookup Transaction Synchronization Registry Lookup import org infinispan util logging Log import org infinispan util logging Log Factory Defines transactional characteristics of the cache author pmuir author Pedro Ruivo public class Transaction Configuration Builder extends Abstract Configuration Child Builder implements Builder Transaction Configuration private static final Log log Log Factory get Log Method Handles lookup lookup Class private final Attribute Set attributes private final Recovery Configuration Builder recovery Transaction Configuration Builder Configuration Builder builder super builder attributes Transaction Configuration attribute Definition Set this recovery new Recovery Configuration Builder this If the cache is transactional i e link transaction Mode org infinispan transaction Transaction Mode Transaction Mode and transaction Auto Commit is enabled then for single operation transactions the user does n t need to manually start a transaction but a transactions is injected by the system Defaults to true public Transaction Configuration Builder auto Commit boolean b attributes attribute set b return this If there are any ongoing transactions when a cache is stopped Infinispan waits for ongoing remote and local transactions to finish The amount of time to wait for is defined by the cache stop timeout It is recommended that this value does not exceed the transaction timeout because even if a new transaction was started just before the cache was stopped this could only last as long as the transaction timeout allows it p This configuration property may be adjusted at runtime public Transaction Configuration Builder cache Stop Timeout long l attributes attribute set l return this If there are any ongoing transactions when a cache is stopped Infinispan waits for ongoing remote and local transactions to finish The amount of time to wait for is defined by the cache stop timeout It is recommended that this value does not exceed the transaction timeout because even if a new transaction was started just before the cache was stopped this could only last as long as the transaction timeout allows it p This configuration property may be adjusted at runtime public Transaction Configuration Builder cache Stop Timeout long l Time Unit unit return cache Stop Timeout unit to Millis l Configures whether the cache uses optimistic or pessimistic locking If the cache is not transactional then the locking mode is ignored see org infinispan configuration cache Transaction Configuration transaction Mode public Transaction Configuration Builder locking Mode Locking Mode locking Mode attributes attribute set locking Mode return this Locking Mode locking Mode return attributes attribute get If true the cluster wide commit phase in two phase commit transactions will be synchronous so Infinispan will wait for responses from all nodes to which the commit was sent Otherwise the commit phase will be asynchronous Keeping it as false improves performance of transactions but it can lead to inconsistencies when a backup owner only commits the transaction after the primary owner released the lock deprecated since no longer supported Deprecated public Transaction Configuration Builder sync Commit Phase boolean b return this See link sync Commit Phase boolean return code true if sync commit phase is enabled deprecated since no longer supported Deprecated boolean sync Commit Phase return true If true the cluster wide rollback phase in two phase commit transactions will be synchronous so Infinispan will wait for responses from all nodes to which the rollback was sent Otherwise the rollback phase will be asynchronous Keeping it as false can lead to inconsistencies when a transaction is rolled back because of a commit timeout as a backup owner could commit the transaction after the primary released the lock deprecated since no longer supported Deprecated public Transaction Configuration Builder sync Rollback Phase boolean b return this Configure Transaction manager lookup directly using an instance of Transaction Manager Lookup Calling this method marks the cache as transactional public Transaction Configuration Builder transaction Manager Lookup Transaction Manager Lookup tml attributes attribute set tml if tml null this transaction Mode Transaction Mode return this public Transaction Manager Lookup transaction Manager Lookup return attributes attribute get Configure Transaction Synchronization Registry lookup directly using an instance of Transaction Manager Lookup Calling this method marks the cache as transactional public Transaction Configuration Builder transaction Synchronization Registry Lookup Transaction Synchronization Registry Lookup lookup attributes attribute set lookup return this public Transaction Configuration Builder transaction Mode Transaction Mode transaction Mode attributes attribute set transaction Mode return this public Transaction Mode transaction Mode if attributes attribute is Modified return attributes attribute get else return null Configures whether the cache registers a synchronization with the transaction manager or registers itself as an resource It is often unnecessary to register as a full resource unless you intend to make use of recovery as well and registering a synchronization is significantly more efficient param b if true link Synchronization s are used rather than link Resource s when communicating with a link Transaction Manager public Transaction Configuration Builder use Synchronization boolean b attributes attribute set b return this See link use Synchronization boolean return code true if synchronization enlistment is enabled boolean use Synchronization return attributes attribute get This method allows configuration of the transaction recovery cache When this method is called it automatically enables recovery So if you want it to be disabled make sure you call link Recovery Configuration Builder disable public Recovery Configuration Builder recovery return recovery Before Infinispan you could access the cache both transactionally and non transactionally Naturally the non transactional access is faster and offers less consistency guarantees From Infinispan onwards mixed access is no longer supported so if you wan na speed up transactional caches and you re ready to trade some consistency guarantees you can enable use Pc For Auto Commit Transactions p What this configuration option does is force an induced transaction that has been started by Infinispan as a result of enabling auto Commit to commit in a single phase So only instead of Cs as in the case of a full Phase Commit public Transaction Configuration Builder use Pc For Auto Commit Transactions boolean b attributes attribute set b return this The time interval millis at which the thread that cleans up transaction completion information kicks in Defaults to public Transaction Configuration Builder reaper Wake Up Interval long interval attributes attribute set interval return this The duration millis in which to keep information about the completion of a transaction Defaults to public Transaction Configuration Builder completed Tx Timeout long timeout attributes attribute set timeout return this public Transaction Configuration Builder transaction Protocol Transaction Protocol transaction Protocol attributes attribute set transaction Protocol return this See link transaction Protocol Transaction Protocol return the current configured link Transaction Protocol public Transaction Protocol transaction Protocol return attributes attribute get return are transactional notifications link org infinispan notifications cachelistener annotation Transaction Registered and link org infinispan notifications cachelistener annotation Transaction Completed triggered public Transaction Configuration Builder notifications boolean enabled attributes attribute set enabled return this Override public void validate Attribute Long reaper Wake Up Interval attributes attribute Attribute Long completed Tx Timeout attributes attribute if reaper Wake Up Interval get throw log invalid Reaper Wake Up Interval reaper Wake Up Interval get if completed Tx Timeout get throw log invalid Completed Tx Timeout completed Tx Timeout get Cache Mode cache Mode clustering cache Mode if attributes attribute get Transaction Protocol total order only supports transactional caches if transaction Mode Transaction Mode throw log invalid Tx Mode For Total Order transaction Mode total order only supports replicated and distributed mode if cache Mode is Replicated cache Mode is Distributed throw log invalid Cache Mode For Total Order clustering cache Mode friendly Cache Mode String if locking Mode Locking Mode throw log invalid Locking Mode For Total Order locking Mode if attributes attribute get get Builder template log transaction Notifications Disabled if attributes attribute get Transaction Mode cache Mode is Synchronous throw log unsupported Async Cache Mode cache Mode recovery validate Override public void validate Global Configuration global Config recovery validate global Config Override public Transaction Configuration create if transaction Mode null get Builder invocation Batching is Enabled transaction Mode Transaction Mode else if transaction Mode null transaction Mode Transaction Mode return new Transaction Configuration attributes protect recovery create Override public Transaction Configuration Builder read Transaction Configuration template this attributes read template attributes this recovery read template recovery return this Override public String to String return Transaction Configuration Builder attributes attributes recovery recovery 
package org infinispan transaction impl import static javax transaction xa Resource import static javax transaction xa Resource import java util List import javax transaction Transaction import javax transaction xa Exception import org infinispan commands Commands Factory import org infinispan commands tx Commit Command import org infinispan commands tx Prepare Command import org infinispan commands tx Rollback Command import org infinispan commands write Write Command import org infinispan configuration cache Configuration import org infinispan configuration cache Configurations import org infinispan context Invocation Context Factory import org infinispan context impl Local Tx Invocation Context import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan factories annotations Stop import org infinispan interceptors Interceptor Chain import org infinispan transaction xa Global Transaction import org infinispan transaction xa recovery Recovery Manager import org infinispan util logging Log import org infinispan util logging Log Factory Coordinates transaction prepare commits as received from the link javax transaction Transaction Manager Integrates with the through either link org infinispan transaction xa Transaction Xa Adapter or through link org infinispan transaction synchronization Synchronization Adapter author Mircea Markus jboss com author Pedro Ruivo since public class Transaction Coordinator private static final Log log Log Factory get Log Transaction Coordinator class private static final boolean trace log is Trace Enabled private Commands Factory commands Factory private Invocation Context Factory icf private Interceptor Chain invoker private Transaction Table tx Table private Recovery Manager recovery Manager private Configuration configuration private Command Creator command Creator private volatile boolean shutting Down false private boolean total Order private boolean default One Phase Commit private boolean use Pc For Auto Commit Transactions Inject public void init Commands Factory commands Factory Invocation Context Factory icf Interceptor Chain invoker Transaction Table tx Table Recovery Manager recovery Manager Configuration configuration this commands Factory commands Factory this icf icf this invoker invoker this tx Table tx Table this recovery Manager recovery Manager this configuration configuration use Pc For Auto Commit Transactions configuration transaction use Pc For Auto Commit Transactions total Order configuration transaction transaction Protocol is Total Order default One Phase Commit Configurations is One Phase Commit configuration Configurations is One Phase Total Order Commit configuration Start priority private void set Start Status shutting Down false Stop priority private void set Stop Status shutting Down true Start public void start if Configurations is Tx Versioned configuration We need to create versioned variants of Prepare Command and Commit Command command Creator new Command Creator Override public Commit Command create Commit Command Global Transaction gtx return commands Factory build Versioned Commit Command gtx Override public Prepare Command create Prepare Command Global Transaction gtx List Write Command modifications boolean one Phase Commit return commands Factory build Versioned Prepare Command gtx modifications one Phase Commit else command Creator new Command Creator Override public Commit Command create Commit Command Global Transaction gtx return commands Factory build Commit Command gtx Override public Prepare Command create Prepare Command Global Transaction gtx List Write Command modifications boolean one Phase Commit return commands Factory build Prepare Command gtx modifications one Phase Commit public final int prepare Local Transaction local Transaction throws Exception return prepare local Transaction false public final int prepare Local Transaction local Transaction boolean replay Entry Wrapping throws Exception validate Not Marked For Rollback local Transaction if is One Phase Commit local Transaction if trace log tracef Received prepare for tx s Skipping call as will be used local Transaction return Prepare Command prepare Command command Creator create Prepare Command local Transaction get Global Transaction local Transaction get Modifications false if trace log tracef Sending prepare command through the chain s prepare Command Local Tx Invocation Context ctx icf create Tx Invocation Context local Transaction prepare Command set Replay Entry Wrapping replay Entry Wrapping try invoker invoke ctx prepare Command if local Transaction is Read Only if trace log tracef Readonly transaction s local Transaction get Global Transaction force a cleanup to release any objects held Some Ms do n t call commit if it is a tx See commit Internal ctx return else tx Table local Transaction Prepared local Transaction return catch Throwable e if shutting Down log trace Exception while preparing back probably because we re shutting down else log error Processing Prepare e rollback transaction before throwing the exception as there s no guarantee the calls Resource rollback after prepare failed rollback local Transaction tells the that we ve rolled back already the should n t call rollback after this Exception xe new Exception Exception xe init Cause e throw xe public boolean commit Local Transaction local Transaction boolean is One Phase throws Exception if trace log tracef Committing transaction s local Transaction get Global Transaction Local Tx Invocation Context ctx icf create Tx Invocation Context local Transaction if is One Phase Commit local Transaction is One Phase validate Not Marked For Rollback local Transaction if trace log trace Doing an prepare call on the interceptor chain List Write Command modifications local Transaction get Modifications Prepare Command command command Creator create Prepare Command local Transaction get Global Transaction modifications true try invoker invoke ctx command catch Throwable e handle Commit Failure e true ctx return true else if local Transaction is Read Only commit Internal ctx return false public void rollback Local Transaction local Transaction throws Exception try rollback Internal icf create Tx Invocation Context local Transaction catch Throwable e if shutting Down log trace Exception while rolling back probably because we re shutting down else log error Rolling Back e final Transaction transaction local Transaction get Transaction this might be possible if the cache has stopped and still holds a reference to the Resource if transaction null tx Table failure Completing Transaction transaction Exception xe new Exception Exception xe init Cause e throw xe private void handle Commit Failure Throwable e boolean one Phase Commit Local Tx Invocation Context ctx throws Exception if trace log tracef Could n t commit transaction s trying to rollback ctx get Cache Transaction if one Phase Commit log error Processing pc Prepare Command e else log error Processing pc Commit Command e try boolean is Recovery Enabled recovery Manager null boolean is Total Order one Phase Commit total Order if is Recovery Enabled is Total Order we can not send the rollback in Total Order because it will create a new remote transaction the rollback is not needed any way because if one node aborts the transaction then all the nodes will abort too rollback Internal ctx catch Throwable e log could Not Rollback Prepared Pc Transaction ctx get Cache Transaction e inform the that a resource manager error has occurred in the transaction branch Exception xe new Exception Exception xe init Cause e throw xe finally tx Table failure Completing Transaction ctx get Transaction Exception xe new Exception Exception xe init Cause e throw xe this is a heuristic rollback private void commit Internal Local Tx Invocation Context ctx throws Exception Commit Command commit Command command Creator create Commit Command ctx get Global Transaction try invoker invoke ctx commit Command tx Table remove Local Transaction ctx get Cache Transaction catch Throwable e handle Commit Failure e false ctx private void rollback Internal Local Tx Invocation Context ctx throws Throwable if trace log tracef rollback transaction s ctx get Global Transaction Rollback Command rollback Command commands Factory build Rollback Command ctx get Global Transaction invoker invoke ctx rollback Command tx Table remove Local Transaction ctx get Cache Transaction private void validate Not Marked For Rollback Local Transaction local Transaction throws Exception if local Transaction is Marked For Rollback if trace log tracef Transaction already marked for rollback Forcing rollback for s local Transaction rollback local Transaction throw new Exception Exception public boolean is Pc For Auto Commit Transaction Local Transaction local Transaction return use Pc For Auto Commit Transactions local Transaction is Implicit Transaction private interface Command Creator Commit Command create Commit Command Global Transaction gtx Prepare Command create Prepare Command Global Transaction gtx List Write Command modifications boolean one Phase Commit private boolean is One Phase Commit Local Transaction local Transaction return default One Phase Commit is Pc For Auto Commit Transaction local Transaction 
package org infinispan transaction xa import java util Random import javax transaction Transaction import org infinispan commands write Write Command import org infinispan configuration cache Configuration import org infinispan container versioning Numeric Version import org infinispan container versioning Version Generator import org infinispan factories Known Component Names import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan remoting transport Address import org infinispan transaction impl Local Transaction import org infinispan transaction impl Remote Transaction import org infinispan transaction synchronization Sync Local Transaction import org infinispan transaction xa recovery Recovery Aware Dld Global Transaction import org infinispan transaction xa recovery Recovery Aware Global Transaction import org infinispan transaction xa recovery Recovery Aware Local Transaction import org infinispan transaction xa recovery Recovery Aware Remote Transaction import org infinispan util Time Service import org infinispan util logging Log import org infinispan util logging Log Factory Factory for transaction related sate author Mircea Markus jboss com public class Transaction Factory private static final Log log Log Factory get Log Transaction Factory class private Tx Factory Enum tx Factory Enum private Configuration configuration private Version Generator cluster Id Generator private Time Service time Service private boolean is Clustered public enum Tx Factory Enum Deprecated Override public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time return new Recovery Aware Local Transaction tx gtx implicit Transaction topology Id tx Creation Time Override public Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered Recovery Aware Dld Global Transaction dld Global Transaction new Recovery Aware Dld Global Transaction addr remote Not ideal but causes no issues so far Could the internal id be an Object instead of a long dld Global Transaction set Internal Id Numeric Version cluster Id Generator generate New get Version return add Coin Toss dld Global Transaction Override public Global Transaction new Global Transaction return new Recovery Aware Dld Global Transaction Override public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time return new Recovery Aware Remote Transaction modifications tx topology Id tx Creation Time Override public Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time return new Recovery Aware Remote Transaction tx topology Id tx Creation Time Deprecated Override public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time return new Local Xa Transaction tx gtx implicit Transaction topology Id tx Creation Time Override public Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered return add Coin Toss new Dld Global Transaction addr remote Override public Global Transaction new Global Transaction return new Dld Global Transaction Override public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction modifications tx topology Id tx Creation Time Override public Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction tx topology Id tx Creation Time Deprecated Override public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time return new Sync Local Transaction tx gtx implicit Transaction topology Id tx Creation Time Override public Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered return add Coin Toss new Dld Global Transaction addr remote Override public Global Transaction new Global Transaction return new Dld Global Transaction Override public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction modifications tx topology Id tx Creation Time Override public Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction tx topology Id tx Creation Time Override public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time return new Recovery Aware Local Transaction tx gtx implicit Transaction topology Id tx Creation Time Override public Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered Recovery Aware Global Transaction recovery Aware Global Transaction new Recovery Aware Global Transaction addr remote Not ideal but causes no issues so far Could the internal id be an Object instead of a long recovery Aware Global Transaction set Internal Id Numeric Version cluster Id Generator generate New get Version return recovery Aware Global Transaction Override public Global Transaction new Global Transaction return new Recovery Aware Global Transaction Override public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time return new Recovery Aware Remote Transaction modifications tx topology Id tx Creation Time Override public Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time return new Recovery Aware Remote Transaction tx topology Id tx Creation Time Override public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time return new Local Xa Transaction tx gtx implicit Transaction topology Id tx Creation Time Override public Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered return new Global Transaction addr remote Override public Global Transaction new Global Transaction return new Global Transaction Override public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction modifications tx topology Id tx Creation Time Override public Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction tx topology Id tx Creation Time Override public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time return new Sync Local Transaction tx gtx implicit Transaction topology Id tx Creation Time Override public Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered return new Global Transaction addr remote Override public Global Transaction new Global Transaction return new Global Transaction Override public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction modifications tx topology Id tx Creation Time Override public Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction tx topology Id tx Creation Time public abstract Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time public abstract Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered public abstract Global Transaction new Global Transaction protected long generate Random Id return rnd next Long protected Global Transaction add Coin Toss Dld Global Transaction dld Global Transaction dld Global Transaction set Coin Toss generate Random Id return dld Global Transaction this class is internally synchronized so it can be shared between instances private final Random rnd new Random public abstract Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time public abstract Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time public Global Transaction new Global Transaction return tx Factory Enum new Global Transaction public Global Transaction new Global Transaction Address addr boolean remote return tx Factory Enum new Global Transaction addr remote this cluster Id Generator is Clustered public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id return tx Factory Enum new Local Transaction tx gtx implicit Transaction topology Id time Service time public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id return tx Factory Enum new Remote Transaction modifications tx topology Id time Service time public Remote Transaction new Remote Transaction Global Transaction tx int topology Id return tx Factory Enum new Remote Transaction tx topology Id time Service time Inject public void init Configuration configuration Component Name value Known Component Names Version Generator cluster Id Generator Time Service time Service this configuration configuration this cluster Id Generator cluster Id Generator this time Service time Service Start public void start boolean xa configuration transaction use Synchronization boolean recovery Enabled configuration transaction recovery enabled boolean batching Enabled configuration invocation Batching enabled init false recovery Enabled xa batching Enabled is Clustered configuration clustering cache Mode is Clustered public void init boolean dld Enabled boolean recovery Enabled boolean xa boolean batching Enabled if batching Enabled tx Factory Enum Tx Factory Enum else if recovery Enabled if xa tx Factory Enum Tx Factory Enum else using synchronisation enlistment tx Factory Enum Tx Factory Enum else if xa tx Factory Enum Tx Factory Enum else tx Factory Enum Tx Factory Enum log tracef Setting factory enum to s tx Factory Enum 
package org infinispan factories import javax transaction Transaction Manager import org infinispan commons Cache Exception import org infinispan factories annotations Default Factory For import org infinispan transaction lookup Transaction Manager Lookup import org infinispan transaction tm Batch Mode Transaction Manager import org infinispan util logging Log import org infinispan util logging Log Factory Uses a number of mechanisms to retrieve a transaction manager author Manik Surtani a href mailto manik jboss org manik jboss org a author Galder Zamarre o since Default Factory For classes Transaction Manager class public class Transaction Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory private static final Log log Log Factory get Log Transaction Manager Factory class Override public construct Class component Type if configuration transaction transaction Mode is Transactional return null See if we had a Transaction Manager injected into our config Transaction Manager transaction Manager null Transaction Manager Lookup lookup configuration transaction transaction Manager Lookup try if lookup null component Registry wire Dependencies lookup transaction Manager lookup get Transaction Manager catch Exception e log could Not Instantiate Transaction Manager e if transaction Manager null configuration invocation Batching enabled log using Batch Mode Transaction Manager transaction Manager Batch Mode Transaction Manager get Instance if transaction Manager null throw new Cache Exception This is transactional cache but no transaction manager could be found Configure the transaction manager lookup properly return component Type cast transaction Manager 
Boss Home of Professional Open Source Copyright Red Hat Inc and individual contributors as indicated by the author tags See the copyright txt file in the distribution for a full listing of individual contributors This is free software you can redistribute it and or modify it under the terms of the Lesser General Public License as published by the Free Software Foundation either version of the License or at your option any later version This software is distributed in the hope that it will be useful but without even the implied warranty of or See the Lesser General Public License for more details You should have received a copy of the Lesser General Public License along with this software if not write to the Free Software Foundation Inc Franklin St Fifth Floor Boston or see the site http www fsf org package org jboss as clustering infinispan subsystem author Paul Ferraro public enum Transaction Mode org infinispan transaction Transaction Mode false false org infinispan transaction Transaction Mode false false org infinispan transaction Transaction Mode true false org infinispan transaction Transaction Mode true true private final org infinispan transaction Transaction Mode mode private final boolean xa Enabled private final boolean recovery Enabled private Transaction Mode org infinispan transaction Transaction Mode mode boolean xa Enabled boolean recovery Enabled this mode mode this xa Enabled xa Enabled this recovery Enabled recovery Enabled public org infinispan transaction Transaction Mode get Mode return this mode public boolean is Enabled return this xa Enabled public boolean is Recovery Enabled return this recovery Enabled 
package org infinispan transaction import java util Collection import javax transaction Transaction import org infinispan transaction xa Global Transaction Interface that allows to fetch the link org infinispan transaction xa Global Transaction associated to local or remote transactions author Pedro Ruivo since public interface Transaction Table param transaction the local transaction Must be non null return the link org infinispan transaction xa Global Transaction associated with the transaction or code null if does n t exists Global Transaction get Global Transaction Transaction transaction return an unmodified collection of link org infinispan transaction xa Global Transaction associated with local running transactions Collection Global Transaction get Local Global Transaction return an unmodified collection of link org infinispan transaction xa Global Transaction associated with remote transactions Collection Global Transaction get Remote Global Transaction 
package org infinispan container entries import static org infinispan commons util Util to Str import java io Exception import java io Object Input import java io Object Output import java util Set import java util concurrent Time Unit import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan metadata Embedded Metadata import org infinispan metadata Metadata cache entry that is transient i e it can be considered expired after a period of not being used author Manik Surtani since public class Transient Cache Entry extends Abstract Internal Cache Entry protected Object value protected long max Idle protected long last Used public Transient Cache Entry Object key Object value long max Idle long last Used super key this value value this max Idle max Idle this last Used last Used Override public Object get Value return value Override public Object set Value Object value return this value value Override public final void touch touch System current Time Millis Override public final void touch long current Time Millis this last Used current Time Millis Override public final void reincarnate no op Override public void reincarnate long now no op Override public final boolean can Expire return true Override public boolean is Expired long now return Expiry Helper is Expired Transient max Idle last Used now Override public boolean is Expired return is Expired System current Time Millis public void set Max Idle long max Idle this max Idle max Idle Override public long get Created return Override public final long get Last Used return last Used Override public long get Lifespan return Override public long get Expiry Time return max Idle last Used max Idle Override public final long get Max Idle return max Idle Override public Internal Cache Value to Internal Cache Value return new Transient Cache Value value max Idle last Used Override public Metadata get Metadata return new Embedded Metadata Builder max Idle max Idle Time Unit build Override public void set Metadata Metadata metadata throw new Illegal State Exception Metadata can not be set on mortal entries They need to be recreated via the entry factory Override public Transient Cache Entry clone return Transient Cache Entry super clone public static class Externalizer extends Abstract Externalizer Transient Cache Entry Override public void write Object Object Output output Transient Cache Entry tce throws Exception output write Object tce key output write Object tce value Unsigned Numeric write Unsigned Long output tce last Used output write Long tce max Idle could be negative so should not use unsigned longs Override public Transient Cache Entry read Object Object Input input throws Exception Class Not Found Exception Object k input read Object Object v input read Object long last Used Unsigned Numeric read Unsigned Long input Long max Idle input read Long return new Transient Cache Entry k v max Idle last Used Override public Integer get Id return Ids Override public Set Class extends Transient Cache Entry get Type Classes return Util as Set Transient Cache Entry class Override public String to String return Transient Cache Entry key to Str key value to Str value 
package org infinispan container entries import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids transient cache value to correspond with link org infinispan container entries Transient Cache Entry author Manik Surtani since public class Transient Cache Value extends Immortal Cache Value protected long max Idle protected long last Used public Transient Cache Value Object value long max Idle long last Used super value this max Idle max Idle this last Used last Used Override public long get Max Idle return max Idle public void set Max Idle long max Idle this max Idle max Idle Override public long get Last Used return last Used public void set Last Used long last Used this last Used last Used Override public final boolean is Expired long now return Expiry Helper is Expired Transient max Idle last Used now Override public final boolean is Expired return is Expired System current Time Millis Override public boolean can Expire return true Override public Internal Cache Entry to Internal Cache Entry Object key return new Transient Cache Entry key value max Idle last Used Override public long get Expiry Time return max Idle last Used max Idle Override public boolean equals Object o if this o return true if o instanceof Transient Cache Value return false if super equals o return false Transient Cache Value that Transient Cache Value o if last Used that last Used return false if max Idle that max Idle return false return true Override public int hash Code int result super hash Code result result int max Idle max Idle result result int last Used last Used return result Override public String to String return Transient Cache Value max Idle max Idle last Used last Used super to String Override public Transient Cache Value clone return Transient Cache Value super clone public static class Externalizer extends Abstract Externalizer Transient Cache Value Override public void write Object Object Output output Transient Cache Value tcv throws Exception output write Object tcv value Unsigned Numeric write Unsigned Long output tcv last Used output write Long tcv max Idle could be negative so should not use unsigned longs Override public Transient Cache Value read Object Object Input input throws Exception Class Not Found Exception Object v input read Object long last Used Unsigned Numeric read Unsigned Long input Long max Idle input read Long return new Transient Cache Value v max Idle last Used Override public Integer get Id return Ids Override public Set Class extends Transient Cache Value get Type Classes return Util Class extends Transient Cache Value as Set Transient Cache Value class 
package org infinispan container entries import static java lang Math min import static org infinispan commons util Util to Str import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids import org infinispan metadata Embedded Metadata import org infinispan metadata Metadata cache entry that is both transient and mortal author Manik Surtani since public class Transient Mortal Cache Entry extends Abstract Internal Cache Entry protected Object value protected long max Idle protected long last Used protected long lifespan protected long created public Transient Mortal Cache Entry Object key Object value long max Idle long lifespan long current Time Millis this key value max Idle lifespan current Time Millis current Time Millis public Transient Mortal Cache Entry Object key Object value long max Idle long lifespan long last Used long created super key this value value this max Idle max Idle this lifespan lifespan this created created this last Used last Used public void set Lifespan long lifespan this lifespan lifespan public void set Max Idle long max Idle this max Idle max Idle Override public Object get Value return value Override public long get Lifespan return lifespan Override public final boolean can Expire return true Override public long get Created return created Override public boolean is Expired long now return Expiry Helper is Expired Transient Mortal max Idle last Used lifespan created now Override public boolean is Expired return is Expired System current Time Millis Override public final long get Expiry Time long lset lifespan created lifespan long muet max Idle last Used max Idle if lset return muet if muet return lset return min lset muet Override public Internal Cache Value to Internal Cache Value return new Transient Mortal Cache Value value created lifespan max Idle last Used Override public long get Last Used return last Used Override public final void touch touch System current Time Millis Override public final void touch long current Time Millis this last Used current Time Millis Override public final void reincarnate reincarnate System current Time Millis Override public void reincarnate long now this created now Override public long get Max Idle return max Idle Override public Object set Value Object value return this value value Override public Metadata get Metadata return new Embedded Metadata Builder lifespan lifespan max Idle max Idle build Override public void set Metadata Metadata metadata throw new Illegal State Exception Metadata can not be set on mortal entries They need to be recreated via the entry factory Override public Transient Mortal Cache Entry clone return Transient Mortal Cache Entry super clone Override public String to String return get Class get Simple Name key to Str key value to Str value public static class Externalizer extends Abstract Externalizer Transient Mortal Cache Entry Override public void write Object Object Output output Transient Mortal Cache Entry entry throws Exception output write Object entry key output write Object entry value Unsigned Numeric write Unsigned Long output entry created output write Long entry lifespan could be negative so should not use unsigned longs Unsigned Numeric write Unsigned Long output entry last Used output write Long entry max Idle could be negative so should not use unsigned longs Override public Transient Mortal Cache Entry read Object Object Input input throws Exception Class Not Found Exception Object k input read Object Object v input read Object long created Unsigned Numeric read Unsigned Long input Long lifespan input read Long long last Used Unsigned Numeric read Unsigned Long input Long max Idle input read Long return new Transient Mortal Cache Entry k v max Idle lifespan last Used created Override public Integer get Id return Ids Override public Set Class extends Transient Mortal Cache Entry get Type Classes return Util as Set Transient Mortal Cache Entry class 
package org infinispan container entries import static java lang Math min import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons io Unsigned Numeric import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids transient mortal cache value to correspond with link org infinispan container entries Transient Mortal Cache Entry author Manik Surtani since public class Transient Mortal Cache Value extends Mortal Cache Value protected long max Idle protected long last Used public Transient Mortal Cache Value Object value long created long lifespan long max Idle long last Used this value created lifespan max Idle this last Used last Used public Transient Mortal Cache Value Object value long created long lifespan long max Idle super value created lifespan this max Idle max Idle Override public long get Max Idle return max Idle public void set Max Idle long max Idle this max Idle max Idle Override public long get Last Used return last Used public void set Last Used long last Used this last Used last Used Override public boolean is Expired long now return Expiry Helper is Expired Transient Mortal max Idle last Used lifespan created now Override public boolean is Expired return is Expired System current Time Millis Override public Internal Cache Entry to Internal Cache Entry Object key return new Transient Mortal Cache Entry key value max Idle lifespan last Used created Override public long get Expiry Time long lset lifespan created lifespan long muet max Idle last Used max Idle if lset return muet if muet return lset return min lset muet Override public boolean equals Object o if this o return true if o instanceof Transient Mortal Cache Value return false if super equals o return false Transient Mortal Cache Value that Transient Mortal Cache Value o if last Used that last Used return false if max Idle that max Idle return false return true Override public int hash Code int result super hash Code result result int max Idle max Idle result result int last Used last Used return result Override public String to String return Transient Mortal Cache Value max Idle max Idle last Used last Used super to String Override public Transient Mortal Cache Value clone return Transient Mortal Cache Value super clone public static class Externalizer extends Abstract Externalizer Transient Mortal Cache Value Override public void write Object Object Output output Transient Mortal Cache Value value throws Exception output write Object value value Unsigned Numeric write Unsigned Long output value created output write Long value lifespan could be negative so should not use unsigned longs Unsigned Numeric write Unsigned Long output value last Used output write Long value max Idle could be negative so should not use unsigned longs Override public Transient Mortal Cache Value read Object Object Input input throws Exception Class Not Found Exception Object v input read Object long created Unsigned Numeric read Unsigned Long input Long lifespan input read Long long last Used Unsigned Numeric read Unsigned Long input Long max Idle input read Long return new Transient Mortal Cache Value v created lifespan max Idle last Used Override public Integer get Id return Ids Override public Set Class extends Transient Mortal Cache Value get Type Classes return Util Class extends Transient Mortal Cache Value as Set Transient Mortal Cache Value class 
Boss Home of Professional Open Source Copyright Red Hat Inc and individual contributors as indicated by the author tags See the copyright txt file in the distribution for a full listing of individual contributors This is free software you can redistribute it and or modify it under the terms of the Lesser General Public License as published by the Free Software Foundation either version of the License or at your option any later version This software is distributed in the hope that it will be useful but without even the implied warranty of or See the Lesser General Public License for more details You should have received a copy of the Lesser General Public License along with this software if not write to the Free Software Foundation Inc Franklin St Fifth Floor Boston or see the site http www fsf org package org infinispan server jgroups spi import org jboss as network Socket Binding Defines the configuration of a Groups transport protocol author Paul Ferraro public interface Transport Configuration extends Protocol Configuration boolean is Shared Socket Binding get Diagnostics Socket Binding Topology get Topology interface Topology String get Machine String get Rack String get Site 
package org jboss as clustering infinispan subsystem import java util concurrent Time Unit import org infinispan server commons service Builder import org infinispan server infinispan spi service Cache Container Service Name import org infinispan server jgroups spi Channel Factory import org infinispan server jgroups spi service Channel Service Name import org jboss as clustering infinispan subsystem Embedded Cache Manager Configuration Service Transport Configuration import org jboss msc service Service Builder import org jboss msc service Service Controller import org jboss msc service Service Name import org jboss msc service Service Target import org jboss msc service Value Service import org jboss msc value Injected Value import org jboss msc value Value import org jgroups Channel public class Transport Configuration Builder implements Builder Transport Configuration Value Transport Configuration Transport Configuration private final Injected Value Channel channel new Injected Value private final Injected Value Channel Factory factory new Injected Value private final String name private Long lock Timeout private boolean strict Peer To Peer private int initial Cluster Size private long initial Cluster Timeout public Transport Configuration Builder String name this name name Transport Configuration Builder set Lock Timeout long lock Timeout Time Unit time Unit this lock Timeout time Unit to Millis lock Timeout return this Transport Configuration Builder set Strict Peer To Peer boolean strict Peer To Peer this strict Peer To Peer strict Peer To Peer return this Transport Configuration Builder set Initial Cluster Size int initial Cluster Size this initial Cluster Size initial Cluster Size return this Transport Configuration Builder set Initial Cluster Timeout long initial Cluster Timeout this initial Cluster Timeout initial Cluster Timeout return this Override public Channel Factory get Channel Factory return this factory get Value Override public Channel get Channel return this channel get Value Override public boolean is Strict Peer To Peer return this strict Peer To Peer Override public Long get Lock Timeout return this lock Timeout Override public int get Initial Cluster Size return this initial Cluster Size Override public long get Initial Cluster Timeout return this initial Cluster Timeout Override public Transport Configuration get Value throws Illegal State Exception Illegal Argument Exception return this Override public Service Name get Service Name return Cache Container Service Name get Service Name this name append transport Override public Service Builder Transport Configuration build Service Target target Service Builder Transport Configuration builder target add Service this get Service Name new Value Service this add Dependency Channel Service Name get Service Name this name Channel class this channel add Dependency Channel Service Name get Service Name this name Channel Factory class this factory return builder set Initial Mode Service Controller Mode 
package org infinispan client hotrod impl transport import java net Socket Address import java util Collection import java util Map import java util Set import java util concurrent atomic Atomic Integer import javax net ssl Context import org infinispan client hotrod Cache Topology Info import org infinispan client hotrod configuration Configuration import org infinispan client hotrod event Client Listener Notifier import org infinispan client hotrod impl consistenthash Consistent Hash import org infinispan client hotrod impl consistenthash Consistent Hash Factory import org infinispan client hotrod impl operations Add Client Listener Operation import org infinispan client hotrod impl protocol Codec import org infinispan client hotrod impl transport tcp Tcp Transport Factory Cluster Switch Status import org infinispan commons marshall Marshaller Transport factory for building and managing link org infinispan client hotrod impl transport Transport objects author Mircea Markus jboss com since public interface Transport Factory Transport get Transport Set Socket Address failed Servers byte cache Name Transport get Address Transport Socket Address server Socket Address get Socket Address Object key byte cache Name void release Transport Transport transport void start Codec codec Configuration configuration Atomic Integer topology Id Client Listener Notifier listener Notifier void update Servers Collection Socket Address new Servers byte cache Name boolean quiet void destroy Cache Topology Info get Cache Topology Info byte cache Name deprecated Only called for Hot Rod x protocol Deprecated void update Hash Function Map Socket Address Set Integer servers Hash int num Key Owners short hash Function Version int hash Space byte cache Name Atomic Integer topology Id void update Hash Function Socket Address segment Owners int num Segments short hash Function Version byte cache Name Atomic Integer topology Id Consistent Hash get Consistent Hash byte cache Name Consistent Hash Factory get Consistent Hash Factory Transport get Transport Object key Set Socket Address failed Servers byte cache Name boolean is Tcp No Delay boolean is Tcp Keep Alive int get Max Retries int get So Timeout int get Connect Timeout void invalidate Transport Socket Address server Address Transport transport Context get Context void reset byte cache Name Atomic Integer create Topology Id byte cache Name int get Topology Id byte cache Name Cluster Switch Status try Switch Cluster String failed Cluster Name byte cache Name Marshaller get Marshaller boolean switch To Cluster String cluster Name String get Current Cluster Name int get Topology Age String get Sni Host Name void add Disconnected Listener Add Client Listener Operation listener throws Interrupted Exception 
package org infinispan interceptors distribution import static org infinispan commands Visitable Command Load Type import static org infinispan commands Visitable Command Load Type import java util Array List import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Set import java util concurrent Completable Future import org infinispan commands Command Invocation Id import org infinispan commands Commands Factory import org infinispan commands Flag Affected Command import org infinispan commands Topology Affected Command import org infinispan commands Visitable Command import org infinispan commands read Get Cache Entry Command import org infinispan commands read Get Key Value Command import org infinispan commands write Abstract Data Write Command import org infinispan commands write Backup Ack Command import org infinispan commands write Backup Multi Key Ack Command import org infinispan commands write Backup Put Map Rpc Command import org infinispan commands write Backup Write Rpc Command import org infinispan commands write Compute Command import org infinispan commands write Compute If Absent Command import org infinispan commands write Data Write Command import org infinispan commands write Put Key Value Command import org infinispan commands write Put Map Command import org infinispan commands write Remove Command import org infinispan commands write Replace Command import org infinispan commons util Infinispan Collections import org infinispan container entries Cache Entry import org infinispan context Invocation Context import org infinispan context impl Flag Bit Sets import org infinispan distribution Distribution Info import org infinispan distribution Localized Cache Topology import org infinispan distribution Triangle Order Manager import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan remoting inboundhandler Deliver Order import org infinispan remoting responses Response import org infinispan remoting responses Successful Response import org infinispan remoting responses Unsuccessful Response import org infinispan remoting responses Valid Response import org infinispan remoting transport Address import org infinispan statetransfer Outdated Topology Exception import org infinispan statetransfer State Transfer Interceptor import org infinispan util concurrent Command Ack Collector import org infinispan util concurrent Completable Futures import org infinispan util logging Log import org infinispan util logging Log Factory Non transactional interceptor used by distributed caches that supports concurrent writes p It is implemented based on the Triangle algorithm p The link Get Key Value Command reads the value locally if it is available the node is an owner or the value is stored in If it is n t available a remote request is made The link Data Write Command is performed as follow ul li The command if forwarded to the primary owner of the key li li The primary owner locks the key and executes the operation sends the link Backup Write Rpc Command to the backup owners releases the lock sends the link Successful Response or link Unsuccessful Response back to the originator li li The backup owner applies the update and sends a link Backup Ack Command back to the originator li li The originator collects the ack from all the owners and returns li ul The link Put Map Command is performed in a similar way ul li The subset of the map is split by primary owner li li The primary owner locks the key and executes the command splits the keys by backup owner and send them and replies to the originator li li The backup owner applies the update and sends back the link Backup Multi Key Ack Command to the originator li li The originator collects all the acknowledges from all owners and returns li ul The acknowledges management is done by the link Command Ack Collector p If a topology changes while a command is executed an link Outdated Topology Exception is thrown The link State Transfer Interceptor will catch it and retries the command p finish the wiki page and add a link to it author Pedro Ruivo since public class Triangle Distribution Interceptor extends Non Tx Distribution Interceptor private static final Log log Log Factory get Log Triangle Distribution Interceptor class private static final boolean trace log is Trace Enabled private Command Ack Collector command Ack Collector private Commands Factory commands Factory private Triangle Order Manager triangle Order Manager private Address local Address private static Map Object Object merge Maps Map Address Response responses Map Object Object result Map noinspection unchecked Map Object Object remote Map Map Object Object Successful Response responses values iterator next get Response Value return Infinispan Collections merge Maps result Map remote Map Inject public void inject Command Ack Collector command Ack Collector Commands Factory commands Factory Triangle Order Manager triangle Order Manager this command Ack Collector command Ack Collector this commands Factory commands Factory this triangle Order Manager triangle Order Manager Start public void start local Address rpc Manager get Address Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable return handle Data Write Command ctx command Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable if ctx is Origin Local return handle Local Put Map Command ctx command else return handle Remote Put Map Command ctx command Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable return handle Data Write Command ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return handle Data Write Command ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable return handle Data Write Command ctx command Override public Object visit Compute If Absent Command Invocation Context ctx Compute If Absent Command command throws Throwable return handle Data Write Command ctx command private Object handle Remote Put Map Command Invocation Context ctx Put Map Command command Localized Cache Topology cache Topology check Topology Id command final Visitable Command Load Type load Type command load Type if command is Forwarded backup remote no backups return async Invoke Next ctx command check Remote Get If Needed ctx command command get Map key Set cache Topology load Type primary we need to send the command to the backups ordered send To Backups command command get Map cache Topology return async Invoke Next ctx command check Remote Get If Needed ctx command command get Map key Set cache Topology load Type private void send To Backups Put Map Command command Map Object Object entries Localized Cache Topology cache Topology Backup Owner Classifier filter new Backup Owner Classifier cache Topology entries size entries entry Set for Each filter add int topology Id command get Topology Id for Map Entry Integer Map Object Object entry filter per Segment Key Value entry Set int segment Id entry get Key Collection Address backups cache Topology get Distribution For Segment segment Id write Backups if backups is Empty Only the primary owner Other segments may have more than one owner e g during rebalance continue Map Object Object map entry get Value long sequence triangle Order Manager next segment Id topology Id Backup Put Map Rpc Command backup Put Map Rpc Command commands Factory build Backup Put Map Rpc Command command backup Put Map Rpc Command set Map map backup Put Map Rpc Command set Sequence sequence if trace log tracef Command s got sequence s for segment s command get Command Invocation Id segment Id sequence rpc Manager send To Many backups backup Put Map Rpc Command Deliver Order private Object handle Local Put Map Command Invocation Context ctx Put Map Command command local command we need to split by primary owner to send the command to them final Localized Cache Topology cache Topology check Topology Id command final Primary Owner Classifier filter new Primary Owner Classifier cache Topology command get Map size final boolean sync is Synchronous command final Visitable Command Load Type load Type command load Type command get Map entry Set for Each filter add if sync Collector Map Object Object collector command Ack Collector create Multi Key Collector command get Command Invocation Id get Id filter primaries key Set filter backups command get Topology Id Completable Future Map Object Object local Result new Completable Future final Map Object Object local Entries filter primaries remove local Address forward To Primary Owners command filter local Result handle map throwable if throwable null collector primary Exception throwable else collector primary Result map true return null if local Entries null send To Backups command local Entries cache Topology Completable Future remote Get check Remote Get If Needed ctx command local Entries key Set cache Topology load Type load Type return make Stage async Invoke Next ctx command remote Get and Handle ctx command r Ctx r Command rv throwable if throwable null local Result complete Exceptionally Completable Futures extract Exception throwable else noinspection unchecked local Result complete Map Object Object rv return async Value collector get Future else local Result complete command has Any Flag Flag Bit Sets null new Hash Map return async Value collector get Future final Map Object Object local Entries filter primaries remove local Address forward To Primary Owners command filter if local Entries null send To Backups command local Entries cache Topology return async Invoke Next ctx command check Remote Get If Needed ctx command local Entries key Set cache Topology load Type load Type return null private extends Flag Affected Command Topology Affected Command Completable Future check Remote Get If Needed Invocation Context ctx command Set Object keys Localized Cache Topology cache Topology boolean needs Previous Value if needs Previous Value for Object key keys Cache Entry cache Entry ctx lookup Entry key if cache Entry null cache Topology is Write Owner key entry Factory wrap External Entry ctx key null false true return Completable Futures completed Null final List Completable Future future List new Array List keys size for Object key keys Cache Entry cache Entry ctx lookup Entry key if cache Entry null cache Topology is Write Owner key wrap Key Externally ctx command key future List final int size future List size if size return Completable Futures completed Null Completable Future array new Completable Future size future List to Array array return Completable Future all Of array private extends Flag Affected Command Topology Affected Command void wrap Key Externally Invocation Context ctx command Object key List Completable Future future List if command has Any Flag Flag Bit Sets Flag Bit Sets entry Factory wrap External Entry ctx key null false true else Get Cache Entry Command fake Get Command cf build Get Cache Entry Command key command get Flags Bit Set fake Get Command set Topology Id command get Topology Id future List add remote Get ctx fake Get Command key true private void forward To Primary Owners Put Map Command command Primary Owner Classifier splitter for Map Entry Address Map Object Object entry splitter primaries entry Set Put Map Command copy new Put Map Command command false copy set Map entry get Value rpc Manager send To entry get Key copy Deliver Order private Completable Future Map Object Object forward To Primary Owners Put Map Command command Primary Owner Classifier splitter Completable Future Map Object Object local Result Completable Future Map Object Object future local Result for Map Entry Address Map Object Object entry splitter primaries entry Set Put Map Command copy new Put Map Command command false copy set Map entry get Value Completable Future Map Address Response remote Future rpc Manager invoke Remotely Async Collections singleton entry get Key copy default Sync Options future remote Future then Combine future Triangle Distribution Interceptor merge Maps return future this should just override handle Non Tx Write Command when functional commands will be triangelized private Object handle Data Write Command Invocation Context context Abstract Data Write Command command assert context is In Tx Scope if command has Any Flag Flag Bit Sets do n t go through the triangle return invoke Next context command Localized Cache Topology topology check Topology Id command Distribution Info distribution Info topology get Distribution command get Key if distribution Info is Primary assert context lookup Entry command get Key null return context is Origin Local local Primary Owner Write context command distribution Info remote Primary Owner Write context command distribution Info else if distribution Info is Write Backup return context is Origin Local local Write Invocation context command distribution Info remote Backup Owner Write context command else always local assert context is Origin Local return local Write Invocation context command distribution Info private Object remote Backup Owner Write Invocation Context context Data Write Command command Cache Entry entry context lookup Entry command get Key if entry null if command load Type return async Invoke Next context command remote Get context command command get Key true entry Factory wrap External Entry context command get Key null false true return invoke Next context command private Object local Primary Owner Write Invocation Context context Data Write Command command Distribution Info distribution Info if command has Any Flag Flag Bit Sets command set Value Matcher command get Value Matcher matcher For Retry return invoke Next Then Apply context command r Ctx r Command rv final Data Write Command dw Command Data Write Command r Command final Command Invocation Id id dw Command get Command Invocation Id Collection Address backup Owners distribution Info write Backups if dw Command is Successful backup Owners is Empty if trace log tracef Command s not successful in primary owner id return rv final int topology Id dw Command get Topology Id if is Synchronous dw Command dw Command is Return Value Expected Collector Object collector command Ack Collector create id get Id backup Owners topology Id check the topology after registering the collector if we do n t the collector may wait forever timeout for non existing acknowledges check Topology Id topology Id collector collector primary Result rv true send To Backups distribution Info dw Command backup Owners return async Value collector get Future else send To Backups distribution Info dw Command backup Owners return rv private Object remote Primary Owner Write Invocation Context context Data Write Command command final Distribution Info distribution Info we are the primary owner we need to execute the command check if successful send to backups and reply to originator is needed if command has Any Flag Flag Bit Sets command set Value Matcher command get Value Matcher matcher For Retry return invoke Next Then Apply context command r Ctx r Command rv final Data Write Command dw Command Data Write Command r Command final Command Invocation Id id dw Command get Command Invocation Id Collection Address backup Owners distribution Info write Backups if dw Command is Successful backup Owners is Empty if trace log tracef Command s not successful in primary owner id return rv send To Backups distribution Info dw Command backup Owners return rv private void send To Backups Distribution Info distribution Info Data Write Command command Collection Address backup Owners Command Invocation Id id command get Command Invocation Id int segment Id distribution Info segment Id if trace log tracef Command s send to backup owner s id backup Owners long sequence Number triangle Order Manager next segment Id command get Topology Id Backup Write Rpc Command backup Write Rpc Command commands Factory build Backup Write Rpc Command command backup Write Rpc Command set Sequence sequence Number if trace log tracef Command s got sequence s for segment s id sequence Number segment Id we must send the message only after the collector is registered in the map rpc Manager send To Many backup Owners backup Write Rpc Command Deliver Order private Object local Write Invocation Invocation Context context Data Write Command command Distribution Info distribution Info assert context is Origin Local final Command Invocation Id invocation Id command get Command Invocation Id if is Synchronous command command is Return Value Expected command has Any Flag Flag Bit Sets final int topology Id command get Topology Id Collector Object collector command Ack Collector create invocation Id get Id distribution Info write Backups topology Id check the topology after registering the collector if we do n t the collector may wait forever timeout for non existing acknowledges check Topology Id topology Id collector forward To Primary command distribution Info collector return async Value collector get Future else rpc Manager send To distribution Info primary command Deliver Order return null private void forward To Primary Data Write Command command Distribution Info distribution Info Collector Object collector Completable Future Map Address Response remote Invocation rpc Manager invoke Remotely Async Collections singleton List distribution Info primary command default Sync Options remote Invocation handle responses throwable if throwable null collector primary Exception Completable Futures extract Exception throwable else Valid Response response Valid Response responses values iterator next if response is Successful command fail collector primary Result response get Response Value response is Successful return null private void check Topology Id int topology Id Collector collector int current Topology Id state Transfer Manager get Cache Topology get Topology Id if current Topology Id topology Id topology Id collector primary Exception Outdated Topology Exception throw Outdated Topology Exception Classifies the keys by primary owner address keys segments and backup owners address segments p The first map is used to forward the command to the primary owner with the subset of keys p The second map is used to initialize the link Command Ack Collector to wait for the backups acknowledges private static class Primary Owner Classifier private final Map Address Collection Integer backups private final Map Address Map Object Object primaries private final Localized Cache Topology cache Topology private final int entry Count private Primary Owner Classifier Localized Cache Topology cache Topology int entry Count this cache Topology cache Topology int member Size cache Topology get Members size this backups new Hash Map member Size this primaries new Hash Map member Size this entry Count entry Count public void add Map Entry Object Object entry int segment cache Topology get Segment entry get Key Distribution Info distribution Info cache Topology get Distribution For Segment segment final Address primary Owner distribution Info primary primaries compute If Absent primary Owner address new Hash Map entry Count put entry get Key entry get Value for Address backup distribution Info write Backups backups compute If Absent backup address new Hash Set entry Count add segment classifier used in the primary owner when handles a remote link Put Map Command p It maps the backup owner address to the subset of keys private static class Backup Owner Classifier private final Map Integer Map Object Object per Segment Key Value private final Localized Cache Topology cache Topology private final int entry Count private Backup Owner Classifier Localized Cache Topology cache Topology int entry Count this cache Topology cache Topology this per Segment Key Value new Hash Map cache Topology get Read Consistent Hash get Num Segments this entry Count entry Count public void add Map Entry Object Object entry per Segment Key Value compute If Absent cache Topology get Segment entry get Key address new Hash Map entry Count put entry get Key entry get Value 
package org infinispan client hotrod impl import java util Properties import org infinispan client hotrod logging Log import org infinispan client hotrod logging Log Factory import org infinispan commons util String Property Replacer Type aware properties Extends the link Properties class to provide accessors that convert values to certain types using default values if a conversion is not possible config Ref name Properties to add to the enclosing component author Manik Surtani since public class Typed Properties extends Properties The serial Version private static final long serial Version private static final Log log Log Factory get Log Typed Properties class Copy constructor param p properties instance to from If null then it is treated as an empty Properties instance public Typed Properties Properties p if p null p is Empty put All p Default constructor that returns an empty instance public Typed Properties Factory method that converts a link Properties instance to an instance of Typed Properties if needed param p properties to convert return Typed Properties object Returns an empty Typed Properties instance if p is null public static Typed Properties to Typed Properties Properties p if p instanceof Typed Properties return Typed Properties p return new Typed Properties p public int get Int Property String key int default Value return get Int Property key default Value false public int get Int Property String key int default Value boolean do String Replace String value get Property key if value null return default Value value value trim if value length return default Value if do String Replace value String Property Replacer replace Properties value try return Integer parse Int value catch Number Format Exception nfe log unable To Convert String Property To Int value default Value return default Value public long get Long Property String key long default Value return get Long Property key default Value false public long get Long Property String key long default Value boolean do String Replace String value get Property key if value null return default Value value value trim if value length return default Value if do String Replace value String Property Replacer replace Properties value try return Long parse Long value catch Number Format Exception nfe log unable To Convert String Property To Long value default Value return default Value public boolean get Boolean Property String key boolean default Value return get Boolean Property key default Value false public boolean get Boolean Property String key boolean default Value boolean do String Replace String value get Property key if value null return default Value value value trim if value length return default Value if do String Replace value String Property Replacer replace Properties value try return Boolean parse Boolean value catch Exception e log unable To Convert String Property To Boolean value default Value return default Value public extends Enum get Enum Property String key Class enum Class default Value return get Enum Property key enum Class default Value false public extends Enum get Enum Property String key Class enum Class default Value boolean do String Replace String value get Property key if value null return default Value value value trim if value length return default Value if do String Replace value String Property Replacer replace Properties value try return Enum value Of enum Class value catch Illegal Argument Exception e log unable To Convert String Property To Enum value default Value name return default Value Get the property associated with the key optionally applying string property replacement as defined in link String Property Replacer replace Properties to the result param key the hashtable key param default Value a default value param do String Replace boolean indicating whether to apply string property replacement return the value in this property list with the specified key valu after optionally being inspected for String property replacement public String get Property String key String default Value boolean do String Replace if do String Replace return String Property Replacer replace Properties get Property key default Value else return get Property key default Value Override public synchronized Typed Properties set Property String key String value super set Property key value return this 
package org infinispan container offheap import java util concurrent atomic Atomic Long import java util function Long Unary Operator import org infinispan factories annotations Inject import org infinispan util logging Log import org infinispan util logging Log Factory import sun misc Unsafe Memory allocator that just allocates memory directly using link Unsafe author wburns since public class Unpooled Off Heap Memory Allocator implements Off Heap Memory Allocator private static final Log log Log Factory get Log Unpooled Off Heap Memory Allocator class Log class private static final boolean trace log is Trace Enabled private final Atomic Long amount Allocated new Atomic Long private Long Unary Operator size Calculator Inject public void inject Off Heap Entry Factory off Heap Entry Factory size Calculator off Heap Entry Factory get Size Override public long allocate long memory Length long memory Location Off Heap Memory allocate memory Length long current Size amount Allocated add And Get memory Length if trace log tracef Allocated off heap memory at x x with d bytes Total size d memory Location memory Length current Size return memory Location Override public void deallocate long memory Address deallocate memory Address size Calculator apply As Long memory Address Override public void deallocate long memory Address long size long current Size amount Allocated add And Get size if trace log tracef Deallocating off heap memory at x x with d bytes Total size d memory Address size current Size Off Heap Memory free memory Address Override public long get Allocated Amount return amount Allocated get 
package org infinispan configuration cache import java util Map import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set Controls certain tuning parameters that may break some of Infinispan s public contracts in exchange for better performance in some cases p Use with care only after thoroughly reading and understanding the documentation about a specific feature p see Unsafe Configuration Builder public class Unsafe Configuration public static final Attribute Definition Boolean Attribute Definition builder unreliable return values false immutable build static Attribute Set attribute Definition Set return new Attribute Set Unsafe Configuration class private final Attribute Boolean unreliable Return Values private final Attribute Set attributes Unsafe Configuration Attribute Set attributes this attributes attributes check Protection unreliable Return Values attributes attribute Specifies whether Infinispan is allowed to disregard the link Map contract when providing return values for link org infinispan Cache put Object Object and link org infinispan Cache remove Object methods public boolean unreliable Return Values return unreliable Return Values get public Attribute Set attributes return attributes Override public String to String return attributes to String Override public boolean equals Object o Unsafe Configuration other Unsafe Configuration o return attributes equals other attributes Override public int hash Code return attributes hash Code 
package org infinispan configuration cache import static org infinispan configuration cache Unsafe Configuration import java util Map import org infinispan commons configuration Builder import org infinispan commons configuration attributes Attribute Set import org infinispan configuration global Global Configuration Controls certain tuning parameters that may break some of Infinispan s public contracts in exchange for better performance in some cases p Use with care only after thoroughly reading and understanding the documentation about a specific feature p public class Unsafe Configuration Builder extends Abstract Configuration Child Builder implements Builder Unsafe Configuration private final Attribute Set attributes protected Unsafe Configuration Builder Configuration Builder builder super builder attributes Unsafe Configuration attribute Definition Set Specify whether Infinispan is allowed to disregard the link Map contract when providing return values for link org infinispan Cache put Object Object and link org infinispan Cache remove Object methods p Providing return values can be expensive as they may entail a read from disk or across a network and if the usage of these methods never make use of these return values allowing unreliable return values helps Infinispan optimize away these remote calls or disk reads p param allow Unreliable Return Values if true return values for the methods described above should not be relied on public Unsafe Configuration Builder unreliable Return Values boolean allow Unreliable Return Values attributes attribute set allow Unreliable Return Values return this Override public void validate Nothing to validate Override public void validate Global Configuration global Config Override public Unsafe Configuration create return new Unsafe Configuration attributes protect Override public Unsafe Configuration Builder read Unsafe Configuration template this attributes read template attributes return this Override public String to String return this get Class get Simple Name attributes 
package org infinispan container offheap import java lang reflect Field import java security Access Controller import java security Privileged Action import org infinispan commons Cache Exception import sun misc Unsafe author wburns since class Unsafe Holder static Unsafe Unsafe Holder get Unsafe Suppress Warnings restriction private static Unsafe get Unsafe attempt to access field Unsafe the Unsafe final Object maybe Unsafe Access Controller do Privileged Privileged Action Object try final Field unsafe Field Unsafe class get Declared Field the Unsafe unsafe Field set Accessible true the unsafe instance return unsafe Field get null catch No Such Field Exception Security Exception Illegal Access Exception e return e if maybe Unsafe instanceof Exception throw new Cache Exception Exception maybe Unsafe else return Unsafe maybe Unsafe 
package org infinispan remoting responses import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids An unsuccessful response author Manik Surtani since public class Unsuccessful Response extends Valid Response public static final Unsuccessful Response new Unsuccessful Response null private final Object response Value private Unsuccessful Response Object value this response Value value public static Unsuccessful Response create Object value return value null new Unsuccessful Response value Override public boolean is Successful return false public Object get Response Value return response Value Override public String to String return Unsuccessful Response response Value Util to Str response Value Override public boolean equals Object o if this o return true if o null get Class o get Class return false Unsuccessful Response that Unsuccessful Response o if response Value null response Value equals that response Value that response Value null return false return true Override public int hash Code return response Value null response Value hash Code public static class Externalizer extends Abstract Externalizer Unsuccessful Response Override public void write Object Object Output output Unsuccessful Response response throws Exception output write Object response get Response Value Override public Unsuccessful Response read Object Object Input input throws Exception Class Not Found Exception return create input read Object Override public Integer get Id return Ids Override public Set Class extends Unsuccessful Response get Type Classes return Util Class extends Unsuccessful Response as Set Unsuccessful Response class 
package org infinispan remoting responses import java io Exception import java io Object Input import java io Object Output import java util Set import org infinispan commons marshall Abstract Externalizer import org infinispan commons util Util import org infinispan marshall core Ids An unsure response used with Dist essentially asks the caller to check the next response from the next node since the sender is in a state of flux probably in the middle of rebalancing author Manik Surtani since public class Unsure Response extends Valid Response public static final Unsure Response new Unsure Response Override public boolean is Successful return false Override public Object get Response Value throw new Unsupported Operation Exception public static class Externalizer extends Abstract Externalizer Unsure Response Override public void write Object Object Output output Unsure Response subject throws Exception Override public Unsure Response read Object Object Input input throws Exception Class Not Found Exception return Override public Integer get Id return Ids Override public Set Class extends Unsure Response get Type Classes return Util Class extends Unsure Response as Set Unsure Response class 
package org infinispan commons tx import javax transaction Status Transaction related util class author Pedro Ruivo since public class Util private Util public static String transaction Status To String int status switch status case Status return case Status return case Status return case Status return case Status return case Status return case Status return case Status return case Status return case Status return default return unknown status status 
package org infinispan cli commands server import org infinispan cli Context import org infinispan cli commands Processed Command import org kohsuke Meta Inf Services Meta Inf Services org infinispan cli commands Command class public class Version extends Abstract Server Command Override public String get Name return version Override public int nesting return Override public boolean is Available Context context return true Override public void execute Context context Processed Command command Line context println Client Version Version class get Package get Implementation Version if context is Connected super execute context command Line 
package org infinispan configuration cache import org infinispan commons configuration attributes Attribute import org infinispan commons configuration attributes Attribute Definition import org infinispan commons configuration attributes Attribute Set This configuration element controls whether entries are versioned Versioning is necessary for example when using optimistic transactions in a clustered environment to be able to perform write skew checks deprecated since Infinispan automatically enable versioning when needed Deprecated public class Versioning Configuration public static final Attribute Definition Boolean Attribute Definition builder enabled true immutable auto Persist false build public static final Attribute Definition Versioning Scheme Attribute Definition builder scheme Versioning Scheme immutable build static Attribute Set attribute Definition Set return new Attribute Set Versioning Configuration class private final Attribute Boolean enabled private final Attribute Versioning Scheme scheme private final Attribute Set attributes Versioning Configuration Attribute Set attributes this attributes attributes check Protection enabled attributes attribute scheme attributes attribute public boolean enabled return enabled get public Versioning Scheme scheme return scheme get Override public boolean equals Object o Versioning Configuration other Versioning Configuration o return attributes equals other attributes Override public int hash Code return attributes hash Code Override public String to String return attributes to String public Attribute Set attributes return attributes 
package org infinispan commons marshall import java io Exception import java io Object Input import java io Object Output import java util Arrays import java util Collections import java util Set import org infinispan commons util Util Simple wrapper around a byte to provide equals and hash Code semantics author wburns since public class Wrapped Byte Array implements Wrapped Bytes private final byte bytes private transient int hash Code public Wrapped Byte Array byte bytes this bytes bytes this hash Code Arrays hash Code bytes public Wrapped Byte Array byte bytes int hash Code this bytes bytes this hash Code hash Code Override public byte get Bytes return bytes Override public int back Array Offset return Override public int get Length return bytes length Override public byte get Byte int offset return bytes offset Override public boolean equals Object o if this o return true if o null return false Class o Class o get Class if get Class o Class return Wrapped Bytes class is Assignable From o Class equals Wrapped Bytes Wrapped Bytes o Wrapped Byte Array that Wrapped Byte Array o return Arrays equals bytes that bytes public boolean equals Wrapped Bytes Wrapped Bytes other int length get Length if other get Length length return false if other hash Code hash Code return false for int i i length i if get Byte i other get Byte i return false return true Override public int hash Code return hash Code Override public String to String return Wrapped Byte Array bytes Util print Array bytes hash Code hash Code public static class Externalizer extends Abstract Externalizer Wrapped Byte Array Override public Set Class extends Wrapped Byte Array get Type Classes return Collections singleton Wrapped Byte Array class Override public Integer get Id return Ids Override public void write Object Object Output output Wrapped Byte Array object throws Exception Marshall Util marshall Byte Array object bytes output Override public Wrapped Byte Array read Object Object Input input throws Exception Class Not Found Exception byte bytes Marshall Util unmarshall Byte Array input return new Wrapped Byte Array bytes 
package org infinispan commands write import java util Collection import org infinispan commands Flag Affected Command import org infinispan commands Topology Affected Command import org infinispan commands Visitable Command command that modifies the cache in some way author Manik Surtani since public interface Write Command extends Visitable Command Flag Affected Command Topology Affected Command Some commands may want to provide information on whether the command was successful or not This is different from a failure which usually would result in an exception being thrown An example is a put If Absent not doing anything because the key in question was present This would result in a is Successful call returning false return true if the command completed successfully false otherwise boolean is Successful Certain commands only work based on a certain condition or state of the cache For example link org infinispan Cache put If Absent Object Object only does anything if a condition is met i e the entry in question is not already present This method tests whether the command in question is conditional or not return true if the command is conditional false otherwise boolean is Conditional return The current value matching policy Value Matcher get Value Matcher param value Matcher The new value matching policy void set Value Matcher Value Matcher value Matcher return a collection of keys affected by this write command Some commands such as Clear Command may return an empty collection for this method Collection get Affected Keys Used for conditional commands to update the status of the command on the originator based on the result of its execution on the primary owner deprecated since Deprecated default void update Status From Remote Response Object remote Response Make subsequent invocations of link is Successful return code false code void fail Indicates whether the command is write only meaning that it makes no attempt to read the previously associated value with key for which the command is directed return true is the command is write only false otherwise default boolean is Write Only return false 
package org infinispan transaction xa import java util concurrent Concurrent Map import javax transaction Transaction import javax transaction xa Exception import javax transaction xa Xid import org infinispan Cache import org infinispan commons Cache Exception import org infinispan commons tx Xid Impl import org infinispan commons util Collection Factory import org infinispan configuration cache Configurations import org infinispan factories annotations Inject import org infinispan factories annotations Start import org infinispan transaction impl Local Transaction import org infinispan transaction impl Transaction Table import org infinispan transaction xa recovery Recovery Manager import org infinispan util logging Log import org infinispan util logging Log Factory link Transaction Table to be used with link Transaction Xa Adapter author Mircea Markus jboss com since public class Xa Transaction Table extends Transaction Table private static final Log log Log Factory get Log Xa Transaction Table class private static final boolean trace log is Trace Enabled protected Concurrent Map Xid Local Xa Transaction xid Local Tx protected Recovery Manager recovery Manager private String cache Name private boolean one Phase Total Order Inject public void init Recovery Manager recovery Manager Cache cache this recovery Manager recovery Manager this cache Name cache get Name Start priority Start before cache loader manager Suppress Warnings unused public void start Xid Mapping in distributed mode with write skew check we only allow phases this one Phase Total Order Configurations is One Phase Total Order Commit configuration final int concurrency Level configuration locking concurrency Level xid Local Tx Collection Factory make Concurrent Map concurrency Level f concurrency Level Override public boolean remove Local Transaction Local Transaction local Tx boolean result false if local Tx get Transaction null this can be null when we force the invocation during recovery perhaps on a remote node result super remove Local Transaction local Tx remove Xid Tx Mapping Local Xa Transaction local Tx return result private void remove Xid Tx Mapping Local Xa Transaction local Tx final Xid xid local Tx get Xid if xid null xid Local Tx remove xid public Local Xa Transaction get Local Transaction Xid xid return this xid Local Tx get xid private void add Local Transaction Mapping Local Xa Transaction local Transaction if local Transaction get Xid null throw new Illegal State Exception Initialize xid first this xid Local Tx put local Transaction get Xid local Transaction Override public void enlist Transaction transaction Local Transaction ltx Local Xa Transaction local Transaction Local Xa Transaction ltx if local Transaction is Enlisted make sure that you only enlist it once try transaction enlist Resource new Transaction Xa Adapter local Transaction this catch Exception e Xid xid local Transaction get Xid if xid null local Transaction get Looked Up Entries is Empty log debug Attempting a rollback to clear stale resources try tx Coordinator rollback local Transaction catch Exception xae log debug Caught exception attempting to clean up xid xae log failed To Enlist Transaction Xa Adapter e throw new Cache Exception e Override public int get Local Tx Count return xid Local Tx size public int prepare Xid external Xid throws Exception Xid xid convert Xid external Xid Local Xa Transaction local Transaction get Local Transaction And Validate xid return tx Coordinator prepare local Transaction public void commit Xid external Xid boolean is One Phase throws Exception Xid xid convert Xid external Xid Local Xa Transaction local Transaction get Local Transaction And Validate xid boolean committed In One Phase if is One Phase one Phase Total Order committed In One Phase tx Coordinator commit local Transaction true else if is One Phase is One Phase being true means that we re the only participant in the distributed transaction and does the optimization We run a though as running only has a high chance of leaving the cluster in inconsistent state tx Coordinator prepare local Transaction committed In One Phase tx Coordinator commit local Transaction false else committed In One Phase tx Coordinator commit local Transaction false forget Successfully Completed Transaction recovery Manager local Transaction get Xid local Transaction committed In One Phase void rollback Xid external Xid throws Exception Xid xid convert Xid external Xid Local Xa Transaction local Transaction get Local Transaction And Validate xid local Transaction mark For Rollback true make sure that locks are no longer associated to this transactions tx Coordinator rollback local Transaction Only does the conversion if recovery is enabled private Xid convert Xid Xid external Xid if is Recovery Enabled return Xid Impl copy external Xid else return external Xid void start Xid external Xid Local Xa Transaction local Transaction Xid xid convert Xid external Xid transform in our internal format in order to be able to serialize local Transaction set Xid xid add Local Transaction Mapping local Transaction if trace log tracef start called on tx s local Transaction get Global Transaction void end Local Xa Transaction local Transaction if trace log tracef end called on tx s s local Transaction get Global Transaction cache Name void forget Xid external Xid throws Exception Xid xid convert Xid external Xid if trace log tracef forget called for xid s xid try if is Recovery Enabled recovery Manager remove Recovery Information null xid true null false else if trace log trace Recovery not enabled catch Exception e log warn Exception Removing Recovery e Exception xe new Exception Exception xe init Cause e throw xe boolean is Recovery Enabled return recovery Manager null private void forget Successfully Completed Transaction Recovery Manager recovery Manager Xid xid Local Xa Transaction local Transaction boolean committed In One Phase final Global Transaction gtx local Transaction get Global Transaction if is Recovery Enabled recovery Manager remove Recovery Information local Transaction get Remote Locks Acquired xid false gtx partition Handling Manager is Transaction Partially Committed gtx remove Local Transaction local Transaction else release Locks For Completed Transaction local Transaction committed In One Phase private Local Xa Transaction get Local Transaction And Validate Xid xid throws Exception Local Xa Transaction local Transaction get Local Transaction xid if local Transaction null if trace log tracef no tx found for s xid throw new Exception Exception return local Transaction 
package org infinispan configuration parsing import java util Array Deque import java util Deque import javax xml namespace Namespace Context import javax xml namespace Name import javax xml stream Location import javax xml stream Stream Exception import javax xml stream Stream Reader author a href mailto david lloyd redhat com David Lloyd a author Tristan Tarrant since final class Extended Stream Reader Impl implements Extended Stream Reader private final Namespace Mapping Parser parser private final Stream Reader stream Reader private final Deque Context stack new Array Deque Context private Schema schema Extended Stream Reader Impl final Namespace Mapping Parser parser final Stream Reader stream Reader this parser parser this stream Reader stream Reader stack push new Context Override public void handle Any final Configuration Builder Holder holder throws Stream Exception require null null boolean ok false try final Deque Context stack this stack stack push new Context try parser parse Element this holder finally stack pop ok true finally if ok safe Close Override public Object get Property final String name throws Illegal Argument Exception return stream Reader get Property name Override public int next throws Stream Exception final Context context stack get First if context depth final int next stream Reader next if next context depth else if next context depth return next else try throw read Past End get Location finally safe Close Override public void require final int type final String namespace final String local Name throws Stream Exception stream Reader require type namespace local Name Override public String get Element Text throws Stream Exception return stream Reader get Element Text trim Override public int next Tag throws Stream Exception final Context context stack get First if context depth final int next stream Reader next Tag if next context depth else if next context depth return next else try throw read Past End get Location finally safe Close Override public boolean has Next throws Stream Exception return stack get First depth stream Reader has Next Override public void close throws Stream Exception throw new Unsupported Operation Exception Override public String get Namespace final String prefix return stream Reader get Namespace prefix Override public boolean is Start Element return stream Reader is Start Element Override public boolean is End Element return stream Reader is End Element Override public boolean is Characters return stream Reader is Characters Override public boolean is White Space return stream Reader is White Space Override public String get Attribute Value final String namespace final String local Name return stream Reader get Attribute Value namespace local Name Override public int get Attribute Count return stream Reader get Attribute Count Override public Name get Attribute Name final int index return stream Reader get Attribute Name index Override public String get Attribute Namespace final int index return stream Reader get Attribute Namespace index Override public String get Attribute Local Name final int index return stream Reader get Attribute Local Name index Override public String get Attribute Prefix final int index return stream Reader get Attribute Prefix index Override public String get Attribute Type final int index return stream Reader get Attribute Type index Override public String get Attribute Value final int index return stream Reader get Attribute Value index Override public boolean is Attribute Specified final int index return stream Reader is Attribute Specified index Override public int get Namespace Count return stream Reader get Namespace Count Override public String get Namespace Prefix final int index return stream Reader get Namespace Prefix index Override public String get Namespace final int index return stream Reader get Namespace index Override public Namespace Context get Namespace Context return stream Reader get Namespace Context Override public int get Event Type return stream Reader get Event Type Override public String get Text return stream Reader get Text Override public char get Text Characters return stream Reader get Text Characters Override public int get Text Characters final int source Start final char target final int target Start final int length throws Stream Exception return stream Reader get Text Characters source Start target target Start length Override public int get Text Start return stream Reader get Text Start Override public int get Text Length return stream Reader get Text Length Override public String get Encoding return stream Reader get Encoding Override public boolean has Text return stream Reader has Text Override public Location get Location return stream Reader get Location Override public Name get Name return stream Reader get Name Override public String get Local Name return stream Reader get Local Name Override public boolean has Name return stream Reader has Name Override public String get Namespace return stream Reader get Namespace Override public String get Prefix return stream Reader get Prefix Override public String get Version return stream Reader get Version Override public boolean is Standalone return stream Reader is Standalone Override public boolean standalone Set return stream Reader standalone Set Override public String get Character Encoding Scheme return stream Reader get Character Encoding Scheme Override public String get Target return stream Reader get Target Override public String get Data return stream Reader get Data Override public String get List Attribute Value int i return get Attribute Value i split s Override public Schema get Schema return schema Override public void set Schema Schema schema this schema schema private members private static final class Context int depth private void safe Close try stream Reader close catch Exception e ignore private static Stream Exception read Past End final Location location return new Stream Exception Attempt to read past end of element location 
package org infinispan xsite statetransfer import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import static org infinispan context Flag import java util concurrent atomic Atomic Reference import javax transaction Transaction Manager import org infinispan commands Commands Factory import org infinispan commands write Put Key Value Command import org infinispan commons Cache Exception import org infinispan commons util Enum Util import org infinispan context Flag import org infinispan context Invocation Context import org infinispan context Invocation Context Factory import org infinispan context Single Key Non Tx Invocation Context import org infinispan context impl Tx Invocation Context import org infinispan factories annotations Inject import org infinispan interceptors Async Interceptor Chain import org infinispan statetransfer Commit Manager import org infinispan util logging Log import org infinispan util logging Log Factory It contains the logic needed to consume the state sent from other site author Pedro Ruivo since public class Site State Consumer Impl implements Site State Consumer private static final long Enum Util bit Set Of private static final Log log Log Factory get Log Site State Consumer Impl class private static final boolean trace log is Trace Enabled private static final boolean debug log is Debug Enabled private Transaction Manager transaction Manager private Invocation Context Factory invocation Context Factory private Commands Factory commands Factory private Async Interceptor Chain interceptor Chain private Commit Manager commit Manager private Atomic Reference String sending Site new Atomic Reference null Inject public void inject Transaction Manager transaction Manager Invocation Context Factory invocation Context Factory Commands Factory commands Factory Async Interceptor Chain interceptor Chain Commit Manager commit Manager this transaction Manager transaction Manager this invocation Context Factory invocation Context Factory this commands Factory commands Factory this interceptor Chain interceptor Chain this commit Manager commit Manager Override public void start State Transfer String sending Site if debug log debugf Starting state transfer Receiving from s sending Site if this sending Site compare And Set null sending Site commit Manager start Track Flag else throw new Cache Exception Already receiving state from this sending Site get Override public void end State Transfer String sending Site if debug log debugf Ending state transfer from s sending Site String current Sending Site this sending Site get if sending Site null sending Site equals current Sending Site this sending Site set null commit Manager stop Track else if log is Debug Enabled log debugf Received an end request from a non sender site Expects s but got s current Sending Site sending Site Override public void apply State Site State chunk throws Exception if debug log debugf Received state s keys chunk length if transaction Manager null apply State In Transaction chunk else apply State In Non Transaction chunk Override public String get Sending Site Name return sending Site get private void apply State In Transaction Site State chunk throws Exception try transaction Manager begin Invocation Context ctx invocation Context Factory create Invocation Context transaction Manager get Transaction true Tx Invocation Context ctx get Cache Transaction set State Transfer Flag for Site State site State chunk interceptor Chain invoke ctx create Put site State if trace log tracef Successfully applied key s site State transaction Manager commit if debug log debugf Successfully applied state s keys inserted chunk length catch Exception e log unable To Apply Site State e safe Rollback throw e private void apply State In Non Transaction Site State chunk Single Key Non Tx Invocation Context ctx Single Key Non Tx Invocation Context invocation Context Factory create Single Key Non Tx Invocation Context for Site State site State chunk Put Key Value Command command create Put site State ctx set Lock Owner command get Key Lock Owner interceptor Chain invoke ctx command ctx reset State re use same context Old context is not longer needed if trace log tracef Successfully applied key s site State if debug log debugf Successfully applied state s keys inserted chunk length private Put Key Value Command create Put Site State state return commands Factory build Put Key Value Command state key state value state metadata private void safe Rollback try transaction Manager rollback catch Exception e ignored if debug log debug Error rollbacking transaction e 
package org infinispan xsite statetransfer import static org infinispan factories Known Component Names import static org infinispan persistence spi Advanced Cache Loader Cache Loader Task import static org infinispan persistence spi Advanced Cache Loader Task Context import static org infinispan remoting transport Retry On Failure Site Command Max Retries Policy import static org infinispan remoting transport Retry On Failure Site Command Retry Policy import static org infinispan xsite statetransfer Site State Transfer Control Command State Transfer Control import java util Array List import java util Arrays import java util Collection import java util Collections import java util List import java util Map import java util concurrent Callable import java util concurrent Concurrent Map import java util concurrent Executor Service import java util concurrent Time Unit import org infinispan commands Commands Factory import org infinispan commons Cache Exception import org infinispan commons util Collection Factory import org infinispan configuration cache Backup Configuration import org infinispan configuration cache Configuration import org infinispan configuration cache Site State Transfer Configuration import org infinispan container Data Container import org infinispan container entries Internal Cache Entry import org infinispan factories annotations Component Name import org infinispan factories annotations Inject import org infinispan interceptors locking Clustering Dependent Logic import org infinispan marshall core Marshalled Entry import org infinispan persistence manager Persistence Manager import org infinispan persistence spi Advanced Cache Loader import org infinispan remoting rpc Rpc Manager import org infinispan remoting transport Address import org infinispan remoting transport Retry On Failure Site Command import org infinispan statetransfer State Transfer Lock import org infinispan util concurrent Completable Futures import org infinispan util concurrent Within Thread Executor import org infinispan util logging Log import org infinispan util logging Log Factory import org infinispan xsite Site Backup It contains the logic to send state to another site author Pedro Ruivo since public class Site State Provider Impl implements Site State Provider private static final int private static final Executor Service new Within Thread Executor private static final Log log Log Factory get Log Site State Provider Impl class private static final boolean trace log is Trace Enabled private static final boolean debug log is Debug Enabled private final Concurrent Map String State Push Task running State Transfer private Data Container data Container private Persistence Manager persistence Manager private Clustering Dependent Logic clustering Dependent Logic private Commands Factory commands Factory private Rpc Manager rpc Manager private Executor Service executor Service private Configuration configuration private Site State Transfer Manager state Transfer Manager private State Transfer Lock state Transfer Lock public Site State Provider Impl running State Transfer Collection Factory make Concurrent Map Inject public void inject Data Container data Container Persistence Manager persistence Manager Rpc Manager rpc Manager Clustering Dependent Logic clustering Dependent Logic Commands Factory commands Factory Component Name value Executor Service executor Service Configuration configuration Site State Transfer Manager x Site State Transfer Manager State Transfer Lock state Transfer Lock this data Container data Container this persistence Manager persistence Manager this clustering Dependent Logic clustering Dependent Logic this commands Factory commands Factory this rpc Manager rpc Manager this executor Service executor Service this configuration configuration this state Transfer Manager x Site State Transfer Manager this state Transfer Lock state Transfer Lock Override public void start State Transfer String site Name Address origin int min Topology Id Site State Transfer Configuration state Transfer Configuration null for Backup Configuration backup Configuration configuration sites all Backups if backup Configuration site equals site Name state Transfer Configuration backup Configuration state Transfer break if state Transfer Configuration null throw new Cache Exception Unable to start Site State Transfer Backup configuration not found for site Name State Push Task task new State Push Task site Name origin state Transfer Configuration min Topology Id if running State Transfer put If Absent site Name task null if debug log debugf Starting state transfer to site s site Name executor Service execute task else if debug log debugf Do not start state transfer to site s It has already started site Name in case of the coordinator leaves before the command is processed if rpc Manager get Address equals rpc Manager get Members get rpc Manager get Members contains origin state Transfer Manager become Coordinator site Name Override public void cancel State Transfer String site Name State Push Task task running State Transfer remove site Name if task null task canceled true Override public Collection String get Current State Sending Collection String sending new Array List running State Transfer size for Map Entry String State Push Task entry running State Transfer entry Set if entry get Value finished sending add entry get Key return sending Override public Collection String get Sites Missing Coordinator Collection Address current Members final Collection String state Transfer Needs New Coordinator new Array List running State Transfer size for Map Entry String State Push Task entry running State Transfer entry Set if current Members contains entry get Value origin state Transfer Needs New Coordinator add entry get Key return state Transfer Needs New Coordinator private void notify State Transfer End final String site Name final Address origin final boolean error if rpc Manager get Address equals origin executor Service submit Callable Void try state Transfer Manager notify State Push Finished site Name origin error catch Throwable throwable ignored return null else Site State Transfer Control Command command commands Factory build Site State Transfer Control Command site Name command set Status Ok error rpc Manager invoke Remotely Collections singleton origin command rpc Manager get Default Rpc Options false private boolean should Send Key Object key return clustering Dependent Logic get Cache Topology get Distribution key is Primary private void send From Shared Buffer Site Backup x Site Backup List Site State shared Buffer State Push Task task throws Throwable if shared Buffer size return Site State private Buffer shared Buffer to Array new Site State shared Buffer size if trace log debugf Sending chunk to site s Chunk contains s x Site Backup get Site Name Arrays to String private Buffer else if debug log debugf Sending chunk to site s Chunk has s keys x Site Backup get Site Name private Buffer length Site State Push Command command commands Factory build Site State Push Command private Buffer x Site Backup get Timeout Retry On Failure Site Command remote Site Retry On Failure Site Command new Instance x Site Backup command task retry Policy remote Site execute rpc Manager get Transport task wait Time Time Unit private class State Push Task implements Runnable private final Site Backup x Site Backup private final int chunk Size private final Address origin private final Retry Policy retry Policy private final long wait Time private final int min Topology Id private volatile boolean finished private volatile boolean canceled private boolean error public State Push Task String site Name Address origin Site State Transfer Configuration configuration int min Topology Id this min Topology Id min Topology Id this chunk Size configuration chunk Size this wait Time configuration wait Time this retry Policy new Max Retries Policy configuration max Retries this origin origin this x Site Backup new Site Backup site Name true configuration timeout this canceled false this finished false this error false Override public void run try if debug log debugf Site State Transfer s wait for min topology s x Site Backup get Site Name min Topology Id Completable Futures await state Transfer Lock topology Future min Topology Id final List Site State chunk new Array List chunk Size chunk Size if debug log debugf Site State Transfer s start Data Container iteration x Site Backup get Site Name for Internal Cache Entry ice data Container if canceled log debugf Site State Transfer s State transfer canceled x Site Backup get Site Name return if chunk Size chunk size chunk Size try send From Shared Buffer x Site Backup chunk this catch Throwable t error true log unable To Send Site State x Site Backup get Site Name t return chunk clear if should Send Key ice get Key if trace log tracef Added key s to current chunk ice get Key chunk add Site State from Data Container ice if canceled return if chunk size try send From Shared Buffer x Site Backup chunk this catch Throwable t error true log unable To Send Site State x Site Backup get Site Name t return if debug log debugf Site State Transfer s finish Data Container iteration x Site Backup get Site Name Suppress Warnings unchecked Advanced Cache Loader Object Object st Provider persistence Manager get State Transfer Provider if st Provider null if debug log debugf Site State Transfer s start Persistence iteration x Site Backup get Site Name State Transfer Cache Loader Task task new State Transfer Cache Loader Task x Site Backup chunk this try st Provider process k should Send Key k data Container contains Key k task true true if canceled log debugf Site State Transfer s State transfer canceled x Site Backup get Site Name return task send Remaining State catch Cache Exception e error true log failed Loading Keys From Cache Store e return catch Throwable t error true log unable To Send Site State x Site Backup get Site Name t return if debug log debugf Site State Transfer s finish Persistence iteration x Site Backup get Site Name else if debug log debugf Site State Transfer s skip Persistence iteration x Site Backup get Site Name catch Throwable e error true log unable To Send Site State x Site Backup get Site Name e finally finished true log debugf Site State Transfer s State transfer finished x Site Backup get Site Name if canceled notify State Transfer End x Site Backup get Site Name origin error Override public String to String return State Push Task origin origin canceled canceled private class State Transfer Cache Loader Task implements Cache Loader Task Object Object private final List Site State chunk private final Site Backup x Site Backup private final State Push Task task private State Transfer Cache Loader Task Site Backup x Site Backup List Site State chunk State Push Task task this x Site Backup x Site Backup this chunk chunk this task task Override public void process Entry Marshalled Entry Object Object marshalled Entry Task Context task Context throws Interrupted Exception if task canceled task Context stop log debugf Site State Transfer s State transfer canceled x Site Backup get Site Name return if task chunk Size chunk size task chunk Size try send From Shared Buffer x Site Backup chunk task catch Throwable t log unable To Send Site State x Site Backup get Site Name t task Context stop chunk clear chunk add Site State from Cache Loader marshalled Entry public void send Remaining State throws Throwable if chunk size send From Shared Buffer x Site Backup chunk task 
