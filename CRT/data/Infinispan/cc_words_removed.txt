package org stream impl import java util Abstract Map import java util Array Deque import java util Collection import java util Collections import java util Hash Set import java util Queue import java util Set import java util concurrent Executor import java util concurrent Time Unit import java util concurrent atomic Atomic Boolean import java util concurrent atomic Atomic Reference Array import java util function Binary Operator import java util function Consumer import java util function Function import java util function Predicate import java util function Supplier import java util stream Base Stream import java util stream Collectors import java util stream Stream import org Cache Stream import org commons Cache Exception import org commons util concurrent Concurrent Hash Set import org container entries Cache Entry import org distribution Distribution Manager import org distribution Localized Cache Topology import org distribution ch Consistent Hash import org distribution ch Key Partitioner import org factories Component Registry import org partitionhandling impl Partition Handling Manager import org remoting transport Address import org statetransfer State Transfer Lock import org stream impl intops Intermediate Operation import org stream impl termop Segment Retrying Operation import org stream impl termop Single Run Operation import org stream impl termop object Flat Map Iterator Operation import org stream impl termop object Map Iterator Operation import org stream impl termop object Map Iterator Operation import org util Range Set import org util concurrent Timeout Exception import org util logging Log import org util logging Log Factory Abstract stream provides common functionality required types Streams including various primitive types param type returned stream param stream interface public abstract class Abstract Cache Stream extends Base Stream extends implements Base Stream protected final Log log Log Factory get Log get Class protected final Queue Intermediate Operation intermediate Operations protected final Address local Address protected final Distribution Manager dm protected final Supplier Cache Stream Cache Entry supplier protected final Cluster Stream Manager csm protected final boolean include Loader protected final Executor executor protected final Component Registry registry protected final Partition Handling Manager partition protected final Key Partitioner key Partitioner protected final State Transfer Lock state Transfer Lock protected Runnable close Runnable null protected boolean parallel protected Boolean parallel Distribution protected boolean rehash Aware true protected Set keys Filter protected Set Integer segments Filter protected int distributed Batch Size protected Cache Stream Segment Completion Listener segment Completion Listener protected Iterator Operation iterator Operation Iterator Operation protected long timeout protected Time Unit timeout Unit Time Unit protected Abstract Cache Stream Address local Address boolean parallel Distribution Manager dm Supplier Cache Stream Cache Entry supplier Cluster Stream Manager Object csm boolean include Loader int distributed Batch Size Executor executor Component Registry registry local Address local Address parallel parallel dm dm supplier supplier csm csm include Loader include Loader distributed Batch Size distributed Batch Size executor executor registry registry partition registry get Component Partition Handling Manager class key Partitioner registry get Component Key Partitioner class state Transfer Lock registry get Component State Transfer Lock class intermediate Operations new Array Deque protected Abstract Cache Stream Abstract Cache Stream intermediate Operations intermediate Operations local Address local Address dm dm supplier supplier csm csm include Loader include Loader executor executor registry registry partition partition key Partitioner key Partitioner state Transfer Lock state Transfer Lock close Runnable close Runnable parallel parallel parallel Distribution parallel Distribution rehash Aware rehash Aware keys Filter keys Filter segments Filter segments Filter distributed Batch Size distributed Batch Size segment Completion Listener segment Completion Listener iterator Operation iterator Operation timeout timeout timeout Unit timeout Unit protected add Intermediate Operation Intermediate Operation intermediate Operation intermediate Operation handle Injection registry add Intermediate Operation intermediate Operations intermediate Operation return unwrap protected void add Intermediate Operation Map Intermediate Operation intermediate Operation intermediate Operation handle Injection registry add Intermediate Operation intermediate Operations intermediate Operation protected void add Intermediate Operation Queue Intermediate Operation intermediate Operations Intermediate Operation intermediate Operation intermediate Operations add intermediate Operation protected abstract unwrap Override public boolean Parallel return parallel boolean get Parallel Distribution return parallel Distribution null true parallel Distribution Override public sequential parallel false return unwrap Override public parallel parallel true return unwrap Override public unordered default always unordered return unwrap Override public Close Runnable close Handler close Runnable null close Runnable close Handler else close Runnable compose Exceptions close Runnable close Handler return unwrap Override public void close close Runnable null close Runnable run perform Operation Function super extends function boolean retry Rehash Binary Operator accumulator Predicate super early Terminate Predicate Results Accumulator remote Results new Results Accumulator accumulator rehash Aware return perform Operation Rehash Aware function retry Rehash remote Results early Terminate Predicate else return perform Operation function remote Results early Terminate Predicate perform Operation Function super extends function Results Accumulator remote Results Predicate super early Terminate Predicate Consistent Hash ch dm get Write Consistent Hash Terminal Operation op new Single Run Operation intermediate Operations supplier Segments ch segments Filter null function Object id csm remote Stream Operation get Parallel Distribution parallel ch segments Filter keys Filter Collections empty Map include Loader op remote Results early Terminate Predicate try local Value op perform Operation remote Results Completion null Collections empty Set local Value id null try early Terminate Predicate null early Terminate Predicate test local Value csm await Completion id timeout timeout Unit throw new Timeout Exception catch Interrupted Exception e throw new Cache Exception e log tracef Finished operation id id return remote Results current Value finally csm forget Operation id perform Operation Rehash Aware Function super extends function boolean retry Rehash Results Accumulator remote Results Predicate super early Terminate Predicate Set Integer segments Process segments Filter Terminal Operation op Localized Cache Topology cache Topology dm get Cache Topology Consistent Hash ch cache Topology get Read Consistent Hash retry Rehash op new Segment Retrying Operation intermediate Operations supplier Segments ch segments Process null function else op new Single Run Operation intermediate Operations supplier Segments ch segments Process null function Object id csm remote Stream Operation Rehash Aware get Parallel Distribution parallel ch segments Process keys Filter Collections empty Map include Loader op remote Results early Terminate Predicate try local Value boolean local Run ch get Members contains local Address local Run local Value op perform Operation efficiently since drop results locally dm get Read Consistent Hash equals ch Set Integer Segments ch get Primary Segments Owner local Address segments Process null Segments retain segments Process remote Results Completion null Segments local Value else segments Process null Set Integer Segments ch get Primary Segments Owner local Address Segments retain segments Process remote Results Segments Lost Segments else remote Results Segments Lost ch get Primary Segments Owner local Address else n actually used local Run short circuits first local Value null id null try local Run early Terminate Predicate null early Terminate Predicate test local Value csm await Completion id timeout timeout Unit throw new Timeout Exception catch Interrupted Exception e throw new Cache Exception e remote Results lost Segments Empty segments Process new Hash Set remote Results lost Segments remote Results lost Segments clear log tracef Found lost segments identifier segments Process id remote Results requires Next Topology try state Transfer Lock wait Topology cache Topology get Topology Id timeout timeout Unit catch Interrupted Exception java util concurrent Timeout Exception e throw new Cache Exception e else n lose segments n need process anymore segments Process null segments Process null log tracef Finished rehash aware operation id id finally csm forget Operation id segments Process null segments Process Empty return remote Results current Value void perform Rehash Key Tracking Operation Function Supplier Stream Cache Entry Key Tracking Terminal Operation Object extends Object function final Atomic Boolean complete new Atomic Boolean Consistent Hash segment Info dm get Read Consistent Hash Key Tracking Consumer Object Object results new Key Tracking Consumer key Partitioner segment Info get Num Segments c c c null Set Integer segments Process segments Filter null new Range Set segment Info get Num Segments segments Filter Localized Cache Topology cache Topology dm get Cache Topology Consistent Hash ch cache Topology get Read Consistent Hash boolean local Run ch get Members contains local Address Set Integer segments Set Object excluded Keys local Run segments ch get Primary Segments Owner local Address segments retain segments Process excluded Keys segments stream flat Map results reference Array get stream collect Collectors Set else null okay referenced local Run segments null excluded Keys Collections empty Set Key Tracking Terminal Operation Object extends Object op function apply supplier Segments ch segments Process excluded Keys op handle Injection registry Object id csm remote Stream Operation Rehash Aware get Parallel Distribution parallel ch segments Process keys Filter new Atomic Reference Array Map results reference Array include Loader op results try local Run Collection Cache Entry Object Object local Value op perform Operation Rehash Aware results efficiently hampers performance rehash dm get Read Consistent Hash equals ch log tracef Found local values id local Value size id results Completion null segments local Value else Set Integer Segments ch get Primary Segments Owner local Address Segments retain segments Process log tracef changed making segments suspect identifier Segments id results Segments Lost Segments keep track keys n fire results Intermediate Result null local Value id null try csm await Completion id timeout timeout Unit throw new Timeout Exception catch Interrupted Exception e throw new Cache Exception e results lost Segments Empty segments Process new Hash Set results lost Segments results lost Segments clear log tracef Found lost segments identifier segments Process id results requires Next Topology try state Transfer Lock wait Topology cache Topology get Topology Id timeout timeout Unit results requires Next Topology false catch Interrupted Exception java util concurrent Timeout Exception e throw new Cache Exception e else log tracef Finished rehash aware operation id id complete set true finally csm forget Operation id complete get protected boolean Primary Owner Consistent Hash ch Cache Entry e return local Address equals ch locate Primary Owner Segment key Partitioner get Segment e get Key static class Atomic Reference Array Map extends Abstract Map Integer final Atomic Reference Array array Atomic Reference Array Map Atomic Reference Array array array array Override public boolean contains Key Object instanceof Integer return false int int return array length Override public get Object key key instanceof Integer return null int int key array length return array get return null Override public int size return array length Override public boolean remove Object key Object value throw new Unsupported Operation Exception Override public void clear throw new Unsupported Operation Exception Override public Set Entry Integer entry Set want implement later throw new Unsupported Operation Exception class Key Tracking Consumer implements Cluster Stream Manager Results Callback Collection Cache Entry Object Key Tracking Terminal Operation Intermediate Collector Collection Cache Entry Object final Key Partitioner key Partitioner final Consumer consumer final Set Integer lost Segments new Concurrent Hash Set final Function Cache Entry Object value Function boolean requires Next Topology final Atomic Reference Array Set reference Array final Distributed Cache Stream Segment Listener Notifier listener Notifier Key Tracking Consumer Key Partitioner key Partitioner int num Segments Consumer consumer Function Cache Entry Object value Function Distributed Cache Stream Segment Listener Notifier completed Segments key Partitioner key Partitioner consumer consumer value Function value Function listener Notifier completed Segments reference Array new Atomic Reference Array num Segments int reference Array length allow request per id reference Array set new Hash Set Override public Set Integer Intermediate Result Address address Collection Cache Entry Object results results null log tracef Response results address results size Set Integer segments Completed Cache Entry Object last Completed new Cache Entry listener Notifier null segments Completed new Hash Set else segments Completed null results e key e get Key int segment key Partitioner get Segment key Set keys reference Array get segment completion null first thus n need add keys null keys add key else segments Completed null segments Completed add segment last Completed e consumer accept value Function apply e last Completed null listener Notifier add Segments Object value Function apply last Completed segments Completed return segments Completed return null Override public void Completion Address address Set Integer completed Segments Collection Cache Entry Object results completed Segments Empty log tracef Completing segments completed Segments null first intermediate results n add reason completed Segments reference Array set null else log tracef segments complete address Set Integer value Segments Intermediate Result address results value Segments null n want modify completed segments caller may need Set Integer empty Completed Segments new Hash Set completed Segments size completed Segments First complete segments n keys completed segments wait user retrieves value Segments contains empty Completed Segments add listener Notifier complete Segments Results empty Completed Segments Override public void Segments Lost Set Integer segments use loop since Concurrent Hash Set n support add Integer segment segments lost Segments add segment Override public void request Future Topology requires Next Topology true Override public void send Data Resonse Collection Cache Entry Object response Intermediate Result null response static class Results Accumulator implements Cluster Stream Manager Results Callback private final Binary Operator binary Operator private final Set Integer lost Segments new Concurrent Hash Set current Value boolean requires Next Topology Results Accumulator Binary Operator binary Operator binary Operator binary Operator Override public Set Integer Intermediate Result Address address results results null synchronized current Value null current Value binary Operator apply current Value results else current Value results return null Override public void Completion Address address Set Integer completed Segments results Intermediate Result address results Override public void Segments Lost Set Integer segments use loop since Concurrent Hash Set n support add Integer segment segments lost Segments add segment Override public void request Future Topology requires Next Topology true static class Collection Consumer implements Cluster Stream Manager Results Callback Collection Key Tracking Terminal Operation Intermediate Collector Collection private final Consumer consumer Collection Consumer Consumer consumer consumer consumer Override public Set Integer Intermediate Result Address address Collection results results null results consumer return null Override public void Completion Address address Set Integer completed Segments Collection results Intermediate Result address results Override public void Segments Lost Set Integer segments Override public void request Future Topology Override public void send Data Resonse Collection response Intermediate Result null response protected Supplier Stream Cache Entry supplier Segments Consistent Hash ch Set Integer target Segments Set Object excluded Keys return supplier Segments ch target Segments excluded Keys true code use Primary code true segments primary segments exist target Segments However code use Primary code false code target Segments code must provided non null used specifically param ch param target Segments param excluded Keys param use Primary determines whether utilize primary segments return protected Supplier Stream Cache Entry supplier Segments Consistent Hash ch Set Integer target Segments Set Object excluded Keys boolean use Primary ch get Members contains local Address return Stream empty Set Integer segments use Primary segments ch get Primary Segments Owner local Address target Segments null segments retain target Segments else segments target Segments return segments Empty return Stream empty Cache Stream Cache Entry stream supplier get filter Key Segments segments keys Filter null stream stream filter Keys keys Filter excluded Keys null return stream filter e excluded Keys contains e get Key Make sure stream set parallel return parallel stream parallel stream sequential Given two Runnables return Runnable executes sequence even first throws exception throw exceptions add exceptions thrown second suppressed exceptions first static Runnable compose Exceptions Runnable Runnable b return try run catch Throwable e try b run catch Throwable e try e add Suppressed e catch Throwable ignore throw e b run enum Iterator Operation Override public Key Tracking Terminal Operation get Operation Iterable Intermediate Operation intermediate Operations Supplier Stream Cache Entry supplier int batch Size return new Map Iterator Operation intermediate Operations supplier batch Size Override public Function Cache Entry get Function return e e Override public Key Tracking Terminal Operation get Operation Iterable Intermediate Operation intermediate Operations Supplier Stream Cache Entry supplier int batch Size return new Map Iterator Operation intermediate Operations supplier batch Size Override public Key Tracking Terminal Operation get Operation Iterable Intermediate Operation intermediate Operations Supplier Stream Cache Entry supplier int batch Size return new Flat Map Iterator Operation intermediate Operations supplier batch Size Override public Consumer wrap Consumer Consumer consumer return new Collection Decomposer Consumer consumer public abstract Key Tracking Terminal Operation get Operation Iterable Intermediate Operation intermediate Operations Supplier Stream Cache Entry supplier int batch Size public Function Cache Entry get Function return e e get Value public Consumer wrap Consumer Consumer consumer return Consumer consumer static class Collection Decomposer Consumer implements Consumer Iterable private final Consumer consumer Collection Decomposer Consumer Consumer consumer consumer consumer Override public void accept Iterable es es consumer Given two Segment Completion Listener return Segment Completion Listener executes sequence even first throws exception throw exceptions add exceptions thrown second suppressed exceptions first protected static Cache Stream Segment Completion Listener compose Exceptions Cache Stream Segment Completion Listener Cache Stream Segment Completion Listener b return segments try segment Completed segments catch Throwable e try b segment Completed segments catch Throwable e try e add Suppressed e catch Throwable ignore throw e b segment Completed segments
package org commands read import java util Abstract Collection import java util Arrays import java util Collection import java util Iterator import org Cache import org commons util Closeable Iterator import org commons util Closeable Iterator Collection import org commons util Closeable Spliterator Abstract collection uses underlying Cache instance various operations useful backing collection entry Set key Set values Map interface Implementors need implement individual methods link Collection contains Object link Collection remove Object link org commons util Closeable Iterator Collection iterator link Collection add Object default throw link java lang Unsupported Operation Exception author wburns since public abstract class Abstract Closeable Iterator Collection extends Abstract Collection implements Closeable Iterator Collection protected final Cache cache public Abstract Closeable Iterator Collection Cache cache cache cache Override public abstract Closeable Iterator iterator Override public abstract Closeable Spliterator spliterator Override public abstract boolean contains Object Override public abstract boolean remove Object Override public int size return cache size Override public boolean Empty return cache Empty Copied Abstract Collection since need close iterator Override public Object Array Estimate size array prepared see fewer elements Object r new Object size try Closeable Iterator iterator int r length Next fewer elements expected return Arrays copy r r next return Next finish Array r r Copied Abstract Collection since need close iterator Override public Array Estimate size array prepared see fewer elements int size size r length size java lang reflect Array new Instance get Class get Component Type size try Closeable Iterator iterator int r length Next fewer elements expected r r null null terminate else length return Arrays copy r else System arraycopy r length null return r next elements expected return Next finish Array r r Override public boolean remove Collection c boolean modified false Object c remove modified true return modified Copied Abstract Collection since need close iterator Override public boolean retain Collection c boolean modified false try Closeable Iterator iterator Next c contains next remove modified true return modified Override public void clear cache clear Copied Abstract Collection support Array methods Suppress Warnings unchecked private static finish Array r Iterator int r length Next int cap r length cap int new Cap cap cap overflow conscious code new Cap new Cap huge Capacity cap r Arrays copy r new Cap r next trim overallocated return r length r Arrays copy r Copied Abstract Collection support Array methods private static int huge Capacity int min Capacity min Capacity overflow throw new Memory Error Required array size large return min Capacity Integer private static final int Integer
package org configuration cache abstract class Abstract Clustering Configuration Child Builder extends Abstract Configuration Child Builder implements Clustering Configuration Child Builder private final Clustering Configuration Builder clustering Builder protected Abstract Clustering Configuration Child Builder Clustering Configuration Builder builder super builder get Builder clustering Builder builder Override public Hash Configuration Builder hash return clustering Builder hash Override public Configuration Builder l return clustering Builder l Override public State Transfer Configuration Builder state Transfer return clustering Builder state Transfer Override public Sync Configuration Builder sync return clustering Builder sync Override public Partition Handling Configuration Builder partition Handling return clustering Builder partition Handling protected Clustering Configuration Builder get Clustering Builder return clustering Builder
package org factories import static org commons util Reflection Util invoke Accessibly import java lang reflect Invocation Target Exception import java lang reflect Method import java security Access Controller import java security Privileged Action import java security Privileged Exception Action import java util Array List import java util Arrays import java util Collections import java util Hash Set import java util List import java util Optional import java util Set import java util Stack import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import java util concurrent Time Unit import org Illegal Lifecycle State Exception import org commons Cache Configuration Exception import org commons Cache Exception import org commons api Lifecycle import org commons util Reflection Util import org commons util Util import org configuration cache Configuration import org factories annotations Default Factory import org factories annotations Inject import org factories annotations Survives Restarts import org factories components Component Metadata import org factories components Component Metadata Repo import org factories scopes Scope import org factories scopes Scopes import org lifecycle Component Status import org util Time Service import org util logging Log registry components created stored Components stored singletons registered specific name p Components retrieved registry using link get Component Class p Components registered using link register Component Object Class cause dependencies wired well Components need created result wiring done using link get Create Component Class look default factory component type factories annotated appropriate link Default Factory annotation p Default factories treated components need wired used p registry exist one several states defined link org lifecycle Component Status enumeration terms cache state changes following manner ul li first constructed li li created using Default Cache Factory li li link org Cache start called li li link org Cache stop called li ul p Cache configuration changed injected cache link org lifecycle Component Status state Thread Safety instances link Global Component Registry concurrently updated write operations serialized class intrinsic lock author Manik Surtani author Galder Zamarre since Survives Restarts Scope Scopes public abstract class Abstract Component Registry implements Lifecycle Cloneable private final boolean trace get Log Trace Enabled private static final String debug Dependencies Set system property li debug Dependencies li li true li enable extra information errors generated component factory public static final boolean Boolean get Boolean private Stack String debug Stack new Stack null Contains class definitions component factories used construct certain components private Map String Class extends Abstract Component Factory default Factories null private static final Object new Object component method containers private final Concurrent Map String Component component Lookup new Concurrent Hash Map protected volatile Component Status state Component Status private static final Prioritized Method Retrieves state registry return state registry public Component Status get Status return state protected abstract Class Loader get Class Loader protected abstract Log get Log public abstract Component Metadata Repo get Component Metadata Repo Wires object instance dependencies annotated link Inject annotation creating components needed based Configuration passed additional components n exist link Component Registry Strictly components n otherwise live registry lifecycle Commands param target object wire throws Cache Configuration Exception problem wiring instance public void wire Dependencies Object target throws Cache Configuration Exception try Class target Class target get Class Component Metadata metadata get Component Metadata Repo find Component Metadata target Class metadata null metadata get Inject Methods null metadata get Inject Methods length search anything need inject Component Metadata Inject Metadata inject Metadata metadata get Inject Methods Class method Parameters inject Metadata get Parameter Classes method Parameters null System get Security Manager null method Parameters Reflection Util Class Array inject Metadata get Parameters get Class Loader else method Parameters Access Controller Privileged Privileged Exception Action Class Reflection Util Class Array inject Metadata get Parameters get Class Loader inject Metadata set Parameter Classes method Parameters Method method inject Metadata get Method method null System get Security Manager null method Reflection Util find Method target Class inject Metadata get Method Name inject Metadata get Parameter Classes else method Access Controller Privileged Privileged Exception Action Method Reflection Util find Method target Class inject Metadata get Method Name inject Metadata get Parameter Classes inject Metadata set Method method invoke Injection Method target inject Metadata catch Illegal Lifecycle State Exception e throw e catch Exception e throw new Cache Configuration Exception Unable configure component type target get Class instance target e Registers component registry given type injects dependencies needed component type already exists overwritten param component component register param type type component public synchronized final void register Component Object component Class type register Component component type get Name type equals component get Class public synchronized final void register Component Object component String name register Component component name name equals component get Class get Name public synchronized final void register Component Object component String name boolean name register Component Internal component name name protected synchronized final void register Non Volatile Component Object component String name register Component Internal component name false protected synchronized final void register Non Volatile Component Object component Class type register Component Internal component type get Name true protected synchronized void register Component Internal Object component String name boolean name state Stopping state Terminated throw new Illegal Lifecycle State Exception Trying register component stopping name component null throw new Null Pointer Exception register null component name name Component old component Lookup get name old null equal n bother old instance equals component get Log tracef Attempting register component equal one already exists name anything name return Component c old null get Log tracef Replacing old component new instance old component old instance component old methods Scanned false c old else c new Component c name name c instance component component Lookup put name c c metadata get Component Metadata Repo find Component Metadata component get Class try c build Injection Methods List catch Class Found Exception cnfe throw new Cache Exception Error injecting dependencies component name cnfe inject dependencies component inject dependencies component already map support cyclical dependencies c inject Dependencies old null get Log tracef Registering component name c name state Component Status state Component Status populate Life Cycle Methods c try invoke Prioritized Methods Arrays List c start Methods catch Throwable component n started properly remove registration component Lookup remove name caller log exception handle Lifecycle Transition Failure Suppress Warnings unchecked private void invoke Injection Method Object Component Metadata Inject Metadata inject Metadata Class dependencies inject Metadata get Parameter Classes dependencies length Object params new Object dependencies length trace get Log tracef Injecting dependencies method instance inject Metadata get Class get Name int dependencies length String name inject Metadata get Parameter Name boolean name inject Metadata Parameter Name Set params get Create Component dependencies name name System get Security Manager null invoke Accessibly inject Metadata get Method params else Access Controller Privileged Privileged Action Object invoke Accessibly inject Metadata get Method params Retrieves component one exists attempts find factory capable constructing component factories annotated link Default Factory annotation capable creating component class p instance needs constructed dependencies automatically wired instance based methods component type annotated link Inject p Summing component retrieval happens following order br Look component already created registered Look appropriate component exists link Configuration may injected external system Look class definition passed link Configuration Eviction Policy implementation Attempt create looking appropriate factory annotated link Default Factory p param component Class type component retrieved null return fully wired component instance null one found constructed throws Cache Configuration Exception problem constructing wiring instance protected synchronized get Create Component Class component Class return get Create Component component Class component Class get Name true protected get Create Component Class component Class String name return get Create Component component Class name false Suppress Warnings unchecked protected synchronized get Create Component Class component Class String name boolean name debug Stack push name Object component Component old Wrapper lookup Component component Class get Name name name old Wrapper null component unwrap Component old Wrapper else create component add registry Abstract Component Factory factory get Factory component Class get Log tracef Creating component factory name factory get Class component factory instanceof Named Component Factory Named Component Factory factory construct component Class name factory construct component Class component null register Component component name name else get Log tracef Registering null component name register Null Component name debug Stack pop return component Retrieves component factory instance capable constructing components specified type factory n exist registry one created param component Class type component construct return component factory capable constructing components protected synchronized Abstract Component Factory get Factory Class component Class get Log tracef Looking factory class component Class String cf Class get Component Metadata Repo find Factory Component component Class cf Class null throw Stack Aware Configuration Exception registered default factory component component Class found component factory component See one created exists registry Abstract Component Factory cf get Component cf Class cf null cf create Component Factory Internal component Class cf Class ensure component factory state Component c lookup Component cf Class cf Class true c instance cf throw Stack Aware Configuration Exception Component factory cf Class incorrectly registered return cf protected synchronized Abstract Component Factory create Component Factory Internal Class component Class String cf Class first check might created another thread Abstract Component Factory component get Component cf Class component null return component n yet created Create put registry get Log tracef Creating factory component cf Class component Class Abstract Component Factory cf instantiate Factory cf Class cf null throw Stack Aware Configuration Exception Unable locate component factory component component Class simply register factory Registration take care constructing dependencies register Component cf cf Class return cf protected Component lookup Component String component Class Name String component Name boolean name return component Lookup get component Name thing meta factory yet Factories created using method attempts use empty public constructor param factory Name classname factory created return factory instance Abstract Component Factory instantiate Factory String factory Name Class factory Util load Class factory Name get Class get Class Loader Auto Instantiable Factory class Assignable factory try return Abstract Component Factory factory new Instance catch Exception e unable get hold instance throw new Cache Configuration Exception Unable instantiate factory factory Debug stack debug Stack e else throw new Cache Configuration Exception auto instantiate factory factory n implement Auto Instantiable Factory class get Simple Name Debug stack debug Stack registers special null component dependencies param name name component register null protected synchronized final void register Null Component String name register Component name false Retrieves configuration component return Configuration object protected Configuration get Configuration assumed always present part bootstrap construction Component Registry return get Component Configuration class Retrieves component specified type registry null found param type type find return component null Suppress Warnings unchecked public get Component Class type String class Name type get Name return get Component class Name class Name true Suppress Warnings unchecked public get Component String component Class Name return get Component component Class Name component Class Name true Suppress Warnings unchecked public get Component String component Class Name String name return get Component component Class Name name false Suppress Warnings unchecked public get Component Class component Class String name return get Component component Class get Name name false Suppress Warnings unchecked public get Component String component Class Name String name boolean name Component wrapper lookup Component component Class Name name name wrapper null return null return unwrap Component wrapper public Optional get Optional Component Class type return Optional Nullable get Component type Get component wrapper properly handling code null code components private Object unwrap Component Component wrapper return wrapper instance null wrapper instance Registers default class loader method must called components registered typically called bootstrap code Defensively called constructor Component Registry null parameter param loader class loader use default null class loader used load instance Component Registry used protected Class Loader register Default Class Loader Class Loader loader Class Loader loader Use loader null get Class get Class Loader loader register Component loader Use Class Loader class make sure class loader non volatile survives restarts component Lookup get Class Loader class get Name survives Restarts true return loader Use Rewires components Used rewire components cache stopped moved state would almost empty registry components Rewiring inject dependencies cache started p public void rewire need inject everything Component c new Hash Set component Lookup values inject dependencies component c inject Dependencies Scans registered component lifecycle methods adds appropriate lists sorts priority private void populate Lifecycle Methods Component c component Lookup values populate Life Cycle Methods c private Prioritized Method process Prioritized Methods Component Metadata Prioritized Method Metadata method Metadata Class component Class Component c Prioritized Method retval int num Start Methods method Metadata length num Start Methods retval else retval new Prioritized Method num Start Methods int num Start Methods retval new Prioritized Method retval component c retval metadata method Metadata method Metadata get Method null Method method Reflection Util find Method component Class method Metadata get Method Name method Metadata set Method method retval length Arrays sort retval return retval private void populate Life Cycle Methods Component c c methods Scanned c methods Scanned true Class component Class c instance get Class methods first c start Methods process Prioritized Methods c metadata get Start Methods component Class c methods next c post Start Methods process Prioritized Methods c metadata get Post Start Methods component Class c methods c stop Methods process Prioritized Methods c metadata get Stop Methods component Class c Removes components annotated Survives Restarts public synchronized void reset Volatile Components destroy components clean resources get Log tracef Resetting volatile components Component c new Hash Set component Lookup values component volatile c metadata Survives Restarts get Log tracef Removing volatile component c name component Lookup remove c name trace get Log tracef Reset volatile components Registry contains component Lookup key Set Publicly available lifecycle methods methods perform check appropriate transition delegate similarly named internal methods starts components registry connecting channels starting service threads etc component link org lifecycle Component Status state initialized first Override public void start state Component Status try internal Start catch Throwable handle Lifecycle Transition Failure protected void post Start List Prioritized Method methods new Array List component Lookup size Component c component Lookup values Collections add methods c post Start Methods fire methods according priority invoke Prioritized Methods methods Stops component sets status link org lifecycle Component Status done component link org lifecycle Component Status state op Override public synchronized void stop state stop Allowed get Log debugf Ignoring call stop current state state return Trying stop valid may work boolean failed state Component Status try internal Stop catch Throwable failed get Log failed Call Stop Failure failed true handle Lifecycle Transition Failure finally failed state Component Status Publicly available lifecycle methods Actual internal lifecycle methods Sets cache Status throws problem one declared types Converts non Runtime Exception Exception Cache Exception param throwable thrown failure private void handle Lifecycle Transition Failure Throwable state Component Status get Cause null get Cause instanceof Cache Configuration Exception throw Cache Configuration Exception get Cause else get Cause null get Cause instanceof Invocation Target Exception get Cause get Cause null get Cause get Cause instanceof Cache Configuration Exception throw Cache Configuration Exception get Cause get Cause else instanceof Cache Exception throw Cache Exception else instanceof Runtime Exception throw Runtime Exception else instanceof Error throw Error else throw new Cache Exception private void internal Start throws Cache Exception Illegal Argument Exception start internal components first cache start stop destroy methods populate Lifecycle Methods List Prioritized Method methods new Array List component Lookup size Component c component Lookup values Collections add methods c start Methods fire methods according priority invoke Prioritized Methods methods add Shutdown Hook state Component Status private void invoke Prioritized Methods List Prioritized Method methods boolean trace Enabled get Log Trace Enabled sort methods priority Collections sort methods Prioritized Method em methods trace Enabled get Log tracef Invoking method component em metadata em component get Name em invoke protected void add Shutdown Hook op Override needed protected void remove Shutdown Hook op Override needed Actual stop private void internal Stop state Component Status remove Shutdown Hook List Prioritized Method stop Methods new Array List component Lookup size Component c component Lookup values one components threw exception startup stop methods list may initialized c stop Methods null Collections add stop Methods c stop Methods Collections sort stop Methods fire methods according priority boolean trace Enabled get Log Trace Enabled Prioritized Method em stop Methods trace Enabled get Log tracef Invoking stop method component em metadata em component get Name try em invoke catch Throwable get Log component Failed Stop reset Volatile Components Actual internal lifecycle methods Asserts whether invocations allowed cache Returns tt true tt invocations allowed tt false tt otherwise origin call remote cache status link org lifecycle Component Status method block link org configuration cache State Transfer Configuration timeout millis checking valid state param origin Local true call originates locally e link org cache impl Cache Impl false originates remotely e link org remoting inboundhandler Inbound Invocation Handler return true invocations allowed false otherwise public boolean invocations Allowed boolean origin Local get Log trace Testing invocations allowed state allow Invocations return true locally originating call cache valid state return false origin Local return false get Log trace remotely originating else remote call status wait cache starts state Component Status get Log trace Cache initializing block try block Cache Starts return true catch Interrupted Exception e Thread current Thread interrupt else get Log cache Started return false Blocks current cache instance link org lifecycle Component Status started phase Blocks link org configuration cache State Transfer Configuration timeout milliseconds throwing Illegal State Exception cache n reach state even maximum wait time throws Interrupted Exception interrupted waiting throws Illegal State Exception even waiting cache started private void block Cache Starts throws Interrupted Exception Illegal State Exception int poll Frequency Time Service time Service get Time Service final long startup Wait Time get Configuration clustering state Transfer timeout final long give Time time Service expected End Time startup Wait Time Time Unit time Service Time Expired give Time state allow Invocations break Thread sleep poll Frequency check started state allow Invocations throw new Illegal State Exception Cache state even waiting startup Wait Time millis Returns immutable set containing components exists repository moment return set components public Set Component get Registered Components Hash Set Component defensive Copy new Hash Set component Lookup values return Collections unmodifiable Set defensive Copy Override public Abstract Component Registry clone throws Clone Supported Exception Abstract Component Registry dolly Abstract Component Registry super clone dolly state Component Status return dolly public abstract Time Service get Time Service wrapper representing component registry public class Component reference object instance component Object instance name component String name boolean methods Scanned List injection methods used inject dependencies component Component Metadata Inject Metadata injection Methods Prioritized Method start Methods Prioritized Method post Start Methods Prioritized Method stop Methods Component Metadata metadata Override public String String return Component instance instance name name Injects dependencies component public void inject Dependencies injection Methods null injection Methods length Component Metadata Inject Metadata inject Metadata injection Methods invoke Injection Method instance inject Metadata public Object get Instance return instance public String get Name return name public Component Metadata get Metadata return metadata public void build Injection Methods List throws Class Found Exception injection Methods metadata get Inject Methods injection Methods null injection Methods length Class clazz instance get Class Component Metadata Inject Metadata meta injection Methods Class parameter Classes meta get Parameter Classes parameter Classes null parameter Classes Reflection Util Class Array meta get Parameters get Class Loader meta set Parameter Classes parameter Classes Method meta get Method null try Reflection Util find Method clazz meta get Method Name parameter Classes catch Cache Exception e throw new Cache Exception Injection method found class clazz meta get Method Name Arrays String parameter Classes e meta set Method Wrapper encapsulate method along priority static class Prioritized Method implements Comparable Prioritized Method Component Metadata Prioritized Method Metadata metadata Component component Override public int compare Prioritized Method int Val metadata get Priority int another Val metadata get Priority return Val another Val Val another Val Override public boolean equals Object return true instanceof Prioritized Method return false Prioritized Method Prioritized Method component null component equals component component null return false return metadata null metadata equals metadata metadata null Override public int hash Code int result metadata null metadata hash Code result result component null component hash Code return result void invoke invoke Accessibly component instance metadata get Method null Override public String String return Prioritized Method method metadata priority metadata get Priority protected void throw Stack Aware Configuration Exception String message debug Stack null throw new Cache Configuration Exception message get detail set system property true else throw new Cache Configuration Exception message Debug stack debug Stack
package org client hotrod configuration import java util Properties import org client hotrod Protocol Version import org client hotrod impl consistenthash Consistent Hash import org client hotrod impl transport Transport Factory import org client hotrod impl transport tcp Failover Request Balancing Strategy import org commons marshall Marshaller Abstract Configuration Child Builder author Tristan Tarrant since public abstract class Abstract Configuration Child Builder implements Configuration Child Builder final Configuration Builder builder protected Abstract Configuration Child Builder Configuration Builder builder builder builder Override public Server Configuration Builder add Server return builder add Server Override public Cluster Configuration Builder add Cluster String cluster Name return builder add Cluster cluster Name Override public Configuration Builder add Servers String servers return builder add Servers servers Override public Executor Factory Configuration Builder async Executor Factory return builder async Executor Factory Override public Configuration Builder balancing Strategy String balancing Strategy return builder balancing Strategy balancing Strategy Override public Configuration Builder balancing Strategy Class extends Failover Request Balancing Strategy balancing Strategy return builder balancing Strategy balancing Strategy Override public Configuration Builder balancing Strategy Failover Request Balancing Strategy balancing Strategy return builder balancing Strategy balancing Strategy Override public Configuration Builder class Loader Class Loader class Loader return builder class Loader class Loader Override public Configuration Builder client Intelligence Client Intelligence client Intelligence return builder client Intelligence client Intelligence Override public Connection Pool Configuration Builder connection Pool return builder connection Pool Override public Configuration Builder connection Timeout int connection Timeout return builder connection Timeout connection Timeout Override public Configuration Builder consistent Hash Impl int version Class extends Consistent Hash consistent Hash Class return builder consistent Hash Impl version consistent Hash Class Override public Configuration Builder consistent Hash Impl int version String consistent Hash Class return builder consistent Hash Impl version consistent Hash Class Override public Configuration Builder force Return Values boolean force Return Values return builder force Return Values force Return Values Override public Configuration Builder key Size Estimate int key Size Estimate return builder key Size Estimate key Size Estimate Override public Configuration Builder marshaller String marshaller return builder marshaller marshaller Override public Configuration Builder marshaller Class extends Marshaller marshaller return builder marshaller marshaller Override public Configuration Builder marshaller Marshaller marshaller return builder marshaller marshaller deprecated Use link version Protocol Version instead Deprecated Override public Configuration Builder protocol Version String protocol Version return builder version Protocol Version parse Version protocol Version Override public Configuration Builder version Protocol Version protocol Version return builder version protocol Version Override public Configuration Builder socket Timeout int socket Timeout return builder socket Timeout socket Timeout Override public Security Configuration Builder security return builder security Override public Configuration Builder tcp Delay boolean tcp Delay return builder tcp Delay tcp Delay Override public Configuration Builder tcp Keep Alive boolean tcp Keep Alive return builder tcp Keep Alive tcp Keep Alive Override public Configuration Builder transport Factory String transport Factory return builder transport Factory transport Factory Override public Configuration Builder transport Factory Class extends Transport Factory transport Factory return builder transport Factory transport Factory Override public Configuration Builder value Size Estimate int value Size Estimate return builder value Size Estimate value Size Estimate Override public Configuration Builder max Retries int retries Per Server return builder max Retries retries Per Server Override public Configuration Builder add Java Serial White List String reg Exs return builder add Java Serial White List reg Exs Override public Configuration Builder batch Size int batch Size return builder batch Size batch Size Override public Configuration Builder Properties Properties properties return builder Properties properties Override public Configuration build return builder build
package org commands read import static org commons util Enum Util pretty Print Bit Set import static org commons util Util Str import java util Objects import org commands Data Command import org context Flag author Mircea Markus jboss com author Sanne Grinovero sanne hibernate org Red Hat Inc since public abstract class Abstract Data Command implements Data Command protected Object key private long flags private int topology Id protected Abstract Data Command Object key long flags Bit Set key key flags flags Bit Set protected Abstract Data Command Override public int get Topology Id return topology Id Override public void set Topology Id int topology Id topology Id topology Id Override public long get Flags Bit Set return flags Override public void set Flags Bit Set long bit Set flags bit Set Override public Object get Key return key public void set Key Object key key key Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Abstract Data Command Abstract Data Command obj return flags flags Objects equals key key Override public int hash Code return key null key hash Code Override public String String return get Class get Simple Name key Str key flags print Flags Override public boolean Return Value Expected return true Override public boolean Block return false protected final String print Flags return pretty Print Bit Set flags Flag class
package org commands write import java util Collection import java util Collections import org commands Command Invocation Id import org commands read Abstract Data Command import org context impl Flag Bit Sets import org util concurrent locks Remote Lock Command Stuff common Write Commands author Manik Surtani since public abstract class Abstract Data Write Command extends Abstract Data Command implements Data Write Command Remote Lock Command protected Command Invocation Id command Invocation Id protected Abstract Data Write Command protected Abstract Data Write Command Object key long flags Bit Set Command Invocation Id command Invocation Id super key flags Bit Set command Invocation Id command Invocation Id Override public Collection get Affected Keys return Collections singleton key Override public boolean Return Value Expected return Flag Flag Bit Sets Flag Bit Sets Override public boolean Block return true Override public Collection get Keys Lock return get Affected Keys Override public final Object get Key Lock Owner return command Invocation Id Override public final boolean Zero Lock Acquisition return Flag Flag Bit Sets Override public final boolean Skip Locking return Flag Flag Bit Sets Override public Command Invocation Id get Command Invocation Id return command Invocation Id
package org deprecated Extend link org cache impl Abstract Delegating Advanced Cache instead class removed future Deprecated public class Abstract Delegating Advanced Cache extends org cache impl Abstract Delegating Advanced Cache public Abstract Delegating Advanced Cache Advanced Cache cache super cache public Abstract Delegating Advanced Cache Advanced Cache cache Advanced Cache Wrapper wrapper super cache wrapper
package org deprecated Extend link org cache impl Abstract Delegating Cache instead class removed future Deprecated public class Abstract Delegating Cache extends org cache impl Abstract Delegating Cache public Abstract Delegating Cache Cache cache super cache
package org commons marshall Base class link Advanced Externalizer implementations offers default implementations methods particular base class offers default implementation link org commons marshall Advanced Externalizer get Id returns null particularly useful advanced externalizers whose id provided programmatic configuration rather externalizer implementation author Galder Zamarre since public abstract class Abstract Externalizer implements Advanced Externalizer Override public Integer get Id return null
package org configuration global import java util List import org commons configuration Builder abstract class Abstract Global Configuration Builder implements Global Configuration Child Builder private final Global Configuration Builder global Config protected Abstract Global Configuration Builder Global Configuration Builder global Config global Config global Config protected Global Configuration Builder get Global Config return global Config Override public Transport Configuration Builder transport return global Config transport Override public Global Jmx Statistics Configuration Builder global Jmx Statistics global Config global Jmx Statistics enable return global Config global Jmx Statistics Override public Global State Configuration Builder global State global Config global State enable return global Config global State Override public Serialization Configuration Builder serialization return global Config serialization Override public Thread Pool Configuration Builder listener Thread Pool return global Config listener Thread Pool Override public Thread Pool Configuration Builder async Thread Pool return global Config async Thread Pool Override public Thread Pool Configuration Builder replication Queue Thread Pool return global Config replication Queue Thread Pool Deprecated Override public Thread Pool Configuration Builder eviction Thread Pool return global Config expiration Thread Pool Override public Thread Pool Configuration Builder expiration Thread Pool return global Config expiration Thread Pool Override public Thread Pool Configuration Builder persistence Thread Pool return global Config persistence Thread Pool Override public Thread Pool Configuration Builder state Transfer Thread Pool return global Config state Transfer Thread Pool Override public Global Security Configuration Builder security return global Config security Override public Shutdown Configuration Builder shutdown return global Config shutdown Override public Site Configuration Builder site return global Config site Override public List Builder modules return global Config modules Override public Global Configuration Builder default Cache Name String default Cache Name return global Config default Cache Name default Cache Name Override public Global Configuration build return global Config build
package org container entries import java util Map import java util Objects import org container Data Container import org metadata Metadata abstract internal cache entry typically stored data container author Manik Surtani since public abstract class Abstract Internal Cache Entry implements Internal Cache Entry protected Object key protected Abstract Internal Cache Entry protected Abstract Internal Cache Entry Object key key key Override public final void commit Data Container container op Override public void set Changed boolean changed op Override public final void set Created boolean created op Override public final void set Removed boolean removed op Override public final void set Evicted boolean evicted op Override public void set Skip Lookup boolean skip Lookup op Override public final boolean Null return false Override public final boolean Changed return false Override public final boolean Created return false Override public final boolean Removed return false Override public final boolean Evicted return true Override public boolean skip Lookup return true Override public Metadata get Metadata return null Override public void set Metadata Metadata metadata op Override public final Object get Key return key Override public boolean Entry return false Override public String String return get Class get Simple Name key key Override public Abstract Internal Cache Entry clone try return Abstract Internal Cache Entry super clone catch Clone Supported Exception e throw new Runtime Exception never happen e Override public final boolean equals Object return true null instanceof Map Entry return false Map Entry Map Entry return Objects equals get Key get Key Objects equals get Value get Value Override public final int hash Code return Objects hash Code get Key Objects hash Code get Value
package org context impl import org container entries Cache Entry import org container entries Internal Cache Entry import org context Invocation Context import org remoting transport Address Common features transaction invocation contexts author Manik Surtani author Mircea Markus jboss com since public abstract class Abstract Invocation Context implements Invocation Context private final Address origin protected Abstract Invocation Context Address origin origin origin Override public final Address get Origin return origin Override public boolean Origin Local return origin null Override public boolean Locked Key Object key return get Locked Keys contains key Override public final Class Loader get Class Loader return null Override public final void set Class Loader final Class Loader class Loader op Override public boolean Entry Removed Context final Object key Cache Entry ce lookup Entry key return ce null ce Removed ce Changed deprecated Since longer used Deprecated protected void Entry Value Replaced final Object key final Internal Cache Entry cache Entry Override public Invocation Context clone try return Invocation Context super clone catch Clone Supported Exception e throw new Illegal State Exception Impossible e
package org commons marshall jboss import static org commons util Reflection Util import static org commons util Util import java io Byte Array Input Stream import java io Exception import java io Input Stream import java io Object Input import java io Object Output import java io Output Stream import java io Serializable import java lang reflect Method import java net import org commons io Byte Buffer import org commons io Byte Buffer Impl import org commons io Exposed Byte Array Output Stream import org commons logging Log import org commons logging Log Factory import org commons marshall Abstract Marshaller import org commons marshall Streaming Marshaller import org commons util concurrent Concurrent Weak Key Hash Map import org jboss marshalling Exception Listener import org jboss marshalling Marshalling import org jboss marshalling Marshalling Configuration import org jboss marshalling Trace Information import org jboss marshalling Unmarshaller Common parent embedded standalone Boss Marshalling based marshallers author Galder Zamarre author Sanne Grinovero author Dan Berindei since public abstract class Abstract Boss Marshaller extends Abstract Marshaller implements Streaming Marshaller protected static final Log log Log Factory get Log Abstract Boss Marshaller class protected static final boolean trace log Trace Enabled protected static final Boss Marshaller Factory factory new Boss Marshaller Factory protected static final int protected static final int private static final int private static final int protected final Marshalling Configuration base Cfg Marshaller thread local non internal marshaller usages Java Hot Rod client singleton shared urgent need static clears pretty much state finish urgent need clear thread local since n leaking might take long time warmup pre initialize needed instances private final Concurrent Weak Key Hash Map Thread Per Thread Instance Holder marshaller new Concurrent Weak Key Hash Map Thread Per Thread Instance Holder public Abstract Boss Marshaller Class resolver set marshaller unmarshaller created base Cfg new Marshalling Configuration base Cfg set Exception Listener new Debugging Exception Listener base Cfg set Class Externalizer Factory new Serialize Ext Factory base Cfg set Instance Count base Cfg set Class Count base Cfg set Version Override final public void object Object Stream final Object obj final Object Output throws Exception write Object obj Override final protected Byte Buffer object Buffer final Object final int estimated Size throws Exception Exposed Byte Array Output Stream baos new Exposed Byte Array Output Stream estimated Size Object Output marshaller start Object Output baos false estimated Size try object Object Stream marshaller finally finish Object Output marshaller return new Byte Buffer Impl baos get Raw Buffer baos size Override final public Object Output start Object Output final Output Stream os final boolean Reentrant final int estimated Size throws Exception Per Thread Instance Holder instance Holder get Per Thread Instance Holder org jboss marshalling Marshaller marshaller instance Holder get Marshaller estimated Size marshaller start Marshalling create Byte Output os return marshaller Override final public void finish Object Output final Object Output oo try trace log trace Stop marshaller org jboss marshalling Marshaller oo finish catch Exception ignored Override final public Object object Byte Buffer final byte buf final int offset final int length throws Exception Class Found Exception Byte Array Input Stream new Byte Array Input Stream buf offset length Object Input unmarshaller start Object Input false Object null try object Object Stream unmarshaller finally finish Object Input unmarshaller return Override final public Object Input start Object Input final Input Stream final boolean Reentrant throws Exception Per Thread Instance Holder instance Holder get Per Thread Instance Holder Unmarshaller unmarshaller instance Holder get Unmarshaller trace log tracef Start unmarshaller retrieving marshaller Reentrant factory thread local unmarshaller start Marshalling create Byte Input return unmarshaller Override final public Object object Object Stream final Object Input throws Exception Class Found Exception return read Object Override final public void finish Object Input final Object Input oi try trace log trace Stop unmarshaller oi null Unmarshaller oi finish catch Exception ignored Override public boolean Marshallable Object throws Exception Class clazz get Class boolean contains Marshallable marshallable Type Hints Known Marshallable clazz contains Marshallable boolean marshallable marshallable Type Hints Marshallable clazz trace log tracef Marshallable type known marshallable b clazz get Name marshallable return marshallable else Marshallable Candidate boolean Marshallable true try object Buffer catch Exception e Marshallable false throw e finally marshallable Type Hints mark Marshallable clazz Marshallable return Marshallable return false Override public void start op Override public void stop Clear class cache marshallable Type Hints clear marshaller clear protected boolean Marshallable Candidate Object return instanceof Serializable private Per Thread Instance Holder get Per Thread Instance Holder final Thread thread Thread current Thread Per Thread Instance Holder holder marshaller get thread holder null holder new Per Thread Instance Holder base Cfg clone marshaller put thread holder null throw new Illegal State Exception return holder protected static final class Debugging Exception Listener implements Exception Listener private static final Override public void handle Marshalling Exception final Throwable problem final Object subject log Debug Enabled Trace Information add User Information problem String subject String Override public void handle Unmarshalling Exception final Throwable problem final Class subject Class log Debug Enabled String Builder builder new String Builder Class Loader cl subject Class get Class Loader builder append classloader hierarchy Class Loader parent cl parent null parent equals cl builder append n type classloader append parent else builder append n parent classloader append parent urls get Class Loader Ls parent urls null u urls builder append n append u parent parent get Parent Trace Information add User Information problem builder String Override public void handle Unmarshalling Exception Throwable problem op private static get Class Loader Ls final Class Loader cl urls try Class return Type urls get Class Class parameter Types Method get Ls cl get Class get Method get Ls parameter Types return Type Assignable get Ls get Return Type Object args urls get Ls invoke cl args catch Exception ignore return urls private static final class Per Thread Instance Holder implements River Close Listener final Marshalling Configuration configuration final Extended River Marshaller reusable Marshaller new Extended River Marshaller int available Marshaller Index final Extended River Unmarshaller reusable Un Marshaller new Extended River Unmarshaller int available Un Marshaller Index Per Thread Instance Holder final Marshalling Configuration thread Dedicated Configuration configuration thread Dedicated Configuration Unmarshaller get Unmarshaller throws Exception opposing get Marshaller int case n good hint initial buffer sizing available Un Marshaller Index pool threshold make throw away usage Marshaller configuration set Buffer Size reset default might changed get Marshaller return factory create Unmarshaller configuration else Extended River Unmarshaller un Marshaller reusable Un Marshaller available Un Marshaller Index un Marshaller null available Un Marshaller Index return un Marshaller else configuration set Buffer Size reset default might changed get Marshaller un Marshaller factory create Unmarshaller configuration un Marshaller set Close Listener reusable Un Marshaller available Un Marshaller Index un Marshaller available Un Marshaller Index return un Marshaller Extended River Marshaller get Marshaller int estimated Size throws Exception available Marshaller Index pool threshold make throw away usage Marshaller setting buffer cheap possible configuration set Buffer Size estimated Size return factory create Marshaller configuration else Extended River Marshaller marshaller reusable Marshaller available Marshaller Index marshaller null available Marshaller Index return marshaller else going pool one make sure buffer size set reasonable value might changed previously configuration set Buffer Size marshaller factory create Marshaller configuration marshaller set Close Listener reusable Marshaller available Marshaller Index marshaller available Marshaller Index return marshaller Override public void close Marshaller available Marshaller Index Override public void close Unmarshaller available Un Marshaller Index
package org jmx import java util Set import javax management Bean Server import org configuration global Global Configuration import org factories Abstract Component Registry Parent class top level component registration author Galder Zamarre since public abstract class Abstract Jmx Registration String jmx Domain Bean Server Bean Server Global Configuration global Config protected abstract Components Jmx Registration build Registrar Set Abstract Component Registry Component components Registers set Bean components returns true successfully registered false otherwise param components components register param global Config global configuration return true successfully registered false otherwise protected boolean register Beans Set Abstract Component Registry Component components Global Configuration global Config try Bean Server Jmx Util lookup Bean Server global Config catch Exception e Bean Server null Bean Server null Components Jmx Registration registrar build Registrar components registrar register Beans return true else return false protected void unregister Beans Set Abstract Component Registry Component components Bean Server null Components Jmx Registration registrar build Registrar components registrar unregister Beans
package org notifications impl import java lang annotation Annotation import java lang ref Weak Reference import java lang reflect Invocation Target Exception import java lang reflect Method import java security Access Controller import java security Privileged Action import java security Privileged Action Exception import java security Privileged Exception Action import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Set import java util concurrent Executor Service import javax security auth Subject import javax transaction Transaction import org commons Cache Exception import org commons util Reflection Util import org factories Known Component Names import org factories annotations Component Name import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org notifications Incorrect Listener Exception import org notifications Listener import org notifications cachelistener annotation Cache Entry Created import org notifications cachelistener annotation Cache Entry Expired import org notifications cachelistener annotation Cache Entry Modified import org notifications cachelistener annotation Cache Entry Removed import org security Security import org util concurrent Within Thread Executor import org util logging Log Functionality common link org notifications cachemanagerlistener Cache Manager Notifier Impl link org notifications cachelistener Cache Notifier Impl param Defines type event used subclass param Defines type Listener Invocations subclasses use author Manik Surtani author William Burns public abstract class Abstract Listener Impl extends Listener Invocation protected final Map Class extends Annotation List listeners Map new Hash Map f protected abstract class Abstract Invocation Builder protected Object target protected Method method protected Class extends Annotation annotation protected boolean sync protected Class Loader class Loader protected Subject subject public Object get Target return target public Method get Method return method public Abstract Invocation Builder set Annotation Class extends Annotation annotation annotation annotation return public boolean Sync return sync public Class Loader get Class Loader return class Loader public Subject get Subject return subject public Abstract Invocation Builder set Target Object target target target return public Abstract Invocation Builder set Method Method method method method return public Abstract Invocation Builder set Sync boolean sync sync sync return public Abstract Invocation Builder set Class Loader Class Loader class Loader class Loader class Loader return public Abstract Invocation Builder set Subject Subject subject subject subject return public abstract build two separate executor services one sync one async listeners protected Executor Service sync Processor protected Executor Service async Processor Inject Suppress Warnings unused void inject Executor Component Name Known Component Names Executor Service executor async Processor executor Start priority public void start sync Processor new Within Thread Executor Removes listeners notifier Stop priority public void stop List list listeners Map values list null list clear sync Processor null sync Processor shutdown protected abstract Log get Log protected abstract Map Class extends Annotation Class get Allowed Method Annotations Listener l protected List get Listener Collection Annotation Class extends Annotation annotation List list listeners Map get annotation list null throw new Cache Exception Unknown listener annotation annotation return list public void remove Listener Object listener Class extends Annotation annotation get Allowed Method Annotations test Listener Class Validity listener get Class key Set remove Listener Invocation annotation listener protected Set remove Listener Invocation Class extends Annotation annotation Object listener List l get Listener Collection Annotation annotation Set marked Removal new Hash Set li l listener equals li get Target marked Removal add li l remove marked Removal return marked Removal public Set Object get Listeners Set Object result new Hash Set Object listeners Map size List list listeners Map values Listener Invocation li list result add li get Target return Collections unmodifiable Set result Loops valid methods object passed caches relevant methods link Listener Invocation invocation reflection builder provided used create listener invocations method set target subject sync methods needed values needed set invoked passing method param listener object considered listener param builder builder use build invocation return code true annotated listener methods found code false otherwise protected boolean validate Add Listener Invocations Object listener Abstract Invocation Builder builder Listener l test Listener Class Validity listener get Class boolean found Methods false builder set Target listener builder set Subject Security get Subject builder set Sync l sync Map Class extends Annotation Class allowed Listeners get Allowed Method Annotations l try methods listener anything like Note methods scanned Method listener get Class get Methods Skip bridge methods n want count well Synthetic Bridge loop valid method annotations Map Entry Class extends Annotation Class annotation Entry allowed Listeners entry Set final Class extends Annotation annotation Class annotation Entry get Key Annotation Present annotation Class final Class event Class annotation Entry get Value test Listener Method Validity event Class annotation Class get Name System get Security Manager null set Accessible true else Access Controller Privileged Privileged Action Void set Accessible true return null builder set Method builder set Annotation annotation Class invocation builder build get Log tracef Add listener invocation invocation annotation Class get Listener Collection Annotation annotation Class add invocation found Methods true found Methods get Log Annotate Methods Found Listener listener get Class return found Methods protected boolean validate Add Filter Listener Invocations Object listener Abstract Invocation Builder builder Set Class extends Annotation filter Annotations Listener l test Listener Class Validity listener get Class boolean found Methods false builder set Target listener builder set Subject Security get Subject builder set Sync l sync Map Class extends Annotation Class allowed Listeners get Allowed Method Annotations l try methods listener anything like Note methods scanned Method listener get Class get Methods Skip bridge methods n want count well Synthetic Bridge loop valid method annotations Map Entry Class extends Annotation Class annotation Entry allowed Listeners entry Set final Class extends Annotation annotation Class annotation Entry get Key Annotation Present annotation Class Apply filter Annotations annotation Class final Class event Class annotation Entry get Value test Listener Method Validity event Class annotation Class get Name System get Security Manager null set Accessible true else Access Controller Privileged Privileged Action Void set Accessible true return null builder set Method builder set Annotation annotation Class invocation builder build get Log tracef Add listener invocation invocation annotation Class get Listener Collection Annotation annotation Class add invocation found Methods true found Methods get Log Annotate Methods Found Listener listener get Class return found Methods public boolean Apply Set Class extends Annotation filter Annotations Class extends Annotation annotation Class Annotations View Change Transaction Completed applied regardless return annotation Class Cache Entry Created class annotation Class Cache Entry Modified class annotation Class Cache Entry Removed class annotation Class Cache Entry Expired class filter Annotations contains annotation Class protected Set Class extends Annotation find Listener Callbacks Object listener Partly duplicates validate Add Listener Invocations Set Class extends Annotation listener Interests new Hash Set Listener l test Listener Class Validity listener get Class Map Class extends Annotation Class allowed Listeners get Allowed Method Annotations l Method listener get Class get Methods Skip bridge methods n want count well Synthetic Bridge loop valid method annotations Map Entry Class extends Annotation Class annotation Entry allowed Listeners entry Set final Class extends Annotation annotation Class annotation Entry get Key Annotation Present annotation Class final Class event Class annotation Entry get Value test Listener Method Validity event Class annotation Class get Name System get Security Manager null set Accessible true else Access Controller Privileged Privileged Action Void set Accessible true return null listener Interests add annotation Class return listener Interests Tests class properly annotated Cache Listener returns Listener annotation param listener Class class inspect return Listener annotation protected static Listener test Listener Class Validity Class listener Class Listener l Reflection Util get Annotation listener Class Listener class l null throw new Incorrect Listener Exception String format Cache listener class must annotated org notifications Listener listener Class get Name return l protected static void test Listener Method Validity Method Class allowed Parameter String annotation Name get Parameter Types length get Parameter Types Assignable allowed Parameter throw new Incorrect Listener Exception Methods annotated annotation Name must accept exactly one parameter assignable type allowed Parameter get Name get Return Type equals void class throw new Incorrect Listener Exception Methods annotated annotation Name return type void protected abstract Transaction suspend Needed protected abstract void resume Needed Transaction transaction Class encapsulates valid invocation given registered listener containing reference method invoked well target object protected class Listener Invocation Impl implements Listener Invocation public final Object target public final Method method public final boolean sync public final Weak Reference Class Loader class Loader public final Subject subject public Listener Invocation Impl Object target Method method boolean sync Class Loader class Loader Subject subject target target method method sync sync class Loader new Weak Reference class Loader subject subject Override public void invoke final event Runnable r Class Loader context Class Loader null Transaction transaction suspend Needed class Loader get null context Class Loader Security Actions set Context Class Loader class Loader get try subject null try Security subject Privileged Exception Action Void n want print Subject could sensitive information get Log tracef Invoking listener passing event using subject target event method invoke target event return null catch Privileged Action Exception e Throwable cause e get Cause cause instanceof Invocation Target Exception throw Invocation Target Exception cause else cause instanceof Illegal Access Exception throw Illegal Access Exception cause else throw new Invocation Target Exception cause else get Log tracef Invoking listener passing event target event method invoke target event catch Invocation Target Exception exception Throwable cause get Real Exception exception sync throw get Log exception Invoking Listener cause get Class get Name method target cause else get Log unable Invoke Listener Method method target cause catch Illegal Access Exception exception get Log unable Invoke Listener Method Remove Listener method target exception remove Listener target finally class Loader get null Security Actions set Context Class Loader context Class Loader resume Needed transaction sync sync Processor execute r else async Processor execute r Override public Object get Target return target private Throwable get Real Exception Throwable get Cause null return Throwable cause get Cause cause instanceof Runtime Exception cause instanceof Error return get Real Exception cause else return
package org stream impl local import java util Array Deque import java util Array List import java util Collection import java util Queue import java util Set import java util stream Base Stream import org commons util Closeable Iterator import org factories Component Registry import org stream impl intops Intermediate Operation import org stream impl intops Unordered Operation import org util logging Log import org util logging Log Factory Implements base operations required local stream stream populated public abstract class Abstract Local Cache Stream extends Base Stream extends implements Base Stream protected final Log log Log Factory get Log get Class protected final Stream Supplier stream Supplier protected final Component Registry registry protected final Collection Runnable Close Runnables protected final Queue Intermediate Operation intermediate Operations protected Set Integer segments Filter protected Set keys Filter protected boolean parallel public interface Stream Supplier extends Base Stream build Stream Set Integer segments Filter Set keys Filter Closeable Iterator removable Iterator Closeable Iterator real Iterator param stream Supplier param parallel param registry public Abstract Local Cache Stream Stream Supplier stream Supplier boolean parallel Component Registry registry stream Supplier stream Supplier registry registry Close Runnables new Array List intermediate Operations new Array Deque parallel parallel Abstract Local Cache Stream Abstract Local Cache Stream original stream Supplier Stream Supplier original stream Supplier registry original registry Close Runnables original Close Runnables intermediate Operations original intermediate Operations segments Filter original segments Filter keys Filter original keys Filter parallel original parallel protected final create Stream Base Stream stream stream Supplier build Stream segments Filter keys Filter parallel stream stream parallel Intermediate Operation int Op intermediate Operations int Op handle Injection registry stream int Op perform stream return stream Override public boolean Parallel return parallel Override public sequential parallel false return Override public parallel parallel true return Override public unordered intermediate Operations add new Unordered Operation return Override public Close Runnable close Handler Close Runnables add close Handler return Override public void close Close Runnables Runnable run
package org commands read import java io Exception import java io Object Input import java io Object Output import org commands Abstract Flag Affected Command import org commands Local Command Abstract class author Manik Surtani author Mircea Markus jboss com since public abstract class Abstract Local Command extends Abstract Flag Affected Command implements Local Command public byte get Command Id return op public final void write Object Output output throws Exception op public final void read Object Input input throws Exception Class Found Exception op public boolean Return Value Expected return false public boolean Block return false
package org interceptors locking import static org commons util Util Str import java util Array List import java util Arrays import java util Collection import java util concurrent Time Unit import java util stream Collectors import java util stream Stream import org commands Data Command import org commands Flag Affected Command import org commands Visitable Command import org commands functional Read Key Command import org commands functional Read Many Command import org commands functional Read Write Key Command import org commands functional Read Write Key Value Command import org commands functional Read Write Many Command import org commands functional Read Write Many Entries Command import org commands functional Write Key Command import org commands functional Write Key Value Command import org commands functional Write Many Command import org commands functional Write Many Entries Command import org commands read Get Command import org commands read Get Cache Entry Command import org commands read Get Key Value Command import org commands write Clear Command import org commands write Compute Command import org commands write Compute Absent Command import org commands write Data Write Command import org commands write Invalidate Command import org commands write Invalidate Command import org commands write Put Key Value Command import org commands write Put Map Command import org commands write Remove Command import org commands write Replace Command import org context Invocation Context import org context impl Flag Bit Sets import org factories annotations Inject import org interceptors Async Interceptor import org interceptors Invocation Finally Action import org util concurrent Timeout Exception import org util concurrent locks Lock Manager import org util logging Log Base class various locking interceptors package author Mircea Markus public abstract class Abstract Locking Interceptor extends Async Interceptor private final boolean trace get Log Trace Enabled protected Lock Manager lock Manager protected Clustering Dependent Logic cdl protected final Invocation Finally Action unlock Return Handler new Invocation Finally Action Override public void accept Invocation Context r Ctx Visitable Command r Command Object rv Throwable throwable throws Throwable lock Manager unlock r Ctx protected abstract Log get Log Inject public void set Dependencies Lock Manager lock Manager Clustering Dependent Logic cdl lock Manager lock Manager cdl cdl Override public final Object visit Clear Command Invocation Context ctx Clear Command command throws Throwable return invoke Next ctx command Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable command Flag Flag Bit Sets Cache put External Read non transactional return visit Non Tx Data Write Command ctx command return visit Data Write Command ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Compute Absent Command Invocation Context ctx Compute Absent Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return visit Data Read Command ctx command Override public Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return visit Data Read Command ctx command protected abstract Object visit Data Read Command Invocation Context ctx Data Command command throws Throwable protected abstract Object visit Data Write Command Invocation Context ctx Data Write Command command throws Throwable need method put External Read protected final Object visit Non Tx Data Write Command Invocation Context ctx Data Write Command command throws Throwable Object key Skip Locking command Lock Key key command get Key return invoke Next ctx command try lock Record ctx key get Lock Timeout Millis command catch Throwable lock Manager unlock ctx throw return invoke Next Finally ctx command unlock Return Handler Override public final Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable Skip Locking command return invoke Next ctx command try lock Record ctx Arrays List command get Keys get Lock Timeout Millis command catch Throwable lock Manager unlock ctx return invoke Next Finally ctx command unlock Return Handler Override public final Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable command Caused Local Write cdl get Address trace get Log trace Skipping invalidation write operation originated return null Skip Locking command return invoke Next ctx command final Object keys command get Keys keys null keys length return null Array List Object keys Invalidate new Array List keys length Object key keys try lock Record ctx key keys Invalidate add key catch Timeout Exception te get Log unable Lock Invalidate key cdl get Address keys Invalidate Empty return null command set Keys keys Invalidate Array return invoke Next Finally ctx command r Ctx r Command rv Invalidate Command r Command set Keys keys r Ctx Tx Scope lock Manager unlock r Ctx Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable return handle Write Many Command ctx command command get Map key Set command Forwarded Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Write Key Value Command Invocation Context ctx Write Key Value Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Write Key Command Invocation Context ctx Write Key Command command throws Throwable return visit Data Write Command ctx command Override public Object visit Read Key Command Invocation Context ctx Read Key Command command throws Throwable return visit Data Read Command ctx command Override public Object visit Write Many Entries Command Invocation Context ctx Write Many Entries Command command throws Throwable return handle Write Many Command ctx command command get Affected Keys command Forwarded Override public Object visit Write Many Command Invocation Context ctx Write Many Command command throws Throwable return handle Write Many Command ctx command command get Affected Keys command Forwarded Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable return handle Write Many Command ctx command command get Affected Keys command Forwarded Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable return handle Write Many Command ctx command command get Affected Keys command Forwarded Override public Object visit Get Command Invocation Context ctx Get Command command throws Throwable return handle Read Many Command ctx command command get Keys Override public Object visit Read Many Command Invocation Context ctx Read Many Command command throws Throwable return handle Read Many Command ctx command command get Keys protected abstract Object handle Read Many Command Invocation Context ctx Flag Affected Command command Collection keys throws Throwable protected abstract Object handle Write Many Command Invocation Context ctx Flag Affected Command command Collection keys boolean forwarded throws Throwable protected final long get Lock Timeout Millis Flag Affected Command command return command Flag Flag Bit Sets cache Configuration locking lock Acquisition Timeout protected final boolean Lock Key Object key primary owner acquires lock boolean Lock Lock Owner key trace get Log tracef lock owners key cdl get Address Str key Lock return Lock protected final boolean Lock Owner Object key return cdl get Cache Topology get Distribution key Primary protected final void lock Record Invocation Context context Object key long timeout throws Interrupted Exception context add Locked Key key lock Manager lock key context get Lock Owner timeout Time Unit lock protected final void lock Record Invocation Context context Stream keys long timeout throws Interrupted Exception lock Record context keys collect Collectors List timeout protected final void lock Record Invocation Context context Collection keys long timeout throws Interrupted Exception keys context add Locked Key lock Manager lock keys context get Lock Owner timeout Time Unit lock protected final boolean Skip Locking Flag Affected Command command return command Flag Flag Bit Sets
package org lifecycle import org configuration cache Configuration import org configuration global Global Configuration import org factories Component Registry import org factories Global Component Registry default op implementation link org lifecycle Module Lifecycle interface designed easy extension author Manik Surtani version deprecated since implement link Module Lifecycle instead Deprecated public class Abstract Module Lifecycle implements Module Lifecycle Override public void cache Manager Starting Global Component Registry gcr Global Configuration global Configuration op Override public void cache Manager Started Global Component Registry gcr op Override public void cache Manager Stopping Global Component Registry gcr op Override public void cache Manager Stopped Global Component Registry gcr op Override public void cache Starting Component Registry cr Configuration configuration String cache Name op Override public void cache Started Component Registry cr String cache Name op Override public void cache Stopping Component Registry cr String cache Name op Override public void cache Stopped Component Registry cr String cache Name op
package org client hotrod impl transport import org client hotrod impl protocol Hot Rod Constants import org client hotrod logging Log import org client hotrod logging Log Factory Support class transport implementations author Mircea Markus jboss com since public abstract class Abstract Transport implements Transport private static final Log log Log Factory get Log Abstract Transport class private static final boolean trace log Trace Enabled private final Transport Factory transport Factory private boolean busy protected Abstract Transport Transport Factory transport Factory transport Factory transport Factory Override public void set Busy boolean busy busy busy Override public boolean Busy return busy Override public byte read Array int response Length read Int return read Byte Array response Length Override public String read String byte str Content read Array String read String new String str Content Hot Rod Constants trace log tracef Read string read String return read String Override public long read Long byte long Bytes read Byte Array long result byte long Byte long Bytes result result long long Byte x return result Override public void write Long long long Value byte b new byte int b byte long Value write Bytes b Override public int read Unsigned Short byte short Bytes read Byte Array int result byte long Byte short Bytes result result long long Byte x return result Override public int read Byte Int byte b read Byte Array int value int int shift value b x shift return value Override public void write String String string string null string Empty write Array string get Bytes Hot Rod Constants else write Int Override public void write Optional String String string string null write Signed Int else write Optional Array string get Bytes Hot Rod Constants Override public Transport Factory get Transport Factory return transport Factory Override public void write Array byte Append write Int Append length write Bytes Append public void write Array byte Append int offset int count write Int count write Bytes Append offset count Override public void write Optional Array byte Append write Signed Int Append length write Bytes Append protected abstract void write Bytes byte Append protected abstract void write Bytes byte Append int offset int count
package org commons configuration import static org commons util Immutables immutable Typed Properties import java util Properties import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Initializer import org commons configuration attributes Attribute Set import org commons configuration attributes Typed Properties Attribute Copier import org commons util Typed Properties public abstract class Abstract Typed Properties Configuration public static final Attribute Definition Typed Properties Attribute Definition builder properties null Typed Properties class copier Typed Properties Attribute Copier initializer new Attribute Initializer Typed Properties Override public Typed Properties initialize return new Typed Properties build public static Attribute Set attribute Set return new Attribute Set Abstract Typed Properties Configuration class protected Attribute Set attributes private final Attribute Typed Properties properties deprecated use link Abstract Typed Properties Configuration Abstract Typed Properties Configuration Attribute Set instead Deprecated protected Abstract Typed Properties Configuration Properties properties attributes attribute Set attributes attributes protect properties attributes attribute attributes attribute set immutable Typed Properties Typed Properties Typed Properties properties protected Abstract Typed Properties Configuration Attribute Set attributes attributes attributes check Protection properties attributes attribute properties Modified properties set immutable Typed Properties properties get Override public String String return Abstract Typed Properties Configuration attributes attributes public Typed Properties properties return properties get Override public final boolean equals Object obj obj return true obj null return false get Class obj get Class return false Abstract Typed Properties Configuration Abstract Typed Properties Configuration obj attributes null attributes null return false else attributes equals attributes return false return true Override public final int hash Code final int prime int result result prime result attributes null attributes hash Code return result
package org commands import java util Collection import org commands control Lock Control Command import org commands functional Read Key Command import org commands functional Read Many Command import org commands functional Read Write Key Command import org commands functional Read Write Key Value Command import org commands functional Read Write Many Command import org commands functional Read Write Many Entries Command import org commands functional Write Key Command import org commands functional Write Key Value Command import org commands functional Write Many Command import org commands functional Write Many Entries Command import org commands read Distributed Execute Command import org commands read Entry Set Command import org commands read Get Command import org commands read Get Cache Entry Command import org commands read Get Key Value Command import org commands read Key Set Command import org commands read Size Command import org commands remote Get Keys Group Command import org commands tx Commit Command import org commands tx Prepare Command import org commands tx Rollback Command import org commands write Clear Command import org commands write Compute Command import org commands write Compute Absent Command import org commands write Evict Command import org commands write Invalidate Command import org commands write Invalidate Command import org commands write Put Key Value Command import org commands write Put Map Command import org commands write Remove Command import org commands write Replace Command import org context Invocation Context import org context impl Tx Invocation Context abstract implementation Visitor delegates visit calls default handler overridden author Mircea Markus jboss com author Manik Surtani author Galder Zamarre since public abstract class Abstract Visitor implements Visitor write commands Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable return handle Default ctx command Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable return handle Default ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return handle Default ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable return handle Default ctx command Override public Object visit Compute Absent Command Invocation Context ctx Compute Absent Command command throws Throwable return handle Default ctx command Override public Object visit Clear Command Invocation Context ctx Clear Command command throws Throwable return handle Default ctx command Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable return handle Default ctx command Override public Object visit Evict Command Invocation Context ctx Evict Command command throws Throwable return handle Default ctx command read commands Override public Object visit Size Command Invocation Context ctx Size Command command throws Throwable return handle Default ctx command Override public Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return handle Default ctx command Override public Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return handle Default ctx command Override public Object visit Get Command Invocation Context ctx Get Command command throws Throwable return handle Default ctx command Override public Object visit Key Set Command Invocation Context ctx Key Set Command command throws Throwable return handle Default ctx command Override public Object visit Entry Set Command Invocation Context ctx Entry Set Command command throws Throwable return handle Default ctx command tx commands Override public Object visit Prepare Command Tx Invocation Context ctx Prepare Command command throws Throwable return handle Default ctx command Override public Object visit Rollback Command Tx Invocation Context ctx Rollback Command command throws Throwable return handle Default ctx command Override public Object visit Commit Command Tx Invocation Context ctx Commit Command command throws Throwable return handle Default ctx command Override public Object visit Invalidate Command Invocation Context ctx Invalidate Command invalidate Command throws Throwable return handle Default ctx invalidate Command Override public Object visit Invalidate Command Invocation Context ctx Invalidate Command invalidate Command throws Throwable return visit Invalidate Command ctx invalidate Command default handler commands visited called visit method called unless visit command appropriately overridden param ctx invocation context param command command handle return return value throws Throwable case problem protected Object handle Default Invocation Context ctx Visitable Command command throws Throwable return null Helper method visit collection Visitable Commands param ctx Invocation context param Visit collection commands visit throws Throwable event problems public void visit Collection Invocation Context ctx Collection extends Visitable Command Visit throws Throwable Visitable Command command Visit command accept Visitor ctx Override public Object visit Lock Control Command Tx Invocation Context ctx Lock Control Command command throws Throwable return handle Default ctx command Override public Object visit Unknown Command Invocation Context ctx Visitable Command command throws Throwable return handle Default ctx command Override public Object visit Distributed Execute Command Invocation Context ctx Distributed Execute Command command throws Throwable return handle Default ctx command Override public Object visit Get Keys Group Command Invocation Context ctx Get Keys Group Command command throws Throwable return handle Default ctx command Override public Object visit Read Key Command Invocation Context ctx Read Key Command command throws Throwable return handle Default ctx command Override public Object visit Read Many Command Invocation Context ctx Read Many Command command throws Throwable return handle Default ctx command Override public Object visit Write Key Command Invocation Context ctx Write Key Command command throws Throwable return handle Default ctx command Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable return handle Default ctx command Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable return handle Default ctx command Override public Object visit Write Many Entries Command Invocation Context ctx Write Many Entries Command command throws Throwable return handle Default ctx command Override public Object visit Write Key Value Command Invocation Context ctx Write Key Value Command command throws Throwable return handle Default ctx command Override public Object visit Write Many Command Invocation Context ctx Write Many Command command throws Throwable return handle Default ctx command Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable return handle Default ctx command Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable return handle Default ctx command
package org eviction impl import static org persistence manager Persistence Manager Access Mode import static org persistence manager Persistence Manager Access Mode import static org persistence manager Persistence Manager Access Mode import static org persistence manager Persistence Manager Access Mode import java util concurrent atomic Atomic Long import org commons Cache Exception import org configuration cache Configuration import org eviction Activation Manager import org factories annotations Inject import org factories annotations Start import org interceptors locking Clustering Dependent Logic import org jmx annotations Bean import org jmx annotations Managed Attribute import org jmx annotations Managed Operation import org jmx annotations Measurement Type import org persistence manager Persistence Manager import org util logging Log import org util logging Log Factory Concrete implementation activation logic manager author Galder Zamarre since Bean object Name Activation description Component handles activating entries passivated Cache Store loading memory public class Activation Manager Impl implements Activation Manager private static final Log log Log Factory get Log Activation Manager Impl class private final Atomic Long activations new Atomic Long private Persistence Manager persistence Manager private Configuration cfg private Clustering Dependent Logic clustering Dependent Logic private boolean passivation Managed Attribute description Enables disables gathering statistics component display Name Statistics enabled writable true private boolean statistics Enabled false Inject public void inject Persistence Manager clm Configuration cfg Clustering Dependent Logic cdl persistence Manager clm cfg cfg clustering Dependent Logic cdl Start priority cache loader manager passivation manager public void start statistics Enabled cfg jmx Statistics enabled passivation cfg persistence passivation Override public void Update Object key boolean new Entry passivation new Entry n passivation entry already exists container return try persistence Manager delete Stores key statistics Enabled activations increment Get catch Cache Exception e log unable Remove Entry Activation key e Override public void Remove Object key boolean new Entry passivation return primary owner need remove shared store final boolean primary Owner clustering Dependent Logic get Cache Topology get Distribution key Primary try new Entry entry exists data container need remove private shared stores primary owner Access Mode mode primary Owner persistence Manager delete Stores key mode statistics Enabled activations increment Get else entry already exists data container may put load Cache Loader Interceptor already activate private stores primary Owner persistence Manager delete Stores key statistics Enabled activations increment Get catch Cache Exception e log unable Remove Entry Activation key e Override public long get Activation Count return activations get Managed Attribute description Number activation events display Name Number cache entries activated measurement Type Measurement Type public String get Activations statistics Enabled return return String value get Activation Count Managed Operation description Resets statistics gathered component display Name Reset statistics public void reset Statistics activations set
package org counter configuration import java util Hash Map import java util Map author Pedro Ruivo since public enum Attribute must first null concurrency level initial value name num owners reliability storage value private static final Map String Attribute static final Map String Attribute map new Hash Map Attribute attribute values final String name attribute name name null map put name attribute map private final String name Attribute final String name name name public static Attribute Name String local Name final Attribute attribute get local Name return attribute null attribute Override public String String return name
package org commons configuration attributes import org commons Cache Configuration Exception import org commons util Util Attribute Definition Defines characteristics configuration attribute used construct actual link Attribute holder attribute definition following characteristics ul li name li li default value value initializer li li type needs specified inferred default value e null li li Whether attribute immutable e whether value constant initialization changed li li validator intercepts invalid values li ul author Tristan Tarrant since public final class Attribute Definition private final String name private final String xml Name private final default Value private final boolean immutable private final boolean auto Persist private final Attribute Copier copier private final Attribute Initializer extends initializer private final Attribute Validator super validator private final Class type Attribute Definition String name String xml Name initial Value Class type boolean immutable boolean auto Persist Attribute Copier copier Attribute Validator super validator Attribute Initializer extends initializer name name xml Name xml Name default Value initial Value immutable immutable auto Persist auto Persist copier copier initializer initializer validator validator type type public String name return name public String xml Name return xml Name public Class get Type return type public get Default Value return initializer null initializer initialize default Value public boolean Immutable return immutable public boolean Auto Persist return auto Persist public Attribute Copier copier return copier public Attribute Initializer extends initializer return initializer Attribute Validator super validator return validator public Attribute Attribute return new Attribute public void validate value validator null validator validate value public static Builder builder String name default Value default Value null return new Builder name default Value Class default Value get Class else throw new Cache Configuration Exception Must specify type passing null Attribute Definition name public static Builder builder String name default Value Class klass return new Builder name default Value klass public static final class Builder private final String name private final default Value private final Class type private boolean immutable false private boolean auto Persist true private String xml Name private Attribute Copier copier null private Attribute Initializer extends initializer private Attribute Validator super validator private Builder String name default Value Class type name name default Value default Value type type public Builder immutable immutable true return public Builder copier Attribute Copier copier copier copier return public Builder initializer Attribute Initializer extends initializer initializer initializer return public Builder auto Persist boolean auto Persist auto Persist auto Persist return public Builder validator Attribute Validator super validator validator validator return public Builder xml Name String xml Name xml Name xml Name return public Attribute Definition build return new Attribute Definition name xml Name null Util xmlify name xml Name default Value type immutable auto Persist copier validator initializer
package org commons configuration attributes import java util Collection import java util Iterator import java util Linked Hash Map import java util Map import javax xml stream Stream Exception import javax xml stream Stream Writer import org commons logging Log import org commons logging Log Factory Attribute Set container link Attribute constructed passing list link Attribute Definition Attribute Sets initially unprotected means contained attributes modified link protect method invoked attributes link Attribute Definition Immutable modified author Tristan Tarrant since public class Attribute Set implements Attribute Listener Object private static final Log log Log Factory get Log Attribute Set class private final Class klass private final String name private final Map String Attribute attributes private boolean protect public Attribute Set Class klass Attribute Definition attribute Definitions klass klass get Simple Name null attribute Definitions public Attribute Set String name Attribute Definition attribute Definitions name null attribute Definitions public Attribute Set Class klass Attribute Set attribute Set Attribute Definition attribute Definitions klass klass get Simple Name attribute Set attribute Definitions public Attribute Set String name Attribute Set attribute Set Attribute Definition attribute Definitions null name attribute Set attribute Definitions private Attribute Set Class klass String name Attribute Set attribute Set Attribute Definition attribute Definitions klass klass name name attribute Set null attributes new Linked Hash Map attribute Definitions length attribute Set attributes size Attribute attribute attribute Set attributes values attributes put attribute name attribute get Attribute Definition Attribute else attributes new Linked Hash Map attribute Definitions length Attribute Definition def attribute Definitions attributes contains Key def name throw log attribute Set Duplicate Attribute def name name Attribute Object attribute Attribute Object def Attribute attribute Immutable attribute add Listener attributes put def name attribute public Class get Klass return klass public String get Name return name Returns whether attribute set contains specified named attribute param name name attribute public boolean contains String name return attributes contains Key name Returns whether set contains specified attribute definition param def link Attribute Definition public boolean contains Attribute Definition def return contains def name Returns named attribute param name name attribute return return attribute Suppress Warnings unchecked public Attribute attribute String name return Attribute attributes get name Returns attribute identified supplied link Attribute Definition param def attribute definition return attribute public Attribute attribute Attribute Definition def Attribute attribute attribute def name attribute null return attribute else throw log Attribute def name name Copies attribute another Attribute Set param source Attribute Set public void read Attribute Set Iterator Attribute iterator attributes values iterator iterator Next Attribute Object attribute Attribute Object iterator next Attribute Object attribute attribute name Modified attribute read Returns new Value Set immutable link Attribute write protected return public Attribute Set protect Attribute Definition attr Defs new Attribute Definition attributes size int Attribute attribute attributes values attr Defs attribute get Attribute Definition Attribute Set protected Set new Attribute Set klass name null attr Defs Attribute attribute protected Set attributes values Attribute local Attr attributes get attribute name attribute read Attribute local Attr attribute protect protected Set protect true return protected Set Returns whether attributes set modified public boolean Modified Attribute attribute attributes values attribute Modified return true return false Returns whether attribute set protected public boolean Protected return protect Writer single attribute specified link Stream Writer using attribute xml Name param writer writer param def Attribute definition throws Stream Exception public void write Stream Writer writer Attribute Definition def throws Stream Exception write writer def def xml Name Writer single attribute specified link Stream Writer using supplied name param writer writer param def Attribute definition param name tag name attribute throws Stream Exception public void write Stream Writer writer Attribute Definition def Enum name throws Stream Exception write writer def name String Writer single attribute specified link Stream Writer using supplied name param writer writer param def Attribute definition param name tag name attribute throws Stream Exception public void write Stream Writer writer Attribute Definition def String name throws Stream Exception Attribute attribute attribute def attribute write writer name Writes attributeset specified Stream Writer element param writer public void write Stream Writer writer String xml Element Name throws Stream Exception Modified writer write Start Element xml Element Name write writer writer write End Element Writes specified attributes attributeset specified Stream Writer element param writer public void write Stream Writer writer String xml Element Name Attribute Definition defs throws Stream Exception boolean skip true Attribute Definition def defs skip skip attribute def Modified skip writer write Start Element xml Element Name Attribute Definition def defs Attribute attr attribute def attr write writer attr get Attribute Definition xml Name writer write End Element Writes attributes attributeset part current element param writer public void write Stream Writer writer throws Stream Exception Attribute attr attributes values attr Persistent attr write writer attr get Attribute Definition xml Name Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Attribute Set Attribute Set obj attributes null attributes null return false else attributes equals attributes return false return true Override public String String return String name public String String String name String Builder sb new String Builder name null sb append name sb append sb append boolean comma false Attribute value attributes values comma sb append else comma true sb append value String sb append return sb String public Attribute Set check Protection protect throw log unprotected Attribute Set name return public void reset protect throw log protected Attribute Set name Attribute attribute attributes values attribute reset Override public void attribute Changed Attribute Object attribute Object old Value public Collection Attribute attributes return attributes values
package org security impl import java security Access Control Exception import java security Principal import java security acl Group import java util Hash Set import java util Map import java util Set import java util concurrent Concurrent Map import javax security auth Subject import org commons util Collection Factory import org commons util Util import org configuration cache Authorization Configuration import org configuration global Global Security Configuration import org security Audit Context import org security Audit Logger import org security Audit Response import org security Authorization Permission import org security Principal Role Mapper import org security Role import org security Security import org util logging Log import org util logging Log Factory Authorization Helper utility methods computing access masks verifying permissions author Tristan Tarrant since public class Authorization Helper private static final Log log Log Factory get Log Authorization Helper class private static final boolean trace log Trace Enabled private final Global Security Configuration global Configuration private final Audit Logger audit private final Audit Context context private final String name private final Concurrent Map Cache Principal Pair Subject acl Cache public Authorization Helper Global Security Configuration global Configuration Audit Context context String name Concurrent Map Cache Principal Pair Subject acl Cache global Configuration global Configuration audit global Configuration authorization audit Logger context context name name acl Cache acl Cache public Authorization Helper Global Security Configuration security Audit Context context String name security context name Collection Factory make Bounded Concurrent Map public void check Permission Authorization Permission perm check Permission null null perm null public void check Permission Authorization Permission perm String role check Permission null null perm role public void check Permission Authorization Configuration configuration Authorization Permission perm check Permission configuration null perm null public void check Permission Authorization Configuration configuration Subject subject Authorization Permission perm String role global Configuration authorization enabled Security Privileged Security check Permission perm get Security Permission else subject subject null subject Security get Subject try subject null check Subject Permission Role subject configuration perm role audit audit subject context name perm Audit Response else check Security Manager Permission perm else check Security Manager Permission perm catch Security Exception e audit audit subject context name perm Audit Response throw log unauthorized Access Util pretty Print Subject subject perm String private void check Security Manager Permission Authorization Permission perm System get Security Manager null System get Security Manager check Permission perm get Security Permission else throw new Access Control Exception perm get Security Permission private boolean check Subject Permission Role Subject subject Authorization Configuration configuration Authorization Permission required Permission String requested Role Principal user Principal get User Principal subject user Principal null Cache Principal Pair cpp new Cache Principal Pair user Principal name Subject subject acl Cache null subject acl Cache compute Absent cpp compute Subject subject configuration else subject compute Subject subject configuration int permission Mask required Permission get Mask boolean authorized subject matches permission Mask requested Role null subject contains Role requested Role true trace log tracef Check subject permission role b subject subject required Permission requested Role authorized return authorized else return false private Subject compute Subject Subject subject Authorization Configuration configuration Principal Role Mapper role Mapper global Configuration authorization principal Role Mapper Set Principal principals subject get Principals Set String Roles new Hash Set principals size Principal principal principals Set String role Names role Mapper principal Roles principal role Names null Roles add role Names int subject Mask Map String Role global Roles global Configuration authorization roles String role Roles configuration null configuration roles contains role Role global Role global Roles get role global Role null subject Mask global Role get Mask trace log tracef Subject roles permission mask subject Roles subject Mask return new Subject Roles subject Mask private Principal get User Principal Subject subject subject null Set Principal principals subject get Principals principals null principals Empty Principal p principals p instanceof Group return p return null
package org xsite import static org util logging events Messages import java util Array List import java util Arrays import java util Collections import java util Hash Map import java util Hash Set import java util List import java util List Iterator import java util Map import java util Set import java util concurrent Concurrent Map import javax transaction Transaction import org Cache import org commands Abstract Visitor import org commands Commands Factory import org commands Visitable Command import org commands functional Read Write Key Command import org commands functional Read Write Key Value Command import org commands functional Read Write Many Command import org commands functional Read Write Many Entries Command import org commands functional Write Key Command import org commands functional Write Key Value Command import org commands functional Write Many Command import org commands functional Write Many Entries Command import org commands tx Commit Command import org commands tx Prepare Command import org commands tx Rollback Command import org commands write Clear Command import org commands write Compute Command import org commands write Compute Absent Command import org commands write Put Key Value Command import org commands write Put Map Command import org commands write Remove Command import org commands write Replace Command import org commands write Write Command import org commons util Collection Factory import org commons util Util import org configuration cache Backup Configuration import org configuration cache Backup Failure Policy import org configuration cache Configuration import org configuration cache Sites Configuration import org configuration global Global Configuration import org container entries Cache Entry import org context Invocation Context import org context impl Flag Bit Sets import org context impl Tx Invocation Context import org factories annotations Inject import org factories annotations Start import org remoting transport Aggregate Backup Response import org remoting transport Backup Response import org remoting transport Transport import org transaction impl Abstract Cache Transaction import org transaction impl Local Transaction import org transaction impl Transaction Table import org util Time Service import org util logging Log import org util logging Log Factory import org util logging events Event Log Category import org util logging events Event Log Manager import org util logging events Event Logger import org xsite notification Site Status Listener author Mircea Markus since public class Backup Sender Impl implements Backup Sender private static Log log Log Factory get Log Backup Sender Impl class private static final Backup Response new Empty Backup Response private Cache cache private Transport transport private Configuration config private Transaction Table tx Table private Time Service time Service private Commands Factory commands Factory private final Map String Custom Failure Policy site Failure Policy new Hash Map private final Concurrent Map String Offline Status offline Status Collection Factory make Concurrent Map private Event Log Manager event Log Manager private final String local Site Name private String cache Name private Global Configuration global Config private enum Backup Filter public Backup Sender Impl String local Site Name local Site Name local Site Name Inject public void init Cache cache Transport transport Transaction Table tx Table Global Configuration gc Time Service time Service Commands Factory commands Factory Event Log Manager event Log Manager cache cache transport transport tx Table tx Table global Config gc time Service time Service commands Factory commands Factory event Log Manager event Log Manager Start public void start config cache get Cache Configuration cache Name cache get Name Backup Configuration bc config sites enabled Backups final String site Name bc site bc backup Failure Policy Backup Failure Policy String backup Policy bc failure Policy Class backup Policy null throw new Illegal State Exception Backup policy class missing custom failure policy Custom Failure Policy instance Util get Instance backup Policy global Config class Loader instance init cache site Failure Policy put bc site instance Offline Status offline new Offline Status bc take Offline time Service new Site Status Listener Override public void site Online Backup Sender Impl site Online site Name Override public void site Offline Backup Sender Impl site Offline site Name offline Status put site Name offline Override public Backup Response backup Prepare Prepare Command command Abstract Cache Transaction cache Transaction throws Exception List Write Command modifications filter Modifications command get Modifications cache Transaction get Looked Entries modifications Empty return Prepare Command prepare commands Factory build Prepare Command command get Global Transaction modifications command One Phase Commit run filter prepare backup calls happen local commit phase Backup Filter filter prepare One Phase Commit Backup Filter Backup Filter List Site Backup backups calculate Backup Info filter return backup Command prepare backups Override public void process Responses Backup Response backup Response Visitable Command command throws Throwable process Responses backup Response command null Override public void process Responses Backup Response backup Response Visitable Command command Transaction transaction throws Throwable log tracef Processing backup response command backup Response command backup Response wait Backup Finish update Offline Sites backup Response process Failed Responses backup Response command transaction private void update Offline Sites Backup Response backup Response offline Status Empty backup Response Empty return Set String communication Errors backup Response get Communication Errors Map Entry String Offline Status status Entry offline Status entry Set Offline Status status status Entry get Value status Enabled continue communication Errors contains status Entry get Key status update Communication Failure backup Response get Send Time Millis log tracef Offline Status updated status else status Offline status reset Override public Backup Response backup Write Write Command command throws Exception List Site Backup x Site Backups calculate Backup Info Backup Filter return backup Command command x Site Backups Override public Backup Response backup Commit Commit Command command throws Exception n backup stuff prepare need Backup Response one Pc Response send Backups command List Site Backup x Site Backups calculate Backup Info Backup Filter Backup Response two Pc Response backup Command command x Site Backups return new Aggregate Backup Response one Pc Response two Pc Response Override public Backup Response backup Rollback Rollback Command command throws Exception List Site Backup x Site Backups calculate Backup Info Backup Filter log tracef Backing rollback command x Site Backups return backup Command command x Site Backups Override public Bring Site Online Response bring Site Online String site Name config sites Use Backup site Name log trying Bring Online Nonexistent Site site Name return Bring Site Online Response else Offline Status offline offline Status get site Name boolean brought Online offline bring Online return brought Online Bring Site Online Response Bring Site Online Response Override public Take Site Offline Response take Site Offline String site Name config sites Use Backup site Name return Take Site Offline Response else Offline Status offline offline Status get site Name return offline force Offline Take Site Offline Response Take Site Offline Response private Backup Response backup Command Visitable Command command List Site Backup x Site Backups throws Exception return transport backup Remotely x Site Backups commands Factory build Single Site Rpc Command command private Backup Response send Backups Commit Command command throws Exception final Local Transaction local Tx tx Table get Local Transaction command get Global Transaction List Write Command modifications filter Modifications local Tx get Modifications local Tx get Looked Entries modifications Empty return List Site Backup backups calculate Backup Info Backup Filter Prepare Command prepare commands Factory build Prepare Command command get Global Transaction modifications true return backup Command prepare backups private void process Failed Responses Backup Response backup Response Visitable Command command Transaction transaction throws Throwable Sites Configuration sites Configuration config sites Map String Throwable failures backup Response get Failed Backups Backup Failure Exception backup Exception null Map Entry String Throwable failure failures entry Set Backup Failure Policy policy sites Configuration get Failure Policy failure get Key policy Backup Failure Policy Custom Failure Policy custom Failure Policy site Failure Policy get failure get Key command accept Visitor null new Custom Backup Policy Invoker failure get Key custom Failure Policy transaction policy Backup Failure Policy log warn Xsite Backup Failed cache Name failure get Key failure get Value else policy Backup Failure Policy backup Exception null backup Exception new Backup Failure Exception cache Name backup Exception add Failure failure get Key failure get Value backup Exception null throw backup Exception private List Site Backup calculate Backup Info Backup Filter backup Filter List Site Backup backup Info new Array List Sites Configuration sites config sites Backup Configuration bc sites enabled Backups bc site equals local Site Name log cache Backups Data Site local Site Name continue boolean Sync bc strategy Backup Configuration Backup Strategy backup Filter Backup Filter Sync bc Two Phase Commit continue backup Filter Backup Filter Sync bc Two Phase Commit continue Offline bc site log tracef site offline backing information bc site continue Site Backup bi new Site Backup bc site Sync bc replication Timeout backup Info add bi return backup Info private boolean Offline String site Offline Status offline offline Status get site return offline null offline Offline private List Write Command filter Modifications Write Command modifications Map Object Cache Entry looked Entries modifications null modifications length return Collections empty List return filter Modifications Arrays List modifications looked Entries private List Write Command filter Modifications List Write Command modifications Map Object Cache Entry looked Entries modifications null modifications Empty return Collections empty List List Write Command filtered new Array List modifications size Set Object filtered Keys new Hash Set modifications size Note result replication transaction flagged operations may actually different use last flag bit set wins strategy assume user plays unsafe flags wo n modify entry replicable another time non replicable way List Iterator Write Command modifications list Iterator modifications size Previous Write Command write Command previous write Command Successful write Command Flag Flag Bit Sets continue Note Clear Command replicated transaction Object key write Command get Affected Keys filtered Keys contains key continue Cache Entry entry looked Entries get key entry null Functional commands always fetch remote value originator xsite enabled throw new Illegal State Exception Write Command replicated Command entry Removed replicated Command commands Factory build Remove Command key null write Command get Flags Bit Set else replicated Command commands Factory build Put Key Value Command key entry get Value entry get Metadata write Command get Flags Bit Set filtered add replicated Command filtered Keys add key return filtered private void site Online String site Name get Event Logger info Event Log Category site Online site Name private void site Offline String site Name get Event Logger info Event Log Category site Offline site Name private Event Logger get Event Logger return event Log Manager get Event Logger context cache Name scope transport get Address private static final class Custom Backup Policy Invoker extends Abstract Visitor private final String site private final Custom Failure Policy Object Object failure Policy private final Transaction tx public Custom Backup Policy Invoker String site Custom Failure Policy failure Policy Transaction tx site site noinspection unchecked failure Policy failure Policy tx tx Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable failure Policy handle Put Failure site command get Key command get Value command Put Absent return null Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable failure Policy handle Remove Failure site command get Key command get Value return null Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable failure Policy handle Replace Failure site command get Key command get Old Value command get New Value return null Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable failure Policy handle Compute Failure site command get Key command get Remapping Bi Function command Compute Present return null Override public Object visit Compute Absent Command Invocation Context ctx Compute Absent Command command throws Throwable failure Policy handle Compute Absent Failure site command get Key command get Mapping Function return null Override public Object visit Write Key Command Invocation Context ctx Write Key Command command throws Throwable failure Policy handle Write Key Failure site command get Key return null Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable failure Policy handle Read Write Key Value Failure site command get Key return null Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable failure Policy handle Read Write Key Failure site command get Key return null Override public Object visit Write Many Entries Command Invocation Context ctx Write Many Entries Command command throws Throwable failure Policy handle Write Many Entries Failure site command get Entries return null Override public Object visit Write Key Value Command Invocation Context ctx Write Key Value Command command throws Throwable failure Policy handle Write Key Value Failure site command get Key return null Override public Object visit Write Many Command Invocation Context ctx Write Many Command command throws Throwable failure Policy handle Write Many Failure site command get Affected Keys return null Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable failure Policy handle Read Write Many Failure site command get Affected Keys return null Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable failure Policy handle Read Write Many Entries Failure site command get Entries return null Override public Object visit Clear Command Invocation Context ctx Clear Command command throws Throwable failure Policy handle Clear Failure site return null Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable failure Policy handle Put Failure site command get Map return null Override public Object visit Prepare Command Tx Invocation Context ctx Prepare Command command throws Throwable failure Policy handle Prepare Failure site tx return null Override public Object visit Rollback Command Tx Invocation Context ctx Rollback Command command throws Throwable failure Policy handle Rollback Failure site tx return null Override public Object visit Commit Command Tx Invocation Context ctx Commit Command command throws Throwable failure Policy handle Commit Failure site tx return null Override protected Object handle Default Invocation Context ctx Visitable Command command throws Throwable super handle Default ctx command throw new Illegal State Exception Unknown command command public Offline Status get Offline Status String site return offline Status get site Override public Map String Boolean status Map String Boolean result new Hash Map offline Status size Map Entry String Offline Status os offline Status entry Set result put os get Key os get Value Offline return result private static class Empty Backup Response implements Backup Response Override public void wait Backup Finish throws Exception op nothing sent Override public Map String Throwable get Failed Backups op nothing sent return Collections empty Map Override public Set String get Communication Errors op nothing sent return Collections empty Set Override public long get Send Time Millis op never invoked return Override public boolean Empty return true
package org interceptors distribution import java util Array List import java util Arrays import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Set import java util concurrent Completable Future import java util function Bi Consumer import java util stream Stream import org commands Flag Affected Command import org commands Replicable Command import org commands Topology Affected Command import org commands Visitable Command import org commands functional Read Key Command import org commands functional Read Many Command import org commands read Abstract Data Command import org commands read Get Command import org commands read Get Cache Entry Command import org commands read Get Key Value Command import org commands read Size Command import org commands remote Clustered Get Command import org commands remote Clustered Get Command import org commands remote Get Keys Group Command import org commands write Abstract Data Write Command import org commands write Clear Command import org commands write Data Write Command import org commands write Value Matcher import org commons Cache Exception import org commons util Array Collector import org container entries Cache Entry import org container entries Internal Cache Entry import org container entries Internal Cache Value import org container entries Null Cache Entry import org context Invocation Context import org context impl Flag Bit Sets import org context impl Tx Invocation Context import org distribution Distribution Info import org distribution Distribution Manager import org distribution Localized Cache Topology import org distribution Remote Value Retrieved Listener import org distribution ch Consistent Hash import org distribution ch Key Partitioner import org factories annotations Inject import org factories annotations Start import org interceptors Invocation Success Function import org interceptors impl Clustering Interceptor import org remoting Remote Exception import org remoting responses Response import org remoting responses Successful Response import org remoting responses Unsure Response import org remoting responses Valid Response import org remoting rpc Response Mode import org remoting rpc Rpc Manager import org remoting rpc Rpc Options import org remoting transport Address import org statetransfer Outdated Topology Exception import org statetransfer Owners Lost Exception import org transaction xa Global Transaction import org util concurrent Completable Futures import org util logging Log import org util logging Log Factory import net jcip annotations Guarded Base class distribution entries across cluster author Manik Surtani author Mircea Markus jboss com author Pete Muir author Dan Berindei dan org public abstract class Base Distribution Interceptor extends Clustering Interceptor private static final Log log Log Factory get Log Base Distribution Interceptor class private static final boolean trace log Trace Enabled private static final Object new Object protected Distribution Manager dm protected Remote Value Retrieved Listener rvrl protected Key Partitioner key Partitioner protected boolean Enabled protected boolean Replicated private final Read Many Helper read Many Helper new Read Many Helper private final Invocation Success Function primary Return Handler primary Return Handler Override protected Log get Log return log Inject public void inject Dependencies Distribution Manager distribution Manager Remote Value Retrieved Listener rvrl Key Partitioner key Partitioner dm distribution Manager rvrl rvrl key Partitioner key Partitioner Start public void configure Ca n rely super inject Configuration called inject Dependencies method Enabled cache Configuration clustering l enabled Replicated cache Configuration clustering cache Mode Replicated Override public Object visit Size Command Invocation Context ctx Size Command command throws Throwable Replicated Replicated size command reason distributed count entries processing done upon entries overhead coordinating remote nodes network calls expensive command set Flags Bit Set command get Flags Bit Set Flag Bit Sets return super visit Size Command ctx command Override public final Object visit Get Keys Group Command Invocation Context ctx Get Keys Group Command command throws Throwable command Group Owner n go remote owner return invoke Next ctx command Address primary Owner dm get Cache Topology get Distribution command get Group Name primary Completable Future Map Address Response future rpc Manager invoke Remotely Async Collections singleton primary Owner command default Sync Options return async Invoke Next ctx command future Accept responses responses Empty Response response responses values iterator next response instanceof Successful Response noinspection unchecked List Cache Entry cache Entries List Cache Entry Successful Response response get Response Value Cache Entry entry cache Entries wrap Remote Entry ctx entry get Key entry false Override public final Object visit Clear Command Invocation Context ctx Clear Command command throws Throwable ctx Origin Local Local Mode Forced command Rpc Options rpc Options rpc Manager get Rpc Options Builder Synchronous command Response Mode Response Mode build return async Invoke Next ctx command rpc Manager invoke Remotely Async null command rpc Options return invoke Next ctx command protected extends Flag Affected Command Topology Affected Command Completable Future Void remote Get Invocation Context ctx command Object key boolean Write Localized Cache Topology cache Topology check Topology Id command int topology Id cache Topology get Topology Id Distribution Info info cache Topology get Distribution key info Read Owner trace log tracef Key became local wrapping retrying command Command topology current topology key command get Topology Id topology Id topology changed let retry command get Topology Id topology Id throw new Illegal State Exception throw new Outdated Topology Exception topology Id trace log tracef Perform remote get key current Topology Id owners key topology Id info read Owners Clustered Get Command get Command cf build Clustered Get Command key command get Flags Bit Set get Command set Topology Id topology Id get Command set Write Write return rpc Manager invoke Remotely Async info read Owners get Command get Staggered Options info read Owners size Accept responses Response r responses values r instanceof Successful Response Successful Response response Successful Response r Object response Value response get Response Value response Value null rvrl null rvrl remote Value Found key wrap Remote Entry ctx key Null Cache Entry get Instance Write return Internal Cache Entry ice Internal Cache Value response Value Internal Cache Entry key rvrl null rvrl remote Value Found ice wrap Remote Entry ctx key ice Write return throw handle Missing Successful Response responses protected static Cache Exception handle Missing Successful Response Map Address Response responses response map contain Exception Responses rethrown exceptions responses values stream Match Unsure Response class Instance got unsure responses nodes read owners time sent request progressed newer topology However guaranteed progressed topology one older immediately retry return Outdated Topology Exception else Another instance n get successful response owners lost handle later State Transfer Interceptor signal Partition Handling Interceptor present return Owners Lost Exception protected void wrap Remote Entry Invocation Context ctx Object key Cache Entry ice boolean Write entry Factory wrap External Entry ctx key ice true Write protected final Object handle Non Tx Write Command Invocation Context ctx Abstract Data Write Command command throws Throwable Object key command get Key Cache Entry entry ctx lookup Entry key Local Mode Forced command entry null entry Factory wrap External Entry ctx key null false true return invoke Next ctx command Localized Cache Topology cache Topology check Topology Id command Distribution Info info cache Topology get Distribution key entry null boolean load Load ctx command info info Primary throw new Illegal State Exception Primary owner write always owner read well else ctx Origin Local return invoke Remotely command info primary else load Completable Future get Future remote Get ctx command command get Key true return async Invoke Next ctx command get Future else entry Factory wrap External Entry ctx key null false true return invoke Next ctx command else info Primary return invoke Next Apply ctx command primary Return Handler else ctx Origin Local return invoke Remotely command info primary else return invoke Next ctx command private boolean Load Invocation Context ctx Abstract Data Write Command command Distribution Info info command Flag Flag Bit Sets Visitable Command Load Type load Type command load Type switch load Type case return false case return info Primary info Write Owner ctx Origin Local case return info Primary default throw new Illegal State Exception else return false private Object invoke Remotely Data Write Command command Address primary Owner trace log tracef primary owner sending command primary owner order forwarded primary Owner boolean Sync Forwarding Synchronous command command Return Value Expected Completable Future Map Address Response remote Invocation try remote Invocation rpc Manager invoke Remotely Async Collections singleton List primary Owner command Sync Forwarding default Sync Options default Async Options catch Throwable command set Value Matcher command get Value Matcher matcher Retry throw Sync Forwarding return async Value remote Invocation handle responses command set Value Matcher command get Value Matcher matcher Retry Completable Futures rethrow Exception Response response get Single Response responses response Successful command fail else response instanceof Valid Response throw unexpected response expect successful unsuccessful responses unsure return Valid Response response get Response Value else return null private Object primary Return Handler Invocation Context ctx Visitable Command visitable Command Object local Result Data Write Command command Data Write Command visitable Command command Successful trace log tracef Skipping replication conditional command succeed primary owner command return local Result Localized Cache Topology cache Topology check Topology Id command Distribution Info distribution Info cache Topology get Distribution command get Key Collection Address owners distribution Info write Owners owners size backups skip replication part return local Result Collection Address recipients Replicated null owners Cache matcher reset get exception backup Value Matcher original Matcher command get Value Matcher Ignore previous value backup owners command set Value Matcher Value Matcher Rpc Options rpc Options determine Rpc Options Backup Replication rpc Manager Synchronous command recipients Completable Future Map Address Response remote Invocation rpc Manager invoke Remotely Async recipients command rpc Options return async Value remote Invocation handle responses Switch retry policy case primary owner changed write already succeeded new primary command set Value Matcher original Matcher matcher Retry Completable Futures rethrow Exception instanceof Remote Exception get Cause return local Result private Rpc Options determine Rpc Options Backup Replication Rpc Manager rpc boolean Sync Collection Address recipients Sync recipients means broadcast ignore leavers return recipients null rpc get Rpc Options Builder Response Mode build default Sync Options else return default Async Options Override public Object visit Get Command Invocation Context ctx Get Command command throws Throwable command Flag Flag Bit Sets Flag Bit Sets return invoke Next ctx command ctx Origin Local Object key command get Keys ctx lookup Entry key null return Unsure Response return invoke Next ctx command Get Success Handler get Success Handler new Get Success Handler command Completable Future Void Future remote Get ctx command command get Keys get Success Handler return async Value Future Apply ctx command get Success Handler protected extends Flag Affected Command Topology Affected Command Completable Future Void remote Get Invocation Context ctx command Collection keys Remote Get Handler remote Get Handler Map Address List Object requested Keys get Keys Owner ctx keys check Topology Id command null null requested Keys Empty return Completable Futures completed Null Global Transaction gtx ctx Tx Scope Tx Invocation Context ctx get Global Transaction null Clustered Get Future Future new Clustered Get Future requested Keys size Map Entry Address List Object pair requested Keys entry Set Clustered Get Command clustered Get Command cf build Clustered Get Command pair get Value command get Flags Bit Set gtx clustered Get Command set Topology Id command get Topology Id rpc Manager invoke Remotely Async Collections singleton pair get Key clustered Get Command sync Ignore Leavers Complete new Clustered Get Handler pair get Key Future ctx command pair get Value null remote Get Handler return Future protected void handle Remotely Retrieved Keys Invocation Context ctx List remote Keys private class Clustered Get Handler extends Flag Affected Command Topology Affected Command implements Bi Consumer Map Address Response Throwable private final Address target private final Clustered Get Future Future private final Invocation Context ctx private final command private final List keys private final Map Object Collection Address contacted Nodes private final Remote Get Handler remote Get Handler private Clustered Get Handler Address target Clustered Get Future Future Invocation Context ctx command List keys Map Object Collection Address contacted Nodes Remote Get Handler remote Get Handler target target Future Future keys keys ctx ctx command command contacted Nodes contacted Nodes remote Get Handler remote Get Handler Override public void accept Map Address Response response Map Throwable throwable throwable null Future complete Exceptionally throwable return Successful Response response get Successful Response Fail response Map Future handle Missing Response response null return Object response Value response get Response Value response Value instanceof Internal Cache Value Future complete Exceptionally new Illegal State Exception Unexpected response value response Value return Internal Cache Value values Internal Cache Value response Value Check handlers n finished exception without blocking exception currently processed interceptor stack callbacks Future Done return synchronized Future Check handlers n finished exception Future Done return int keys size Object key keys get Internal Cache Value value values Cache Entry entry value null Null Cache Entry get Instance value Internal Cache Entry key wrap Remote Entry ctx key entry false handle Remotely Retrieved Keys ctx keys Future counter Future complete null private void handle Missing Response Response response response instanceof Unsure Response remote Get Handler Unsure Response Global Transaction gtx ctx Tx Scope Tx Invocation Context ctx get Global Transaction null Map Object Collection Address contacted Nodes contacted Nodes null new Hash Map contacted Nodes Map Address List Object requested Keys synchronized contacted Nodes Object key keys contacted Nodes compute Absent key k new Array List add target requested Keys get Keys Owner ctx keys check Topology Id command null contacted Nodes synchronized Future Future counter requested Keys size Map Entry Address List Object pair requested Keys entry Set Clustered Get Command clustered Get Command cf build Clustered Get Command pair get Value command get Flags Bit Set gtx clustered Get Command set Topology Id command get Topology Id Note keys subset keys requested node send valid response keys remove pair get Value rpc Manager invoke Remotely Async Collections singleton pair get Key clustered Get Command sync Ignore Leavers Complete new Clustered Get Handler pair get Key Future ctx command pair get Value contacted Nodes remote Get Handler keys Empty synchronized Future try remote Get Handler Keys Lost keys catch Throwable Future complete Exceptionally synchronized Future Future counter Future complete null protected interface Remote Get Handler void Unsure Response void Keys Lost Collection lost Keys private class Get Success Handler implements Remote Get Handler Invocation Success Function private Get Command local Command private boolean lost Data private boolean Unsure Response public Get Success Handler Get Command local Command local Command local Command Override public void Unsure Response Unsure Response true Guarded Future handler executed within synchronized Future Override public void Keys Lost Collection lost Keys Get Command requires keys wrapped comes execute perform methods therefore need remove received entry lost Data true Set stripped Keys new Hash Set local Command get Keys stripped Keys remove lost Keys ca n call command set Keys interceptors might compare keys actual result set local Command cf build Get Command stripped Keys local Command get Flags Bit Set local Command Return Entries Override public Object apply Invocation Context r Ctx Visitable Command r Command Object rv throws Throwable assert rv null value Future completed Unsure Response lost Data throw Outdated Topology Exception return invoke Next r Ctx local Command Override public Object visit Read Many Command Invocation Context ctx Read Many Command command throws Throwable return handle Functional Read Many Command ctx command read Many Helper protected extends Topology Affected Command Flag Affected Command Object handle Functional Read Many Command Invocation Context ctx command Read Many Command Helper helper merge method visit Get Command ca n wrap entries context repeatable reads implemented see visit Read Key Command command Flag Flag Bit Sets Flag Bit Sets return handle Local Read Many Command ctx command helper keys command Localized Cache Topology cache Topology check Topology Id command Collection keys helper keys command ctx Origin Local return handle Remote Read Many Command ctx command keys helper keys Empty return Stream empty Consistent Hash ch cache Topology get Read Consistent Hash int estimate One Node keys size ch get Members size List Object available Keys new Array List estimate One Node Map Address List Object requested Keys get Keys Owner ctx keys cache Topology available Keys null works non blocking way returned stream lazy functional contract suggests Traversable also honored executed locally originator Future Mode one command per target node going top level allow retries State Transfer Interceptor case topology change Merging Completable Future Object Future new Merging Completable Future requested Keys size available Keys Empty new Object keys size helper transform Result handle Locally Available Keys ctx command available Keys Future helper int pos available Keys size Map Entry Address List Object address Keys requested Keys entry Set List Object keys Address address Keys get Value Replicable Command remote Command helper copy Remote command keys Address ctx Set Address target Collections singleton address Keys get Key rpc Manager invoke Remotely Async target remote Command sync Ignore Leavers Complete new Read Many Handler address Keys get Key Future ctx command keys Address null pos helper pos keys Address size return async Value Future private Object handle Local Read Many Command Invocation Context ctx Visitable Command command Collection keys Object key keys ctx lookup Entry key null entry Factory wrap External Entry ctx key Null Cache Entry get Instance true false return invoke Next ctx command private extends Topology Affected Command Visitable Command Object handle Remote Read Many Command Invocation Context ctx command Collection keys Invocation Success Function remote Return Handler Object key keys ctx lookup Entry key null return Unsure Response return invoke Next Apply ctx command remote Return Handler private class Read Many Handler extends Flag Affected Command Topology Affected Command implements Bi Consumer Map Address Response Throwable private final Address target private final Merging Completable Future Object Future private final Invocation Context ctx private final command private final List Object keys private final int destination Index private final Map Object Collection Address contacted Nodes private final Read Many Command Helper helper private Read Many Handler Address target Merging Completable Future Object Future Invocation Context ctx command List Object keys Map Object Collection Address contacted Nodes int destination Index Read Many Command Helper helper target target Future Future ctx ctx command command keys keys destination Index destination Index contacted Nodes contacted Nodes helper helper Override public void accept Map Address Response response Map Throwable throwable throwable null Future complete Exceptionally throwable return Successful Response response get Successful Response Fail response Map Future handle Missing Response response null return try Object response Value response get Response Value Object values unwrap Functional Many Result Origin ctx keys response Value values null System arraycopy values Future results destination Index values length Future count else Future complete Exceptionally new Illegal State Exception Unexpected response value response Value catch Throwable Future complete Exceptionally private void handle Missing Response Response response response instanceof Unsure Response Future Unsure Response true Map Object Collection Address contacted Nodes contacted Nodes null new Hash Map contacted Nodes Map Address List Object requested Keys synchronized contacted Nodes Object key keys contacted Nodes compute Absent key k new Array List add target requested Keys get Keys Owner ctx keys check Topology Id command null contacted Nodes int pos destination Index Map Entry Address List Object address Keys requested Keys entry Set Future increment List Object keys Address address Keys get Value Replicable Command remote Command helper copy Remote command keys Address ctx Set Address target Collections singleton address Keys get Key rpc Manager invoke Remotely Async target remote Command sync Ignore Leavers Complete new Read Many Handler address Keys get Key Future ctx command keys Address contacted Nodes pos helper pos keys Address size Arrays fill Future results pos destination Index keys size Future lost Data true Future count private extends Visitable Command void handle Locally Available Keys Invocation Context ctx command List Object available Keys Merging Completable Future Object Future Read Many Command Helper helper available Keys Empty return local Command helper copy Local command available Keys invoke Next Handle ctx local Command r Ctx r Command rv throwable throwable null Future complete Exceptionally throwable else try helper apply Local Result Future rv Future count catch Throwable Future complete Exceptionally return async Value Future private Map Address List Object get Keys Owner Invocation Context ctx Collection keys Localized Cache Topology cache Topology List Object available Keys Map Object Collection Address ignored Owners int capacity cache Topology get Members size Map Address List Object requested Keys new Hash Map capacity int estimate One Node keys size capacity Object key keys Cache Entry entry ctx lookup Entry key entry null Distribution Info distribution Info cache Topology get Distribution key Let try minimize number messages preferring owner already decided send message boolean found Existing false Collection Address ignore Key null Address address distribution Info read Owners address equals rpc Manager get Address throw new Illegal State Exception Entry always wrapped else ignored Owners null ignore Key null ignore Key ignored Owners get key ignore Key null ignore Key contains address continue List Object list requested Keys get address list null list add key found Existing true break found Existing Address target null ignored Owners null target distribution Info primary else Address address distribution Info read Owners ignore Key null ignore Key ignored Owners get key ignore Key null ignore Key contains address target address break read owners ignored wo n put entry anywhere target null List Object list new Array List estimate One Node list add key requested Keys put target list else available Keys null available Keys add key return requested Keys protected Object wrap Functional Many Result Non Origin Invocation Context r Ctx Collection keys Object values return values protected Object unwrap Functional Many Result Origin Invocation Context ctx List Object keys Object response Value return response Value instanceof Object Object response Value null private Object visit Get Command Invocation Context ctx Abstract Data Command command throws Throwable return ctx lookup Entry command get Key null Entry Miss ctx command invoke Next ctx command private Object Entry Miss Invocation Context ctx Abstract Data Command command return ctx Origin Local handle Missing Entry Local Read ctx command Unsure Response private Object handle Missing Entry Local Read Invocation Context ctx Abstract Data Command command return read Needs Remote Value command async Invoke Next ctx command remote Get ctx command command get Key false null Override public Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return visit Get Command ctx command Override public Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return visit Get Command ctx command Override public Object visit Read Key Command Invocation Context ctx Read Key Command command throws Throwable repeatable reads implemented need keep read values remote side duration transaction requires synchronous invocation readonly command owners better consistency use versioning write skew check fail transaction apply function different version entry one previously read Object key command get Key Cache Entry entry ctx lookup Entry key entry null ctx Origin Local entry owned locally Null Cache Entry found need go remote return invoke Next ctx command else return invoke Next Apply ctx command r Ctx r Command rv wrap Functional Result Non Origin Return rv entry ctx Origin Local return Unsure Response read Needs Remote Value command Localized Cache Topology cache Topology check Topology Id command Collection Address owners cache Topology get Distribution key read Owners trace log tracef remote get key topology key cache Topology get Topology Id owners Read Key Command remote Command remote Read Command ctx command make sure command topology set value according route remote Command set Topology Id cache Topology get Topology Id Completable Future Map Address Response rpc rpc Manager invoke Remotely Async owners remote Command get Staggered Options owners size return async Value rpc Apply responses Response rsp responses values rsp Successful return unwrap Functional Result Origin ctx key Successful Response rsp get Response Value throw handle Missing Successful Response responses else flags wrap Null Cache Entry let command run entry Factory wrap External Entry ctx key Null Cache Entry get Instance true false return invoke Next ctx command protected Read Key Command remote Read Command Invocation Context ctx Read Key Command command return command protected Object wrap Functional Result Non Origin Return Object rv Cache Entry entry return rv protected Object unwrap Functional Result Origin Invocation Context ctx Object key Object response Value return response Value protected Localized Cache Topology check Topology Id Topology Affected Command command Localized Cache Topology cache Topology dm get Cache Topology int current Topology Id cache Topology get Topology Id int cmd Topology command get Topology Id command instanceof Flag Affected Command Flag Affected Command command Flag Flag Bit Sets Flag Bit Sets log tracef Skipping topology check command command return cache Topology cmd Topology current Topology Id cmd Topology throw new Outdated Topology Exception Cache topology changed command executing expected cmd Topology got current Topology Id trace log tracef Current topology command topology current Topology Id cmd Topology return cache Topology return code true value available local node read command allowed fetch remote node check value already context protected boolean read Needs Remote Value Abstract Data Command command return command Flag Flag Bit Sets Flag Bit Sets protected interface Read Many Command Helper extends Invocation Success Function Collection keys command copy Local command List Object keys Replicable Command copy Remote command List Object keys Invocation Context ctx void apply Local Result Merging Completable Future Future Object rv Object transform Result Object results protected class Read Many Helper implements Read Many Command Helper Read Many Command Override public Object apply Invocation Context r Ctx Visitable Command r Command Object rv throws Throwable return wrap Functional Many Result Non Origin r Ctx Read Many Command r Command get Keys Stream rv Array Override public Collection keys Read Many Command command return command get Keys Override public Read Many Command copy Local Read Many Command command List Object keys return new Read Many Command command Keys keys Override public Replicable Command copy Remote Read Many Command command List Object keys Invocation Context ctx return new Read Many Command command Keys keys Override public void apply Local Result Merging Completable Future Future Object rv Stream rv collect new Array Collector Future results Override public Object transform Result Object results return Arrays stream results filter
package org remoting inboundhandler import static org factories Known Component Names import java util concurrent Completable Future import org commands Cancellable Command import org commands Cancellation Service import org commands Replicable Command import org commands Topology Affected Command import org commands remote Cache Rpc Command import org commands remote Clustered Get Command import org commands remote Clustered Get Command import org commands remote Single Rpc Command import org commons Cache Exception import org factories annotations Component Name import org factories annotations Inject import org factories annotations Stop import org remoting inboundhandler action Ready Action import org remoting responses Cache Found Response import org remoting responses Exception Response import org remoting responses Response import org remoting responses Response Generator import org statetransfer Outdated Topology Exception import org statetransfer State Transfer Lock import org statetransfer State Transfer Manager import org util concurrent Blocking Runnable import org util concurrent Blocking Task Aware Executor Service import org util concurrent Completable Futures import org util logging Log Implementation default handling methods utilities methods author Pedro Ruivo since public abstract class Base Per Cache Inbound Invocation Handler implements Per Cache Inbound Invocation Handler private static final int Integer protected Blocking Task Aware Executor Service remote Commands Executor private State Transfer Lock state Transfer Lock protected State Transfer Manager state Transfer Manager private Response Generator response Generator private Cancellation Service cancellation Service private volatile boolean stopped false private static int extract Command Topology Id Single Rpc Command command Replicable Command inner Cmd command get Command inner Cmd instanceof Topology Affected Command return Topology Affected Command inner Cmd get Topology Id return static int extract Command Topology Id Cache Rpc Command command switch command get Command Id case Single Rpc Command return extract Command Topology Id Single Rpc Command command case Clustered Get Command case Clustered Get Command commands topology aware n block topology Id logic handled State Transfer Interceptor return default command instanceof Topology Affected Command return Topology Affected Command command get Topology Id return Inject public void inject Dependencies Component Name Blocking Task Aware Executor Service remote Commands Executor Response Generator response Generator Cancellation Service cancellation Service State Transfer Lock state Transfer Lock State Transfer Manager state Transfer Manager remote Commands Executor remote Commands Executor response Generator response Generator cancellation Service cancellation Service state Transfer Lock state Transfer Lock state Transfer Manager state Transfer Manager Stop public void stop stopped true public boolean Stopped return stopped final Completable Future Response invoke Command Cache Rpc Command cmd throws Throwable try Trace Enabled get Log tracef Calling perform cmd cmd instanceof Cancellable Command cancellation Service register Thread current Thread Cancellable Command cmd get Completable Future Object future cmd invoke Async return future handle rv throwable cmd instanceof Cancellable Command cancellation Service unregister Cancellable Command cmd get Completable Futures rethrow Exception throwable return response Generator get Response cmd rv catch Throwable throwable cmd instanceof Cancellable Command cancellation Service unregister Cancellable Command cmd get throw throwable final State Transfer Lock get State Transfer Lock return state Transfer Lock final Exception Response exception Handling Command Cache Rpc Command command Throwable throwable get Log exception Handling Command command throwable throwable instanceof Exception return new Exception Response Exception throwable else return new Exception Response new Cache Exception Problems invoking command throwable final Exception Response outdated Topology Outdated Topology Exception exception get Log tracef Topology changed retrying exception return new Exception Response exception final Response interrupted Exception Cache Rpc Command command get Log shutdown Handling Command command return Cache Found Response final void unexpected Deliver Mode Replicable Command command Deliver Order deliver Order throw new Illegal Argument Exception String format Unexpected deliver mode command deliver Order command final void handle Runnable Blocking Runnable runnable boolean Executor Service Executor Service remote Commands Executor execute runnable else runnable run public final boolean Command Sent First Topology int command Topology Id command Topology Id command Topology Id state Transfer Manager get First Topology Member Trace Enabled get Log tracef Ignoring command sent local node member command topology id command Topology Id return true return false final Blocking Runnable create Default Runnable Cache Rpc Command command Reply reply int command Topology Id boolean wait Transactional Data boolean Executor Service boolean sync return new Default Topology Runnable command reply Topology Mode create Executor Service wait Transactional Data command Topology Id sync final Blocking Runnable create Default Runnable final Cache Rpc Command command final Reply reply final int command Topology Id Topology Mode topology Mode boolean sync return new Default Topology Runnable command reply topology Mode command Topology Id sync protected abstract Log get Log protected abstract boolean Trace Enabled final boolean execute Executor Service Deliver Order order Cache Rpc Command command return order preserve Order command Block final Blocking Runnable create Ready Action Runnable Cache Rpc Command command Reply reply int command Topology Id boolean sync Ready Action ready Action ready Action null return create Non Null Ready Action Runnable command reply command Topology Id sync ready Action else return new Default Topology Runnable command reply Topology Mode command Topology Id sync final Blocking Runnable create Non Null Ready Action Runnable Cache Rpc Command command Reply reply int command Topology Id boolean sync Ready Action ready Action ready Action add Listener remote Commands Executor check Ready Tasks return new Default Topology Runnable command reply Topology Mode command Topology Id sync Override public boolean Ready return super Ready ready Action Ready Override protected void Exception Throwable throwable super Exception throwable ready Action Exception Override protected void Finally super Finally ready Action Finally
package org interceptors impl import java util Collection import java util Hash Set import java util Map import java util Set import java util concurrent Completable Future import org commands Flag Affected Command import org commands tx Prepare Command import org configuration cache Clustering Configuration import org context Flag import org context impl Flag Bit Sets import org context impl Local Tx Invocation Context import org context impl Tx Invocation Context import org factories Component Registry import org factories annotations Inject import org factories annotations Start import org interceptors Async Interceptor import org remoting inboundhandler Deliver Order import org remoting responses Exception Response import org remoting responses Response import org remoting rpc Response Filter import org remoting rpc Response Mode import org remoting rpc Rpc Manager import org remoting rpc Rpc Options import org remoting rpc Rpc Options Builder import org remoting transport Address import org transaction impl Local Transaction import org util concurrent Completable Futures import org util logging Log Acts base calls author href mailto manik jboss org Manik Surtani manik jboss org author Mircea Markus jboss com since public abstract class Base Rpc Interceptor extends Async Interceptor private final static Response Filter new Response Filter Override public boolean Acceptable Response response Address sender return response Successful response instanceof Exception Response Override public boolean need Responses return true protected final boolean trace get Log Trace Enabled protected Rpc Manager rpc Manager protected Component Registry component Registry protected boolean default Synchronous protected volatile Rpc Options single Target Staggered Options protected volatile Rpc Options multi Target Staggered Options protected volatile Rpc Options default Sync Options protected volatile Rpc Options sync Ignore Leavers protected Rpc Options default Async Options protected abstract Log get Log Inject public void inject Rpc Manager rpc Manager Component Registry component Registry rpc Manager rpc Manager component Registry component Registry Start public void init default Synchronous cache Configuration clustering cache Mode Synchronous cache Configuration clustering attributes attribute Clustering Configuration add Listener init Rpc Options init Rpc Options async options n depend remote timeout default Async Options rpc Manager get Default Rpc Options false private void init Rpc Options single Target Staggered Options rpc Manager get Rpc Options Builder Response Mode build multi Target Staggered Options rpc Manager get Rpc Options Builder Response Mode response Filter build default Sync Options rpc Manager get Default Rpc Options true sync Ignore Leavers rpc Manager get Rpc Options Builder Response Mode Deliver Order build protected Rpc Options get Staggered Options int num Targets handle better dropping Message Dispatcher based somwhat hack way staggered reads implemented intend keep sender waiting receives successful response receive successful response return unsuccessful ones Staggered gets use filter add non accepted responses Responses anyway Groups Transport later wo n filter unaccepted values get unsuccesful ones single target processing uses Group Request would n return filtered values add therefore omit filter Regrettably handled properly current filtering options return num Targets single Target Staggered Options multi Target Staggered Options protected final boolean Synchronous Flag Affected Command command command Flag Flag Bit Sets return true else command Flag Flag Bit Sets return false return default Synchronous protected final boolean Local Mode Forced Flag Affected Command command command Flag Flag Bit Sets trace get Log trace mode forced invocation Suppressing clustered events return true return false protected boolean Invoke Remote Tx Command Tx Invocation Context ctx ctx Origin Local return false Skip remote invocation state transfer transaction Local Tx Invocation Context local Ctx Local Tx Invocation Context ctx local Ctx get Cache Transaction get State Transfer Flag Flag return false testing empty modifications n enough Lock may acquire locks keys wo n register Modification See boolean Invoke Remotely ctx Modifications local Ctx get Remote Locks Acquired Empty local Ctx get Cache Transaction get Topology Id rpc Manager get Topology Id trace get Log tracef invoke remotely b Modifications b Remote Locks Acquired b Invoke Remotely ctx Modifications local Ctx get Remote Locks Acquired Empty return Invoke Remotely protected static void transaction Remotely Prepared Tx Invocation Context ctx ctx Origin Local Local Transaction ctx get Cache Transaction mark Prepare Sent protected static void total Order Tx Commit Tx Invocation Context ctx ctx Origin Local Local Transaction ctx get Cache Transaction mark Commit Rollback Sent protected static void total Order Tx Rollback Tx Invocation Context ctx ctx Origin Local Local Transaction ctx get Cache Transaction mark Commit Rollback Sent protected static boolean Total Order Rollback Invoked Remotely Tx Invocation Context ctx return ctx Origin Local Local Transaction ctx get Cache Transaction Prepare Sent Local Transaction ctx get Cache Transaction Commit Rollback Sent protected Completable Future Object total Order Prepare Tx Invocation Context ctx Prepare Command command Collection Address recipients try Set Address real Recipients null recipients null real Recipients new Hash Set recipients real Recipients add rpc Manager get Address Completable Future Map Address Response remote Invocation internal Total Order Prepare real Recipients command return remote Invocation handle responses transaction Remotely Prepared ctx Completable Futures rethrow Exception return null catch Throwable transaction Remotely Prepared ctx throw private Completable Future Map Address Response internal Total Order Prepare Collection Address recipients Prepare Command prepare Command Rpc Options Builder builder rpc Manager get Rpc Options Builder Response Mode Deliver Order return rpc Manager invoke Remotely Async recipients prepare Command builder build
package org interceptors impl import java util concurrent Completable Future import java util concurrent Executor import java util concurrent Scheduled Executor Service import java util concurrent Scheduled Future import java util concurrent Time Unit import java util concurrent atomic Atomic Reference Field Updater import java util function Bi Function import org commands Abstract Visitor import org commands Flag Affected Command import org commands Topology Affected Command import org commands Visitable Command import org commands functional Read Key Command import org commands functional Read Many Command import org commands read Get Command import org commands read Get Cache Entry Command import org commands read Get Key Value Command import org commands remote Get Keys Group Command import org configuration cache Configuration import org context Invocation Context import org context impl Flag Bit Sets import org distribution Distribution Manager import org factories Known Component Names import org factories annotations Component Name import org factories annotations Inject import org interceptors Async Interceptor import org interceptors Invocation Finally Function import org remoting Remote Exception import org remoting transport jgroups Suspect Exception import org statetransfer Owners Lost Exception import org statetransfer Outdated Topology Exception import org statetransfer State Transfer Lock import org statetransfer State Transfer Manager import org topology Cache Topology import org util concurrent Completable Futures import org util concurrent Timeout Exception import org util logging Log import org util logging Log Factory base class state transfer interceptor contains base code avoid duplicating two current different implementations p Also utilities methods common logic author Pedro Ruivo since public abstract class Base State Transfer Interceptor extends Async Interceptor private final boolean trace get Log Trace Enabled private final Invocation Finally Function handle Read Command Return handle Read Command Return private State Transfer Manager state Transfer Manager protected State Transfer Lock state Transfer Lock private Executor remote Executor private Distribution Manager distribution Manager private Scheduled Executor Service timeout Executor private long transaction Data Timeout private final Invocation Finally Function handle Local Get Keys Group Return handle Local Get Keys Group Return Inject public void init State Transfer Lock state Transfer Lock Configuration configuration State Transfer Manager state Transfer Manager Distribution Manager distribution Manager Component Name Known Component Names Scheduled Executor Service timeout Executor Component Name Known Component Names Executor remote Executor state Transfer Lock state Transfer Lock state Transfer Manager state Transfer Manager distribution Manager distribution Manager timeout Executor timeout Executor remote Executor remote Executor transaction Data Timeout configuration clustering remote Timeout Override public Object visit Get Keys Group Command Invocation Context ctx Get Keys Group Command command throws Throwable update Topology Id command ctx Origin Local return invoke Next Handle ctx command handle Local Get Keys Group Return else return invoke Next Accept ctx command r Ctx r Command rv Get Keys Group Command cmd Get Keys Group Command r Command final int command Topology Id cmd get Topology Id current Topology Id command Topology Id distribution Manager get Cache Topology Write Owner cmd get Group Name throw new Outdated Topology Exception Cache topology changed command executing expected command Topology Id got current Topology Id private Object handle Local Get Keys Group Return Invocation Context ctx Visitable Command command Object rv Throwable throwable throws Throwable Get Keys Group Command cmd Get Keys Group Command command final int command Topology Id cmd get Topology Id boolean Retry throwable null Must retry got Outdated Topology Exception Suspect Exception Throwable ce throwable ce instanceof Remote Exception ce ce get Cause Retry ce instanceof Outdated Topology Exception ce instanceof Suspect Exception else check topology id owner Retry current Topology Id command Topology Id distribution Manager get Cache Topology Write Owner cmd get Group Name Retry log Retry current Topology Id cmd increment topology id update Topology Id Wait Transaction Data waits next topology Without could retry command fast could get Outdated Topology Exception int new Topology Id Math max current Topology Id command Topology Id cmd set Topology Id new Topology Id Completable Future Void transaction Data Future state Transfer Lock transaction Data Future new Topology Id return retry Done transaction Data Future new Topology Id ctx command handle Local Get Keys Group Return else return value Exception rv throwable protected final void log Retry int current Topology Id Topology Affected Command cmd trace get Log tracef Retrying command topology change current topology command topology current Topology Id cmd get Topology Id cmd protected final int current Topology Id final Cache Topology cache Topology state Transfer Manager get Cache Topology return cache Topology null cache Topology get Topology Id protected final void update Topology Id Topology Affected Command command set topology id set ie local command Make tx commands extend Flag Affected Command use Transaction Table cleanup Stale Transactions command get Topology Id Cache Topology cache Topology state Transfer Manager get Cache Topology topology set State Consumer topology Distribution Manager int topology Id cache Topology null cache Topology get Topology Id trace get Log tracef Setting command topology topology Id command set Topology Id topology Id protected extends Visitable Command Object retry Done Completable Future Void future int topology Id Invocation Context ctx command Invocation Finally Function callback future Done get Log tracef Retrying command topology command topology Id return invoke Next Handle ctx command callback else Cancellable Retry cancellable Retry new Cancellable Retry command topology Id use handle Async rethrow exception handler rather Compose Async future completes exception want continue remote Executor Completable Future Void retry Future future handle Async cancellable Retry remote Executor cancellable Retry set Retry Future retry Future want time current command future main topology waiting future command future take longer time finish Scheduled Future timeout Future timeout Executor schedule cancellable Retry transaction Data Timeout Time Unit cancellable Retry set Timeout Future timeout Future return make Stage async Invoke Next ctx command retry Future Handle ctx command callback Override public Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return handle Read Command ctx command Override public Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return handle Read Command ctx command Override public Object visit Get Command Invocation Context ctx Get Command command throws Throwable return handle Read Command ctx command protected extends Visitable Command Topology Affected Command Flag Affected Command Object handle Read Command Invocation Context ctx command update Topology Id command return invoke Next Handle ctx command handle Read Command Return private Object handle Read Command Return Invocation Context r Ctx Visitable Command r Command Object rv Throwable throws Throwable null return rv Throwable ce ce instanceof Remote Exception ce ce get Cause Topology Affected Command cmd Topology Affected Command r Command final Cache Topology cache Topology state Transfer Manager get Cache Topology int current Topology Id cache Topology null cache Topology get Topology Id int requested Topology Id current Topology Id ce instanceof Suspect Exception trace get Log tracef Retrying command suspected node current topology current Topology Id r Command possible current topology actual view still contains node leave broadcast nodes end suspect exception wo n get new topology example situation node sends leave topology installed new view prevent suspect exceptions use response mode current Topology Id cmd get Topology Id cache Topology get Actual Members contains Suspect Exception ce get Suspect throw new Illegal State Exception Command sent else ce instanceof Outdated Topology Exception log Retry current Topology Id cmd scattered cache contacted primary owner current topology respond Unsure Response n know read owners need wait next topology cache Configuration clustering cache Mode Scattered Outdated Topology Exception ote Outdated Topology Exception ce ote requested Topology Id requested Topology Id Math max current Topology Id ote requested Topology Id else Es without requested topology result Unsure Response based old command topology would prone race requested Topology Id Math max current Topology Id cmd get Topology Id else ce instanceof Owners Lost Exception trace get Log tracef owners command lost cmd scattered cache might common lose single owner need retry find return null next topology installed partition handling enabled decide based availability status cache modes partition exception already handled Partition Handling Interceptor handling enabled ca n return null cache Configuration clustering cache Mode Scattered requested Topology Id Math max current Topology Id cmd get Topology Id else return r Command accept Visitor r Ctx Lost Data Visitor else throw get even current topology information sufficient topology phase sends message old owner new old topology responds Unsure Response updates topology updates receives read already ca n read responds Unsure Response receives two unsure responses throws However sure immediately retry request must updated topology cmd set Topology Id requested Topology Id Flag Affected Command cmd add Flags Flag Bit Sets requested Topology Id current Topology Id return invoke Next Handle r Ctx r Command handle Read Command Return else return make Stage async Invoke Next r Ctx r Command state Transfer Lock transaction Data Future requested Topology Id Handle r Ctx r Command handle Read Command Return protected int get New Topology Id Throwable ce int current Topology Id Topology Affected Command command int requested Topology Id command get Topology Id ce instanceof Outdated Topology Exception Outdated Topology Exception ote Outdated Topology Exception ce ote requested Topology Id requested Topology Id ote requested Topology Id return Math max current Topology Id requested Topology Id Override public Object visit Read Key Command Invocation Context ctx Read Key Command command throws Throwable return handle Read Command ctx command Override public Object visit Read Many Command Invocation Context ctx Read Many Command command throws Throwable return handle Read Command ctx command protected abstract Log get Log private static class Cancellable Retry extends Visitable Command implements Bi Function Void Throwable Void Runnable private static final Atomic Reference Field Updater Cancellable Retry Throwable cancellable Retry Updater Atomic Reference Field Updater new Updater Cancellable Retry class Throwable class cancelled private static final Atomic Reference Field Updater Cancellable Retry Object timeout Future Updater Atomic Reference Field Updater new Updater Cancellable Retry class Object class timeout Future private static final Log log Log Factory get Log Cancellable Retry class private static final Throwable new Throwable Command retried ever thrown private final command private final int topology Id private volatile Throwable cancelled null retry Future volatile used timeout handler run scheduled retry Future set private Completable Future Void retry Future Scheduled Future dummy implementations use plain Object field Suppress Warnings unused private volatile Object timeout Future Cancellable Retry command int topology Id command command topology Id topology Id called topology future completes successfully exceptionally Override public Void apply Void nil Throwable throwable timeout Future Updater compare Set null Scheduled Future timeout Future cancel false throwable null throw Completable Futures Completion Exception throwable cancellable Retry Updater compare Set null log tracef retrying command cancelled command throw Completable Futures Completion Exception cancelled log tracef Retrying command topology command topology Id return null called timeout elapses Override public void run Timeout Exception timeout Exception new Timeout Exception Timed waiting topology topology Id cancellable Retry Updater compare Set null timeout Exception retry Future complete Exceptionally timeout Exception void set Retry Future Completable Future Void retry Future retry Future retry Future void set Timeout Future Scheduled Future timeout Future timeout Future Updater compare Set null timeout Future timeout Future cancel false n need implement Get Command Read Many Command n throw Owners Lost Exception protected static class Lost Data Visitor extends Abstract Visitor public static final Lost Data Visitor new Lost Data Visitor Override public Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return null Override public Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return null Override public Object visit Read Key Command Invocation Context ctx Read Key Command command throws Throwable return command perform Lost Data
package org stream impl termop import java util function Supplier import java util stream Base Stream import java util stream Stream import org factories Component Registry import org stream impl intops Intermediate Operation Abstract instance provides common code needed terminal operations Note class n extend interface due fact different terminal operations possibly different interfaces implement however require information stored public abstract class Base Terminal Operation protected final Iterable Intermediate Operation intermediate Operations protected transient Supplier extends Base Stream supplier protected Base Terminal Operation Iterable Intermediate Operation intermediate Operations Supplier extends Base Stream supplier intermediate Operations intermediate Operations supplier supplier public Iterable Intermediate Operation get Intermediate Operations return intermediate Operations public void set Supplier Supplier extends Stream supplier supplier supplier public void handle Injection Component Registry registry intermediate Operations handle Injection registry
package org util logging events impl import java time Instant import java util Collections import java util List import java util Optional import org util logging Log Factory import org util logging events Event Log import org util logging events Event Log Category import org util logging events Event Log Level import org util logging events Event Logger Basic Event Logger event logger n anything aside sending events logger author Tristan Tarrant since public class Basic Event Logger implements Event Logger Override public Event Logger scope String scope return new Decorated Event Logger scope scope Override public Event Logger context String context return new Decorated Event Logger context context Override public Event Logger detail String detail return new Decorated Event Logger detail detail Override public Event Logger String return new Decorated Event Logger Override public void log Event Log Level level Event Log Category category String message Log Factory get Logger category String log level Logger Level message basic event logger n collect anything Override public List Event Log get Events Instant start int count Optional Event Log Category category Optional Event Log Level level return Collections empty List
package org batch import javax transaction Transaction import javax transaction Transaction Manager import org commons Cache Exception import org factories annotations Inject container holding thread locals batching used link org Cache start Batch link org Cache end Batch boolean calls author Manik Surtani href mailto manik jboss org manik jboss org since public class Batch Container Transaction Manager transaction Manager private final Thread Local Batch Details batch Details Tl new Thread Local Batch Details Inject void inject Transaction Manager transaction Manager transaction Manager transaction Manager Starts batch return true batch started false one already available public boolean start Batch throws Cache Exception return start Batch false public boolean start Batch boolean auto Batch throws Cache Exception Batch Details bd batch Details Tl get bd null bd new Batch Details try transaction Manager get Transaction null bd tx null transaction Manager begin bd nested Invocation Count bd suspend Tx Invocation auto Batch bd thread Thread current Thread suspend Auto Batch auto Batch bd tx transaction Manager get Transaction else bd tx transaction Manager suspend batch Details Tl set bd return true else bd nested Invocation Count batch Details Tl set bd return false catch Exception e batch Details Tl remove throw new Cache Exception Unable start batch e public void end Batch boolean success end Batch false success public void end Batch boolean auto Batch boolean success Batch Details bd batch Details Tl get bd null return bd tx null batch Details Tl remove return auto Batch bd nested Invocation Count auto Batch bd nested Invocation Count Transaction existing Tx null try existing Tx transaction Manager get Transaction existing Tx null auto Batch bd tx equals existing Tx transaction Manager resume bd tx resolve Transaction bd success catch Exception e throw new Cache Exception Unable end batch e finally batch Details Tl remove try auto Batch existing Tx null transaction Manager resume existing Tx catch Exception e throw new Cache Exception Failed resuming existing transaction existing Tx e private void resolve Transaction Batch Details bd boolean success throws Exception Thread current Thread Thread current Thread bd thread equals current Thread success transaction Manager commit else transaction Manager rollback else success bd tx commit else bd tx rollback public Transaction get Batch Transaction Transaction tx null Batch Details bd batch Details Tl get bd null tx bd tx tx null batch Details Tl remove return tx public boolean Suspend Tx Invocation Batch Details bd batch Details Tl get return bd null bd suspend Tx Invocation private static class Batch Details int nested Invocation Count boolean suspend Tx Invocation Transaction tx Thread thread
package org util concurrent import java util Array Deque import java util Iterator import java util Linked List import java util List import java util Queue import java util concurrent Abstract Executor Service import java util concurrent Concurrent Linked Queue import java util concurrent Executor Service import java util concurrent Rejected Execution Exception import java util concurrent Semaphore import java util concurrent Time Unit import org util Time Service import org util logging Log import org util logging Log Factory special executor service accepts code Blocking Runnable special runnable gives hints code running order avoiding put runnable block thread way runnable says ready sent real executor service author Pedro Ruivo since public class Blocking Task Aware Executor Service Impl extends Abstract Executor Service implements Blocking Task Aware Executor Service private static final Log log Log Factory get Log Blocking Task Aware Executor Service Impl class private static final boolean trace log Trace Enabled private final Queue Blocking Runnable blocked Tasks private final Executor Service executor Service private final Time Service time Service private final Controller Thread controller Thread private volatile boolean shutdown public Blocking Task Aware Executor Service Impl String controller Thread Name Executor Service executor Service Time Service time Service blocked Tasks new Concurrent Linked Queue executor Service executor Service time Service time Service shutdown false controller Thread new Controller Thread controller Thread Name controller Thread start Override public final void execute Blocking Runnable runnable shutdown throw new Rejected Execution Exception Executor Service already shutdown runnable Ready Execute runnable trace log tracef Added new task directly task waiting blocked Tasks size else longer submit directly executor service blocked Tasks offer runnable controller Thread check Ready Task trace log tracef Added new task queue task waiting blocked Tasks size Override public void shutdown shutdown true Override public List Runnable shutdown shutdown true controller Thread interrupt List Runnable runnable List new Linked List runnable List add executor Service shutdown runnable List add blocked Tasks return runnable List Override public boolean Shutdown return shutdown Override public boolean Terminated return shutdown blocked Tasks Empty executor Service Terminated Override public boolean await Termination long timeout Time Unit unit throws Interrupted Exception final long end Time time Service expected End Time timeout unit long wait Time time Service remaining Time end Time Time Unit blocked Tasks Empty wait Time Thread sleep wait Time wait Time time Service remaining Time end Time Time Unit return Terminated Override public final void check Ready Tasks controller Thread check Ready Task Override public void execute Runnable command shutdown throw new Rejected Execution Exception Executor Service already shutdown command instanceof Blocking Runnable execute Blocking Runnable command else execute new Runnable Wrapper command public Executor Service get Executor Service return executor Service private void Execute Blocking Runnable runnable try executor Service execute runnable catch Rejected Execution Exception rejected put back blocked Tasks offer runnable private class Controller Thread extends Thread private final Semaphore semaphore private volatile boolean interrupted public Controller Thread String controller Thread Name super controller Thread Name set Uncaught Exception Handler e log errorf e Exception thread get Name semaphore new Semaphore public void check Ready Task semaphore release Override public void interrupt interrupted true super interrupt semaphore release Override public void run interrupted try semaphore acquire catch Interrupted Exception e return semaphore drain Permits int size blocked Tasks size size continue Array Deque Blocking Runnable ready List new Array Deque size Iterator Blocking Runnable iterator blocked Tasks iterator iterator Next Blocking Runnable runnable iterator next boolean ready try ready runnable Ready catch Exception e log debugf e Failed check ready state dropping runnable iterator remove continue ready iterator remove ready List add Last runnable trace log tracef Tasks executed still pending ready List size size Blocking Runnable runnable runnable ready List poll First null Execute runnable private static class Runnable Wrapper implements Blocking Runnable private final Runnable runnable private Runnable Wrapper Runnable runnable runnable runnable Override public boolean Ready return true Override public void run runnable run Override public String String return Runnable Wrapper runnable
package org commons executors import java util concurrent Blocking Queue import java util concurrent Executor Service import java util concurrent Linked Blocking Queue import java util concurrent Synchronous Queue import java util concurrent Thread Factory import java util concurrent Thread Pool Executor import java util concurrent Time Unit import org commons logging Log import org commons logging Log Factory author Galder Zamarre public class Blocking Thread Pool Executor Factory implements Thread Pool Executor Factory Executor Service private static final Log log Log Factory get Log Blocking Thread Pool Executor Factory class private final int max Threads private final int core Threads private final int queue Length private final long keep Alive public Blocking Thread Pool Executor Factory int max Threads int core Threads int queue Length long keep Alive max Threads max Threads core Threads core Threads queue Length queue Length keep Alive keep Alive public int max Threads return max Threads public int core Threads return core Threads public int queue Length return queue Length public long keep Alive return keep Alive Override public Executor Service create Executor Thread Factory thread Factory Blocking Queue Runnable queue queue Length new Synchronous Queue Runnable new Linked Blocking Queue Runnable queue Length return new Thread Pool Executor core Threads max Threads keep Alive Time Unit queue thread Factory new Thread Pool Executor Caller Runs Policy Override public void validate core Threads throw log illegal Value Thread Pool Parameter core threads max Threads throw log illegal Value Thread Pool Parameter max threads max Threads core Threads throw log illegal Value Thread Pool Parameter max threads core threads max threads core threads keep Alive throw log illegal Value Thread Pool Parameter keep alive time queue Length throw log illegal Value Thread Pool Parameter work queue length Override public String String return Blocking Thread Pool Executor Factory max Threads max Threads core Threads core Threads queue Length queue Length keep Alive keep Alive public static Blocking Thread Pool Executor Factory create int max Threads int queue Size int core Threads queue Size max Threads return new Blocking Thread Pool Executor Factory max Threads core Threads queue Size
package org stream import java io Exception import java io Object Input import java io Object Output import java util Set import java util function Bi Consumer import java util function Binary Operator import java util function Function import java util function Supplier import java util stream Collector import org commons marshall Externalizer import org commons marshall Serialize import org util function Serializable Supplier Helper class designed used create serializable Collector use link org Cache Stream collect Collector supplier collector problem standard link java util stream Collectors class n provide Serializable Collectors way extend functionality class used instead public class Cache Collectors private Cache Collectors Creates collector serializable upon usage create collector using serializable supplier provided user param supplier supplier crate collector specifically serializable param input type collector param resulting type collector return collector serializable see Serializable Supplier public static Collector serializable Collector Serializable Supplier Collector supplier return new Collector Supplier supplier Similar link Cache Collectors serializable Collector Serializable Supplier except supplier provided must marshable marshalling techniques Note detected runtime param supplier marshallable supplier collectors param input type collector param resulting type collector return collector serializable see Externalizer see org commons marshall Advanced Externalizer public static Collector collector Supplier Collector supplier return new Collector Supplier supplier Serialize value Collector Supplier Collector Supplier Externalizer class private static final class Collector Supplier implements Collector Object private final Supplier Collector supplier private transient Collector Object collector private Collector Object get Collector collector null collector Collector Object supplier get return collector Collector Supplier Supplier Collector supplier supplier supplier Override public Supplier Object supplier return get Collector supplier Override public Bi Consumer Object accumulator return get Collector accumulator Override public Binary Operator Object combiner return get Collector combiner Override public Function Object finisher return get Collector finisher Override public Set Characteristics characteristics return get Collector characteristics public static final class Collector Supplier Externalizer implements Externalizer Collector Supplier Override public void write Object Object Output output Collector Supplier object throws Exception output write Object object supplier Override public Collector Supplier read Object Object Input input throws Exception Class Found Exception return new Collector Supplier Supplier Collector input read Object
package org cache impl import org configuration cache Configuration import org factories annotations Inject import org jmx annotations Display Type import org jmx annotations Bean import org jmx annotations Managed Attribute import org jmx annotations Units Cache Configuration Bean Impl author Tristan Tarrant since Bean object Name Configuration description Runtime cache configuration attributes public class Cache Configuration Bean private Configuration configuration Inject public void inject Dependencies Configuration configuration configuration configuration Managed Attribute description Gets eviction size cache display Name Gets eviction size cache units Units display Type Display Type writable true public long get Eviction Size return configuration memory size public void set Eviction Size long new Size configuration memory size new Size
package org stats impl import java util Hash Set import java util Set import java util concurrent Time Unit import java util concurrent atomic Atomic Long import org Advanced Cache import org configuration cache Configuration import org factories annotations Inject import org jmx Jmx Statistics Exposer import org jmx annotations Data Type import org jmx annotations Display Type import org jmx annotations Bean import org jmx annotations Managed Attribute import org jmx annotations Measurement Type import org jmx annotations Units import org manager Embedded Cache Manager import org stats Cache Container Stats import org stats Stats import org util Time Service Cache container statistics needed admin console author Vladimir Blagojevic since Bean object Name Cache Container Stats description General cache container statistics timings hit miss ratio etc public class Cache Container Stats Impl implements Cache Container Stats Jmx Statistics Exposer private Embedded Cache Manager cm private final Atomic Long reset Nanoseconds new Atomic Long private boolean statistics Enabled false private Time Service time Service public Cache Container Stats Impl Embedded Cache Manager cm cm cm cm get Global Component Registry register Component Cache Container Stats class boolean global Jmx Stats Enabled cm get Cache Manager Configuration global Jmx Statistics enabled set Statistics Enabled global Jmx Stats Enabled Inject public void set Dependencies Time Service time Service time Service time Service Override public void set Statistics Enabled boolean enabled statistics Enabled enabled enabled yes technically reset stats initialize reset Nanoseconds set time Service time Override public boolean get Statistics Enabled return statistics Enabled Override public void reset Statistics get Statistics Enabled get Enabled Stats stats stats reset reset Nanoseconds set time Service time Managed Attribute description Enables disables gathering statistics component display Name Statistics enabled data Type Data Type writable true public boolean Statistics Enabled return get Statistics Enabled Managed Attribute description Cache container total average number nanoseconds read operation cache container display Name Cache container total average read time units Units display Type Display Type Override public long get Average Read Time long result get Statistics Enabled result calculate Average Read Time return result protected long calculate Average Read Time long total Average Read Time int included Cache Counter Stats stats get Enabled Stats long average Read Time stats get Average Read Time average Read Time included Cache Counter total Average Read Time average Read Time included Cache Counter total Average Read Time total Average Read Time included Cache Counter return total Average Read Time Managed Attribute description Cache container total average number nanoseconds remove operation cache container display Name Cache container total average remove time units Units display Type Display Type Override public long get Average Remove Time long result get Statistics Enabled result calculate Average Remove Time return result protected long calculate Average Remove Time long total Average Remove Time int included Cache Counter Stats stats get Enabled Stats long average Remove Time stats get Average Remove Time average Remove Time included Cache Counter total Average Remove Time average Remove Time included Cache Counter total Average Remove Time total Average Remove Time included Cache Counter return total Average Remove Time Managed Attribute description Cache container average number nanoseconds write operation cache container display Name Cache container average write time units Units display Type Display Type Override public long get Average Write Time long result get Statistics Enabled result calculate Average Write Time return result protected long calculate Average Write Time long total Average Write Time int included Cache Counter Stats stats get Enabled Stats long average Write Time stats get Average Write Time average Write Time included Cache Counter total Average Write Time average Write Time included Cache Counter total Average Write Time total Average Write Time included Cache Counter return total Average Write Time Managed Attribute description Cache container total number cache eviction operations display Name Cache container total number cache evictions measurement Type Measurement Type display Type Display Type Override public long get Evictions long result get Statistics Enabled result calculate Evictions return result protected long calculate Evictions long total Evictions Stats stats get Enabled Stats long evictions stats get Evictions evictions total Evictions evictions return total Evictions Managed Attribute description Cache container total number cache attribute hits display Name Cache container total number cache hits measurement Type Measurement Type display Type Display Type Override public long get Hits long result get Statistics Enabled result calculate Hits return result protected long calculate Hits long total Hits Stats stats get Enabled Stats long hits stats get Hits hits total Hits hits return total Hits Managed Attribute description Cache container total percentage hit hit miss ratio cache display Name Cache container total hit ratio units Units display Type Display Type Override public double get Hit Ratio double result get Statistics Enabled result calculate Hit Ratio return result protected double calculate Hit Ratio long total Hits double total Requests double rw Ratio Stats stats get Enabled Stats long requests stats get Retrievals requests total Hits stats get Hits total Requests requests total Requests rw Ratio total Hits total Requests return rw Ratio Managed Attribute description Cache container total number cache attribute misses display Name Cache container total number cache misses measurement Type Measurement Type display Type Display Type Override public long get Misses long result get Statistics Enabled result calculate Misses return result protected long calculate Misses long total Misess Stats stats get Enabled Stats long misses stats get Misses misses total Misess misses return total Misess Managed Attribute description Cache container total number entries currently caches cache container display Name Cache container total number cache entries display Type Display Type public int get Number Entries int result statistics Enabled statistics Enabled Stats stats get Enabled Stats int num Entries stats get Current Number Entries num Entries result num Entries return result Managed Attribute description Cache container total number entries currently memory caches cache container display Name Cache container total number memory cache entries display Type Display Type public int get Current Number Entries Memory int result statistics Enabled statistics Enabled Stats stats get Enabled Stats int num Entries stats get Current Number Entries Memory num Entries result num Entries return result Managed Attribute description Cache container read writes ratio caches cache container display Name Cache container read write ratio units Units display Type Display Type Override public double get Read Write Ratio double result get Statistics Enabled result calculate Read Write Ratio return result protected double calculate Read Write Ratio long sum Reads long sum Writes double rw Ratio Stats stats get Enabled Stats long stores stats get Stores stores sum Reads stats get Retrievals sum Writes stores sum Writes rw Ratio double sum Reads sum Writes return rw Ratio Managed Attribute description Cache container total number cache removal hits display Name Cache container total number cache removal hits measurement Type Measurement Type display Type Display Type Override public long get Remove Hits long result get Statistics Enabled result calculate Remove Hits return result protected long calculate Remove Hits long total Remove Hits Stats stats get Enabled Stats long remove Hits stats get Remove Hits remove Hits total Remove Hits remove Hits return total Remove Hits Managed Attribute description Cache container total number cache removals keys found display Name Cache container total number cache removal misses measurement Type Measurement Type display Type Display Type Override public long get Remove Misses long result get Statistics Enabled result calculate Remove Misses return result protected long calculate Remove Misses long total Remove Misses Stats stats get Enabled Stats long remove Misses stats get Remove Misses remove Misses total Remove Misses remove Misses return total Remove Misses Managed Attribute description Cache container total number cache attribute put operations display Name Cache container total number cache puts measurement Type Measurement Type display Type Display Type Override public long get Stores long result get Statistics Enabled result calculate Stores return result Override Managed Attribute description Number seconds since cache container statistics last reset display Name Seconds since cache container statistics reset units Units display Type Display Type public long get Time Since Reset long result get Statistics Enabled result time Service time Duration reset Nanoseconds get Time Unit return result protected long calculate Stores long total Stores Stats stats get Enabled Stats long stores stats get Stores stores total Stores stores return total Stores Override public long get Time Since Start long result get Statistics Enabled result calculate Time Since Start return result protected long calculate Time Since Start long longest Running Stats stats get Enabled Stats long running Time stats get Time Since Start running Time longest Running longest Running running Time return longest Running Override public int get Current Number Entries return get Number Entries Override public long get Total Number Entries return get Stores Override Managed Attribute description Amount bytes heap memory used cache container display Name Heap memory used display Type Display Type public long get Heap Memory Used return calculate Heap Used protected long calculate Heap Used long total Heap Used Stats stats get Enabled Stats long Heap Used stats get Heap Memory Used Heap Used total Heap Used Heap Used return total Heap Used Override public long get Retrievals return get Hits get Misses Override public void reset reset Statistics private Set Stats get Enabled Stats Set Stats stats new Hash Set Stats String cn cm get Cache Names cm cache Exists cn Advanced Cache cache cm get Cache cn get Advanced Cache Configuration cfg Security Actions get Cache Configuration cache cfg jmx Statistics enabled stats add cache get Stats return stats
package org cache impl import static java util Objects require Non Null import static java util concurrent Time Unit import static org context Flag import static org context Flag import static org context Flag import static org context Flag import static org context Flag import static org context Invocation Context Factory import java lang annotation Annotation import java util Array List import java util Arrays import java util Collection import java util Collections import java util Iterator import java util List import java util Map import java util Objects import java util Properties import java util Set import java util concurrent Completable Future import java util concurrent Time Unit import java util function Bi Function import java util function Function import javax security auth Subject import javax transaction System Exception import javax transaction Transaction import javax transaction Transaction Manager import javax transaction xa Resource import org Advanced Cache import org Cache Collection import org Cache Set import org Locked Stream import org Version import org atomic Delta import org atomic Delta Aware import org atomic impl Apply Delta import org batch Batch Container import org commands Commands Factory import org commands Visitable Command import org commands control Lock Control Command import org commands functional Read Write Key Command import org commands functional Read Write Key Value Command import org commands functional functions Merge Function import org commands read Entry Set Command import org commands read Get Command import org commands read Get Cache Entry Command import org commands read Get Key Value Command import org commands read Key Set Command import org commands read Size Command import org commands remote Get Keys Group Command import org commands write Clear Command import org commands write Compute Command import org commands write Compute Absent Command import org commands write Data Write Command import org commands write Evict Command import org commands write Put Key Value Command import org commands write Put Map Command import org commands write Remove Command import org commands write Remove Expired Command import org commands write Replace Command import org commands write Value Matcher import org commons Cache Exception import org commons api Basic Cache Container import org commons dataconversion Encoder import org commons dataconversion Wrapper import org commons marshall Streaming Marshaller import org commons util Enum Util import org commons util Collections import org commons util Util import org configuration cache Configuration import org configuration format Property Formatter import org configuration global Global Configuration import org container Data Container import org container entries Cache Entry import org context Flag import org context Invocation Context import org context Invocation Context Container import org context Invocation Context Factory import org context impl Flag Bit Sets import org context impl Tx Invocation Context import org distribution Distribution Manager import org encoding Data Conversion import org eviction Eviction Manager import org eviction Passivation Manager import org expiration Expiration Manager import org factories Component Registry import org factories annotations Inject import org factories annotations Survives Restarts import org filter Key Filter import org functional impl Params import org interceptors Async Interceptor import org interceptors Async Interceptor Chain import org interceptors base Command Interceptor import org jmx annotations Data Type import org jmx annotations Display Type import org jmx annotations Bean import org jmx annotations Managed Attribute import org jmx annotations Managed Operation import org lifecycle Component Status import org manager Embedded Cache Manager import org metadata Embedded Metadata import org metadata Metadata import org notifications cachelistener Cache Notifier import org notifications cachelistener Listener Holder import org notifications cachelistener filter Cache Event Converter import org notifications cachelistener filter Cache Event Filter import org partitionhandling Availability Mode import org partitionhandling impl Partition Handling Manager import org remoting rpc Rpc Manager import org security Authorization Manager import org stats Stats import org stats impl Stats Impl import org stream Stream Marshalling import org stream impl Locked Stream Impl import org stream impl Tx Locked Stream Impl import org stream impl local Value Cache Collection import org topology Local Topology Manager import org transaction Locking Mode import org transaction impl Transaction Table import org transaction xa Transaction Xa Adapter import org transaction xa Xa Transaction Table import org util concurrent Completable Futures import org util concurrent locks Lock Manager import org util logging Log import org util logging Log Factory author Mircea Markus jboss com author Galder Zamarre author Sanne Grinovero author href http gleamynode net Trustin Lee since Survives Restarts Bean object Name Cache Impl description Component represents individual cache instance public class Cache Impl implements Advanced Cache public static final String Cache private static final long Enum Util bit Set protected Invocation Context Factory invocation Context Factory protected Commands Factory commands Factory protected Async Interceptor Chain invoker protected Configuration config protected Cache Notifier notifier protected Batch Container batch Container protected Component Registry component Registry protected Transaction Manager transaction Manager protected Rpc Manager rpc Manager protected Streaming Marshaller marshaller protected Metadata default Metadata private final String name private Eviction Manager eviction Manager private Expiration Manager expiration Manager private Data Container data Container private static final Log log Log Factory get Log Cache Impl class private static final boolean trace log Trace Enabled private Embedded Cache Manager cache Manager private Lock Manager lock Manager private Distribution Manager distribution Manager private Transaction Table tx Table private Authorization Manager authorization Manager private Partition Handling Manager partition Handling Manager private Global Configuration global Cfg private Local Topology Manager local Topology Manager private volatile boolean stopping false private boolean transactional private boolean batching Enabled public Cache Impl String name name name Inject public void inject Dependencies Eviction Manager eviction Manager Expiration Manager expiration Manager Invocation Context Factory invocation Context Factory Commands Factory commands Factory Async Interceptor Chain interceptor Chain Configuration configuration Cache Notifier notifier Component Registry component Registry Transaction Manager transaction Manager Batch Container batch Container Rpc Manager rpc Manager Data Container data Container Streaming Marshaller marshaller Distribution Manager distribution Manager Embedded Cache Manager cache Manager Transaction Table tx Table Lock Manager lock Manager Authorization Manager authorization Manager Global Configuration global Cfg Partition Handling Manager partition Handling Manager Local Topology Manager local Topology Manager commands Factory commands Factory invoker interceptor Chain config configuration notifier notifier component Registry component Registry transaction Manager transaction Manager batch Container batch Container rpc Manager rpc Manager eviction Manager eviction Manager expiration Manager expiration Manager data Container data Container marshaller marshaller cache Manager cache Manager invocation Context Factory invocation Context Factory distribution Manager distribution Manager tx Table tx Table lock Manager lock Manager authorization Manager authorization Manager global Cfg global Cfg partition Handling Manager partition Handling Manager local Topology Manager local Topology Manager start since components may start actual cache access default metadata operations default Metadata new Embedded Metadata Builder lifespan config expiration lifespan max Idle config expiration max Idle build transactional config transaction transaction Mode Transactional batching Enabled config invocation Batching enabled private void assert Key Null Object key require Non Null key Null keys supported private void assert Value Null Object value require Non Null value Null values supported void assert Key Value Null Object key Object value assert Key Null key assert Value Null value private void assert Function Null Object function require Non Null function Null functions supported Cache Support extend Advanced Cache really call cache methods take Metadata parameter Since Cache Support methods declared final easiest Cache Impl stop extending Cache Support implement base methods directly Override public final put key value return put key value default Metadata Override public final put key value long lifespan Time Unit unit return put key value lifespan unit default Metadata max Idle Override public final put Absent key value long lifespan Time Unit unit return put Absent key value lifespan unit default Metadata max Idle Override public final void put Map extends extends map long lifespan Time Unit unit put map lifespan unit default Metadata max Idle Override public final replace key value long lifespan Time Unit unit return replace key value lifespan unit default Metadata max Idle Override public final boolean replace key old Value value long lifespan Time Unit unit return replace key old Value value lifespan unit default Metadata max Idle Override public final put Absent key value return put Absent key value default Metadata Override public final boolean replace key old Value new Value return replace key old Value new Value default Metadata Override public final replace key value return replace key value default Metadata Override public compute key Bi Function super super extends remapping Function return compute key remapping Function false Override public compute key Bi Function super super extends remapping Function Metadata metadata return compute Internal key remapping Function false metadata add Unsafe Flags Enum Util Override public compute Present key Bi Function super super extends remapping Function return compute key remapping Function true Override public compute Present key Bi Function super super extends remapping Function Metadata metadata return compute Internal key remapping Function true metadata add Unsafe Flags Enum Util private compute key Bi Function super super extends remapping Function boolean compute Present return compute Internal key remapping Function compute Present apply Default Metadata default Metadata add Unsafe Flags Enum Util private compute Internal key Bi Function super super extends remapping Function boolean compute Present Metadata metadata long flags return compute Internal key remapping Function compute Present metadata flags get Invocation Context Implicit Transaction false compute Internal key Bi Function super super extends remapping Function boolean compute Present Metadata metadata long flags Invocation Context ctx assert Key Null key assert Function Null remapping Function Compute Command command commands Factory build Compute Command key remapping Function compute Present metadata flags ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return execute Command Commit Needed ctx command Override public final compute Absent key Function super extends mapping Function return compute Absent key mapping Function default Metadata Override public compute Absent key Function super extends mapping Function Metadata metadata return compute Absent Internal key mapping Function metadata add Unsafe Flags Enum Util get Invocation Context Implicit Transaction false compute Absent Internal key Function super extends mapping Function Metadata metadata long flags Invocation Context ctx assert Key Null key assert Function Null mapping Function Compute Absent Command command commands Factory build Compute Absent Command key mapping Function metadata flags ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return execute Command Commit Needed ctx command Override public merge key value Bi Function super super extends remapping Function return merge Internal key value remapping Function default Metadata add Unsafe Flags Enum Util get Invocation Context Implicit Transaction false Override public merge key value Bi Function super super extends remapping Function Metadata metadata return merge Internal key value remapping Function metadata add Unsafe Flags Enum Util get Invocation Context Implicit Transaction false merge Internal key value Bi Function super super extends remapping Function Metadata metadata long flags Invocation Context ctx assert Key Null key assert Value Null value assert Function Null remapping Function Read Write Key Command command commands Factory build Read Write Key Command key new Merge Function value remapping Function metadata Params Flags Bit Set flags get Key Data Conversion get Value Data Conversion ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return execute Command Commit Needed ctx command Override public final Completable Future put Async key value return put Async key value default Metadata Override public final Completable Future put Async key value long lifespan Time Unit unit return put Async key value lifespan unit default Metadata max Idle Override public final Completable Future Void put Async Map extends extends data return put Async data default Metadata Override public final Completable Future Void put Async Map extends extends data long lifespan Time Unit unit return put Async data lifespan default Metadata max Idle Override public final Completable Future put Absent Async key value return put Absent Async key value default Metadata Override public final Completable Future put Absent Async key value long lifespan Time Unit unit return put Absent Async key value lifespan unit default Metadata max Idle Override public final Completable Future replace Async key value return replace Async key value default Metadata Override public final Completable Future replace Async key value long lifespan Time Unit unit return replace Async key value lifespan unit default Metadata max Idle Override public final Completable Future Boolean replace Async key old Value new Value return replace Async key old Value new Value default Metadata Override public final Completable Future Boolean replace Async key old Value new Value long lifespan Time Unit unit return replace Async key old Value new Value lifespan unit default Metadata max Idle Override public final void put Map extends extends put default Metadata Override public final boolean remove Object key Object value return remove key value Enum Util get Invocation Context Implicit Transaction false final boolean remove Object key Object value long explicit Flags Invocation Context ctx assert Key Value Null key value Remove Command command create Remove Conditional Command key value explicit Flags ctx return Boolean execute Command Commit Needed ctx command private Remove Command create Remove Conditional Command Object key Object value long explicit Flags Invocation Context ctx Remove Command command commands Factory build Remove Command key value explicit Flags ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Override public final int size return size Enum Util final int size long explicit Flags Size Command command commands Factory build Size Command explicit Flags return Integer invoker invoke invocation Context Factory create Invocation Context false command Override public final boolean Empty return Empty Enum Util final boolean Empty long explicit Flags return entry Set explicit Flags stream Match Stream Marshalling always True Predicate Override public final boolean contains Key Object key return contains Key key Enum Util invocation Context Factory create Invocation Context false final boolean contains Key Object key long explicit Flags Invocation Context ctx return get key explicit Flags ctx null Override public final boolean contains Value Object value assert Value Null value return values stream Match Stream Marshalling equality Predicate value Override public final get Object key return get key Enum Util invocation Context Factory create Invocation Context false Suppress Warnings unchecked final get Object key long explicit Flags Invocation Context ctx assert Key Null key Get Key Value Command command commands Factory build Get Key Value Command key explicit Flags return invoker invoke ctx command final Cache Entry get Cache Entry Object key long explicit Flags Invocation Context ctx assert Key Null key Get Cache Entry Command command commands Factory build Get Cache Entry Command key explicit Flags Object ret invoker invoke ctx command return Cache Entry ret Override public final Cache Entry get Cache Entry Object key return get Cache Entry key Enum Util invocation Context Factory create Invocation Context false Override public Map get Set keys return get keys Enum Util invocation Context Factory create Invocation Context false keys size final Map get Set keys long explicit Flags Invocation Context ctx Get Command command commands Factory build Get Command keys explicit Flags false Map map Map invoker invoke ctx command return drop Null Entries map private Map drop Null Entries Map map Iterator Entry entry Iterator map entry Set iterator entry Iterator Next Entry entry entry Iterator next entry get Value null entry Iterator remove return map Override public Map Cache Entry get Cache Entries Set keys return get Cache Entries keys Enum Util invocation Context Factory create Invocation Context false keys size public final Map Cache Entry get Cache Entries Set keys long explicit Flags Invocation Context ctx Get Command command commands Factory build Get Command keys explicit Flags true Map Cache Entry map Map Cache Entry invoker invoke ctx command Iterator Map Entry Cache Entry entry Iterator map entry Set iterator entry Iterator Next Map Entry Cache Entry entry entry Iterator next entry get Value null entry Iterator remove return map Override public Map get Group String group Name return get Group group Name Enum Util final Map get Group String group Name long explicit Flags Invocation Context ctx invocation Context Factory create Invocation Context false return Collections unmodifiable Map internal Get Group group Name explicit Flags ctx private Map internal Get Group String group Name long explicit Flags Bit Set Invocation Context ctx Get Keys Group Command command commands Factory build Get Keys Group Command explicit Flags Bit Set group Name noinspection unchecked return Map invoker invoke ctx command Override public void remove Group String group Name remove Group group Name Enum Util final void remove Group String group Name long explicit Flags transactional non Transactional Remove Group group Name explicit Flags else transactional Remove Group group Name explicit Flags private void transactional Remove Group String group Name long explicit Flags Bit Set final boolean Going Transaction get Ongoing Transaction null Going Transaction try Begin try Invocation Context context get Invocation Context Implicit Transaction false Map keys internal Get Group group Name explicit Flags Bit Set context long remove Flags add Ignore Return Values Flag explicit Flags Bit Set key keys key Set Remove Command command create Remove Command key remove Flags context execute Command Commit Needed context command Going Transaction try Commit catch Runtime Exception e Going Transaction try Rollback throw e private void non Transactional Remove Group String group Name long explicit Flags Invocation Context context invocation Context Factory create Invocation Context false Map keys internal Get Group group Name explicit Flags context long remove Flags add Ignore Return Values Flag explicit Flags key keys key Set new context needed remove since non owners command sent primary owner executed context already populated throws Class Cast Exception wrap Remove invoked assert Key Null key Invocation Context ctx get Invocation Context Implicit Transaction false Remove Command command create Remove Command key remove Flags ctx execute Command Commit Needed ctx command Override public final remove Object key return remove key Enum Util get Invocation Context Implicit Transaction false final remove Object key long explicit Flags Invocation Context ctx assert Key Null key Remove Command command create Remove Command key explicit Flags ctx return execute Command Commit Needed ctx command Suppress Warnings unchecked private Remove Command create Remove Command Object key long explicit Flags Invocation Context ctx long flags add Unsafe Flags explicit Flags Remove Command command commands Factory build Remove Command key null flags ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Override public void remove Expired key value Long lifespan Invocation Context ctx get Invocation Context Implicit Transaction false Remove Expired Command command commands Factory build Remove Expired Command key value lifespan ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner Send expired remove command everyone execute Command Commit Needed ctx command Override public Advanced Cache Encoding Class extends Encoder encoder Class return new Encoder Cache Data Conversion Encoding encoder Class Data Conversion Encoding encoder Class Override public Advanced Cache Encoding Class extends Encoder key Encoder Class Class extends Encoder value Encoder Class return new Encoder Cache Data Conversion Encoding key Encoder Class Data Conversion Encoding value Encoder Class Override public Advanced Cache Wrapping Class extends Wrapper wrapper Class return new Encoder Cache Data Conversion Wrapping wrapper Class Data Conversion Wrapping wrapper Class Override public Encoder get Key Encoder return get Key Data Conversion get Encoder Override public Encoder get Value Encoder return get Value Data Conversion get Encoder Override public Wrapper get Key Wrapper return get Key Data Conversion get Wrapper Override public Wrapper get Value Wrapper return get Value Data Conversion get Wrapper Override public Advanced Cache Wrapping Class extends Wrapper key Wrapper Class Class extends Wrapper value Wrapper Class return new Encoder Cache Data Conversion Wrapping key Wrapper Class Data Conversion Wrapping value Wrapper Class Override public Data Conversion get Key Data Conversion return Data Conversion Override public Data Conversion get Value Data Conversion return Data Conversion Managed Operation description Clears cache display Name Clears cache name clear public final void clear Operation clear Enum Util Override public final void clear clear Enum Util final void clear long explicit Flags final Transaction tx suspend Ongoing Transaction Exists try Invocation Context context invocation Context Factory create Clear Non Tx Invocation Context Clear Command command commands Factory build Clear Command explicit Flags invoker invoke context command finally resume Previous Ongoing Transaction tx true problems trying resume transaction clear Override public Cache Set key Set return key Set Enum Util Suppress Warnings unchecked Cache Set key Set long explicit Flags Invocation Context ctx invocation Context Factory create Invocation Context false Key Set Command command commands Factory build Key Set Command explicit Flags return Cache Set invoker invoke ctx command Override public Cache Collection values return values Enum Util Cache Collection values long explicit Flags return new Value Cache Collection cache Entry Set explicit Flags Override public Cache Set Cache Entry cache Entry Set return cache Entry Set Enum Util Override public Locked Stream locked Stream transactional config transaction locking Mode Locking Mode throw new Unsupported Operation Exception Method locked Stream supported transactional caches return new Tx Locked Stream Impl transaction Manager cache Entry Set stream config locking lock Acquisition Timeout Time Unit return new Locked Stream Impl cache Entry Set stream config locking lock Acquisition Timeout Time Unit Suppress Warnings unchecked Cache Set Cache Entry cache Entry Set long explicit Flags return cache Entry Set explicit Flags invocation Context Factory create Invocation Context false Suppress Warnings unchecked Cache Set Cache Entry cache Entry Set long explicit Flags Invocation Context ctx Entry Set Command command commands Factory build Entry Set Command explicit Flags return Cache Set Cache Entry invoker invoke ctx command Override public Cache Set Entry entry Set return entry Set Enum Util Suppress Warnings unchecked Cache Set Map Entry entry Set long explicit Flags Invocation Context ctx invocation Context Factory create Invocation Context false Entry Set Command command commands Factory build Entry Set Command explicit Flags return Cache Set Map Entry invoker invoke ctx command Override public final void put External Read key value put External Read key value Enum Util Override public void put External Read key value long lifespan Time Unit lifespan Unit put External Read key value lifespan lifespan Unit default Metadata max Idle Override public void put External Read key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time idle Time Unit build put External Read key value metadata Override public void put External Read key value Metadata metadata Metadata merged apply Default Metadata metadata put External Read key value merged Enum Util final void put External Read key value long explicit Flags put External Read key value default Metadata explicit Flags final void put External Read key value Metadata metadata long explicit Flags Transaction ongoing Transaction null try ongoing Transaction suspend Ongoing Transaction Exists entry exists op put Absent key value metadata Enum Util merge Bit Sets explicit Flags catch Exception e log Debug Enabled log debug Caught exception put External Read e finally resume Previous Ongoing Transaction ongoing Transaction true problems trying resume transaction put External Read Override public final void evict key evict key Enum Util final void evict key long explicit Flags assert Key Null key config memory Eviction Enabled log eviction Disabled name Invocation Context ctx create Single Key Non Tx Invocation Context Evict Command command commands Factory build Evict Command key explicit Flags invoker invoke ctx command private Invocation Context create Single Key Non Tx Invocation Context return invocation Context Factory create Single Key Non Tx Invocation Context Override public Configuration get Cache Configuration return config Override public void add Listener Object listener notifier add Listener listener void add Listener Listener Holder listener Holder notifier add Listener listener Holder null null null void add Listener Listener Holder listener Holder Cache Event Filter super super filter Cache Event Converter super super converter notifier add Listener listener Holder filter converter null Override public void add Listener Object listener Key Filter super filter notifier add Listener listener filter Override public void add Listener Object listener Cache Event Filter super super filter Cache Event Converter super super converter notifier add Listener listener filter converter Override public void remove Listener Object listener notifier remove Listener listener Override public Set Object get Listeners return notifier get Listeners Override public void add Filtered Listener Object listener Cache Event Filter super super filter Cache Event Converter super super converter Set Class extends Annotation filter Annotations notifier add Filtered Listener listener filter converter filter Annotations void add Filtered Listener Listener Holder listener Cache Event Filter super super filter Cache Event Converter super super converter Set Class extends Annotation filter Annotations notifier add Filtered Listener listener filter converter filter Annotations transactional cache auto Commit set true starts transaction transactional call Invocation Context get Invocation Context Implicit Transaction boolean Put External Read int key Count Invocation Context invocation Context boolean tx Injected false transactional Put External Read Transaction transaction get Ongoing Transaction transaction null config transaction auto Commit transaction try Begin tx Injected true invocation Context invocation Context Factory create Invocation Context transaction tx Injected else invocation Context invocation Context Factory create Single Key Non Tx Invocation Context else invocation Context invocation Context Factory create Invocation Context true key Count return invocation Context Override public boolean lock keys assert Key Null keys return lock Arrays List keys Enum Util Override public boolean lock Collection extends keys return lock keys Enum Util boolean lock Collection extends keys long flags Bit Set transactional throw new Unsupported Operation Exception Calling lock non transactional caches allowed keys null keys Empty throw new Illegal Argument Exception lock empty list keys Invocation Context ctx invocation Context Factory create Invocation Context true Lock Control Command command commands Factory build Lock Control Command keys flags Bit Set ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return Boolean invoker invoke ctx command Override public void apply Delta delta Aware Value Key Delta delta Object locks Acquire locks Acquire null locks Acquire length throw new Illegal Argument Exception lock empty list keys else locks Acquire length throw new Illegal Argument Exception one lock permitted else Objects equals locks Acquire delta Aware Value Key throw new Illegal Argument Exception delta aware key locked key must match assert Key Null delta Aware Value Key Invocation Context ctx invocation Context Factory create Invocation Context true Read Write Key Value Command Object Object command create Apply Delta delta Aware Value Key delta Flag Bit Sets ctx invoker invoke ctx command private Read Write Key Value Command Object Object create Apply Delta delta Aware Value Key Delta delta long explicit Flags Invocation Context ctx Read Write Key Value Command Object Object command commands Factory build Read Write Key Value Command delta Aware Value Key delta new Apply Delta marshaller Params create get Key Data Conversion get Value Data Conversion command set Flags Bit Set explicit Flags ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Override Managed Operation description Starts cache display Name Starts cache public void start component Registry start log Debug Enabled log debugf Started cache get Name get Cache Manager get Address Override Managed Operation description Stops cache display Name Stops cache public void stop perform Immediate Shutdown Override Managed Operation description Shuts cache across cluster display Name Clustered cache shutdown public void shutdown log Debug Enabled log debugf Shutting cache get Name get Cache Manager get Address synchronized stopping component Registry get Status Component Status stopping true request Cluster Wide Shutdown private void request Cluster Wide Shutdown cache clustered perform cluster wide shutdown otherwise immediately config clustering cache Mode Clustered try local Topology Manager cache Shutdown name catch Exception e throw new Cache Exception e perform Immediate Shutdown private void perform Immediate Shutdown log Debug Enabled log debugf Stopping cache get Name get Cache Manager get Address component Registry stop public void perform Graceful Shutdown Perform orderly shutdown operations Passivation Manager passivation Manager component Registry get Component Passivation Manager class passivation Manager null passivation Manager passivate Override public List Command Interceptor get Interceptor Chain List Async Interceptor interceptors invoker get Interceptors Array List Command Interceptor list new Array List interceptors size interceptors interceptor interceptor instanceof Command Interceptor list add Command Interceptor interceptor return list Override public void add Interceptor Command Interceptor int position invoker add Interceptor position Override public Async Interceptor Chain get Async Interceptor Chain return invoker Override public boolean add Interceptor Command Interceptor Class extends Command Interceptor Interceptor return invoker add Interceptor Interceptor Override public boolean add Interceptor Command Interceptor Class extends Command Interceptor Interceptor return invoker add Interceptor Interceptor Override public void remove Interceptor int position invoker remove Interceptor position Override public void remove Interceptor Class extends Command Interceptor interceptor Type invoker remove Interceptor interceptor Type Override public Eviction Manager get Eviction Manager return eviction Manager Override public Expiration Manager get Expiration Manager return expiration Manager Override public Component Registry get Component Registry return component Registry Override public Distribution Manager get Distribution Manager return distribution Manager Override public Authorization Manager get Authorization Manager return authorization Manager Override public Advanced Cache lock Object lock Owner Objects non Null lock Owner return new Decorated Cache lock Owner Override public Component Status get Status return component Registry get Status Returns String representation Component Status enumeration order avoid class found exceptions tools n access classes Managed Attribute description Returns cache status display Name Cache status data Type Data Type display Type Display Type public String get Cache Status return get Status String Override public Availability Mode get Availability return partition Handling Manager get Availability Mode Override public void set Availability Availability Mode availability local Topology Manager null try local Topology Manager set Cache Availability get Name availability catch Exception e throw new Cache Exception e Managed Attribute description Returns cache availability display Name Cache availability data Type Data Type writable true public String get Cache Availability return get Availability String public void set Cache Availability String availability String throws Exception set Availability Availability Mode value availability String Managed Attribute description Returns whether cache rebalancing enabled display Name Cache rebalacing data Type Data Type writable true public boolean Rebalancing Enabled local Topology Manager null try return local Topology Manager Cache Rebalancing Enabled get Name catch Exception e throw new Cache Exception e else return false public void set Rebalancing Enabled boolean enabled local Topology Manager null try local Topology Manager set Cache Rebalancing Enabled get Name enabled catch Exception e throw new Cache Exception e Override public boolean start Batch batching Enabled throw log invocation Batching Enabled return batch Container start Batch Override public void end Batch boolean successful batching Enabled throw log invocation Batching Enabled batch Container end Batch successful Override public String get Name return name Returns cache name default cache returns friendly name Managed Attribute description Returns cache name display Name Cache name data Type Data Type display Type Display Type public String get Cache Name String name get Name equals Basic Cache Container Default Cache get Name return name get Cache Configuration clustering cache Mode String Lower Case Returns version Managed Attribute description Returns version display Name version data Type Data Type display Type Display Type Override public String get Version return Version get Version Override public String String return Cache name config null config clustering cache Mode Clustered get Cache Manager get Address Util hex Id Hash Code get Cache Manager Override public Batch Container get Batch Container return batch Container Override public Invocation Context Container get Invocation Context Container return null Override public Data Container get Data Container return data Container Override public Transaction Manager get Transaction Manager return transaction Manager Override public Lock Manager get Lock Manager return lock Manager Override public Embedded Cache Manager get Cache Manager return cache Manager Override public Stats get Stats return new Stats Impl invoker Override public Resource get Resource return new Transaction Xa Adapter Xa Transaction Table tx Table Override public final put key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time idle Time Unit build return put key value metadata Suppress Warnings unchecked final put key value Metadata metadata long explicit Flags Invocation Context ctx assert Key Value Null key value Data Write Command command used example preloading entry empty changeset unless better defined would n store value properly value instanceof Delta command create Apply Delta key Delta value explicit Flags ctx else value instanceof Delta Aware explicit Flags Flag Bit Sets command create Apply Delta key Delta Aware value delta explicit Flags ctx else command create Put Command key value metadata explicit Flags ctx return execute Command Commit Needed ctx command Suppress Warnings unchecked private Put Key Value Command create Put Command key value Metadata metadata long explicit Flags Invocation Context ctx long flags add Unsafe Flags explicit Flags Metadata merged apply Default Metadata metadata Put Key Value Command command commands Factory build Put Key Value Command key value merged flags ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command private long add Ignore Return Values Flag long flag Bit Set return Enum Util merge Bit Sets flag Bit Set Flag Bit Sets private long add Unsafe Flags long flag Bit Set return config unsafe unreliable Return Values add Ignore Return Values Flag flag Bit Set flag Bit Set Override public final put Absent key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time idle Time Unit build return put Absent key value metadata Enum Util private final put Absent key value Metadata metadata long explicit Flags return put Absent key value metadata explicit Flags get Invocation Context Implicit Transaction Enum Util contains explicit Flags Flag Bit Sets Suppress Warnings unchecked final put Absent key value Metadata metadata long explicit Flags Invocation Context ctx assert Key Value Null key value Data Write Command command value instanceof Delta command create Apply Delta key Delta value explicit Flags ctx else value instanceof Delta Aware explicit Flags Flag Bit Sets command create Apply Delta key Delta Aware value delta explicit Flags ctx else command create Put Absent Command key value metadata explicit Flags ctx return execute Command Commit Needed ctx command Suppress Warnings unchecked private Put Key Value Command create Put Absent Command key value Metadata metadata long explicit Flags Invocation Context ctx long flags add Unsafe Flags explicit Flags Metadata merged apply Default Metadata metadata Put Key Value Command command commands Factory build Put Key Value Command key value merged flags command set Put Absent true command set Value Matcher Value Matcher ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Override public final void put Map extends extends map long lifespan Time Unit lifespan Unit long max Idle Time Time Unit idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time idle Time Unit build put map metadata final void put Map extends extends map Metadata metadata long explicit Flags Invocation Context ctx Vanilla Put Map Command returns previous values add drop return value Interceptors free clear flag appropriate since interceptors consumers return value explicit Flags Enum Util merge Bit Sets explicit Flags Flag Bit Sets Put Map Command command create Put Command map metadata explicit Flags ctx execute Command Commit Needed ctx command public final Map get Put Map extends extends map return get Put map default Metadata Enum Util get Invocation Context Implicit Transaction false map size final Map get Put Map extends extends map Metadata metadata long explicit Flags Invocation Context ctx Put Map Command command create Put Command map metadata explicit Flags ctx return drop Null Entries Map execute Command Commit Needed ctx command private Put Map Command create Put Command Map extends extends map Metadata metadata long explicit Flags Invocation Context ctx Collections assert Null Entries map map Metadata merged apply Default Metadata metadata Put Map Command command commands Factory build Put Map Command map merged explicit Flags ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Override public final replace key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time idle Time Unit build return replace key value metadata Suppress Warnings unchecked final replace key value Metadata metadata long explicit Flags Invocation Context ctx assert Key Value Null key value Replace Command command create Replace Command key value metadata explicit Flags ctx return execute Command Commit Needed ctx command Suppress Warnings unchecked private Replace Command create Replace Command key value Metadata metadata long explicit Flags Invocation Context ctx long flags add Unsafe Flags explicit Flags Metadata merged apply Default Metadata metadata Replace Command command commands Factory build Replace Command key null value merged flags ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Override public final boolean replace key old Value value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time idle Time Unit build return replace key old Value value metadata final boolean replace key old Value value Metadata metadata long explicit Flags Invocation Context ctx assert Key Value Null key value assert Value Null old Value Replace Command command create Replace Conditional Command key old Value value metadata explicit Flags ctx return Boolean execute Command Commit Needed ctx command private Replace Command create Replace Conditional Command key old Value value Metadata metadata long explicit Flags Invocation Context ctx Metadata merged apply Default Metadata metadata Replace Command command commands Factory build Replace Command key old Value value merged explicit Flags ctx get Lock Owner null ctx set Lock Owner command get Key Lock Owner return command Wraps return value future needed Typically stack operation configuration support handling futures retval already future case method nothing except cast future p Otherwise future wrapper created already completed simply returns retval used consistency param retval return value wrap param contents future return future Suppress Warnings unchecked private Completable Future wrap Future final Object retval retval instanceof Completable Future return Completable Future retval else return Completable Future completed Future retval Override public final Completable Future put Async key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return put Async key value metadata final Completable Future put Async final key final value final Metadata metadata final long explicit Flags Invocation Context ctx assert Key Value Null key value Put Key Value Command command create Put Command key value metadata explicit Flags ctx return execute Command Commit Needed Async ctx command Override public final Completable Future Void put Async Map extends extends data long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return put Async data metadata final Completable Future Void put Async final Map extends extends data final Metadata metadata return put Async data metadata Enum Util get Invocation Context Implicit Transaction false data size final Completable Future Void put Async final Map extends extends data final Metadata metadata long explicit Flags Invocation Context ctx explicit Flags Enum Util merge Bit Sets explicit Flags Flag Bit Sets Put Map Command command create Put Command data metadata explicit Flags ctx return execute Command Commit Needed Async ctx command Override public final Completable Future Void clear Async return clear Async Enum Util final Completable Future Void clear Async final long explicit Flags Invocation Context context invocation Context Factory create Clear Non Tx Invocation Context Clear Command command commands Factory build Clear Command explicit Flags return invoker invoke Async context command Apply nil null Override public final Completable Future put Absent Async key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return put Absent Async key value metadata final Completable Future put Absent Async final key final value final Metadata metadata return put Absent Async key value metadata Enum Util get Invocation Context Implicit Transaction false final Completable Future put Absent Async final key final value final Metadata metadata final long explicit Flags Invocation Context ctx assert Key Value Null key value Put Key Value Command command create Put Absent Command key value metadata explicit Flags ctx return execute Command Commit Needed Async ctx command Override public final Completable Future remove Async Object key return remove Async key Enum Util get Invocation Context Implicit Transaction false final Completable Future remove Async final Object key final long explicit Flags Invocation Context ctx assert Key Null key Remove Command command create Remove Command key explicit Flags ctx return execute Command Commit Needed Async ctx command Override public final Completable Future Boolean remove Async Object key Object value return remove Async key value Enum Util get Invocation Context Implicit Transaction false final Completable Future Boolean remove Async final Object key final Object value final long explicit Flags Invocation Context ctx assert Key Value Null key value Remove Command command create Remove Conditional Command key value explicit Flags ctx return execute Command Commit Needed Async ctx command Override public final Completable Future replace Async key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return replace Async key value metadata final Completable Future replace Async final key final value final Metadata metadata return replace Async key value metadata Enum Util get Invocation Context Implicit Transaction false final Completable Future replace Async final key final value final Metadata metadata final long explicit Flags Invocation Context ctx assert Key Value Null key value Replace Command command create Replace Command key value metadata explicit Flags ctx return execute Command Commit Needed Async ctx command Override public final Completable Future Boolean replace Async key old Value new Value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return replace Async key old Value new Value metadata final Completable Future Boolean replace Async final key final old Value final new Value final Metadata metadata return replace Async key old Value new Value metadata Enum Util get Invocation Context Implicit Transaction false final Completable Future Boolean replace Async final key final old Value final new Value final Metadata metadata final long explicit Flags Invocation Context ctx assert Key Value Null key new Value assert Value Null old Value Replace Command command create Replace Conditional Command key old Value new Value metadata explicit Flags ctx return execute Command Commit Needed Async ctx command Override public Completable Future get Async key return get Async key Enum Util invocation Context Factory create Invocation Context false Suppress Warnings unchecked Completable Future get Async final key final long explicit Flags Invocation Context ctx assert Key Null key Get Key Value Command command commands Factory build Get Key Value Command key explicit Flags return Completable Future invoker invoke Async ctx command Override public Advanced Cache get Advanced Cache return Override public Rpc Manager get Rpc Manager return rpc Manager Override public Advanced Cache Flags final Flag flags flags null flags length return else return new Decorated Cache flags Override public Advanced Cache Subject Subject subject return private Transaction get Ongoing Transaction try Transaction transaction null transaction Manager null transaction transaction Manager get Transaction transaction null batching Enabled transaction batch Container get Batch Transaction return transaction catch System Exception e throw new Cache Exception Unable get transaction e Object execute Command Commit Needed Invocation Context ctx Visitable Command command final boolean tx Injected Tx Injected ctx Object result try result invoker invoke ctx command catch Throwable e tx Injected try Rollback throw e tx Injected try Commit return result private Completable Future execute Command Commit Needed Async Invocation Context ctx Visitable Command command final boolean tx Injected Tx Injected ctx Completable Future cf final Transaction implicit Transaction try interceptors must access thread local transaction anyway tx Injected implicit Transaction transaction Manager suspend assert implicit Transaction null else implicit Transaction null cf Completable Future invoker invoke Async ctx command catch System Exception e throw new Cache Exception suspend implicit transaction e catch Throwable e tx Injected try Rollback throw e tx Injected return cf handle result throwable throwable null try implicit Transaction rollback catch System Exception e log trace Could rollback e throwable add Suppressed e throw Completable Futures Completion Exception throwable try implicit Transaction commit catch Exception e log could Complete Injected Transaction e throw Completable Futures Completion Exception e return result else return cf private boolean Tx Injected Invocation Context ctx return ctx Tx Scope Tx Invocation Context ctx Implicit Transaction private Transaction try Begin transaction Manager null return null try transaction Manager begin final Transaction transaction get Ongoing Transaction trace log tracef Implicit transaction started Transaction transaction return transaction catch Runtime Exception e throw e catch Exception e throw new Cache Exception Unable begin implicit transaction e private void try Rollback try transaction Manager null transaction Manager rollback catch Throwable trace log trace Could rollback best effort private void try Commit transaction Manager null return trace log tracef Committing transaction implicit get Ongoing Transaction try transaction Manager commit catch Throwable e log could Complete Injected Transaction e throw new Cache Exception Could commit implicit transaction e Override public Class Loader get Class Loader Class Loader class Loader global Cfg class Loader return class Loader null class Loader Thread current Thread get Context Class Loader Override public Advanced Cache Class Loader class Loader return Override public put key value Metadata metadata return put key value metadata Enum Util get Invocation Context Implicit Transaction false Override public void put Map extends extends map Metadata metadata put map metadata Enum Util get Invocation Context Implicit Transaction false map size private Metadata apply Default Metadata Metadata metadata metadata null return default Metadata Metadata Builder builder metadata builder return builder null builder merge default Metadata build metadata Override public replace key value Metadata metadata return replace key value metadata Enum Util get Invocation Context Implicit Transaction false Override public boolean replace key old Value value Metadata metadata return replace key old Value value metadata Enum Util get Invocation Context Implicit Transaction false Override public put Absent key value Metadata metadata return put Absent key value metadata Enum Util Override public Completable Future put Async key value Metadata metadata return put Async key value metadata Enum Util get Invocation Context Implicit Transaction false private Transaction suspend Ongoing Transaction Exists final Transaction tx get Ongoing Transaction tx null try transaction Manager suspend catch System Exception e throw new Cache Exception Unable suspend transaction e return tx private void resume Previous Ongoing Transaction Transaction transaction boolean fail Silently String fail Message transaction null try transaction Manager resume transaction catch Exception e fail Silently log Debug Enabled log debug fail Message else throw new Cache Exception fail Message e Managed Attribute description Returns cache configuration form properties display Name Cache configuration properties data Type Data Type display Type Display Type public Properties get Configuration Properties return new Property Formatter format config
package org jmx import java util Hash Set import java util Set import javax management Instance Found Exception import javax management Bean Registration Exception import javax management Bean Server import javax management Malformed Object Name Exception import javax management Object Name import org Advanced Cache import org Cache import org commons Cache Exception import org commons api Basic Cache Container import org configuration global Global Configuration import org factories Abstract Component Registry import org factories Abstract Component Registry Component import org factories Global Component Registry import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org factories annotations Survives Restarts import org util logging Log import org util logging Log Factory link org configuration cache Configuration jmx Statistics enabled class register Beans cache local Configuration Registry Bean server author Mircea Markus jboss com author Galder Zamarre see java lang management Management Factory get Platform Bean Server since Survives Restarts public class Cache Jmx Registration extends Abstract Jmx Registration private static final Log log Log Factory get Log Cache Jmx Registration class public static final String type Cache private Advanced Cache cache private Set Component non Cache Components private boolean need Unregister false private volatile boolean unregister Cache Bean Inject public void initialize Cache cache Global Configuration global Config cache cache get Advanced Cache global Config global Config registration performed Start priority public void start cache null throw new Illegal State Exception cache injected call method Set Component components cache get Component Registry get Registered Components non Cache Components get Non Cache Components components register Beans components cache get Cache Manager get Cache Manager Configuration need Unregister true log mbeans Successfully Registered else cache get Name equals Basic Cache Container log unable Register Beans else log unable Register Beans cache get Name Unregister cache stopped Stop public void stop method might get called several times first call cache become null guard cache null return need Unregister unregister non cache Bean restarted try unregister Beans non Cache Components need Unregister false catch Exception e log problems Unregistering Beans e removing cache also remove cache Bean unregister Cache Bean unregister Cache Bean make sure n set cache null case needs restarted via public void unregister Cache Bean Bean Server null String group Name get Cache Jmx Name manager Object Name quote global Config global Jmx Statistics cache Manager Name String pattern jmx Domain group Name try Set Object Name names Security Actions query Names new Object Name pattern null Bean Server Object Name name names Jmx Util unregister Bean name Bean Server catch Bean Registration Exception e log unable Unregister Bean Pattern pattern e catch Instance Found Exception e Ignore Cache Beans present catch Malformed Object Name Exception e String message Malformed pattern pattern throw new Cache Exception message e catch Exception e throw new Cache Exception e public void set Unregister Cache Bean boolean unregister Cache Bean unregister Cache Bean unregister Cache Bean Override protected Components Jmx Registration build Registrar Set Abstract Component Registry Component components Quote group name handle invalid Object Name characters String group Name get Cache Jmx Name manager Object Name quote global Config global Jmx Statistics cache Manager Name Components Jmx Registration registrar new Components Jmx Registration Bean Server components group Name update Domain registrar cache get Component Registry get Global Component Registry Bean Server group Name return registrar private String get Cache Jmx Name return Components Jmx Registration Object Name quote cache get Name cache get Cache Configuration clustering cache Mode String Lower Case protected void update Domain Components Jmx Registration registrar Global Component Registry component Registry Bean Server Bean Server String group Name Cache Manager Jmx Registration manager Jmx Reg component Registry get Component Cache Manager Jmx Registration class global Config global Jmx Statistics enabled jmx Domain null String tmp Jmx Domain Jmx Util build Jmx Domain global Config Bean Server group Name synchronized manager Jmx Reg manager Jmx Reg jmx Domain null tmp Jmx Domain equals global Config global Jmx Statistics domain global Config global Jmx Statistics allow Duplicate Domains throw log jmx Bean Already Registered tmp Jmx Domain global Config global Jmx Statistics domain Set manager component jmx domain caches manager see particularly important jmx enabled cache level manager Jmx Reg jmx Domain tmp Jmx Domain caches share domain regardless whether dups allowed simply assign manager calculated jmx Domain jmx Domain manager Jmx Reg jmx Domain else global stats enabled manager jmx Domain would populated cache manager started need synchronization jmx Domain manager Jmx Reg jmx Domain null global Config global Jmx Statistics domain manager Jmx Reg jmx Domain registrar set Jmx Domain jmx Domain protected Set Component get Non Cache Components Set Component components Set Component components Except Cache new Hash Set Abstract Component Registry Component Abstract Component Registry Component component components String name component get Name name equals Cache class get Name name equals Advanced Cache class get Name components Except Cache add component return components Except Cache
package org topology import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Optional import java util Set import org commons hash Hash import org commons marshall Abstract Externalizer import org commons marshall Marshall Util import org configuration cache Cache Mode import org distribution ch Consistent Hash Factory import org marshall core Ids class contains information cache needs supply coordinator starting author Dan Berindei since public class Cache Join Info Global configuration private final Consistent Hash Factory consistent Hash Factory private final Hash hash Function private final int num Segments private final int num Owners private final long timeout private final boolean total Order private final Cache Mode cache Mode private final boolean partition Handling Per node configuration private final float capacity Factor Per node state info private final Persistent persistent private final Optional Integer persistent State Checksum public Cache Join Info Consistent Hash Factory consistent Hash Factory Hash hash Function int num Segments int num Owners long timeout boolean total Order Cache Mode cache Mode boolean partition Handling float capacity Factor Persistent persistent Optional Integer persistent State Checksum consistent Hash Factory consistent Hash Factory hash Function hash Function num Segments num Segments num Owners num Owners timeout timeout total Order total Order cache Mode cache Mode partition Handling partition Handling capacity Factor capacity Factor persistent persistent persistent State Checksum persistent State Checksum public Consistent Hash Factory get Consistent Hash Factory return consistent Hash Factory public Hash get Hash Function return hash Function public int get Num Segments return num Segments public int get Num Owners return num Owners public long get Timeout return timeout public boolean Total Order return total Order public Cache Mode get Cache Mode return cache Mode public boolean Partition Handling return partition Handling public float get Capacity Factor return capacity Factor public Persistent get Persistent return persistent public Optional Integer get Persistent State Checksum return persistent State Checksum Override public int hash Code final int prime int result result prime result Float float Int Bits capacity Factor result prime result consistent Hash Factory null consistent Hash Factory hash Code result prime result cache Mode hash Code result prime result partition Handling result prime result hash Function null hash Function hash Code result prime result num Owners result prime result num Segments result prime result int timeout timeout result prime result total Order result prime result persistent null persistent hash Code result prime result persistent State Checksum null persistent State Checksum hash Code return result Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Cache Join Info Cache Join Info obj Float float Int Bits capacity Factor Float float Int Bits capacity Factor return false consistent Hash Factory null consistent Hash Factory null return false else consistent Hash Factory equals consistent Hash Factory return false cache Mode cache Mode return false partition Handling partition Handling return false hash Function null hash Function null return false else hash Function equals hash Function return false num Owners num Owners return false num Segments num Segments return false timeout timeout return false total Order total Order return false persistent null persistent null return false else persistent equals persistent return false persistent State Checksum null persistent State Checksum null return false else persistent State Checksum equals persistent State Checksum return false return true Override public String String return Cache Join Info consistent Hash Factory consistent Hash Factory hash Function hash Function num Segments num Segments num Owners num Owners timeout timeout total Order total Order cache Mode cache Mode partition Handling partition Handling persistent persistent persistent State Checksum persistent State Checksum public static class Externalizer extends Abstract Externalizer Cache Join Info Override public void write Object Object Output output Cache Join Info cache Join Info throws Exception output write Object cache Join Info consistent Hash Factory output write Object cache Join Info hash Function output write Int cache Join Info num Segments output write Int cache Join Info num Owners output write Long cache Join Info timeout output write Boolean cache Join Info total Order Marshall Util marshall Enum cache Join Info cache Mode output output write Boolean cache Join Info partition Handling output write Float cache Join Info capacity Factor output write Object cache Join Info persistent output write Object cache Join Info persistent State Checksum Override public Cache Join Info read Object Object Input unmarshaller throws Exception Class Found Exception Consistent Hash Factory consistent Hash Factory Consistent Hash Factory unmarshaller read Object Hash hash Function Hash unmarshaller read Object int num Segments unmarshaller read Int int num Owners unmarshaller read Int long timeout unmarshaller read Long boolean total Order unmarshaller read Boolean Cache Mode cache Mode Marshall Util unmarshall Enum unmarshaller Cache Mode value boolean partition Handling unmarshaller read Boolean float capacity Factor unmarshaller read Float Persistent persistent Persistent unmarshaller read Object Optional Integer persistent State Checksum Optional Integer unmarshaller read Object return new Cache Join Info consistent Hash Factory hash Function num Segments num Owners timeout total Order cache Mode partition Handling capacity Factor persistent persistent State Checksum Override public Integer get Id return Ids Override public Set Class extends Cache Join Info get Type Classes return Collections Class extends Cache Join Info singleton Cache Join Info class
package org jmx import java util Set import javax management Bean Server import javax management Object Name import org configuration global Global Configuration import org factories Abstract Component Registry import org factories Global Component Registry import org factories annotations Inject import org factories annotations Survives Restarts import org util logging Log import org util logging Log Factory Registers components global component registry mbean server author Mircea Markus jboss com author Galder Zamarre since Survives Restarts public class Cache Manager Jmx Registration extends Abstract Jmx Registration private static final Log log Log Factory get Log Cache Manager Jmx Registration class public static final String type Cache Manager private Global Component Registry global Reg private boolean need Unregister false private boolean stopped Inject public void init Global Component Registry registry Global Configuration configuration global Reg registry global Config configuration start mbeans registered public void start register Beans global Reg get Registered Components global Config need Unregister true else log unable Register Cache Manager Beans stopped false stop mbeans unregistered public void stop method might get called several times stopped return need Unregister try unregister Beans global Reg get Registered Components need Unregister false catch Exception e log problems Unregistering Beans e stopped true Override protected Components Jmx Registration build Registrar Set Abstract Component Registry Component components Quote group name handle invalid Object Name characters String group Name Components Jmx Registration Object Name quote global Config global Jmx Statistics cache Manager Name Components Jmx Registration registrar new Components Jmx Registration Bean Server components group Name update Domain registrar Bean Server group Name return registrar protected void update Domain Components Jmx Registration registrar Bean Server Bean Server String group Name jmx Domain null jmx Domain Jmx Util build Jmx Domain global Config Bean Server group Name String config Jmx Domain global Config global Jmx Statistics domain jmx Domain equals config Jmx Domain global Config global Jmx Statistics allow Duplicate Domains throw log jmx Bean Already Registered group Name config Jmx Domain registrar set Jmx Domain jmx Domain
package org notifications cachemanagerlistener import java lang annotation Annotation import java util Hash Map import java util List import java util Map import java util concurrent Copy Write Array List import javax transaction Transaction import org factories annotations Inject import org manager Embedded Cache Manager import org notifications Listener import org notifications cachemanagerlistener annotation Cache Started import org notifications cachemanagerlistener annotation Cache Stopped import org notifications cachemanagerlistener annotation Merged import org notifications cachemanagerlistener annotation View Changed import org notifications cachemanagerlistener event Cache Started Event import org notifications cachemanagerlistener event Cache Stopped Event import org notifications cachemanagerlistener event Event import org notifications cachemanagerlistener event Merge Event import org notifications cachemanagerlistener event View Changed Event import org notifications cachemanagerlistener event impl Event Impl import org notifications impl Abstract Listener Impl import org notifications impl Listener Invocation import org remoting transport Address import org util logging Log import org util logging Log Factory Global shared notifications cache manager author Manik Surtani since public class Cache Manager Notifier Impl extends Abstract Listener Impl Event Listener Invocation Event implements Cache Manager Notifier private static final Log log Log Factory get Log Cache Manager Notifier Impl class private static final Map Class extends Annotation Class allowed Listeners new Hash Map Class extends Annotation Class static allowed Listeners put Cache Started class Cache Started Event class allowed Listeners put Cache Stopped class Cache Stopped Event class allowed Listeners put View Changed class View Changed Event class allowed Listeners put Merged class Merge Event class final List Listener Invocation Event cache Started Listeners new Copy Write Array List Listener Invocation Event final List Listener Invocation Event cache Stopped Listeners new Copy Write Array List Listener Invocation Event final List Listener Invocation Event view Changed Listeners new Copy Write Array List Listener Invocation Event final List Listener Invocation Event merge Listeners new Copy Write Array List Listener Invocation Event private Embedded Cache Manager cache Manager public Cache Manager Notifier Impl listeners Map put Cache Started class cache Started Listeners listeners Map put Cache Stopped class cache Stopped Listeners listeners Map put View Changed class view Changed Listeners listeners Map put Merged class merge Listeners protected class Default Builder extends Abstract Invocation Builder Override public Listener Invocation Event build return new Listener Invocation Impl target method sync class Loader subject Inject public void inject Cache Manager Embedded Cache Manager cache Manager cache Manager cache Manager Override public void notify View Change List Address members List Address old Members Address Address int view Id view Changed Listeners Empty Event Impl e new Event Impl e set Local Address Address e set Merge View false e set View Id view Id e set New Members members e set Old Members old Members e set Cache Manager cache Manager e set Type Event Type Listener Invocation listener view Changed Listeners invoke Listener listener e Override public void notify Merge List Address members List Address old Members Address Address int view Id List List Address subgroups Merged merge Listeners Empty Event Impl e new Event Impl e set Local Address Address e set View Id view Id e set Merge View true e set New Members members e set Old Members old Members e set Cache Manager cache Manager e set Subgroups Merged subgroups Merged e set Type Event Type Listener Invocation listener merge Listeners invoke Listener listener e Override public void notify Cache Started String cache Name cache Started Listeners Empty Event Impl e new Event Impl e set Cache Name cache Name e set Cache Manager cache Manager e set Type Event Type Listener Invocation listener cache Started Listeners invoke Listener listener e Override public void notify Cache Stopped String cache Name cache Stopped Listeners Empty Event Impl e new Event Impl e set Cache Name cache Name e set Cache Manager cache Manager e set Type Event Type Listener Invocation listener cache Stopped Listeners invoke Listener listener e private void invoke Listener Listener Invocation listener Event Impl e try listener invoke e catch Exception x cache entry related listeners able throw exception veto operation log exception thrown invoker contain relevant information log failed Invoking Cache Manager Listener x Override public void add Listener Object listener validate Add Listener Invocations listener new Default Builder Override protected Log get Log return log Override protected Map Class extends Annotation Class get Allowed Method Annotations Listener l return allowed Listeners Override protected final Transaction suspend Needed return null op Override protected final void resume Needed Transaction transaction op
package org interceptors impl import java util Map import java util Map Entry import java util concurrent Time Unit import java util concurrent atomic Atomic Long import java util concurrent atomic Atomic Long Field Updater import org Advanced Cache import org commands Flag Affected Command import org commands read Abstract Data Command import org commands read Get Command import org commands read Get Cache Entry Command import org commands read Get Key Value Command import org commands write Compute Command import org commands write Compute Absent Command import org commands write Evict Command import org commands write Put Key Value Command import org commands write Put Map Command import org commands write Remove Command import org commands write Replace Command import org commands write Write Command import org container Data Container import org container offheap Heap Memory Allocator import org context Flag import org context Invocation Context import org context impl Flag Bit Sets import org factories annotations Inject import org factories annotations Start import org jmx annotations Display Type import org jmx annotations Bean import org jmx annotations Managed Attribute import org jmx annotations Managed Operation import org jmx annotations Measurement Type import org jmx annotations Units import org util Time Service import org util concurrent Striped Counters Captures cache management statistics author Jerry Gauthier since Bean object Name Statistics description General statistics timings hit miss ratio etc public class Cache Mgmt Interceptor extends Jmx Stats Command Interceptor private Advanced Cache cache private Data Container data Container private Time Service time Service private Heap Memory Allocator allocator private final Atomic Long start Nanoseconds new Atomic Long private volatile Atomic Long reset Nanoseconds new Atomic Long private Striped Counters Stripe counters new Striped Counters Stripe new Inject Suppress Warnings unused public void set Dependencies Advanced Cache cache Data Container data Container Time Service time Service Heap Memory Allocator allocator cache cache data Container data Container time Service time Service allocator allocator Start public void start start Nanoseconds set time Service time reset Nanoseconds set start Nanoseconds get Override public Object visit Evict Command Invocation Context ctx Evict Command command throws Throwable get Statistics Enabled command return invoke Next ctx command return invoke Next Finally ctx command r Ctx r Command rv counters increment Stripe evictions Field Updater counters stripe Current Thread Override public final Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return visit Data Read Command ctx command Override public final Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return visit Data Read Command ctx command private Object visit Data Read Command Invocation Context ctx Abstract Data Command command throws Throwable boolean statistics Enabled get Statistics Enabled command statistics Enabled ctx Origin Local return invoke Next ctx command long start time Service time return invoke Next Finally ctx command r Ctx r Command rv Stripe stripe counters stripe Current Thread long interval Nanoseconds time Service time Duration start Time Unit rv null counters add Stripe miss Times Field Updater stripe interval Nanoseconds counters increment Stripe misses Field Updater stripe else counters add Stripe hit Times Field Updater stripe interval Nanoseconds counters increment Stripe hits Field Updater stripe Suppress Warnings unchecked Override public Object visit Get Command Invocation Context ctx Get Command command throws Throwable boolean statistics Enabled get Statistics Enabled command statistics Enabled ctx Origin Local return invoke Next ctx command long start time Service time return invoke Next Finally ctx command r Ctx r Command rv long interval Nanoseconds time Service time Duration start Time Unit int requests Get Command r Command get Keys size int hit Count Entry Object Object entry Map Object Object rv entry Set entry get Value null hit Count int miss Count requests hit Count Stripe stripe counters stripe Current Thread hit Count counters add Stripe hits Field Updater stripe hit Count counters add Stripe hit Times Field Updater stripe interval Nanoseconds hit Count requests miss Count counters add Stripe misses Field Updater stripe miss Count counters add Stripe miss Times Field Updater stripe interval Nanoseconds miss Count requests Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable boolean statistics Enabled get Statistics Enabled command statistics Enabled ctx Origin Local return invoke Next ctx command long start time Service time return invoke Next Finally ctx command r Ctx r Command rv final long interval Nanoseconds time Service time Duration start Time Unit final Map Object Object data Put Map Command r Command get Map data null data Empty Stripe stripe counters stripe Current Thread counters add Stripe store Times Field Updater stripe interval Nanoseconds counters add Stripe stores Field Updater stripe data size Override Map put key value old Value public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable return update Store Statistics ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return update Store Statistics ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable boolean statistics Enabled get Statistics Enabled command statistics Enabled ctx Origin Local return invoke Next ctx command long start time Service time return invoke Next Finally ctx command r Ctx r Command rv rv null command Successful increase Remove Misses else command Successful long interval Milliseconds time Service time Duration start Time Unit Stripe stripe counters stripe Current Thread counters add Stripe store Times Field Updater stripe interval Milliseconds counters increment Stripe stores Field Updater stripe Override public Object visit Compute Absent Command Invocation Context ctx Compute Absent Command command throws Throwable return update Store Statistics ctx command private Object update Store Statistics Invocation Context ctx Write Command command throws Throwable boolean statistics Enabled get Statistics Enabled command statistics Enabled ctx Origin Local return invoke Next ctx command long start time Service time return invoke Next Finally ctx command r Ctx r Command rv command Successful long interval Nanoseconds time Service time Duration start Time Unit Stripe stripe counters stripe Current Thread counters add Stripe store Times Field Updater stripe interval Nanoseconds counters increment Stripe stores Field Updater stripe Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable boolean statistics Enabled get Statistics Enabled command statistics Enabled ctx Origin Local return invoke Next ctx command long start time Service time return invoke Next Finally ctx command r Ctx r Command rv Remove Command remove Command Remove Command r Command remove Command Conditional remove Command Successful increase Remove Hits start else increase Remove Misses else rv null increase Remove Misses else increase Remove Hits start private void increase Remove Hits long start long interval Nanoseconds time Service time Duration start Time Unit Stripe stripe counters stripe Current Thread counters add Stripe remove Times Field Updater stripe interval Nanoseconds counters increment Stripe remove Hits Field Updater stripe private void increase Remove Misses counters increment Stripe remove Misses Field Updater counters stripe Current Thread Managed Attribute description Number cache attribute hits display Name Number cache hits measurement Type Measurement Type display Type Display Type public long get Hits return counters get Stripe hits Field Updater Managed Attribute description Number cache attribute misses display Name Number cache misses measurement Type Measurement Type display Type Display Type public long get Misses return counters get Stripe misses Field Updater Managed Attribute description Number cache removal hits display Name Number cache removal hits measurement Type Measurement Type display Type Display Type public long get Remove Hits return counters get Stripe remove Hits Field Updater Managed Attribute description Number cache removals keys found display Name Number cache removal misses measurement Type Measurement Type display Type Display Type public long get Remove Misses return counters get Stripe remove Misses Field Updater Managed Attribute description number cache attribute put operations display Name Number cache puts measurement Type Measurement Type display Type Display Type public long get Stores return counters get Stripe stores Field Updater Managed Attribute description Number cache eviction operations display Name Number cache evictions measurement Type Measurement Type display Type Display Type public long get Evictions return counters get Stripe evictions Field Updater Managed Attribute description Percentage hit hit miss ratio cache display Name Hit ratio units Units display Type Display Type Suppress Warnings unused public double get Hit Ratio long hits counters get Stripe hits Field Updater double total hits counters get Stripe misses Field Updater reason equality checks avoided floating point numbers total return return hits total Managed Attribute description read writes ratio cache display Name Read write ratio units Units display Type Display Type Suppress Warnings unused public double get Read Write Ratio long sum counters get Stripe stores Field Updater sum return return double counters get Stripe hits Field Updater counters get Stripe misses Field Updater double sum Managed Attribute description Average number nanoseconds read operation cache display Name Average read time units Units display Type Display Type Suppress Warnings unused public long get Average Read Time long total counters get Stripe hits Field Updater counters get Stripe misses Field Updater total return return counters get Stripe hit Times Field Updater counters get Stripe miss Times Field Updater total Managed Attribute description Average number nanoseconds write operation cache display Name Average write time units Units display Type Display Type Suppress Warnings unused public long get Average Write Time long sum counters get Stripe stores Field Updater sum return return counters get Stripe store Times Field Updater sum Managed Attribute description Average number nanoseconds remove operation cache display Name Average remove time units Units display Type Display Type Suppress Warnings unused public long get Average Remove Time long removes get Remove Hits removes return return counters get Stripe remove Times Field Updater removes Managed Attribute description Number entries cache including passivated entries display Name Number current cache entries display Type Display Type public int get Number Entries return cache Flags Flag size Managed Attribute description Number entries currently memory excluding expired entries display Name Number memory cache entries display Type Display Type public int get Number Entries Memory return data Container size Managed Attribute description Amount memory bytes allocated heap display Name Heap Memory Used display Type Display Type public long get Heap Memory Used return allocator get Allocated Amount Managed Attribute description Number seconds since cache started display Name Seconds since cache started units Units measurement Type Measurement Type display Type Display Type public long get Time Since Start return time Service time Duration start Nanoseconds get Time Unit Returns number seconds since cache started deprecated use link get Time Since Start instead return number seconds since cache started Managed Attribute description Number seconds since cache started display Name Seconds since cache started units Units measurement Type Measurement Type display Type Display Type Deprecated public long get Elapsed Time backward compatibility renamed Elapsed Time Time Since Start return get Time Since Start Managed Attribute description Number seconds since cache statistics last reset display Name Seconds since cache statistics reset units Units display Type Display Type Suppress Warnings unused public long get Time Since Reset return time Service time Duration reset Nanoseconds get Time Unit Override Managed Operation description Resets statistics gathered component display Name Reset Statistics Statistics public void reset Statistics counters reset Stripe hits Field Updater counters reset Stripe misses Field Updater counters reset Stripe stores Field Updater counters reset Stripe evictions Field Updater counters reset Stripe hit Times Field Updater counters reset Stripe miss Times Field Updater counters reset Stripe store Times Field Updater counters reset Stripe remove Hits Field Updater counters reset Stripe remove Times Field Updater counters reset Stripe remove Misses Field Updater reset Nanoseconds set time Service time private boolean get Statistics Enabled Flag Affected Command cmd return super get Statistics Enabled cmd Flag Flag Bit Sets public void add Evictions long num Evictions counters add Stripe evictions Field Updater counters stripe Current Thread num Evictions Suppress Warnings unused private static class Stripe private long slack slack slack slack slack slack slack slack Suppress Warnings unused Volatile Long Double Field private static class Stripe extends Stripe static final Atomic Long Field Updater Stripe hit Times Field Updater Atomic Long Field Updater new Updater Stripe class hit Times static final Atomic Long Field Updater Stripe miss Times Field Updater Atomic Long Field Updater new Updater Stripe class miss Times static final Atomic Long Field Updater Stripe store Times Field Updater Atomic Long Field Updater new Updater Stripe class store Times static final Atomic Long Field Updater Stripe remove Hits Field Updater Atomic Long Field Updater new Updater Stripe class remove Hits static final Atomic Long Field Updater Stripe remove Misses Field Updater Atomic Long Field Updater new Updater Stripe class remove Misses static final Atomic Long Field Updater Stripe stores Field Updater Atomic Long Field Updater new Updater Stripe class stores static final Atomic Long Field Updater Stripe evictions Field Updater Atomic Long Field Updater new Updater Stripe class evictions static final Atomic Long Field Updater Stripe misses Field Updater Atomic Long Field Updater new Updater Stripe class misses static final Atomic Long Field Updater Stripe hits Field Updater Atomic Long Field Updater new Updater Stripe class hits static final Atomic Long Field Updater Stripe remove Times Field Updater Atomic Long Field Updater new Updater Stripe class remove Times private volatile long hits private volatile long hit Times private volatile long misses private volatile long miss Times private volatile long stores private volatile long store Times private volatile long evictions private volatile long remove Hits private volatile long remove Misses private volatile long remove Times Suppress Warnings unused private static class Stripe extends Stripe private long slack slack slack slack slack slack slack slack
package org configuration cache Cache replication mode public enum Cache Mode Data replicated Data replicated synchronously Data replicated asynchronously Data invalidated synchronously Data invalidated asynchronously Synchronous Async Synchronous scattered cache private static Cache Mode cached Values values public static Cache Mode value int order return cached Values order Returns true mode invalidation either sync async public boolean Invalidation return public boolean Synchronous return public boolean Clustered return public boolean Distributed return public boolean Replicated return public boolean Scattered return public boolean needs State Transfer return Replicated Distributed Scattered public Cache Mode Sync switch case return case return case return default return public Cache Mode Async switch case return case return case return case throw new Illegal Argument Exception Scattered mode asynchronous mode default return public String friendly Cache Mode String switch case case return case case return case case return case return case return throw new Illegal Argument Exception Unknown cache mode
package org notifications cachelistener import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import static org notifications cachelistener event Event Type import java lang annotation Annotation import java util Array List import java util Collection import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import java util import java util concurrent Callable import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import java util concurrent Copy Write Array List import java util concurrent Execution Exception import java util concurrent Future import java util stream Stream import javax transaction Status import javax transaction Transaction import javax transaction Transaction Manager import org Cache import org Cache Stream import org commands Flag Affected Command import org commons Cache Listener Exception import org commons dataconversion Byte Array Wrapper import org commons dataconversion Encoder import org commons dataconversion Identity Encoder import org commons dataconversion Wrapper import org commons util Service Finder import org configuration cache Cache Mode import org configuration cache Configuration import org container Internal Entry Factory import org container entries Cache Entry import org container entries Internal Cache Entry import org context Invocation Context import org context impl Flag Bit Sets import org context impl Tx Invocation Context import org distexec Distributed Callable import org distexec Distributed Execution Completion Service import org distexec Distributed Executor Service import org distribution Distribution Manager import org distribution ch Consistent Hash import org encoding Data Conversion import org factories Component Registry import org factories annotations Inject import org filter Cache Filters import org filter Key Filter import org interceptors Async Interceptor Chain import org interceptors locking Clustering Dependent Logic import org manager Embedded Cache Manager import org metadata Metadata import org notifications Listener import org notifications cachelistener annotation Cache Entries Evicted import org notifications cachelistener annotation Cache Entry Activated import org notifications cachelistener annotation Cache Entry Created import org notifications cachelistener annotation Cache Entry Expired import org notifications cachelistener annotation Cache Entry Invalidated import org notifications cachelistener annotation Cache Entry Loaded import org notifications cachelistener annotation Cache Entry Modified import org notifications cachelistener annotation Cache Entry Passivated import org notifications cachelistener annotation Cache Entry Removed import org notifications cachelistener annotation Cache Entry Visited import org notifications cachelistener annotation Data Rehashed import org notifications cachelistener annotation Partition Status Changed import org notifications cachelistener annotation Topology Changed import org notifications cachelistener annotation Transaction Completed import org notifications cachelistener annotation Transaction Registered import org notifications cachelistener cluster Cluster Cache Notifier import org notifications cachelistener cluster Cluster Event Manager import org notifications cachelistener cluster Cluster Listener Remove Callable import org notifications cachelistener cluster Cluster Listener Replicate Callable import org notifications cachelistener cluster Remote Cluster Listener import org notifications cachelistener event Cache Entries Evicted Event import org notifications cachelistener event Cache Entry Activated Event import org notifications cachelistener event Cache Entry Created Event import org notifications cachelistener event Cache Entry Event import org notifications cachelistener event Cache Entry Expired Event import org notifications cachelistener event Cache Entry Invalidated Event import org notifications cachelistener event Cache Entry Loaded Event import org notifications cachelistener event Cache Entry Modified Event import org notifications cachelistener event Cache Entry Passivated Event import org notifications cachelistener event Cache Entry Removed Event import org notifications cachelistener event Cache Entry Visited Event import org notifications cachelistener event Data Rehashed Event import org notifications cachelistener event Event import org notifications cachelistener event Partition Status Changed Event import org notifications cachelistener event Topology Changed Event import org notifications cachelistener event Transaction Completed Event import org notifications cachelistener event Transaction Registered Event import org notifications cachelistener event impl Event Impl import org notifications cachelistener filter Cache Event Converter import org notifications cachelistener filter Cache Event Converter Converter import org notifications cachelistener filter Cache Event Filter import org notifications cachelistener filter Cache Event Filter Key Value Filter import org notifications cachelistener filter Cache Event Filter Converter import org notifications cachelistener filter Cache Event Filter Converter Key Value Filter Converter import org notifications cachelistener filter Delegating Cache Entry Listener Invocation import org notifications cachelistener filter Event Type import org notifications cachelistener filter Filter Indexing Service Provider import org notifications cachelistener filter Indexed Filter import org notifications cachelistener filter Key Filter Cache Event Filter import org notifications impl Abstract Listener Impl import org notifications impl Listener Invocation import org partitionhandling Availability Mode import org remoting transport Address import org remoting transport jgroups Suspect Exception import org topology Cache Topology import org transaction xa Global Transaction import org util logging Log import org util logging Log Factory Helper class handles notifications registered listeners author Manik Surtani manik org author Mircea Markus jboss com author William Burns author anistor redhat com since public final class Cache Notifier Impl extends Abstract Listener Impl Event Cache Entry Listener Invocation implements Cluster Cache Notifier private static final Log log Log Factory get Log Cache Notifier Impl class private static final boolean trace log Trace Enabled private static final Map Class extends Annotation Class allowed Listeners new Hash Map private static final Map Class extends Annotation Class cluster Allowed Listeners new Hash Map static allowed Listeners put Cache Entry Created class Cache Entry Created Event class allowed Listeners put Cache Entry Removed class Cache Entry Removed Event class allowed Listeners put Cache Entry Visited class Cache Entry Visited Event class allowed Listeners put Cache Entry Modified class Cache Entry Modified Event class allowed Listeners put Cache Entry Activated class Cache Entry Activated Event class allowed Listeners put Cache Entry Passivated class Cache Entry Passivated Event class allowed Listeners put Cache Entry Loaded class Cache Entry Loaded Event class allowed Listeners put Cache Entries Evicted class Cache Entries Evicted Event class allowed Listeners put Transaction Registered class Transaction Registered Event class allowed Listeners put Transaction Completed class Transaction Completed Event class allowed Listeners put Cache Entry Invalidated class Cache Entry Invalidated Event class allowed Listeners put Cache Entry Expired class Cache Entry Expired Event class allowed Listeners put Data Rehashed class Data Rehashed Event class allowed Listeners put Topology Changed class Topology Changed Event class allowed Listeners put Partition Status Changed class Partition Status Changed Event class cluster Allowed Listeners put Cache Entry Created class Cache Entry Created Event class cluster Allowed Listeners put Cache Entry Modified class Cache Entry Modified Event class cluster Allowed Listeners put Cache Entry Removed class Cache Entry Removed Event class cluster Allowed Listeners put Cache Entry Expired class Cache Entry Expired Event class final List Cache Entry Listener Invocation cache Entry Created Listeners new Copy Write Array List final List Cache Entry Listener Invocation cache Entry Removed Listeners new Copy Write Array List final List Cache Entry Listener Invocation cache Entry Visited Listeners new Copy Write Array List final List Cache Entry Listener Invocation cache Entry Modified Listeners new Copy Write Array List final List Cache Entry Listener Invocation cache Entry Activated Listeners new Copy Write Array List final List Cache Entry Listener Invocation cache Entry Passivated Listeners new Copy Write Array List final List Cache Entry Listener Invocation cache Entry Loaded Listeners new Copy Write Array List final List Cache Entry Listener Invocation cache Entry Invalidated Listeners new Copy Write Array List final List Cache Entry Listener Invocation cache Entry Expired Listeners new Copy Write Array List final List Cache Entry Listener Invocation cache Entries Evicted Listeners new Copy Write Array List final List Cache Entry Listener Invocation transaction Registered Listeners new Copy Write Array List final List Cache Entry Listener Invocation transaction Completed Listeners new Copy Write Array List final List Cache Entry Listener Invocation data Rehashed Listeners new Copy Write Array List final List Cache Entry Listener Invocation topology Changed Listeners new Copy Write Array List final List Cache Entry Listener Invocation partition Changed Listeners new Copy Write Array List private Cache cache private Clustering Dependent Logic clustering Dependent Logic private Transaction Manager transaction Manager private Distributed Executor Service dist Executor Service private Configuration config private Distribution Manager distribution Manager private Internal Entry Factory entry Factory private Cluster Event Manager event Manager private Component Registry component Registry private final Map Object cluster Listener Ds new Concurrent Hash Map private final Encoder default Encoder Identity Encoder private final Wrapper default Wrapper Byte Array Wrapper private Collection Filter Indexing Service Provider filter Indexing Service Providers map used store handler used listener registered include Current State used listener initial state transfer private final Concurrent Map Queueing Segment Listener extends Event segment Handler public Cache Notifier Impl new Concurrent Hash Map Cache Notifier Impl Concurrent Map Queueing Segment Listener extends Event handler segment Handler handler listeners Map put Cache Entry Created class cache Entry Created Listeners listeners Map put Cache Entry Removed class cache Entry Removed Listeners listeners Map put Cache Entry Visited class cache Entry Visited Listeners listeners Map put Cache Entry Modified class cache Entry Modified Listeners listeners Map put Cache Entry Activated class cache Entry Activated Listeners listeners Map put Cache Entry Passivated class cache Entry Passivated Listeners listeners Map put Cache Entry Loaded class cache Entry Loaded Listeners listeners Map put Cache Entries Evicted class cache Entries Evicted Listeners listeners Map put Cache Entry Expired class cache Entry Expired Listeners listeners Map put Transaction Registered class transaction Registered Listeners listeners Map put Transaction Completed class transaction Completed Listeners listeners Map put Cache Entry Invalidated class cache Entry Invalidated Listeners listeners Map put Data Rehashed class data Rehashed Listeners listeners Map put Topology Changed class topology Changed Listeners listeners Map put Partition Status Changed class partition Changed Listeners Inject void inject Dependencies Cache cache Clustering Dependent Logic clustering Dependent Logic Transaction Manager transaction Manager Configuration config Distribution Manager distribution Manager Internal Entry Factory entry Factory Cluster Event Manager event Manager Component Registry component Registry cache cache clustering Dependent Logic clustering Dependent Logic transaction Manager transaction Manager config config distribution Manager distribution Manager entry Factory entry Factory event Manager event Manager component Registry component Registry Override public void start super start Async Interceptor Chain interceptor Chain Security Actions get Async Interceptor Chain cache interceptor Chain null interceptor Chain get Interceptors Empty dist Executor Service Security Actions get Default Executor Service cache executed twice component Cache Notifier also Cluster Cache Notifier see https issues jboss org browse filter Indexing Service Providers null filter Indexing Service Providers Service Finder load Filter Indexing Service Provider class Filter Indexing Service Provider provider filter Indexing Service Providers component Registry wire Dependencies provider provider start Override public void stop super stop executed twice component Cache Notifier also Cluster Cache Notifier see https issues jboss org browse filter Indexing Service Providers null Filter Indexing Service Provider provider filter Indexing Service Providers provider stop filter Indexing Service Providers null Override protected Log get Log return log Override protected Map Class extends Annotation Class get Allowed Method Annotations Listener l l clustered Cluster listeners allow subset types return cluster Allowed Listeners return allowed Listeners private convert Key Data Conversion key Data Conversion key key null return null Wrapper wrp key Data Conversion null key Data Conversion get Wrapper default Wrapper Encoder enc key Data Conversion null key Data Conversion get Encoder default Encoder Object unwrapped Key wrp unwrap key return enc Storage Format Filterable unwrapped Key enc Storage unwrapped Key private convert Value Data Conversion value Data Conversion value value null return null Wrapper wrp value Data Conversion null value Data Conversion get Wrapper default Wrapper Encoder enc value Data Conversion null value Data Conversion get Encoder default Encoder Object unwrapped Value wrp unwrap value return enc Storage Format Filterable unwrapped Value enc Storage unwrapped Value Override protected final Transaction suspend Needed transaction Manager null return null try switch transaction Manager get Status case Status case Status return null case Status case Status case Status case Status case Status case Status case Status case Status default suspend default unknown status safer return transaction Manager suspend catch Exception e trace log trace error occurred trying suspend transaction e return null Override protected final void resume Needed Transaction transaction transaction null transaction Manager null return try transaction Manager resume transaction catch Exception e trace log tracef e error occurred trying resume suspended transaction tx transaction Override public void notify Cache Entry Created key value Metadata metadata boolean pre Invocation Context ctx Flag Affected Command command cache Entry Created Listeners Empty clustering Dependent Logic commit Type command ctx key false Local command null command Flag Flag Bit Sets return Event Impl e Event Impl create Event cache boolean Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key Primary boolean send Events ctx Tx Scope try Cache Entry Listener Invocation listener cache Entry Created Listeners Need wrapper per invocation since converter could modify entry configure Event listener get Key Data Conversion listener get Value Data Conversion e key value metadata pre ctx command null null listener invoke new Event Wrapper key e Local Node Primary Owner send Events event Manager send Events send Events false finally send Events event Manager drop Events Override public void notify Cache Entry Modified key value Metadata metadata previous Value Metadata previous Metadata boolean pre Invocation Context ctx Flag Affected Command command cache Entry Modified Listeners Empty clustering Dependent Logic commit Type command ctx key false Local command null command Flag Flag Bit Sets return Event Impl e Event Impl create Event cache boolean Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key Primary boolean send Events ctx Tx Scope try Cache Entry Listener Invocation listener cache Entry Modified Listeners Need wrapper per invocation since converter could modify entry configure Event listener get Key Data Conversion listener get Value Data Conversion e key value metadata pre ctx command previous Value previous Metadata listener invoke new Event Wrapper key e Local Node Primary Owner send Events event Manager send Events send Events false finally send Events event Manager drop Events Override public void notify Cache Entry Removed key previous Value Metadata previous Metadata boolean pre Invocation Context ctx Flag Affected Command command Notification Allowed command cache Entry Removed Listeners clustering Dependent Logic commit Type command ctx key true Local Event Impl e Event Impl create Event cache boolean Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key Primary boolean send Events ctx Tx Scope try Cache Entry Listener Invocation listener cache Entry Removed Listeners Need wrapper per invocation since converter could modify entry pre configure Event listener get Key Data Conversion listener get Value Data Conversion e key previous Value previous Metadata true ctx command previous Value previous Metadata else consistent would better pass null previous Metadata certain server code depends ability retrieve metadata pre false Cache Entry Event get Metadata instead proper method get Old Metadata configure Event listener get Key Data Conversion listener get Value Data Conversion e key null previous Metadata false ctx command previous Value previous Metadata listener invoke new Event Wrapper key e Local Node Primary Owner send Events event Manager send Events send Events false finally send Events event Manager drop Events Configure event data Currently used created modified removed invalidated events private void configure Event Data Conversion key Data Conversion Data Conversion value Data Conversion Event Impl e key value Metadata metadata boolean pre Invocation Context ctx Flag Affected Command command previous Value Metadata previous Metadata key convert Key key Data Conversion key value convert Value value Data Conversion value previous Value convert Value value Data Conversion previous Value e set Origin Local ctx Origin Local e set Value pre previous Value value e set Pre pre e set Old Value previous Value e set Old Metadata previous Metadata e set Metadata metadata command null command Flag Flag Bit Sets e set Command Retried true e set Key key set Tx ctx e Configure event data Currently used activated loaded visited events private void configure Event Data Conversion key Data Conversion Data Conversion value Data Conversion Event Impl e key value boolean pre Invocation Context ctx e set Pre pre e set Key convert Key key Data Conversion key e set Value convert Value value Data Conversion value e set Origin Local ctx Origin Local set Tx ctx e Configure event data Currently used expired events private void configure Event Data Conversion key Data Conversion Data Conversion value Data Conversion Event Impl e key value Metadata metadata e set Key convert Key key Data Conversion key e set Value convert Value value Data Conversion value e set Metadata metadata e set Origin Local true e set Pre false Override public void notify Cache Entry Visited key value boolean pre Invocation Context ctx Flag Affected Command command Notification Allowed command cache Entry Visited Listeners Event Impl e Event Impl create Event cache boolean Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key Primary Cache Entry Listener Invocation listener cache Entry Visited Listeners Need wrapper per invocation since converter could modify entry configure Event listener get Key Data Conversion listener get Value Data Conversion e key value pre ctx listener invoke new Event Wrapper key e Local Node Primary Owner Override public void notify Cache Entries Evicted Collection Internal Cache Entry extends extends entries Invocation Context ctx Flag Affected Command command entries Empty Notification Allowed command cache Entries Evicted Listeners Event Impl e Event Impl create Event cache Cache Entry Listener Invocation listener cache Entries Evicted Listeners Map evicted Keys Values new Hash Map Map Entry extends extends entry entries evicted Keys Values put convert Key listener get Key Data Conversion entry get Key convert Value listener get Value Data Conversion entry get Value e set Entries evicted Keys Values listener invoke e Override public void notify Cache Entry Expired key value Metadata metadata Invocation Context ctx Notification Allowed null cache Entry Expired Listeners Event Impl e Event Impl create Event cache boolean Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key Primary boolean send Events ctx null ctx Tx Scope try Cache Entry Listener Invocation listener cache Entry Expired Listeners Need wrapper per invocation since converter could modify entry configure Event listener get Key Data Conversion listener get Value Data Conversion e key value metadata listener invoke new Event Wrapper key e Local Node Primary Owner send Events event Manager send Events send Events false finally send Events event Manager drop Events Override public void notify Cache Entry Invalidated final key value Metadata metadata final boolean pre Invocation Context ctx Flag Affected Command command Notification Allowed command cache Entry Invalidated Listeners Event Impl e Event Impl create Event cache boolean Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key Primary Cache Entry Listener Invocation listener cache Entry Invalidated Listeners Need wrapper per invocation since converter could modify entry configure Event listener get Key Data Conversion listener get Value Data Conversion e key value metadata pre ctx command value metadata listener invoke new Event Wrapper key e Local Node Primary Owner Override public void notify Cache Entry Loaded key value boolean pre Invocation Context ctx Flag Affected Command command Notification Allowed command cache Entry Loaded Listeners Event Impl e Event Impl create Event cache boolean Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key Primary Cache Entry Listener Invocation listener cache Entry Loaded Listeners Need wrapper per invocation since converter could modify entry configure Event listener get Key Data Conversion listener get Value Data Conversion e key value pre ctx listener invoke new Event Wrapper key e Local Node Primary Owner Override public void notify Cache Entry Activated key value boolean pre Invocation Context ctx Flag Affected Command command Notification Allowed command cache Entry Activated Listeners Event Impl e Event Impl create Event cache boolean Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key Primary Cache Entry Listener Invocation listener cache Entry Activated Listeners Need wrapper per invocation since converter could modify entry configure Event listener get Key Data Conversion listener get Value Data Conversion e key value pre ctx listener invoke new Event Wrapper key e Local Node Primary Owner private void set Tx Invocation Context ctx Event Impl e ctx null ctx Tx Scope Global Transaction tx Tx Invocation Context ctx get Global Transaction e set Transaction Id tx Override public void notify Cache Entry Passivated key value boolean pre Invocation Context ctx Flag Affected Command command Notification Allowed command cache Entry Passivated Listeners Event Impl e Event Impl create Event cache boolean Local Node Primary Owner clustering Dependent Logic get Cache Topology get Distribution key Primary Cache Entry Listener Invocation listener cache Entry Passivated Listeners Need wrapper per invocation since converter could modify entry key convert Key listener get Key Data Conversion key value convert Value listener get Value Data Conversion value e set Pre pre e set Key key e set Value value listener invoke new Event Wrapper key e Local Node Primary Owner Override public void notify Transaction Completed Global Transaction transaction boolean successful Invocation Context ctx transaction Completed Listeners Empty boolean Origin Local ctx Origin Local Event Impl e Event Impl create Event cache e set Origin Local Origin Local e set Transaction Id transaction e set Transaction Successful successful Cache Entry Listener Invocation listener transaction Completed Listeners listener invoke e ctx Tx Scope successful event Manager send Events else event Manager drop Events Override public void notify Transaction Registered Global Transaction global Transaction boolean Origin Local transaction Registered Listeners Empty Event Impl e Event Impl create Event cache e set Origin Local Origin Local e set Transaction Id global Transaction Cache Entry Listener Invocation listener transaction Registered Listeners listener invoke e Override public void notify Data Rehashed Consistent Hash old Consistent Hash new Consistent Hash union int new Topology Id boolean pre data Rehashed Listeners Empty Event Impl e Event Impl create Event cache e set Pre pre e set Read Consistent Hash Start old e set Write Consistent Hash Start old e set Read Consistent Hash End new e set Write Consistent Hash End new e set Union Consistent Hash union e set New Topology Id new Topology Id Cache Entry Listener Invocation listener data Rehashed Listeners listener invoke e Override public void notify Topology Changed Cache Topology old Topology Cache Topology new Topology int new Topology Id boolean pre topology Changed Listeners Empty Event Impl e Event Impl create Event cache e set Pre pre old Topology null e set Read Consistent Hash Start old Topology get Read Consistent Hash e set Write Consistent Hash Start old Topology get Write Consistent Hash e set Read Consistent Hash End new Topology get Read Consistent Hash e set Write Consistent Hash End new Topology get Write Consistent Hash e set New Topology Id new Topology Id Cache Entry Listener Invocation listener topology Changed Listeners listener invoke e Override public void notify Partition Status Changed Availability Mode mode boolean pre partition Changed Listeners Empty Event Impl e Event Impl create Event cache e set Pre pre e set Availability Mode mode Cache Entry Listener Invocation listener partition Changed Listeners listener invoke e Override public void notify Cluster Listeners Collection extends Cache Entry Event events uuid n need unwrap key value node event originated already Cache Entry Event event events event Pre throw new Illegal Argument Exception Events cluster listener never pre change switch event get Type case Cache Entry Listener Invocation listener cache Entry Modified Listeners listener Clustered uuid equals listener get Identifier force invocation since means owning node passed filters already already converted n run converter either listener invoke Checks new Event Wrapper event get Key event false true break case Cache Entry Listener Invocation listener cache Entry Created Listeners listener Clustered uuid equals listener get Identifier force invocation since means owning node passed filters already already converted n run converter either listener invoke Checks new Event Wrapper event get Key event false true break case Cache Entry Listener Invocation listener cache Entry Removed Listeners listener Clustered uuid equals listener get Identifier force invocation since means owning node passed filters already already converted n run converter either listener invoke Checks new Event Wrapper event get Key event false true break case cache Entry Expired Listeners listener listener Clustered uuid equals listener get Identifier force invocation since means owning node passed filters already already converted n run converter either listener invoke Checks new Event Wrapper event get Key event false true break default throw new Illegal Argument Exception Unexpected event type encountered Override public Collection Distributed Callable retrieve Cluster Listener Callables Install Set Object enlisted Already new Hash Set Set Distributed Callable callables new Hash Set trace log tracef Request received get cluster listeners currently registered register Cluster Listener Callables Install enlisted Already callables cache Entry Modified Listeners register Cluster Listener Callables Install enlisted Already callables cache Entry Created Listeners register Cluster Listener Callables Install enlisted Already callables cache Entry Removed Listeners trace log tracef Cluster listeners found callables return callables private void register Cluster Listener Callables Install Set Object enlisted Already Set Distributed Callable callables List Cache Entry Listener Invocation listener Invocations Cache Entry Listener Invocation listener listener Invocations enlisted Already contains listener get Target clustered means local use address listener Clustered Set Class extends Annotation filter Annotations listener get Filter Annotations callables add new Cluster Listener Replicate Callable listener get Identifier cache get Cache Manager get Address listener get Filter listener get Converter listener Sync filter Annotations listener get Key Data Conversion listener get Value Data Conversion enlisted Already add listener get Target else listener get Target instanceof Remote Cluster Listener Remote Cluster Listener lcl Remote Cluster Listener listener get Target Set Class extends Annotation filter Annotations listener get Filter Annotations callables add new Cluster Listener Replicate Callable lcl get Id lcl get Owner Address listener get Filter listener get Converter listener Sync filter Annotations listener get Key Data Conversion listener get Value Data Conversion enlisted Already add listener get Target public boolean Notification Allowed Flag Affected Command cmd List Cache Entry Listener Invocation listeners return listeners Empty cmd null cmd Flag Flag Bit Sets Override public void add Listener Object listener add Listener listener null null null Override public void add Listener Object listener Class Loader class Loader add Listener listener null null class Loader Override public void add Listener Object listener Key Filter super filter Class Loader class Loader add Listener listener new Key Filter Cache Event Filter filter null class Loader private void add Listener Internal Object listener Data Conversion key Data Conversion Data Conversion value Data Conversion Cache Event Filter super super filter Cache Event Converter super super converter Class Loader class Loader final Listener l test Listener Class Validity listener get Class final generated Id random final Cache Mode cache Mode config clustering cache Mode Filter Indexing Service Provider indexing Provider null boolean found Methods false Data Conversion key Conversion key Data Conversion null Data Conversion key Data Conversion Data Conversion value Conversion value Data Conversion null Data Conversion value Data Conversion filter instanceof Indexed Filter Indexed Filter indexed Filter Indexed Filter filter indexing Provider find Indexing Service Provider indexed Filter indexing Provider null Delegating Cache Invocation Builder builder new Delegating Cache Invocation Builder indexing Provider builder set Include Current State l include Current State set Clustered l clustered set Primary l clustered cache Mode Distributed cache Mode Scattered l primary set Observation l clustered Listener Observation l observation set Filter filter set Converter converter set Identifier generated Id set Key Data Conversion key Conversion set Value Data Conversion value Conversion set Class Loader class Loader found Methods validate Add Listener Invocations listener builder builder register Listener Invocations indexing Provider null Cache Invocation Builder builder new Cache Invocation Builder builder set Include Current State l include Current State set Clustered l clustered set Primary l clustered cache Mode Distributed cache Mode Scattered l primary set Observation l clustered Listener Observation l observation set Filter filter set Converter converter set Key Data Conversion key Conversion set Value Data Conversion value Conversion set Identifier generated Id set Class Loader class Loader l clustered builder set Filter Annotations find Listener Callbacks listener found Methods validate Add Listener Invocations listener builder found Methods l clustered l observation Listener Observation throw log cluster Listener Registered Pre Events listener get Class else cache Mode Invalidation throw new Unsupported Operation Exception Cluster listeners used Invalidation Caches else cache Mode Distributed cache Mode Scattered cluster Listener Ds put listener generated Id Embedded Cache Manager manager cache get Cache Manager Address Address manager get Address List Address members manager get Members member n even worry sending listeners members null members size Distributed Execution Completion Service decs new Distributed Execution Completion Service dist Executor Service trace log tracef Replicating cluster listener nodes cluster listener id members generated Id Callable callable new Cluster Listener Replicate Callable generated Id Address filter converter l sync find Listener Callbacks listener key Data Conversion value Data Conversion Address member members member equals Address decs submit member callable int members size try decs take get catch Interrupted Exception e throw new Cache Listener Exception e catch Execution Exception e Throwable cause e get Cause got Suspect Exception means remote node n started cache yet ignore joins retrieve listener cause instanceof Suspect Exception throw new Cache Listener Exception cause int extra Count anyone else joined since sent send listeners since may queried nodes got new listener List Address members manager get Members Address member members members contains member member equals Address trace log tracef Found additional node joined replication cluster listener id member generated Id extra Count decs submit member callable int extra Count try decs take get catch Interrupted Exception e throw new Cache Listener Exception e catch Execution Exception e throw new Cache Listener Exception e segment listener handler means initial state Queueing Segment Listener handler segment Handler remove generated Id handler null trace log tracef Listener requests initial state cache generated Id try Cache Stream entry Stream cache get Advanced Cache Encoding key Conversion get Encoder Class value Conversion get Encoder Class cache Entry Set stream Stream Cache Entry used Stream entry Stream segment Completion Listener handler filter instanceof Cache Event Filter Converter filter converter converter null Hacky cast prevent casts used Stream Cache Filters filter Convert used Stream new Cache Event Filter Converter Key Value Filter Converter Cache Event Filter Converter filter else used Stream filter null used Stream used Stream filter Cache Filters predicate new Cache Event Filter Key Value Filter filter used Stream converter null used Stream used Stream map Cache Filters function new Cache Event Converter Converter converter Iterator Cache Entry iterator used Stream iterator iterator Next Cache Entry entry iterator next Mark key processed see concurrent update Object value handler mark Key Processing entry get Key value Base Queueing Segment Listener n process value concurrent remove continue raise Event Initial Transfer generated Id entry l clustered handler notified Key entry get Key Set Cache Entry entries handler find Created Entries Cache Entry entry entries raise Event Initial Transfer generated Id entry l clustered trace log tracef Listener initial state cache completed generated Id handler transfer Complete Adds listener using provided filter converter class loader provided builder used add additional configuration including clustered Primary identifier used method completed see values used addition listener param listener param filter param converter param class Loader param return Override public void add Listener Object listener Cache Event Filter super super filter Cache Event Converter super super converter Class Loader class Loader add Listener Internal listener null null filter converter class Loader private Filter Indexing Service Provider find Indexing Service Provider Indexed Filter indexed Filter Filter Indexing Service Provider provider filter Indexing Service Providers provider supports Filter indexed Filter return provider log Filter Indexing Service Provider Found indexed Filter get Class get Name return null Override public List Cache Entry Listener Invocation get Listener Collection Annotation Class extends Annotation annotation return super get Listener Collection Annotation annotation private void raise Event Initial Transfer identifier Cache Entry entry boolean clustered Event Impl pre Event clustered clustered mode send post event pre Event null else pre Event Event Impl create Event cache pre Event set Key entry get Key pre Event set Pre true Event Impl post Event Event Impl create Event cache post Event set Key entry get Key post Event set Value entry get Value post Event set Metadata entry get Metadata post Event set Pre false Cache Entry Listener Invocation invocation cache Entry Created Listeners notify methods creates invocation get Identifier identifier pre Event null Non clustered notifications done twice invocation invoke Checks new Event Wrapper null pre Event true true invocation invoke Checks new Event Wrapper null post Event true true Override public void add Listener Object listener Key Filter super filter add Listener listener filter null Override public void add Listener Object listener Cache Event Filter super super filter Cache Event Converter super super converter add Listener listener filter converter null Override public void add Filtered Listener Object listener Cache Event Filter super super filter Cache Event Converter super super converter Set Class extends Annotation filter Annotations add Filtered Listener Internal listener null null filter converter filter Annotations Override public void add Listener Listener Holder listener Holder Cache Event Filter super super filter Cache Event Converter super super converter Class Loader class Loader add Listener Internal listener Holder get Listener listener Holder get Key Data Conversion listener Holder get Value Data Conversion filter converter class Loader Override public void add Filtered Listener Listener Holder listener Holder Cache Event Filter super super filter Cache Event Converter super super converter Set Class extends Annotation filter Annotations add Filtered Listener Internal listener Holder get Listener listener Holder get Key Data Conversion listener Holder get Value Data Conversion filter converter filter Annotations private void add Filtered Listener Internal Object listener Data Conversion key Data Conversion Data Conversion value Data Conversion Cache Event Filter super super filter Cache Event Converter super super converter Set Class extends Annotation filter Annotations final Listener l test Listener Class Validity listener get Class final generated Id random final Cache Mode cache Mode config clustering cache Mode Filter Indexing Service Provider indexing Provider null boolean found Methods false Data Conversion key Conversion key Data Conversion null Data Conversion key Data Conversion Data Conversion value Conversion value Data Conversion null Data Conversion value Data Conversion filter instanceof Indexed Filter Indexed Filter indexed Filter Indexed Filter filter indexing Provider find Indexing Service Provider indexed Filter indexing Provider null Delegating Cache Invocation Builder builder new Delegating Cache Invocation Builder indexing Provider builder set Filter Annotations filter Annotations set Include Current State l include Current State set Clustered l clustered set Primary l clustered cache Mode Distributed l primary set Observation l clustered Listener Observation l observation set Filter filter set Converter converter set Key Data Conversion key Conversion set Value Data Conversion value Conversion set Identifier generated Id set Class Loader null found Methods validate Add Filter Listener Invocations listener builder filter Annotations builder register Listener Invocations indexing Provider null Cache Invocation Builder builder new Cache Invocation Builder builder set Filter Annotations filter Annotations set Include Current State l include Current State set Clustered l clustered set Primary l clustered cache Mode Distributed l primary set Observation l clustered Listener Observation l observation set Filter filter set Key Data Conversion key Conversion set Value Data Conversion value Conversion set Converter converter set Identifier generated Id set Class Loader null l clustered builder set Filter Annotations find Listener Callbacks listener found Methods validate Add Filter Listener Invocations listener builder filter Annotations found Methods l clustered l observation Listener Observation throw log cluster Listener Registered Pre Events listener get Class else cache Mode Invalidation throw new Unsupported Operation Exception Cluster listeners used Invalidation Caches else cache Mode Distributed cluster Listener Ds put listener generated Id Embedded Cache Manager manager cache get Cache Manager Address Address manager get Address List Address members manager get Members member n even worry sending listeners members null members size Distributed Execution Completion Service decs new Distributed Execution Completion Service dist Executor Service trace log tracef Replicating cluster listener nodes cluster listener id members generated Id Callable callable new Cluster Listener Replicate Callable generated Id Address filter converter l sync filter Annotations key Data Conversion value Data Conversion Address member members member equals Address decs submit member callable int members size try decs take get catch Interrupted Exception e throw new Cache Listener Exception e catch Execution Exception e Throwable cause e get Cause got Suspect Exception means remote node n started cache yet ignore joins retrieve listener cause instanceof Suspect Exception throw new Cache Listener Exception cause int extra Count anyone else joined since sent send listeners since may queried nodes got new listener List Address members manager get Members Address member members members contains member member equals Address trace log tracef Found additional node joined replication cluster listener id member generated Id extra Count decs submit member callable int extra Count try decs take get catch Interrupted Exception e throw new Cache Listener Exception e catch Execution Exception e throw new Cache Listener Exception e segment listener handler means initial state Queueing Segment Listener handler segment Handler remove generated Id handler null trace log tracef Listener requests initial state cache generated Id try Cache Stream entry Stream cache get Advanced Cache Encoding key Conversion get Encoder Class value Conversion get Encoder Class Wrapping key Data Conversion get Wrapper Class value Data Conversion get Wrapper Class cache Entry Set stream Stream Cache Entry used Stream entry Stream segment Completion Listener handler filter instanceof Cache Event Filter Converter filter converter converter null Hacky cast prevent casts used Stream Cache Filters filter Convert used Stream new Cache Event Filter Converter Key Value Filter Converter Cache Event Filter Converter filter else used Stream filter null used Stream used Stream filter Cache Filters predicate new Cache Event Filter Key Value Filter filter used Stream converter null used Stream used Stream map Cache Filters function new Cache Event Converter Converter converter Iterator Cache Entry iterator used Stream iterator iterator Next Cache Entry entry iterator next Mark key processed see concurrent update Object value handler mark Key Processing entry get Key value Base Queueing Segment Listener n process value concurrent remove continue raise Event Initial Transfer generated Id entry l clustered handler notified Key entry get Key Set Cache Entry entries handler find Created Entries Cache Entry entry entries raise Event Initial Transfer generated Id entry l clustered trace log tracef Listener initial state cache completed generated Id handler transfer Complete protected class Cache Invocation Builder extends Abstract Invocation Builder Cache Event Filter super super filter Cache Event Converter super super converter boolean Primary boolean clustered boolean include Current State identifier Data Conversion key Data Conversion Data Conversion value Data Conversion Listener Observation observation Set Class extends Annotation filter Annotations public Cache Event Filter super super get Filter return filter public Cache Invocation Builder set Filter Cache Event Filter super super filter filter filter return public Cache Event Converter super super get Converter return converter public Cache Invocation Builder set Converter Cache Event Converter super super converter converter converter return public boolean Primary return Primary public Cache Invocation Builder set Primary boolean Primary Primary Primary return public boolean Clustered return clustered public Cache Invocation Builder set Clustered boolean clustered clustered clustered return public get Identifier return identifier public Cache Invocation Builder set Identifier identifier identifier identifier return public Cache Invocation Builder set Key Data Conversion Data Conversion data Conversion key Data Conversion data Conversion return public Cache Invocation Builder set Value Data Conversion Data Conversion data Conversion value Data Conversion data Conversion return public boolean Include Current State return include Current State public Cache Invocation Builder set Include Current State boolean include Current State include Current State include Current State return public Listener Observation get Observation return observation public Cache Invocation Builder set Observation Listener Observation observation observation observation return public Cache Invocation Builder set Filter Annotations Set Class extends Annotation filter Annotations filter Annotations filter Annotations return Override public Cache Entry Listener Invocation build Listener Invocation Event invocation new Listener Invocation Impl target method sync class Loader subject wire Dependencies filter converter dealing clustered events forces cluster listener use primary else would duplicate events Cache Entry Listener Invocation return Value include Current State clustered listener distributed cache extra optimizations clustered Queueing Segment Listener handler segment Handler get identifier handler null config clustering cache Mode Distributed handler new Distributed Queueing Segment Listener entry Factory distribution Manager else handler new Queueing Segment Listener entry Factory Queueing Segment Listener current Queue segment Handler put Absent identifier handler current Queue null handler current Queue return Value new Clustered Listener Invocation invocation handler filter converter annotation Primary identifier sync observation filter Annotations key Data Conversion value Data Conversion else removed non cluster listeners supported Queueing Segment Listener handler segment Handler get identifier handler null handler new Queueing Segment Listener Queueing Segment Listener current Queue segment Handler put Absent identifier handler current Queue null handler current Queue return Value new Non Clustered Listener Invocation invocation handler filter converter annotation Primary identifier sync return Value new Base Cache Entry Listener Invocation invocation filter converter annotation Primary clustered identifier sync observation filter Annotations key Data Conversion value Data Conversion else include Current State use base listener invocation immediately passes notifications return Value new Base Cache Entry Listener Invocation invocation filter converter annotation Primary clustered identifier sync observation filter Annotations key Data Conversion value Data Conversion return return Value protected void wire Dependencies Cache Event Filter super super filter Cache Event Converter super super converter filter null component Registry wire Dependencies filter converter null converter filter component Registry wire Dependencies converter key Data Conversion null component Registry wire Dependencies key Data Conversion value Data Conversion null component Registry wire Dependencies value Data Conversion protected class Delegating Cache Invocation Builder extends Cache Invocation Builder private final Filter Indexing Service Provider provider private final Map Class extends Annotation List Delegating Cache Entry Listener Invocation listeners new Hash Map Delegating Cache Invocation Builder Filter Indexing Service Provider provider provider provider Override public Delegating Cache Entry Listener Invocation build Delegating Cache Entry Listener Invocation invocation provider intercept Listener Invocation super build List Delegating Cache Entry Listener Invocation invocations listeners get invocation get Annotation invocations null invocations new Array List listeners put invocation get Annotation invocations invocations add invocation return invocation void register Listener Invocations listeners Empty boolean filter Convert filter converter converter null provider register Listener Invocations clustered Primary filter Convert Indexed Filter filter listeners key Data Conversion value Data Conversion protected class Non Clustered Listener Invocation extends Base Cache Entry Listener Invocation private final Queueing Segment Listener Event handler protected Non Clustered Listener Invocation Listener Invocation Event invocation Queueing Segment Listener Event handler Cache Event Filter super super filter Cache Event Converter super super converter Class extends Annotation annotation boolean Primary identifier boolean sync Listener Observation observation Set Class extends Annotation filter Annotations Data Conversion key Data Conversion Data Conversion value Data Conversion super invocation filter converter annotation Primary false identifier sync observation filter Annotations key Data Conversion value Data Conversion handler handler Override protected void Real Invocation Event event handler handle Event new Event Wrapper null event invocation super Real Invocation event class used cluster listener invocations included current state Thus assume types Cache Entry Event since n allow types protected static class Clustered Listener Invocation extends Base Cache Entry Listener Invocation private final Queueing Segment Listener Cache Entry Event handler public Clustered Listener Invocation Listener Invocation Event invocation Queueing Segment Listener Cache Entry Event handler Cache Event Filter super super filter Cache Event Converter super super converter Class extends Annotation annotation boolean Primary identifier boolean sync Listener Observation observation Set Class extends Annotation filter Annotations Data Conversion key Data Conversion Data Conversion value Data Conversion super invocation filter converter annotation Primary true identifier sync observation filter Annotations key Data Conversion value Data Conversion handler handler Override public void invoke Event event throw new Unsupported Operation Exception Clustered initial transfer n support regular events Override protected void Real Invocation Event Wrapper Cache Entry Event wrapped used clusters safely cast handler handle Event wrapped invocation super Real Invocation wrapped get Event protected static class Base Cache Entry Listener Invocation implements Cache Entry Listener Invocation protected final Listener Invocation Event invocation protected final Cache Event Filter super super filter protected final Cache Event Converter super super converter private final Data Conversion key Data Conversion private final Data Conversion value Data Conversion protected final boolean Primary protected final boolean clustered protected final identifier protected final Class extends Annotation annotation protected final boolean sync protected final boolean filter Convert protected final Listener Observation observation protected final Set Class extends Annotation filter Annotations protected Base Cache Entry Listener Invocation Listener Invocation Event invocation Cache Event Filter super super filter Cache Event Converter super super converter Class extends Annotation annotation boolean Primary boolean clustered identifier boolean sync Listener Observation observation Set Class extends Annotation filter Annotations Data Conversion key Data Conversion Data Conversion value Data Conversion invocation invocation filter filter converter converter key Data Conversion key Data Conversion value Data Conversion value Data Conversion filter Convert filter instanceof Cache Event Filter Converter filter converter converter null Primary Primary clustered clustered identifier identifier annotation annotation sync sync observation observation filter Annotations filter Annotations Override public void invoke Event event Invoke event Real Invocation event entry point local listeners firing events param wrapped param Local Node Primary Owner Override public void invoke Event Wrapper Cache Entry Event wrapped boolean Local Node Primary Owner See filtered first evaluating Cache Entry Event resulting Event Invoke wrapped get Event Local Node Primary Owner resulting Event null wrapped set Event resulting Event invoke Checks wrapped false filter Convert entry point remote listener events fired param wrapped param skip Queue Override public void invoke Checks Event Wrapper Cache Entry Event wrapped boolean skip Queue boolean skip Converter run converter first way converter n run serialized enqueued also handler n worry skip Converter wrapped set Event convert Value converter wrapped get Event skip Queue invocation invoke wrapped get Event else Real Invocation wrapped protected void Real Invocation Event Wrapper Cache Entry Event event Real Invocation event get Event protected void Real Invocation Event event invocation invoke event protected boolean Invoke Event event return observation Invoke event Pre protected Cache Entry Event Invoke Cache Entry Event event boolean Local Node Primary Owner trace log tracef invoke filter Primary Primary event filter Primary Local Node Primary Owner Primary Local Node Primary Owner return null event instanceof Event Impl Event Impl event Impl Event Impl event Invoke event return null Event Type event Type use filter provided event filter properly filter null event Type get Event event Impl null filter Convert Object new Value Cache Event Filter Converter filter filter Convert event Impl get Key event Impl get Old Value event Impl get Old Metadata event Impl get Value event Impl get Metadata event Type new Value null Event Impl clone event Impl clone clone set Value new Value return clone else return null else filter accept event Impl get Key event Impl get Old Value event Impl get Old Metadata event Impl get Value event Impl get Metadata event Type return null return event ca n currently filter events n implement Cache Entry Event events Basically events single key value pair private Event Type get Event Event Impl event switch event get Type case case case case case case case case case return new Event Type event Command Retried event Pre event get Type default return null Override public Object get Target return invocation get Target Override public Cache Event Filter super super get Filter return filter Override public Set Class extends Annotation get Filter Annotations return filter Annotations Override public Data Conversion get Key Data Conversion return key Data Conversion Override public Data Conversion get Value Data Conversion return value Data Conversion Override public Cache Event Converter super super get Converter return converter Override public boolean Clustered return clustered Override public get Identifier return identifier Override public Listener Observation get Observation return observation Override public Class extends Annotation get Annotation return annotation protected Cache Entry Event convert Value Cache Event Converter super super converter Cache Entry Event event Cache Entry Event returned Event converter null event instanceof Event Impl bit hacky let type passed type Event Impl event Impl Event Impl event Event Type ev Type new Event Type event Impl Command Retried event Impl Pre event Impl get Type Object new Value converter convert event Impl get Key event Impl get Old Value event Impl get Old Metadata event Impl get Value event Impl get Metadata ev Type new Value event Impl get Value Event Impl clone event Impl clone clone set Value new Value returned Event clone else returned Event event Impl else throw new Illegal Argument Exception Provided event org notifications cachelistener event impl Event Impl converter used else returned Event event return returned Event Override public boolean Sync return sync Override public void remove Listener Object listener super remove Listener listener id cluster Listener Ds remove listener id null List Future futures dist Executor Service submit Everywhere new Cluster Listener Remove Callable id Future future futures try future get catch Interrupted Exception e throw new Cache Listener Exception e catch Execution Exception e throw new Cache Listener Exception e Override protected Set Cache Entry Listener Invocation remove Listener Invocation Class extends Annotation annotation Object listener Set Cache Entry Listener Invocation marked Removal super remove Listener Invocation annotation listener Cache Entry Listener Invocation li marked Removal li instanceof Delegating Cache Entry Listener Invocation Delegating Cache Entry Listener Invocation li unregister return marked Removal
package org marshall exts import java io Exception import java io Object Input import java io Object Output import java util Set import org commands Cancel Command import org commands Create Cache Command import org commands Remove Cache Command import org commands control Lock Control Command import org commands read Distributed Execute Command import org commands remote Cache Rpc Command import org commands remote Clustered Get Command import org commands remote Clustered Get Command import org commands remote Single Rpc Command import org commands remote recovery Complete Transaction Command import org commands remote recovery Get Doubt Transactions Command import org commands remote recovery Get Doubt Tx Info Command import org commands remote recovery Tx Completion Notification Command import org commands tx Commit Command import org commands tx Prepare Command import org commands tx Rollback Command import org commands tx Versioned Commit Command import org commands tx Versioned Prepare Command import org commands tx totalorder Total Order Commit Command import org commands tx totalorder Total Order Non Versioned Prepare Command import org commands tx totalorder Total Order Rollback Command import org commands tx totalorder Total Order Versioned Commit Command import org commands tx totalorder Total Order Versioned Prepare Command import org commands write Backup Put Map Rpc Command import org commands write Backup Write Rpc Command import org commands write Invalidate Versions Command import org commons marshall Abstract Externalizer import org commons util Util import org factories Global Component Registry import org marshall core Ids import org statetransfer State Request Command import org statetransfer State Response Command import org stream impl Stream Request Command import org stream impl Stream Response Command import org stream impl Stream Segment Response Command import org util Byte String import org xsite Single Site Rpc Command import org xsite Site Admin Command import org xsite statetransfer Site State Push Command import org xsite statetransfer Site State Transfer Control Command Externalizer charge marshalling cache specific commands read time marshaller able locate right cache marshaller provide externalizers implementations follow author Galder Zamarre since public final class Cache Rpc Command Externalizer extends Abstract Externalizer Cache Rpc Command private final Global Component Registry gcr private final Replicable Command Externalizer cmd Ext public Cache Rpc Command Externalizer Global Component Registry gcr Replicable Command Externalizer cmd Ext cmd Ext cmd Ext gcr gcr Override public Set Class extends Cache Rpc Command get Type Classes noinspection unchecked Set Class extends Cache Rpc Command core Commands Util Set Distributed Execute Command class Lock Control Command class State Request Command class State Response Command class Clustered Get Command class Single Rpc Command class Commit Command class Prepare Command class Rollback Command class Remove Cache Command class Tx Completion Notification Command class Get Doubt Transactions Command class Get Doubt Tx Info Command class Complete Transaction Command class Versioned Prepare Command class Create Cache Command class Cancel Command class Versioned Commit Command class Site Admin Command class Total Order Non Versioned Prepare Command class Total Order Versioned Prepare Command class Total Order Commit Command class Total Order Versioned Commit Command class Total Order Rollback Command class Site State Transfer Control Command class Site State Push Command class Single Site Rpc Command class Clustered Get Command class Stream Request Command class Stream Segment Response Command class Stream Response Command class Backup Write Rpc Command class Backup Put Map Rpc Command class Invalidate Versions Command class interested cache specific replicable commands core Commands add gcr get Module Properties module Cache Rpc Commands return core Commands Override public void write Object Object Output output Cache Rpc Command command throws Exception header type method id cmd Ext write Command Header output command Byte String cache Name command get Cache Name Byte String write Object output cache Name Take cache marshaller generate payload rest command using cache marshaller write bytes original payload marshall Parameters command output private void marshall Parameters Cache Rpc Command cmd Object Output oo throws Exception cmd Ext write Command Parameters oo cmd Override public Cache Rpc Command read Object Object Input input throws Exception Class Found Exception header byte type input read Byte byte method Id byte input read Short Byte String cache Name Byte String read Object input create object input Cache Rpc Command cache Rpc Command cmd Ext Stream method Id type cache Name cmd Ext read Command Parameters input cache Rpc Command return cache Rpc Command Override public Integer get Id return Ids
package org persistence factory import java util Array List import java util Collections import java util List import org configuration cache Store Configuration import org factories scopes Scope import org factories scopes Scopes import org util logging Log import org util logging Log Factory Registry multiple link Cache Store Factory objects author Sebastian Laskawiec since Scope Scopes public class Cache Store Factory Registry private static final Log log Log Factory get Log Cache Store Factory Registry class private List Cache Store Factory factories Collections synchronized List new Array List Cache Store Factory public Cache Store Factory Registry factories add new Local Class Loader Cache Store Factory Creates new Object based configuration param store Configuration Cache store configuration return Instance created based configuration throws org commons Cache Configuration Exception instance could n created public Object create Instance Store Configuration store Configuration Cache Store Factory factory factories Object instance factory create Instance store Configuration instance null return instance throw log unable Instantiate Class store Configuration get Class public Store Configuration process Store Configuration Store Configuration store Configuration Cache Store Factory factory factories Store Configuration processed Configuration factory process Configuration store Configuration processed Configuration null return processed Configuration return store Configuration Adds new factory processing param cache Store Factory Factory added public void add Cache Store Factory Cache Store Factory cache Store Factory cache Store Factory null throw log unable Add Null Custom Store factories add cache Store Factory Removes factories associated registry public void clear Factories factories clear
package org topology import java io Exception import java io Object Input import java io Object Output import java util Collections import java util List import java util Set import org commons marshall Instance Reusing Advanced Externalizer import org commons marshall Marshall Util import org distribution ch Consistent Hash import org marshall core Ids import org remoting transport Address import org util logging Log import org util logging Log Factory status cache distribution state transfer point view p pending code null n state transfer progress p code topology Id incremented every time topology changes e g member leaves state transfer starts ends code rebalance Id modified consistent hashes updated without requiring state transfer e g member leaves author Dan Berindei since public class Cache Topology private static Log log Log Factory get Log Cache Topology class private static final boolean trace log Trace Enabled private final int topology Id private final int rebalance Id private final Consistent Hash current private final Consistent Hash pending private final Consistent Hash union private final Phase phase private List Address actual Members private List Persistent persistent Ds public Cache Topology int topology Id int rebalance Id Consistent Hash current Consistent Hash pending Phase phase List Address actual Members List Persistent persistent Ds topology Id rebalance Id current pending null phase actual Members persistent Ds public Cache Topology int topology Id int rebalance Id Consistent Hash current Consistent Hash pending Consistent Hash union Phase phase List Address actual Members List Persistent persistent Ds pending null pending get Members contains current get Members phase Phase throw new Illegal Argument Exception cache topology pending consistent hash must contain current consistent hash members current current pending pending topology Id topology Id rebalance Id rebalance Id current current pending pending union union phase phase actual Members actual Members persistent Ds persistent Ds public int get Topology Id return topology Id current consistent hash public Consistent Hash get Current return current future consistent hash code null rebalance progress public Consistent Hash get Pending return pending union current future consistent hashes code null rebalance progress public Consistent Hash get Union return union id latest started rebalance public int get Rebalance Id return rebalance Id return nodes members consistent hashes code pending null otherwise members current see get Actual Members public List Address get Members pending null return pending get Members else current null return current get Members else return Collections empty List return nodes active members cache equal link get Members cache available strict subset cache degraded mode see org partitionhandling Availability Mode public List Address get Actual Members return actual Members public List Persistent get Members Persistent Ds return persistent Ds Read operations always go current owners public Consistent Hash get Read Consistent Hash switch phase case assert pending null assert union null return current case return pending case case assert pending null assert union null return current case assert pending null return union case assert union null return pending default throw new Illegal State Exception rebalance progress write operations go union current future owners public Consistent Hash get Write Consistent Hash switch phase case assert pending null assert union null return current case return pending case case case case assert pending null assert union null return union default throw new Illegal State Exception Override public boolean equals Object return true null get Class get Class return false Cache Topology Cache Topology topology Id topology Id return false rebalance Id rebalance Id return false current null current equals current current null return false pending null pending equals pending pending null return false union null union equals union union null return false actual Members null actual Members equals actual Members actual Members null return false return true Override public int hash Code int result topology Id result result rebalance Id result result current null current hash Code result result pending null pending hash Code result result union null union hash Code result result actual Members null actual Members hash Code return result Override public String String return Cache Topology id topology Id rebalance Id rebalance Id current current pending pending union union phase phase actual Members actual Members persistent Ds persistent Ds public final void log Routing Table Information trace log tracef Current consistent hash routing table current get Routing Table String pending null log tracef Pending consistent hash routing table pending get Routing Table String union null log tracef Union consistent hash routing table union get Routing Table String public Phase get Phase return phase public static class Externalizer extends Instance Reusing Advanced Externalizer Cache Topology Override public void Write Object Object Output output Cache Topology cache Topology throws Exception output write Int cache Topology topology Id output write Int cache Topology rebalance Id output write Object cache Topology current output write Object cache Topology pending output write Object cache Topology union output write Object cache Topology actual Members output write Object cache Topology persistent Ds Marshall Util marshall Enum cache Topology phase output Override public Cache Topology Read Object Object Input unmarshaller throws Exception Class Found Exception int topology Id unmarshaller read Int int rebalance Id unmarshaller read Int Consistent Hash current Consistent Hash unmarshaller read Object Consistent Hash pending Consistent Hash unmarshaller read Object Consistent Hash union Consistent Hash unmarshaller read Object List Address actual Members List Address unmarshaller read Object List Persistent persistent Ds List Persistent unmarshaller read Object Phase phase Marshall Util unmarshall Enum unmarshaller Phase value return new Cache Topology topology Id rebalance Id current pending union phase actual Members persistent Ds Override public Integer get Id return Ids Override public Set Class extends Cache Topology get Type Classes return Collections Class extends Cache Topology singleton Cache Topology class Phase rebalance process Using four phases guarantees properties x write contains nodes Tx read requirement Tx read x read non empty subset nodes allow blocking read commands reading entries node owns according read Old entries wiped coming link phase public enum Phase current set works read write false Used caches n use phase topology change Pending used read write true Interim state read Ch set locally using previous Topology said node read whilst write contains members merge false Used state transfer read current write union true Used state transfer completes read write union false Intermediate state prevents read pending write union false private static final Phase values Phase values private final boolean rebalance Phase boolean rebalance rebalance rebalance public boolean Rebalance return rebalance public static Phase value int ordinal return values ordinal
package org topology import java io Exception import java io Object Input import java io Object Output import java util Array List import java util List import java util concurrent Completable Future import org commands Replicable Command import org commons Cache Exception import org commons marshall Marshall Util import org distribution ch Consistent Hash import org factories annotations Inject import org partitionhandling Availability Mode import org remoting responses Exception Response import org remoting responses Successful Response import org remoting responses Unsuccessful Response import org remoting transport Address import org util logging Log import org util logging Log Factory control command cache membership rebalance operations code Cache Rpc Command needs run coordinator even coordinator n certain cache running author Dan Berindei since public class Cache Topology Control Command implements Replicable Command public enum Type Member coordinator node requesting join cluster member signaling wants leave cluster member confirming finished topology change rebalance confirmation sent topologies link Cache Topology Phase link Cache Topology Phase link Cache Topology Phase rebalance phases installed topology change link Cache Topology Phase phase member requesting cache shutdown Coordinator member coordinator updating consistent hash Used signal end rebalancing well coordinator starting rebalance operation coordinator requesting information running caches Update stable topology Tell members shutdown cache Member coordinator Enable disable rebalancing check whether rebalancing enabled Change availability Query rebalancing progress private static final Type values private static final Log log Log Factory get Log Cache Topology Control Command class public static final byte private transient Local Topology Manager local Topology Manager private transient Cluster Topology Manager cluster Topology Manager private String cache Name private Type type private Address sender private Cache Join Info join Info private int topology Id private int rebalance Id private Consistent Hash current private Consistent Hash pending private Cache Topology Phase phase private Availability Mode availability Mode private List Address actual Members private List Persistent persistent Ds private Throwable throwable private int view Id Command Id Uniqueness Test public Cache Topology Control Command cache Name null public Cache Topology Control Command String cache Name Type type Address sender int view Id cache Name cache Name type type sender sender view Id view Id public Cache Topology Control Command String cache Name Type type Address sender Cache Join Info join Info int view Id cache Name cache Name type type sender sender join Info join Info view Id view Id public Cache Topology Control Command String cache Name Type type Address sender int topology Id int rebalance Id Throwable throwable int view Id cache Name cache Name type type sender sender topology Id topology Id rebalance Id rebalance Id throwable throwable view Id view Id public Cache Topology Control Command String cache Name Type type Address sender Availability Mode availability Mode int view Id cache Name cache Name type type sender sender availability Mode availability Mode view Id view Id public Cache Topology Control Command String cache Name Type type Address sender Cache Topology cache Topology Availability Mode availability Mode int view Id cache Name cache Name type type sender sender topology Id cache Topology get Topology Id rebalance Id cache Topology get Rebalance Id current cache Topology get Current pending cache Topology get Pending phase cache Topology get Phase availability Mode availability Mode actual Members cache Topology get Actual Members persistent Ds cache Topology get Members Persistent Ds view Id view Id Inject public void init Local Topology Manager local Topology Manager Cluster Topology Manager cluster Topology Manager local Topology Manager local Topology Manager cluster Topology Manager cluster Topology Manager Override public Completable Future Object invoke Async throws Throwable final boolean trace log Trace Enabled Log Factory push cache Name trace try Object response Value Perform return Completable Future completed Future Successful Response create response Value catch Interrupted Exception e log tracef Command execution interrupted cache manager shutting return Completable Future completed Future Unsuccessful Response catch Exception log exception Handling Command todo anistor Command Aware Request Dispatcher wrap exceptions instead return Completable Future completed Future new Exception Response finally Log Factory pop trace private Object Perform throws Exception switch type member coordinator case return cluster Topology Manager handle Join cache Name sender join Info view Id case cluster Topology Manager handle Leave cache Name sender view Id return null case cluster Topology Manager handle Rebalance Phase Confirm cache Name sender topology Id throwable view Id return null case cluster Topology Manager handle Shutdown Request cache Name return null coordinator member case local Topology Manager handle Topology Update cache Name new Cache Topology topology Id rebalance Id current pending phase actual Members persistent Ds availability Mode view Id sender return null case local Topology Manager handle Stable Topology Update cache Name new Cache Topology topology Id rebalance Id current pending Cache Topology Phase actual Members persistent Ds sender view Id return null case local Topology Manager handle Rebalance cache Name new Cache Topology topology Id rebalance Id current pending phase actual Members persistent Ds view Id sender return null case return local Topology Manager handle Status Request view Id case local Topology Manager handle Cache Shutdown cache Name return null rebalance policy control case return cluster Topology Manager Rebalancing Enabled cache Name case cluster Topology Manager set Rebalancing Enabled cache Name true return true case cluster Topology Manager set Rebalancing Enabled cache Name false return true availability mode case cluster Topology Manager force Availability Mode cache Name availability Mode return true rebalancing status case return cluster Topology Manager get Rebalancing Status cache Name default throw new Cache Exception Unknown cache topology control command type type public String get Cache Name return cache Name public Address get Origin return sender public Type get Type return type public int get Topology Id return topology Id public Consistent Hash get Current return current public Consistent Hash get Pending return pending public Availability Mode get Availability Mode return availability Mode public Throwable get Throwable return throwable public Cache Topology Phase get Phase return phase Override public byte get Command Id return Override public void write Object Output output throws Exception Marshall Util marshall String cache Name output Marshall Util marshall Enum type output switch type case output write Object sender output write Object join Info output write Int view Id return case output write Object sender output write Int view Id return case output write Object sender output write Object throwable output write Int view Id output write Int topology Id return case output write Object sender output write Object current output write Object pending Marshall Util marshall Enum phase output Marshall Util marshall Collection actual Members output Marshall Util marshall Collection persistent Ds output Marshall Util marshall Enum availability Mode output output write Int topology Id output write Int rebalance Id output write Int view Id return case output write Object sender output write Object current output write Object pending Marshall Util marshall Collection actual Members output Marshall Util marshall Collection persistent Ds output output write Int topology Id output write Int rebalance Id output write Int view Id return case output write Object sender output write Object current output write Object pending Marshall Util marshall Enum phase output Marshall Util marshall Collection actual Members output Marshall Util marshall Collection persistent Ds output output write Int topology Id output write Int rebalance Id output write Int view Id return case output write Int view Id return case Marshall Util marshall Enum availability Mode output return case case case case default Override public void read Object Input input throws Exception Class Found Exception cache Name Marshall Util unmarshall String input type Marshall Util unmarshall Enum input ordinal Type ordinal switch type case sender Address input read Object join Info Cache Join Info input read Object view Id input read Int return case sender Address input read Object view Id input read Int return case sender Address input read Object throwable Throwable input read Object view Id input read Int topology Id input read Int return case sender Address input read Object current Consistent Hash input read Object pending Consistent Hash input read Object phase Marshall Util unmarshall Enum input Cache Topology Phase value actual Members Marshall Util unmarshall Collection input Array List new persistent Ds Marshall Util unmarshall Collection input Array List new availability Mode Marshall Util unmarshall Enum input Availability Mode value topology Id input read Int rebalance Id input read Int view Id input read Int return case sender Address input read Object current Consistent Hash input read Object pending Consistent Hash input read Object actual Members Marshall Util unmarshall Collection input Array List new persistent Ds Marshall Util unmarshall Collection input Array List new topology Id input read Int rebalance Id input read Int view Id input read Int return case sender Address input read Object current Consistent Hash input read Object pending Consistent Hash input read Object phase Marshall Util unmarshall Enum input Cache Topology Phase value actual Members Marshall Util unmarshall Collection input Array List new persistent Ds Marshall Util unmarshall Collection input Array List new topology Id input read Int rebalance Id input read Int view Id input read Int return case view Id input read Int return case availability Mode Marshall Util unmarshall Enum input Availability Mode value return case case case case default Override public String String return Cache Topology Control Command cache cache Name type type sender sender join Info join Info topology Id topology Id rebalance Id rebalance Id current current pending pending availability Mode availability Mode phase phase actual Members actual Members throwable throwable view Id view Id Override public boolean Return Value Expected return true Override public boolean Block return true
package org interceptors impl import org commands Visitable Command import org context Invocation Context import org interceptors Base Async Interceptor import org util logging Log import org util logging Log Factory Always end chain directly front cache Simply calls cache using reflection call resulted modification add Modification end modification list keyed current transaction author Bela Ban author Mircea Markus jboss com author Dan Berindei since public class Call Interceptor extends Base Async Interceptor private static final Log log Log Factory get Log Call Interceptor class private static final boolean trace log Trace Enabled Override public Object visit Command Invocation Context ctx Visitable Command command throws Throwable trace log tracef Invoking command get Class get Simple Name return command perform ctx
package org client hotrod impl operations import java net Socket Address import java util Set import java util concurrent atomic Atomic Integer import org client hotrod configuration Configuration import org client hotrod impl protocol Codec import org client hotrod impl protocol Header Params import org client hotrod impl transport Transport import org client hotrod impl transport Transport Factory import net jcip annotations Immutable Corresponds clear operation defined href http community jboss org wiki Hot Rod Protocol Hot Rod protocol specification author Mircea Markus jboss com since Immutable public class Clear Operation extends Retry Failure Operation Void public Clear Operation Codec codec Transport Factory transport Factory byte cache Name Atomic Integer topology Id int flags Configuration cfg super codec transport Factory cache Name topology Id flags cfg Override protected Transport get Transport int retry Count Set Socket Address failed Servers return transport Factory get Transport failed Servers cache Name Override protected Void execute Operation Transport transport Header Params params write Header transport transport flush read Header Validate transport params return null
package org commons util import java util Iterator import java util Spliterator import java util Spliterators import java util function Consumer import java util stream Stream import java util stream Stream Support class consists exclusively static methods operate return closeable interfaces helpful wanting change given interface appropriate closeable interface since public class Closeables private Closeables Takes provided closeable iterator wraps appropriately used closeable spliterator close iterator spliterator closed param iterator closeable iterator change spliterator param size approximate size iterator size known link Long passed param characteristics characteristics given spliterator defined link Spliterator interface param type iterator spliterator return spliterator closed close provided iterator public static Closeable Spliterator spliterator Closeable Iterator extends iterator long size int characteristics return new Closeable Iterator Closeable Spliterator iterator size characteristics Creates closeable spliterator given spliterator nothing close called param spliterator spliterator wrap allow become closeable spliterator param type spliterators return spliterator nothing closed public static Closeable Spliterator spliterator Spliterator spliterator return new Spliterator Closeable Spliterator spliterator Creates closeable spliterator closed close underlying stream well param stream stream change closeable spliterator param type stream return spliterator closed also close underlying stream public static Closeable Spliterator spliterator Stream stream return new Stream Closeable Spliterator stream Creates closeable iterator closed close underlying stream well param stream stream change closeable iterator param type stream return iterator closed also close underlying stream public static Closeable Iterator iterator Stream extends stream return new Stream Closeable Iterator stream Creates closeable iterator given iterator nothing close called param iterator iterator wrap allow become closeable iterator param type iterators return iterator nothing closed public static Closeable Iterator iterator Iterator extends iterator return new Iterator Closeable Iterator iterator Creates stream closed also close underlying spliterator param spliterator spliterator back stream subsequently close param parallel whether returned stream parallel param type stream return stream use public static Stream stream Closeable Spliterator spliterator boolean parallel Stream stream Stream Support stream spliterator parallel stream Close spliterator close return stream Creates stream closed also close underlying iterator param iterator iterator back stream subsequently close param parallel whether returned stream parallel param size size iterator known otherwise link Long passed param characteristics characteristics iterator used param type stream return stream use public static Stream stream Closeable Iterator iterator boolean parallel long size int characteristics Stream stream Stream Support stream Spliterators spliterator iterator size characteristics parallel stream Close iterator close return stream private static class Iterator Closeable Iterator implements Closeable Iterator private final Iterator extends iterator public Iterator Closeable Iterator Iterator extends iterator iterator iterator Override public void close nothing Override public boolean Next return iterator Next Override public next return iterator next Override public void remove iterator remove private static class Spliterator Closeable Spliterator implements Closeable Spliterator private final Spliterator spliterator public Spliterator Closeable Spliterator Spliterator spliterator spliterator spliterator Override public void close Override public boolean try Advance Consumer super action return spliterator try Advance action Override public Spliterator try Split return spliterator try Split Override public long estimate Size return spliterator estimate Size Override public int characteristics return spliterator characteristics private static class Closeable Iterator Closeable Spliterator extends Spliterator Closeable Spliterator private final Closeable Iterator extends iterator Closeable Iterator Closeable Spliterator Closeable Iterator extends iterator long size int characteristics super Spliterators spliterator iterator size characteristics iterator iterator Override public void close iterator close private static class Stream Closeable Iterator extends Iterator Closeable Iterator private final Stream extends stream public Stream Closeable Iterator Stream extends stream super stream iterator stream stream Override public void close stream close private static class Stream Closeable Spliterator extends Spliterator Closeable Spliterator private final Stream stream public Stream Closeable Spliterator Stream stream super stream spliterator stream stream Override public void close stream close
package org stats impl import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import static org stats impl Stat Keys import java io Serializable import java util Array List import java util Hash Map import java util List import java util Map import java util Set import java util concurrent Completable Future import org Advanced Cache import org Cache import org configuration cache Cache Mode import org configuration cache Configuration import org distexec Default Executor Service import org distexec Distributed Callable import org eviction Activation Manager import org eviction Passivation Manager import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org interceptors Async Interceptor import org interceptors impl Cache Loader Interceptor import org interceptors impl Cache Writer Interceptor import org interceptors impl Invalidation Interceptor import org jmx annotations Display Type import org jmx annotations Bean import org jmx annotations Managed Attribute import org jmx annotations Measurement Type import org jmx annotations Units import org stats Cluster Cache Stats import org stats Stats import org util concurrent locks Lock Manager import org util logging Log import org util logging Log Factory Bean object Name Cluster Cache Stats description General cluster statistics timings hit miss ratio etc public class Cluster Cache Stats Impl extends Abstract Cluster Stats implements Cluster Cache Stats private static String new String private static final Log log Log Factory get Log Cluster Cache Stats Impl class private Default Executor Service des private Advanced Cache cache private double read Write Ratio private double hit Ratio public Cluster Cache Stats Impl super log Inject public void inject Dependencies Cache cache Configuration configuration cache cache get Advanced Cache statistics Enabled configuration jmx Statistics enabled Start public void start des Security Actions get Default Executor Service cache Stop public void stop des null des Shutdown des shutdown Override void update Stats throws Exception List Map String Number response List new Array List List Completable Future Map String Number response Futures des submit Everywhere new Distributed Cache Stats Callable Completable Future Map String Number cf response Futures response List add cf get String att put Long Attributes response List att put Long Attributes Average response List put Long Attributes Average response List put Long Attributes Average response List put Int Attributes response List put Int Attributes response List long number Entries Memory get Cache Mode cache Replicated cache get Stats get Current Number Entries Memory long add Double Attributes response List stats Map put number Entries Memory stats Map put cache size update Time Since Start response List update Ratios response List information Override Managed Attribute description Cluster wide total average number milliseconds read operation cache display Name Cluster wide total average read time units Units display Type Display Type public long get Average Read Time return get Stat Long Override Managed Attribute description Cluster wide total average number milliseconds remove operation cache display Name Cluster wide total average remove time units Units display Type Display Type public long get Average Remove Time return get Stat Long Override Managed Attribute description Cluster wide average number milliseconds write operation cache display Name Cluster wide average write time units Units display Type Display Type public long get Average Write Time return get Stat Long Managed Attribute description Cluster wide total number cache eviction operations display Name Cluster wide total number cache evictions measurement Type Measurement Type display Type Display Type Override public long get Evictions return get Stat Long Managed Attribute description Cluster wide total number cache attribute hits display Name Cluster wide total number cache hits measurement Type Measurement Type display Type Display Type Override public long get Hits return get Stat Long Managed Attribute description Cluster wide total percentage hit hit miss ratio cache display Name Cluster wide total hit ratio units Units display Type Display Type Override public double get Hit Ratio Statistics Enabled fetch Cluster Wide Stats Needed return hit Ratio else return Override Managed Attribute description Cluster wide total number cache attribute misses display Name Cluster wide total number cache misses measurement Type Measurement Type display Type Display Type public long get Misses return get Stat Long Managed Attribute description Cluster wide total number entries currently cache including passivated entries display Name Cluster wide total number current cache entries display Type Display Type public int get Number Entries return get Stat Int Override Managed Attribute description Cluster wide total number entries currently stored memory display Name Cluster wide total number memory cache entries display Type Display Type public int get Current Number Entries Memory return get Stat Int Managed Attribute description Cluster wide read writes ratio cache display Name Cluster wide read write ratio units Units display Type Display Type Override public double get Read Write Ratio Statistics Enabled fetch Cluster Wide Stats Needed return read Write Ratio else return Managed Attribute description Cluster wide total number cache removal hits display Name Cluster wide total number cache removal hits measurement Type Measurement Type display Type Display Type Override public long get Remove Hits return get Stat Long Managed Attribute description Cluster wide total number cache removals keys found display Name Cluster wide total number cache removal misses measurement Type Measurement Type display Type Display Type Override public long get Remove Misses return get Stat Long Managed Attribute description Cluster wide total number cache attribute put operations display Name Cluster wide total number cache puts measurement Type Measurement Type display Type Display Type Override public long get Stores return get Stat Long Managed Attribute description Number seconds since first cache node started display Name Number seconds since first cache node started measurement Type Measurement Type display Type Display Type Override public long get Time Since Start return get Stat Long Override public int get Current Number Entries return get Number Entries Override public long get Total Number Entries return get Stores Override Managed Attribute description Amount bytes heap memory used across cluster cache display Name Cluster wide sheap memory used display Type Display Type public long get Heap Memory Used return get Stat Long Override public long get Retrievals return get Hits get Misses Override public void reset super reset read Write Ratio hit Ratio Managed Attribute description Total number exclusive locks available cluster display Name Cluster wide total number locks measurement Type Measurement Type display Type Display Type Override public int get Number Locks Available return get Stat Int Managed Attribute description Total number locks held cluster display Name Cluster wide total number locks held measurement Type Measurement Type display Type Display Type Override public int get Number Locks Held return get Stat Int Override Managed Attribute description total number invalidations cluster display Name Cluster wide total number invalidations measurement Type Measurement Type display Type Display Type public long get Invalidations return get Stat Long Managed Attribute description total number activations cluster display Name Cluster wide total number activations measurement Type Measurement Type display Type Display Type Override public long get Activations return get Stat Long Managed Attribute description total number passivations cluster display Name Cluster wide total number passivations measurement Type Measurement Type display Type Display Type Override public long get Passivations return get Stat Long Managed Attribute description total number cacheloader load operations cluster display Name Cluster wide total number cacheloader loads measurement Type Measurement Type display Type Display Type Override public long get Cache Loader Loads return get Stat Long Managed Attribute description total number cacheloader load misses cluster display Name Cluster wide total number cacheloader misses measurement Type Measurement Type display Type Display Type Override public long get Cache Loader Misses return get Stat Long Managed Attribute description total number cachestore store operations cluster display Name Cluster wide total number cachestore stores measurement Type Measurement Type display Type Display Type Override public long get Store Writes return get Stat Long private void update Time Since Start List Map String Number response List long time Since Start Max Map String Number response List Number time Since Start get time Since Start long Value time Since Start Max time Since Start Max time Since Start long Value stats Map put time Since Start Max private void update Ratios List Map String Number response List long total Hits long total Retrievals long sum Reads long sum Writes Map String Number response List long hits get long Value long misses get long Value total Hits hits sum Reads total Hits misses sum Writes get long Value total Retrievals hits misses hit Ratio total Retrievals double total Hits total Retrievals read Write Ratio sum Writes double sum Reads sum Writes private static extends Async Interceptor get First Interceptor Extends Advanced Cache cache Class interceptor Class return interceptor Class cast cache get Async Interceptor Chain find Interceptor Extending interceptor Class private static Cache Mode get Cache Mode Cache cache return cache get Cache Configuration clustering cache Mode private static class Distributed Cache Stats Callable implements Distributed Callable Object Object Map String Number Serializable private static final long serial Version private transient Advanced Cache Object Object remote Cache Override public Map String Number call throws Exception Map String Number map new Hash Map Stats stats remote Cache get Stats map put stats get Average Read Time map put stats get Average Write Time map put stats get Average Remove Time map put stats get Evictions map put stats get Hits map put stats get Misses get Cache Mode remote Cache Replicated double number Entries Memory stats get Current Number Entries Memory number Entries Memory remote Cache get Cache Configuration clustering hash num Owners map put number Entries Memory map put stats get Heap Memory Used map put stats get Stores map put stats get Remove Hits map put stats get Remove Misses map put stats get Time Since Start Lock Manager lock Manager remote Cache get Lock Manager map put lock Manager get Number Locks Held number locks available exposed Lock Manager interface map put invalidations Invalidation Interceptor invalidation Interceptor get First Interceptor Extends remote Cache Invalidation Interceptor class invalidation Interceptor null map put invalidation Interceptor get Invalidations else map put passivations Passivation Manager p Manager remote Cache get Component Registry get Component Passivation Manager class p Manager null map put p Manager get Passivations else map put activations Activation Manager Manager remote Cache get Component Registry get Component Activation Manager class Manager null map put Manager get Activation Count else map put cache loaders Cache Loader Interceptor Interceptor get First Interceptor Extends remote Cache Cache Loader Interceptor class Interceptor null map put Interceptor get Cache Loader Loads map put Interceptor get Cache Loader Misses else map put map put cache store Cache Writer Interceptor interceptor get First Interceptor Extends remote Cache Cache Writer Interceptor class interceptor null map put interceptor get Writes Stores else map put return map Override public void set Environment Cache Object Object cache Set Object input Keys remote Cache cache get Advanced Cache
package org topology import static org util logging Log Factory import java util Array List import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Optional import java util Set import org Advanced Cache import org commons Cache Exception import org commons util Immutables import org conflict Conflict Manager Factory import org conflict impl Default Conflict Manager import org distribution ch Consistent Hash import org distribution ch Consistent Hash Factory import org globalstate Scoped Persistent State import org lifecycle Component Status import org manager Embedded Cache Manager import org partitionhandling Availability Mode import org partitionhandling impl Availability Strategy import org partitionhandling impl Availability Strategy Context import org remoting transport Address import org remoting transport Transport import org statetransfer Rebalance Type import org util logging Log import org util logging Log Factory import net jcip annotations Guarded Keeps track cache status members current pending consistent hashes rebalance status author Dan Berindei since public class Cluster Cache Status implements Availability Strategy Context Hot Rod client starts topology start force update public static final int public static final int private static final Log log Log Factory get Log Cluster Cache Status class private static boolean trace log Trace Enabled private final Embedded Cache Manager cache Manager private final String cache Name private final Availability Strategy availability Strategy private final Cluster Topology Manager cluster Topology Manager private final Persistent Manager persistent Manager private final boolean resolve Conflicts Merge private final Rebalance Type rebalance Type private Transport transport private int initial Topology Id Minimal cache clustering configuration private volatile Cache Join Info join Info Cache members may received state yet private volatile List Address expected Members Capacity factors members private volatile Map Address Float capacity Factors Cache members yet received state Always included members list private volatile List Address joiners Persistent state exists private Optional Scoped Persistent State persistent State Cache topology consistent hashes contain members receive receiving state members consistent hashes must included members list private volatile Cache Topology current Topology private volatile Cache Topology stable Topology private volatile Availability Mode availability Mode Availability Mode private volatile List Address queued Rebalance Members private volatile boolean rebalancing Enabled true private volatile boolean rebalance Progress false private Rebalance Confirmation Collector rebalance Confirmation Collector private Component Status status public Cluster Cache Status Embedded Cache Manager cache Manager String cache Name Availability Strategy availability Strategy Rebalance Type rebalance Type Cluster Topology Manager cluster Topology Manager Transport transport Optional Scoped Persistent State state Persistent Manager persistent Manager boolean resolve Conflicts Merge cache Manager cache Manager cache Name cache Name availability Strategy availability Strategy cluster Topology Manager cluster Topology Manager transport transport persistent State state resolve Conflicts Merge resolve Conflicts Merge rebalance Type rebalance Type current Topology null stable Topology null expected Members Collections empty List capacity Factors Collections empty Map joiners Collections empty List persistent Manager persistent Manager state Present scoped Persistent State rebalancing Enabled false availability Mode Availability Mode status Component Status trace log tracef Cache initialized Persisted state cache Name persistent State Present public Cache Join Info get Join Info return join Info Override public List Address get Expected Members return expected Members Override public synchronized void queue Rebalance List Address new Members new Members null new Members Empty log debugf Queueing rebalance cache members cache Name new Members queued Rebalance Members new Members start Queued Rebalance public boolean Total Order return join Info Total Order public boolean Distributed return join Info get Cache Mode Distributed public Map Address Float get Capacity Factors return capacity Factors Override public Cache Topology get Current Topology return current Topology Override public Cache Topology get Stable Topology return stable Topology Override public Availability Mode get Availability Mode return availability Mode Override public synchronized void update Availability Mode List Address actual Members Availability Mode new Availability Mode boolean cancel Rebalance boolean mode Changed set Availability Mode new Availability Mode mode Changed actual Members equals current Topology get Actual Members log debugf Updating availability cache cache Name new Availability Mode Consistent Hash new Pending current Topology get Pending Cache Topology Phase new Phase current Topology get Phase cancel Rebalance new Pending null new Phase Cache Topology Phase rebalance Confirmation Collector null Cache Topology new Topology new Cache Topology current Topology get Topology Id current Topology get Rebalance Id current Topology get Current new Pending new Phase actual Members persistent Manager map Addresses actual Members set Current Topology new Topology cluster Topology Manager broadcast Topology Update cache Name new Topology new Availability Mode Total Order Distributed Override public synchronized void update Topologies Merge Cache Topology current Topology Cache Topology stable Topology Availability Mode availability Mode boolean resolve Conflicts log debugf Updating topologies merge cache current topology stable topology availability mode resolve Conflicts cache Name current Topology stable Topology availability Mode resolve Conflicts current Topology current Topology stable Topology stable Topology availability Mode availability Mode current Topology null cluster Topology Manager broadcast Topology Update cache Name current Topology availability Mode Total Order Distributed resolve Conflicts Merge resolve Conflicts Advanced Cache cache cache Manager get Cache cache Name get Advanced Cache Default Conflict Manager conflict Manager Default Conflict Manager Conflict Manager Factory get cache conflict Manager resolve Conflicts current Topology stable Topology null cluster Topology Manager broadcast Stable Topology Update cache Name stable Topology Total Order Distributed return code true joiner already member code false otherwise Guarded private boolean add Member Address joiner Cache Join Info join Info expected Members contains joiner return false Validate member allowed join persistent State Present join Info get Persistent State Checksum Present status Component Status throw log node Without Persistent State Joining Cache State joiner cache Name else persistent State get get Checksum join Info get Persistent State Checksum get throw log node Incompatible State Joining Cache joiner cache Name else join Info get Persistent State Checksum Present throw log node Persistent State Joining Cluster Without State joiner cache Name join Info null join Info join Info Hash Map Address Float new Capacity Factors new Hash Map Address Float capacity Factors new Capacity Factors put joiner join Info get Capacity Factor capacity Factors Immutables immutable Map Wrap new Capacity Factors expected Members immutable Add expected Members joiner persistent Manager add Persistent Address Mapping joiner join Info get Persistent joiners immutable Add joiners joiner trace log tracef Added joiner cache persistent uuid members joiners joiner cache Name join Info get Persistent expected Members joiners return true return code true leaver member code false otherwise Guarded private boolean remove Member Address leaver expected Members contains leaver trace log tracef Trying remove node cache member members leaver cache Name expected Members return false expected Members immutable Remove expected Members leaver Hash Map Address Float new Capacity Factors new Hash Map Address Float capacity Factors new Capacity Factors remove leaver capacity Factors Immutables immutable Map Wrap new Capacity Factors joiners immutable Remove joiners leaver trace log tracef Removed node cache members joiners leaver cache Name expected Members joiners return true return code true members list changed code false otherwise Guarded private boolean retain Members List Address new Cluster Members new Cluster Members contains expected Members trace log tracef Cluster members updated cache abrupt leavers detected cache members Existing members cache Name new Cluster Members expected Members return false expected Members immutable Retain expected Members new Cluster Members joiners immutable Retain joiners new Cluster Members trace log tracef Cluster members updated cache members joiners cache Name expected Members joiners return true Guarded private void set Current Topology Cache Topology new Topology current Topology new Topology update joiners list new Topology null joiners immutable Remove expected Members new Topology get Current get Members trace log tracef Cache topology updated members joiners cache Name current Topology expected Members joiners new Topology null new Topology log Routing Table Information Guarded private void set Stable Topology Cache Topology new Topology stable Topology new Topology trace log tracef Cache stable topology updated members joiners topology cache Name expected Members joiners new Topology private boolean need Consistent Hash Update list current members always included list pending members need check one list Also returns false Hs null return expected Members equals current Topology get Members private List Address prune Invalid Members List Address possible Members return immutable Retain possible Members expected Members public boolean Rebalance Progress return rebalance Confirmation Collector null public Rebalancing Status get Rebalancing Status Rebalance Enabled return Rebalancing Status else rebalance Progress return Rebalancing Status else queued Rebalance Members null return Rebalancing Status else return Rebalancing Status public synchronized void confirm Rebalance Phase Address member int received Topology Id throws Exception rebalance Confirmation Collector null throw new Cache Exception String format Received invalid rebalance confirmation cache n rebalance progress member cache Name rebalance Confirmation Collector confirm Phase member received Topology Id called members list updated way link remove Member Address link retain Members etc return code true rebalance confirmed update code false confirmations needed rebalance already confirmed another way e g last member confirmed Guarded private void update Members rebalance Confirmation Collector null rely Availability Strategy updating current topology beforehand rebalance Confirmation Collector update Members current Topology get Members public synchronized void Handle Cluster View throws Exception Clean Cluster Cache Status instances longer members current Topology null return List Address new Cluster Members transport get Members boolean cache Members Modified retain Members new Cluster Members availability Strategy Cluster View Change new Cluster Members cache Members Modified update Members Guarded called Handle Cluster View Leave confirm Rebalance Phase private void end Rebalance Cache Topology new Topology rebalance Progress false Cache Topology current Topology get Current Topology current Topology null log tracef Rebalance finished members cache cache Name return assert current Topology get Phase Rebalance int current Topology Id current Topology get Topology Id cluster Wide Rebalance Completed cache Name current Topology Id List Address members current Topology get Members switch rebalance Type case new Topology new Cache Topology current Topology Id current Topology get Rebalance Id current Topology get Current current Topology get Pending Cache Topology Phase members persistent Manager map Addresses members break case new Topology new Cache Topology current Topology Id current Topology get Rebalance Id current Topology get Pending null Cache Topology Phase members persistent Manager map Addresses members break default throw new Illegal State Exception set Current Topology new Topology new Topology get Phase Cache Topology Phase rebalance Confirmation Collector new Rebalance Confirmation Collector cache Name current Topology Id members end Read Phase else rebalance Confirmation Collector null availability Strategy Rebalance End members cluster Topology Manager broadcast Topology Update cache Name new Topology availability Mode Total Order Distributed new Topology get Phase Cache Topology Phase start Queued Rebalance Guarded called Handle Cluster View Leave confirm Rebalance Phase private void end Read Phase Cache Topology new Topology Cache Topology current Topology get Current Topology assert current Topology null happen assert current Topology get Phase Cache Topology Phase List Address members current Topology get Members new Topology new Cache Topology current Topology get Topology Id current Topology get Rebalance Id current Topology get Current current Topology get Pending Cache Topology Phase members persistent Manager map Addresses members set Current Topology new Topology rebalance Confirmation Collector new Rebalance Confirmation Collector cache Name current Topology get Topology Id members end Read New Phase members cluster Topology Manager broadcast Topology Update cache Name new Topology availability Mode Total Order Distributed Guarded called Handle Cluster View Leave confirm Rebalance Phase private void end Read New Phase Cache Topology new Topology Cache Topology current Topology get Current Topology assert current Topology null assert current Topology get Phase Cache Topology Phase List Address members current Topology get Members new Topology new Cache Topology current Topology get Topology Id current Topology get Rebalance Id current Topology get Pending null Cache Topology Phase members persistent Manager map Addresses members set Current Topology new Topology rebalance Confirmation Collector null cluster Topology Manager broadcast Topology Update cache Name new Topology availability Mode Total Order Distributed start Queued Rebalance new Members n really used prune Invalid Members uses expected Members Override public synchronized void update Current Topology List Address new Members current topology might null joiner became coordinator current Topology null create Initial Cache Topology Consistent Hash Factory Consistent Hash consistent Hash Factory get Join Info get Consistent Hash Factory int topology Id current Topology get Topology Id int rebalance Id current Topology get Rebalance Id Consistent Hash current current Topology get Current Consistent Hash pending current Topology get Pending need Consistent Hash Update log tracef Cache members list updated cache topology n need change cache Name current Topology return new Members Empty log tracef Cache longer members removing topology cache Name set Current Topology null set Stable Topology null rebalance Confirmation Collector null Remove cache cache status map Cluster Topology Manager Impl instead return List Address new Current Members prune Invalid Members current get Members Consistent Hash new Current new Pending null Cache Topology Phase new Phase Cache Topology Phase List Address actual Members new Current Members Empty current members left try replace joiners log tracef current members left initializing status cache cache Name rebalance Confirmation Collector null new Current Members get Expected Members actual Members new Current Members new Current join Info get Consistent Hash Factory create join Info get Hash Function join Info get Num Owners join Info get Num Segments new Current Members get Capacity Factors else Replicated Consistent Hash Factory allocates segments members ca n add members new Current consistent Hash Factory update Members current new Current Members get Capacity Factors actual Members new Current Members pending null new Phase current Topology get Phase new Pending consistent Hash Factory update Members pending new Current Members get Capacity Factors actual Members prune Invalid Members pending get Members Losing members state transfer could lead state two topologies concurrently cluster need make sure topologies compatible properties set Cache Topology docs hold remove lost members Cache Topology new Topology new Cache Topology topology Id rebalance Id new Current new Pending new Phase actual Members persistent Manager map Addresses actual Members set Current Topology new Topology rebalance Confirmation Collector null node cancel state transfer another topology update wo n send topology confirm log debugf Cancelling topology confirmation another topology update rebalance Confirmation Collector rebalance Confirmation Collector null cluster Topology Manager broadcast Topology Update cache Name new Topology availability Mode Total Order Distributed private boolean set Availability Mode Availability Mode new Availability Mode new Availability Mode availability Mode return false log tracef Cache availability changed cache Name availability Mode new Availability Mode availability Mode new Availability Mode return true Helpers working immutable lists private List immutable Add List list element List result new Array List list result add element return Collections unmodifiable List result private List immutable Remove List list element List result new Array List list result remove element return Collections unmodifiable List result private List immutable Remove List list List List List result new Array List list result remove List return Collections unmodifiable List result private List immutable Retain List list List List List result new Array List list result retain List return Collections unmodifiable List result Override public String String return Cluster Cache Status cache Name cache Name members expected Members joiners joiners current Topology current Topology rebalance Confirmation Collector rebalance Confirmation Collector public synchronized void Merge Partitions Map Address Cache Status Response status Responses try status Responses Empty throw new Illegal Argument Exception least one current topology Hash Map Address Cache Join Info join Infos new Hash Map Set Cache Topology current Topologies new Hash Set Set Cache Topology stable Topologies new Hash Set Map Entry Address Cache Status Response e status Responses entry Set Address sender e get Key Cache Status Response response e get Value join Infos put sender response get Cache Join Info response get Cache Topology null current Topologies add response get Cache Topology response get Stable Topology null stable Topologies add response get Stable Topology log debugf Recovered partition cache current Topologies size cache Name current Topologies recover Members join Infos current Topologies stable Topologies automatically detect coordinator left one partition continue progress rebalance without resetting cache topology availability Strategy Partition Merge status Responses catch Exception e log failed Recover Cache State cache Name e Guarded private void recover Members Map Address Cache Join Info join Infos Collection Cache Topology current Topologies Collection Cache Topology stable Topologies expected Members Collections empty List Try preserve member order least first partition Cache Topology topology stable Topologies add Members topology get Members join Infos Cache Topology topology current Topologies add Members topology get Members join Infos Add joiners part topology end Map Entry Address Cache Join Info e join Infos entry Set expected Members contains e get Key add Member e get Key e get Value Guarded private void add Members Collection Address members Add Map Address Cache Join Info join Infos Address member members Add expected Members contains member Cache Join Info join Info join Infos get member members stable current topology may members join Info null add Member member join Info Override public String get Cache Name return cache Name public synchronized Cache Status Response Join Address joiner Cache Join Info join Info throws Exception boolean First Member get Current Topology null boolean member Joined add Member joiner join Info First Member member Joined trace log tracef Trying add node cache already member members joiners joiner cache Name expected Members joiners return new Cache Status Response null current Topology stable Topology availability Mode status Component Status persistent State Present trace log tracef Node joining Attempting reform previous cluster joiner allow proceed complete cluster Cache Topology topology restore Cache Topology persistent State get topology null Change status status Component Status cluster Topology Manager broadcast Topology Update cache Name topology availability Mode Total Order Distributed cluster Topology Manager broadcast Stable Topology Update cache Name topology Total Order Distributed return new Cache Status Response null current Topology stable Topology availability Mode else First Member node first join need install initial Cache Topology initial Topology create Initial Cache Topology Change status status Component Status n need broadcast initial update return cache topology joiner need broadcast initial topology stable topology cluster Topology Manager broadcast Stable Topology Update cache Name initial Topology Total Order Distributed Cache Topology topology Rebalance get Current Topology trigger availability strategy topology installed topology Rebalance null availability Strategy Join joiner return new Cache Status Response null topology Rebalance stable Topology availability Mode Guarded protected Cache Topology restore Cache Topology Scoped Persistent State state trace log tracef Attempting restore cache cache Name Consistent Hash persisted join Info get Consistent Hash Factory Persistent State state remap Addresses persistent Manager persistent Address persisted null get Expected Members contains persisted get Members trace log tracef Could restore cache one addresses missing cache Name return null get Expected Members size persisted get Members size List Address extraneous Members new Array List get Expected Members extraneous Members remove persisted get Members throw log extraneous Members Join Restored Cache extraneous Members cache Name Cache Topology initial Topology new Cache Topology initial Topology Id persisted null Cache Topology Phase persisted get Members persistent Manager map Addresses persisted get Members set Current Topology initial Topology set Stable Topology initial Topology rebalancing Enabled true availability Mode Availability Mode return initial Topology Guarded protected Cache Topology create Initial Cache Topology log tracef Initializing status cache cache Name List Address initial Members get Expected Members Consistent Hash initial join Info get Consistent Hash Factory create join Info get Hash Function join Info get Num Owners join Info get Num Segments initial Members get Capacity Factors Cache Topology initial Topology new Cache Topology initial Topology Id initial null Cache Topology Phase initial Members persistent Manager map Addresses initial Members set Current Topology initial Topology set Stable Topology initial Topology return initial Topology public synchronized boolean Leave Address leaver throws Exception current Topology null return false boolean actual Leaver remove Member leaver actual Leaver return false availability Strategy Graceful Leave leaver update Members return expected Members Empty public synchronized void start Queued Rebalance queued Rebalance Members null n queued rebalance may need broadcast stable topology update stable Topology null stable Topology get Topology Id current Topology get Topology Id stable Topology current Topology log tracef Updating stable topology cache cache Name stable Topology cluster Topology Manager broadcast Stable Topology Update cache Name stable Topology Total Order Distributed return Cache Topology cache Topology get Current Topology Rebalance Enabled log tracef Postponing rebalance cache rebalancing disabled cache Name return rebalance Confirmation Collector null log tracef Postponing rebalance cache already topology change progress cache Name rebalance Confirmation Collector return queued Rebalance Members Empty log tracef Ignoring request rebalance cache n member cache Name return List Address new Members new Array List Address queued Rebalance Members queued Rebalance Members null log tracef Rebalancing consistent hash cache members cache Name new Members cache Topology null create Initial Cache Topology return int new Topology Id cache Topology get Topology Id int new Rebalance Id cache Topology get Rebalance Id Consistent Hash current cache Topology get Current current null one node cache left rebalance triggered rebalance actually started log tracef Ignoring request rebalance cache n consistent hash cache Name return expected Members contains new Members new Members remove expected Members log tracef Ignoring request rebalance cache new leavers cache Name new Members return Consistent Hash Factory ch Factory get Join Info get Consistent Hash Factory update add joiners already checked n leavers Consistent Hash updated Members ch Factory update Members current new Members get Capacity Factors Consistent Hash balanced ch Factory rebalance updated Members boolean update Topology false boolean rebalance false rebalance Type Rebalance Type update Topology true else balanced equals current log tracef balanced current rebalancing update Topology cache Topology get Pending null else rebalance true update Topology Cache Topology new Topology new Cache Topology new Topology Id cache Topology get Rebalance Id balanced null Cache Topology Phase balanced get Members persistent Manager map Addresses balanced get Members log tracef Updating cache topology without rebalance cache Name new Topology set Current Topology new Topology cluster Topology Manager broadcast Topology Update cache Name new Topology get Availability Mode Total Order Distributed else rebalance Cache Topology Phase new Phase switch rebalance Type case new Phase Cache Topology Phase break case new Phase Cache Topology Phase break default throw new Illegal State Exception Cache Topology new Topology new Cache Topology new Topology Id new Rebalance Id current balanced new Phase balanced get Members persistent Manager map Addresses balanced get Members log tracef Updating cache topology rebalance cache Name new Topology set Current Topology new Topology rebalance Progress true assert rebalance Confirmation Collector null rebalance Confirmation Collector new Rebalance Confirmation Collector cache Name new Topology get Topology Id new Topology get Members end Rebalance cluster Topology Manager broadcast Rebalance Start cache Name new Topology Total Order Distributed public boolean Rebalance Enabled return rebalancing Enabled cluster Topology Manager Rebalancing Enabled public synchronized void set Rebalance Enabled boolean enabled rebalancing Enabled enabled rebalancing Enabled log debugf Rebalancing enabled cache cache Name start Queued Rebalance else log debugf Rebalancing disabled cache cache Name public void force Rebalance queue Rebalance get Current Topology get Members start Queued Rebalance public void force Availability Mode Availability Mode new Availability Mode availability Strategy Manual Availability Change new Availability Mode public synchronized void shutdown Cache throws Exception status Component Status status Component Status cluster Topology Manager set Rebalancing Enabled cache Name false cluster Topology Manager broadcast Shutdown Cache cache Name get Current Topology Total Order Distributed status Component Status public synchronized void set Initial Topology Id int initial Topology Id initial Topology Id initial Topology Id
package org notifications cachelistener cluster import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import org Cache import org commons marshall Abstract Externalizer import org commons marshall Marshall Util import org marshall core Ids import org metadata Metadata import org notifications cachelistener event Cache Entry Created Event import org notifications cachelistener event Cache Entry Event import org notifications cachelistener event Cache Entry Expired Event import org notifications cachelistener event Cache Entry Modified Event import org notifications cachelistener event Cache Entry Removed Event import org notifications cachelistener event Transactional Event import org notifications cachelistener event impl Event Impl import org remoting transport Address import org transaction xa Global Transaction event designed use cluster listeners solely event serialized across wire sending event back node cluster listener registered create Cluster Event use link Cluster Event Event Cache Entry Event method author wburns since public class Cluster Event implements Cache Entry Created Event Cache Entry Removed Event Cache Entry Modified Event Cache Entry Expired Event transient Cache cache private final key private final value private final old Value private final Metadata metadata private final Type type private final Global Transaction transaction private final Address origin private final boolean command Retried public static Cluster Event Event Cache Entry Event event event instanceof Cluster Event return Cluster Event event old Value null Type event Type event get Type boolean command Retried switch event Type case old Value Cache Entry Removed Event event get Old Value command Retried Cache Entry Removed Event event Command Retried break case command Retried Cache Entry Created Event event Command Retried break case command Retried Cache Entry Modified Event event Command Retried break case Expired n retry command Retried false break default throw new Illegal Argument Exception Cluster Event created Cache Entry Removed Cache Entry Created Cache Entry Modified event Global Transaction transaction Transactional Event event get Global Transaction Metadata metadata null event instanceof Event Impl metadata Event Impl event get Metadata Cluster Event cluster Event new Cluster Event event get Key event get Value old Value metadata event Type event get Cache get Cache Manager get Address transaction command Retried cluster Event cache event get Cache return cluster Event Cluster Event key value old Value Metadata metadata Type type Address origin Global Transaction transaction boolean command Retried key key value value old Value old Value metadata metadata type type origin origin transaction transaction command Retried command Retried Override public get Value return value Override public Metadata get Metadata return metadata Override public boolean Command Retried return command Retried Override public get Old Value return old Value Override public boolean Created return type Type Override public get Key return key Override public Global Transaction get Global Transaction return transaction Override public boolean Origin Local cache null return cache get Cache Manager get Address equals origin return false Override public Type get Type return type Override public boolean Pre Cluster events always sent value updated return false Override public Cache get Cache return cache public static class Externalizer extends Abstract Externalizer Cluster Event Override public Set Class extends Cluster Event get Type Classes return Collections singleton Cluster Event class Override public void write Object Object Output output Cluster Event object throws Exception output write Object object key output write Object object value output write Object object old Value output write Object object metadata Marshall Util marshall Enum object type output output write Object object origin output write Object object transaction output write Boolean object command Retried Override public Cluster Event read Object Object Input input throws Exception Class Found Exception return new Cluster Event input read Object input read Object input read Object Metadata input read Object Marshall Util unmarshall Enum input Type value Address input read Object Global Transaction input read Object input read Boolean Override public Integer get Id return Ids Override public boolean equals Object return true null get Class get Class return false Cluster Event Cluster Event command Retried command Retried return false cache null cache equals cache cache null return false key null key equals key key null return false metadata null metadata equals metadata metadata null return false old Value null old Value equals old Value old Value null return false origin null origin equals origin origin null return false transaction null transaction equals transaction transaction null return false type type return false value null value equals value value null return false return true Override public int hash Code int result cache null cache hash Code result result key null key hash Code result result value null value hash Code result result old Value null old Value hash Code result result metadata null metadata hash Code result result type null type hash Code result result transaction null transaction hash Code result result origin null origin hash Code result result command Retried return result Override public String String return Cluster Event type type cache cache key key value value old Value old Value transaction transaction retry Command command Retried origin origin
package org notifications cachelistener cluster import java io Exception import java io Object Input import java io Object Output import java util Collection import java util Collections import java util Set import java util import org Cache import org commons marshall Abstract Externalizer import org distexec Distributed Callable import org marshall core Ids import org util logging Log import org util logging Log Factory Distributed Callable used invoke raised notification cluster listener registered listen event author wburns since public class Cluster Event Callable implements Distributed Callable Void private static final Log log Log Factory get Log Cluster Event Callable class private static final boolean trace log Trace Enabled private transient Cluster Cache Notifier cluster Cache Notifier private final identifier private final Collection extends Cluster Event events public Cluster Event Callable identifier Cluster Event event identifier Collections singleton event public Cluster Event Callable identifier Collection extends Cluster Event events identifier identifier events events Override public Void call throws Exception trace log tracef Received cluster event notifying cluster listener id events identifier cluster Cache Notifier notify Cluster Listeners events identifier return null Override public void set Environment Cache cache Set input Keys cluster Cache Notifier cache get Advanced Cache get Component Registry get Component Cluster Cache Notifier class Cluster Event event events event cache cache Override public String String final String Builder sb new String Builder Cluster Event Callable sb append identifier append identifier sb append events append events sb append return sb String public static class Externalizer extends Abstract Externalizer Cluster Event Callable Override public Set Class extends Cluster Event Callable get Type Classes return Collections singleton Cluster Event Callable class Override public void write Object Object Output output Cluster Event Callable object throws Exception output write Object object identifier output write Object object events Override public Cluster Event Callable read Object Object Input input throws Exception Class Found Exception return new Cluster Event Callable input read Object Collection extends Cluster Event input read Object Override public Integer get Id return Ids
package org configuration cache import java util concurrent Time Unit import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set Defines clustered characteristics cache author pmuir public class Clustering Configuration public static final Attribute Definition Cache Mode Attribute Definition builder cache Mode Cache Mode immutable build public static final Attribute Definition Long Attribute Definition builder remote Timeout Time Unit Millis build public static final Attribute Definition Integer Attribute Definition builder invalidation Batch Size immutable build static Attribute Set attribute Definition Set return new Attribute Set Clustering Configuration class private final Attribute Cache Mode cache Mode private final Hash Configuration hash Configuration private final Configuration l Configuration private final State Transfer Configuration state Transfer Configuration private final Sync Configuration sync Configuration private final Partition Handling Configuration partition Handling Configuration private final Attribute Set attributes Clustering Configuration Attribute Set attributes Hash Configuration hash Configuration Configuration l Configuration State Transfer Configuration state Transfer Configuration Sync Configuration sync Configuration Partition Handling Configuration partition Handling Strategy attributes attributes check Protection cache Mode attributes attribute hash Configuration hash Configuration l Configuration l Configuration state Transfer Configuration state Transfer Configuration sync Configuration sync Configuration partition Handling Configuration partition Handling Strategy Cache mode See link Cache Mode information various cache modes available public Cache Mode cache Mode return cache Mode get timeout used wait acknowledgment making remote call call aborted exception thrown public long remote Timeout return sync Configuration repl Timeout timeout used wait acknowledgment making remote call call aborted exception thrown public void remote Timeout long timeout Millis sync Configuration repl Timeout timeout Millis Configures cluster behaviour presence partitions node failures public Partition Handling Configuration partition Handling return partition Handling Configuration public String cache Mode String return cache Mode null none cache Mode String scattered cache threshold batched invalidations sent public int invalidation Batch Size return attributes attribute get Configure hash sub element public Hash Configuration hash return hash Configuration method allows configuration cache distributed caches method called automatically enables want disabled make sure call link org configuration cache Configuration Builder disable public Configuration l return l Configuration Configure sync sub element method invoked users subsequently invoke code async code two mutually exclusive deprecated Since code repl Timeout attribute link Clustering Configuration Deprecated public Sync Configuration sync return sync Configuration public State Transfer Configuration state Transfer return state Transfer Configuration public Attribute Set attributes return attributes Override public String String return Clustering Configuration hash Configuration hash Configuration l Configuration l Configuration state Transfer Configuration state Transfer Configuration sync Configuration sync Configuration partition Handling Configuration partition Handling Configuration attributes attributes Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Clustering Configuration Clustering Configuration obj attributes null attributes null return false else attributes equals attributes return false hash Configuration null hash Configuration null return false else hash Configuration equals hash Configuration return false l Configuration null l Configuration null return false else l Configuration equals l Configuration return false partition Handling Configuration null partition Handling Configuration null return false else partition Handling Configuration equals partition Handling Configuration return false state Transfer Configuration null state Transfer Configuration null return false else state Transfer Configuration equals state Transfer Configuration return false sync Configuration null sync Configuration null return false else sync Configuration equals sync Configuration return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code result prime result hash Configuration null hash Configuration hash Code result prime result l Configuration null l Configuration hash Code result prime result partition Handling Configuration null partition Handling Configuration hash Code result prime result state Transfer Configuration null state Transfer Configuration hash Code result prime result sync Configuration null sync Configuration hash Code return result
package org configuration cache import static org configuration cache Clustering Configuration import static org configuration cache Clustering Configuration import java util Arrays import java util concurrent Time Unit import org commons configuration Builder import org commons configuration attributes Attribute Set import org configuration global Global Configuration import org util logging Log import org util logging Log Factory Defines clustered characteristics cache author pmuir public class Clustering Configuration Builder extends Abstract Configuration Child Builder implements Clustering Configuration Child Builder Builder Clustering Configuration private static final Log log Log Factory get Log Clustering Configuration Builder class Log class private final Hash Configuration Builder hash Configuration Builder private final Configuration Builder l Configuration Builder private final State Transfer Configuration Builder state Transfer Configuration Builder private final Sync Configuration Builder sync Configuration Builder private final Partition Handling Configuration Builder partition Handling Configuration Builder private final Attribute Set attributes Clustering Configuration Builder Configuration Builder builder super builder attributes Clustering Configuration attribute Definition Set hash Configuration Builder new Hash Configuration Builder l Configuration Builder new Configuration Builder state Transfer Configuration Builder new State Transfer Configuration Builder sync Configuration Builder new Sync Configuration Builder partition Handling Configuration Builder new Partition Handling Configuration Builder Cache mode See link Cache Mode information various cache modes available public Clustering Configuration Builder cache Mode Cache Mode cache Mode attributes attribute set cache Mode return public Cache Mode cache Mode return attributes attribute get timeout used wait acknowledgment making remote call call aborted exception thrown public Clustering Configuration Builder remote Timeout long l sync Configuration Builder repl Timeout l return timeout used wait acknowledgment making remote call call aborted exception thrown public Clustering Configuration Builder remote Timeout long l Time Unit unit return remote Timeout unit Millis l scattered cache threshold batched invalidations sent public Clustering Configuration Builder invalidation Batch Size int size attributes attribute set size return Configure hash sub element Override public Hash Configuration Builder hash return hash Configuration Builder method allows configuration cache distributed caches explicitly enabled calling link Configuration Builder enable Override public Configuration Builder l return l Configuration Builder Configure code state Transfer sub element distributed replicated caches n effect mode caches Override public State Transfer Configuration Builder state Transfer return state Transfer Configuration Builder Override public Sync Configuration Builder sync cache Mode Synchronous throw log sync Properties Config Async Cache return sync Configuration Builder Override public Partition Handling Configuration Builder partition Handling return partition Handling Configuration Builder Override public void validate Builder validatable Arrays List hash Configuration Builder l Configuration Builder sync Configuration Builder state Transfer Configuration Builder partition Handling Configuration Builder validatable validate cache Mode Scattered hash num Owners hash Num Owners Set throw log scattered Cache Needs Single Owner hash num Owners org transaction Transaction Mode transaction Mode transaction transaction Mode transaction Mode null transaction Mode Transactional throw log scattered Cache Non Transactional cache Mode Scattered attributes attribute Modified throw log invalidation Batch Size Applies Non Scattered Override public void validate Global Configuration global Config cache Mode Clustered global Config transport transport null throw log missing Transport Configuration Configuration Child Builder validatable Arrays List hash Configuration Builder l Configuration Builder sync Configuration Builder state Transfer Configuration Builder partition Handling Configuration Builder validatable validate global Config Override public Clustering Configuration create return new Clustering Configuration attributes protect hash Configuration Builder create l Configuration Builder create state Transfer Configuration Builder create sync Configuration Builder create partition Handling Configuration Builder create Override public Clustering Configuration Builder read Clustering Configuration template attributes read template attributes hash Configuration Builder read template hash l Configuration Builder read template l state Transfer Configuration Builder read template state Transfer sync Configuration Builder read template sync partition Handling Configuration Builder read template partition Handling return Override public String String return Clustering Configuration Builder hash Configuration Builder hash Configuration Builder l Configuration Builder l Configuration Builder state Transfer Configuration Builder state Transfer Configuration Builder sync Configuration Builder sync Configuration Builder partition Handling Configuration Builder partition Handling Configuration Builder attributes attributes
package org interceptors locking import static org transaction impl Write Skew Helper perform Total Order Write Skew Check Return New Versions import static org transaction impl Write Skew Helper perform Write Skew Check Return New Versions import java util Array List import java util Collection import java util Collections import java util List import org commands Flag Affected Command import org commands tx Versioned Prepare Command import org commands tx totalorder Total Order Prepare Command import org commands write Clear Command import org commands write Write Command import org configuration cache Cache Mode import org configuration cache Configuration import org container Data Container import org container entries Cache Entry import org container entries Clear Cache Entry import org container entries Internal Cache Entry import org container entries Entry import org container versioning Entry Versions Map import org container versioning Version Generator import org context Flag import org context Invocation Context import org context impl Flag Bit Sets import org context impl Tx Invocation Context import org distribution Distribution Manager import org distribution Localized Cache Topology import org factories annotations Inject import org factories scopes Scope import org factories scopes Scopes import org functional impl Functional Notifier import org metadata Metadata import org metadata impl Metadata import org notifications cachelistener Cache Notifier import org notifications cachelistener Notify Helper import org persistence manager Persistence Manager import org remoting transport Address import org remoting transport Local Mode Address import org remoting transport Transport import org statetransfer Commit Manager import org statetransfer State Transfer Lock import org transaction impl Write Skew Helper import org transaction xa Cache Transaction import org util Time Service Abstractization logic related different clustering modes replicated distributed implements href http en wikipedia org wiki Bridge pattern Bridge pattern described Go plays role b Implementor b various Locking Interceptors b Abstraction b author Mircea Markus author Pedro Ruivo Scope Scopes public interface Clustering Dependent Logic enum Commit commit entry false false Commit entry node owner therefore listeners fired true false Commit entry owner true true private boolean commit private boolean local Commit boolean commit boolean local commit commit local local public boolean Commit return commit public boolean Local return local return information location keys Localized Cache Topology get Cache Topology deprecated Since please use code get Cache Topology Write Owner key instead Deprecated default boolean local Node Owner Object key return get Cache Topology Write Owner key deprecated Since please use code get Cache Topology get Distribution key Primary instead Deprecated default boolean local Node Primary Owner Object key return get Cache Topology get Distribution key Primary deprecated Since please use code get Cache Topology get Distribution Info key primary instead Deprecated default Address get Primary Owner Object key return get Cache Topology get Distribution key primary void commit Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation Commit commit Type Flag Affected Command command Invocation Context ctx Object key boolean removed deprecated Since please use code get Cache Topology get Write Owners keys instead Deprecated default Collection Address get Owners Collection Object keys return get Cache Topology get Write Owners keys deprecated Since please use code get Cache Topology get Write Owners key instead Deprecated default Collection Address get Owners Object key return get Cache Topology get Write Owners key Entry Versions Map create New Versions Check Write Skews Version Generator version Generator Tx Invocation Context context Versioned Prepare Command prepare Command Address get Address abstract class Abstract Clustering Dependent Logic implements Clustering Dependent Logic protected Distribution Manager distribution Manager protected Data Container Object Object data Container protected Cache Notifier Object Object notifier protected boolean total Order private Write Skew Helper Key Specific Logic key Specific Logic protected Commit Manager commit Manager protected Persistence Manager persistence Manager protected Time Service time Service protected Functional Notifier Object Object functional Notifier Inject public void init Data Container Object Object data Container Cache Notifier Object Object notifier Configuration configuration Commit Manager commit Manager Persistence Manager persistence Manager Time Service time Service Functional Notifier Object Object functional Notifier Distribution Manager distribution Manager data Container data Container notifier notifier total Order configuration transaction transaction Protocol Total Order distribution Manager distribution Manager key Specific Logic init Key Specific Logic total Order commit Manager commit Manager persistence Manager persistence Manager time Service time Service functional Notifier functional Notifier Override public Entry Versions Map create New Versions Check Write Skews Version Generator version Generator Tx Invocation Context context Versioned Prepare Command prepare Command return total Order total Order Create New Versions Check Write Skews version Generator context prepare Command clustered Create New Versions Check Write Skews version Generator context prepare Command Override public final void commit Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation entry instanceof Clear Cache Entry noinspection unchecked commit Clear Command data Container Clear Cache Entry Object Object entry ctx command else commit Single Entry entry command ctx track Flag l Invalidation private void commit Clear Command Data Container Object Object data Container Clear Cache Entry Object Object cache Entry Invocation Context context Flag Affected Command command List Internal Cache Entry Object Object copy Entries new Array List data Container size Including Expired data Container iterator Remaining copy Entries add cache Entry commit data Container Internal Cache Entry entry copy Entries notifier notify Cache Entry Removed entry get Key entry get Value entry get Metadata false context command protected abstract void commit Single Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation Override public Commit commit Type Flag Affected Command command Invocation Context ctx Object key boolean removed ignore locality removals even skip Ownership Check true command null command Flag Flag Bit Sets return Commit boolean transactional ctx Tx Scope command null command Flag Flag Bit Sets command local mode get written replicating origin primary backup origin backup written right original context Clear Command also broadcast nodes originator originator remove entries node backup owner even though get removal primary owner transactional ctx Origin Local command null command Flag Flag Bit Sets command instanceof Clear Command entries whose ownership lost invalidated Invalidate Command point longer owners information origin local entry removed get Cache Topology Write Owner key return Commit else removed return Commit else non tx mode backup n commit original context backup command context return get Cache Topology get Distribution key Primary Commit Commit return Commit protected abstract Write Skew Helper Key Specific Logic init Key Specific Logic boolean total Order private Entry Versions Map total Order Create New Versions Check Write Skews Version Generator version Generator Tx Invocation Context context Versioned Prepare Command prepare Command context Origin Local throw new Illegal State Exception must reached Entry Versions Map updated Version Map new Entry Versions Map Total Order Prepare Command prepare Command skip Write Skew Check updated Version Map perform Total Order Write Skew Check Return New Versions prepare Command data Container persistence Manager version Generator context key Specific Logic time Service Write Command c prepare Command get Modifications Object k c get Affected Keys key Specific Logic perform Check Key k updated Version Map contains Key k updated Version Map put k null context get Cache Transaction set Updated Entry Versions updated Version Map return updated Version Map private Entry Versions Map clustered Create New Versions Check Write Skews Version Generator version Generator Tx Invocation Context context Versioned Prepare Command prepare Command Perform write skew check mapped entries Entry Versions Map uv perform Write Skew Check Return New Versions prepare Command data Container persistence Manager version Generator context key Specific Logic time Service Cache Transaction cache Transaction context get Cache Transaction Entry Versions Map uv Old cache Transaction get Updated Entry Versions uv Old null uv Old Empty uv Old put uv uv uv Old cache Transaction set Updated Entry Versions uv return uv Empty null uv Override public Localized Cache Topology get Cache Topology return distribution Manager get Cache Topology Override public Address get Address return get Cache Topology get Local Address logic used local mode caches class Local Logic extends Abstract Clustering Dependent Logic private Localized Cache Topology local Topology Inject public void init Transport transport Address address transport null transport get Address Local Mode Address local Topology Localized Cache Topology make Singleton Topology Cache Mode address Override public Localized Cache Topology get Cache Topology return local Topology Override public Address get Address return local Topology get Local Address Override protected void commit Single Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation Cache flags reset reset done notification instead boolean created entry Created boolean removed entry Removed boolean expired removed entry instanceof Entry expired Entry entry Expired else expired false Internal Cache Entry previous Entry data Container peek entry get Key Object previous Value null Metadata previous Metadata null previous Entry null previous Value previous Entry get Value previous Metadata previous Entry get Metadata commit Manager commit entry track Flag l Invalidation ctx Notify events necessary Notify Helper entry Committed notifier functional Notifier created removed expired entry ctx command previous Value previous Metadata Override protected Write Skew Helper Key Specific Logic init Key Specific Logic boolean total Order return key true logic used invalidation mode caches class Invalidation Logic extends Abstract Clustering Dependent Logic Override protected void commit Single Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation Cache flags reset reset done notification instead boolean created entry Created boolean removed entry Removed boolean expired removed entry instanceof Entry expired Entry entry Expired else expired false Internal Cache Entry previous Entry data Container peek entry get Key Object previous Value null Metadata previous Metadata null previous Entry null previous Value previous Entry get Value previous Metadata previous Entry get Metadata commit Manager commit entry track Flag l Invalidation ctx Notify events necessary Notify Helper entry Committed notifier functional Notifier created removed expired entry ctx command previous Value previous Metadata Override protected Write Skew Helper Key Specific Logic init Key Specific Logic boolean total Order return null used write skew check allowed invalidation logic used replicated mode caches class Replication Logic extends Invalidation Logic private State Transfer Lock state Transfer Lock private final Write Skew Helper Key Specific Logic local Node Primary Owner key get Cache Topology get Distribution key Primary Inject public void init State Transfer Lock state Transfer Lock state Transfer Lock state Transfer Lock Override public Collection Address get Owners Object key return null Override public Collection Address get Owners Collection Object keys keys Empty return Collections empty List return null Override protected void commit Single Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation n allow change state transfer invalidate entries ownership check commit state Transfer Lock acquire Shared Topology Lock try Commit Commit commit Type command ctx entry get Key entry Removed Commit Commit boolean created false boolean removed false boolean expired false Commit Local created entry Created removed entry Removed removed entry instanceof Entry expired Entry entry Expired Internal Cache Entry previous Entry data Container peek entry get Key Object previous Value null Metadata previous Metadata null previous Entry null previous Value previous Entry get Value previous Metadata previous Entry get Metadata commit Manager commit entry track Flag l Invalidation ctx Commit Local Notify Helper entry Committed notifier functional Notifier created removed expired entry ctx command previous Value previous Metadata finally state Transfer Lock release Shared Topology Lock Override protected Write Skew Helper Key Specific Logic init Key Specific Logic boolean total Order return total Order total order nodes perform write skew check key true two phase commit primary owner perform write skew check local Node Primary Owner logic used distributed mode caches class Distribution Logic extends Abstract Clustering Dependent Logic private Configuration configuration private State Transfer Lock state Transfer Lock private final Write Skew Helper Key Specific Logic local Node Owner key get Cache Topology Write Owner key private final Write Skew Helper Key Specific Logic local Node Primary Owner key get Cache Topology get Distribution key Primary Inject public void init Configuration configuration State Transfer Lock state Transfer Lock configuration configuration state Transfer Lock state Transfer Lock Override protected void commit Single Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation n allow change state transfer invalidate entries ownership check commit state Transfer Lock acquire Shared Topology Lock try Commit Commit commit Type command ctx entry get Key entry Removed boolean Write false Commit Commit configuration clustering l enabled transform entry Removed long lifespan entry get Lifespan lifespan lifespan configuration clustering l lifespan Metadata metadata entry get Metadata builder lifespan configuration clustering l lifespan build entry set Metadata new Metadata metadata Write true Commit Commit else Commit Commit entry get Metadata instanceof Metadata throw new Illegal State Exception Local entries must metadata Commit Commit boolean created false boolean removed false boolean expired false Commit Local created entry Created removed entry Removed removed entry instanceof Entry expired Entry entry Expired use value entry Internal Cache Entry previous Entry data Container peek entry get Key Object previous Value null Metadata previous Metadata null previous Entry null previous Value previous Entry get Value previous Metadata previous Entry get Metadata Write previous Entry null previous Entry Entry n overwrite non entry e g originator backup therefore two contexts one node else commit Manager commit entry track Flag l Invalidation Write ctx Commit Local Notify Helper entry Committed notifier functional Notifier created removed expired entry ctx command previous Value previous Metadata finally state Transfer Lock release Shared Topology Lock Override protected Write Skew Helper Key Specific Logic init Key Specific Logic boolean total Order return total Order total order owners perform write skew check local Node Owner two phase commit primary owner perform write skew check local Node Primary Owner class Scattered Logic extends Distribution Logic Override protected void commit Single Entry Cache Entry entry Flag Affected Command command Invocation Context ctx Flag track Flag boolean l Invalidation logic Scattered Distribution Interceptor throw new Unsupported Operation Exception
package org interceptors impl import java util Iterator import java util Map import java util concurrent Completable Future import java util function Consumer import org commands Commands Factory import org container Data Container import org container Entry Factory import org factories annotations Inject import org remoting responses Cache Found Response import org remoting responses Response import org remoting responses Successful Response import org remoting responses Unsure Response import org remoting transport Address import org statetransfer Owners Lost Exception import org statetransfer State Transfer Manager import org util concurrent locks Lock Manager Base class distribution interceptors author anistor redhat com since public abstract class Clustering Interceptor extends Base Rpc Interceptor protected Commands Factory cf protected Entry Factory entry Factory protected Lock Manager lock Manager protected Data Container data Container protected State Transfer Manager state Transfer Manager protected static Response get Single Response Map Address Response response Map Iterator Response response Map values iterator Next throw Owners Lost Exception Response response next Next throw new Illegal State Exception many responses response Map return response protected static Successful Response get Successful Response Fail Map Address Response response Map Completable Future future Consumer Response cache Found Iterator Response response Map values iterator Next future complete Exceptionally Owners Lost Exception return null Response response next Next future complete Exceptionally new Illegal State Exception many responses response Map else response instanceof Successful Response return Successful Response response else response instanceof Cache Found Response response instanceof Unsure Response cache Found null future complete Exceptionally unexpected response else try cache Found accept response catch Throwable future complete Exceptionally else future complete Exceptionally unexpected response return null protected static Illegal Argument Exception unexpected Response response return new Illegal Argument Exception Unexpected response response Inject public void inject Dependencies Commands Factory cf Entry Factory entry Factory Lock Manager lock Manager Data Container data Container State Transfer Manager state Transfer Manager cf cf entry Factory entry Factory lock Manager lock Manager data Container data Container state Transfer Manager state Transfer Manager link complete Exceptionally Throwable must called synchronized block since must complete future exceptionally accessing context exception would retry context could accessed concurrently dangling handlers retry execution synchronize future complete Exceptionally executes responses processing future marked done soon responses get synchronized block check Done return response processed sync block running complete Exceptionally related callbacks blocked finish processing protected class Clustered Get Future extends Completable Future Void public int counter public Clustered Get Future int counter counter counter Override public synchronized boolean complete Exceptionally Throwable ex return super complete Exceptionally ex
package org notifications cachelistener cluster import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import java util import org Cache import org commons marshall Abstract Externalizer import org distexec Distributed Callable import org marshall core Ids import org util logging Log import org util logging Log Factory Distributed Callable used remove registered link Remote Cluster Listener various nodes cluster listener unregistered cache author wburns since public class Cluster Listener Remove Callable implements Distributed Callable Void private static final Log log Log Factory get Log Cluster Listener Remove Callable class private static final boolean trace log Trace Enabled private transient Cache cache private final identifier public Cluster Listener Remove Callable identifier identifier identifier Override public void set Environment Cache cache Set input Keys cache cache Override public Void call throws Exception Remove listener cache Set Object listeners cache get Listeners Object listener listeners listener instanceof Remote Cluster Listener Remote Cluster Listener cluster Listener Remote Cluster Listener listener identifier equals cluster Listener get Id trace log tracef Removing local cluster listener due parent cluster listener removed identifier cluster Listener remove Listener return null public static class Externalizer extends Abstract Externalizer Cluster Listener Remove Callable Override public Set Class extends Cluster Listener Remove Callable get Type Classes return Collections singleton Cluster Listener Remove Callable class Override public void write Object Object Output output Cluster Listener Remove Callable object throws Exception output write Object object identifier Override public Cluster Listener Remove Callable read Object Object Input input throws Exception Class Found Exception return new Cluster Listener Remove Callable input read Object Override public Integer get Id return Ids
package org notifications cachelistener cluster import java io Exception import java io Object Input import java io Object Output import java lang annotation Annotation import java util Collections import java util Hash Set import java util Set import java util import org Cache import org commons marshall Abstract Externalizer import org commons marshall Marshall Util import org distexec Distributed Callable import org distexec Distributed Executor Service import org encoding Data Conversion import org factories Component Registry import org manager Embedded Cache Manager import org marshall core Ids import org notifications cachelistener Cache Notifier import org notifications cachelistener Listener Holder import org notifications cachelistener filter Cache Event Converter import org notifications cachelistener filter Cache Event Filter import org notifications cachelistener filter Cache Event Filter Converter import org notifications cachemanagerlistener Cache Manager Notifier import org remoting transport Address import org util logging Log import org util logging Log Factory Distributed Callable used install link Remote Cluster Listener resulting node class also checks ensure listener attempted installed source installed well node goes installing also remove listener author wburns since public class Cluster Listener Replicate Callable implements Distributed Callable Void private static final Log log Log Factory get Log Cluster Listener Replicate Callable class private static final boolean trace log Trace Enabled private transient Embedded Cache Manager cache Manager private transient Cache Notifier cache Notifier private transient Cache Manager Notifier cache Manager Notifier private transient Distributed Executor Service dist Executor private transient Address Address private transient Cluster Event Manager event Manager private final identifier private final Cache Event Filter filter private final Cache Event Converter converter private final Address origin private final boolean sync private final Set Class extends Annotation filter Annotations private final Data Conversion key Data Conversion private final Data Conversion value Data Conversion public Cluster Listener Replicate Callable identifier Address origin Cache Event Filter filter Cache Event Converter converter boolean sync Set Class extends Annotation filter Annotations Data Conversion key Data Conversion Data Conversion value Data Conversion identifier identifier origin origin filter filter converter converter sync sync filter Annotations filter Annotations key Data Conversion key Data Conversion value Data Conversion value Data Conversion trace log tracef Created clustered listener replicate callable filter Annotations Override public void set Environment Cache cache Set input Keys cache Manager cache get Cache Manager Component Registry component Registry cache get Advanced Cache get Component Registry cache Notifier component Registry get Component Cache Notifier class cache Manager Notifier cache get Cache Manager get Global Component Registry get Component Cache Manager Notifier class dist Executor Security Actions get Default Executor Service cache Address cache get Cache Manager get Address event Manager component Registry get Component Cluster Event Manager class filter null component Registry wire Dependencies filter converter null converter filter component Registry wire Dependencies converter Override public Void call throws Exception register listeners n ones registered cluster listener Address equals origin Make sure origin around otherwise n register listener way identifier maybe cache Manager get Members contains origin Prevent multiple invocations get prevent concurrent registration id Note ca n use static due running node synchronized cache Notifier boolean already Installed false First make sure listener already installed n anything Object installed Listener cache Notifier get Listeners installed Listener instanceof Remote Cluster Listener identifier equals Remote Cluster Listener installed Listener get Id already Installed true break already Installed Remote Cluster Listener listener new Remote Cluster Listener identifier origin dist Executor cache Notifier cache Manager Notifier event Manager sync Listener Holder listener Holder new Listener Holder listener key Data Conversion value Data Conversion cache Notifier add Filtered Listener listener Holder filter converter filter Annotations cache Manager Notifier add Listener listener possible member gone registered remove sure cache Manager get Members contains origin cache Notifier remove Listener listener cache Manager Notifier remove Listener listener trace log tracef Removing local cluster listener remote cluster listener registered origin went away concurrently origin else trace log tracef Registered local cluster listener remote cluster listener origin id origin identifier else trace log tracef Local cluster listener origin id already installed ignoring origin identifier else trace log tracef registering local cluster listener remote cluster listener origin origin went away origin else trace log trace registering local cluster listener node registered cluster listener return null public static class Externalizer extends Abstract Externalizer Cluster Listener Replicate Callable Override public Set Class extends Cluster Listener Replicate Callable get Type Classes return Collections singleton Cluster Listener Replicate Callable class Override public void write Object Object Output output Cluster Listener Replicate Callable object throws Exception output write Object object identifier output write Object object origin output write Object object filter object filter object converter object filter instanceof Cache Event Filter Converter output write Boolean true else output write Boolean false output write Object object converter output write Boolean object sync Marshall Util marshall Collection object filter Annotations output output write Object object key Data Conversion output write Object object value Data Conversion Override public Cluster Listener Replicate Callable read Object Object Input input throws Exception Class Found Exception id input read Object Address address Address input read Object Cache Event Filter filter Cache Event Filter input read Object boolean Converter input read Boolean Cache Event Converter converter Converter converter Cache Event Filter Converter filter else converter Cache Event Converter input read Object boolean sync input read Boolean Set Class extends Annotation listener Annots Marshall Util unmarshall Collection input Hash Set new Data Conversion key Data Conversion Data Conversion input read Object Data Conversion value Data Conversion Data Conversion input read Object return new Cluster Listener Replicate Callable id address filter converter sync listener Annots key Data Conversion value Data Conversion Override public Integer get Id return Ids
package org stream impl import java util Collection import java util Collections import java util Map import java util Objects import java util Set import java util concurrent Completable Future import java util concurrent Concurrent Hash Map import java util concurrent Time Unit import java util concurrent atomic Atomic Integer import java util concurrent locks Condition import java util concurrent locks Lock import java util concurrent locks Reentrant Lock import java util function Predicate import java util stream Collectors import org commands Commands Factory import org commons Cache Exception import org commons util Small Int Set import org distribution ch Consistent Hash import org factories annotations Inject import org factories annotations Start import org remoting responses Response import org remoting rpc Rpc Manager import org remoting transport Address import org remoting transport jgroups Suspect Exception import org util Range Set import org util logging Log import org util logging Log Factory Cluster stream manager sends requests using link Rpc Manager underlying communications param cache key type public class Cluster Stream Manager Impl implements Cluster Stream Manager protected final Map String Request Tracker currently Running new Concurrent Hash Map protected final Atomic Integer request Id new Atomic Integer protected Rpc Manager rpc protected Commands Factory factory protected Address local Address protected final static Log log Log Factory get Log Cluster Stream Manager Impl class Inject public void inject Rpc Manager rpc Commands Factory factory rpc rpc factory factory Start public void start local Address rpc get Address Override public Object remote Stream Operation boolean parallel Distribution boolean parallel Stream Consistent Hash ch Set Integer segments Set keys Include Map Integer Set keys Exclude boolean include Loader Terminal Operation operation Results Callback callback Predicate super early Terminate Predicate return common Remote Stream Operation parallel Distribution parallel Stream ch segments keys Include keys Exclude include Loader operation callback Stream Request Command Type early Terminate Predicate Override public Object remote Stream Operation Rehash Aware boolean parallel Distribution boolean parallel Stream Consistent Hash ch Set Integer segments Set keys Include Map Integer Set keys Exclude boolean include Loader Terminal Operation operation Results Callback callback Predicate super early Terminate Predicate return common Remote Stream Operation parallel Distribution parallel Stream ch segments keys Include keys Exclude include Loader operation callback Stream Request Command Type early Terminate Predicate private Object common Remote Stream Operation boolean parallel Distribution boolean parallel Stream Consistent Hash ch Set Integer segments Set keys Include Map Integer Set keys Exclude boolean include Loader Segment Aware Operation operation Results Callback callback Stream Request Command Type type Predicate super early Terminate Predicate Map Address Set Integer targets determine Targets ch segments callback String id targets Empty id local Address String request Id get Increment log tracef Performing remote operations id targets id Request Tracker tracker new Request Tracker callback targets early Terminate Predicate currently Running put id tracker parallel Distribution submit Async Tasks id targets keys Exclude parallel Stream keys Include include Loader type operation else Map Entry Address Set Integer target Info targets entry Set throws exception Set Integer target Segments target Info get Value Set keys Excluded determine Excluded Keys keys Exclude target Segments rpc invoke Remotely Collections singleton target Info get Key factory build Stream Request Command id parallel Stream type target Segments keys Include keys Excluded include Loader operation rpc get Default Rpc Options true else log tracef performing remote operation request valid targets segments found segments id null return id Override public Object remote Stream Operation boolean parallel Distribution boolean parallel Stream Consistent Hash ch Set Integer segments Set keys Include Map Integer Set keys Exclude boolean include Loader Key Tracking Terminal Operation operation Results Callback Collection callback return common Remote Stream Operation parallel Distribution parallel Stream ch segments keys Include keys Exclude include Loader operation callback Stream Request Command Type null Override public Object remote Stream Operation Rehash Aware boolean parallel Distribution boolean parallel Stream Consistent Hash ch Set Integer segments Set keys Include Map Integer Set keys Exclude boolean include Loader Key Tracking Terminal Operation operation Results Callback Map callback Map Address Set Integer targets determine Targets ch segments callback String id targets Empty id local Address String request Id get Increment log tracef Performing remote rehash key aware operations id targets id Request Tracker Map tracker new Request Tracker callback targets null currently Running put id tracker parallel Distribution submit Async Tasks id targets keys Exclude parallel Stream keys Include include Loader Stream Request Command Type operation else Map Entry Address Set Integer target Info targets entry Set Address dest target Info get Key Set Integer target Segments target Info get Value try Keys exclude never empty since utilizes custom map solution Set keys Excluded determine Excluded Keys keys Exclude target Segments log tracef Submitting task excluding keys dest id keys Excluded Response response rpc invoke Remotely Collections singleton dest factory build Stream Request Command id parallel Stream Stream Request Command Type target Segments keys Include keys Excluded include Loader operation rpc get Default Rpc Options true values iterator next response Successful log tracef Unsuccessful response making segments suspect id dest target Segments receive Response id dest true target Segments null catch Exception e boolean Suspect contained Suspect Exception e Suspect log tracef e Encounted exception id dest throw e else log tracef Exception contained Suspect Exception making segments suspect dest target Segments receive Response id dest true target Segments null else log tracef performing remote rehash key aware operation request valid targets segments found segments id null return id private void submit Async Tasks String id Map Address Set Integer targets Map Integer Set keys Exclude boolean parallel Stream Set keys Include boolean include Loader Stream Request Command Type type Object operation Map Entry Address Set Integer target Info targets entry Set Set Integer segments target Info get Value Set keys Excluded determine Excluded Keys keys Exclude segments Address dest target Info get Key log tracef Submitting async task excluding keys dest id keys Excluded Completable Future Map Address Response completable Future rpc invoke Remotely Async Collections singleton dest factory build Stream Request Command id parallel Stream type segments keys Include keys Excluded include Loader operation rpc get Default Rpc Options true completable Future Complete v e v null Response response v values iterator next response Successful log tracef Unsuccessful response making segments suspect id target Info get Key receive Response id target Info get Key true target Info get Value null else e null boolean Suspect contained Suspect Exception e Suspect log tracef e Encounted exception id target Info get Key Request Tracker tracker currently Running get id tracker null mark Tracker Exception tracker dest e id else log warnf Unhandled remote stream exception encountered e else log tracef Exception contained Suspect Exception making segments suspect target Info get Value receive Response id target Info get Key true target Info get Value null private boolean contained Suspect Exception Throwable e Throwable cause e boolean Suspect false Unwrap exception cause instanceof Suspect Exception Suspect true break cause cause get Cause null return Suspect protected static void mark Tracker Exception Request Tracker tracker Address dest Throwable e Object uuid log tracef Marking tracker exception tracker throwable e dest null tracker last Result dest null uuid null log tracef Tracker completed exception waking sleepers uuid else log trace Tracker completed due outside cause waking sleepers tracker completion Lock lock try tracker completion Condition signal finally tracker completion Lock unlock private Set determine Excluded Keys Map Integer Set keys Exclude Set Integer segments Use keys Exclude Empty return Collections empty Set Special map supports get operations return segments Use stream flat Map Set keys Segment keys Exclude get keys Segment null return keys Segment stream return null collect Collectors Set private Map Address Set Integer determine Targets Consistent Hash ch Set Integer segments Results Callback callback segments null segments new Range Set ch get Num Segments concurrent hash map case node completes operation still iterating map submitting others Map Address Set Integer targets new Concurrent Hash Map Integer segment segments Address owner ch locate Primary Owner Segment segment owner null callback Segments Lost Collections singleton segment callback request Future Topology else owner equals local Address targets compute Absent owner new Small Int Set add segment return targets Override public boolean Complete Object id return currently Running contains Key id Override public boolean await Completion Object id long time Time Unit unit throws Interrupted Exception time throw new Illegal Argument Exception Time must greater Objects require Non Null id Identifier must non null log tracef Awaiting completion id boolean completed false long target System nano Time unit Nanos time Throwable throwable null target System nano Time Request Tracker tracker currently Running get id tracker null completed true break throwable tracker throwable null break tracker completion Lock lock try Check inside lock case concurrent notification got lock currently Running contains Key id completed true throwable tracker throwable break tracker completion Condition await target System nano Time Time Unit throwable tracker throwable completed false break finally tracker completion Lock unlock log tracef Returning back caller due completed id completed throwable null throwable instanceof Runtime Exception throw Runtime Exception throwable throw new Cache Exception throwable return completed Override public void forget Operation Object id id null Request Tracker tracker currently Running remove id tracker null tracker completion Lock lock try tracker completion Condition signal finally tracker completion Lock unlock Override public boolean receive Response Object id Address origin boolean complete Set Integer missing Segments response log tracef Received response completed response id suspected segments origin complete id missing Segments Request Tracker tracker currently Running get id tracker null boolean notify false need reorganize tracker reduce synchronization contains missing segments completing tracker synchronized tracker tracker awaiting Response contains Key origin missing Segments Empty tracker missing Segments missing Segments complete notify tracker last Result origin response else tracker intermediate Results origin response notify log tracef Marking completed id tracker completion Lock lock try currently Running remove id tracker completion Condition signal finally tracker completion Lock unlock return notify else log tracef Ignoring response already received completed response id origin return false static class Request Tracker final Results Callback callback final Map Address Set Integer awaiting Response final Lock completion Lock new Reentrant Lock final Condition completion Condition completion Lock new Condition final Predicate super early Terminate Predicate Set Integer missing Segments volatile Throwable throwable Request Tracker Results Callback callback Map Address Set Integer awaiting Response Predicate super early Terminate Predicate callback callback awaiting Response awaiting Response early Terminate Predicate early Terminate Predicate public void intermediate Results Address origin intermediate Result callback Intermediate Result origin intermediate Result param origin param result return Whether last expected response public boolean last Result Address origin result Set Integer completed Segments awaiting Response get origin missing Segments null completed Segments remove missing Segments callback Completion origin completed Segments result synchronized early Terminate Predicate null early Terminate Predicate test result awaiting Response clear else awaiting Response remove origin return awaiting Response Empty public void missing Segments Set Integer segments synchronized missing Segments null missing Segments segments else missing Segments add segments callback Segments Lost segments
package org topology import static java lang String format import static org factories Known Component Names import static org util logging Log Factory import static org util logging events Messages import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Map Entry import java util Objects import java util Optional import java util Set import java util concurrent Completable Future import java util concurrent Concurrent Map import java util concurrent Count Latch import java util concurrent Execution Exception import java util concurrent Executor Service import java util concurrent Time Unit import java util concurrent locks Condition import java util concurrent locks Lock import java util concurrent locks Reentrant Lock import org commands Replicable Command import org commons Cache Exception import org commons util Collection Factory import org commons util Collections import org configuration cache Cache Mode import org configuration cache Configuration import org configuration global Global Configuration import org executors Limited Executor import org factories Global Component Registry import org factories annotations Component Name import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org globalstate Global State Manager import org globalstate Scoped Persistent State import org manager Embedded Cache Manager import org notifications Listener import org notifications cachemanagerlistener Cache Manager Notifier import org notifications cachemanagerlistener annotation Merged import org notifications cachemanagerlistener annotation View Changed import org notifications cachemanagerlistener event View Changed Event import org partitionhandling Availability Mode import org partitionhandling Partition Handling import org partitionhandling impl Availability Strategy import org partitionhandling impl Lost Data Check import org partitionhandling impl Prefer Availability Strategy import org partitionhandling impl Prefer Consistency Strategy import org remoting inboundhandler Deliver Order import org remoting responses Cache Found Response import org remoting responses Exception Response import org remoting responses Response import org remoting responses Successful Response import org remoting rpc Response Filter import org remoting rpc Response Mode import org remoting transport Address import org remoting transport Transport import org remoting transport jgroups Suspect Exception import org statetransfer Rebalance Type import org util concurrent Completable Futures import org util concurrent Timeout Exception import org util logging Log import org util logging Log Factory import org util logging events Event Log Category import org util logging events Event Log Manager import org util logging events Event Logger import net jcip annotations Guarded code Cluster Topology Manager implementation author Dan Berindei author Pedro Ruivo since public class Cluster Topology Manager Impl implements Cluster Topology Manager public static final int public static final int private enum Cluster Manager Status boolean Running return boolean Coordinator return private static final Log log Log Factory get Log Cluster Topology Manager Impl class private static final boolean trace log Trace Enabled private Transport transport private Global Configuration global Configuration private Global Component Registry gcr private Cache Manager Notifier cache Manager Notifier private Embedded Cache Manager cache Manager private Executor Service async Transport Executor private Limited Executor view Handling Executor private Event Log Manager event Log Manager private Persistent Manager persistent Manager need volatile sometimes read without holding view handling lock private volatile int view Id private volatile Cluster Manager Status cluster Manager Status Cluster Manager Status private final Lock cluster Manager Lock new Reentrant Lock private final Condition cluster State Changed cluster Manager Lock new Condition private final Concurrent Map String Cluster Cache Status cache Status Map Collection Factory make Concurrent Map private Cluster View Listener view Listener global rebalancing status private volatile boolean global Rebalancing Enabled true Inject public void inject Transport transport Component Name Executor Service async Transport Executor Global Configuration global Configuration Global Component Registry gcr Cache Manager Notifier cache Manager Notifier Embedded Cache Manager cache Manager Event Log Manager event Log Manager Persistent Manager persistent Manager transport transport async Transport Executor async Transport Executor global Configuration global Configuration gcr gcr cache Manager Notifier cache Manager Notifier cache Manager cache Manager event Log Manager event Log Manager persistent Manager persistent Manager Start priority public void start view Handling Executor new Limited Executor View Handling async Transport Executor view Listener new Cluster View Listener cache Manager Notifier add Listener view Listener listener already missed initial view view Handling Executor execute handle Cluster View false transport get View Id fetch Rebalancing Status Coordinator protected void fetch Rebalancing Status Coordinator transport Coordinator Assume timeout coordinator n Command Aware Rpc Dispatcher yet possible Groups Channel Lookup Connect false retry Replicable Command command new Cache Topology Control Command null Cache Topology Control Command Type transport get Address Address coordinator null Response response null int try coordinator transport get Coordinator Map Address Response response Map transport invoke Remotely Collections singleton coordinator command Response Mode get Global Timeout null Deliver Order false response response Map get coordinator break catch Exception e e instanceof Timeout Exception log error Reading Rebalancing Status coordinator e response Successful Response create Boolean log debug Timed waiting rebalancing status coordinator trying response instanceof Successful Response global Rebalancing Enabled Boolean Successful Response response get Response Value else log error Reading Rebalancing Status coordinator new Cache Exception Objects String response Stop priority public void stop Stop blocking cache topology commands cluster Manager Lock lock try cluster Manager Status Cluster Manager Status cluster State Changed signal finally cluster Manager Lock unlock view Listener null cache Manager Notifier remove Listener view Listener view Handling Executor null view Handling Executor cancel Queued Tasks Override public Cache Status Response handle Join String cache Name Address joiner Cache Join Info join Info int joiner View Id throws Exception Cluster Cache Status cache Status cluster Manager Lock lock try wait Joiner View joiner joiner View Id join Info get Timeout cluster Manager Status Running log debugf Ignoring join request cache local cache manager shutting joiner cache Name return null joiner View Id view Id log debugf Ignoring join request cache joiner view id old joiner cache Name joiner View Id return null cache Status init Cache Status Absent cache Name join Info get Cache Mode finally cluster Manager Lock unlock return cache Status Join joiner join Info Override public void handle Leave String cache Name Address leaver int view Id throws Exception cluster Manager Status Running log debugf Ignoring leave request cache local cache manager shutting leaver cache Name return Cluster Cache Status cache Status cache Status Map get cache Name cache Status null happen become coordinator log tracef Ignoring leave request cache n cache status entry leaver cache Name return cache Status Leave leaver cache Status Map remove cache Name Override public void handle Rebalance Phase Confirm String cache Name Address node int topology Id Throwable throwable int view Id throws Exception throwable null could try update pending nodes reporting errors considered hold state logging error proceeding rebalance successful everywhere log rebalance Error cache Name node topology Id throwable rebalance Completed cache Name node topology Id event Log Manager get Event Logger context cache Name scope node String info Event Log Category rebalance Phase Confirmed node topology Id Cluster Cache Status cache Status cache Status Map get cache Name cache Status null log debugf Ignoring rebalance confirmation cache n cache status entry node cache Name return cache Status confirm Rebalance Phase node topology Id private static class Cache Topology Filter Reuser implements Response Filter Map Cache Topology Cache Topology seen Topologies new Hash Map Map Cache Join Info Cache Join Info seen Infos new Hash Map Override public boolean Acceptable Response response Address sender response Successful Manager Status Response value Manager Status Response Successful Response response get Response Value Entry String Cache Status Response entry value get Caches entry Set Cache Status Response csr entry get Value Cache Topology cache Topology csr get Cache Topology Cache Topology stable Topology csr get Stable Topology Cache Topology replace Cache Topology seen Topologies get cache Topology replace Cache Topology null seen Topologies put cache Topology cache Topology replace Cache Topology cache Topology Cache Topology replace Stable Topology n equal check replace note stable Topology null Objects equals cache Topology stable Topology replace Stable Topology seen Topologies get stable Topology replace Stable Topology null seen Topologies put stable Topology stable Topology replace Stable Topology stable Topology else Since equal replace cache topology going use replace Stable Topology replace Cache Topology Cache Join Info info csr get Cache Join Info Cache Join Info replace Info seen Infos get info replace Info null seen Infos put info info replace Cache Topology null replace Stable Topology null replace Info null entry set Value new Cache Status Response replace Info null replace Info info replace Cache Topology replace Stable Topology csr get Availability Mode return true Override public boolean need Responses return true private void handle Cluster View boolean merge View int new View Id try update Cluster State merge View new View Id return Limited Executor acts critical section n need worry multiple threads cluster Manager Status Cluster Manager Status become Coordinator new View Id return cluster Manager Status Cluster Manager Status recovered cluster status rebalance caches include minor partitions processed regular view prune members left update Cache Members transport get Members catch Throwable log view Handling Error new View Id private boolean become Coordinator int new View Id Clean leftover cache status information last time coordinator g local node coordinator started rebalance lost coordinator status merge existing cache statuses may rebalance progress cache Status Map clear try recover Cluster Status new View Id transport get Members cluster Manager Lock lock try view Id new View Id log debugf View updated recovering cluster view new View Id return false cluster Manager Status Cluster Manager Status notify threads might waiting join cluster State Changed signal finally cluster Manager Lock unlock catch Interrupted Exception e trace log tracef Cluster state recovery interrupted coordinator shutting catch Suspect Exception e trace log tracef Cluster state recovery interrupted member lost retry catch Exception e cluster Manager Status Running failed Recover Cluster State e event Log Manager get Event Logger detail e fatal Event Log Category cluster Recovery Failed transport get Members else log tracef Cluster state recovery failed coordinator shutting return true private boolean update Cluster State boolean merge View int new View Id cluster Manager Lock lock try new View Id transport get View Id log tracef Ignoring old cluster view notification new View Id return false boolean Coordinator transport Coordinator boolean became Coordinator Coordinator cluster Manager Status Coordinator trace log tracef Received new cluster view Coordinator old status Object new View Id Coordinator cluster Manager Status Coordinator cluster Manager Status Cluster Manager Status return false became Coordinator merge View cluster Manager Status Cluster Manager Status notify threads might waiting join view Id new View Id cluster State Changed signal finally cluster Manager Lock unlock return true private Cluster Cache Status init Cache Status Absent String cache Name Cache Mode cache Mode return cache Status Map compute Absent cache Name name assume cache partition handling configured already defined nodes including coordinator starts node Lost Data Check lost Data Check cache Mode Scattered lost Data Check stable new Members data lost one node lost Set Address lost Members new Hash Set stable get Members lost Members remove new Members log debugf Stable members actual members lost members stable get Members new Members lost Members return lost Members size else lost Data Check stable new Members data lost segment lost owners int stable get Num Segments Collections contains new Members stable locate Owners Segment return true return false Availability Strategy availability Strategy Configuration cache Configuration cache Manager get Cache Configuration cache Name Partition Handling partition Handling cache Configuration null cache Configuration clustering partition Handling Split null boolean resolve Conflicts Merge partition Handling Partition Handling cache Configuration clustering partition Handling merge Policy null partition Handling null partition Handling Partition Handling availability Strategy new Prefer Consistency Strategy event Log Manager persistent Manager lost Data Check else availability Strategy new Prefer Availability Strategy event Log Manager persistent Manager lost Data Check resolve Conflicts Merge Optional Global State Manager global State Manager cache Manager get Global Component Registry get Optional Component Global State Manager class Optional Scoped Persistent State persisted State global State Manager flat Map gsm gsm read Scoped State cache Name return new Cluster Cache Status cache Manager cache Name availability Strategy Rebalance Type cache Mode transport persisted State persistent Manager resolve Conflicts Merge Override public void broadcast Rebalance Start String cache Name Cache Topology cache Topology boolean total Order boolean distributed start Rebalance cache Name cache Topology event Log Manager get Event Logger context cache Name scope transport get Address info Event Log Category rebalance Started cache Topology get Topology Id Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address cache Topology null view Id execute Cluster Async command get Global Timeout total Order distributed private void recover Cluster Status int new View Id final List Address cluster Members throws Exception log debugf Recovering cluster status view new View Id Replicable Command command new Cache Topology Control Command null Cache Topology Control Command Type transport get Address new View Id Map Address Object status Responses null Assume timeout one nodes n Command Aware Rpc Dispatcher installed time possible Groups Channel Lookup Connect false retry int try status Responses execute Cluster Sync command get Global Timeout false false new Cache Topology Filter Reuser break catch Execution Exception e e get Cause instanceof Timeout Exception log debug Timed waiting cluster status responses trying else e get Cause instanceof Suspect Exception transport get Members contains cluster Members int sleep Time get Global Timeout log debugf e Received exception one members try ms sleep Time Thread sleep sleep Time continue throw e log debugf Got status responses members status Responses size cluster Members Map String Map Address Cache Status Response responses Cache new Hash Map boolean recovered Rebalancing Status true Map Entry Address Object response Entry status Responses entry Set Address sender response Entry get Key Manager Status Response node Status Manager Status Response response Entry get Value recovered Rebalancing Status node Status Rebalancing Enabled Map Entry String Cache Status Response status Entry node Status get Caches entry Set String cache Name status Entry get Key Map Address Cache Status Response cache Responses responses Cache compute Absent cache Name k new Hash Map cache Responses put sender status Entry get Value global Rebalancing Enabled recovered Rebalancing Status Compute new consistent hashes separate threads int max Threads Runtime get Runtime available Processors Count Latch latch new Count Latch responses Cache size Limited Executor cs new Limited Executor Merge new View Id async Transport Executor max Threads final Map Entry String Map Address Cache Status Response e responses Cache entry Set Cache Join Info join Info e get Value values stream find get get Cache Join Info Cluster Cache Status cache Status init Cache Status Absent e get Key join Info get Cache Mode cs execute try cache Status Merge Partitions e get Value finally latch count latch await get Global Timeout Time Unit public void update Cache Members List Address new Cluster Members try log tracef Updating cluster members caches New list new Cluster Members try get Suspect Exception means new view soon ignore one confirm Members Available catch Suspect Exception e log tracef Node left updating cache members e get Suspect return Cluster Cache Status cache Status cache Status Map values cache Status Handle Cluster View catch Exception e cluster Manager Status Running log error Updating Members List e private void confirm Members Available throws Exception Replicable Command heartbeat Command new Cache Topology Control Command null Cache Topology Control Command Type transport get Address transport invoke Remotely null heartbeat Command Response Mode get Global Timeout null Deliver Order false Wait received view code joiner View Id finished recovering cluster state p Returns early node shutting p method invoked lock hold throws Timeout Exception timeout expired Guarded cluster Manager Lock private void wait Joiner View Address joiner int joiner View Id long timeout throws Interrupted Exception joiner View Id view Id cluster Manager Status Cluster Manager Status trace joiner View Id view Id log tracef Waiting install view processing join request joiner View Id joiner else log tracef Waiting recover cluster status processing join request joiner long nanos Timeout Time Unit Nanos timeout view Id joiner View Id cluster Manager Status Cluster Manager Status cluster Manager Status Running nanos Timeout throw log coordinator Timeout Waiting View joiner View Id transport get View Id cluster Manager Status nanos Timeout cluster State Changed await Nanos nanos Timeout private Map Address Object execute Cluster Sync final Replicable Command command final int timeout boolean total Order boolean distributed final Response Filter filter throws Exception first invoke remotely total Order Map Address Response response Map transport invoke Remotely transport get Members command Response Mode timeout filter Deliver Order distributed return extract Response Values response Map null Completable Future Map Address Response remote Future transport invoke Remotely Async null command Response Mode timeout filter Deliver Order false invoke command local node gcr wire Dependencies command Response local Response try trace log tracef Attempting execute command self command local Response Response command invoke catch Throwable throwable throw new Exception throwable return extract Response Values Completable Futures await remote Future local Response private int get Global Timeout Rename setting something like global Rpc Timeout return int global Configuration transport distributed Sync Timeout private void execute Cluster Async final Replicable Command command final int timeout boolean total Order boolean distributed total Order invoke command local node async Transport Executor submit try trace log tracef Attempting execute command self command gcr wire Dependencies command command invoke catch Throwable throwable command already logs exception invoke invoke remotely try Deliver Order deliver Order total Order Deliver Order Deliver Order transport invoke Remotely null command Response Mode timeout null deliver Order distributed catch Exception e throw new Cache Exception Failed broadcast asynchronous command command e Override public void broadcast Topology Update String cache Name Cache Topology cache Topology Availability Mode availability Mode boolean total Order boolean distributed log debugf Updating cluster wide current topology cache topology availability mode cache Name cache Topology availability Mode Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address cache Topology availability Mode view Id execute Cluster Async command get Global Timeout total Order distributed Override public void broadcast Stable Topology Update String cache Name Cache Topology cache Topology boolean total Order boolean distributed log debugf Updating cluster wide stable topology cache topology cache Name cache Topology Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address cache Topology null view Id execute Cluster Async command get Global Timeout total Order distributed Override public boolean Rebalancing Enabled return global Rebalancing Enabled Override public boolean Rebalancing Enabled String cache Name cache Name null return Rebalancing Enabled else Cluster Cache Status cache Status Map get cache Name return null Rebalance Enabled Rebalancing Enabled Override public void set Rebalancing Enabled String cache Name boolean enabled cache Name null set Rebalancing Enabled enabled else Cluster Cache Status cluster Cache Status cache Status Map get cache Name cluster Cache Status null cluster Cache Status set Rebalance Enabled enabled Override public void set Rebalancing Enabled boolean enabled enabled global Rebalancing Enabled rebalancing Enabled else global Rebalancing Enabled rebalancing Suspended global Rebalancing Enabled enabled cache Status Map values Cluster Cache Status start Queued Rebalance Override public void force Rebalance String cache Name Cluster Cache Status cache Status cache Status Map get cache Name cache Status null cache Status force Rebalance Override public void force Availability Mode String cache Name Availability Mode availability Mode Cluster Cache Status cache Status cache Status Map get cache Name cache Status null cache Status force Availability Mode availability Mode Override public Rebalancing Status get Rebalancing Status String cache Name Cluster Cache Status cache Status cache Status Map get cache Name cache Status null return cache Status get Rebalancing Status else return Rebalancing Status Override public void broadcast Shutdown Cache String cache Name Cache Topology cache Topology boolean total Order boolean distributed throws Exception Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address cache Topology null view Id execute Cluster Sync command get Global Timeout total Order distributed null Override public void set Initial Cache Topology Id String cache Name int topology Id Configuration configuration cache Manager get Cache Configuration cache Name Cluster Cache Status cache Status init Cache Status Absent cache Name configuration clustering cache Mode cache Status set Initial Topology Id topology Id Override public void handle Shutdown Request String cache Name throws Exception Cluster Cache Status cache Status cache Status Map get cache Name cache Status shutdown Cache Listener sync true public class Cluster View Listener Merged View Changed public void handle View Change final View Changed Event e Need recover existing caches asynchronously case became coordinator use async notification thread pool default thread view Handling Executor execute handle Cluster View e Merge View e get View Id Event Logger event Logger event Log Manager get Event Logger scope e get Local Address log Node Joined event Logger e get New Members e get Old Members log Node Left event Logger e get New Members e get Old Members private Map Address Object extract Response Values Map Address Response remote Responses Response local Response parse responses Map Address Object response Values new Hash Map transport get Members size Map Entry Address Response entry remote Responses entry Set add Response Value entry get Key entry get Value response Values local Response null add Response Value transport get Address local Response response Values return response Values private static void add Response Value Address origin Response response Map Address Object values response Cache Found Response return else response Successful Throwable cause response instanceof Exception Response Exception Response response get Exception null throw new Cache Exception format Unsuccessful response received node origin response cause values put origin Successful Response response get Response Value private static void log Node Joined Event Logger logger List Address new Members List Address old Members new Members stream filter address old Members contains address address logger info Event Log Category node Joined address private static void log Node Left Event Logger logger List Address new Members List Address old Members old Members stream filter address new Members contains address address logger info Event Log Category node Left address
package org commons util import java util Arrays import java util Hash Map import java util Hash Set import java util Linked Hash Map import java util Map import java util Set import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import org commons equivalence Equivalence import com github benmanes caffeine cache Cache import com github benmanes caffeine cache Caffeine factory Concurrent Maps author Manik Surtani author Galder Zamarre since public class Collection Factory private static final float f public static int compute Capacity int expected Size return compute Capacity expected Size public static int compute Capacity int expected Size float load Factor return int expected Size load Factor f public static Concurrent Map make Concurrent Map return new Concurrent Hash Map public static Concurrent Map make Concurrent Map int init Capacity return new Concurrent Hash Map init Capacity public static Concurrent Map make Concurrent Map int init Capacity int concurrency Level return new Concurrent Hash Map init Capacity f concurrency Level public static Concurrent Map make Concurrent Parallel Map int init Capacity int concurrency Level return new Concurrent Hash Map init Capacity public static Concurrent Map make Concurrent Map int init Capacity float load Factor int concurrency Level return new Concurrent Hash Map init Capacity load Factor concurrency Level public static Map make Map return new Hash Map public static Map make Map int initial Capacity return new Hash Map initial Capacity public static Map make Map Map extends extends entries return new Hash Map entries public static Map make Linked Map int initial Capacity float load Factor boolean access Order return new Linked Hash Map initial Capacity load Factor access Order public static Set make Set return new Hash Set public static Set make Set int initial Capacity return new Hash Set initial Capacity deprecated Since please use link make Concurrent Map instead Deprecated public static Concurrent Map make Concurrent Map Equivalence super key Eq Equivalence super value Eq return make Concurrent Map deprecated Since please use link make Concurrent Map int instead Deprecated public static Concurrent Map make Concurrent Map int init Capacity Equivalence super key Eq Equivalence super value Eq return make Concurrent Map init Capacity deprecated Since please use link make Concurrent Map int int instead Deprecated public static Concurrent Map make Concurrent Map int init Capacity int concurrency Level Equivalence super key Eq Equivalence super value Eq return make Concurrent Map init Capacity concurrency Level deprecated Since please use link make Concurrent Parallel Map int int instead Deprecated public static Concurrent Map make Concurrent Parallel Map int init Capacity int concurrency Level Equivalence super key Eq Equivalence super value Eq return make Concurrent Parallel Map init Capacity concurrency Level deprecated Since please use link make Concurrent Map int float int instead Deprecated public static Concurrent Map make Concurrent Map int init Capacity float load Factor int concurrency Level Equivalence super key Eq Equivalence super value Eq return make Concurrent Map init Capacity load Factor concurrency Level public static Concurrent Map make Bounded Concurrent Map int max Size Cache cache Caffeine new Builder maximum Size max Size build return cache Map deprecated Since please use link make Map instead Deprecated public static Map make Map Equivalence super key Eq Equivalence super value Eq return new Hash Map deprecated Since please use link make Map int instead Deprecated public static Map make Map int initial Capacity Equivalence super key Eq Equivalence super value Eq return new Hash Map initial Capacity deprecated Since please use link make Map Map instead Deprecated public static Map make Map Map extends extends entries Equivalence super key Eq Equivalence super value Eq return new Hash Map entries deprecated Since please use link make Set int instead Deprecated public static Map make Linked Map int initial Capacity float load Factor boolean access Order Equivalence super key Eq Equivalence super value Eq return new Linked Hash Map initial Capacity load Factor access Order deprecated Since please use link make Set instead Deprecated public static Set make Set Equivalence super entry Eq return new Hash Set deprecated Since please use link make Set int instead Deprecated public static Set make Set int initial Capacity Equivalence super entry Eq return new Hash Set initial Capacity Create Set backed specified array param entries array list backed param type elements return set view specified array Safe Varargs public static Set make Set entries return new Hash Set Arrays List entries
package org filter import java io Exception import java io Object Input import java io Object Output import java util Collection import java util Collections import java util Set import org commons marshall Abstract Externalizer import org marshall core Ids Filter based accepting rejecting keys present supplied collection author Mircea Markus since public class Collection Key Filter implements Key Filter private final Collection extends keys private final boolean accept public Collection Key Filter Collection extends keys keys false public Collection Key Filter Collection extends keys boolean accept keys keys accept accept Override public boolean accept key return accept keys contains key keys contains key public static class Externalizer extends Abstract Externalizer Collection Key Filter Override public Set Class extends Collection Key Filter get Type Classes return Collections singleton Collection Key Filter class Override public void write Object Object Output output Collection Key Filter object throws Exception output write Object object keys output write Boolean object accept Override public Collection Key Filter read Object Object Input input throws Exception Class Found Exception return new Collection Key Filter Collection extends Object input read Object input read Boolean Override public Integer get Id return Ids
package org util concurrent import java util Array List import java util Collection import java util Collections import java util Hash Set import java util List import java util Map import java util Set import java util concurrent Callable import java util concurrent Completable Future import java util concurrent Concurrent Hash Map import java util concurrent Scheduled Executor Service import java util concurrent Scheduled Future import java util concurrent Time Unit import java util function Bi Consumer import org commands Command Invocation Id import org commons util Util import org configuration cache Configuration import org factories Known Component Names import org factories annotations Component Name import org factories annotations Inject import org factories scopes Scope import org factories scopes Scopes import org interceptors distribution Collector import org interceptors distribution Primary Owner Collector import org remoting transport Address import org util logging Log import org util logging Log Factory import net jcip annotations Guarded acknowledge collector Triangle algorithm used non transactional caches write operations p Acknowledges used owners originator signal completion write operation operation complete successfully p acknowledges valid cache topology id acknowledge tagged command topology id Acknowledges previous topology id discarded p acknowledges primary owner carry return value operation author Pedro Ruivo since Scope Scopes public class Command Ack Collector private static final Log log Log Factory get Log Command Ack Collector class private static final boolean trace log Trace Enabled private final Concurrent Hash Map Long Base Collector collector Map private Scheduled Executor Service timeout Executor private long timeout Nano Seconds public Command Ack Collector collector Map new Concurrent Hash Map Inject public void inject Component Name Known Component Names Scheduled Executor Service timeout Executor Configuration configuration timeout Executor timeout Executor timeout Nano Seconds Time Unit Nanos configuration clustering remote Timeout Creates collector single key write operation param id id link Command Invocation Id param backup Owners backup owners key param topology Id current topology id public Collector Object create long id Collection Address backup Owners int topology Id backup Owners Empty return new Primary Owner Collector Single Key Collector collector new Single Key Collector id backup Owners topology Id collector Map put id collector trace log tracef Created new collector Backup Owners id backup Owners return collector Creates collector link org commands write Put Map Command param id id link Command Invocation Id get Id param primary primary owners collection param backups map backup owner segments affected param topology Id current topology id public Collector Map Object Object create Multi Key Collector long id Collection Address primary Map Address Collection Integer backups int topology Id backups Empty return new Primary Owner Collector Multi Key Collector collector new Multi Key Collector id backups topology Id collector Map put id collector trace log tracef Created new collector Primary Backup Segments id primary backups return collector Acknowledges link org commands write Put Map Command completion backup owner param id id link Command Invocation Id get Id param backup owner param segment segments affected acknowledged param topology Id topology id public void multi Key Backup Ack long id Address int segment int topology Id Multi Key Collector collector Multi Key Collector collector Map get id collector null collector backup Ack segment topology Id Acknowledges write operation completion backup owner param id id link Command Invocation Id get Id param backup owner param topology Id topology id public void backup Ack long id Address int topology Id Single Key Collector collector Single Key Collector collector Map get id collector null collector backup Ack topology Id Acknowledges exception operation execution p collector completed without waiting acknowledges param id id link Command Invocation Id get Id param throwable link Throwable param topology Id topology id public void complete Exceptionally long id Throwable throwable int topology Id Base Collector collector collector Map get id collector null collector complete Exceptionally throwable topology Id return pending ids link Command Invocation Id get Id testing purposes public List Long get Pending Commands return new Array List collector Map key Set param id id link Command Invocation Id get Id return code true acknowledges pending backup owners code false otherwise testing purposes public boolean Pending Backup Acks long id Base Collector collector collector Map get id return collector null collector Pending Backup Acks Notifies change member list param members new cluster members public void Members Change Collection Address members Set Address current Members new Hash Set members Base Collector collector collector Map values collector Members Change current Members private Timeout Exception create Timeout Exception long id return log timeout Waiting Acks Util pretty Print Time timeout Nano Seconds Time Unit id private abstract class Base Collector implements Callable Void Bi Consumer Throwable Collector final long id final Completable Future future final int topology Id private final Scheduled Future timeout Task volatile primary Result volatile boolean primary Result Received false Base Collector long id int topology Id id id topology Id topology Id future new Completable Future timeout Task timeout Executor schedule timeout Nano Seconds Time Unit Invoked timeout executor timeout expires p completes future timeout exception Override public final synchronized Void call throws Exception future complete Exceptionally create Timeout Exception id return null Invoked future completed must cleanup task related collector p tasks includes removing collector map cancel timeout task Override public final void accept Throwable throwable trace log tracef Collector Collector completed ret throw id throwable collector Map remove id timeout Task cancel false Override public final Completable Future get Future return future Complete Override public void primary Exception Throwable throwable future complete Exceptionally throwable final void complete Exceptionally Throwable throwable int topology Id trace log tracef throwable Collector completed exceptionally Topology Id expected id topology Id topology Id Wrong Topology Done topology Id return future complete Exceptionally throwable abstract boolean Pending Backup Acks abstract void Members Change Collection Address members final boolean Wrong Topology Done int topology Id return topology Id topology Id future Done private class Single Key Collector extends Base Collector Object private final Collection Address backup Owners private Single Key Collector long id Collection Address backup Owners int topology Id super id topology Id backup Owners Collections synchronized Set new Hash Set backup Owners Override public boolean Pending Backup Acks return backup Owners Empty Override public void Members Change Collection Address members backup Owners retain members backup Owners Empty primary Result Received trace log tracef Collector backups left cluster id mark Ready Override public void primary Result Object result boolean success primary Result result primary Result Received true success backup Owners Empty mark Ready void backup Ack int topology Id Address trace log tracef Collector Backup Address Topology Id expected id topology Id topology Id Wrong Topology Done topology Id return backup Owners remove backup Owners Empty primary Result Received mark Ready private void mark Ready trace log tracef Collector Ready id future complete primary Result private class Multi Key Collector extends Base Collector Map Object Object Guarded private final Map Address Collection Integer backups Multi Key Collector long id Map Address Collection Integer backups int topology Id super id topology Id backups backups Override public synchronized boolean Pending Backup Acks return backups Empty Override public synchronized void Members Change Collection Address members backups key Set retain members trace log tracef Collector backups left cluster id check Completed Override public void primary Result Map Object Object result boolean success primary Result result primary Result Received true synchronized check Completed void backup Ack Address int segment int topology Id trace log tracef Collector Put Map Backup Address Topology Id expected Segment id topology Id topology Id segment Wrong Topology Done topology Id return synchronized Collection Integer pending Segments backups get Default Collections empty List pending Segments remove segment pending Segments Empty backups remove check Completed Guarded private void check Completed primary Result Received backups Empty trace log tracef Collector Ready Return value ss id primary Result future complete primary Result
package org commands import java io Exception import java io Object Input import java io Object Output import java util Objects import java util concurrent atomic Atomic Long import org remoting transport Address Represents unique identified non transaction write commands p used lock key specific command p class final prevent issues usually marshalled polymorphic object directly using link write Object Output Command Invocation Id link read Object Input author Pedro Ruivo since public final class Command Invocation Id public static final Command Invocation Id new Command Invocation Id null private static final Atomic Long next Id new Atomic Long private final Address address private final long id private Command Invocation Id Address address long id address address id id public static Command Invocation Id generate Id Address address return new Command Invocation Id address next Id get Increment public static Command Invocation Id generate Id Command Invocation Id command Invocation Id return new Command Invocation Id command Invocation Id address next Id get Increment public static void write Object Output output Command Invocation Id command Invocation Id throws Exception output write Object command Invocation Id address output write Long command Invocation Id id public static Command Invocation Id read Object Input input throws Class Found Exception Exception Address address Address input read Object long id input read Long return new Command Invocation Id address id public long get Id return id Override public boolean equals Object return true null get Class get Class return false Command Invocation Id Command Invocation Id return id id address null address equals address address null public Address get Address return address Override public int hash Code int result address null address hash Code result result int id id return result Override public String String return Command Invocation Objects String address local id public static String show Command Invocation Id id return id id String
package org commands import static org xsite Site Admin Command Admin Operation import static org xsite statetransfer Site State Transfer Control Command State Transfer Control import java util Collection import java util List import java util Map import java util Set import java util import java util concurrent Callable import java util function Bi Consumer import java util function Bi Function import java util function Consumer import java util function Function import javax transaction xa Xid import org Cache import org commands control Lock Control Command import org commands functional Abstract Write Key Command import org commands functional Abstract Write Many Command import org commands functional Read Key Command import org commands functional Read Many Command import org commands functional Read Write Key Command import org commands functional Read Write Key Value Command import org commands functional Read Write Many Command import org commands functional Read Write Many Entries Command import org commands functional Tx Read Key Command import org commands functional Tx Read Many Command import org commands functional Write Key Command import org commands functional Write Key Value Command import org commands functional Write Many Command import org commands functional Write Many Entries Command import org commands module Module Command Initializer import org commands read Distributed Execute Command import org commands read Entry Set Command import org commands read Get Command import org commands read Get Cache Entry Command import org commands read Get Key Value Command import org commands read Key Set Command import org commands read Size Command import org commands remote Clustered Get Command import org commands remote Clustered Get Command import org commands remote Get Keys Group Command import org commands remote Single Rpc Command import org commands remote recovery Complete Transaction Command import org commands remote recovery Get Doubt Transactions Command import org commands remote recovery Get Doubt Tx Info Command import org commands remote recovery Tx Completion Notification Command import org commands tx Commit Command import org commands tx Prepare Command import org commands tx Rollback Command import org commands tx Versioned Commit Command import org commands tx Versioned Prepare Command import org commands tx totalorder Total Order Commit Command import org commands tx totalorder Total Order Non Versioned Prepare Command import org commands tx totalorder Total Order Rollback Command import org commands tx totalorder Total Order Versioned Commit Command import org commands tx totalorder Total Order Versioned Prepare Command import org commands write Backup Ack Command import org commands write Backup Multi Key Ack Command import org commands write Backup Put Map Rpc Command import org commands write Backup Write Rpc Command import org commands write Clear Command import org commands write Compute Command import org commands write Compute Absent Command import org commands write Data Write Command import org commands write Evict Command import org commands write Exception Ack Command import org commands write Invalidate Command import org commands write Invalidate Command import org commands write Invalidate Versions Command import org commands write Put Key Value Command import org commands write Put Map Command import org commands write Remove Command import org commands write Remove Expired Command import org commands write Replace Command import org commands write Value Matcher import org commands write Write Command import org commons marshall Externalizer import org commons marshall Lambda Externalizer import org commons marshall Serialize Function import org commons marshall Streaming Marshaller import org commons util Enum Util import org configuration cache Configuration import org conflict impl State Receiver import org container Data Container import org container Internal Entry Factory import org context Invocation Context Factory import org context impl Flag Bit Sets import org distribution Distribution Manager import org distribution group impl Group Manager import org encoding Data Conversion import org factories Component Registry import org factories Known Component Names import org factories annotations Component Name import org factories annotations Inject import org factories annotations Start import org functional Entry View Read Entry View import org functional Entry View Read Write Entry View import org functional Entry View Write Entry View import org functional impl Params import org interceptors Async Interceptor Chain import org interceptors locking Clustering Dependent Logic import org marshall core Global Marshaller import org metadata Metadata import org notifications cachelistener Cache Notifier import org persistence manager Ordered Updates Manager import org remoting transport Address import org statetransfer State Chunk import org statetransfer State Consumer import org statetransfer State Provider import org statetransfer State Request Command import org statetransfer State Response Command import org statetransfer State Transfer Lock import org statetransfer State Transfer Manager import org stream impl Cluster Stream Manager import org stream impl Local Stream Manager import org stream impl Stream Request Command import org stream impl Stream Response Command import org stream impl Stream Segment Response Command import org transaction impl Transaction Table import org transaction xa Global Transaction import org transaction xa recovery Recovery Manager import org util Byte String import org util concurrent Command Ack Collector import org util concurrent locks Lock Manager import org util logging Log import org util logging Log Factory import org xsite Backup Sender import org xsite Single Site Rpc Command import org xsite Site Admin Command import org xsite statetransfer Site State import org xsite statetransfer Site State Consumer import org xsite statetransfer Site State Provider import org xsite statetransfer Site State Push Command import org xsite statetransfer Site State Transfer Control Command import org xsite statetransfer Site State Transfer Manager author Mircea Markus jboss com author Galder Zamarre author Sanne Grinovero sanne hibernate org Red Hat Inc since public class Commands Factory Impl implements Commands Factory private static final Log log Log Factory get Log Commands Factory Impl class private static final boolean trace log Trace Enabled private Data Container data Container private Cache Notifier Object Object notifier private Cache Object Object cache private Byte String cache Name private boolean transactional private boolean total Order Protocol private Async Interceptor Chain interceptor Chain private Distribution Manager distribution Manager private Invocation Context Factory icf private Transaction Table tx Table private Configuration configuration private Recovery Manager recovery Manager private State Provider state Provider private State Consumer state Consumer private Lock Manager lock Manager private Internal Entry Factory entry Factory private State Transfer Manager state Transfer Manager private Backup Sender backup Sender private Cancellation Service cancellation Service private Site State Provider x Site State Provider private Site State Consumer x Site State Consumer private Site State Transfer Manager x Site State Transfer Manager private Group Manager group Manager private Local Stream Manager local Stream Manager private Cluster Stream Manager cluster Stream Manager private Clustering Dependent Logic clustering Dependent Logic private Command Ack Collector command Ack Collector private State Receiver state Receiver private Component Registry component Registry private Ordered Updates Manager ordered Updates Manager private State Transfer Lock state Transfer Lock private Map Byte Module Command Initializer module Command Initializers private Streaming Marshaller marshaller Inject public void setup Dependencies Data Container container Cache Notifier Object Object notifier Cache Object Object cache Async Interceptor Chain interceptor Chain Distribution Manager distribution Manager Invocation Context Factory icf Transaction Table tx Table Configuration configuration Component Name Known Component Names Map Byte Module Command Initializer module Command Initializers Recovery Manager recovery Manager State Provider state Provider State Consumer state Consumer Lock Manager lock Manager Internal Entry Factory entry Factory State Transfer Manager stm Backup Sender backup Sender Cancellation Service cancellation Service Site State Provider x Site State Provider Site State Consumer x Site State Consumer Site State Transfer Manager x Site State Transfer Manager Group Manager group Manager Local Stream Manager local Stream Manager Cluster Stream Manager cluster Stream Manager Clustering Dependent Logic clustering Dependent Logic Streaming Marshaller marshaller Command Ack Collector command Ack Collector State Receiver state Receiver Component Registry component Registry Ordered Updates Manager ordered Updates Manager State Transfer Lock state Transfer Lock data Container container notifier notifier cache cache interceptor Chain interceptor Chain distribution Manager distribution Manager icf icf tx Table tx Table configuration configuration module Command Initializers module Command Initializers recovery Manager recovery Manager state Provider state Provider state Consumer state Consumer lock Manager lock Manager entry Factory entry Factory state Transfer Manager stm backup Sender backup Sender cancellation Service cancellation Service x Site State Consumer x Site State Consumer x Site State Provider x Site State Provider x Site State Transfer Manager x Site State Transfer Manager group Manager group Manager local Stream Manager local Stream Manager cluster Stream Manager cluster Stream Manager clustering Dependent Logic clustering Dependent Logic marshaller marshaller command Ack Collector command Ack Collector state Receiver state Receiver component Registry component Registry ordered Updates Manager ordered Updates Manager state Transfer Lock state Transfer Lock Start priority needs happen early public void start cache Name Byte String String cache get Name transactional configuration transaction transaction Mode Transactional total Order Protocol configuration transaction transaction Protocol Total Order Override public Put Key Value Command build Put Key Value Command Object key Object value Metadata metadata long flags Bit Set boolean really Transactional transactional Enum Util contains flags Bit Set Flag Bit Sets return new Put Key Value Command key value false notifier metadata flags Bit Set generate really Transactional Override public Remove Command build Remove Command Object key Object value long flags Bit Set return new Remove Command key value notifier flags Bit Set generate transactional Override public Invalidate Command build Invalidate Command long flags Bit Set Object keys State Consumer Impl always uses non tx invalidation return new Invalidate Command notifier flags Bit Set generate false keys Override public Invalidate Command build Invalidate Command long flags Bit Set Collection Object keys State Consumer Impl always uses non tx invalidation return new Invalidate Command data Container distribution Manager notifier flags Bit Set keys generate transactional Override public Invalidate Command build Invalidate Command Address origin long flags Bit Set Collection Object keys invalidation always non transactional return new Invalidate Command origin data Container distribution Manager notifier flags Bit Set keys generate false Override public Remove Expired Command build Remove Expired Command Object key Object value Long lifespan return new Remove Expired Command key value lifespan notifier generate transactional Override public Replace Command build Replace Command Object key Object old Value Object new Value Metadata metadata long flags Bit Set return new Replace Command key old Value new Value notifier metadata flags Bit Set generate transactional Override public Compute Command build Compute Command Object key Bi Function mapping Function boolean compute Present Metadata metadata long flags Bit Set return new Compute Command key mapping Function compute Present flags Bit Set generate transactional metadata notifier component Registry Override public Compute Absent Command build Compute Absent Command Object key Function mapping Function Metadata metadata long flags Bit Set return new Compute Absent Command key mapping Function flags Bit Set generate transactional metadata notifier component Registry Override public Size Command build Size Command long flags Bit Set return new Size Command cache flags Bit Set Override public Key Set Command build Key Set Command long flags Bit Set return new Key Set Command cache flags Bit Set Override public Entry Set Command build Entry Set Command long flags Bit Set return new Entry Set Command cache flags Bit Set Override public Get Key Value Command build Get Key Value Command Object key long flags Bit Set return new Get Key Value Command key flags Bit Set Override public Get Command build Get Command Collection keys long flags Bit Set boolean return Entries return new Get Command keys flags Bit Set return Entries entry Factory Override public Put Map Command build Put Map Command Map map Metadata metadata long flags Bit Set return new Put Map Command map notifier metadata flags Bit Set generate transactional Override public Clear Command build Clear Command long flags Bit Set return new Clear Command notifier data Container flags Bit Set Override public Evict Command build Evict Command Object key long flags Bit Set return new Evict Command key notifier flags Bit Set generate transactional entry Factory Override public Prepare Command build Prepare Command Global Transaction gtx List Write Command modifications boolean one Phase Commit return total Order Protocol new Total Order Non Versioned Prepare Command cache Name gtx modifications new Prepare Command cache Name gtx modifications one Phase Commit Override public Versioned Prepare Command build Versioned Prepare Command Global Transaction gtx List Write Command modifications boolean one Phase return total Order Protocol new Total Order Versioned Prepare Command cache Name gtx modifications one Phase new Versioned Prepare Command cache Name gtx modifications one Phase Override public Commit Command build Commit Command Global Transaction gtx return total Order Protocol new Total Order Commit Command cache Name gtx new Commit Command cache Name gtx Override public Versioned Commit Command build Versioned Commit Command Global Transaction gtx return total Order Protocol new Total Order Versioned Commit Command cache Name gtx new Versioned Commit Command cache Name gtx Override public Rollback Command build Rollback Command Global Transaction gtx return total Order Protocol new Total Order Rollback Command cache Name gtx new Rollback Command cache Name gtx Override public Single Rpc Command build Single Rpc Command Replicable Command call return new Single Rpc Command cache Name call Override public Clustered Get Command build Clustered Get Command Object key long flags Bit Set return new Clustered Get Command key cache Name flags Bit Set param Remote true command deserialized executed remote Override public void initialize Replicable Command Replicable Command c boolean Remote c null return switch c get Command Id case Put Key Value Command Put Key Value Command c init notifier break case Replace Command Replace Command c init notifier break case Put Map Command Put Map Command c init notifier break case Remove Command Remove Command c init notifier break case Compute Command Compute Command c init notifier component Registry break case Compute Absent Command Compute Absent Command c init notifier component Registry break case Single Rpc Command Single Rpc Command src Single Rpc Command c src init interceptor Chain icf src get Command null initialize Replicable Command src get Command false break case Invalidate Command Invalidate Command ic Invalidate Command c ic init notifier break case Invalidate Command Invalidate Command ilc Invalidate Command c ilc init distribution Manager notifier data Container break case Prepare Command case Versioned Prepare Command case Total Order Non Versioned Prepare Command case Total Order Versioned Prepare Command Prepare Command pc Prepare Command c pc init interceptor Chain icf tx Table pc initialize notifier recovery Manager pc get Modifications null Replicable Command nested pc get Modifications initialize Replicable Command nested false pc mark Transaction Remote Remote break case Commit Command case Versioned Commit Command case Total Order Commit Command case Total Order Versioned Commit Command Commit Command commit Command Commit Command c commit Command init interceptor Chain icf tx Table commit Command mark Transaction Remote Remote break case Rollback Command case Total Order Rollback Command Rollback Command rollback Command Rollback Command c rollback Command init interceptor Chain icf tx Table rollback Command mark Transaction Remote Remote break case Clear Command Clear Command cc Clear Command c cc init notifier data Container break case Clustered Get Command Clustered Get Command clustered Get Command Clustered Get Command c clustered Get Command initialize icf entry Factory interceptor Chain break case Lock Control Command Lock Control Command lcc Lock Control Command c lcc init interceptor Chain icf tx Table lcc mark Transaction Remote Remote break case State Request Command State Request Command c init state Provider break case State Response Command State Response Command c init state Consumer state Receiver break case Get Doubt Transactions Command Get Doubt Transactions Command gptx Get Doubt Transactions Command c gptx init recovery Manager break case Tx Completion Notification Command Tx Completion Notification Command ftx Tx Completion Notification Command c ftx init tx Table lock Manager recovery Manager state Transfer Manager break case Distributed Execute Command Distributed Execute Command dec Distributed Execute Command c dec init cache break case Get Doubt Tx Info Command Get Doubt Tx Info Command gid Tx Info Command Get Doubt Tx Info Command c gid Tx Info Command init recovery Manager break case Complete Transaction Command Complete Transaction Command ccc Complete Transaction Command c ccc init recovery Manager break case Create Cache Command Create Cache Command create Cache Command Create Cache Command c create Cache Command init cache get Cache Manager break case Site Admin Command Site Admin Command x Site Admin Command Site Admin Command c x Site Admin Command init backup Sender break case Cancel Command Cancel Command cancel Command Cancel Command c cancel Command init cancellation Service break case Site State Transfer Control Command Site State Transfer Control Command x Site State Transfer Control Command Site State Transfer Control Command c x Site State Transfer Control Command initialize x Site State Provider x Site State Consumer x Site State Transfer Manager break case Site State Push Command Site State Push Command x Site State Push Command Site State Push Command c x Site State Push Command initialize x Site State Consumer break case Get Keys Group Command Get Keys Group Command get Keys Group Command Get Keys Group Command c get Keys Group Command set Group Manager group Manager break case Clustered Get Command Clustered Get Command clustered Get Command Clustered Get Command c clustered Get Command init icf entry Factory interceptor Chain tx Table break case Stream Request Command Stream Request Command stream Request Command Stream Request Command c stream Request Command inject local Stream Manager break case Stream Response Command Stream Response Command stream Response Command Stream Response Command c stream Response Command inject cluster Stream Manager break case Stream Segment Response Command Stream Segment Response Command stream Segment Response Command Stream Segment Response Command c stream Segment Response Command inject cluster Stream Manager break case Remove Expired Command Remove Expired Command remove Expired Command Remove Expired Command c remove Expired Command init notifier break case Backup Ack Command Backup Ack Command command Backup Ack Command c command set Command Ack Collector command Ack Collector break case Backup Write Rpc Command Backup Write Rpc Command bwc Backup Write Rpc Command c bwc init icf interceptor Chain notifier component Registry break case Backup Multi Key Ack Command Backup Multi Key Ack Command c set Command Ack Collector command Ack Collector break case Exception Ack Command Exception Ack Command c set Command Ack Collector command Ack Collector break case Backup Put Map Rpc Command Backup Put Map Rpc Command c init icf interceptor Chain notifier break case Invalidate Versions Command Invalidate Versions Command invalidate Versions Command Invalidate Versions Command c invalidate Versions Command init data Container ordered Updates Manager state Transfer Lock state Transfer Manager break Functional commands case Read Key Command case Tx Read Key Command Read Key Command c init component Registry break case Read Many Command case Tx Read Many Command Read Many Command c init component Registry break case Read Write Key Command case Read Write Key Value Command case Write Key Command case Write Key Value Command Abstract Write Key Command c init component Registry break case Read Write Many Command case Read Write Many Entries Command case Write Many Command case Write Many Entries Command Abstract Write Many Command c init component Registry break default Module Command Initializer mci module Command Initializers get c get Command Id mci null mci initialize Replicable Command c Remote else trace log tracef Nothing initialize command c Override public Lock Control Command build Lock Control Command Collection keys long flags Bit Set Global Transaction gtx return new Lock Control Command keys cache Name flags Bit Set gtx Override public Lock Control Command build Lock Control Command Object key long flags Bit Set Global Transaction gtx return new Lock Control Command key cache Name flags Bit Set gtx Override public Lock Control Command build Lock Control Command Collection keys long flags Bit Set return new Lock Control Command keys cache Name flags Bit Set null Override public State Request Command build State Request Command State Request Command Type subtype Address sender int topology Id Set Integer segments return new State Request Command cache Name subtype sender topology Id segments Override public State Response Command build State Response Command Address sender int topology Id Collection State Chunk state Chunks boolean apply State boolean push Transfer return new State Response Command cache Name sender topology Id state Chunks apply State push Transfer Override public String get Cache Name return cache Name String Override public Get Doubt Transactions Command build Get Doubt Transactions Command return new Get Doubt Transactions Command cache Name Override public Tx Completion Notification Command build Tx Completion Notification Command Xid xid Global Transaction global Transaction return new Tx Completion Notification Command xid global Transaction cache Name Override public Tx Completion Notification Command build Tx Completion Notification Command long internal Id return new Tx Completion Notification Command internal Id cache Name Override public Distributed Execute Command build Distributed Execute Command Callable callable Address sender Collection keys return new Distributed Execute Command cache Name keys callable Override public Get Doubt Tx Info Command build Get Doubt Tx Info Command return new Get Doubt Tx Info Command cache Name Override public Complete Transaction Command build Complete Transaction Command Xid xid boolean commit return new Complete Transaction Command cache Name xid commit Override public Create Cache Command build Create Cache Command String cache Name Create String cache Configuration Name return new Create Cache Command cache Name cache Name Create cache Configuration Name Override public Create Cache Command build Create Cache Command String cache Name Create String cache Configuration Name int size return new Create Cache Command cache Name cache Name Create cache Configuration Name size Override public Cancel Command build Cancel Command Command command return new Cancel Command cache Name command Override public Site State Transfer Control Command build Site State Transfer Control Command State Transfer Control control String site Name return new Site State Transfer Control Command cache Name control site Name Override public Site Admin Command build Site Admin Command String site Name Admin Operation op Integer Failures Long min Time Wait return new Site Admin Command cache Name site Name op Failures min Time Wait Override public Site State Push Command build Site State Push Command Site State chunk long timeout Millis return new Site State Push Command cache Name chunk timeout Millis Override public Single Site Rpc Command build Single Site Rpc Command Visitable Command command return new Single Site Rpc Command cache Name command Override public Get Keys Group Command build Get Keys Group Command long flags Bit Set Object group Name return new Get Keys Group Command flags Bit Set group Name set Group Manager group Manager Override public Stream Request Command build Stream Request Command Object id boolean parallel Stream Stream Request Command Type type Set Integer segments Set keys Set excluded Keys boolean include Loader Object terminal Operation return new Stream Request Command cache Name cache get Cache Manager get Address id parallel Stream type segments keys excluded Keys include Loader terminal Operation Override public Stream Response Command build Stream Response Command Object identifier boolean complete Set Integer lost Segments response lost Segments Empty return new Stream Response Command cache Name cache get Cache Manager get Address identifier complete response else return new Stream Segment Response Command cache Name cache get Cache Manager get Address identifier complete response lost Segments Override public Get Cache Entry Command build Get Cache Entry Command Object key long flags Bit Set return new Get Cache Entry Command key flags Bit Set entry Factory Override public Clustered Get Command build Clustered Get Command List keys long flags Bit Set Global Transaction gtx return new Clustered Get Command cache Name keys flags Bit Set gtx private Command Invocation Id generate boolean tx tx return Command Invocation Id else return Command Invocation Id generate Id clustering Dependent Logic get Address Override public Read Key Command build Read Key Command key Function Read Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Read Key Command key f params key Data Conversion value Data Conversion component Registry Override public Read Many Command build Read Many Command Collection extends keys Function Read Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Read Many Command keys f params key Data Conversion value Data Conversion component Registry Override public Read Write Key Value Command build Read Write Key Value Command key value Bi Function Read Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Read Write Key Value Command key value f generate transactional get Value Matcher f params key Data Conversion value Data Conversion component Registry Override public Read Write Key Command build Read Write Key Command key Function Read Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Read Write Key Command key f generate transactional get Value Matcher f params key Data Conversion value Data Conversion component Registry Override public Read Write Many Command build Read Write Many Command Collection extends keys Function Read Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Read Write Many Command keys f params generate transactional key Data Conversion value Data Conversion component Registry Override public Read Write Many Entries Command build Read Write Many Entries Command Map extends extends entries Bi Function Read Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Read Write Many Entries Command entries f params generate transactional key Data Conversion value Data Conversion component Registry Override public Invalidate Versions Command build Invalidate Versions Command int topology Id Object keys int topology Ids long versions boolean removed return new Invalidate Versions Command cache Name topology Id keys topology Ids versions removed Override public Write Key Command build Write Key Command key Consumer Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Write Key Command key f generate transactional get Value Matcher f params key Data Conversion value Data Conversion component Registry Override public Write Key Value Command build Write Key Value Command key value Bi Consumer Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Write Key Value Command key value f generate transactional get Value Matcher f params key Data Conversion value Data Conversion component Registry Override public Write Many Command build Write Many Command Collection extends keys Consumer Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Write Many Command keys f params generate transactional key Data Conversion value Data Conversion component Registry Override public Write Many Entries Command build Write Many Entries Command Map extends extends entries Bi Consumer Write Entry View f Params params Data Conversion key Data Conversion Data Conversion value Data Conversion return new Write Many Entries Command entries f params generate transactional key Data Conversion value Data Conversion component Registry Override public Backup Ack Command build Backup Ack Command long id int topology Id return new Backup Ack Command cache Name id topology Id Override public Backup Multi Key Ack Command build Backup Multi Key Ack Command long id int segment int topology Id return new Backup Multi Key Ack Command cache Name id segment topology Id Override public Exception Ack Command build Exception Ack Command long id Throwable throwable int topology Id return new Exception Ack Command cache Name id throwable topology Id Override public Backup Write Rpc Command build Backup Write Rpc Command Data Write Command command Backup Write Rpc Command cmd new Backup Write Rpc Command cache Name command init Backup Write Rpc Command cmd return cmd Override public Backup Put Map Rpc Command build Backup Put Map Rpc Command Put Map Command command return new Backup Put Map Rpc Command cache Name command private Value Matcher get Value Matcher Object Serialize Function ann get Class get Annotation Serialize Function class ann null return Value Matcher value ann value Matcher String Externalizer ext Global Marshaller marshaller find Externalizer ext null ext instanceof Lambda Externalizer return Value Matcher value Lambda Externalizer ext value Matcher String return Value Matcher
package org statetransfer import static org commons util Util Str import java util Iterator import java util Map import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import org container Merge Store import org container Data Container import org container entries Cache Entry import org context Flag import org context Invocation Context import org factories annotations Inject import org persistence Persistence Util import org persistence manager Persistence Manager import org util Time Service import org util logging Log import org util logging Log Factory Keeps track keys updated normal operation state transfer Since command processing happens concurrently state transfer needs keep track keys updated normal command order reject updates state transfer assumes keys normal operations recent thant ones received state transfer author Pedro Ruivo since public class Commit Manager private static final Log log Log Factory get Log Commit Manager class private static final boolean trace log Trace Enabled private final Concurrent Map Object Discard Policy tracker new Concurrent Hash Map private Data Container data Container private Persistence Manager persistence Manager private Time Service time Service private volatile boolean track State Transfer private volatile boolean track Site State Transfer Inject public final void inject Data Container data Container Persistence Manager persistence Manager Time Service time Service data Container data Container persistence Manager persistence Manager time Service time Service starts tracking keys committed keys committed flagged flag State transfer received key tracked discarded param track Flag start tracking keys local site state transfer remote site state transfer public final void start Track Flag track set Track track true stops tracking keys committed param track Flag stop tracking keys local site state transfer remote site state transfer public final void stop Track Flag track set Track track false track State Transfer track Site State Transfer trace log tracef Tracking disabled Clear tracker tracker tracker clear else Iterator Map Entry Object Discard Policy iterator tracker entry Set iterator iterator Next iterator next get Value update track State Transfer track Site State Transfer iterator remove tries commit cache entry entry committed originated state transfer operation already updated param entry entry commit param operation code null identifies commit originated normal operation Otherwise param ctx public final void commit final Cache Entry entry final Flag operation boolean l Invocation Context ctx trace log tracef Trying commit Key Operation Flag write invalidation Str entry get Key operation l l operation null track State Transfer track Site State Transfer track null means normal put tracking enabled invalidation commit without track trace log tracef Committing key invalidation normal put tracking enabled Str entry get Key commit Entry entry ctx return Track Disabled operation put state transfer tracking means state transfer ended canceled due clear command trace log tracef committing key state transfer key track enabled Str entry get Key return tracker compute entry get Key discard Policy discard Policy null discard Policy ignore operation trace log tracef committing key already overwritten Discard policy Str entry get Key discard Policy return discard Policy commit Entry entry ctx Discard Policy new Discard Policy calculate Discard Policy operation trace log tracef Committed key Old discard policy New discard policy Str entry get Key discard Policy new Discard Policy return new Discard Policy private void commit Entry Cache Entry entry Invocation Context ctx entry Evicted entry Removed entry get Value instanceof Merge Store Persistence Util load Compute Data Container data Container persistence Manager entry get Key ctx time Service k old Entry factory Object new Value Merge Store entry get Value merge old Entry null null old Entry get Value new Value null return null return factory create k new Value entry get Metadata else entry commit data Container return code true flag tracked code false otherwise public final boolean Tracking Flag track Flag switch track Flag case return track State Transfer case return track Site State Transfer return false return code true keys tracked code false otherwise public final boolean Empty return tracker Empty Override public String String return Commit Manager tracker tracker size key track State Transfer track State Transfer track Site State Transfer track Site State Transfer private void set Track Flag track boolean value trace log tracef Set track track value switch track case track State Transfer value break case track Site State Transfer value break private boolean Track Disabled Flag track return track Flag track State Transfer track Flag track Site State Transfer private Discard Policy calculate Discard Policy Flag operation boolean discard State Transfer track State Transfer operation Flag boolean discard Site State Transfer track Site State Transfer operation Flag discard State Transfer discard Site State Transfer return null return new Discard Policy discard State Transfer discard Site State Transfer private static class Discard Policy private boolean discard private boolean discard Site private Discard Policy boolean discard boolean discard Site discard discard discard Site discard Site public synchronized final boolean ignore Flag operation return discard operation Flag discard Site operation Flag public synchronized boolean update boolean discard boolean discard Site discard discard discard Site discard Site return discard discard Site Override public boolean equals Object return true null get Class get Class return false Discard Policy Discard Policy return discard discard discard Site discard Site Override public int hash Code int result discard result result discard Site return result Override public String String return Discard Policy discard State Transfer discard discard Site State Transfer discard Site
package org configuration cache import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set import org commons marshall Marshaller Compatibility mode configuration author Galder Zamarre since public final class Compatibility Mode Configuration public static final Attribute Definition Boolean Attribute Definition builder enabled false immutable auto Persist false build public static final Attribute Definition Marshaller Attribute Definition builder marshaller null Marshaller class immutable build static Attribute Set attribute Definition Set return new Attribute Set Compatibility Mode Configuration class private final Attribute Boolean enabled private final Attribute Marshaller marshaller private final Attribute Set attributes Compatibility Mode Configuration Attribute Set attributes attributes attributes check Protection enabled attributes attribute marshaller attributes attribute public boolean enabled return enabled get public Marshaller marshaller return marshaller get public Attribute Set attributes return attributes Override public String String return Compatibility Mode Configuration attributes attributes Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Compatibility Mode Configuration Compatibility Mode Configuration obj attributes null attributes null return false else attributes equals attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result
package org configuration cache import static org configuration cache Compatibility Mode Configuration import static org configuration cache Compatibility Mode Configuration import org commons configuration Builder import org commons configuration attributes Attribute Set import org commons marshall Marshaller import org configuration global Global Configuration Compatibility mode configuration builder author Galder Zamarre since public class Compatibility Mode Configuration Builder extends Abstract Configuration Child Builder implements Builder Compatibility Mode Configuration private final Attribute Set attributes Compatibility Mode Configuration Builder Configuration Builder builder super builder attributes Compatibility Mode Configuration attribute Definition Set Enables compatibility mode embedded different remote endpoints Hot Rod Memcached etc public Compatibility Mode Configuration Builder enable attributes attribute set true return Disables compatibility mode embedded public Compatibility Mode Configuration Builder disable attributes attribute set false return public boolean Enabled return attributes attribute get Sets whether compatibility mode enabled disabled param enabled true compatibility mode enabled false disabled public Compatibility Mode Configuration Builder enabled boolean enabled attributes attribute set enabled return Sets marshaller instance used interoperability layer public Compatibility Mode Configuration Builder marshaller Marshaller marshaller attributes attribute set marshaller return public Marshaller marshaller return attributes attribute get Override public void validate op Override public void validate Global Configuration global Config Override public Compatibility Mode Configuration create return new Compatibility Mode Configuration attributes protect Override public Builder read Compatibility Mode Configuration template attributes read template attributes return
package org util concurrent import static java util Objects require Non Null import java util Collections import java util List import java util Map import java util Objects import java util concurrent Completable Future import java util concurrent Completion Exception import java util concurrent Execution Exception import java util concurrent Time Unit import java util stream Collectors Utility methods connecting link Completable Future futures author Dan Berindei since public class Completable Futures private static final Completable Future completed Empty Map Future Completable Future completed Future Collections empty Map private static final Completable Future completed Null Future Completable Future completed Future null private static final long Time Unit Nanos Suppress Warnings unchecked public static Completable Future Map completed Empty Map return completed Empty Map Future Suppress Warnings unchecked public static Completable Future completed Null return completed Null Future public static Completable Future List sequence List Completable Future futures Completable Future Void Completable Future futures Array new Completable Future futures size return Apply v futures stream map Completable Future join collect Collectors List public static Completable Future completed Exception Future Throwable ex Completable Future future new Completable Future future complete Exceptionally ex return future waits link Completable Future completed p ignore link Completable Future completed normally exceptionally param future link Completable Future test param time timeout param unit timeout unit return code true completed code false timed throws Interrupted Exception interrupted waiting throws Null Pointer Exception code future code unit code null public static boolean await Completable Future future long time Time Unit unit throws Interrupted Exception try require Non Null future Completable Future must non null get time require Non Null unit Time Unit must non null return true catch Execution Exception e return true catch java util concurrent Timeout Exception e return false Wait long time link Completable Future completed param future link Completable Future param return type return result value throws Execution Exception link Completable Future completed exceptionally throws Interrupted Exception current thread interrupted waiting public static await Completable Future future throws Execution Exception Interrupted Exception try return Objects require Non Null future Completable Future must non null get Time Unit catch java util concurrent Timeout Exception e throw new Illegal State Exception never happen e public static Completion Exception Completion Exception Throwable instanceof Completion Exception return Completion Exception else return new Completion Exception public static void rethrow Exception Throwable null throw Completion Exception public static Throwable extract Exception Throwable Throwable cause get Cause cause null instanceof Completion Exception return cause return
package org factories import static org factories Known Component Names import java lang ref Weak Reference import java util Collections import java util Map import org Advanced Cache import org cache impl Cache Configuration Bean import org commands Commands Factory import org commands module Module Command Initializer import org commons Cache Configuration Exception import org commons Cache Exception import org commons marshall Streaming Marshaller import org configuration cache Configuration import org conflict impl Internal Conflict Manager import org container versioning Version Generator import org factories annotations Inject import org factories components Component Metadata import org factories components Component Metadata Repo import org lifecycle Component Status import org lifecycle Module Lifecycle import org notifications cachemanagerlistener Cache Manager Notifier import org remoting inboundhandler Per Cache Inbound Invocation Handler import org remoting responses Response Generator import org statetransfer State Transfer Lock import org statetransfer State Transfer Manager import org stats Cluster Cache Stats import org transaction Transaction Table import org util Time Service import org util logging Log import org util logging Log Factory Named cache specific components author Manik Surtani since public class Component Registry extends Abstract Component Registry private final Global Component Registry global Components private final String cache Name private static final Log log Log Factory get Log Component Registry class private Cache Manager Notifier cache Manager Notifier Cached fields private State Transfer Manager state Transfer Manager private Response Generator response Generator private Commands Factory commands Factory private State Transfer Lock state Transfer Lock private Per Cache Inbound Invocation Handler inbound Invocation Handler private Version Generator version Generator protected final Weak Reference Class Loader default Class Loader Inject public void set Cache Manager Notifier Cache Manager Notifier cache Manager Notifier cache Manager Notifier cache Manager Notifier Creates instance component registry configuration passed automatically registered param configuration configuration created param cache cache param global Components Shared Component Registry delegate public Component Registry String cache Name Configuration configuration Advanced Cache cache Global Component Registry global Components Class Loader default Class Loader default Class Loader new Weak Reference default Class Loader try cache Name cache Name cache Name null throw new Cache Configuration Exception Cache name null global Components null throw new Null Pointer Exception Global Component Registry null global Components global Components register Component Component Registry class register Component configuration Configuration class register Component new Bootstrap Factory cache configuration Bootstrap Factory class bootstrap Components register module specific command initializers Modules classloader Map Byte Module Command Initializer initializers global Components get Module Command Initializers initializers null initializers Empty register Non Volatile Component initializers Module Command Initializer mci initializers values register Non Volatile Component mci mci get Class else register Non Volatile Component Collections empty Map catch Exception e throw new Cache Exception Unable construct Component Registry e Override protected Class Loader get Class Loader return default Class Loader get Override protected Log get Log return log Override Suppress Warnings unchecked public final get Component String component Type Name String name boolean name Global component Type Name name name return global Components get Component component Type Name name name else return get Local Component component Type Name name name Suppress Warnings unchecked public final get Local Component String component Type Name String name boolean name return super get Component component Type Name name name Suppress Warnings unchecked public final get Local Component Class component Type String component Type Name component Type get Name return get Local Component component Type Name component Type Name true Override protected final Component lookup Component String component Class Name String name boolean name Global component Class Name name name log tracef Looking global component component Class Name return global Components lookup Component component Class Name name name else log tracef Looking local component component Class Name return lookup Local Component component Class Name name name protected final Component lookup Local Component String component Class Name String name boolean name return super lookup Component component Class Name name name public final Global Component Registry get Global Component Registry return global Components Override protected final get Create Component Class component Class String name boolean name Global component Class get Name name name log tracef Get create global component component Class return global Components get Create Component component Class name name else log tracef Get create local component component Class return super get Create Component component Class name name private boolean Global String component Class Name String name boolean name return Global name name component Class Name Override protected Abstract Component Factory get Factory Class component Class String cf Class get Component Metadata Repo find Factory Component component Class cf Class null throw Stack Aware Configuration Exception registered default factory component component Class found Abstract Component Factory cf Global cf Class log tracef Looking global factory component component Class cf global Components get Factory component Class else log tracef Looking local factory component component Class cf super get Factory component Class return cf Override protected final void register Component Internal Object component String name boolean name Global component get Class get Name name name global Components register Component Internal component name name else super register Component Internal component name name Override protected Abstract Component Factory create Component Factory Internal Class component Class String cf Class Global cf Class return global Components create Component Factory Internal component Class cf Class return super create Component Factory Internal component Class cf Class private boolean Global String class Name Component Metadata get Component Metadata Repo find Component Metadata class Name return null Global Scope Override public void start global Components start boolean need Notify state Component Status state Component Status stop existing components transition state need Destroy Failed Cache stop rewire non volatile components transition state need Initialize Start state Component Status rewire nothing cache already running state start Allowed return set starting components since components specifically state transfer needs able locate registry via Inbound Invocation Handler cache Components global Components register Named Component Registry cache Name notify Cache Starting get Component Configuration class super start super post Start need Notify state Component Status cache Manager Notifier notify Cache Started cache Name void notify Cache Starting Configuration configuration Module Lifecycle l global Components module Lifecycles l cache Starting configuration cache Name Override public void stop state stop Allowed global Components unregister Named Component Registry cache Name boolean need Notify state Component Status state Component Status need Notify Module Lifecycle l global Components module Lifecycles log Trace Enabled log tracef Invoking cache Stopping l l cache Stopping cache Name super stop state Component Status need Notify Module Lifecycle l global Components module Lifecycles log Trace Enabled log tracef Invoking cache Stopped l l cache Stopped cache Name cache Manager Notifier notify Cache Stopped cache Name Override public Time Service get Time Service return global Components get Time Service public String get Cache Name return cache Name Caching shortcut get Component Streaming Marshaller class Known Component Names public Streaming Marshaller get Cache Marshaller return global Components get Component Streaming Marshaller class Caching shortcut get Component State Transfer Manager class public State Transfer Manager get State Transfer Manager return state Transfer Manager Caching shortcut get Component Response Generator class public Response Generator get Response Generator return response Generator Caching shortcut get Local Component Commands Factory class public Commands Factory get Commands Factory return commands Factory Caching shortcut get Component State Transfer Manager class public State Transfer Lock get State Transfer Lock return state Transfer Lock Caching shortcut get Local Component Version Generator class public Version Generator get Version Generator return version Generator Caching shortcut get Component Per Cache Inbound Invocation Handler class public Per Cache Inbound Invocation Handler get Per Cache Inbound Invocation Handler return inbound Invocation Handler Invoked link Bootstrap Factory registered link Module Command Initializer good place register components n dependency protected void bootstrap Components Invoked last services wired public void cache Components state Transfer Manager get Create Component State Transfer Manager class response Generator get Create Component Response Generator class commands Factory get Local Component Commands Factory class state Transfer Lock get Create Component State Transfer Lock class inbound Invocation Handler get Create Component Per Cache Inbound Invocation Handler class version Generator get Create Component Version Generator class get Create Component Cluster Cache Stats class need save ref field initialize component get Create Component Cache Configuration Bean class get Create Component Internal Conflict Manager class Override public Component Metadata Repo get Component Metadata Repo return global Components get Component Metadata Repo public final Transaction Table get Transaction Table return get Component org transaction impl Transaction Table class
package org jmx import java util Array List import java util List import java util Set import javax management Bean Server import javax management Object Name import org commons Cache Exception import org factories Abstract Component Registry import org factories Component Registry import org factories components Component Metadata import org util logging Log import org util logging Log Factory Registers set components Bean server author Mircea Markus jboss com author Galder Zamarre since public class Components Jmx Registration private static final Log log Log Factory get Log Components Jmx Registration class private Bean Server Bean Server private String jmx Domain private String group Name private Set Abstract Component Registry Component components public static String component public static String name tor param Bean Server server mbeans registered param components components param group Name name jmx group name see java lang management Management Factory get Platform Bean Server see href http java sun com j se docs guide management mxbeans html mbean server platform Bean Server public Components Jmx Registration Bean Server Bean Server Set Abstract Component Registry Component components String group Name Bean Server Bean Server components components group Name group Name public void set Jmx Domain String jmx Domain jmx Domain jmx Domain Performs Bean registration public void register Beans throws Cache Exception try List Resource Bean resource Beans get Resource Beans Components Resource Bean resource resource Beans Jmx Util register Bean resource get Object Name resource Bean Server catch Exception e throw new Cache Exception Failure registering mbeans e Unregisters Beans registered link register Beans public void unregister Beans throws Cache Exception log trace Unregistering jmx resources try List Resource Bean resource Beans get Resource Beans Components Resource Bean resource resource Beans Jmx Util unregister Bean get Object Name resource Bean Server catch Exception e throw new Cache Exception Failure unregistering mbeans e private List Resource Bean get Resource Beans Components throws Field Exception Class Found Exception List Resource Bean resource Beans new Array List Resource Bean components size Component Registry Component component components Component Metadata md component get Metadata md Manageable Resource Bean resource Bean new Resource Bean component get Instance md Manageable Component Metadata resource Beans add resource Bean return resource Beans private Object Name get Object Name Resource Bean resource throws Exception return get Object Name resource get Object Name protected Object Name get Object Name String resource Name throws Exception return new Object Name get Object Name jmx Domain group Name resource Name public static String get Object Name String jmx Domain String group Name String resource Name return jmx Domain group Name resource Name
package org lifecycle import org util logging Log import org util logging Log Factory Different states component may author Manik Surtani see org commons api Lifecycle since public enum Component Status Object instantiated start called code start code method called yet completed code start code method completed component running code stop code method called yet completed code stop code method completed component terminated component failed state due problem one lifecycle transition phases private static final Log log Log Factory get Log Component Status class public boolean need Destroy Failed Cache return Component Status public boolean start Allowed switch case return true default return false public boolean need Initialize Start switch case return true default return false public boolean stop Allowed switch case case case case return false default return true public boolean allow Invocations return Component Status public boolean starting return Component Status Component Status public boolean Terminated return Component Status public boolean Stopping return Component Status
package org filter import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org factories Component Registry import org factories annotations Inject import org marshall core Ids Allows composing several filters author Mircea Markus since public class Composite Key Filter implements Key Filter private final Key Filter super filters public Composite Key Filter Key Filter super filters filters filters Override public boolean accept key Key Filter super k filters k accept key return false return true Inject protected void inject Dependencies Component Registry cr Key Filter super f filters cr wire Dependencies f public static class Externalizer extends Abstract Externalizer Composite Key Filter Override public Set Class extends Composite Key Filter get Type Classes return Collections singleton Composite Key Filter class Override public void write Object Object Output output Composite Key Filter object throws Exception Unsigned Numeric write Unsigned Int output object filters length Key Filter filter object filters output write Object filter Override public Composite Key Filter read Object Object Input input throws Exception Class Found Exception int filters Size Unsigned Numeric read Unsigned Int input Key Filter filters new Key Filter filters Size int filters Size filters Key Filter input read Object return new Composite Key Filter filters Override public Integer get Id return Ids
package org filter import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org factories Component Registry import org factories annotations Inject import org marshall core Ids import org metadata Metadata Allows composing several key value filters author wburns since public class Composite Key Value Filter implements Key Value Filter private final Key Value Filter super super filters public Composite Key Value Filter Key Value Filter super super filters filters filters Override public boolean accept key value Metadata metadata Key Value Filter super super filter filters filter accept key value metadata return false return true Inject protected void inject Dependencies Component Registry cr Key Value Filter super super f filters cr wire Dependencies f public static class Externalizer extends Abstract Externalizer Composite Key Value Filter Override public Set Class extends Composite Key Value Filter get Type Classes return Collections singleton Composite Key Value Filter class Override public void write Object Object Output output Composite Key Value Filter object throws Exception Unsigned Numeric write Unsigned Int output object filters length Key Value Filter filter object filters output write Object filter Override public Composite Key Value Filter read Object Object Input input throws Exception Class Found Exception int filters Size Unsigned Numeric read Unsigned Int input Key Value Filter filters new Key Value Filter filters Size int filters Size filters Key Value Filter input read Object return new Composite Key Value Filter filters Override public Integer get Id return Ids
package org client hotrod configuration import java lang ref Weak Reference import java util Arrays import java util Collections import java util List import java util Map import java util Properties import org client hotrod Protocol Version import org client hotrod impl Configuration Properties import org client hotrod impl consistenthash Consistent Hash import org client hotrod impl transport Transport Factory import org client hotrod impl transport tcp Failover Request Balancing Strategy import org commons configuration Built import org commons marshall Marshaller import org commons util Typed Properties Configuration author Tristan Tarrant since Built Configuration Builder class public class Configuration private final Executor Factory Configuration async Executor Factory private final Class extends Failover Request Balancing Strategy balancing Strategy Class private final Failover Request Balancing Strategy balancing Strategy private final Weak Reference Class Loader class Loader private final Client Intelligence client Intelligence private final Connection Pool Configuration connection Pool private final int connection Timeout private final Class extends Consistent Hash consistent Hash Impl private final boolean force Return Values private final int key Size Estimate private final Class extends Marshaller marshaller Class private final Marshaller marshaller private final Protocol Version protocol Version private final List Server Configuration servers private final int socket Timeout private final Security Configuration security private final boolean tcp Delay private final boolean tcp Keep Alive private final Class extends Transport Factory transport Factory private final int value Size Estimate private final int max Retries private final Near Cache Configuration near Cache private final List Cluster Configuration clusters private final List String serial Whitelist private final int batch Size Configuration Executor Factory Configuration async Executor Factory Class extends Failover Request Balancing Strategy balancing Strategy Class Failover Request Balancing Strategy balancing Strategy Class Loader class Loader Client Intelligence client Intelligence Connection Pool Configuration connection Pool int connection Timeout Class extends Consistent Hash consistent Hash Impl boolean force Return Values int key Size Estimate Marshaller marshaller Class extends Marshaller marshaller Class Protocol Version protocol Version List Server Configuration servers int socket Timeout Security Configuration security boolean tcp Delay boolean tcp Keep Alive Class extends Transport Factory transport Factory int value Size Estimate int max Retries Near Cache Configuration near Cache List Cluster Configuration clusters List String serial Whitelist int batch Size async Executor Factory async Executor Factory balancing Strategy Class balancing Strategy Class balancing Strategy balancing Strategy max Retries max Retries class Loader new Weak Reference class Loader client Intelligence client Intelligence connection Pool connection Pool connection Timeout connection Timeout consistent Hash Impl consistent Hash Impl force Return Values force Return Values key Size Estimate key Size Estimate marshaller Class marshaller Class marshaller marshaller protocol Version protocol Version servers Collections unmodifiable List servers socket Timeout socket Timeout security security tcp Delay tcp Delay tcp Keep Alive tcp Keep Alive transport Factory transport Factory value Size Estimate value Size Estimate near Cache near Cache clusters clusters serial Whitelist serial Whitelist batch Size batch Size public Executor Factory Configuration async Executor Factory return async Executor Factory public Class extends Failover Request Balancing Strategy balancing Strategy Class return balancing Strategy Class public Failover Request Balancing Strategy balancing Strategy return balancing Strategy Deprecated public Class Loader class Loader return class Loader get public Client Intelligence client Intelligence return client Intelligence public Connection Pool Configuration connection Pool return connection Pool public int connection Timeout return connection Timeout public Class extends Consistent Hash consistent Hash Impl return Arrays copy consistent Hash Impl consistent Hash Impl length public Class extends Consistent Hash consistent Hash Impl int version return consistent Hash Impl version public boolean force Return Values return force Return Values public int key Size Estimate return key Size Estimate public Marshaller marshaller return marshaller public Class extends Marshaller marshaller Class return marshaller Class public Near Cache Configuration near Cache return near Cache deprecated Use link Configuration version instead Deprecated public String protocol Version return protocol Version String public Protocol Version version return protocol Version public List Server Configuration servers return servers public List Cluster Configuration clusters return clusters public int socket Timeout return socket Timeout public Security Configuration security return security public boolean tcp Delay return tcp Delay public boolean tcp Keep Alive return tcp Keep Alive public Class extends Transport Factory transport Factory return transport Factory public int value Size Estimate return value Size Estimate public int max Retries return max Retries public List String serial Whitelist return serial Whitelist public int batch Size return batch Size Override public String String return Configuration async Executor Factory async Executor Factory balancing Strategy Class balancing Strategy Class balancing Strategy balancing Strategy class Loader class Loader client Intelligence client Intelligence connection Pool connection Pool connection Timeout connection Timeout consistent Hash Impl Arrays String consistent Hash Impl force Return Values force Return Values key Size Estimate key Size Estimate marshaller Class marshaller Class marshaller marshaller protocol Version protocol Version servers servers socket Timeout socket Timeout security security tcp Delay tcp Delay tcp Keep Alive tcp Keep Alive transport Factory transport Factory value Size Estimate value Size Estimate max Retries max Retries serial White List serial Whitelist batch Size batch Size near Cache near Cache public Properties properties Properties properties new Properties async Executor Factory factory Class null properties set Property Configuration Properties async Executor Factory factory Class get Name Typed Properties aef Props async Executor Factory properties String key Arrays List Configuration Properties Configuration Properties aef Props contains Key key properties set Property key aef Props get Property key properties set Property Configuration Properties balancing Strategy Class get Name properties set Property Configuration Properties client Intelligence name properties set Property Configuration Properties Integer String connection Timeout int consistent Hash Impl length int version consistent Hash Impl version null properties set Property Configuration Properties version consistent Hash Impl version get Name properties set Property Configuration Properties Boolean String force Return Values properties set Property Configuration Properties Integer String key Size Estimate properties set Property Configuration Properties marshaller Class get Name properties set Property Configuration Properties version String properties set Property Configuration Properties Integer String socket Timeout properties set Property Configuration Properties Boolean String tcp Delay properties set Property Configuration Properties Boolean String tcp Keep Alive properties set Property Configuration Properties transport Factory get Name properties set Property Configuration Properties Integer String value Size Estimate properties set Property Configuration Properties Integer String max Retries properties set Property exhausted Action Integer String connection Pool exhausted Action ordinal properties set Property max Active Integer String connection Pool max Active properties set Property max Total Integer String connection Pool max Total properties set Property max Wait Long String connection Pool max Wait properties set Property max Idle Integer String connection Pool max Idle properties set Property min Idle Integer String connection Pool min Idle properties set Property num Tests Per Eviction Run Integer String connection Pool num Tests Per Eviction Run properties set Property min Evictable Idle Time Millis Long String connection Pool min Evictable Idle Time properties set Property time Eviction Runs Millis Long String connection Pool time Eviction Runs properties set Property lifo Boolean String connection Pool lifo properties set Property test Borrow Boolean String connection Pool test Borrow properties set Property test Return Boolean String connection Pool test Return properties set Property test Idle Boolean String connection Pool test Idle String Builder servers new String Builder Server Configuration server servers servers length servers append servers append server host append append server port properties set Property Configuration Properties servers String properties set Property Configuration Properties Boolean String security ssl enabled security ssl key Store File Name null properties set Property Configuration Properties security ssl key Store File Name security ssl key Store Password null properties set Property Configuration Properties new String security ssl key Store Password security ssl key Store Certificate Password null properties set Property Configuration Properties new String security ssl key Store Certificate Password security ssl trust Store File Name null properties set Property Configuration Properties security ssl trust Store File Name security ssl trust Store Password null properties set Property Configuration Properties new String security ssl trust Store Password security ssl sni Host Name null properties set Property Configuration Properties security ssl sni Host Name security ssl protocol null properties set Property Configuration Properties security ssl protocol security ssl ssl Context null properties put Configuration Properties security ssl ssl Context properties set Property Configuration Properties Boolean String security authentication enabled security authentication sasl Mechanism null properties set Property Configuration Properties security authentication sasl Mechanism security authentication callback Handler null properties put Configuration Properties security authentication callback Handler security authentication server Name null properties set Property Configuration Properties security authentication server Name security authentication client Subject null properties put Configuration Properties security authentication client Subject Map Entry String String entry security authentication sasl Properties entry Set properties set Property Configuration Properties entry get Key entry get Value properties set Property Configuration Properties String join serial Whitelist properties set Property Configuration Properties Integer String batch Size return properties
package org client hotrod configuration import java lang ref Weak Reference import java util Array List import java util Arrays import java util Collections import java util Hash Set import java util List import java util Properties import java util Set import java util regex Matcher import java util regex Pattern import java util stream Collectors import org client hotrod Protocol Version import org client hotrod Remote Cache Manager import org client hotrod impl Configuration Properties import org client hotrod impl Typed Properties import org client hotrod impl consistenthash Consistent Hash import org client hotrod impl consistenthash Consistent Hash import org client hotrod impl consistenthash Segment Consistent Hash import org client hotrod impl transport Transport Factory import org client hotrod impl transport tcp Failover Request Balancing Strategy import org client hotrod impl transport tcp Round Robin Balancing Strategy import org client hotrod impl transport tcp Tcp Transport Factory import org client hotrod logging Log import org client hotrod logging Log Factory import org commons configuration Builder import org commons marshall Marshaller import org commons marshall jboss Generic Boss Marshaller import org commons util Util Configuration Builder used generate immutable link Configuration objects pass link Remote Cache Manager Remote Cache Manager Configuration constructor author Tristan Tarrant since public class Configuration Builder implements Configuration Child Builder Builder Configuration private static final Log log Log Factory get Log Configuration Builder class Log class Match Pv host port Pv host port addresses private static final Pattern Pattern compile Fa f private Weak Reference Class Loader class Loader private final Executor Factory Configuration Builder async Executor Factory private Class extends Failover Request Balancing Strategy balancing Strategy Class Round Robin Balancing Strategy class private Failover Request Balancing Strategy balancing Strategy private Client Intelligence client Intelligence Client Intelligence get Default private final Connection Pool Configuration Builder connection Pool private int connection Timeout Configuration Properties Suppress Warnings unchecked private final Class extends Consistent Hash consistent Hash Impl new Class null Consistent Hash class Segment Consistent Hash class private boolean force Return Values private int key Size Estimate Configuration Properties private Class extends Marshaller marshaller Class private Marshaller marshaller private Protocol Version protocol Version Protocol Version private final List Server Configuration Builder servers new Array List Server Configuration Builder private int socket Timeout Configuration Properties private final Security Configuration Builder security private boolean tcp Delay true private boolean tcp Keep Alive false private Class extends Transport Factory transport Factory Tcp Transport Factory class private int value Size Estimate Configuration Properties private int max Retries Configuration Properties private final Near Cache Configuration Builder near Cache private final List String white List Reg Exs new Array List private int batch Size Configuration Properties private final List Cluster Configuration Builder clusters new Array List Cluster Configuration Builder public Configuration Builder class Loader new Weak Reference Thread current Thread get Context Class Loader connection Pool new Connection Pool Configuration Builder async Executor Factory new Executor Factory Configuration Builder security new Security Configuration Builder near Cache new Near Cache Configuration Builder Override public Server Configuration Builder add Server Server Configuration Builder builder new Server Configuration Builder servers add builder return builder Override public Cluster Configuration Builder add Cluster String cluster Name Cluster Configuration Builder builder new Cluster Configuration Builder cluster Name clusters add builder return builder Override public Configuration Builder add Servers String servers String server servers split Matcher matcher matcher server trim matcher matches String v host matcher group String v host matcher group String host v host null v host v host String port String matcher group int port port String null Configuration Properties Integer parse Int port String add Server host host port port else throw log parse Error Server Address server return Override public Executor Factory Configuration Builder async Executor Factory return async Executor Factory Override public Configuration Builder balancing Strategy String balancing Strategy balancing Strategy Class Util load Class balancing Strategy class Loader return Override public Configuration Builder balancing Strategy Failover Request Balancing Strategy balancing Strategy balancing Strategy balancing Strategy return Override public Configuration Builder balancing Strategy Class extends Failover Request Balancing Strategy balancing Strategy balancing Strategy Class balancing Strategy return Override public Configuration Builder class Loader Class Loader cl class Loader new Weak Reference cl return Class Loader class Loader return class Loader null class Loader get null Override public Configuration Builder client Intelligence Client Intelligence client Intelligence client Intelligence client Intelligence return Override public Connection Pool Configuration Builder connection Pool return connection Pool Override public Configuration Builder connection Timeout int connection Timeout connection Timeout connection Timeout return Override public Configuration Builder consistent Hash Impl int version Class extends Consistent Hash consistent Hash Class version log warn Hash function version longer supported else consistent Hash Impl version consistent Hash Class return Override public Configuration Builder consistent Hash Impl int version String consistent Hash Class version log warn Hash function version longer supported else consistent Hash Impl version Util load Class consistent Hash Class class Loader return Override public Configuration Builder force Return Values boolean force Return Values force Return Values force Return Values return Override public Configuration Builder key Size Estimate int key Size Estimate key Size Estimate key Size Estimate return Override public Configuration Builder marshaller String marshaller marshaller Class Util load Class marshaller class Loader return Override public Configuration Builder marshaller Class extends Marshaller marshaller marshaller Class marshaller return Override public Configuration Builder marshaller Marshaller marshaller marshaller marshaller return public Near Cache Configuration Builder near Cache return near Cache deprecated Use link Configuration Builder version Protocol Version instead Deprecated Override public Configuration Builder protocol Version String protocol Version protocol Version Protocol Version parse Version protocol Version return Override public Configuration Builder version Protocol Version protocol Version protocol Version protocol Version return Override public Security Configuration Builder security return security Override public Configuration Builder socket Timeout int socket Timeout socket Timeout socket Timeout return Override public Configuration Builder tcp Delay boolean tcp Delay tcp Delay tcp Delay return Override public Configuration Builder tcp Keep Alive boolean keep Alive tcp Keep Alive keep Alive return Override public Configuration Builder transport Factory String transport Factory transport Factory Util load Class transport Factory class Loader return Override public Configuration Builder transport Factory Class extends Transport Factory transport Factory transport Factory transport Factory return Override public Configuration Builder value Size Estimate int value Size Estimate value Size Estimate value Size Estimate return Override public Configuration Builder max Retries int max Retries max Retries max Retries return Override public Configuration Builder add Java Serial White List String reg Ex white List Reg Exs add Arrays List reg Ex return Override public Configuration Builder batch Size int batch Size batch Size throw new Illegal Argument Exception batch Size must greater batch Size batch Size return Override public Configuration Builder Properties Properties properties Typed Properties typed Typed Properties Typed Properties properties typed contains Key Configuration Properties async Executor Factory factory Class typed get Property Configuration Properties null true async Executor Factory Executor Properties typed balancing Strategy typed get Property Configuration Properties balancing Strategy Class get Name true client Intelligence typed get Enum Property Configuration Properties Client Intelligence class Client Intelligence get Default true connection Pool Pool Properties typed connection Timeout typed get Int Property Configuration Properties connection Timeout true typed contains Key Configuration Properties log warn Hash function version longer supported int consistent Hash Impl length consistent Hash Impl null int version consistent Hash Impl version typed get Property Configuration Properties version consistent Hash Impl get Name true force Return Values typed get Boolean Property Configuration Properties force Return Values true key Size Estimate typed get Int Property Configuration Properties key Size Estimate true typed contains Key Configuration Properties marshaller typed get Property Configuration Properties null true version Protocol Version parse Version typed get Property Configuration Properties protocol Version String true String server List typed get Property Configuration Properties null true server List null servers clear add Servers server List socket Timeout typed get Int Property Configuration Properties socket Timeout true tcp Delay typed get Boolean Property Configuration Properties tcp Delay true tcp Keep Alive typed get Boolean Property Configuration Properties tcp Keep Alive true typed contains Key Configuration Properties transport Factory typed get Property Configuration Properties null true value Size Estimate typed get Int Property Configuration Properties value Size Estimate true max Retries typed get Int Property Configuration Properties max Retries true security ssl Properties properties security authentication Properties properties String serial Whitelist typed get Property Configuration Properties serial Whitelist null String classes serial Whitelist split Collections add white List Reg Exs classes batch Size typed get Int Property Configuration Properties batch Size true return Override public void validate connection Pool validate async Executor Factory validate security validate near Cache validate max Retries throw log invalid Max Retries max Retries Set String cluster Name Set new Hash Set String clusters size Cluster Configuration Builder cluster Config Builder clusters cluster Name Set add cluster Config Builder get Cluster Name throw log duplicate Cluster Definition cluster Config Builder get Cluster Name cluster Config Builder validate Override public Configuration create List Server Configuration servers new Array List Server Configuration servers size Server Configuration Builder server servers servers add server create else servers add new Server Configuration Configuration Properties List Cluster Configuration server Cluster Configs clusters stream map Cluster Configuration Builder create collect Collectors List marshaller null marshaller Class null marshaller Class Generic Boss Marshaller class return new Configuration async Executor Factory create balancing Strategy Class balancing Strategy class Loader null null class Loader get client Intelligence connection Pool create connection Timeout consistent Hash Impl force Return Values key Size Estimate marshaller marshaller Class protocol Version servers socket Timeout security create tcp Delay tcp Keep Alive transport Factory value Size Estimate max Retries near Cache create server Cluster Configs white List Reg Exs batch Size Override public Configuration build return build true public Configuration build boolean validate validate validate return create Override public Configuration Builder read Configuration template class Loader new Weak Reference Class Loader template class Loader async Executor Factory read template async Executor Factory balancing Strategy Class template balancing Strategy Class balancing Strategy template balancing Strategy connection Pool read template connection Pool connection Timeout template connection Timeout int consistent Hash Impl length consistent Hash Impl template consistent Hash Impl force Return Values template force Return Values key Size Estimate template key Size Estimate marshaller template marshaller marshaller Class template marshaller Class protocol Version template version servers clear Server Configuration server template servers add Server host server host port server port socket Timeout template socket Timeout security read template security tcp Delay template tcp Delay tcp Keep Alive template tcp Keep Alive transport Factory template transport Factory value Size Estimate template value Size Estimate max Retries template max Retries near Cache read template near Cache white List Reg Exs add template serial Whitelist return
package org configuration parsing import java lang ref Weak Reference import java util Hash Map import java util Map import java util Stack import org configuration cache Configuration Builder import org configuration global Global Configuration Builder public class Configuration Builder Holder private final Global Configuration Builder global Configuration Builder private final Map String Configuration Builder named Configuration Builders private Configuration Builder current Configuration Builder private final Map Class extends Configuration Parser Parser Context parser Contexts private final Weak Reference Class Loader class Loader private final Stack Parser Scope scope public Configuration Builder Holder Thread current Thread get Context Class Loader public Configuration Builder Holder Class Loader class Loader global Configuration Builder new Global Configuration Builder named Configuration Builders new Hash Map parser Contexts new Hash Map class Loader new Weak Reference class Loader scope new Stack scope push Parser Scope public Global Configuration Builder get Global Configuration Builder return global Configuration Builder public Configuration Builder new Configuration Builder String name Configuration Builder builder new Configuration Builder named Configuration Builders put name builder current Configuration Builder builder return builder public Map String Configuration Builder get Named Configuration Builders return named Configuration Builders public Configuration Builder get Current Configuration Builder return current Configuration Builder public Configuration Builder get Default Configuration Builder global Configuration Builder default Cache Name Present return named Configuration Builders get global Configuration Builder default Cache Name get else return null void push Scope Parser Scope scope scope push scope void pop Scope scope pop public Parser Scope get Scope return scope peek Suppress Warnings unchecked public extends Parser Context get Parser Context Class extends Configuration Parser parser Class return parser Contexts get parser Class public void set Parser Context Class extends Configuration Parser parser Class Parser Context context parser Contexts put parser Class context public Class Loader get Class Loader return class Loader get Map Class extends Configuration Parser Parser Context get Parser Contexts return parser Contexts public void validate global Configuration Builder default Cache Name Present name named Configuration Builders contains Key name throw Parser log missing Default Cache Declaration name
package org configuration cache import java util Collections import java util List Configures custom interceptors added cache author pmuir public class Custom Interceptors Configuration private List Interceptor Configuration interceptors Custom Interceptors Configuration List Interceptor Configuration interceptors interceptors interceptors public Custom Interceptors Configuration interceptors Collections empty List specifies list link Interceptor Configuration instances referenced building interceptor chain return list link Interceptor Configuration May empty list never null public List Interceptor Configuration interceptors return interceptors public Custom Interceptors Configuration interceptors List Interceptor Configuration interceptors interceptors interceptors return Override public String String return Custom Interceptors Configuration interceptors interceptors Override public boolean equals Object return true null get Class get Class return false Custom Interceptors Configuration Custom Interceptors Configuration interceptors null interceptors equals interceptors interceptors null return false return true Override public int hash Code return interceptors null interceptors hash Code
package org configuration cache import java util Array List import java util Linked List import java util List import org commons configuration Builder import org configuration global Global Configuration Configures custom interceptors added cache author pmuir public class Custom Interceptors Configuration Builder extends Abstract Configuration Child Builder implements Builder Custom Interceptors Configuration private List Interceptor Configuration Builder interceptor Builders new Linked List Interceptor Configuration Builder Custom Interceptors Configuration Builder Configuration Builder builder super builder Adds new custom interceptor definition added cache cache started public Interceptor Configuration Builder add Interceptor Interceptor Configuration Builder builder new Interceptor Configuration Builder interceptor Builders add builder return builder Override public void validate Interceptor Configuration Builder builder interceptor Builders builder validate Override public void validate Global Configuration global Config Interceptor Configuration Builder builder interceptor Builders builder validate global Config Override public Custom Interceptors Configuration create interceptor Builders Empty return new Custom Interceptors Configuration else List Interceptor Configuration interceptors new Array List Interceptor Configuration interceptor Builders size Interceptor Configuration Builder builder interceptor Builders interceptors add builder create return new Custom Interceptors Configuration interceptors Override public Custom Interceptors Configuration Builder read Custom Interceptors Configuration template interceptor Builders new Linked List Interceptor Configuration Builder Interceptor Configuration c template interceptors interceptor Builders add new Interceptor Configuration Builder read c return Override public String String return Custom Interceptors Configuration Builder interceptors interceptor Builders
package org configuration cache import org commons configuration Abstract Typed Properties Configuration import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set import org commons configuration attributes Identity Attribute Copier import org commons equivalence Equivalence import org commons equivalence Equivalence import org container Data Container Controls data container cache author pmuir deprecated Please use link Memory Configuration Deprecated public class Data Container Configuration extends Abstract Typed Properties Configuration public static final Attribute Definition Data Container Attribute Definition builder data Container null Data Container class xml Name class copier Identity Attribute Copier immutable build static public Attribute Set attribute Definition Set return new Attribute Set Data Container Configuration class Abstract Typed Properties Configuration attribute Set private final Attribute Data Container data Container Data Container Configuration Attribute Set attributes super attributes data Container attributes attribute Data container implementation use return deprecated data container longer exposed via configuration later point Deprecated public Data Container data Container return data Container get deprecated Equivalence longer used removed future returns link Equivalence Deprecated public Equivalence key Equivalence return Equivalence get Instance deprecated Equivalence longer used removed future returns link Equivalence Deprecated public Equivalence value Equivalence return Equivalence get Instance public Attribute Set attributes return attributes Override public String String return Data Container Configuration attributes attributes
package org configuration cache import static org commons configuration Abstract Typed Properties Configuration import static org configuration cache Data Container Configuration import java util Properties import org commons configuration Builder import org commons configuration attributes Attribute Set import org commons equivalence Equivalence import org commons util Typed Properties import org configuration global Global Configuration import org container Data Container Controls data container cache author pmuir deprecated Please use link Memory Configuration Deprecated public class Data Container Configuration Builder extends Abstract Configuration Child Builder implements Builder Data Container Configuration private Attribute Set attributes Data Container Configuration Builder Configuration Builder builder super builder attributes Data Container Configuration attribute Definition Set Specify data container use param data Container return deprecated data container longer exposed via configuration later point Deprecated public Data Container Configuration Builder data Container Data Container data Container attributes attribute set data Container return Add key value property pair data container configuration param key property key param value property value return previous value exists null otherwise public Data Container Configuration Builder add Property String key String value Typed Properties properties attributes attribute get properties put key value attributes attribute set Typed Properties Typed Properties properties return Set key value properties link Data Container configuration param props Properties return Executor Factory Config public Data Container Configuration Builder Properties Properties props attributes attribute set Typed Properties Typed Properties props return Set link org commons equivalence Equivalence instance use compare keys stored data container link org commons equivalence Equivalence implementations allow custom comparisons provided external libraries provide adequate comparison implementations e arrays param key Equivalence instance link org commons equivalence Equivalence used compare key types return configuration builder deprecated Equivalence removed byte directly supported Deprecated public Data Container Configuration Builder key Equivalence Equivalence key Equivalence return Set link org commons equivalence Equivalence instance use compare values stored data container link org commons equivalence Equivalence implementations allow custom comparisons provided external libraries provide adequate comparison implementations e arrays param value Equivalence instance link org commons equivalence Equivalence used compare value types return configuration builder deprecated Equivalence removed byte directly supported Deprecated public Data Container Configuration Builder value Equivalence Equivalence value Equivalence return Override public void validate Override public void validate Global Configuration global Config Override public Data Container Configuration create return new Data Container Configuration attributes protect Override public Data Container Configuration Builder read Data Container Configuration template attributes read template attributes return Override public String String return Data Container Configuration Builder attributes attributes
package org factories import org configuration cache Eviction Configuration import org configuration cache Memory Configuration import org container Data Container import org container Default Data Container import org configuration cache Storage Type import org container offheap Bounded Heap Data Container import org container offheap Heap Data Container import org factories annotations Default Factory Constructs data container author Manik Surtani href mailto manik jboss org manik jboss org author Vladimir Blagojevic since Default Factory classes Data Container class public class Data Container Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override Suppress Warnings unchecked public construct Class component Type configuration data Container data Container null return configuration data Container data Container else int level configuration locking concurrency Level long threshold Size configuration memory size handle case value signifies unbounded container threshold Size configuration memory storage Type Storage Type return new Heap Data Container configuration memory address Count else return Default Data Container un Bounded Data Container level Data Container data Container configuration memory storage Type Storage Type data Container new Bounded Heap Data Container configuration memory address Count threshold Size configuration memory eviction Type else data Container Default Data Container bounded Data Container level threshold Size configuration memory eviction Type configuration eviction attributes attribute Eviction Configuration add Listener new Size old configuration memory size new Size get configuration memory attributes attribute Memory Configuration add Listener new Size old data Container resize new Size get return data Container
package org util import java util Iterator import org Cache import org container Data Container import org container entries Cache Entry import org container entries Internal Cache Entry iterator iterate upon data container cache also provided used remove method iterator invoked Note means take part ongoing transaction one public class Data Container Remove Iterator implements Iterator Cache Entry private final Cache cache private final Iterator Internal Cache Entry data Container Iterator private previous Key public Data Container Remove Iterator Cache cache cache cache get Advanced Cache get Data Container public Data Container Remove Iterator Cache cache Data Container data Container cache null data Container null throw new Null Pointer Exception cache cache data Container Iterator data Container iterator Override public boolean Next return data Container Iterator Next Override public Cache Entry next Cache Entry entry data Container Iterator next previous Key entry get Key return entry Override public void remove previous Key null throw new Illegal State Exception cache remove previous Key previous Key null
package org configuration cache import java util concurrent Time Unit import org commons configuration Builder import org commons configuration attributes Attribute Set import org configuration global Global Configuration Configures deadlock detection deprecated Since deadlock detection always disabled Deprecated public class Deadlock Detection Configuration Builder extends Abstract Configuration Child Builder implements Builder Deadlock Detection Configuration private final Attribute Set attributes Deadlock Detection Configuration Builder Configuration Builder builder super builder attributes Deadlock Detection Configuration attribute Definition Set Time period determines often lock acquisition attempted within maximum time allowed acquire particular lock deprecated Since deadlock detection always disabled Deprecated public Deadlock Detection Configuration Builder spin Duration long l return Time period determines often lock acquisition attempted within maximum time allowed acquire particular lock deprecated Since deadlock detection always disabled Deprecated public Deadlock Detection Configuration Builder spin Duration long l Time Unit unit return spin Duration unit Millis l Enable deadlock detection deprecated Since deadlock detection always disabled Deprecated public Deadlock Detection Configuration Builder enable return Disable deadlock detection deprecated Since deadlock detection always disabled Deprecated public Deadlock Detection Configuration Builder disable return Enable disable deadlock detection deprecated Since deadlock detection always disabled Deprecated public Deadlock Detection Configuration Builder enabled boolean enabled return Override public void validate Override public void validate Global Configuration global Config Override public Deadlock Detection Configuration create return new Deadlock Detection Configuration attributes protect Override public Deadlock Detection Configuration Builder read Deadlock Detection Configuration template attributes read template attributes return Override public String String return Deadlock Detection Configuration Builder attributes attributes
package org cache impl import static java util concurrent Time Unit import java util Arrays import java util Collection import java util Map import java util Objects import java util Set import java util concurrent Completable Future import java util concurrent Time Unit import java util function Bi Function import java util function Function import org Advanced Cache import org Cache Collection import org Cache Set import org Locked Stream import org commons dataconversion Encoder import org commons dataconversion Wrapper import org commons util Enum Util import org container entries Cache Entry import org context Flag import org context Invocation Context import org encoding Data Conversion import org filter Key Filter import org metadata Embedded Metadata import org metadata Metadata import org stream Stream Marshalling import org stream impl local Value Cache Collection decorator cache built specific set link Flag set link Flag applied cache invocations made via decorator p addition cleaner readable code approach offers performance benefit using link Advanced Cache Flags org context Flag thanks internal optimizations made link Flag set unchanging p Note link Decorated Cache must closest Delegate actual Cache implementation others must delegate Decorated Cache author Manik Surtani author Sanne Grinovero author Tristan Tarrant see Advanced Cache Flags org context Flag since public class Decorated Cache extends Abstract Delegating Advanced Cache private static final Flag new Flag private final long flags private final Object lock Owner private final Cache Impl cache Implementation public Decorated Cache Advanced Cache delegate delegate public Decorated Cache Advanced Cache delegate Flag flags delegate null flags public Decorated Cache Advanced Cache delegate Object lock Owner Flag flags super delegate flags length flags Enum Util else flags Enum Util bit Set flags lock Owner lock Owner Yuk cache Implementation Cache Impl delegate private Decorated Cache Cache Impl delegate Object lock Owner long new Flags constructor private already checked argument validity super delegate flags new Flags lock Owner lock Owner cache Implementation delegate Override public Advanced Cache final Class Loader class Loader class Loader null throw new Illegal Argument Exception Class Loader null return Override public Advanced Cache Flags final Flag flags flags null flags length return else long new Flags Enum Util bit Set flags Enum Util contains flags new Flags already specified flags return else return new Decorated Cache cache Implementation lock Owner Enum Util merge Bit Sets flags new Flags Override public Advanced Cache Encoding Class extends Encoder encoder Class return new Encoder Cache Data Conversion Encoding encoder Class Data Conversion Encoding encoder Class Override public Advanced Cache Encoding Class extends Encoder key Encoder Class Class extends Encoder value Encoder Class return new Encoder Cache Data Conversion Encoding key Encoder Class Data Conversion Encoding value Encoder Class Override public Advanced Cache Wrapping Class extends Wrapper wrapper Class return new Encoder Cache Data Conversion Wrapping wrapper Class Data Conversion Wrapping wrapper Class Override public Advanced Cache Wrapping Class extends Wrapper key Wrapper Class Class extends Wrapper value Wrapper Class return new Encoder Cache Data Conversion Wrapping key Wrapper Class Data Conversion Wrapping value Wrapper Class Override public Advanced Cache lock Object lock Owner Objects require Non Null lock Owner lock Owner lock Owner return new Decorated Cache cache Implementation lock Owner flags return public Object get Lock Owner return lock Owner Override public Locked Stream locked Stream assert Lock Owner locked Stream return super locked Stream Override public Class Loader get Class Loader return cache Implementation get Class Loader Override public void stop cache Implementation stop Override public boolean lock keys assert Lock Owner lock return cache Implementation lock Arrays List keys flags Override public boolean lock Collection extends keys assert Lock Owner lock return cache Implementation lock keys flags Override public void put External Read key value put External Read key value cache Implementation default Metadata Override public void put External Read key value Metadata metadata assert Lock Owner put External Read cache Implementation put External Read key value metadata flags Override public void put External Read key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build put External Read key value metadata Override public void put External Read key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build put External Read key value metadata Override public void evict key cache Implementation evict key flags Override public put key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return put key value metadata Override public put Absent key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return put Absent key value metadata Override public void put Map extends extends map long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build put map metadata Override public replace key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return replace key value metadata Override public boolean replace key old Value value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return replace key old Value value metadata Override public put key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit max Idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time max Idle Time Unit build return put key value metadata Override public put Absent key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit max Idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time max Idle Time Unit build return put Absent key value metadata Override public void put Map extends extends map long lifespan Time Unit lifespan Unit long max Idle Time Time Unit max Idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time max Idle Time Unit build put map metadata Override public replace key value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit max Idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time max Idle Time Unit build return replace key value metadata Override public boolean replace key old Value value long lifespan Time Unit lifespan Unit long max Idle Time Time Unit max Idle Time Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle Time max Idle Time Unit build return replace key old Value value metadata Override public Completable Future put Async key value return put Async key value cache Implementation default Metadata Override public Completable Future put Async key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return put Async key value metadata Override public Completable Future put Async key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return put Async key value metadata private void assert Lock Owner String name lock Owner null throw new Illegal State Exception name method used lock owner configured Override public Completable Future Void put Async Map extends extends data return put Async data cache Implementation default Metadata Override public Completable Future Void put Async Map extends extends data long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return put Async data metadata Override public Completable Future Void put Async Map extends extends data long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return put Async data metadata Completable Future Void put Async final Map extends extends data final Metadata metadata return cache Implementation put Async data metadata flags write Context data size Override public Completable Future Void clear Async return cache Implementation clear Async flags Override public Completable Future put Absent Async key value return put Absent Async key value cache Implementation default Metadata Override public Completable Future put Absent Async key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return put Absent Async key value metadata Override public Completable Future put Absent Async key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return put Absent Async key value metadata Completable Future put Absent Async final key final value final Metadata metadata return cache Implementation put Absent Async key value metadata flags write Context Override public Completable Future remove Async Object key return cache Implementation remove Async key flags write Context Override public Completable Future Boolean remove Async Object key Object value return cache Implementation remove Async key value flags write Context Override public Completable Future replace Async key value return replace Async key value cache Implementation default Metadata Override public Completable Future replace Async key value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return replace Async key value metadata Override public Completable Future replace Async key value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return replace Async key value metadata Completable Future replace Async final key final value final Metadata metadata return cache Implementation replace Async key value metadata flags write Context Override public Completable Future Boolean replace Async key old Value new Value return replace Async key old Value new Value cache Implementation default Metadata Override public Completable Future Boolean replace Async key old Value new Value long lifespan Time Unit unit Metadata metadata new Embedded Metadata Builder lifespan lifespan unit max Idle cache Implementation default Metadata max Idle build return replace Async key old Value new Value metadata Override public Completable Future Boolean replace Async key old Value new Value long lifespan Time Unit lifespan Unit long max Idle Time Unit max Idle Unit Metadata metadata new Embedded Metadata Builder lifespan lifespan lifespan Unit max Idle max Idle max Idle Unit build return replace Async key old Value new Value metadata Completable Future Boolean replace Async final key final old Value final new Value final Metadata metadata return cache Implementation replace Async key old Value new Value metadata flags write Context Override public Completable Future get Async key return cache Implementation get Async key flags read Context Override public int size return cache Implementation size flags Override public boolean Empty return cache Implementation Empty flags Override public boolean contains Key Object key return cache Implementation contains Key key flags read Context Override public boolean contains Value Object value Objects require Non Null value return values stream Match Stream Marshalling equality Predicate value Override public get Object key return cache Implementation get key flags read Context Override public Map get Set keys return cache Implementation get keys flags read Context keys size Override public Map Cache Entry get Cache Entries Set keys return cache Implementation get Cache Entries keys flags read Context keys size Override public put key value return put key value cache Implementation default Metadata Override public remove Object key return cache Implementation remove key flags write Context Override public void put Map extends extends map Metadata metadata cache Implementation put map metadata flags write Context map size Override public void put Map extends extends put cache Implementation default Metadata Override public void clear cache Implementation clear flags Override public Cache Set key Set return cache Implementation key Set flags Override public Map get Group String group Name return cache Implementation get Group group Name flags Override public void remove Group String group Name assert Lock Owner remove Group cache Implementation remove Group group Name flags Override public Cache Collection values return new Value Cache Collection cache Entry Set Override public Cache Set Entry entry Set return cache Implementation entry Set flags Override public Cache Set Cache Entry cache Entry Set return cache Implementation cache Entry Set flags read Context Override public put Absent key value return put Absent key value cache Implementation default Metadata Override public boolean remove Object key Object value return cache Implementation remove key value flags write Context Override public boolean replace key old Value new Value return replace key old Value new Value cache Implementation default Metadata Override public replace key value return replace key value cache Implementation default Metadata Override public compute key Bi Function super super extends remapping Function return compute key remapping Function cache Implementation default Metadata Override public compute Present key Bi Function super super extends remapping Function return compute Present key remapping Function cache Implementation default Metadata Override public compute Absent key Function super extends mapping Function return compute Absent key mapping Function cache Implementation default Metadata Override public merge key value Bi Function super super extends remapping Function return merge key value remapping Function cache Implementation default Metadata exposed interface public long get Flags Bit Set return flags Override public void add Listener Object listener cache Implementation notifier add Listener listener Class Loader null Override public void add Listener Object listener Key Filter super filter cache Implementation notifier add Listener listener filter null Override public put key value Metadata metadata return cache Implementation put key value metadata flags write Context Override public Completable Future put Async key value Metadata metadata return cache Implementation put Async key value metadata flags write Context Override public put Absent key value Metadata metadata return cache Implementation put Absent key value metadata flags write Context Override public boolean replace key old Value value Metadata metadata return cache Implementation replace key old Value value metadata flags write Context Override public replace key value Metadata metadata return cache Implementation replace key value metadata flags write Context Override public compute key Bi Function super super extends remapping Function Metadata metadata return cache Implementation compute Internal key remapping Function false metadata flags write Context Override public compute Present key Bi Function super super extends remapping Function Metadata metadata return cache Implementation compute Internal key remapping Function true metadata flags write Context Override public compute Absent key Function super extends mapping Function Metadata metadata return cache Implementation compute Absent Internal key mapping Function metadata flags write Context Override public merge key value Bi Function super super extends remapping Function Metadata metadata return cache Implementation merge Internal key value remapping Function metadata flags write Context Override public Cache Entry get Cache Entry Object key return cache Implementation get Cache Entry key flags read Context protected Invocation Context read Context int size Invocation Context ctx cache Implementation invocation Context Factory create Invocation Context false size lock Owner null ctx set Lock Owner lock Owner return ctx protected Invocation Context write Context int size Invocation Context ctx cache Implementation get Invocation Context Implicit Transaction false size lock Owner null ctx set Lock Owner lock Owner return ctx
package org manager import static org factories Known Component Names import java io Exception import java io Input Stream import java util Collections import java util Hash Map import java util Hash Set import java util Linked Hash Set import java util List import java util Map import java util Properties import java util Set import java util concurrent Completable Future import java util concurrent Completion Exception import java util concurrent Concurrent Map import java util concurrent Executor Service import java util concurrent Fork Join Pool import java util concurrent Scheduled Executor Service import java util concurrent Time Unit import java util concurrent atomic Atomic Reference import java util concurrent locks Lock import java util concurrent locks Reentrant Lock import org Cache import org Illegal Lifecycle State Exception import org Version import org commands Remove Cache Command import org commons Cache Configuration Exception import org commons Cache Exception import org commons api Lifecycle import org commons util Collection Factory import org commons util File Lookup Factory import org commons util Immutables import org configuration Configuration Manager import org configuration cache Configuration import org configuration cache Configuration Builder import org configuration format Property Formatter import org configuration global Global Configuration import org configuration global Global Configuration Builder import org configuration global Transport Configuration import org configuration parsing Configuration Builder Holder import org configuration parsing Parser Registry import org factories Component Registry import org factories Global Component Registry import org factories Internal Cache Factory import org factories Known Component Names import org factories annotations Survives Restarts import org factories scopes Scope import org factories scopes Scopes import org health Health import org health impl Health Impl import org health impl jmx Health Exposer Impl import org health jmx Health Exposer import org jmx Cache Jmx Registration import org jmx Cache Manager Jmx Registration import org jmx annotations Data Type import org jmx annotations Display Type import org jmx annotations Bean import org jmx annotations Managed Attribute import org jmx annotations Managed Operation import org jmx annotations Parameter import org lifecycle Component Status import org manager impl Cluster Executors import org notifications cachemanagerlistener Cache Manager Notifier import org registry Internal Cache Registry import org remoting inboundhandler Deliver Order import org remoting responses Response import org remoting rpc Response Mode import org remoting transport Address import org remoting transport Transport import org remoting transport jgroups Groups Transport import org security Audit Context import org security Authorization Permission import org security impl Authorization Helper import org security impl Principal Role Mapper Context Impl import org security impl Secure Cache Impl import org stats Cache Container Stats import org stats impl Cache Container Stats Impl import org util Byte String import org util Cyclic Dependency Exception import org util Dependency Graph import org util logging Log import org util logging Log Factory tt Cache Manager tt primary mechanism retrieving link Cache instance often used starting point using link Cache p tt Cache Manager tt heavyweight objects foresee one tt Cache Manager tt used per unless specific configuration requirements require one either way would minimal finite number instances p Constructing tt Cache Manager tt done via one constructors optionally take link org configuration cache Configuration path configuration file p Lifecycle tt Cache Manager tt lifecycle implements link Lifecycle default constructors also call link start Overloaded versions constructors available start tt Cache Manager tt although must kept mind tt Cache Manager tt need started used create tt Cache tt instances p constructed tt Cache Manager tt made available component requires tt Cache tt via via mechanism Io container p obtain tt Cache tt instances tt Cache Manager tt using one overloaded tt get Cache tt methods Note tt get Cache tt guarantee instance get brand new empty since caches named shared tt Cache Manager tt also acts repository tt Cache tt effective mechanism looking creating tt Cache tt demand p system shuts call link stop tt Cache Manager tt ensure caches within scope properly stopped well p Sample usage pre code Cache Manager manager Cache Manager get Instance config file xml Cache lt String Person gt entity Cache manager get Cache Entity Cache entity Cache put Person new Person Configuration Builder conf Builder new Configuration Builder conf Builder clustering cache Mode Cache Mode manager define Configuration Replicated Cache conf Builder build Cache lt String String gt replicated Cache manager get Cache Replicated Cache code pre author Manik Surtani author Galder Zamarre since Scope Scopes Survives Restarts Bean object Name Default Cache Manager description Component acts manager factory container caches system public class Default Cache Manager implements Embedded Cache Manager public static final String Cache Manager private static final Log log Log Factory get Log Default Cache Manager class private final Concurrent Map String Completable Future Cache caches Collection Factory make Concurrent Map private final Global Component Registry global Component Registry private final Authorization Helper authz Helper private final Dependency Graph String cache Dependency Graph new Dependency Graph private final Cache Container Stats stats private final Health health private final Configuration Manager configuration Manager private final String default Cache Name private final Lock lifecycle Lock new Reentrant Lock private volatile boolean stopping Constructs starts default instance Cache Manager using configuration defaults See link org configuration cache Configuration link org configuration global Global Configuration details defaults public Default Cache Manager null null true Constructs default instance Cache Manager using configuration defaults See link org configuration cache Configuration link org configuration global Global Configuration details defaults param start true cache manager started public Default Cache Manager boolean start null null start Constructs starts new instance Cache Manager using default configuration passed See link org configuration cache Configuration link org configuration global Global Configuration details defaults param default Configuration configuration use template caches created public Default Cache Manager Configuration default Configuration null default Configuration true Constructs new instance Cache Manager using default configuration passed See link org configuration global Global Configuration details defaults param default Configuration configuration file use template caches created param start true cache manager started public Default Cache Manager Configuration default Configuration boolean start null default Configuration start Constructs starts new instance Cache Manager using global configuration passed system defaults default named cache configuration See link org configuration cache Configuration details defaults param global Configuration Global Configuration use caches created public Default Cache Manager Global Configuration global Configuration global Configuration null true Constructs new instance Cache Manager using global configuration passed system defaults default named cache configuration See link org configuration cache Configuration details defaults param global Configuration Global Configuration use caches created param start true cache manager started public Default Cache Manager Global Configuration global Configuration boolean start global Configuration null start Constructs starts new instance Cache Manager using global default configurations passed either null system defaults used param global Configuration global configuration use null default instance created param default Configuration default configuration use null default instance created public Default Cache Manager Global Configuration global Configuration Configuration default Configuration global Configuration default Configuration true Constructs new instance Cache Manager using global default configurations passed either null system defaults used param global Configuration global configuration use null default instance created param default Configuration default configuration use null default instance created param start true cache manager started public Default Cache Manager Global Configuration global Configuration Configuration default Configuration boolean start global Configuration global Configuration null new Global Configuration Builder build global Configuration configuration Manager new Configuration Manager global Configuration default Configuration null global Configuration default Cache Name Present default Cache Name global Configuration default Cache Name get else log default Cache Configuration Without Name default Cache Name configuration Manager put Configuration default Cache Name default Configuration else global Configuration default Cache Name Present throw log missing Default Cache Declaration global Configuration default Cache Name get else default Cache Name null authz Helper new Authorization Helper global Configuration security Audit Context global Configuration global Jmx Statistics cache Manager Name global Component Registry new Global Component Registry global Configuration caches key Set global Component Registry register Component configuration Manager Configuration Manager class global Component Registry register Component cache Dependency Graph false global Component Registry register Component authz Helper Authorization Helper class stats new Cache Container Stats Impl health new Health Impl global Component Registry register Component new Health Exposer Impl health Health Exposer class start start Constructs starts new instance Cache Manager using configuration file name passed constructor first searches named file classpath failing treats file name absolute path param configuration File name configuration file use template caches created throws java io Exception problem configuration file public Default Cache Manager String configuration File throws Exception configuration File true Constructs new instance Cache Manager using configuration file name passed constructor first searches named file classpath failing treats file name absolute path param configuration File name configuration file use template caches created param start true cache manager started throws java io Exception problem configuration file public Default Cache Manager String configuration File boolean start throws Exception File Lookup Factory new Instance lookup File Strict configuration File Thread current Thread get Context Class Loader start Constructs starts new instance Cache Manager using input stream passed read configuration file contents param configuration Stream stream containing configuration file contents use template caches created throws java io Exception problem configuration stream public Default Cache Manager Input Stream configuration Stream throws Exception configuration Stream true Constructs new instance Cache Manager using input stream passed read configuration file contents param configuration Stream stream containing configuration file contents use template caches created param start true cache manager started throws java io Exception problem reading configuration stream public Default Cache Manager Input Stream configuration Stream boolean start throws Exception new Parser Registry parse configuration Stream start Constructs new instance Cache Manager using holder passed read configuration settings param holder holder containing configuration settings use template caches created param start true cache manager started public Default Cache Manager Configuration Builder Holder holder boolean start try configuration Manager new Configuration Manager holder Global Configuration global Configuration configuration Manager get Global Configuration default Cache Name global Configuration default Cache Name Else null global Component Registry new Global Component Registry global Configuration caches key Set global Component Registry register Component configuration Manager Configuration Manager class global Component Registry register Component cache Dependency Graph false authz Helper new Authorization Helper global Configuration security Audit Context global Configuration global Jmx Statistics cache Manager Name stats new Cache Container Stats Impl health new Health Impl global Component Registry register Component new Health Exposer Impl health Health Exposer class catch Cache Configuration Exception ce throw ce catch Runtime Exception throw new Cache Configuration Exception start start Override public Configuration define Configuration String name Configuration configuration return Define Configuration name configuration Override public Configuration define Configuration String name String template Configuration configuration Override template null Configuration c configuration Manager get Configuration template c null throw log undeclared Configuration template name else configuration Override null return Define Configuration name c else return Define Configuration name c configuration Override return Define Configuration name configuration Override private Configuration Define Configuration String name Configuration configurations authz Helper check Permission Authorization Permission assert Terminated name null configurations null throw new Null Pointer Exception Null arguments allowed name equals throw log illegal Cache Name Configuration existing configuration Manager get Configuration name existing null throw log config Already Defined name Configuration Builder builder new Configuration Builder boolean template true Configuration configuration configurations configuration null builder read configuration template template configuration Template else throw new Null Pointer Exception Null arguments allowed builder template template return configuration Manager put Configuration name builder Override public void undefine Configuration String configuration Name authz Helper check Permission Authorization Permission configuration Name equals throw log illegal Cache Name Configuration existing configuration Manager get Configuration configuration Name existing null Completable Future Cache cache Future caches values Cache cache cache Future exceptionally null join cache null cache get Cache Configuration existing cache get Status Component Status throw log configuration Use configuration Name configuration Manager remove Configuration configuration Name Retrieves default cache associated cache manager Note default cache need explicitly created link create Cache String String String since automatically created lazily first used p method always guaranteed return default cache return default cache Override public Cache get Cache default Cache Name null throw log Default Cache return internal Get Cache default Cache Name default Cache Name Retrieves named cache system cache previously created name running cache instance returned Otherwise method attempts create cache first p creating new cache method use configuration passed Cache Manager construction template optionally apply overrides previously defined named cache using link define Configuration String Configuration link define Configuration String String Configuration methods declared configuration file param cache Name name cache retrieve return cache instance identified cache Name Override public Cache get Cache String cache Name return get Cache cache Name cache Name Override public Cache get Cache String cache Name String configuration Name cache Name null throw new Null Pointer Exception Null arguments allowed equals cache Name default Cache Name null throw log Default Cache cache Name default Cache Name log deprecated Default Cache return internal Get Cache cache Name configuration Name public Cache internal Get Cache String cache Name String configuration Name assert Terminated Completable Future Cache cache Future caches get cache Name cache Future null try return Cache cache Future join catch Completion Exception e throw Cache Exception e get Cause return create Cache cache Name configuration Name Override public boolean cache Exists String cache Name return caches contains Key cache Name Override public Cache get Cache String cache Name boolean create Absent return get Cache cache Name cache Name create Absent Override public Cache get Cache String cache Name String configuration Template boolean create Absent boolean cache Exists cache Exists cache Name cache Exists create Absent return null else return get Cache cache Name configuration Template Override public Embedded Cache Manager start Caches final String cache Names authz Helper check Permission Authorization Permission Map String Thread threads new Hash Map cache Names length final Atomic Reference Runtime Exception exception new Atomic Reference Runtime Exception null final String cache Name cache Names threads contains Key cache Name String thread Name Cache Start Thread configuration Manager get Global Configuration transport node Name cache Name Thread thread new Thread thread Name Override public void run try create Cache cache Name cache Name catch Runtime Exception e exception set e catch Throwable exception set new Runtime Exception thread start threads put cache Name thread try Thread thread threads values thread join catch Interrupted Exception e throw new Cache Exception Interrupted waiting caches start Runtime Exception runtime Exception exception get runtime Exception null throw runtime Exception return Override public void remove Cache String cache Name authz Helper check Permission Authorization Permission Component Registry cache Component Registry global Component Registry get Named Component Registry cache Name cache Component Registry null Remove Cache Command cmd new Remove Cache Command Byte String String cache Name Transport transport get Transport try Completable Future future transport null Configuration c configuration Manager get Configuration cache Name default Cache Name Use sync replication timeout Completable Future Map Address Response remote Future transport invoke Remotely Async null cmd Response Mode c clustering remote Timeout null Deliver Order false future cmd invoke Async Compose remote Future else future cmd invoke Async future get catch Throwable throw new Cache Exception Error removing cache inherit Doc Override public List Address get Members Transport get Transport return null null get Members inherit Doc Override public Address get Address Transport get Transport return null null get Address inherit Doc Override public Address get Coordinator Transport get Transport return null null get Coordinator Managed Attribute description logical address cluster coordinator display Name Coordinator address display Type Display Type public String get Coordinator Address Transport get Transport return null get Coordinator String inherit Doc Override Managed Attribute description Indicates whether node coordinator display Name coordinator display Type Display Type public boolean Coordinator Transport get Transport return null Coordinator private Cache create Cache String cache Name String configuration Name final boolean trace log Trace Enabled Log Factory push cache Name trace try return wire Start Cache cache Name configuration Name finally Log Factory pop trace return null return value means cache created someone else got lock private Cache wire Start Cache String cache Name String configuration Name boolean Cache cache Name equals configuration Name Configuration c configuration Manager get Configuration configuration Name default Cache Name c null throw log Cache Configuration configuration Name else Cache Configuration defined Config configuration Manager get Configuration cache Name defined Config null log warn Attempt Override Existing Configuration cache Name c defined Config c security authorization enabled n even attempt wire anything n privileges authz Helper check Permission c security authorization Authorization Permission c Template cache Name equals configuration Name throw log template Configuration Start Attempt cache Name Completable Future Cache cache Future new Completable Future Completable Future Cache old Future caches compute Absent cache Name name assert Terminated return cache Future try old Future cache Future return Cache old Future join catch Completion Exception ce throw Cache Exception ce get Cause try log tracef wire start cache cache Name Cache cache new Internal Cache Factory create Cache c global Component Registry cache Name Component Registry cr cache get Advanced Cache get Component Registry cache get Advanced Cache get Authorization Manager null cache new Secure Cache Impl cache get Advanced Cache boolean Started Yet cr get Status Component Status cr get Status Component Status start cache level components cache start cache Future complete cache boolean need Notify Cache Started Started Yet cr get Status Component Status need Notify Cache Started global Component Registry notify Cache Started cache Name log tracef Cache started cache Name return cache catch Cache Exception e cache Future complete Exceptionally e throw e catch Throwable cache Future complete Exceptionally new Cache Exception throw Override public void start authz Helper check Permission Authorization Permission lifecycle Lock lock try final Global Configuration global Configuration configuration Manager get Global Configuration global Configuration security authorization enabled System get Security Manager null log authorization Enabled Without Security Manager global Component Registry get Component Cache Manager Jmx Registration class start String cluster Name global Configuration transport cluster Name String node Name global Configuration transport node Name global Configuration security authorization enabled global Configuration security authorization principal Role Mapper set Context new Principal Role Mapper Context Impl global Component Registry start log debugf Started cache manager cluster Name node Name finally lifecycle Lock unlock private void terminate String cache Name Completable Future Cache cache Future caches get cache Name cache Future null Cache cache cache Future join unregister Cache Bean cache cache get Status Terminated log tracef Ignoring cache already terminated cache Name return cache stop Override public void stop authz Helper check Permission Authorization Permission lifecycle Lock lock try stopping log trace Ignore call stop cache manager running return log debugf Stopping cache manager configuration Manager get Global Configuration transport cluster Name get Address stopping true stop Caches global Component Registry get Component Cache Manager Jmx Registration class stop global Component Registry stop finally lifecycle Lock unlock private void stop Caches Set String caches Stop new Linked Hash Set caches size stop ordered caches first try List String ordered cache Dependency Graph topological Sort caches Stop add ordered catch Cyclic Dependency Exception e log stop Order Ignored caches map includes default cache caches Stop add caches key Set log tracef Cache stop order caches Stop String cache Name caches Stop try terminate cache Name catch Throwable log component Failed Stop private void unregister Cache Bean Cache cache Unregister cache mbean regardless jmx statistics setting cache get Advanced Cache get Component Registry get Component Cache Jmx Registration class unregister Cache Bean Override public void add Listener Object listener authz Helper check Permission Authorization Permission Cache Manager Notifier notifier global Component Registry get Component Cache Manager Notifier class notifier add Listener listener Override public void remove Listener Object listener authz Helper check Permission Authorization Permission Cache Manager Notifier notifier global Component Registry get Component Cache Manager Notifier class notifier remove Listener listener Override public Set Object get Listeners authz Helper check Permission Authorization Permission Cache Manager Notifier notifier global Component Registry get Component Cache Manager Notifier class return notifier get Listeners Override public Component Status get Status authz Helper check Permission Authorization Permission return global Component Registry get Status Override public Global Configuration get Cache Manager Configuration return configuration Manager get Global Configuration Override public org configuration cache Configuration get Default Cache Configuration default Cache Name null return configuration Manager get Configuration default Cache Name else return null Override public Configuration get Cache Configuration String name Configuration configuration configuration Manager get Configuration name configuration null cache Exists name return get Default Cache Configuration return configuration Override public Set String get Cache Names Get programmatically defined caches Set String names new Hash Set configuration Manager get Defined Caches Add caches created dynamically without explicit config Since caches could modified dynamically make safe copy keys names add Immutables immutable Set Convert caches key Set names remove Internal Cache Registry internal Cache Registry global Component Registry get Component Internal Cache Registry class internal Cache Registry filter Private Caches names names Empty return Collections empty Set else return Immutables immutable Set Wrap names Override public Set String get Cache Configuration Names Get programmatically defined caches Set String names new Hash Set configuration Manager get Defined Configurations names remove Internal Cache Registry internal Cache Registry global Component Registry get Component Internal Cache Registry class internal Cache Registry filter Private Caches names names Empty return Collections empty Set else return Immutables immutable Set Wrap names Override public boolean Running String cache Name Completable Future Cache cache Future caches get cache Name boolean started cache Future null cache Future Done cache Future Completed Exceptionally return started cache Future join get Status Component Status Override public boolean Default Running return Running Managed Attribute description status cache manager instance display Name Cache manager status data Type Data Type display Type Display Type public String get Cache Manager Status return get Status String Managed Attribute description defined cache names statuses default cache included representation display Name List defined caches data Type Data Type display Type Display Type public String get Defined Cache Names String Builder result new String Builder String cache Name get Cache Names boolean started caches contains Key cache Name result append cache Name append started created created result append return result String Managed Attribute description defined cache configuration names display Name List defined cache configurations data Type Data Type display Type Display Type public String get Defined Cache Configuration Names String Builder result new String Builder boolean comma false String cache Name get Cache Configuration Names comma result append else comma true result append cache Name result append return result String Managed Attribute description total number defined cache configurations display Name Number caches defined display Type Display Type public String get Defined Cache Count return String value get Cache Configuration Names size Managed Attribute description total number created caches including default cache display Name Number caches created display Type Display Type public String get Created Cache Count Internal Cache Registry internal Cache Registry global Component Registry get Component Internal Cache Registry class long created caches key Set stream filter c internal Cache Registry Internal Cache c count return String value created Managed Attribute description total number running caches including default cache display Name Number running caches display Type Display Type public String get Running Cache Count Internal Cache Registry internal Cache Registry global Component Registry get Component Internal Cache Registry class long running caches key Set stream filter c Running c internal Cache Registry Internal Cache c count return String value running Managed Attribute description Returns version display Name version display Type Display Type data Type Data Type public String get Version return Version get Version Managed Attribute description name cache manager display Name Cache manager name display Type Display Type data Type Data Type public String get Name return configuration Manager get Global Configuration global Jmx Statistics cache Manager Name Managed Operation description Starts default cache associated cache manager display Name Starts default cache public void start Cache get Cache Managed Operation description Starts named cache cache manager name start Cache display Name Starts cache given name public void start Cache Parameter name cache Name description Name cache start String cache Name get Cache cache Name Managed Attribute description network address associated instance display Name Network address data Type Data Type display Type Display Type public String get Node Address return get Logical Address String Managed Attribute description physical network addresses associated instance display Name Physical network addresses data Type Data Type display Type Display Type public String get Physical Addresses Transport get Transport null return local List Address address get Physical Addresses return address null local address String Managed Attribute description List members cluster display Name Cluster members data Type Data Type display Type Display Type public String get Cluster Members Transport get Transport null return local List Address address List get Members return address List String Managed Attribute description Size cluster number nodes display Name Cluster size display Type Display Type public int get Cluster Size Transport get Transport null return return get Members size inherit Doc Managed Attribute description Cluster name display Name Cluster name data Type Data Type display Type Display Type Override public String get Cluster Name return configuration Manager get Global Configuration transport cluster Name private String get Logical Address String return get Address null local get Address String private void assert Terminated stopping throw new Illegal Lifecycle State Exception Cache container stopped reused Recreate cache container Override public Transport get Transport global Component Registry null return null return global Component Registry get Component Transport class Override public Global Component Registry get Global Component Registry return global Component Registry Override public void add Cache Dependency String String cache Dependency Graph add Dependency Override public String String return super String Address get Address inherit Doc Managed Attribute description Global configuration properties display Name Global configuration properties data Type Data Type display Type Display Type public Properties get Global Configuration Properties return new Property Formatter format configuration Manager get Global Configuration Override public Cache Container Stats get Stats return stats Override public Health get Health return health Override public Cluster Executor executor global Component Registry get Status Component Status throw new Illegal State Exception Cache Manager must started retrieving Cluster Executor Groups Transport transport Groups Transport global Component Registry get Component Transport class transport null long time get Cache Manager Configuration transport distributed Sync Timeout return Cluster Executors Submission Executor null transport time Time Unit global Component Registry get Component Executor Service class Known Component Names global Component Registry get Component Scheduled Executor Service class Known Component Names else return Cluster Executors Submission Executor null null Transport Configuration get Default Value Time Unit Fork Join Pool common Pool global Component Registry get Component Scheduled Executor Service class Known Component Names Override public void close throws Exception stop
package org distribution ch impl import java io Exception import java io Object Input import java io Object Output import java util Array List import java util Arrays import java util Collections import java util Hash Map import java util List import java util Map import java util Set import java util function Unary Operator import org commons hash Hash import org commons marshall Instance Reusing Advanced Externalizer import org commons util Immutables import org distribution ch Consistent Hash import org globalstate Scoped Persistent State import org marshall core Ids import org remoting transport Address import org topology Persistent import org commons util Small Int Set import net jcip annotations Immutable Default link Consistent Hash implementation object immutable Every segment must primary owner author Dan Berindei author anistor redhat com since Immutable public class Default Consistent Hash extends Abstract Consistent Hash State constants private static final String num Owners private static final String segment Owner private static final String segment Owners private static final String segment Owner num private final int num Owners routing table private final List Address segment Owners public Default Consistent Hash Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors List Address segment Owners super hash Function num Segments members capacity Factors num Owners throw new Illegal Argument Exception number owners must strictly positive num Owners num Owners segment Owners new List num Segments int num Segments segment Owners null segment Owners Empty throw new Illegal Argument Exception Segment owner list null empty segment Owners Immutables immutable List Copy segment Owners used externalizer skip copying collections private Default Consistent Hash Hash hash Function int num Owners int num Segments List Address members float capacity Factors List Address segment Owners super hash Function num Segments members capacity Factors num Owners throw new Illegal Argument Exception number owners must strictly positive num Owners num Owners int num Segments segment Owners null segment Owners size throw new Illegal Argument Exception Segment owner list null empty segment Owners segment Owners Default Consistent Hash Scoped Persistent State state super state num Owners Integer parse Int state get Property int num Segments parse Num Segments state segment Owners new List num Segments int segment Owners length int segment Owner Count Integer parse Int state get Property String format segment Owners new Array List int j j segment Owner Count j Persistent uuid Persistent String state get Property String format j segment Owners add uuid Override public int get Num Segments return segment Owners length Override public Set Integer get Segments Owner Address owner owner null throw new Illegal Argument Exception owner null members contains owner throw new Illegal Argument Exception Node owner member Set Integer segments new Small Int Set segment Owners length int segment segment segment Owners length segment segment Owners segment contains owner segments add segment return segments Override public Set Integer get Primary Segments Owner Address owner owner null throw new Illegal Argument Exception owner null members contains owner throw new Illegal Argument Exception Node owner member Small Int Set segments new Small Int Set segment Owners length int segment segment segment Owners length segment owner equals segment Owners segment get segments add segment return segments deprecated Since use link Hash Function Partitioner get Segment End Hashes instead Deprecated public List Integer get Segment End Hashes int num Segments segment Owners length List Integer hashes new Array List num Segments int num Segments hashes add num Segments segment Size return hashes Override public List Address locate Owners Segment int segment Id return segment Owners segment Id Override public Address locate Primary Owner Segment int segment Id return segment Owners segment Id get Override public int get Num Owners return num Owners Override public boolean Segment Local Node Address node Address int segment Id return segment Owners segment Id contains node Address Override public int hash Code int result num Owners result result members hash Code result result Arrays hash Code segment Owners return result Override public boolean equals Object return true null get Class get Class return false Default Consistent Hash Default Consistent Hash num Owners num Owners return false segment Owners length segment Owners length return false hash Function equals hash Function return false members equals members return false int segment Owners length segment Owners equals segment Owners return false return true Override public String String Ownership Statistics stats new Ownership Statistics members String Builder sb new String Builder Default Consistent Hash sb append ns append segment Owners length sb append owners append members size append boolean first true Address members first first false else sb append int primary Owned stats get Primary Owned int owned stats get Owned sb append append append primary Owned append append owned primary Owned sb append return sb String Override public String get Routing Table String String Builder sb new String Builder Address members sb length sb append n Set Integer primary Segments get Primary Segments Owner sb append append primary append primary Segments Set Integer backup Segments get Segments Owner backup Segments remove primary Segments sb append backup append backup Segments return sb String Merges two consistent hash objects number segments num Owners hash function segment primary owner first priority primary owners become backups public Default Consistent Hash union Default Consistent Hash dch check Hash Segments dch num Owners dch get Num Owners throw new Illegal Argument Exception consistent hash objects must number owners List Address union Members new Array List members merge Lists union Members dch get Members List Address union Segment Owners new List segment Owners length int segment Owners length union Segment Owners new Array List locate Owners Segment merge Lists union Segment Owners dch locate Owners Segment Map Address Float union Capacity Factors union Capacity Factors dch return new Default Consistent Hash hash Function num Owners union Segment Owners length union Members union Capacity Factors union Segment Owners public String pretty Print Ownership String Builder sb new String Builder Address member get Members sb append n append member append int segment segment segment Owners length segment int index segment Owners segment index member index sb append append segment index sb append return sb String Override public void Scoped State Scoped Persistent State state super Scoped State state state set Property num Owners state set Property segment Owners length int segment Owners length List Address segment Owner Addresses segment Owners state set Property String format segment Owner Addresses size int j j segment Owner Addresses size j state set Property String format j segment Owner Addresses get j String Override public Consistent Hash remap Addresses Unary Operator Address remapper List Address remapped Members remap Members remapper remapped Members null return null Map Address Float remapped Capacity Factors remap Capacity Factors remapper List Address remapped Segment Owners new List segment Owners length int segment Owners length List Address remapped Owners new Array List segment Owners size Address address segment Owners remapped Owners add remapper apply address remapped Segment Owners remapped Owners return new Default Consistent Hash hash Function num Owners segment Owners length remapped Members remapped Capacity Factors remapped Segment Owners public static class Externalizer extends Instance Reusing Advanced Externalizer Default Consistent Hash Override public void Write Object Object Output output Default Consistent Hash ch throws Exception output write Int ch segment Owners length output write Int ch num Owners output write Object ch members output write Object ch capacity Factors output write Object ch hash Function Avoid computing identity Hash Code every Immutable List Copy Address Hash Map Address Integer member Indexes get Member Index Map ch members int ch segment Owners length List Address owners ch segment Owners output write Int owners size Address owner owners output write Int member Indexes get owner Override Suppress Warnings unchecked public Default Consistent Hash Read Object Object Input unmarshaller throws Exception Class Found Exception int num Segments unmarshaller read Int int num Owners unmarshaller read Int List Address members List Address unmarshaller read Object float capacity Factors float unmarshaller read Object Hash hash Hash unmarshaller read Object List Address segment Owners new List num Segments int num Segments int size unmarshaller read Int Address owners new Address size int j j size j int owner Index unmarshaller read Int owners j members get owner Index segment Owners Immutables immutable List Wrap owners return new Default Consistent Hash hash num Owners num Segments members capacity Factors segment Owners private Hash Map Address Integer get Member Index Map List Address members Hash Map Address Integer member Indexes new Hash Map members size int members size member Indexes put members get return member Indexes Override public Integer get Id return Ids Override public Set Class extends Default Consistent Hash get Type Classes return Collections singleton Default Consistent Hash class
package org distribution ch impl import java io Exception import java io Object Input import java io Object Output import java util Array List import java util Collection import java util Collections import java util Hash Set import java util List import java util Map import java util Set import org commons hash Hash import org commons marshall Abstract Externalizer import org distribution ch Consistent Hash Factory import org globalstate Scoped Persistent State import org marshall core Ids import org remoting transport Address import org util logging Log import org util logging Log Factory Default implementation link Consistent Hash Factory methods except link union Default Consistent Hash Default Consistent Hash return consistent hash floor num Owners num Segments num Nodes segments per owner ceil num Owners num Segments num Nodes author Dan Berindei author anistor redhat com since public class Default Consistent Hash Factory extends Abstract Consistent Hash Factory Default Consistent Hash private static final Log log Log Factory get Log Default Consistent Hash Factory class Override public Default Consistent Hash create Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors members size throw new Illegal Argument Exception Ca n construct consistent hash without members num Owners throw new Illegal Argument Exception number owners greater check Capacity Factors members capacity Factors Use rebalance algorithm get even spread Round robin n work properly segment owner must unique Builder builder new Builder hash Function num Owners num Segments members capacity Factors rebalance Builder builder return builder build Override public Default Consistent Hash Persistent State Scoped Persistent State state String consistent Hash Class state get Property consistent Hash Default Consistent Hash class get Name equals consistent Hash Class throw log persistent Consistent Hash Mismatch get Class get Name consistent Hash Class return new Default Consistent Hash state Leavers removed segments without owners assigned new owners Joiners might get un owned segments otherwise taken account happen rebalance param base existing consistent hash instance code null param actual Members list addresses representing new cache members return Override public Default Consistent Hash update Members Default Consistent Hash base List Address actual Members Map Address Float actual Capacity Factors actual Members size throw new Illegal Argument Exception Ca n construct consistent hash without members check Capacity Factors actual Members actual Capacity Factors boolean Capacity Factors actual Capacity Factors null base get Capacity Factors null actual Capacity Factors equals base get Capacity Factors actual Members equals base get Members Capacity Factors return base builder constructor automatically removes leavers Builder builder new Builder base actual Members actual Capacity Factors segments owners fix Try assign owners segments future rebalance call would Builder balanced Builder null int segment segment base get Num Segments segment builder get Owners segment Empty balanced Builder null balanced Builder new Builder builder rebalance Builder balanced Builder builder add Owners segment balanced Builder get Owners segment return builder build Override public Default Consistent Hash rebalance Default Consistent Hash base method assign new owners segments num owners num Owners segment floor num Segments num Nodes num segments primary owned n node n num segments primary owned n ceil num Segments num Nodes node n floor num Segments num Owners num Nodes num segments owned n node n num segments owned n ceil num Segments num Owners num Nodes node n Builder builder new Builder base rebalance Builder builder Default Consistent Hash balanced builder build return base n change anything return balanced equals base base balanced Merges two consistent hash objects number segments num Owners hash function segment primary owner first priority primary owners become backups Override public Default Consistent Hash union Default Consistent Hash dch Default Consistent Hash dch return dch union dch protected void rebalance Builder Builder builder add Primary Owners builder add Backup Owners builder protected void add Primary Owners Builder builder add First Owner builder Try replace primary owners many segments backups segments swap Primary Owners Backups builder segments n enough owners try add new owner primary owner int actual Num Owners builder get Actual Num Owners replace Primary Owners builder actual Num Owners primary owners still many segments allow adding extra owner primary owner Since segment primary owner enough give us proper primary owner segment replace Primary Owners builder actual Num Owners private void add First Owner Builder builder int segment segment builder get Num Segments segment builder get Owners segment size continue Address new Primary find New Primary Owner builder builder get Members null new Primary null builder add Primary Owner segment new Primary protected void replace Primary Owners Builder builder int max Owners Find node worst primary owned segments capacity ratio Iterate segments primary owned possible replace another node replacing check still worst node repeat new worst node Keep track segments already replaced primary owner n twice boolean primary Owner Replaced true primary Owner Replaced Address worst Node find Worst Primary Owner builder builder get Members primary Owner Replaced false int segment builder get Num Segments segment segment builder get Owners segment size max Owners continue replace worst node primary owner builder get Primary Owner segment equals worst Node continue Address new Primary find New Primary Owner builder builder get Members worst Node new Primary null builder get Owners segment contains new Primary builder add Primary Owner segment new Primary primary Owner Replaced true worst Node find Worst Primary Owner builder builder get Members protected void swap Primary Owners Backups Builder builder segment primary Owned primary Owner segment max Primary Segments try swap primary owner one backup owners new primary owner must primary min Primary Segments segments Iterate reverse order looks stable logs add nodes int segment builder get Num Segments segment segment builder get Owners segment Empty continue Address primary Owner builder get Primary Owner segment Address new Primary find New Primary Owner builder builder get Backup Owners segment primary Owner new Primary null actually replaces primary owner builder replace Primary Owner Backup segment new Primary protected void add Backup Owners Builder builder Remove extra owners could leftovers add Primary Owners remove Extra Backup Owners builder owners segment num Owners add new owners always add member owner already best owned segments capacity ratio Add Backup Owners builder owners segment num Owners every segment steps owner exists non owner better owned segments capacity ratio replace replace Backup Owners builder protected void remove Extra Backup Owners Builder builder Find node worst segments capacity ratio replace one owner lists Repeat next worst node List Address untested Nodes new Array List Address builder get Members untested Nodes Empty boolean owner Removed false Address worst Node find Worst Backup Owner builder untested Nodes Iterate reverse order looks stable logs add nodes int segment builder get Num Segments segment segment List Address owners builder get Owners segment owners size builder get Actual Num Owners continue int owner Idx owners index worst Node n remove primary owner Idx builder remove Owner segment worst Node owner Removed true worst node might changed untested Nodes new Array List Address builder get Members worst Node find Worst Backup Owner builder untested Nodes owner Removed untested Nodes remove worst Node return worst backup owner code null remaining nodes segments private Address find Worst Backup Owner Builder builder List Address nodes Address worst null float max Segments Per Capacity Address owner nodes float capacity Factor builder get Capacity Factor owner worst null builder get Owned owner capacity Factor max Segments Per Capacity worst owner max Segments Per Capacity capacity Factor builder get Owned owner capacity Factor return worst protected void Add Backup Owners Builder builder int segment segment builder get Num Segments segment List Address owners builder get Owners segment owners size builder get Actual Num Owners Address new Owner find New Backup Owner builder owners null builder add Owner segment new Owner protected void replace Backup Owners Builder builder Find node worst segments capacity ratio replace one owner lists possible replace owner worst node remove worst untested nodes list try new worst repeating necessary replacing one owner go back original untested nodes list List Address untested Nodes new Array List Address builder get Members untested Nodes Empty Address worst Node find Worst Backup Owner builder untested Nodes boolean backup Owner Replaced false Iterate reverse order looks stable logs add nodes int segment builder get Num Segments segment segment List Address owners builder get Owners segment int owner Idx owners index worst Node n replace primary owner Idx continue Surely better node replace owner Address replacement find New Backup Owner builder owners worst Node replacement null log tracef Segment replacing owner segment worst Node replacement builder remove Owner segment worst Node builder add Owner segment replacement backup Owner Replaced true worst node might changed untested Nodes new Array List Address builder get Members worst Node find Worst Backup Owner builder untested Nodes backup Owner Replaced untested Nodes remove worst Node return member worst owned segments capacity ratio also excludes list protected Address find New Backup Owner Builder builder Collection Address excludes Address owner want owned capacity ratio actual owner removing current segment bigger owned capacity ratio new owner adding current segment future pass wo n try switch back Address best null float initial Capacity Factor owner null builder get Capacity Factor owner float best Segments Per Capacity initial Capacity Factor builder get Owned owner initial Capacity Factor Float Address candidate builder get Members excludes null excludes contains candidate int owned builder get Owned candidate float capacity Factor builder get Capacity Factor candidate owned capacity Factor best Segments Per Capacity best candidate best Segments Per Capacity owned capacity Factor return best protected static class Builder extends Abstract Consistent Hash Factory Builder private final int initial Num Owners private final int actual Num Owners private final List Address segment Owners debugging private int mod Count public Builder Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors super hash Function new Ownership Statistics members members capacity Factors initial Num Owners num Owners actual Num Owners compute Actual Num Owners num Owners members capacity Factors segment Owners new List num Segments int segment segment num Segments segment segment Owners segment new Array List Address actual Num Owners public Builder Default Consistent Hash base List Address actual Members Map Address Float actual Capacity Factors super base get Hash Function new Ownership Statistics base actual Members actual Members actual Capacity Factors int num Segments base get Num Segments Set Address actual Members Set new Hash Set Address actual Members List owners new List num Segments int segment segment num Segments segment owners segment new Array List base locate Owners Segment segment owners segment retain actual Members Set initial Num Owners base get Num Owners actual Num Owners compute Actual Num Owners initial Num Owners actual Members actual Capacity Factors segment Owners owners public Builder Default Consistent Hash base base base get Members base get Capacity Factors public Builder Builder super int num Segments get Num Segments List owners new List num Segments int segment segment num Segments segment owners segment new Array List Address segment Owners segment initial Num Owners initial Num Owners actual Num Owners actual Num Owners segment Owners owners public int get Actual Num Owners return actual Num Owners public int get Num Segments return segment Owners length public List Address get Owners int segment return segment Owners segment public Address get Primary Owner int segment return segment Owners segment get public List Address get Backup Owners int segment return segment Owners segment sub List segment Owners segment size public boolean add Owner int segment Address owner mod Count List Address Segment Owners segment Owners segment Segment Owners contains owner return false Segment Owners add owner stats inc Owned owner Segment Owners size first owner stats inc Primary Owned owner return true public boolean add Owners int segment Collection Address new Owners boolean modified false Address owner new Owners modified add Owner segment owner return modified public boolean remove Owner int segment Address owner mod Count List Address segment Owners segment Owners segment segment Owners get equals owner stats dec Primary Owned owner boolean modified segment Owners remove owner modified stats dec Owned owner return modified public void add Primary Owner int segment Address new Primary Owner mod Count List Address segment Owners segment Owners segment int owner Index segment Owners index new Primary Owner owner Index throw new Illegal Argument Exception new primary owner must backup already segment Owners Empty Address old Primary Owner segment Owners get stats dec Primary Owned old Primary Owner segment Owners add new Primary Owner stats inc Owned new Primary Owner stats inc Primary Owned new Primary Owner public void replace Primary Owner Backup int segment Address new Primary Owner mod Count List Address segment Owners segment Owners segment int owner Index segment Owners index new Primary Owner owner Index throw new Illegal Argument Exception new primary owner must already backup owner Address old Primary Owner segment Owners get stats dec Primary Owned old Primary Owner segment Owners remove owner Index segment Owners add new Primary Owner stats inc Primary Owned new Primary Owner public Default Consistent Hash build return new Default Consistent Hash hash Function initial Num Owners segment Owners length members capacity Factors segment Owners public int get Primary Owned Address node return stats get Primary Owned node public int get Owned Address node return stats get Owned node public float get Primary Owned Per Capacity Address node float capacity Factor get Capacity Factor node return capacity Factor get Primary Owned node capacity Factor Float public float get Owned Per Capacity Address node float capacity Factor get Capacity Factor node return capacity Factor get Owned node capacity Factor Float public int compute Actual Num Owners int num Owners List Address members Map Address Float capacity Factors int nodes Load members size capacity Factors null nodes Load Address node members capacity Factors get node nodes Load return Math min num Owners nodes Load Override public boolean equals Object return null get Class get Class Override public int hash Code return public static class Externalizer extends Abstract Externalizer Default Consistent Hash Factory Override public void write Object Object Output output Default Consistent Hash Factory chf throws Exception Override Suppress Warnings unchecked public Default Consistent Hash Factory read Object Object Input unmarshaller throws Exception Class Found Exception return new Default Consistent Hash Factory Override public Integer get Id return Ids Override public Set Class extends Default Consistent Hash Factory get Type Classes return Collections singleton Default Consistent Hash Factory class
package org container import static org commons util Util Str import java util Abstract Collection import java util Abstract Set import java util Collection import java util Collections import java util Iterator import java util Map import java util Map Entry import java util Element Exception import java util Optional import java util Set import java util Spliterator import java util Spliterators import java util concurrent Concurrent Map import java util function Bi Consumer import org commons logging Log import org commons logging Log Factory import org commons util Collection Factory import org commons util Entry Size Calculator import org commons util Eviction Listener import org commons util Peekable Map import org container entries Cache Entry Size Calculator import org container entries Immortal Cache Entry import org container entries Internal Cache Entry import org container entries Primitive Entry Size Calculator import org eviction Activation Manager import org eviction Eviction Manager import org eviction Eviction Type import org eviction Passivation Manager import org expiration Expiration Manager import org factories annotations Inject import org filter Key Filter import org filter Key Value Filter import org marshall core Wrapped Byte Array Size Calculator import org metadata Metadata import org metadata impl Metadata import org notifications cachelistener Cache Notifier import org persistence manager Persistence Manager import org util Core Immutables import org util Time Service import org util concurrent Within Thread Executor import com github benmanes caffeine cache Cache import com github benmanes caffeine cache Cache Writer import com github benmanes caffeine cache Caffeine import com github benmanes caffeine cache Policy import com github benmanes caffeine cache Removal Cause import net jcip annotations Thread Safe Default Data Container eviction non eviction based data container author Manik Surtani author Galder Zamarre author Vladimir Blagojevic author href http gleamynode net Trustin Lee since Thread Safe public class Default Data Container implements Data Container private static final Log log Log Factory get Log Default Data Container class private static final boolean trace log Trace Enabled private final Concurrent Map Internal Cache Entry entries private final Cache Internal Cache Entry eviction Cache protected Internal Entry Factory entry Factory private Eviction Manager eviction Manager private Passivation Manager passivator private Activation Manager activator private Persistence Manager pm private Time Service time Service private Cache Notifier cache Notifier private Expiration Manager expiration Manager public Default Data Container int concurrency Level comparing implementations passed could fallback entries Collection Factory make Concurrent Parallel Map concurrency Level eviction Cache null private static Caffeine caffeine Builder return Caffeine Caffeine new Builder protected Default Data Container int concurrency Level long threshold Size Eviction Type threshold Policy Default Eviction Listener eviction Listener new Default Eviction Listener Caffeine Internal Cache Entry caffeine caffeine Builder switch threshold Policy case Cache Entry Size Calculator calc new Cache Entry Size Calculator new Wrapped Byte Array Size Calculator new Primitive Entry Size Calculator caffeine weigher k v int calc calculate Size k v maximum Weight threshold Size break case caffeine maximum Size threshold Size break default throw new Unsupported Operation Exception Policy supported threshold Policy eviction Cache apply Listener caffeine eviction Listener build entries eviction Cache Map private Caffeine Internal Cache Entry apply Listener Caffeine Internal Cache Entry caffeine Default Eviction Listener listener return caffeine executor new Within Thread Executor removal Listener k v c switch c case listener Entry Eviction Collections singleton Map k v break case listener Entry Removed new Immortal Cache Entry k v break case listener Entry Activated k break writer new Cache Writer Internal Cache Entry Override public void write key Internal Cache Entry value Override public void delete key Internal Cache Entry value Removal Cause cause cause Removal Cause listener Entry Chosen Eviction new Immortal Cache Entry key value Method invoked memory policy used param concurrency Level param threshold Size param size Calculator protected Default Data Container int concurrency Level long threshold Size Entry Size Calculator super super size Calculator Default Eviction Listener eviction Listener new Default Eviction Listener Entry Size Calculator Internal Cache Entry calc new Cache Entry Size Calculator size Calculator eviction Cache apply Listener Caffeine new Builder weigher k Internal Cache Entry v int calc calculate Size k v maximum Weight threshold Size eviction Listener build entries eviction Cache Map Inject public void initialize Eviction Manager eviction Manager Passivation Manager passivator Internal Entry Factory entry Factory Activation Manager activator Persistence Manager clm Time Service time Service Cache Notifier cache Notifier Expiration Manager expiration Manager eviction Manager eviction Manager passivator passivator entry Factory entry Factory activator activator pm clm time Service time Service cache Notifier cache Notifier expiration Manager expiration Manager public static Default Data Container bounded Data Container int concurrency Level long max Entries Eviction Type threshold Policy return new Default Data Container concurrency Level max Entries threshold Policy public static Default Data Container bounded Data Container int concurrency Level long max Entries Entry Size Calculator super super size Calculator return new Default Data Container concurrency Level max Entries size Calculator public static Default Data Container un Bounded Data Container int concurrency Level return new Default Data Container concurrency Level Override public Internal Cache Entry peek Object key entries instanceof Peekable Map return Peekable Map Internal Cache Entry entries peek key return entries get key Override public Internal Cache Entry get Object k Internal Cache Entry e entries get k e null e Expire long current Time Millis time Service wall Clock Time e Expired current Time Millis expiration Manager handle Memory Expiration e current Time Millis e null else e touch current Time Millis return e Override public void put k v Metadata metadata boolean l Entry false metadata instanceof Metadata metadata Metadata metadata metadata l Entry true Internal Cache Entry e entries get k trace log tracef Creating new writing Existing metadata new value e metadata Str v final Internal Cache Entry copy l Entry copy entry Factory create k v metadata else e null copy entry Factory update e v metadata else brand new entry copy entry Factory create k v metadata trace log tracef Store container copy entries compute copy get Key key entry activator Update key entry null return copy Override public boolean contains Key Object k Internal Cache Entry ice peek k ice null ice Expire long current Time Millis time Service wall Clock Time ice Expired current Time Millis expiration Manager handle Memory Expiration ice current Time Millis ice null return ice null Override public Internal Cache Entry remove Object k final Internal Cache Entry reference new Internal Cache Entry entries compute k key entry activator Remove key entry null reference entry return null Internal Cache Entry e reference trace log tracef Removed container e return e null e Expire e Expired time Service wall Clock Time null e private Policy Eviction Internal Cache Entry eviction eviction Cache null Optional Policy Eviction Internal Cache Entry eviction eviction Cache policy eviction eviction Present return eviction get throw new Unsupported Operation Exception Override public long capacity Policy Eviction Internal Cache Entry evict eviction return evict get Maximum Override public void resize long new Size Policy Eviction Internal Cache Entry evict eviction evict set Maximum new Size Override public int size int size loop make sure remove expired entries Iterator Internal Cache Entry iter iterator iter Next iter next size Integer return Integer return size Override public int size Including Expired return entries size Override public void clear log tracef Clearing data container entries clear Override public Set key Set return Collections unmodifiable Set entries key Set Override public Collection values return new Values Override public Set Internal Cache Entry entry Set return new Entry Set Override public void evict key entries compute Present key entry passivator passivate entry return null Override public Internal Cache Entry compute key Compute Action action return entries compute key k old Entry Internal Cache Entry new Entry action compute k old Entry entry Factory new Entry old Entry return old Entry else new Entry null activator Remove k false return null activator Update k old Entry null trace log tracef Store container new Entry return new Entry Override public Iterator Internal Cache Entry iterator return new Entry Iterator entries values iterator false Override public Iterator Internal Cache Entry iterator Including Expired return new Entry Iterator entries values iterator true private final class Default Eviction Listener implements Eviction Listener Internal Cache Entry Override public void Entry Eviction Map Internal Cache Entry evicted eviction Manager Entry Eviction evicted Override public void Entry Chosen Eviction Entry Internal Cache Entry entry passivator passivate entry get Value Override public void Entry Activated Object key activator Update key true Override public void Entry Removed Entry Internal Cache Entry entry private class Immutable Entry Iterator extends Entry Iterator Immutable Entry Iterator Iterator Internal Cache Entry super false Override public Internal Cache Entry next return Core Immutables immutable Internal Cache Entry super next public class Entry Iterator implements Iterator Internal Cache Entry private final Iterator Internal Cache Entry private final boolean include Expired private Internal Cache Entry next Entry Iterator Iterator Internal Cache Entry boolean include Expired include Expired include Expired private Internal Cache Entry get Next boolean initialized Time false long Next Internal Cache Entry entry next include Expired entry Expire log tracef Return next entry entry return entry else initialized Time time Service wall Clock Time initialized Time true entry Expired log tracef Return next entry entry return entry else log tracef expired entry log tracef Return next null return null Override public Internal Cache Entry next next null next get Next next null throw new Element Exception Internal Cache Entry Return next next null return Return Override public boolean Next next null next get Next return next null Override public void remove throw new Unsupported Operation Exception Minimal implementation needed unmodifiable Set private class Entry Set extends Abstract Set Internal Cache Entry Override public boolean contains Object instanceof Map Entry return false Suppress Warnings rawtypes Map Entry e Map Entry Internal Cache Entry ice entries get e get Key ice null return false return ice get Value equals e get Value Override public Iterator Internal Cache Entry iterator return new Immutable Entry Iterator entries values iterator Override public int size return entries size Override public String String return entries String Override public Spliterator Internal Cache Entry spliterator return Spliterators spliterator Spliterator Spliterator Minimal implementation needed unmodifiable Collection private class Values extends Abstract Collection Override public Iterator iterator return new Value Iterator entries values iterator Override public int size return entries size Override public Spliterator spliterator return Spliterators spliterator Spliterator private static class Value Iterator implements Iterator Iterator Internal Cache Entry current Iterator private Value Iterator Iterator Internal Cache Entry current Iterator Override public boolean Next return current Iterator Next Override public void remove throw new Unsupported Operation Exception Override public next return current Iterator next get Value Override public void execute Task final Key Filter super filter final Bi Consumer super Internal Cache Entry action throws Interrupted Exception filter null throw new Illegal Argument Exception filter specified action null throw new Illegal Argument Exception action specified entries key Internal Cache Entry value filter accept key action accept key value figure way interruption better iteration Thread current Thread Interrupted throw new Interrupted Exception Override public void execute Task final Key Value Filter super super filter final Bi Consumer super Internal Cache Entry action throws Interrupted Exception filter null throw new Illegal Argument Exception filter specified action null throw new Illegal Argument Exception action specified entries key Internal Cache Entry value filter accept key value get Value value get Metadata action accept key value figure way interruption better iteration Thread current Thread Interrupted throw new Interrupted Exception
package org distexec import java io Externalizable import java io Serializable Exception import java io Serializable import java util Array List import java util Arrays import java util Collection import java util Collections import java util Hash Map import java util Iterator import java util Linked List import java util List import java util Map import java util Map Entry import java util Random import java util concurrent Abstract Executor Service import java util concurrent Callable import java util concurrent Cancellation Exception import java util concurrent Completable Future import java util concurrent Completion Service import java util concurrent Execution Exception import java util concurrent Executor Completion Service import java util concurrent Executor Service import java util concurrent Executors import java util concurrent Future import java util concurrent Rejected Execution Exception import java util concurrent Runnable Future import java util concurrent Thread Pool Executor import java util concurrent Time Unit import java util concurrent Timeout Exception import java util concurrent atomic Atomic Boolean import org Advanced Cache import org Cache import org commands Cancel Command import org commands Cancellation Service import org commands Commands Factory import org commands read Distributed Execute Command import org commons marshall Marshaller import org commons marshall Streaming Marshaller import org commons util Util import org configuration cache Configuration import org distexec spi Distributed Task Lifecycle Service import org distribution Distribution Info import org distribution Distribution Manager import org factories Component Registry import org factories threads Default Thread Factory import org interceptors Async Interceptor import org interceptors Async Interceptor Chain import org interceptors locking Clustering Dependent Logic import org lifecycle Component Status import org manager Embedded Cache Manager import org remoting responses Response import org remoting responses Successful Response import org remoting rpc Response Mode import org remoting rpc Rpc Manager import org remoting transport Address import org remoting transport Topology Aware Address import org remoting transport jgroups Suspect Exception import org security Authorization Manager import org security Authorization Permission import org util Time Service import org util concurrent Completable Futures import org util logging Log import org util logging Log Factory implementation link Executor Service link Distributed Executor Service Executor Service provides methods submit tasks execution cluster nodes p Note due potential task migration another nodes every link Callable link Runnable link Distributed Callable submitted must either link Serializable link Externalizable Also value returned callable must link Serializable link Externalizable Unfortunately value returned serializable link Serializable Exception thrown author Vladimir Blagojevic since deprecated since Please use link Embedded Cache Manager executor link org Cache Stream instead public class Default Executor Service extends Abstract Executor Service implements Distributed Executor Service private static final Node Filter Topology Aware Address Machine private static final Node Filter Topology Aware Address Rack private static final Node Filter Topology Aware Address Site private static final Node Filter Address Address true public static final Distributed Task Failover Policy new Task Failover Policy public static final Distributed Task Failover Policy new Random Node Task Failover Policy private static final Log log Log Factory get Log Default Executor Service class private static final boolean trace log Trace Enabled protected final Atomic Boolean Shutdown new Atomic Boolean false protected final Advanced Cache cache protected final Rpc Manager rpc protected final Async Interceptor Chain invoker protected final Commands Factory factory protected final Marshaller marshaller protected final Executor Service local Executor Service protected final Cancellation Service cancellation Service protected final Clustering Dependent Logic cluster Dependent Logic protected final boolean take Executor Ownership private final Time Service time Service Creates new Default Executor Service given master cache node local task execution distributed task executions initiated cache node param master Cache Node Cache node initiating distributed task public Default Executor Service Cache master Cache Node master Cache Node create Local Executor master Cache Node true public static Executor Service create Local Executor Cache master Cache Node String node Name master Cache Node null Security Actions get Configured Node Name master Cache Node null return Executors new Single Thread Executor new Default Thread Factory null Thread Default Thread Factory node Name Default Executor Service Creates new Default Executor Service given master cache node Executor Service parallel execution tasks ran node distributed task executions initiated cache node p Note Default Executor Service shutdown client supplied local Executor Service Default Executor Service shutdown Lifecycle management supplied Executor Service left client Also note client supplied Executor Service execute tasks caller thread e rejection Handler link Thread Pool Executor configured link link Thread Pool Executor Caller Runs Policy param master Cache Node Cache node initiating distributed task param local Executor Service Executor Service run local tasks public Default Executor Service Cache master Cache Node Executor Service local Executor Service master Cache Node local Executor Service false Creates new Default Executor Service given master cache node Executor Service parallel execution task ran node distributed task executions initiated cache node param master Cache Node Cache node initiating distributed task param local Executor Service Executor Service run local tasks param take Executor Ownership true link Distributed Executor Service shutdown link Distributed Executor Service shutdown method shutdown local Executor Service well public Default Executor Service Cache master Cache Node Executor Service local Executor Service boolean take Executor Ownership super master Cache Node null throw new Illegal Argument Exception use null cache Default Executor Service else local Executor Service null throw new Illegal Argument Exception use null instance Executor Service else try local Executor Service Shutdown throw new Illegal Argument Exception use instance Executor Service shutdown catch Illegal State Exception e take Executor Ownership throw new Illegal Argument Exception take ownership Managed Executor Service cache master Cache Node get Advanced Cache Component Registry registry Security Actions get Cache Component Registry cache ensure Access Permissions cache ensure Proper Cache State cache ensure Full Cache cache rpc Security Actions get Cache Rpc Manager cache invoker registry get Component Async Interceptor Chain class factory registry get Component Commands Factory class marshaller registry get Component Streaming Marshaller class cancellation Service registry get Component Cancellation Service class local Executor Service local Executor Service take Executor Ownership take Executor Ownership time Service registry get Time Service cluster Dependent Logic registry get Component Clustering Dependent Logic class Override public Distributed Task Builder create Distributed Task Builder Callable callable Configuration cache Configuration Security Actions get Cache Configuration cache long cache Configuration clustering remote Timeout Distributed Task Builder dtb new Default Distributed Task Builder dtb callable callable return dtb Override public Completable Future submit Runnable task result return Completable Future super submit task result Override public Completable Future submit Callable task return Completable Future super submit task Override public void shutdown real Shutdown false protected List Address get Members rpc null return rpc get Members else return Collections singleton List get Address protected List Address execution Candidates Distributed Task task return filter Members task get Task Execution Policy get Members private Address get Address return cluster Dependent Logic get Address private List Runnable real Shutdown boolean interrupt Shutdown set true cancel tasks take Executor Ownership interrupt local Executor Service shutdown else local Executor Service shutdown return Collections empty List Override public List Runnable shutdown return real Shutdown true Override public boolean Shutdown return Shutdown get Override public boolean Terminated Shutdown get account tasks return true return false Override public boolean await Termination long timeout Time Unit unit throws Interrupted Exception long nano Time Wait unit Nanos timeout wait tasks finish return true Override public invoke Collection extends Callable tasks throws Interrupted Exception Execution Exception try return Invoke tasks false catch Timeout Exception cannot Happen assert false return null Override public invoke Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception Execution Exception Timeout Exception return Invoke tasks true unit Nanos timeout main mechanics invoke essentially copied link Abstract Executor Service Invoke except replaced link Executor Completion Service link Distributed Execution Completion Service private Invoke Collection extends Callable tasks boolean timed long nanos throws Interrupted Exception Execution Exception Timeout Exception tasks null throw new Null Pointer Exception int ntasks tasks size ntasks throw new Illegal Argument Exception List Future futures new Array List ntasks Completion Service ecs new Distributed Execution Completion Service efficiency especially executors limited parallelism check see previously submitted tasks done submitting interleaving plus exception mechanics account messiness main loop try Record exceptions fail obtain result throw last exception got Execution Exception ee null long last Time timed time Service time Iterator extends Callable tasks iterator Start one task sure rest incrementally futures add ecs submit next ntasks int active Future f ecs poll f null ntasks ntasks futures add ecs submit next active else active break else timed f ecs poll nanos Time Unit f null throw new Timeout Exception long time Service time nanos time Service time Duration last Time Time Unit last Time else f ecs take f null active try return f get catch Interrupted Exception ie throw ie catch Execution Exception eex ee eex catch Runtime Exception rex ee new Execution Exception rex ee null ee new Execution Exception private static final long serial Version throw ee finally Future f futures f cancel true Override public void execute Runnable command Shutdown get Distributed Task Part Object cmd command instanceof Distributed Task Part cmd Distributed Task Part Object command else command instanceof Serializable cmd Distributed Task Part Object new Task command null else throw new Illegal Argument Exception Runnable command Serializable command cmd execute else throw new Rejected Execution Exception Override protected Runnable Future new Task Runnable runnable value runnable null throw new Null Pointer Exception Runnable Adapter adapter new Runnable Adapter runnable value return new Task adapter Override protected Runnable Future new Task Callable callable callable null throw new Null Pointer Exception Distributed Task Builder distributed Task Builder create Distributed Task Builder callable Distributed Task task distributed Task Builder build Distributed Execute Command execute Command factory build Distributed Execute Command callable get Address null return create Distributed Task Part task execute Command select Execution Node task Override public Completable Future submit Address target Callable task Distributed Task Builder distributed Task Builder create Distributed Task Builder task Distributed Task distributed Task distributed Task Builder build return submit target distributed Task Override public Completable Future submit Address target Distributed Task task task null throw new Null Pointer Exception target null throw new Null Pointer Exception List Address members get Members members contains target return Completable Futures completed Exception Future new Suspect Exception Target node target cluster member members members Address get Address Distributed Execute Command c target equals c factory build Distributed Execute Command clone task get Callable null else c factory build Distributed Execute Command task get Callable null Distributed Task Part part create Distributed Task Part task c target part execute return part Override public Completable Future submit Callable task input Distributed Task Builder distributed Task Builder create Distributed Task Builder task Distributed Task distributed Task distributed Task Builder build return submit distributed Task input Override public Completable Future submit Distributed Task task input task null throw new Null Pointer Exception Address get Address input Keys Specified input Map Address List nodes Keys Map keys Execution Nodes task get Task Execution Policy input check Execution Policy task nodes Keys Map input Array List Address nodes new Array List nodes Keys Map key Set Address target select Execution Node nodes Distributed Execute Command c target equals c factory build Distributed Execute Command clone task get Callable Arrays List input else c factory build Distributed Execute Command task get Callable Arrays List input Distributed Task Part part create Distributed Task Part task c Arrays List input target part execute return part else return submit task Override public List Completable Future submit Everywhere Callable task Distributed Task Builder distributed Task Builder create Distributed Task Builder task Distributed Task distributed Task distributed Task Builder build return submit Everywhere distributed Task Override public List Completable Future submit Everywhere Distributed Task task task null throw new Null Pointer Exception List Address members execution Candidates task List Completable Future futures new Array List members size Address get Address Address target members Distributed Execute Command c target equals c factory build Distributed Execute Command clone task get Callable null else c factory build Distributed Execute Command task get Callable null Distributed Task Part part create Distributed Task Part task c target futures add part part execute return futures Override public List Completable Future submit Everywhere Callable task input Distributed Task Builder distributed Task Builder create Distributed Task Builder task Distributed Task distributed Task distributed Task Builder build return submit Everywhere distributed Task input Override public List Completable Future submit Everywhere Distributed Task task input task null throw new Null Pointer Exception input Keys Specified input List Completable Future futures new Array List input length Address get Address Map Address List nodes Keys Map keys Execution Nodes task get Task Execution Policy input check Execution Policy task nodes Keys Map input Entry Address List e nodes Keys Map entry Set Address target e get Key Distributed Execute Command c target equals c factory build Distributed Execute Command clone task get Callable e get Value else c factory build Distributed Execute Command task get Callable e get Value Distributed Task Part part create Distributed Task Part task c e get Value target futures add part part execute return futures else return submit Everywhere task protected Callable clone Callable task return Util clone Marshaller marshaller task protected Distributed Task Part create Distributed Task Part Distributed Task task Distributed Execute Command c List input Keys Address target int failover Count return get Address equals target new Local Distributed Task Part task c List Object input Keys failover Count new Remote Distributed Task Part task c List Object input Keys target failover Count protected Distributed Task Part create Distributed Task Part Distributed Task task Distributed Execute Command c Address target int failover Count return create Distributed Task Part task c Collections empty List target failover Count private void check Execution Policy Distributed Task task Map Address List nodes Keys Map input nodes Keys Map null nodes Keys Map Empty throw new Illegal State Exception Distributed Task Execution Policy task get Task Execution Policy task task returned invalid keys Execution Nodes nodes Keys Map execution policy plan given input Arrays String input private boolean input Keys Specified input return input null input length protected Address select Execution Node List Address candidates List Address list random Cluster Members candidates return list get protected Address select Execution Node Distributed Task task return select Execution Node execution Candidates task protected List Address random Cluster Members final List Address members int num Needed members null members Empty throw new Illegal Argument Exception Invalid member list members members size num Needed log cannot Select Random Members num Needed members num Needed members size List Address members Copy new Array List members List Address chosen new Array List num Needed Random r new Random members Copy Empty num Needed chosen size int count members Copy size Address address members Copy remove r next Int count chosen add address return chosen protected Map Address List keys Execution Nodes Distributed Task Execution Policy policy input Distribution Manager dm cache get Distribution Manager Map Address List address Key new Hash Map input length boolean using Mode dm null key input Address owner Key using Mode List Address members new Array List get Members members filter Members policy members using mode https issues jboss org browse since keys values nodes lets pick randomly Collections shuffle members owner Key members get else mode Distribution Info distribution Info dm get Cache Topology get Distribution key Collection Address owners distribution Info write Owners List Address filtered filter Members policy owners filtered Empty owner Key filtered get else owner Key distribution Info primary List keys Node address Key get owner Key keys Node null keys Node new Linked List address Key put owner Key keys Node keys Node add key return address Key private List Address filter Members Distributed Task Execution Policy policy Collection Address members Node Filter filter switch policy case filter break case filter break case filter break case filter break default filter break List Address result new Array List Address address members address instanceof Topology Aware Address Topology Aware Address taa Topology Aware Address address filter include taa Topology Aware Address get Address result add address else result add address return result private void ensure Access Permissions final Advanced Cache cache Authorization Manager authorization Manager Security Actions get Cache Authorization Manager cache authorization Manager null authorization Manager check Permission Authorization Permission private void ensure Proper Cache State Advanced Cache cache throws Null Pointer Exception Illegal State Exception allow state Executor Service used components defining method link Start annotation cache get Status Component Status cache get Status Component Status throw new Illegal State Exception Invalid cache state cache get Status private void ensure Full Cache Advanced Cache cache List Async Interceptor interceptors Security Actions get Interceptor Chain cache interceptors null interceptors Empty throw log distributed Executors Supported private static class Random Node Task Failover Policy implements Distributed Task Failover Policy public Random Node Task Failover Policy super Override public Address failover Failover Context fc return random Node fc execution Candidates fc execution Failure Location protected Address random Node List Address candidates Address failed Execution Location Random r new Random candidates remove failed Execution Location candidates Empty throw new Illegal State Exception candidates failover candidates int Index r next Int candidates size return candidates get Index Override public int max Failover Attempts return private static class Task Failover Policy implements Distributed Task Failover Policy public Task Failover Policy super Override public Address failover Failover Context fc return fc execution Failure Location Override public int max Failover Attempts return Node Filter allows selection nodes according link Distributed Task Execution Policy interface Node Filter boolean include Topology Aware Address Address Topology Aware Address Address private class Default Distributed Task Builder implements Distributed Task Builder Distributed Task private Callable callable private long timeout private Distributed Task Execution Policy execution Policy Distributed Task Execution Policy private Distributed Task Failover Policy failover Policy public Default Distributed Task Builder long task Timeout timeout task Timeout Override public Distributed Task Builder callable Callable callable callable null throw new Illegal Argument Exception Callable null callable callable return Override public Distributed Task Builder timeout long Time Unit tu timeout Time Unit convert tu return Override public Distributed Task Builder execution Policy Distributed Task Execution Policy policy policy null throw new Illegal Argument Exception Distributed Task Execution Policy null execution Policy policy return Override public Distributed Task Builder failover Policy Distributed Task Failover Policy policy policy null failover Policy else failover Policy policy return Override public Distributed Task build Default Distributed Task Builder task new Default Distributed Task Builder timeout task callable callable task execution Policy execution Policy task failover Policy failover Policy return task Override public long timeout return timeout Override public Distributed Task Execution Policy get Task Execution Policy return execution Policy Override public Distributed Task Failover Policy get Task Failover Policy return failover Policy Override public Callable get Callable return callable Distributed Task Part represents unit work sent remote executed author Mircea Markus author Vladimir Blagojevic private abstract class Distributed Task Part extends Completable Future implements Runnable Future protected final Distributed Execute Command dist Command private final List Object input Keys private final Distributed Task owning Task private int failed Count private volatile boolean cancelled protected Distributed Task Part List Object input Keys Distributed Execute Command command Distributed Task task int failed Count input Keys input Keys dist Command command owning Task task failed Count failed Count public List Object get Input Keys return input Keys public Distributed Execute Command get Command return dist Command public Distributed Task get Owning Task return owning Task public abstract Address get Execution Target public abstract void execute Override public get throws Interrupted Exception Execution Exception try return inner Get Time Unit catch Timeout Exception e throw new Execution Exception e Override public get long timeout Time Unit unit throws Interrupted Exception Execution Exception Timeout Exception return inner Get timeout unit protected inner Get long timeout Time Unit unit throws Execution Exception Timeout Exception Interrupted Exception Cancelled throw new Cancellation Exception Task already cancelled long timeout Nanos compute Timeout Nanos timeout unit try return get Result timeout Nanos catch Timeout Exception te throw te catch Exception e could finished org util concurrent Timeout Exception right Future get timeout expired case want throw Timeout Exception e instanceof Execution Exception e get Cause instanceof org util concurrent Timeout Exception trace log tracef Distributed task timed throwing Timeout Exception ignoring exception e throw new Timeout Exception boolean Failover failed Count get Owning Task get Task Failover Policy max Failover Attempts Failover try return failover Execution e timeout Nanos Time Unit catch Exception failed throw wrap Execution Exception failed else throw wrap Execution Exception e protected get Result long timeout Nanos throws Exception timeout Nanos return super get timeout Nanos Time Unit else return super get protected long compute Timeout Nanos long timeout Time Unit unit long task Timeout Time Unit Nanos get Owning Task timeout long future Timeout Time Unit convert timeout unit long actual Timeout task Timeout future Timeout actual Timeout Math min task Timeout future Timeout else actual Timeout Math max task Timeout future Timeout return actual Timeout protected Execution Exception wrap Execution Exception Exception e e instanceof Execution Exception return Execution Exception e else return new Execution Exception e protected failover Execution final Exception cause long timeout Time Unit unit throws Exception final List Address execution Candidates execution Candidates get Owning Task Failover Context fc new Failover Context Override public List input Keys return List get Input Keys Override public Address execution Failure Location return get Execution Target Override public List Address execution Candidates return execution Candidates Override public Throwable cause return cause Address failover Target get Owning Task get Task Failover Policy failover fc log distributed Task Failover fc execution Failure Location failover Target cause Distributed Task Part part create Distributed Task Part owning Task dist Command get Input Keys failover Target failed Count part execute return part get timeout unit Override public void run execute private class Remote Distributed Task Part extends Distributed Task Part private final Address execution Target public Remote Distributed Task Part Distributed Task task Distributed Execute Command command List Object input Keys Address execution Target int failover Count super input Keys command task failover Count get Address equals execution Target throw new Illegal Argument Exception task executed local execution Target execution Target Override public Address get Execution Target return execution Target Override public void execute trace log tracef Sending remote execution node get Execution Target try rpc invoke Remotely Async Collections singleton List get Execution Target get Command rpc get Rpc Options Builder Response Mode timeout get Owning Task timeout Time Unit build Complete Map Address Response v Throwable null complete Exceptionally else try complete retrieve Result v catch Exception e complete Exceptionally e catch Throwable e log remote Execution Failed get Execution Target e Override public boolean cancel boolean may Interrupt Running Cancelled super cancel true Cancel Command ccc factory build Cancel Command Command dist Command get rpc invoke Remotely Collections singleton List get Execution Target ccc rpc get Default Rpc Options true return true else already cancelled return false private retrieve Result Map Address Response response throws Exception result null two never happen mark Illegal State Exception response null throw new Illegal State Exception Invalid response received response response size Entry Address Response e response entry Set Response value e get Value value instanceof Successful Response result Successful Response value get Response Value else throw new Execution Exception new Exception value null value String Unknown cause else never happen send Distributed Task Part one node execution therefore get one response throw new Illegal State Exception Invalid response response return result private class Local Distributed Task Part extends Distributed Task Part public Local Distributed Task Part Distributed Task task Distributed Execute Command command List Object input Keys int failover Count super input Keys command task failover Count Override public synchronized boolean cancel boolean may Interrupt Running Cancelled super cancel true Cancel Command ccc factory build Cancel Command Command dist Command get ccc init cancellation Service try ccc invoke catch Throwable log could Execute Cancellation Locally return true else already cancelled return false Override public Address get Execution Target return get Address Override public void execute log debugf Sending self try Runnable call get Command init cache Distributed Task Lifecycle Service lifecycle Distributed Task Lifecycle Service get Instance try hook lifecycle lifecycle Pre Execute get Command get Callable cache Collections unmodifiable Collection get Input Keys cancellation Service register Thread current Thread get Command get get Command invoke Async Complete rv null complete Exceptionally else complete rv hook lifecycle lifecycle Post Execute get Command get Callable cancellation Service unregister get Command get catch Throwable complete Exceptionally hook lifecycle lifecycle Post Execute get Command get Callable cancellation Service unregister get Command get local Executor Service execute call catch Throwable e log local Execution Failed e
package org util concurrent locks impl import static java util concurrent atomic Atomic Reference Field Updater new Updater import static org commons util Util Str import java util Array List import java util Collection import java util Hash Set import java util List import java util Objects import java util Set import java util concurrent Callable import java util concurrent Completable Future import java util concurrent Scheduled Executor Service import java util concurrent Scheduled Future import java util concurrent Time Unit import java util concurrent atomic Atomic Integer import java util concurrent atomic Atomic Reference Field Updater import org commons util Util import org configuration cache Configuration import org context Invocation Context import org factories Known Component Names import org factories annotations Component Name import org factories annotations Inject import org jmx annotations Data Type import org jmx annotations Bean import org jmx annotations Managed Attribute import org util concurrent Timeout Exception import org util concurrent locks Deadlock Detected Exception import org util concurrent locks Extended Lock Promise import org util concurrent locks Key Aware Lock Listener import org util concurrent locks Key Aware Lock Promise import org util concurrent locks Lock Listener import org util concurrent locks Lock Manager import org util concurrent locks Lock Promise import org util concurrent locks Lock State import org util logging Log import org util logging Log Factory default link Lock Manager implementation transactional non transactional caches author Pedro Ruivo since Bean object Name Lock Manager description Manager handles locks entries public class Default Lock Manager implements Lock Manager private static final Log log Log Factory get Log Default Lock Manager class private static final boolean trace log Trace Enabled private static final Atomic Reference Field Updater Composite Lock Promise Lock State new Updater Composite Lock Promise class Lock State class lock State private Lock Container lock Container private Configuration configuration private Scheduled Executor Service scheduler Inject public void inject Lock Container container Configuration configuration Component Name Known Component Names Scheduled Executor Service executor Service lock Container container configuration configuration scheduler executor Service Override public Key Aware Lock Promise lock Object key Object lock Owner long time Time Unit unit Objects require Non Null key Key must non null Objects require Non Null lock Owner Lock owner must non null Objects require Non Null unit Time unit must non null trace log tracef Lock key owner timeout Str key lock Owner time unit key lock Owner lock already owned lock owner reason attempt lock needlessly Lock lock lock Container get Lock key lock null lock get Lock Owner key log tracef locking key already held lock owner key return Key Aware Lock Promise Extended Lock Promise promise lock Container acquire key lock Owner time unit return new Key Aware Extended Lock Promise promise key unit Millis time schedule Lock Timeout Task scheduler Override public Key Aware Lock Promise lock Collection keys Object lock Owner long time Time Unit unit Objects require Non Null keys Keys must non null Objects require Non Null lock Owner Lock owner must non null Objects require Non Null unit Time unit must non null keys Empty trace log tracef Lock keys found owner lock Owner return Key Aware Lock Promise else keys size although cost creating iterator least n need enter synchronized section return lock keys iterator next lock Owner time unit final Set Object unique Keys filter Distinct Keys keys unique Keys size although cost creating iterator least n need enter synchronized section return lock unique Keys iterator next lock Owner time unit trace log tracef Lock keys owner timeout Str unique Keys lock Owner time unit final Composite Lock Promise composite Lock Promise new Composite Lock Promise unique Keys size needed avoid internal deadlock lock owner invokes method keys ordering solve problem since acquire non blocking lock owner iterate faster slower synchronized Object key unique Keys composite Lock Promise add Lock new Key Aware Extended Lock Promise lock Container acquire key lock Owner time unit key unit Millis time composite Lock Promise mark List Final return composite Lock Promise schedule Lock Timeout Task scheduler time unit private Set Object filter Distinct Keys Collection collection collection instanceof Set noinspection unchecked return Set Object collection else return new Hash Set collection Override public void unlock Object key Object lock Owner trace log tracef Release lock key owner key lock Owner lock Container release key lock Owner Override public void unlock Collection keys Object lock Owner trace log tracef Release locks keys owner Str keys lock Owner keys Empty return Object key keys key lock owner means explicitly locked unlocked via single argument unlock method used cache lock owner specifically overridden key lock Owner log tracef Ignoring key matches lock owner key else lock Container release key lock Owner Override public void unlock Invocation Context context unlock context get Locked Keys context get Lock Owner context clear Locked Keys Override public boolean owns Lock Object key Object lock Owner Object current Owner get Owner key return current Owner null current Owner equals lock Owner Override public boolean Locked Object key return get Owner key null Override public Object get Owner Object key Lock lock lock Container get Lock key return lock null null lock get Lock Owner Override public String print Lock Info return lock Container String Override Managed Attribute description number exclusive locks held display Name Number locks held public int get Number Locks Held return lock Container get Num Locks Held Managed Attribute description concurrency level Lock Manager configured display Name Concurrency level data Type Data Type public int get Concurrency Level return configuration locking concurrency Level Managed Attribute description number exclusive locks available display Name Number locks available public int get Number Locks Available return lock Container size lock Container get Num Locks Held Override public Lock get Lock Object key return lock Container get Lock key private static class Key Aware Extended Lock Promise implements Key Aware Lock Promise Extended Lock Promise Callable Void private final Extended Lock Promise lock Promise private final Object key private final long timeout Millis private Key Aware Extended Lock Promise Extended Lock Promise lock Promise Object key long timeout Millis lock Promise lock Promise key key timeout Millis timeout Millis Override public void cancel Lock State cause lock Promise cancel cause Override public Object get Requestor return lock Promise get Requestor Override public Object get Owner return lock Promise get Owner Override public boolean Available return lock Promise Available Override public void lock throws Interrupted Exception Timeout Exception try lock Promise lock catch Timeout Exception e throw log unable Acquire Lock Util pretty Print Time timeout Millis Str key lock Promise get Requestor lock Promise get Owner Override public void add Listener Lock Listener listener lock Promise add Listener listener Override public void add Listener Key Aware Lock Listener listener lock Promise add Listener state listener Event key state Override public Void call throws Exception lock Promise cancel Lock State return null Key Aware Extended Lock Promise schedule Lock Timeout Task Scheduled Executor Service executor Service executor Service null timeout Millis Available Scheduled Future future executor Service schedule timeout Millis Time Unit lock Promise add Listener state future cancel false return private static class Composite Lock Promise implements Key Aware Lock Promise Lock Listener Callable Void private final List Key Aware Extended Lock Promise lock Promise List private final Completable Future Lock State notifier Suppress Warnings Final volatile Lock State lock State Lock State private final Atomic Integer counters Left new Atomic Integer private Composite Lock Promise int size lock Promise List new Array List size notifier new Completable Future void add Lock Key Aware Extended Lock Promise lock Promise lock Promise List add lock Promise void mark List Final counters Left set lock Promise List size Lock Promise lock Promise lock Promise List lock Promise add Listener Override public boolean Available return notifier Done Override public void lock throws Interrupted Exception Timeout Exception Interrupted Exception interrupted Exception null Timeout Exception timeout Exception null Deadlock Detected Exception deadlock Exception null Runtime Exception runtime Exception null Extended Lock Promise lock Promise lock Promise List try still need invoke lock locks lock Promise lock catch Interrupted Exception e interrupted Exception e catch Timeout Exception e timeout Exception e catch Deadlock Detected Exception e deadlock Exception e catch Runtime Exception e runtime Exception e interrupted Exception null throw interrupted Exception else timeout Exception null throw timeout Exception else deadlock Exception null throw deadlock Exception else runtime Exception null throw runtime Exception Override public void add Listener Lock Listener listener notifier Accept listener Event Override public void Event Lock State state notifier Done already finished return lock invoke state Lock State cancel state return counters Left decrement Get notifier complete lock State private void cancel Lock State state compare Set Lock State state complete future cancel locks remaining locks invoke Event notifier complete state lock Promise List promise promise cancel state Override public void add Listener Key Aware Lock Listener listener Key Aware Extended Lock Promise lock Promise lock Promise List lock Promise add Listener listener Override public Void call throws Exception lock Promise List promise promise cancel Lock State return null Composite Lock Promise schedule Lock Timeout Task Scheduled Executor Service executor Service long time Time Unit unit executor Service null time Available Scheduled Future future executor Service schedule time unit add Listener state future cancel false return
package org factories threads import java util concurrent Thread Factory import java util concurrent atomic Atomic Long Thread factory based Boss Thread Boss Thread Factory author Galder Zamarre since public class Default Thread Factory implements Thread Factory public static final String c n p f private final String name private final Thread Group thread Group private final int initial Priority private final String thread Name Pattern private final Atomic Long factory Thread Index Sequence new Atomic Long private final long factory Index private static final Atomic Long global Thread Index Sequence new Atomic Long private static final Atomic Long factory Index Sequence new Atomic Long private String node private String component Construct new instance access control context calling thread one used create new threads security manager installed param thread Group thread group assign threads default may code null param initial Priority initial thread priority code null use thread group setting param thread Name Pattern name pattern string public Default Thread Factory Thread Group thread Group int initial Priority String thread Name Pattern String node String component null thread Group initial Priority thread Name Pattern node component Construct new instance access control context calling thread one used create new threads security manager installed param name name thread factory may code null param thread Group thread group assign threads default may code null param initial Priority initial thread priority code null use thread group setting param thread Name Pattern name pattern string public Default Thread Factory String name Thread Group thread Group int initial Priority String thread Name Pattern String node String component name name thread Group null final Security Manager sm System get Security Manager thread Group sm null sm get Thread Group Thread current Thread get Thread Group thread Group thread Group initial Priority initial Priority factory Index factory Index Sequence get Increment thread Name Pattern null thread Name Pattern Default Thread Factory thread Name Pattern thread Name Pattern node node component component public String get Name return name public void set Node String node node node public void set Component String component component component public String thread Name Pattern return thread Name Pattern public Thread Group thread Group return thread Group public int initial Priority return initial Priority Override public Thread new Thread final Runnable target return create Thread target private Thread create Thread final Runnable target final Thread Name Info name Info new Thread Name Info global Thread Index Sequence get Increment factory Thread Index Sequence get Increment factory Index node component Thread thread new Thread thread Group target thread set Name name Info format thread thread Name Pattern thread set Priority initial Priority thread set Daemon true return thread
package org util import java time Clock import java time Instant import java util concurrent Time Unit default implementation link Time Service perform optimization relies link System current Time Millis link System nano Time author Pedro Ruivo since public class Default Time Service implements Time Service private final Clock clock public Default Time Service clock Clock system Override public long wall Clock Time return System current Time Millis Override public long time return System nano Time Override public Instant instant return clock instant Override public long time Duration long start Time Time Unit output Time Unit return time Duration start Time time output Time Unit Override public long time Duration long start Time long end Time Time Unit output Time Unit long remaining end Time start Time remaining return return output Time Unit convert remaining Time Unit Override public boolean Time Expired long end Time return time end Time Override public long remaining Time long end Time Time Unit output Time Unit long remaining end Time time return remaining output Time Unit convert remaining Time Unit Override public long expected End Time long duration Time Unit input Time Unit duration return time return time input Time Unit Nanos duration
package org stream impl import java io Exception import java io Object Input import java io Object Output import java util Arrays import java util Collection import java util Collections import java util Comparator import java util Enum Set import java util Hash Set import java util Identity Hash Map import java util Iterator import java util Map import java util Objects import java util Optional import java util Set import java util Spliterator import java util Spliterators import java util concurrent Array Blocking Queue import java util concurrent Blocking Queue import java util concurrent Executor import java util concurrent Time Unit import java util concurrent atomic Atomic Boolean import java util concurrent locks Condition import java util concurrent locks Lock import java util concurrent locks Reentrant Lock import java util function Bi Consumer import java util function Bi Function import java util function Binary Operator import java util function Consumer import java util function Function import java util function Int Function import java util function Predicate import java util function Supplier import java util function Double Function import java util function Int Function import java util function Long Function import java util stream Collector import java util stream Collectors import java util stream Double Stream import java util stream Int Stream import java util stream Long Stream import java util stream Stream import org Cache import org Cache Stream import org Double Cache Stream import org Int Cache Stream import org Long Cache Stream import org commons Cache Exception import org commons marshall Externalizer import org commons marshall Serialize import org commons util Closeable Iterator import org container entries Cache Entry import org distribution Distribution Manager import org distribution Localized Cache Topology import org distribution ch Consistent Hash import org factories Component Registry import org remoting transport Address import org stream impl intops object Distinct Operation import org stream impl intops object Filter Operation import org stream impl intops object Flat Map Operation import org stream impl intops object Flat Map Double Operation import org stream impl intops object Flat Map Int Operation import org stream impl intops object Flat Map Long Operation import org stream impl intops object Limit Operation import org stream impl intops object Map Operation import org stream impl intops object Map Double Operation import org stream impl intops object Map Int Operation import org stream impl intops object Map Long Operation import org stream impl intops object Peek Operation import org stream impl termop object Bi Operation import org stream impl termop object Operation import org stream impl termop object Map Iterator Operation import org util Closeable Supplied Iterator import org util Range Set import org util concurrent Timeout Exception import org util function Closeable Supplier Implementation link Cache Stream provides support lazily distributing stream methods appropriate nodes param type stream public class Distributed Cache Stream extends Abstract Cache Stream Stream Cache Stream implements Cache Stream hack allow cast work properly since Java n work well nested generics protected static Supplier Cache Stream Cache Entry supplier Stream Cast Supplier supplier return supplier Standard constructor requiring pertinent information properly utilize distributed cache stream param local Address local address node param parallel whether stream parallel param dm distribution manager find keys map param supplier supplier local cache stream instances param csm manager handles sending messages nodes param include Loader whether cache loader utilized operations param distributed Batch Size default size distributed batches param executor executor used certain operations require async processing ie iterator public Distributed Cache Stream Address local Address boolean parallel Distribution Manager dm Supplier Cache Stream Cache Entry supplier Cluster Stream Manager csm boolean include Loader int distributed Batch Size Executor executor Component Registry registry super local Address parallel dm supplier Stream Cast supplier csm include Loader distributed Batch Size executor registry Constructor also allows simple map method inserted first change another type important link Cache Stream map Function currently n return link Cache Stream changed remove constructor update references accordingly param local Address local address node param parallel whether stream parallel param dm distribution manager find keys map param supplier supplier local cache stream instances param csm manager handles sending messages nodes param include Loader whether cache loader utilized operations param distributed Batch Size default size distributed batches param executor executor used certain operations require async processing ie iterator param function initial function apply stream change type public Distributed Cache Stream Address local Address boolean parallel Distribution Manager dm Supplier Cache Stream Cache Entry supplier Cluster Stream Manager csm boolean include Loader int distributed Batch Size Executor executor Component Registry registry Function super Cache Entry function super local Address parallel dm supplier Stream Cast supplier csm include Loader distributed Batch Size executor registry intermediate Operations add new Map Operation function iterator Operation Iterator Operation constructor used user calls map flat map method changing back regular Stream Int Stream Double Stream etc param instance link Abstract Cache Stream copy details protected Distributed Cache Stream Abstract Cache Stream super Override protected Cache Stream unwrap return Intermediate operations stored lazy evalulation Override public Cache Stream filter Predicate super predicate return add Intermediate Operation new Filter Operation predicate Override public Cache Stream map Function super extends mapper iterator Operation Iterator Operation iterator Operation Iterator Operation add Intermediate Operation Map new Map Operation mapper return Cache Stream Override public Int Cache Stream map Int Int Function super mapper iterator Operation Iterator Operation iterator Operation Iterator Operation add Intermediate Operation Map new Map Int Operation mapper return int Cache Stream Override public Long Cache Stream map Long Long Function super mapper iterator Operation Iterator Operation iterator Operation Iterator Operation add Intermediate Operation Map new Map Long Operation mapper return long Cache Stream Override public Double Cache Stream map Double Double Function super mapper iterator Operation Iterator Operation iterator Operation Iterator Operation add Intermediate Operation Map new Map Double Operation mapper return double Cache Stream Override public Cache Stream flat Map Function super extends Stream extends mapper iterator Operation Iterator Operation add Intermediate Operation Map new Flat Map Operation mapper return Cache Stream Override public Int Cache Stream flat Map Int Function super extends Int Stream mapper iterator Operation Iterator Operation add Intermediate Operation Map new Flat Map Int Operation mapper return int Cache Stream Override public Long Cache Stream flat Map Long Function super extends Long Stream mapper iterator Operation Iterator Operation add Intermediate Operation Map new Flat Map Long Operation mapper return long Cache Stream Override public Double Cache Stream flat Map Double Function super extends Double Stream mapper iterator Operation Iterator Operation add Intermediate Operation Map new Flat Map Double Operation mapper return double Cache Stream Override public Cache Stream distinct Distinct applied remotely well add Intermediate Operation Distinct Operation get Instance return new Intermediate Cache Stream distinct Override public Cache Stream sorted return new Intermediate Cache Stream sorted Override public Cache Stream sorted Comparator super comparator return new Intermediate Cache Stream sorted comparator Override public Cache Stream peek Consumer super action return add Intermediate Operation new Peek Operation action Override public Cache Stream limit long max Size Limit applied remotely well add Intermediate Operation new Limit Operation max Size return new Intermediate Cache Stream limit max Size Override public Cache Stream skip long n return new Intermediate Cache Stream skip n terminal operators Override public reduce identity Binary Operator accumulator return perform Operation Terminal Functions reduce Function identity accumulator true accumulator null Override public Optional reduce Binary Operator accumulator value perform Operation Terminal Functions reduce Function accumulator true e e e null e null return accumulator apply e e return e return e null return Optional Nullable value Override public reduce identity Bi Function super accumulator Binary Operator combiner return perform Operation Terminal Functions reduce Function identity accumulator combiner true combiner null inherit Doc Note method n pay attention ordering constraints sorting performed stream ignored terminal operator wish ordered collector use link Distributed Cache Stream collect Collector method making sure link java util stream Collector Characteristics property set param supplier param accumulator param combiner param return Override public collect Supplier supplier Bi Consumer super accumulator Bi Consumer combiner return perform Operation Terminal Functions collect Function supplier accumulator combiner true e e combiner accept e e return e null Serialize value Identify Finish Collector Identity Finish Collector Externalizer class private static final class Identify Finish Collector implements Collector private final Collector real Collector Identify Finish Collector Collector real Collector real Collector real Collector Override public Supplier supplier return real Collector supplier Override public Bi Consumer accumulator return real Collector accumulator Override public Binary Operator combiner return real Collector combiner Override public Function finisher return null Override public Set Characteristics characteristics Set Characteristics characteristics real Collector characteristics characteristics size return Enum Set Characteristics else Set Characteristics tweaked Enum Set copy characteristics tweaked add Characteristics return tweaked public static final class Identity Finish Collector Externalizer implements Externalizer Identify Finish Collector Override public void write Object Object Output output Identify Finish Collector object throws Exception output write Object object real Collector Override public Identify Finish Collector read Object Object Input input throws Exception Class Found Exception return new Identify Finish Collector Collector input read Object Override public collect Collector super collector identify finish prevent remote finisher apply locally everything combined collector characteristics contains Collector Characteristics return perform Operation Terminal Functions collector Function collector true Binary Operator collector combiner null else Need wrap collector force identity finish intermediate Result perform Operation Terminal Functions collector Function new Identify Finish Collector collector true collector combiner null return collector finisher apply intermediate Result Override public Optional min Comparator super comparator value perform Operation Terminal Functions min Function comparator false e e e null e null return comparator compare e e e e else return e return e null return Optional Nullable value Override public Optional max Comparator super comparator value perform Operation Terminal Functions max Function comparator false e e e null e null return comparator compare e e e e else return e return e null return Optional Nullable value Override public boolean Match Predicate super predicate return perform Operation Terminal Functions Match Function predicate false Boolean logical b b Override public boolean Match Predicate super predicate return perform Operation Terminal Functions Match Function predicate false Boolean logical b b Override public boolean none Match Predicate super predicate return perform Operation Terminal Functions none Match Function predicate false Boolean logical b b Override public Optional find First n sorted find return find Override public Optional find value perform Operation Terminal Functions find Function false r r r null r r Objects non Null return Optional Nullable value Override public long count return perform Operation Terminal Functions count Function true l l l l null next ones key tracking terminal operators Override public Iterator iterator return remote Iterator Iterator remote Iterator Blocking Queue queue new Array Blocking Queue distributed Batch Size final Atomic Boolean complete new Atomic Boolean Lock next Lock new Reentrant Lock Condition next Condition next Lock new Condition Consumer consumer new Hand Consumer queue complete next Lock next Condition Iterator Supplier supplier new Iterator Supplier queue complete next Lock next Condition csm boolean iterator Parallel Distribute parallel Distribution null false parallel Distribution rehash Aware rehash Aware Iteration complete consumer supplier iterator Parallel Distribute else ignore Rehash Iteration consumer supplier iterator Parallel Distribute Closeable Iterator closeable Iterator new Closeable Supplied Iterator supplier Close supplier close return closeable Iterator private void ignore Rehash Iteration Consumer consumer Iterator Supplier supplier boolean iterator Parallel Distribute Collection Consumer remote Results new Collection Consumer consumer Consistent Hash ch dm get Write Consistent Hash boolean run Local ch get Members contains local Address boolean stay Local run Local segments Filter null ch get Segments Owner local Address contains segments Filter Map Iterator Operation op new Map Iterator Operation intermediate Operations supplier Segments ch segments Filter null stay Local distributed Batch Size Thread thread Thread current Thread executor execute try log tracef Thread submitted iterator request stream thread stay Local Object id csm remote Stream Operation iterator Parallel Distribute parallel ch segments Filter keys Filter Collections Object Set empty Map include Loader op remote Results Make sure run submit manager process nodes asynchronously local operation Collection local Value op perform Operation remote Results remote Results Completion null Collections empty Set local Value id null supplier pending id try try csm await Completion id timeout timeout Unit throw new Timeout Exception catch Interrupted Exception e throw new Cache Exception e finally csm forget Operation id else Collection local Value op perform Operation remote Results remote Results Completion null Collections empty Set local Value supplier close catch Cache Exception e log trace Encountered local cache exception stream e supplier close e catch Throwable log trace Encountered local throwable stream supplier close new Cache Exception private void rehash Aware Iteration Atomic Boolean complete Consumer consumer Iterator Supplier supplier boolean iterator Parallel Distribute Consistent Hash segment Info dm get Read Consistent Hash Segment Listener Notifier listener Notifier segment Completion Listener null listener Notifier new Segment Listener Notifier segment Completion Listener supplier set Consumer listener Notifier else listener Notifier null Key Tracking Consumer Object results new Key Tracking Consumer key Partitioner segment Info get Num Segments iterator Operation wrap Consumer consumer iterator Operation get Function listener Notifier Thread thread Thread current Thread executor execute try log tracef Thread submitted iterator request stream thread Set Integer segments Process segments Filter null new Range Set segment Info get Num Segments segments Filter Localized Cache Topology cache Topology dm get Cache Topology Consistent Hash ch cache Topology get Read Consistent Hash boolean run Local ch get Members contains local Address Set Integer segments Set Object excluded Keys boolean stay Local false run Local Set Integer segments Owner ch get Segments Owner local Address segments locally even backup n want iterator go remotely stay Local segments Owner contains segments Process stay Local segments segments Process else segments ch get Primary Segments Owner local Address stream filter segments Process contains collect Collectors Set excluded Keys segments stream flat Map results reference Array get stream collect Collectors Set else segments null excluded Keys Collections empty Set Key Tracking Terminal Operation Object Object op iterator Operation get Operation intermediate Operations supplier Segments ch segments Process excluded Keys stay Local distributed Batch Size stay Local Object id csm remote Stream Operation Rehash Aware iterator Parallel Distribute parallel ch segments Process keys Filter new Atomic Reference Array Map results reference Array include Loader op results id null supplier pending id try run Local perform Local Rehash Aware Operation results segments Process ch segments op ch get Primary Segments Owner local Address id id null try csm await Completion id timeout timeout Unit throw new Timeout Exception catch Interrupted Exception e throw new Cache Exception e segments Process segments Process supplier results segments Process id cache Topology get Topology Id finally csm forget Operation id else perform Local Rehash Aware Operation results segments Process ch segments op ch get Segments Owner local Address null segments Process segments Process supplier results segments Process null cache Topology get Topology Id complete get catch Cache Exception e log trace Encountered local cache exception stream e supplier close e catch Throwable log trace Encountered local throwable stream supplier close new Cache Exception private Set Integer segments Process Iterator Supplier supplier Key Tracking Consumer Object results Set Integer segments Process Object id int topology Id String str Id id null local id String results lost Segments Empty segments Process new Hash Set results lost Segments results lost Segments clear log tracef Found lost segments segments Process str Id results requires Next Topology try state Transfer Lock wait Topology topology Id timeout timeout Unit catch Interrupted Exception java util concurrent Timeout Exception e throw new Cache Exception e else supplier close log tracef Finished rehash aware operation str Id return segments Process private void perform Local Rehash Aware Operation Key Tracking Consumer Object results Set Integer segments Process Consistent Hash ch Set Integer segments Key Tracking Terminal Operation Object Object op Supplier Set Integer owned Segments Supplier Object id Collection Cache Entry Object Object local Value op perform Operation Rehash Aware results efficiently hampers performance rehash dm get Read Consistent Hash equals ch log tracef Found local values id local Value size id results Completion null segments local Value else Set Integer Segments owned Segments Supplier get Set Integer lost Segments Segments stream filter segments Process contains collect Collectors Set log tracef changed making segments suspect identifier lost Segments id results Segments Lost lost Segments static class Hand Consumer implements Consumer private final Blocking Queue queue private final Atomic Boolean completed private final Lock next Lock private final Condition next Condition Hand Consumer Blocking Queue queue Atomic Boolean completed Lock next Lock Condition next Condition queue queue completed completed next Lock next Lock next Condition next Condition Override public void accept rs n awake people waiting fill queue process retrieves values reason slowdown queue offer rs completed get Signal anyone waiting values consume queue next Lock lock try next Condition signal finally next Lock unlock completed get keep trying offer value takes case check completed time make sure iterator n closed early try queue offer rs Time Unit break catch Interrupted Exception e throw new Cache Exception e static class Segment Listener Notifier implements Consumer private final Segment Completion Listener listener know objects always private final Map Set Integer segments Object new Identity Hash Map Segment Listener Notifier Segment Completion Listener listener listener listener Override public void accept Set Integer segments segments Object remove segments null listener segment Completed segments public void add Segments Object object Set Integer segments segments Object put object segments public void complete Segments Results Set Integer segments listener segment Completed segments static class Iterator Supplier implements Closeable Supplier private final Blocking Queue queue private final Atomic Boolean completed private final Lock next Lock private final Condition next Condition private final Cluster Stream Manager cluster Stream Manager Cache Exception exception volatile Object pending private Consumer consumer Iterator Supplier Blocking Queue queue Atomic Boolean completed Lock next Lock Condition next Condition Cluster Stream Manager cluster Stream Manager queue queue completed completed next Lock next Lock next Condition next Condition cluster Stream Manager cluster Stream Manager Override public void close close null public void close Cache Exception e next Lock lock try completed get Set true e null exception e pending null cluster Stream Manager forget Operation pending pending null next Condition signal finally next Lock unlock Override public get entry queue poll entry null completed get exception null throw exception else entry queue poll null check queue one last time make sure n concurrent queue addition completed iterator consumer null consumer accept entry return entry return null next Lock lock try boolean interrupted false completed get check make sure nothing added queue well sleeping entry queue poll null break try next Condition await Time Unit catch Interrupted Exception e interrupted loop back around interrupted true entry null entry completed check one last time entries queue possible entries added queue iterator completed time Completed sign either things entries retrieved case exception found processing user manually closed iterator latter cases additional entries added queue since processing stopped therefore process rest elements queue worry entry queue poll entry null exception null throw exception return null else interrupted reset interrupt state returning Thread current Thread interrupt finally next Lock unlock consumer null consumer accept entry return entry public void set Consumer Consumer consumer consumer consumer Override public Spliterator spliterator return Spliterators spliterator iterator Long Spliterator Override public void Consumer super action rehash Aware perform Operation Terminal Functions Function action false v v null null else perform Rehash Key Tracking Operation new Operation Object intermediate Operations distributed Batch Size action Override public void Bi Consumer Cache super action rehash Aware perform Operation Terminal Functions Function action false v v null null else perform Rehash Key Tracking Operation new Bi Operation intermediate Operations distributed Batch Size action Override public void Ordered Consumer super action n sorted action Override public Object Array return perform Operation Terminal Functions Array Function false v v Object array Arrays copy v v length v length System arraycopy v array v length v length return array null Override public Array Int Function generator return perform Operation Terminal Functions Array Function generator false v v array generator apply v length v length System arraycopy v array v length System arraycopy v array v length v length return array null custom added methods cache streams Override public Cache Stream sequential Distribution parallel Distribution false return Override public Cache Stream parallel Distribution parallel Distribution true return Override public Cache Stream filter Key Segments Set Integer segments segments Filter segments return Override public Cache Stream filter Keys Set keys keys Filter keys return Override public Cache Stream distributed Batch Size int batch Size distributed Batch Size batch Size return Override public Cache Stream segment Completion Listener Segment Completion Listener listener segment Completion Listener null segment Completion Listener listener else segment Completion Listener compose Exceptions segment Completion Listener listener return Override public Cache Stream disable Rehash Aware rehash Aware false return Override public Cache Stream timeout long timeout Time Unit unit timeout throw new Illegal Argument Exception Timeout must greater timeout timeout timeout Unit unit return protected Distributed Int Cache Stream int Cache Stream return new Distributed Int Cache Stream protected Distributed Double Cache Stream double Cache Stream return new Distributed Double Cache Stream protected Distributed Long Cache Stream long Cache Stream return new Distributed Long Cache Stream
package org interceptors distribution import static org factories Known Component Names import java util Iterator import java util Map import java util Spliterator import java util concurrent Executor import java util concurrent Time Unit import java util function Supplier import org Advanced Cache import org Cache import org Cache Set import org Cache Stream import org cache impl Caches import org commands Flag Affected Command import org commands read Abstract Closeable Iterator Collection import org commands read Entry Set Command import org commands read Key Set Command import org commons util Closeable Iterator import org commons util Closeable Iterator Mapper import org commons util Closeable Spliterator import org commons util Closeables import org commons util Removable Closeable Iterator import org commons util Removable Iterator import org container entries Cache Entry import org context Flag import org context Invocation Context import org context impl Flag Bit Sets import org context impl Local Tx Invocation Context import org distribution Distribution Manager import org factories Component Registry import org factories annotations Inject import org interceptors Async Interceptor import org stream Stream Marshalling import org stream impl Cluster Stream Manager import org stream impl Distributed Cache Stream import org stream impl intops Intermediate Operation import org stream impl intops object Map Operation import org stream impl tx Tx Cluster Stream Manager import org stream impl tx Tx Distributed Cache Stream import org util Entry Wrapper import org util function Removable Function Interceptor handles bulk entry Set key Set commands using distributed replicated environment interceptor produces backing collections either method distributed stream either leverages distributed processing cluster param key type entries param value type entries public class Distribution Bulk Interceptor extends Async Interceptor private Cache cache Inject public void inject Cache cache cache cache Override public Object visit Entry Set Command Invocation Context ctx Entry Set Command command throws Throwable return invoke Next Apply ctx command r Ctx r Command rv Entry Set Command entry Set Command Entry Set Command r Command entry Set Command Flag Flag Bit Sets return rv Cache Set Cache Entry entry Set Cache Set Cache Entry rv r Ctx Tx Scope entry Set new Tx Backing Entry Set Caches get Cache Flags cache entry Set Command entry Set entry Set Command Local Tx Invocation Context r Ctx else entry Set new Backing Entry Set Caches get Cache Flags cache entry Set Command entry Set entry Set Command return entry Set protected static Supplier Cache Stream Cache Entry supplier Cache cache Supplier Cache Stream Cache Entry stream Supplier cache get Cache Configuration clustering cache Mode Scattered ignore tombstones return stream Supplier get filter entry entry get Value null else return stream Supplier protected static class Backing Entry Set extends Abstract Closeable Iterator Collection Cache Entry implements Cache Set Cache Entry protected final Cache Set Cache Entry entry Set protected final Flag Affected Command command private Backing Entry Set Cache cache Cache Set Cache Entry entry Set Flag Affected Command command super cache entry Set entry Set command command Override public Closeable Iterator Cache Entry iterator return new Closeable Iterator Mapper new Removable Closeable Iterator Closeables iterator stream e cache remove e get Key e get Value e new Entry Wrapper cache e Override public Closeable Spliterator Cache Entry spliterator return Closeables spliterator stream Override public boolean contains Object Map Entry entry Entry entry null value cache get entry get Key return value null value equals entry get Value return false Override public boolean remove Object Map Entry entry Entry entry null return cache remove entry get Key entry get Value return false private Map Entry Entry Object obj obj instanceof Map Entry return Map Entry obj else return null Override public Cache Stream Cache Entry stream Advanced Cache advanced Cache cache get Advanced Cache Component Registry registry advanced Cache get Component Registry Cache Stream Cache Entry cache Stream new Distributed Cache Stream Cache Entry cache get Cache Manager get Address false advanced Cache get Distribution Manager supplier cache entry Set stream registry get Component Cluster Stream Manager class command Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry Override public Iterator Cache Entry iterator int size intermediate Operations size size intermediate operations support remove return new Removable Iterator super iterator e cache remove e get Key e get Value else size Intermediate Operation int Op intermediate Operations peek int Op instanceof Map Operation Map Operation map Map Operation int Op map get Function instanceof Removable Function function removable means use remove return new Removable Iterator super iterator e cache remove e get Key e get Value return super iterator return apply Time cache Stream cache Override public Cache Stream Cache Entry parallel Stream Advanced Cache advanced Cache cache get Advanced Cache Component Registry registry advanced Cache get Component Registry Cache Stream Cache Entry cache Stream new Distributed Cache Stream cache get Cache Manager get Address true advanced Cache get Distribution Manager supplier cache entry Set parallel Stream registry get Component Cluster Stream Manager class command Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry return apply Time cache Stream cache protected static class Tx Backing Entry Set extends Backing Entry Set private final Local Tx Invocation Context ctx private Tx Backing Entry Set Cache cache Cache Set Cache Entry entry Set Flag Affected Command command Local Tx Invocation Context ctx super cache entry Set command ctx ctx Override public Cache Stream Cache Entry stream Advanced Cache advanced Cache cache get Advanced Cache Distribution Manager dm advanced Cache get Distribution Manager Component Registry registry advanced Cache get Component Registry Cluster Stream Manager real Manager registry get Component Cluster Stream Manager class Tx Cluster Stream Manager tx Manager new Tx Cluster Stream Manager real Manager ctx dm get Write Consistent Hash Cache Stream Cache Entry cache Stream new Tx Distributed Cache Stream cache get Cache Manager get Address false dm entry Set stream tx Manager command Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry ctx return apply Time cache Stream cache Override public Cache Stream Cache Entry parallel Stream Advanced Cache advanced Cache cache get Advanced Cache Distribution Manager dm advanced Cache get Distribution Manager Component Registry registry advanced Cache get Component Registry Cluster Stream Manager real Manager registry get Component Cluster Stream Manager class Tx Cluster Stream Manager tx Manager new Tx Cluster Stream Manager real Manager ctx dm get Write Consistent Hash Cache Stream Cache Entry cache Stream new Tx Distributed Cache Stream cache get Cache Manager get Address true dm entry Set parallel Stream tx Manager command Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry ctx return apply Time cache Stream cache private static Cache Stream apply Time Cache Stream stream Cache cache return stream timeout cache get Cache Configuration clustering remote Timeout Time Unit Override public Object visit Key Set Command Invocation Context ctx Key Set Command command throws Throwable Cache Set key Set command Flag Flag Bit Sets return invoke Next ctx command ctx Tx Scope key Set new Tx Backing Key Set Caches get Cache Flags cache command cache get Advanced Cache Flags Flag cache Entry Set command Local Tx Invocation Context ctx else key Set new Backing Key Set Caches get Cache Flags cache command cache get Advanced Cache Flags Flag cache Entry Set command return key Set protected static class Backing Key Set extends Abstract Closeable Iterator Collection implements Cache Set protected final Cache Set Cache Entry entry Set protected final Flag Affected Command command public Backing Key Set Cache cache Cache Set Cache Entry entry Set Flag Affected Command command super cache entry Set entry Set command command Override public Closeable Iterator iterator return new Removable Closeable Iterator Closeables iterator stream cache remove Override public boolean contains Object return cache contains Key Override public boolean remove Object return cache remove null Override public Closeable Spliterator spliterator return Closeables spliterator iterator Long Spliterator Spliterator Spliterator Override public Cache Stream stream Advanced Cache advanced Cache cache get Advanced Cache Component Registry registry advanced Cache get Component Registry return new Distributed Cache Stream cache get Cache Manager get Address false advanced Cache get Distribution Manager supplier cache entry Set stream registry get Component Cluster Stream Manager class command Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry Stream Marshalling entry Key Function Override public Iterator iterator int size intermediate Operations size act mapping key requires intermediate operation size return new Removable Iterator super iterator cache remove else size Iterator Intermediate Operation iter intermediate Operations iterator iter next Intermediate Operation int Op iter next int Op instanceof Map Operation Map Operation map Map Operation int Op map get Function instanceof Removable Function function removable means use remove return new Removable Iterator super iterator cache remove return super iterator Override public Cache Stream parallel Stream Advanced Cache advanced Cache cache get Advanced Cache Component Registry registry advanced Cache get Component Registry return new Distributed Cache Stream cache get Cache Manager get Address true advanced Cache get Distribution Manager supplier cache entry Set parallel Stream registry get Component Cluster Stream Manager class command Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry Stream Marshalling entry Key Function private static class Tx Backing Key Set extends Backing Key Set private final Local Tx Invocation Context ctx public Tx Backing Key Set Cache cache Cache Set Cache Entry entry Set Flag Affected Command command Local Tx Invocation Context ctx super cache entry Set command ctx ctx Override public Cache Stream stream Advanced Cache advanced Cache cache get Advanced Cache Distribution Manager dm advanced Cache get Distribution Manager Component Registry registry advanced Cache get Component Registry Cluster Stream Manager real Manager registry get Component Cluster Stream Manager class Tx Cluster Stream Manager tx Manager new Tx Cluster Stream Manager real Manager ctx dm get Write Consistent Hash return new Tx Distributed Cache Stream cache get Cache Manager get Address false dm entry Set stream tx Manager command Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry Stream Marshalling entry Key Function ctx Override public Cache Stream parallel Stream Advanced Cache advanced Cache cache get Advanced Cache Distribution Manager dm advanced Cache get Distribution Manager Component Registry registry advanced Cache get Component Registry Cluster Stream Manager real Manager registry get Component Cluster Stream Manager class Tx Cluster Stream Manager tx Manager new Tx Cluster Stream Manager real Manager ctx dm get Write Consistent Hash return new Tx Distributed Cache Stream cache get Cache Manager get Address true dm entry Set parallel Stream tx Manager command Flag Flag Bit Sets cache get Cache Configuration clustering state Transfer chunk Size registry get Component Executor class registry Stream Marshalling entry Key Function ctx
package org factories import org distribution Distribution Manager import org distribution impl Distribution Manager Impl import org factories annotations Default Factory Default Factory classes Distribution Manager class public class Distribution Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override Suppress Warnings unchecked public construct Class component Type configuration clustering cache Mode Clustered return new Distribution Manager Impl else return null
package org distribution impl import java util Collection import java util Hash Set import java util List import java util Set import java util stream Collectors import org configuration cache Cache Mode import org configuration cache Configuration import org distribution Data Locality import org distribution Distribution Info import org distribution Distribution Manager import org distribution Localized Cache Topology import org distribution ch Consistent Hash import org distribution ch Key Partitioner import org factories annotations Inject import org factories annotations Start import org jmx annotations Bean import org jmx annotations Managed Operation import org jmx annotations Parameter import org remoting transport Address import org remoting transport Local Mode Address import org remoting transport Transport import org topology Cache Topology import org util logging Log import org util logging Log Factory default distribution manager implementation author Manik Surtani author Vladimir Blagojevic author Mircea Markus jboss com author Bela Ban author Dan Berindei dan org author anistor redhat com since Bean object Name Distribution Manager description Component handles distribution content across cluster public class Distribution Manager Impl implements Distribution Manager private static final Log log Log Factory get Log Distribution Manager Impl class private static final boolean trace log Trace Enabled Injected components private Transport transport private Key Partitioner key Partitioner private Cache Mode cache Mode private volatile Localized Cache Topology extended Topology Default constructor public Distribution Manager Impl Inject public void init Transport transport Configuration configuration Key Partitioner key Partitioner transport transport key Partitioner key Partitioner cache Mode configuration clustering cache Mode Start Rpc Manager Impl Start priority Suppress Warnings unused private void start throws Exception trace log tracef starting distribution manager get Address need extended topology preload start State Transfer Manager Impl Address local Address transport null Local Mode Address transport get Address extended Topology Localized Cache Topology make Singleton Topology cache Mode local Address private Address get Address return transport get Address Override public Data Locality get Locality Object key Localized Cache Topology info extended Topology info null return Data Locality Distribution Info segment Info info get Distribution key segment Info Read Owner return Data Locality else segment Info Write Owner return Data Locality else return Data Locality Override public List Address locate Object key return extended Topology get Distribution key write Owners Override public Address get Primary Location Object key return extended Topology get Distribution key primary Override public Set Address locate Collection Object keys Collection Address owners extended Topology get Write Owners keys return new Hash Set owners Override public Consistent Hash get Read Consistent Hash return extended Topology get Read Consistent Hash Override public Consistent Hash get Write Consistent Hash return extended Topology get Write Consistent Hash Override Managed Operation description Determines whether given key affected ongoing rehash display Name Could key affected rehash public boolean Affected Rehash Parameter name key description Key check Object key Rehash Progress return false int segment key Partitioner get Segment key Distribution Info distribution Info extended Topology get Distribution segment return distribution Info Write Owner distribution Info Read Owner Tests whether rehash progress return true rehash progress false otherwise Override public boolean Rehash Progress return extended Topology get Pending null Override public boolean Join Complete return extended Topology null Managed Operation description Tells whether given key would written instance cache according consistent hashing algorithm works String keys display Name key local public boolean Located Locally Parameter name key description Key query String key return get Cache Topology Write Owner key Managed Operation description Shows addresses nodes write operation would store entry associated specified key works String keys display Name Locate key public List String locate Key Parameter name key description Key locate String key List Address addresses get Cache Topology get Distribution key write Owners return addresses stream map Address String collect Collectors List Override public Localized Cache Topology get Cache Topology return extended Topology Override public void set Cache Topology Cache Topology cache Topology extended Topology create Localized Cache Topology cache Topology Override public Localized Cache Topology create Localized Cache Topology Cache Topology cache Topology return new Localized Cache Topology cache Mode cache Topology key Partitioner transport get Address
package org transaction xa import java io Exception import java io Object Input import java io Object Output import java util Collection import java util Collections import java util Objects import java util Set import org commons util Util import org marshall core Ids import org remoting transport Address import org util logging Log import org util logging Log Factory class used deadlock detection enabled author Mircea Markus jboss com deprecated Since longer used Deprecated public class Dld Global Transaction extends Global Transaction private static final Log log Log Factory get Log Dld Global Transaction class private static final boolean trace log Trace Enabled private volatile long coin Toss private transient volatile Collection Object lock Intention Collections empty Set private volatile Collection remote Lock Intention Collections empty Set protected volatile Collection locks Origin Collections empty Set public Dld Global Transaction public Dld Global Transaction Address addr boolean remote super addr remote Sets random number defines coin toss coin toss random number used deadlock detected deciding transaction commit rollback public void set Coin Toss long coin Toss coin Toss coin Toss public long get Coin Toss return coin Toss Override public boolean equals Object return true instanceof Dld Global Transaction return false super equals return false Dld Global Transaction Dld Global Transaction coin Toss coin Toss return false return true Override public int hash Code int result super hash Code result result int coin Toss coin Toss return result Override public String String return super String dld coin Toss Returns key transaction intends lock public Collection Object get Lock Intention return lock Intention public void set Lock Intention Collection Object lock Intention Objects require Non Null lock Intention Local lock Intention must non null trace log tracef Setting local lock intention lock Intention lock Intention lock Intention public boolean would Lose Dld Global Transaction return coin Toss coin Toss public void set Remote Lock Intention Collection remote Lock Intention Objects require Non Null lock Intention Remote lock intention must non null trace log tracef Setting remote lock intention remote Lock Intention remote Lock Intention remote Lock Intention public Collection get Remote Lock Intention return remote Lock Intention public boolean Lock Origin Dld Global Transaction Tx trace log tracef locks origin Others remote lock intention locks Origin Tx get Remote Lock Intention Object key Tx get Remote Lock Intention locks Origin contains key return true return false public void set Locks Held Origin Collection locks Origin Objects require Non Null locks Origin Locks origin must non null trace log tracef Setting locks origin locks Origin locks Origin locks Origin public Collection get Locks Held Origin return locks Origin Deprecated public static class Externalizer extends Global Transaction Abstract Global Tx Externalizer Dld Global Transaction Override protected Dld Global Transaction create Global Transaction return new Dld Global Transaction Override public void write Object Object Output output Dld Global Transaction dd Gt throws Exception super write Object output dd Gt output write Long dd Gt get Coin Toss dd Gt locks Origin Empty output write Object null else output write Object dd Gt locks Origin Override Suppress Warnings unchecked public Dld Global Transaction read Object Object Input input throws Exception Class Found Exception Dld Global Transaction dd Gt super read Object input dd Gt set Coin Toss input read Long Object locks Origin Obj input read Object locks Origin Obj null dd Gt set Locks Held Origin Collections empty Set else dd Gt set Locks Held Origin Set Object locks Origin Obj return dd Gt Override public Integer get Id return Ids Override public Set Class extends Dld Global Transaction get Type Classes return Util Class extends Dld Global Transaction Set Dld Global Transaction class
package org counter configuration import java util Hash Map import java util Map author Pedro Ruivo since public enum Element must first null counters lower bound strong counter upper bound weak counter private static final Map String Element static final Map String Element map new Hash Map Element element values final String name element name name null map put name element map private final String name Element final String name name name public static Element Name final String local Name final Element element get local Name return element null element Override public String String return name
package org factories import org commands Cancellation Service import org commands Cancellation Service Impl import org commands Remote Commands Factory import org commons Cache Configuration Exception import org container offheap Heap Entry Factory import org container offheap Heap Entry Factory Impl import org container offheap Heap Memory Allocator import org container offheap Unpooled Heap Memory Allocator import org factories annotations Default Factory import org factories scopes Scope import org factories scopes Scopes import org remoting inboundhandler Global Inbound Invocation Handler import org remoting inboundhandler Inbound Invocation Handler import org topology Persistent Manager import org topology Persistent Manager Impl import org util Default Time Service import org util Time Service import org util logging events Event Log Manager import org util logging events impl Event Log Manager Impl import org xsite Backup Receiver Repository import org xsite Backup Receiver Repository Impl Factory building global scope components default empty constructors author Manik Surtani author href mailto galder zamarreno jboss com Galder Zamarreno since Default Factory classes Backup Receiver Repository class Cancellation Service class Event Log Manager class Inbound Invocation Handler class Persistent Manager class Remote Commands Factory class Time Service class Heap Entry Factory class Heap Memory Allocator class Scope Scopes public class Empty Constructor Factory extends Abstract Component Factory implements Auto Instantiable Factory Override Suppress Warnings unchecked public construct Class component Type component Type equals Backup Receiver Repository class return new Backup Receiver Repository Impl else component Type equals Cancellation Service class return new Cancellation Service Impl else component Type equals Inbound Invocation Handler class return new Global Inbound Invocation Handler else component Type equals Remote Commands Factory class return new Remote Commands Factory else component Type equals Time Service class return new Default Time Service else component Type equals Event Log Manager class return new Event Log Manager Impl else component Type equals Persistent Manager class return new Persistent Manager Impl else component Type equals Heap Entry Factory class return component Type cast new Heap Entry Factory Impl else component Type equals Heap Memory Allocator class return component Type cast new Unpooled Heap Memory Allocator throw new Cache Configuration Exception n know create component Type get Name
package org factories import static org commons util Util get Instance import org batch Batch Container import org cache impl Cache Configuration Bean import org commands Commands Factory import org commands Commands Factory Impl import org commons Cache Configuration Exception import org commons io Byte Buffer Factory import org commons io Byte Buffer Factory Impl import org configuration cache Cache Mode import org context Invocation Context Factory import org context Non Transactional Invocation Context Factory import org context Transactional Invocation Context Factory import org distribution Manager import org distribution Remote Value Retrieved Listener import org distribution Triangle Order Manager import org distribution impl Manager Impl import org eviction Activation Manager import org eviction Eviction Manager import org eviction Passivation Manager import org eviction impl Activation Manager Impl import org eviction impl Eviction Manager Impl import org eviction impl Passivation Manager Impl import org factories annotations Default Factory import org functional impl Functional Notifier import org functional impl Functional Notifier Impl import org interceptors locking Clustering Dependent Logic import org marshall core Marshalled Entry Factory import org marshall core Marshalled Entry Factory Impl import org notifications cachelistener Cache Notifier import org notifications cachelistener Cache Notifier Impl import org notifications cachelistener cluster Cluster Cache Notifier import org persistence manager Ordered Updates Manager import org persistence manager Ordered Updates Manager Impl import org persistence manager Persistence Manager import org persistence manager Persistence Manager Impl import org scattered Scattered Version Manager import org scattered impl Scattered Version Manager Impl import org statetransfer Commit Manager import org statetransfer State Transfer Lock import org statetransfer State Transfer Lock Impl import org transaction impl Clustered Transaction Originator Checker import org transaction impl Transaction Coordinator import org transaction impl Transaction Originator Checker import org transaction totalorder Total Order Manager import org transaction xa Transaction Factory import org transaction xa recovery Recovery Admin Operations import org util concurrent Command Ack Collector import org xsite Backup Sender import org xsite Backup Sender Impl import org xsite statetransfer Site State Consumer import org xsite statetransfer Site State Consumer Impl import org xsite statetransfer Site State Provider import org xsite statetransfer Site State Provider Impl import org xsite statetransfer Site State Transfer Manager import org xsite statetransfer Site State Transfer Manager Impl Simple factory uses reflection empty constructor component type author Manik Surtani href mailto manik jboss org manik jboss org author Pedro Ruivo since Default Factory classes Cache Notifier class Cache Configuration Bean class Cluster Cache Notifier class Commands Factory class Persistence Manager class Passivation Manager class Activation Manager class Batch Container class Eviction Manager class Transaction Coordinator class Recovery Admin Operations class State Transfer Lock class Clustering Dependent Logic class Manager class Transaction Factory class Backup Sender class Total Order Manager class Byte Buffer Factory class Marshalled Entry Factory class Remote Value Retrieved Listener class Invocation Context Factory class Commit Manager class Site State Transfer Manager class Site State Consumer class Site State Provider class Functional Notifier class Command Ack Collector class Triangle Order Manager class Ordered Updates Manager class Scattered Version Manager class Transaction Originator Checker class public class Empty Constructor Named Cache Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override Suppress Warnings unchecked public construct Class component Type Class component Impl component Type equals Clustering Dependent Logic class Cache Mode cache Mode configuration clustering cache Mode cache Mode Clustered return component Type cast new Clustering Dependent Logic Local Logic else cache Mode Invalidation return component Type cast new Clustering Dependent Logic Invalidation Logic else cache Mode Replicated return component Type cast new Clustering Dependent Logic Replication Logic else cache Mode Distributed return component Type cast new Clustering Dependent Logic Distribution Logic else cache Mode Scattered return component Type cast new Clustering Dependent Logic Scattered Logic else throw new Unsupported Operation Exception else boolean Transactional configuration transaction transaction Mode Transactional component Type equals Invocation Context Factory class component Impl Transactional Transactional Invocation Context Factory class Non Transactional Invocation Context Factory class return component Type cast get Instance component Impl else component Type equals Cache Notifier class return new Cache Notifier Impl else component Type equals Cache Configuration Bean class return new Cache Configuration Bean else component Type equals Commands Factory class return new Commands Factory Impl else component Type equals Persistence Manager class return new Persistence Manager Impl else component Type equals Passivation Manager class return new Passivation Manager Impl else component Type equals Activation Manager class return new Activation Manager Impl else component Type equals Batch Container class return new Batch Container else component Type equals Transaction Coordinator class return new Transaction Coordinator else component Type equals Recovery Admin Operations class return new Recovery Admin Operations else component Type equals State Transfer Lock class return new State Transfer Lock Impl else component Type equals Eviction Manager class return new Eviction Manager Impl else component Type equals Manager class return new Manager Impl else component Type equals Transaction Factory class return new Transaction Factory else component Type equals Backup Sender class return new Backup Sender Impl global Configuration sites local Site else component Type equals Total Order Manager class return Transactional configuration transaction transaction Protocol Total Order new Total Order Manager null else component Type equals Byte Buffer Factory class return new Byte Buffer Factory Impl else component Type equals Marshalled Entry Factory class return new Marshalled Entry Factory Impl else component Type equals Remote Value Retrieved Listener class Manager currently listener remotely retrieved values return component Registry get Component Manager class else component Type equals Cluster Cache Notifier class return component Registry get Component Cache Notifier class else component Type equals Commit Manager class return new Commit Manager else component Type equals Site State Transfer Manager class return configuration sites Backups Empty null new Site State Transfer Manager Impl else component Type equals Site State Consumer class return new Site State Consumer Impl else component Type equals Site State Provider class return new Site State Provider Impl else component Type equals Functional Notifier class return new Functional Notifier Impl else component Type equals Command Ack Collector class return component Type cast new Command Ack Collector else component Type equals Triangle Order Manager class return component Type cast new Triangle Order Manager configuration clustering hash num Segments else component Type equals Ordered Updates Manager class return component Type cast new Ordered Updates Manager Impl else component Type equals Scattered Version Manager class return component Type cast new Scattered Version Manager Impl else component Type equals Transaction Originator Checker class return configuration clustering cache Mode Cache Mode component Type cast Transaction Originator Checker component Type cast new Clustered Transaction Originator Checker throw new Cache Configuration Exception n know create component Type get Name
package org persistence jpa impl import java util Hash Map import java util Map import java util Map Entry import java util concurrent atomic Atomic Integer import javax persistence Entity Manager Factory import javax persistence Persistence import javax persistence spi Persistence Provider import org commons util Util import org util logging Log import org util logging Log Factory import org osgi framework Bundle import org osgi framework Bundle Context import org osgi framework Framework Util import org osgi framework Service Reference author href mailto rtsang redhat com Ray Tsang public class Entity Manager Factory Registry private static final Log log Log Factory get Log Entity Manager Factory Registry class private Map String Entity Manager Factory registry new Hash Map String Entity Manager Factory private Map String Atomic Integer usage new Hash Map String Atomic Integer public Entity Manager Factory get Entity Manager Factory String persistence Unit Name synchronized registry contains Key persistence Unit Name Entity Manager Factory emf create Entity Manager Factory persistence Unit Name registry put persistence Unit Name emf usage put persistence Unit Name new Atomic Integer return emf else increment Usage persistence Unit Name return registry get persistence Unit Name public void close Entity Manager Factory String persistence Unit Name synchronized registry contains Key persistence Unit Name return int count decrement Usage persistence Unit Name count Entity Manager Factory emf registry remove persistence Unit Name try emf Open emf close catch Illegal State Exception e log warn Entity manager factory already closed persistence Unit Name public void close synchronized Entry String Entity Manager Factory entry registry entry Set try entry get Value Open entry get Value close catch Illegal State Exception e log warn Entity manager factory already closed entry get Key protected int increment Usage String persistence Unit Name synchronized return usage get persistence Unit Name increment Get protected int decrement Usage String persistence Unit Name synchronized return usage get persistence Unit Name decrement Get protected int get Usage String persistence Unit Name synchronized return usage get persistence Unit Name int Value private static Entity Manager Factory create Entity Manager Factory String persistence Unit Name Util Gi Context Bundle Bundle Framework Util get Bundle Entity Manager Factory Registry class Bundle Context context Bundle get Bundle Context Service Reference service Reference context get Service Reference Persistence Provider class get Name Persistence Provider persistence Provider Persistence Provider context get Service service Reference return persistence Provider create Entity Manager Factory persistence Unit Name null else return Persistence create Entity Manager Factory persistence Unit Name
package org container import static org commons util Util Str import org configuration cache Configuration import org configuration cache Configurations import org container entries Cache Entry import org container entries Versioned Repeatable Read Entry import org container entries Internal Cache Entry import org container entries Entry import org container entries Null Cache Entry import org container entries Read Committed Entry import org container entries Repeatable Read Entry import org container versioning Version Generator import org context Invocation Context import org factories annotations Inject import org factories annotations Start import org metadata Embedded Metadata import org metadata Metadata import org util Time Service import org util concurrent Isolation Level import org util logging Log import org util logging Log Factory link Entry Factory implementation used optimistic locking scheme author Mircea Markus since public class Entry Factory Impl implements Entry Factory protected static final Log log Log Factory get Log Entry Factory Impl class protected final static boolean trace log Trace Enabled private boolean use Repeatable Read private Data Container container private boolean Enabled private Configuration configuration private Time Service time Service private Version Generator version Generator private boolean use Versioning Inject public void inject Dependencies Data Container data Container Configuration configuration Time Service time Service Version Generator version Generator container data Container configuration configuration time Service time Service version Generator version Generator Start priority public void init Scattered mode needs repeatable read entries properly retry half committed multi key operations see Retrying Entry Wrapping Interceptor details use Repeatable Read configuration transaction transaction Mode Transactional configuration locking isolation Level Isolation Level configuration clustering cache Mode Scattered Enabled configuration clustering l enabled Write skew check implies isolation level locking mode use Versioning Configurations Tx Versioned configuration Override public final void wrap Entry Reading Invocation Context ctx Object key boolean Owner Owner Enabled return Cache Entry cache Entry get Context ctx key cache Entry null cache Entry get Container Read key Owner cache Entry null repeatable read need create Repeatable Read Entry internal cache entries mutable Otherwise store Internal Cache Entry directly context use Repeatable Read Entry mvcc Entry create Wrapped Entry key cache Entry mvcc Entry set Read cache Entry mvcc Entry ctx put Looked Entry key cache Entry trace log tracef Wrap read Entry Str key cache Entry Override public void wrap Entry Writing Invocation Context ctx Object key boolean Owner boolean Read Cache Entry context Entry get Context ctx key context Entry instanceof Entry Nothing already wrapped else context Entry null Already context Internal Cache Entry Need wrap Entry Entry mvcc Entry create Wrapped Entry key context Entry ctx put Looked Entry key mvcc Entry trace log tracef Updated context entry context Entry mvcc Entry else context yet Cache Entry cache Entry get Container key Owner true cache Entry null return Entry mvcc Entry create Wrapped Entry key cache Entry cache Entry Null mvcc Entry set Created true Read mvcc Entry set Read ctx put Looked Entry key mvcc Entry trace log tracef Updated context entry context Entry mvcc Entry Override public void wrap External Entry Invocation Context ctx Object key Cache Entry external Entry boolean Read boolean Write write operation entry always already wrapped read operation entry may context Internal Cache Entry null missing altogether Cache Entry context Entry get Context ctx key context Entry instanceof Entry Entry mvcc Entry Entry context Entry Already wrapped write Update value metadata mvcc Entry skip Lookup happen get Group invocations request whole group remote nodes even keys already context trace log tracef Ignored update context entry context Entry return Without updating initial value local write skew check would fail entry loaded cache store n called since afterwards set skip Lookup mvcc Entry set Value external Entry get Value mvcc Entry set Created external Entry get Created mvcc Entry set Last Used external Entry get Last Used mvcc Entry set Metadata external Entry get Metadata mvcc Entry update Previous Value trace log tracef Updated context entry context Entry else context Entry null context Entry Null Write use Repeatable Read Entry mvcc Entry create Wrapped Entry key external Entry Read mvcc Entry set Read ctx put Looked Entry key mvcc Entry trace log tracef Updated context entry context Entry mvcc Entry else read operation store external entry context directly ctx put Looked Entry key external Entry trace log tracef Updated context entry context Entry external Entry else use Repeatable Read trace log tracef Ignored update repeatable reads context Entry external Entry else ctx put Looked Entry key external Entry trace log tracef Updated context entry context Entry external Entry private Cache Entry get Context Invocation Context ctx Object key final Cache Entry cache Entry ctx lookup Entry key trace log tracef Exists context cache Entry return cache Entry private Cache Entry get Container Object key boolean Owner boolean write Operation Owner final Internal Cache Entry ice inner Get Container key write Operation trace log tracef Retrieved container ice ice null return Null Cache Entry get Instance return ice else Enabled final Internal Cache Entry ice inner Get Container key write Operation trace log tracef Retrieved container ice ice null ice Entry return null return ice return null private Cache Entry get Container Read Object key boolean Owner Internal Cache Entry ice container get key trace log tracef Retrieved container ice Owner return ice null Null Cache Entry get Instance ice else return ice null ice Entry null ice private Internal Cache Entry inner Get Container Object key boolean write Operation Internal Cache Entry ice Write operations cause expiration events occur likely overwrite value anyways also required remove expired cause infinite loop write Operation ice container peek key ice null ice Expire long wall Clock Time time Service wall Clock Time ice Expired wall Clock Time ice null else ice touch wall Clock Time else ice container get key return ice protected Entry create Wrapped Entry Object key Cache Entry cache Entry Object value null Metadata metadata null cache Entry null value cache Entry get Value metadata cache Entry get Metadata trace log tracef Creating new entry key Str key use Repeatable Read Entry mvcc Entry use Versioning metadata null metadata new Embedded Metadata Builder version version Generator non Existing Version build mvcc Entry new Versioned Repeatable Read Entry key value metadata else mvcc Entry new Repeatable Read Entry key value metadata return mvcc Entry else return new Read Committed Entry key value metadata
package org commands read import java util Iterator import java util Map import java util Set import java util Spliterator import org Cache import org Cache Set import org Cache Stream import org cache impl Abstract Delegating Cache import org commands Visitable Command import org commands Visitor import org commons util Closeable Iterator import org commons util Closeable Spliterator import org commons util Closeables import org commons util Enum Util import org commons util Iterator Mapper import org commons util Removable Iterator import org container Data Container import org container entries Cache Entry import org context Flag import org context Invocation Context import org distribution Distribution Manager import org distribution ch Consistent Hash import org stream impl local Entry Stream Supplier import org stream impl local Local Cache Stream import org util Data Container Remove Iterator import org util Entry Wrapper Command implementation link java util Map entry Set functionality author Galder Zamarre author href http gleamynode net Trustin Lee author William Burns since public class Entry Set Command extends Abstract Local Command implements Visitable Command private final Cache cache public Entry Set Command Cache cache long flags Bit Set set Flags Bit Set flags Bit Set cache Abstract Delegating Cache unwrap Cache cache flags Bit Set Enum Util cache cache get Advanced Cache Flags Enum Util enum Array flags Bit Set Flag class else cache cache Override public Object accept Visitor Invocation Context ctx Visitor visitor throws Throwable return visitor visit Entry Set Command ctx Override public Load Type load Type throw new Unsupported Operation Exception Override public Set Cache Entry perform Invocation Context ctx throws Throwable Object lock Owner ctx get Lock Owner ctx get Lock Owner null return new Backing Entry Set cache get Advanced Cache lock lock Owner return new Backing Entry Set cache Override public String String return Entry Set Command cache cache get Name static class Backing Entry Set extends Abstract Closeable Iterator Collection Cache Entry implements Cache Set Cache Entry Backing Entry Set Cache cache super cache Override public Closeable Iterator Cache Entry iterator Iterator Cache Entry iterator new Data Container Remove Iterator cache Removable Iterator Cache Entry removable Iterator new Removable Iterator iterator e cache remove e get Key e get Value return Closeables iterator new Iterator Mapper removable Iterator e new Entry Wrapper cache e Override public Closeable Spliterator Cache Entry spliterator Data Container dc cache get Advanced Cache get Data Container return Closeables spliterator Closeables iterator new Data Container Remove Iterator cache dc dc size Including Expired Spliterator Spliterator Spliterator Override public int size return cache get Advanced Cache get Data Container size Override public boolean contains Object Map Entry entry Entry entry null value cache get entry get Key return value null value equals entry get Value return false Override public boolean remove Object Map Entry entry Entry return entry null cache remove entry get Key entry get Value Override public boolean add Cache Entry internal Cache Entry link Map entry Set defines support add add methods throw new Unsupported Operation Exception private Map Entry Entry Object obj obj instanceof Map Entry return Map Entry obj else return null private Consistent Hash get Consistent Hash Cache cache Distribution Manager dm cache get Advanced Cache get Distribution Manager dm null return dm get Read Consistent Hash return null Override public Cache Stream Cache Entry stream return new Local Cache Stream new Entry Stream Supplier cache get Consistent Hash cache super stream false cache get Advanced Cache get Component Registry Override public Cache Stream Cache Entry parallel Stream return new Local Cache Stream new Entry Stream Supplier cache get Consistent Hash cache super stream true cache get Advanced Cache get Component Registry
package org stream impl local import java util Bit Set import java util Objects import java util Set import java util function Supplier import java util stream Stream import org Advanced Cache import org Cache import org cache impl Abstract Delegating Cache import org commons util Closeable Iterator import org commons util Removable Closeable Iterator import org container entries Cache Entry import org context Flag import org distribution ch Consistent Hash import org util logging Log import org util logging Log Factory Stream supplier used underlying stream composed link Cache Entry instances supplier proper filtering key based Cache Entry key public class Entry Stream Supplier implements Abstract Local Cache Stream Stream Supplier Cache Entry Stream Cache Entry private static final Log log Log Factory get Log Entry Stream Supplier class private static final boolean trace log Trace Enabled private final Cache cache private final Consistent Hash hash private final Supplier Stream Cache Entry supplier public Entry Stream Supplier Cache cache Consistent Hash hash Supplier Stream Cache Entry supplier cache cache hash hash supplier supplier Override public Stream Cache Entry build Stream Set Integer segments Filter Set keys Filter Stream Cache Entry stream keys Filter null trace log tracef Applying key filtering keys Filter Make sure n going remote retrieve Advanced Cache advanced Cache Abstract Delegating Cache unwrap Cache cache get Advanced Cache Flags Flag stream keys Filter stream map advanced Cache get Cache Entry filter Objects non Null else stream supplier get segments Filter null hash null trace log tracef Applying segment filter segments Filter Bit Set bit Set new Bit Set hash get Num Segments segments Filter bit Set set stream stream filter k key k get Key int segment hash get Segment key boolean Present bit Set get segment trace log tracef key present segment b key segment Present return Present return stream Override public Closeable Iterator Cache Entry removable Iterator Closeable Iterator Cache Entry real Iterator return new Removable Closeable Iterator real Iterator e cache remove e get Key e get Value
package org interceptors impl import static org commons util Util Str import java util Collection import java util Iterator import java util Map import java util Set import org commands Abstract Visitor import org commands Data Command import org commands Flag Affected Command import org commands Visitable Command import org commands functional Read Key Command import org commands functional Read Many Command import org commands functional Read Write Key Command import org commands functional Read Write Key Value Command import org commands functional Read Write Many Command import org commands functional Read Write Many Entries Command import org commands functional Tx Read Key Command import org commands functional Tx Read Many Command import org commands functional Write Key Command import org commands functional Write Key Value Command import org commands functional Write Many Command import org commands functional Write Many Entries Command import org commands read Abstract Data Command import org commands read Get Command import org commands read Get Cache Entry Command import org commands read Get Key Value Command import org commands remote Get Keys Group Command import org commands tx Commit Command import org commands tx Prepare Command import org commands write Abstract Data Write Command import org commands write Clear Command import org commands write Compute Command import org commands write Compute Absent Command import org commands write Data Write Command import org commands write Evict Command import org commands write Invalidate Command import org commands write Invalidate Command import org commands write Put Key Value Command import org commands write Put Map Command import org commands write Remove Command import org commands write Replace Command import org commands write Write Command import org configuration cache Configurations import org container Data Container import org container Entry Factory import org container entries Cache Entry import org container entries Entry import org container versioning Entry Version import org container versioning Version Generator import org context Flag import org context Invocation Context import org context Single Key Non Tx Invocation Context import org context impl Flag Bit Sets import org context impl Tx Invocation Context import org distribution Distribution Manager import org distribution group impl Group Filter import org distribution group impl Group Manager import org factories annotations Inject import org factories annotations Start import org filter Collection Key Filter import org filter Composite Key Filter import org filter Key Filter import org interceptors Async Interceptor import org interceptors Invocation Finally Action import org interceptors Invocation Success Action import org interceptors Invocation Success Function import org interceptors locking Clustering Dependent Logic import org notifications cachelistener Cache Notifier import org remoting responses Response import org statetransfer Outdated Topology Exception import org statetransfer State Consumer import org statetransfer State Transfer Lock import org statetransfer State Transfer Manager import org util concurrent Isolation Level import org util logging Log import org util logging Log Factory import org xsite statetransfer Site State Consumer Interceptor charge wrapping entries add caller context see Entry Factory overview entry wrapping author Mircea Markus author Pedro Ruivo since public class Entry Wrapping Interceptor extends Async Interceptor private Entry Factory entry Factory private Data Container Object Object data Container protected Clustering Dependent Logic cdl private Version Generator version Generator private Distribution Manager distribution Manager private final Entry Wrapping Visitor entry Wrapping Visitor new Entry Wrapping Visitor private boolean Invalidation private boolean Sync private State Consumer state Consumer optional private State Transfer Lock state Transfer Lock private Site State Consumer x Site State Consumer private Group Manager group Manager private Cache Notifier notifier private State Transfer Manager state Transfer Manager private boolean use Repeatable Read private boolean Versioned private static final Log log Log Factory get Log Entry Wrapping Interceptor class private static final boolean trace log Trace Enabled private static final long Flag Bit Sets Flag Bit Sets private boolean total Order private final Invocation Success Action data Read Return Handler r Ctx r Command rv Abstract Data Command data Command Abstract Data Command r Command r Ctx Tx Scope use Repeatable Read entry must context Cache Entry cache Entry r Ctx lookup Entry data Command get Key cache Entry set Skip Lookup true Versioned Entry cache Entry Read add Version Read Tx Invocation Context r Ctx cache Entry data Command get Key Entry visit notifications used happen Call Interceptor end avoid adding another try finally block around notifications rv null rv instanceof Response Object value data Command instanceof Get Cache Entry Command Cache Entry rv get Value rv notifier notify Cache Entry Visited data Command get Key value true r Ctx data Command notifier notify Cache Entry Visited data Command get Key value false r Ctx data Command private final Invocation Success Action commit Entries Success Handler r Ctx r Command rv commit Context Entries r Ctx null private final Invocation Finally Action commit Entries Finally Handler commit Entries Finally private final Invocation Success Function prepare Handler prepare Handler protected Log get Log return log Inject public void init Entry Factory entry Factory Data Container Object Object data Container Clustering Dependent Logic cdl State Consumer state Consumer State Transfer Lock state Transfer Lock Site State Consumer x Site State Consumer Group Manager group Manager Cache Notifier notifier State Transfer Manager state Transfer Manager Version Generator version Generator Distribution Manager distribution Manager entry Factory entry Factory data Container data Container cdl cdl state Consumer state Consumer state Transfer Lock state Transfer Lock x Site State Consumer x Site State Consumer group Manager group Manager notifier notifier state Transfer Manager state Transfer Manager version Generator version Generator distribution Manager distribution Manager Start public void start Invalidation cache Configuration clustering cache Mode Invalidation Sync cache Configuration clustering cache Mode Synchronous isolation level makes sense without transactions use Repeatable Read cache Configuration transaction transaction Mode Transactional cache Configuration locking isolation Level Isolation Level cache Configuration clustering cache Mode Scattered Versioned Configurations Tx Versioned cache Configuration total Order cache Configuration transaction transaction Protocol Total Order private boolean ignore Ownership Flag Affected Command command return state Transfer Manager null command Flag Flag Bit Sets Flag Bit Sets private boolean Read Object key return distribution Manager get Cache Topology Read Owner key Override public Object visit Prepare Command Tx Invocation Context ctx Prepare Command command throws Throwable return wrap Entries Prepare Apply ctx command prepare Handler private Object prepare Handler Invocation Context ctx Visitable Command command Object rv Commit Prepare Prepare Command command Tx Invocation Context ctx return invoke Next Accept ctx command commit Entries Success Handler else return invoke Next ctx command Override public Object visit Commit Command Tx Invocation Context ctx Commit Command command throws Throwable return invoke Next Finally ctx command commit Entries Finally Handler Override public final Object visit Get Key Value Command Invocation Context ctx Get Key Value Command command throws Throwable return visit Data Read Command ctx command Override public final Object visit Get Cache Entry Command Invocation Context ctx Get Cache Entry Command command throws Throwable return visit Data Read Command ctx command private Object visit Data Read Command Invocation Context ctx Abstract Data Command command final Object key command get Key entry Factory wrap Entry Reading ctx key ignore Ownership command Read key return invoke Next Accept ctx command data Read Return Handler Override public Object visit Get Command Invocation Context ctx Get Command command throws Throwable boolean ignore Ownership ignore Ownership command Object key command get Keys entry Factory wrap Entry Reading ctx key ignore Ownership Read key return invoke Next Finally ctx command r Ctx r Command rv Get Command get Command Get Command r Command use Repeatable Read Object key get Command get Keys Cache Entry cache Entry r Ctx lookup Entry key cache Entry null Data lost trace log tracef Missing entry key else cache Entry set Skip Lookup true Entry visit notifications used happen Call Interceptor instanceof check excludes case command returns Unsuccessful Response null rv instanceof Map log tracef Notifying get result command Flag Flag Bit Sets rv Map Object Object map Map Object Object rv would nice know listener registered full iteration visitor listener registered command Flag Flag Bit Sets Map Entry Object Object entry map entry Set Object value entry get Value value null value command Return Entries Cache Entry value get Value entry get Value notifier notify Cache Entry Visited entry get Key value true r Ctx get Command notifier notify Cache Entry Visited entry get Key value false r Ctx get Command Override public final Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable command get Keys null Object key command get Keys move distribution interceptors need try wrap entry get removed removal wrapping null would suffice listeners need previous value entry Factory wrap Entry Writing ctx key true false return set Skip Remote Gets Invoke Next Many Entries Command ctx command Override public final Object visit Clear Command Invocation Context ctx Clear Command command throws Throwable return invoke Next Accept ctx command r Ctx r Command rv committing Clear Command keys written state transfer current rebalance ends state Consumer null state Consumer stop Applying State Clear Command r Command get Topology Id x Site State Consumer null x Site State Consumer end State Transfer null r Ctx Tx Scope Clear Command clear Command Clear Command r Command apply Changes r Ctx clear Command trace log tracef return value rv Override public Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable Object key command get Keys move distribution interceptors need try wrap entry get removed removal wrapping null would suffice listeners need previous value entry Factory wrap Entry Writing ctx key false false trace log tracef Entry removed Str key return set Skip Remote Gets Invoke Next Many Entries Command ctx command Override public final Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable wrap Entry Needed ctx command return set Skip Remote Gets Invoke Next Data Command ctx command private void wrap Entry Needed Invocation Context ctx Abstract Data Write Command command throws Throwable command Flag Flag Bit Sets remove Context Retry ctx command get Key entry Factory wrap Entry Writing ctx command get Key ignore Ownership command Read command get Key command load Type Visitable Command Load Type private void remove Context Retry Invocation Context ctx Object key originator backup becomes primary retry command context already contains value command started executed However another modification could happen node became owner force reload repeatable reads remove entry context instead rely write skew check reload comparison end pessimistic locking entry locked n modification concurrent retried operation therefore n deal problem use Repeatable Read Entry entry Entry ctx lookup Entry key trace log tracef retry resetting previous value entry entry entry null entry reset Current Value else trace log tracef retry removing looked entry ctx lookup Entry key ctx remove Looked Entry key private void remove Context Retry Invocation Context ctx Collection keys use Repeatable Read trace log tracef retry resetting previous values keys Object key keys Entry entry Entry ctx lookup Entry key entry reset Current Value else ctx remove Looked Entries keys Override public final Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable wrap Entry Needed ctx command return set Skip Remote Gets Invoke Next Data Command ctx command Override public final Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable wrap Entry Needed ctx command return set Skip Remote Gets Invoke Next Data Command ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable wrap Entry Needed ctx command return set Skip Remote Gets Invoke Next Data Command ctx command Override public Object visit Compute Absent Command Invocation Context ctx Compute Absent Command command throws Throwable wrap Entry Needed ctx command return set Skip Remote Gets Invoke Next Data Command ctx command Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable boolean ignore Ownership ignore Ownership command command Flag Flag Bit Sets remove Context Retry ctx command get Affected Keys Object key command get Map key Set listeners may need value load previous value entry Factory wrap Entry Writing ctx key ignore Ownership Read key command load Type Visitable Command Load Type return set Skip Remote Gets Invoke Next Many Entries Command ctx command Override public Object visit Evict Command Invocation Context ctx Evict Command command throws Throwable command set Flags Bit Set command get Flags Bit Set force wrapping return visit Remove Command ctx command Override public Object visit Get Keys Group Command final Invocation Context ctx Get Keys Group Command command throws Throwable command Group Owner final Key Filter Object key Filter new Composite Key Filter new Group Filter command get Group Name group Manager new Collection Key Filter ctx get Looked Entries key Set data Container execute Task key Filter internal Cache Entry n wrap tombstones context want able eventually read values cache store filter Cache Loader Interceptor ignores keys already context internal Cache Entry get Value null synchronized ctx process made multiple threads need synchronize context entry Factory wrap External Entry ctx internal Cache Entry get Key internal Cache Entry true false n make sure read entries skip Lookup since Entry Factory really read n null read entries ctx Tx Scope use Repeatable Read return invoke Next Accept ctx command r Ctx r Command rv Tx Invocation Context tx Ctx Tx Invocation Context r Ctx Map Entry Object Cache Entry key Entry tx Ctx get Looked Entries entry Set Cache Entry cache Entry key Entry get Value cache Entry set Skip Lookup true Versioned Entry cache Entry Read add Version Read tx Ctx cache Entry key Entry get Key else return invoke Next ctx command Override public Object visit Read Key Command Invocation Context ctx Read Key Command command throws Throwable command instanceof Tx Read Key Command Tx Read Key Command may apply mutations entry context need always wrap entry Factory wrap Entry Writing ctx command get Key ignore Ownership command Read command get Key true else entry Factory wrap Entry Reading ctx command get Key ignore Ownership command Read command get Key Repeatable reads achievable functional commands n store value locally n fix remote node therefore value able change identity read could return different values transaction Note point mode implemented functional commands anyway return invoke Next ctx command Override public Object visit Read Many Command Invocation Context ctx Read Many Command command throws Throwable boolean ignore Ownership ignore Ownership command command instanceof Tx Read Many Command Tx Read Many Command may apply mutations entry context need always wrap Object key command get Keys entry Factory wrap Entry Writing ctx key ignore Ownership command Read key true else Object key command get Keys entry Factory wrap Entry Reading ctx key ignore Ownership Read key Repeatable reads achievable functional commands see visit Read Key Command return invoke Next ctx command Override public Object visit Write Key Command Invocation Context ctx Write Key Command command throws Throwable wrap Entry Needed ctx command return set Skip Remote Gets Invoke Next Data Command ctx command Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable wrap Entry Needed ctx command return set Skip Remote Gets Invoke Next Data Command ctx command Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable wrap Entry Needed ctx command return set Skip Remote Gets Invoke Next Data Command ctx command Override public Object visit Write Many Entries Command Invocation Context ctx Write Many Entries Command command throws Throwable command Flag Flag Bit Sets remove Context Retry ctx command get Affected Keys boolean ignore Ownership ignore Ownership command Object key command get Entries key Set put map never reads keys entry Factory wrap Entry Writing ctx key ignore Ownership Read key false return set Skip Remote Gets Invoke Next Many Entries Command ctx command Override public Object visit Write Many Command Invocation Context ctx Write Many Command command throws Throwable command Flag Flag Bit Sets remove Context Retry ctx command get Affected Keys boolean ignore Ownership ignore Ownership command Object key command get Affected Keys entry Factory wrap Entry Writing ctx key ignore Ownership Read key false return set Skip Remote Gets Invoke Next Many Entries Command ctx command Override public Object visit Write Key Value Command Invocation Context ctx Write Key Value Command command throws Throwable wrap Entry Needed ctx command return set Skip Remote Gets Invoke Next Data Command ctx command Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable command Flag Flag Bit Sets remove Context Retry ctx command get Affected Keys boolean ignore Ownership ignore Ownership command Object key command get Affected Keys entry Factory wrap Entry Writing ctx key ignore Ownership Read key true return set Skip Remote Gets Invoke Next Many Entries Command ctx command Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable command Flag Flag Bit Sets remove Context Retry ctx command get Affected Keys boolean ignore Ownership ignore Ownership command Object key command get Affected Keys entry Factory wrap Entry Writing ctx key ignore Ownership Read key true return set Skip Remote Gets Invoke Next Many Entries Command ctx command protected final void commit Context Entries Invocation Context ctx Flag Affected Command command final Flag state Transfer Flag Flag Bit Sets extract State Transfer Flag ctx command ctx instanceof Single Key Non Tx Invocation Context Single Key Non Tx Invocation Context single Key Ctx Single Key Non Tx Invocation Context ctx commit Entry Needed ctx command single Key Ctx get Cache Entry state Transfer Flag else Set Map Entry Object Cache Entry entries ctx get Looked Entries entry Set Iterator Map Entry Object Cache Entry entries iterator final Log log get Log Next Map Entry Object Cache Entry e next Cache Entry entry e get Value commit Entry Needed ctx command entry state Transfer Flag trace entry null log tracef Entry key null calling commit Update Str e get Key else log tracef Entry key changed calling commit Update Str e get Key entry protected void commit Context Entry Cache Entry entry Invocation Context ctx Flag Affected Command command Flag state Transfer Flag boolean l Invalidation cdl commit Entry entry command ctx state Transfer Flag l Invalidation private void apply Changes Invocation Context ctx Write Command command state Transfer Lock acquire Shared Topology Lock try retry non tx write commands Invalidation Ca n perform check preload cache n clustered boolean sync Rpc Sync command Flag Flag Bit Sets command Flag Flag Bit Sets command Successful distribution Manager null int command Topology Id command get Topology Id int current Topology Id distribution Manager get Cache Topology get Topology Id Total Order State Transfer Interceptor n set topology id Rs sync Rpc current Topology Id command Topology Id command Topology Id originator data command n key time means already committed need throw Outdated Topology Exception happen submit command primary owner responds topology change happens get ctx Origin Local command instanceof Data Command ctx Locked Key Data Command command get Key trace log tracef Cache topology changed command executing expected got command Topology Id current Topology Id n necessary fresh command instance retrying command set Value Matcher command get Value Matcher matcher Retry throw new Outdated Topology Exception Cache topology changed command executing expected command Topology Id got current Topology Id commit Context Entries ctx command finally state Transfer Lock release Shared Topology Lock Locks value keys accessed command avoid override remote get protected Object set Skip Remote Gets Invoke Next Many Entries Command Invocation Context ctx Write Command command return invoke Next Accept ctx command r Ctx r Command rv Write Command write Command Write Command r Command r Ctx Tx Scope apply Changes r Ctx write Command return trace log tracef return value Str rv use Repeatable Read boolean add Version Read Versioned write Command load Type Visitable Command Load Type Tx Invocation Context tx Ctx Tx Invocation Context r Ctx Object key write Command get Affected Keys Cache Entry cache Entry r Ctx lookup Entry key cache Entry null cache Entry set Skip Lookup true add Version Read Entry cache Entry Read add Version Read tx Ctx cache Entry key Entry cache Entry update Previous Value private void add Version Read Tx Invocation Context r Ctx Cache Entry cache Entry Object key Entry Version version cache Entry null cache Entry get Metadata null version cache Entry get Metadata version trace log tracef Adding version read key version key else version version Generator non Existing Version trace log tracef Adding non existent version read key key r Ctx get Cache Transaction add Version Read key version Locks value keys accessed command avoid override remote get protected Object set Skip Remote Gets Invoke Next Data Command Invocation Context ctx Data Write Command command return invoke Next Accept ctx command r Ctx r Command rv Data Write Command data Write Command Data Write Command r Command r Ctx Tx Scope apply Changes r Ctx data Write Command return trace log tracef return value rv use Repeatable Read Cache Entry cache Entry r Ctx lookup Entry data Write Command get Key entry context command execution type contain origin cache Entry null cache Entry set Skip Lookup true Versioned data Write Command load Type Visitable Command Load Type Entry cache Entry Read add Version Read Tx Invocation Context r Ctx cache Entry data Write Command get Key Entry cache Entry update Previous Value private void commit Entries Finally Invocation Context r Ctx Visitable Command r Command Object rv Throwable commit command retried instanceof Outdated Topology Exception return commit Context Entries r Ctx null visitor replays entry wrapping remote prepare command passed stack even keys belong node according write role Tx Distribution Interceptor ignore command entry wrapped available reading otherwise wrapped Tx Distribution Interceptor entry wrapped value loaded Cache Loader Interceptor therefore passing command stack causes minimal overhead private final class Entry Wrapping Visitor extends Abstract Visitor Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable return handle Write Many Command ctx command Override public Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable return handle Write Many Command ctx command Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable return handle Write Command ctx command Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable return handle Write Command ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return handle Write Command ctx command Override public Object visit Compute Absent Command Invocation Context ctx Compute Absent Command command throws Throwable return handle Write Command ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Key Command Invocation Context ctx Write Key Command command throws Throwable return handle Write Command ctx command Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable return handle Write Command ctx command Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Many Entries Command Invocation Context ctx Write Many Entries Command command throws Throwable return handle Write Many Command ctx command Override public Object visit Write Key Value Command Invocation Context ctx Write Key Value Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Many Command Invocation Context ctx Write Many Command command throws Throwable return handle Write Many Command ctx command Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable return handle Write Many Command ctx command Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable return handle Write Many Command ctx command private Object handle Write Command Invocation Context ctx Data Write Command command throws Throwable entry Factory wrap Entry Writing ctx command get Key ignore Ownership command Read command get Key command load Type Visitable Command Load Type return invoke Next ctx command private Object handle Write Many Command Invocation Context ctx Write Command command boolean ignore Ownership ignore Ownership command Object key command get Affected Keys entry Factory wrap Entry Writing ctx key ignore Ownership Read key command load Type Visitable Command Load Type return invoke Next ctx command private boolean commit Entry Needed final Invocation Context ctx final Flag Affected Command command final Cache Entry entry final Flag state Transfer Flag entry null return false final boolean l Invalidation command instanceof Invalidate Command entry Changed trace log tracef commit entry entry commit Context Entry entry ctx command state Transfer Flag l Invalidation return true return false total order condition commits remote context prepare flag set param command prepare command param ctx invocation context return true modification committed false otherwise protected boolean Commit Prepare Prepare Command command Tx Invocation Context ctx return total Order command One Phase Commit ctx Origin Local command Modifications command One Phase Commit protected final Object wrap Entries Prepare Apply Tx Invocation Context ctx Prepare Command command Invocation Success Function handler throws Throwable ctx Origin Local command Replay Entry Wrapping return apply Modifications ctx command command get Modifications handler return handler apply ctx command null private Object apply Modifications Tx Invocation Context ctx Prepare Command command Write Command modifications int start Index Invocation Success Function handler throws Throwable need execute modifications key sequentially theory could optimize loop multiple remote invocations since remote invocations rare omit int start Index modifications length Write Command c modifications c set Topology Id command get Topology Id c Flag Flag Bit Sets ctx get Cache Transaction set State Transfer Flag Flag Object result c accept Visitor ctx entry Wrapping Visitor Successfully Done result int next Index next Index modifications length return make Stage result Apply ctx command handler return make Stage result Apply ctx command r Ctx r Command rv apply Modifications ctx command modifications next Index handler return handler apply ctx command null
package org notifications cachelistener event import org Cache interface defines common characteristics events author Manik Surtani since public interface Event enum Type private static final Type values public static Type value int ordinal return ordinal return type event represented instance Type get Type return tt true tt notification event occurred tt false tt event occurred boolean Pre return handle cache instance generated notification Cache get Cache
package org notifications cachelistener event impl import java util Collection import java util Collections import java util Map import org Cache import org commons util Util import org distribution ch Consistent Hash import org metadata Metadata import org notifications cachelistener event Cache Entries Evicted Event import org notifications cachelistener event Cache Entry Activated Event import org notifications cachelistener event Cache Entry Created Event import org notifications cachelistener event Cache Entry Expired Event import org notifications cachelistener event Cache Entry Invalidated Event import org notifications cachelistener event Cache Entry Loaded Event import org notifications cachelistener event Cache Entry Modified Event import org notifications cachelistener event Cache Entry Passivated Event import org notifications cachelistener event Cache Entry Removed Event import org notifications cachelistener event Cache Entry Visited Event import org notifications cachelistener event Data Rehashed Event import org notifications cachelistener event Partition Status Changed Event import org notifications cachelistener event Topology Changed Event import org notifications cachelistener event Transaction Completed Event import org notifications cachelistener event Transaction Registered Event import org partitionhandling Availability Mode import org remoting transport Address import org transaction xa Global Transaction import net jcip annotations Thread Safe Basic implementation event covers event types author Manik Surtani since Thread Safe public class Event Impl implements Cache Entry Activated Event Cache Entry Created Event Cache Entries Evicted Event Cache Entry Loaded Event Cache Entry Modified Event Cache Entry Passivated Event Cache Entry Removed Event Cache Entry Visited Event Transaction Completed Event Transaction Registered Event Cache Entry Invalidated Event Data Rehashed Event Topology Changed Event Cache Entry Expired Event Partition Status Changed Event Cloneable private boolean pre false default events fact private transient Cache cache private key private Global Transaction transaction private Metadata metadata private Metadata old Metadata private boolean origin Local true default events originate locally private boolean transaction Successful private Type type private value private old Value private Consistent Hash read Consistent Hash Start write Consistent Hash Start read Consistent Hash End write Consistent Hash End union Consistent Hash private int new Topology Id private Map extends extends entries private boolean created private boolean command Retried private Availability Mode mode public Event Impl public static Event Impl create Event Cache cache Type type Event Impl e new Event Impl e cache cache e type type return e Override public Type get Type return type Override public boolean Pre return pre Override public Cache get Cache return cache Override Suppress Warnings unchecked public get Key key instanceof Marshalled Value key Marshalled Value key get return key Override public Global Transaction get Global Transaction return transaction Override public boolean Origin Local return origin Local Override public boolean Transaction Successful return transaction Successful setters public void set Pre boolean pre pre pre public void set Key key key key public void set Transaction Id Global Transaction transaction transaction transaction public void set Origin Local boolean origin Local origin Local origin Local public void set Transaction Successful boolean transaction Successful transaction Successful transaction Successful public void set Read Consistent Hash Start Consistent Hash read Consistent Hash Start read Consistent Hash Start read Consistent Hash Start public void set Write Consistent Hash Start Consistent Hash write Consistent Hash Start write Consistent Hash Start write Consistent Hash Start public void set Read Consistent Hash End Consistent Hash read Consistent Hash End read Consistent Hash End read Consistent Hash End public void set Write Consistent Hash End Consistent Hash write Consistent Hash End write Consistent Hash End write Consistent Hash End public void set Union Consistent Hash Consistent Hash union Consistent Hash union Consistent Hash union Consistent Hash public void set New Topology Id int new Topology Id new Topology Id new Topology Id public void set Metadata Metadata metadata metadata metadata Override public Metadata get Metadata return metadata public void set Old Metadata Metadata metadata old Metadata metadata public Metadata get Old Metadata return old Metadata Override Suppress Warnings unchecked public get Value value instanceof Marshalled Value value Marshalled Value value get return value public void set Command Retried boolean command Retried command Retried command Retried Override public boolean Command Retried return command Retried Override public boolean Created return created Override public get Old Value return old Value public void set Value value value value public void set Entries Map extends extends entries entries entries public void set Created boolean created created created public void set Old Value old Value old Value old Value Override public boolean equals Object return true null get Class get Class return false Event Impl event Event Impl origin Local event origin Local return false pre event pre return false transaction Successful event transaction Successful return false cache null cache equals event cache event cache null return false key null key equals event key event key null return false transaction null transaction equals event transaction event transaction null return false type event type return false value null value equals event value event value null return false Util safe Equals read Consistent Hash Start event read Consistent Hash Start return false Util safe Equals write Consistent Hash Start event write Consistent Hash Start return false Util safe Equals read Consistent Hash End event read Consistent Hash End return false Util safe Equals write Consistent Hash End event write Consistent Hash End return false Util safe Equals union Consistent Hash event union Consistent Hash return false new Topology Id event new Topology Id return false created event created return false old Value null old Value equals event old Value event old Value null return false return true Override public int hash Code int result pre result result cache null cache hash Code result result key null key hash Code result result transaction null transaction hash Code result result origin Local result result transaction Successful result result type null type hash Code result result value null value hash Code result result read Consistent Hash Start null read Consistent Hash Start hash Code result result write Consistent Hash Start null write Consistent Hash Start hash Code result result read Consistent Hash End null read Consistent Hash End hash Code result result write Consistent Hash End null write Consistent Hash End hash Code result result union Consistent Hash null union Consistent Hash hash Code result result new Topology Id result result created result result old Value null old Value hash Code return result Override public String String type Type type Type return Event Impl type type pre pre cache cache read Consistent Hash Start read Consistent Hash Start write Consistent Hash Start write Consistent Hash Start read Consistent Hash End read Consistent Hash End write Consistent Hash End write Consistent Hash End union Consistent Hash union Consistent Hash new Topology Id new Topology Id return Event Impl type type pre pre cache cache key key value value old Value old Value transaction transaction origin Local origin Local transaction Successful transaction Successful entries entries created created Override public Collection Address get Members Start return read Consistent Hash Start null read Consistent Hash Start get Members Collections Address empty Set Override public Collection Address get Members End return read Consistent Hash End null read Consistent Hash End get Members Collections Address empty Set Override public Consistent Hash get Consistent Hash Start return read Consistent Hash Start Override public Consistent Hash get Consistent Hash End return write Consistent Hash End Override public Consistent Hash get Read Consistent Hash Start return read Consistent Hash Start Override public Consistent Hash get Write Consistent Hash Start return write Consistent Hash Start Override public Consistent Hash get Read Consistent Hash End return read Consistent Hash End Override public Consistent Hash get Write Consistent Hash End return write Consistent Hash End Override public Consistent Hash get Union Consistent Hash return union Consistent Hash Override public int get New Topology Id return new Topology Id Override public Availability Mode get Availability Mode return mode public void set Availability Mode Availability Mode mode mode mode Override public Map extends extends get Entries return entries Override public Event Impl clone try return Event Impl super clone catch Clone Supported Exception e throw new Runtime Exception never happen e
package org util logging events impl import org factories scopes Scope import org factories scopes Scopes import org util logging events Event Log Manager import org util logging events Event Logger Event Log Manager Impl implementation Event Log Manager default returns author Tristan Tarrant since Scope Scopes public class Event Log Manager Impl implements Event Log Manager Event Logger logger new Basic Event Logger Override public Event Logger replace Event Logger Event Logger new Logger Event Logger old Logger logger logger new Logger return old Logger Override public Event Logger get Event Logger return logger
package org notifications cachelistener import org notifications cachelistener event Event Simple wrapper keeps original key along converted event original key required things key tracking author wburns since public class Event Wrapper extends Event private event private final key public Event Wrapper key event event event key key public get Event return event public void set Event event event event public get Key return key
package org configuration cache import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set import org eviction Eviction Strategy import org eviction Eviction Thread Policy import org eviction Eviction Type import org util logging Log import org util logging Log Factory Controls eviction settings cache deprecated Use link Memory Configuration instead Deprecated public class Eviction Configuration static final Log log Log Factory get Log Eviction Configuration class public static final Attribute Definition Long Attribute Definition builder size l build public static final Attribute Definition Eviction Type Attribute Definition builder type Eviction Type build public static final Attribute Definition Eviction Strategy Attribute Definition builder strategy Eviction Strategy immutable build public static final Attribute Definition Eviction Thread Policy Attribute Definition builder thread Policy Eviction Thread Policy immutable build static Attribute Set attribute Definition Set return new Attribute Set Eviction Configuration class private final Attribute Long size private final Attribute Eviction Type type private final Attribute Eviction Strategy strategy private final Attribute Eviction Thread Policy thread Policy private final Attribute Set attributes Eviction Configuration Attribute Set attributes attributes attributes check Protection size attributes attribute type attributes attribute strategy attributes attribute thread Policy attributes attribute Eviction strategy Available options disable eviction deprecated use link Memory Configuration eviction Type instead Deprecated public Eviction Strategy strategy return strategy get Threading policy eviction deprecated Deprecated public Eviction Thread Policy thread Policy return thread Policy get Maximum number entries cache instance Cache size guaranteed exceed upper limit specified max entries However due nature eviction unlikely ever exactly maximum number entries specified makes sense using type deprecated use link Memory Configuration size instead Deprecated public long max Entries type get Eviction Type throw new Illegal State Exception return size deprecated use link Memory Configuration size instead Deprecated public long size return size get Deprecated public void size long new Size size set new Size deprecated use link Memory Configuration eviction Type instead Deprecated public Eviction Type type return type get public Attribute Set attributes return attributes Override public String String return Eviction Configuration attributes attributes Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Eviction Configuration Eviction Configuration obj attributes null attributes null return false else attributes equals attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result
package org configuration cache import static org configuration cache Eviction Configuration import static org configuration cache Eviction Configuration import static org configuration cache Eviction Configuration import static org configuration cache Eviction Configuration import org commons configuration Builder import org commons configuration attributes Attribute Set import org configuration global Global Configuration import org eviction Eviction Strategy import org eviction Eviction Thread Policy import org eviction Eviction Type import org util logging Log import org util logging Log Factory Controls eviction settings cache deprecated Use link Memory Configuration instead Deprecated public class Eviction Configuration Builder extends Abstract Configuration Child Builder implements Builder Eviction Configuration private static final Log log Log Factory get Log Eviction Configuration Builder class private final Attribute Set attributes public static final long x ffffffffffffffl Eviction Configuration Builder Configuration Builder builder super builder attributes Eviction Configuration attribute Definition Set Eviction strategy Available options disable eviction param eviction Strategy public Eviction Configuration Builder strategy Eviction Strategy eviction Strategy attributes attribute set eviction Strategy return Eviction Strategy strategy return attributes attribute get Threading policy eviction param policy public Eviction Configuration Builder thread Policy Eviction Thread Policy policy attributes attribute set policy return Maximum number entries cache instance Backward compatible shortcut type Eviction Type size max Entries param max Entries Deprecated public Eviction Configuration Builder max Entries long max Entries return type Eviction Type size max Entries Deprecated public Eviction Configuration Builder max Entries int max Entries return max Entries long max Entries Defines maximum size eviction occurs See link type Eviction Type param size public Eviction Configuration Builder size long size attributes attribute set size memory size size return Sets eviction type either ul li entries evicted number entries exceeds link size long li li entries evicted approximate combined size values exceeds link size long li ul Cache size guaranteed exceed upper limit specified max entries However due nature eviction unlikely ever exactly maximum number entries specified param type public Eviction Configuration Builder type Eviction Type type attributes attribute set type memory eviction Type type return Override public void validate Eviction Strategy strategy attributes attribute get Long size attributes attribute get strategy Eviction Strategy log warn Fifo Strategy Deprecated strategy Enabled size throw log invalid Eviction Size strategy Enabled size strategy Eviction Strategy log debugf Max entries configured without eviction strategy Eviction strategy overriden size strategy else get Builder persistence passivation strategy Eviction Strategy get Builder template log passivation Without Eviction strategy Eviction Strategy attributes attribute get Eviction Type throw log memory Eviction Invalid Strategy size throw log eviction Size Large size attributes attribute get Eviction Type String java Security Actions get System Property java vm name java contains Hot Spot log memory Approximation Unsupported java Override public void validate Global Configuration global Config Override public Eviction Configuration create return new Eviction Configuration attributes protect Override public Eviction Configuration Builder read Eviction Configuration template attributes read template attributes return Override public String String return get Class get Simple Name attributes
package org eviction impl import java util Map import org configuration cache Configuration import org container entries Internal Cache Entry import org context Invocation Context import org context impl Immutable Context import org eviction Eviction Manager import org factories annotations Inject import org interceptors Async Interceptor Chain import org interceptors impl Cache Mgmt Interceptor import org notifications cachelistener Cache Notifier import net jcip annotations Thread Safe Thread Safe public class Eviction Manager Impl implements Eviction Manager components injected private Cache Notifier cache Notifier private Async Interceptor Chain interceptor Chain private Configuration cfg Inject public void initialize Cache Notifier cache Notifier Configuration cfg Async Interceptor Chain chain cache Notifier cache Notifier cfg cfg interceptor Chain chain Override public void Entry Eviction Map extends Internal Cache Entry extends extends evicted n reuse threadlocal context n want include eviction operations ongoing transaction affected flags especially see illegal acquire locks committing transaction Invocation Context ctx Immutable Context important make external guarantees thread execute code could user thread could eviction thread However user calls cache evict want carry contextual information hence makes sense notify Cache Entries Evicted call carry taking Invocation Context object cache Notifier notify Cache Entries Evicted evicted values ctx null cfg jmx Statistics enabled update Eviction Statistics evicted private void update Eviction Statistics Map extends Internal Cache Entry extends extends evicted Cache Mgmt Interceptor mgmt Interceptor interceptor Chain find Interceptor Extending Cache Mgmt Interceptor class mgmt Interceptor null mgmt Interceptor add Evictions evicted size
package org eviction Supported eviction strategies author Manik Surtani since public enum Eviction Strategy strategy deprecated used instead Deprecated public boolean Enabled return
package org eviction Supported eviction thread policy author Vladimir Blagojevic since public enum Eviction Thread Policy
package org remoting responses import java io Exception import java io Object Input import java io Object Output import java util Set import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids response encapsulates exception author Manik Surtani since public class Exception Response extends Invalid Response private Exception exception public Exception Response public Exception Response Exception exception exception exception public Exception get Exception return exception public void set Exception Exception exception exception exception Override public String String return Exception Response exception public static class Externalizer extends Abstract Externalizer Exception Response Override public void write Object Object Output output Exception Response response throws Exception output write Object response exception Override public Exception Response read Object Object Input input throws Exception Class Found Exception return new Exception Response Exception input read Object Override public Integer get Id return Ids Override public Set Class extends Exception Response get Type Classes return Util Class extends Exception Response Set Exception Response class
package org configuration cache import java util concurrent Time Unit import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set Controls default expiration settings entries cache public class Expiration Configuration public static final Attribute Definition Long Attribute Definition builder lifespan l build public static final Attribute Definition Long Attribute Definition builder max Idle l build public static final Attribute Definition Boolean Attribute Definition builder reaper Enabled true immutable auto Persist false build public static final Attribute Definition Long Attribute Definition builder wake Interval Time Unit Millis xml Name interval build static Attribute Set attribute Definition Set return new Attribute Set Expiration Configuration class private final Attribute Long lifespan private final Attribute Long max Idle private final Attribute Boolean reaper Enabled private final Attribute Long wake Interval private final Attribute Set attributes Expiration Configuration Attribute Set attributes attributes attributes check Protection lifespan attributes attribute max Idle attributes attribute reaper Enabled attributes attribute wake Interval attributes attribute Maximum lifespan cache entry entry expired cluster wide milliseconds means entries never expire Note overridden per entry basis using Cache public long lifespan return lifespan get Maximum idle time cache entry maintained cache milliseconds idle time exceeded entry expired cluster wide means entries never expire Note overridden per entry basis using Cache public long max Idle return max Idle get Determines whether background reaper thread enabled test entries expiration Regardless whether reaper used entries tested expiration lazily touched public boolean reaper Enabled return reaper Enabled get Interval milliseconds subsequent runs purge expired entries memory cache stores wish disable periodic eviction process altogether set wakeup Interval public long wake Interval return wake Interval get Override public String String return Expiration Configuration attributes attributes Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Expiration Configuration Expiration Configuration obj attributes null attributes null return false else attributes equals attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result public Attribute Set attributes return attributes
package org configuration cache import static org configuration cache Expiration Configuration import static org configuration cache Expiration Configuration import static org configuration cache Expiration Configuration import static org configuration cache Expiration Configuration import java util concurrent Time Unit import org commons configuration Builder import org commons configuration attributes Attribute Set import org configuration global Global Configuration Controls default expiration settings entries cache public class Expiration Configuration Builder extends Abstract Configuration Child Builder implements Builder Expiration Configuration private final Attribute Set attributes Expiration Configuration Builder Configuration Builder builder super builder attributes Expiration Configuration attribute Definition Set Maximum lifespan cache entry entry expired cluster wide milliseconds means entries never expire Note overridden per entry basis using Cache public Expiration Configuration Builder lifespan long l attributes attribute set l return Maximum lifespan cache entry entry expired cluster wide milliseconds means entries never expire Note overridden per entry basis using Cache public Expiration Configuration Builder lifespan long l Time Unit unit return lifespan unit Millis l Maximum idle time cache entry maintained cache milliseconds idle time exceeded entry expired cluster wide means entries never expire Note overridden per entry basis using Cache public Expiration Configuration Builder max Idle long l attributes attribute set l return Maximum idle time cache entry maintained cache milliseconds idle time exceeded entry expired cluster wide means entries never expire Note overridden per entry basis using Cache public Expiration Configuration Builder max Idle long l Time Unit unit return max Idle unit Millis l Enable background reaper test entries expiration Regardless whether reaper used entries tested expiration lazily touched public Expiration Configuration Builder enable Reaper attributes attribute set true return Enable background reaper test entries expiration Regardless whether reaper used entries tested expiration lazily touched public Expiration Configuration Builder reaper Enabled boolean enabled attributes attribute set enabled return Disable background reaper test entries expiration test entries expiration Regardless whether reaper used entries tested expiration lazily touched public Expiration Configuration Builder disable Reaper attributes attribute set false return public boolean reaper Enabled return attributes attribute get Interval milliseconds subsequent runs purge expired entries memory cache stores wish disable periodic eviction process altogether set wakeup Interval public Expiration Configuration Builder wake Interval long l attributes attribute set l return public long wakeup Interval return attributes attribute get Interval milliseconds subsequent runs purge expired entries memory cache stores wish disable periodic eviction process altogether set wakeup Interval public Expiration Configuration Builder wake Interval long l Time Unit unit return wake Interval unit Millis l Override public void validate Override public void validate Global Configuration global Config Override public Expiration Configuration create return new Expiration Configuration attributes protect Override public Expiration Configuration Builder read Expiration Configuration template attributes read template attributes return Override public String String return get Class get Simple Name attributes
package org expiration impl import java util Iterator import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import java util concurrent Scheduled Executor Service import java util concurrent Scheduled Future import java util concurrent Time Unit import org Cache import org commons util Util import org configuration cache Configuration import org container Data Container import org container entries Internal Cache Entry import org expiration Expiration Manager import org factories Known Component Names import org factories annotations Component Name import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org marshall core Marshalled Entry import org metadata Metadata import org notifications cachelistener Cache Notifier import org persistence manager Persistence Manager import org util Time Service import org util logging Log import org util logging Log Factory import net jcip annotations Thread Safe Thread Safe public class Expiration Manager Impl implements Expiration Manager protected static final Log log Log Factory get Log Expiration Manager Impl class protected static final boolean trace log Trace Enabled protected Scheduled Future expiration Task components injected protected Scheduled Executor Service executor protected Configuration configuration protected Persistence Manager persistence Manager protected Data Container data Container protected Cache Notifier cache Notifier protected Time Service time Service protected boolean enabled protected String cache Name map used performance reasons Essentially expiration event raised map populated first main examples expiration occur key key removed updated latter case n want send expiration event remove event could removal protected Concurrent Map Object expiring Inject public void initialize Component Name Known Component Names Scheduled Executor Service executor Cache cache Configuration cfg Data Container data Container Persistence Manager persistence Manager Cache Notifier cache Notifier Time Service time Service initialize executor cache get Name cfg data Container persistence Manager cache Notifier time Service void initialize Scheduled Executor Service executor String cache Name Configuration cfg Data Container data Container Persistence Manager persistence Manager Cache Notifier cache Notifier Time Service time Service executor executor configuration cfg cache Name cache Name data Container data Container persistence Manager persistence Manager cache Notifier cache Notifier time Service time Service expiring new Concurrent Hash Map Start priority make sure starts Persistence Manager public void start first check eviction enabled enabled configuration expiration reaper Enabled enabled Set eviction timer task long exp Wake Int configuration expiration wake Interval exp Wake Int log Starting Eviction Thread enabled false else expiration Task executor schedule Fixed Delay new Scheduled Task exp Wake Int exp Wake Int Time Unit Override public void process Expiration long start Thread current Thread Interrupted try trace log trace Purging data container expired entries start time Service time long current Time Millis time Service wall Clock Time Iterator Internal Cache Entry purge Candidates data Container iterator Including Expired purge Candidates Next Internal Cache Entry e purge Candidates next e Expired current Time Millis handle Memory Expiration e current Time Millis trace log tracef Purging data container completed Util pretty Print Time time Service time Duration start Time Unit catch Exception e log exception Purging Data Container e Thread current Thread Interrupted persistence Manager purge Expired Override public boolean Enabled return enabled Override public void handle Memory Expiration Internal Cache Entry entry long current Time data Container compute entry get Key k old Entry factory old Entry null synchronized old Entry old Entry Expired current Time delete Stores Notify k old Entry get Value old Entry get Metadata else return old Entry return null Override public void handle Store Expiration key Note since invoked without actual key lock entirely possible remove occur concurrently data container lock acquired old Entry null causing expiration event generated extra handle Store Expiration key null null Override public void handle Store Expiration final Marshalled Entry marshalled Entry handle Store Expiration marshalled Entry get Key marshalled Entry get Value marshalled Entry get Metadata private void handle Store Expiration key value Metadata metadata data Container compute key old Key old Entry factory boolean Remove false old Entry null Remove true delete Stores Notify key value metadata else old Entry Expire long time time Service time old Entry Expired time synchronized old Entry old Entry Expired time Even though provided marshalled entry may provide metadata value possibly check null either Remove metadata null old Entry get Metadata equals metadata value null value equals old Entry get Value delete Stores Notify key value metadata Remove return null return old Entry Deletes key store well notifies cache listeners expiration given key value metadata combination param key param value param metadata private void delete Stores Notify key value Metadata metadata delete Stores key cache Notifier null guarantee ordering events must done entry another write done time cache Notifier notify Cache Entry Expired key value metadata null private void delete Stores key delete shared stores well make sure multiple expiration events persistence Manager delete Stores key Persistence Manager Access Mode Override public void register Write Incoming key expiring put key key Override public void unregister Write key expiring remove key Stop priority public void stop expiration Task null expiration Task cancel true class Scheduled Task implements Runnable Override public void run Log Factory push cache Name trace try process Expiration finally Log Factory pop trace
package org container entries Provide utility methods dealing expiration cache entries author Manik Surtani author Sanne Grinovero since public class Expiry Helper public static boolean Expired Mortal long lifespan long created long return lifespan created created lifespan public static boolean Expired Transient long max Idle long last Used long return max Idle last Used max Idle last Used public static boolean Expired Transient Mortal long max Idle long last Used long lifespan long created long return Expired Transient max Idle last Used Expired Mortal lifespan created
package org commons marshall import java io Exception import java io Object Input import java io Object Output import java io Serializable One key aspects often needs marshall unmarshall objects order provide functionality example needs store objects write write behind cache store objects stored need marshalling cluster nodes formed objects shipped around need marshalling Even enable storing binary objects need marshalled lazily unmarshalled correct classloader Using standard serialization slow produces payloads big affect bandwidth usage top serialization work well objects supposed immutable order avoid issues uses Boss Marshalling marshalling unmarshalling objects Boss Marshalling fast provides space efficient payloads top allows users construct objects unmarshalling hence allowing objects carry immutable Starting users benefit marshalling framework well simplest possible form users need provide link Externalizer implementation type want marshall unmarshall annotate marshalled type class link Serialize indicating externalizer class use runtime Boss Marshaller inspect object discover marshallable thanks annotation marshall using externalizer class passed common practice include externalizer implementations within classes marshall unmarshall code public static classes code make externalizer implementations easier code typesafe make sure define type type object marshalled unmarshalled Even though way defining externalizers user friendly disadvantages ul li Due several constraints model support different versions class need marshall Externalizer class payload sizes generated via method efficient li li model requires marshalled class annoated link Serialize user might need provide Externalizer class source code available constraints modified li li use annotations model might limiting framework developers service providers try abstract lower level details marshalling layer away user li ul affected disadvantages alternative mechanism provide externalizers available via link Advanced Externalizer details found interface javadoc Please note even though Externalizer marked link Serializable need marshall externalizer really needed developing user friendly externalizers using link Serialize link Advanced Externalizer instances require externalizer serializable since externalizer marshalled Even though strictly necessary avoid breaking compatibility old clients link Externalizer implements link Serializable requirement needed user friendly externalizers chance future major releases link Externalizer wo n extend link Serializable hence strongly recommend user friendly externalizer users mark externalizer implementations either link Serializable link java io Externalizable author Galder Zamarre since public interface Externalizer extends Serializable Write object reference stream param output object output write param object object reference write throws Exception error occurs void write Object Object Output output object throws Exception Read instance stream instance written link write Object Object Output Object method Implementations free create instances object read stream way feel like could via constructor factory reflection param input object input read return object instance throws Exception error occurs throws Class Found Exception class could found read Object Object Input input throws Exception Class Found Exception
package org query impl externalizers Identifiers used Marshaller delegate specialized Externalizers details read http org docs x user guide user guide html preassigned externalizer id ranges range reserved Query module author Sanne Grinovero since public interface Externalizer Ids Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer Integer
package org client hotrod Defines flags available Hot Rod client influence behavior operations p Available flags ul li link default previously existing values link java util Map operations returned g link Remote Cache put Object Object return previous value associated key applying flag default behavior overridden scope single invocation previous existing value returned li li link flag either used request flag put operation mean default server lifespan applied response flag meaning return entry default lifespan value li li link flag either used request flag put operation mean default server max Idle applied response flag meaning return entry default max Idle value li li link Skips loading entry configured link org persistence spi Cache Loader li li link Used Query module prevent indexes updated result current operations ul author Mircea Markus jboss com since public enum Flag default previously existing values link java util Map operations returned g link Remote Cache put Object Object return previous value associated key p applying flag default behavior overridden scope single invocation previous existing value returned x flag either used request flag put operation mean default server lifespan applied response flag meaning return entry default lifespan value x flag either used request flag put operation mean default server max Idle applied response flag meaning return entry default max Idle value x Skips loading entry configured link org persistence spi Cache Loader x Used Query module prevent indexes updated result current operations x private int flag Int Flag int flag Int flag Int flag Int public int get Flag Int return flag Int
package org transaction lookup import java lang reflect Method import javax naming Initial Context import javax naming Naming Exception import javax transaction Transaction Manager import org commons util Util import org configuration global Global Configuration import org factories annotations Inject import org transaction tm Embedded Transaction Manager import org util logging Log import org util logging Log Factory transaction manager lookup class attempts locate Transaction Manager variety different classes locations tried servers ul li Boss li Run li Resin li Orion li li Weblogic li Websphere li Sun Glassfish ul transaction manager found returns link org transaction tm Embedded Transaction Manager author Markus Plesser since public class Generic Transaction Manager Lookup implements Transaction Manager Lookup private static final Log log Log Factory get Log Generic Transaction Manager Lookup class public static final Generic Transaction Manager Lookup new Generic Transaction Manager Lookup lookups performed private boolean lookup Done false available private boolean lookup Failed false Boss embedded jars found private boolean Boss false Transaction Manager found private Transaction Manager tm null locations Transaction Managers know private static String known Managers java jboss Transaction Manager Boss java Transaction Manager Boss Run java comp Transaction Manager Resin x java appserver Transaction Manager Sun Glassfish java pm Transaction Manager Borland Sun javax transaction Transaction Manager Web Logic java comp User Transaction Resin Orion osgi service javax transaction Transaction Manager Karaf Web Sphere Transaction Manager Factory private static final String com ibm ws Transaction Transaction Manager Factory Web Sphere Transaction Manager Factory private static final String com ibm ejs jts jta Transaction Manager Factory Web Sphere Transaction Manager Factory private static final String com ibm ejs jts jta private Global Configuration global Cfg Inject public void init Global Configuration global Cfg global Cfg global Cfg Get system wide used Transaction Manager return Transaction Manager Override public synchronized Transaction Manager get Transaction Manager lookup Done Lookups global Cfg class Loader tm null return tm lookup Failed Boss First try embedded Boss instance try Embedded Boss Boss fall back dummy use Dummy return tm private void use Dummy tm Embedded Transaction Manager get Instance log falling Back Embedded Tm private void try Embedded Boss try Boss Standalone Manager Lookup j Boss Standalone Manager Lookup new Boss Standalone Manager Lookup j Boss Standalone Manager Lookup init global Cfg tm j Boss Standalone Manager Lookup get Transaction Manager catch Exception e Boss true Try figure Transaction Manager use private void Lookups Class Loader cl lookup Failed return Initial Context ctx try ctx new Initial Context catch Naming Exception e log failed Create Initial Ctx e lookup Failed true return try probe jndi lookups first String known Manager known Managers Object jndi Object try log debugf Trying lookup Transaction Manager known Manager jndi Object ctx lookup known Manager catch Naming Exception e log debugf Failed perform lookup known Manager known Manager continue jndi Object instanceof Transaction Manager tm Transaction Manager jndi Object log debugf Found Transaction Manager known Manager return finally Util close ctx try find websphere lookups since came may deployed embedded alongside app needs looked Cache Class clazz try log debugf Trying Web Sphere clazz Util load Class Strict cl log debugf Found Web Sphere catch Class Found Exception ex try log debugf Trying Web Sphere clazz Util load Class Strict cl log debugf Found Web Sphere catch Class Found Exception ex try log debugf Trying Web Sphere clazz Util load Class Strict cl log debugf Found Web Sphere catch Class Found Exception ex log debug Could n find Web Sphere Transaction Manager factory class neither Web Sphere version lookup Failed true return try Class signature null Object args null Method method clazz get Method get Transaction Manager signature tm Transaction Manager method invoke null args catch Exception ex log unable Invoke Websphere Static Get Tm Method ex clazz get Name lookup Done true
package org commands read import static org commons util Util Str import java io Exception import java io Object Input import java io Object Output import org commands Visitor import org container entries Cache Entry import org context Invocation Context import org context impl Flag Bit Sets import org util logging Log import org util logging Log Factory Implements functionality defined link org Cache get Object link org Cache contains Key Object operations author Manik Surtani href mailto manik jboss org manik jboss org since public class Get Key Value Command extends Abstract Data Command public static final byte private static final Log log Log Factory get Log Get Key Value Command class private static final boolean trace log Trace Enabled public Get Key Value Command Object key long flags Bit Set super key flags Bit Set public Get Key Value Command Override public Object accept Visitor Invocation Context ctx Visitor visitor throws Throwable return visitor visit Get Key Value Command ctx Override public Load Type load Type return Load Type Override public Object perform Invocation Context ctx throws Throwable Cache Entry entry ctx lookup Entry key entry Removed trace log tracef Entry deleted type entry get Class get Simple Name return null return entry get Value Override public byte get Command Id return Override public void write Object Output output throws Exception output write Object key output write Long Flag Bit Sets copy Without Remotable Flags get Flags Bit Set Override public void read Object Input input throws Exception Class Found Exception key input read Object set Flags Bit Set input read Long public String String return new String Builder append Get Key Value Command key append Str key append flags append print Flags append String
package org security actions import java security Privileged Action Wrapper code Boolean get Boolean property Name author Dan Berindei since public class Get System Property Boolean Action implements Privileged Action Boolean private final String property Name public Get System Property Boolean Action String property Name property Name property Name Override public Boolean run return Boolean get Boolean property Name
package org configuration global import java util Map import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set import org commons configuration attributes Identity Attribute Copier import org security Audit Logger import org security Principal Role Mapper import org security Role import org security impl Null Audit Logger Global Authorization Configuration author Tristan Tarrant since public class Global Authorization Configuration static final Attribute Definition Boolean Attribute Definition builder enabled false immutable build static final Attribute Definition Audit Logger Attribute Definition builder audit Logger Audit Logger new Null Audit Logger copier Identity Attribute Copier immutable build static final Attribute Definition Principal Role Mapper Attribute Definition builder principal Role Mapper null Principal Role Mapper class immutable build static final Attribute Definition Map Attribute Definition builder roles null Map class build static final Attribute Set attribute Definition Set return new Attribute Set Global Authorization Configuration class private final Attribute Boolean enabled private final Attribute Audit Logger audit Logger private final Attribute Principal Role Mapper principal Role Mapper private final Attribute Map roles private final Attribute Set attributes public Global Authorization Configuration Attribute Set attributes attributes attributes check Protection enabled attributes attribute audit Logger attributes attribute principal Role Mapper attributes attribute roles attributes attribute public boolean enabled return enabled get public Audit Logger audit Logger return audit Logger get public Principal Role Mapper principal Role Mapper return principal Role Mapper get public Map String Role roles return roles get public Attribute Set attributes return attributes Override public String String return Global Authorization Configuration attributes attributes Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Global Authorization Configuration Global Authorization Configuration obj attributes null attributes null return false else attributes equals attributes return false return true
package org factories import java lang ref Weak Reference import java util Array List import java util Collection import java util Collections import java util Map import java util Set import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import java util concurrent Scheduled Executor Service import java util concurrent atomic Atomic Boolean import javax management Bean Server import javax management Bean Server Factory import org Version import org commands module Module Command Factory import org commands module Module Command Initializer import org commons Cache Exception import org commons util uberjar Manifest Uber Jar Duplicated Jars Warner import org commons util uberjar Uber Jar Duplicated Jars Warner import org configuration global Global Configuration import org configuration global Shutdown Hook Behavior import org factories annotations Survives Restarts import org factories components Component Metadata Repo import org factories scopes Scope import org factories scopes Scopes import org jmx Cache Manager Jmx Registration import org lifecycle Component Status import org lifecycle Module Lifecycle import org manager Embedded Cache Manager import org manager Embedded Cache Manager Startup Exception import org marshall core Encoder Registry import org notifications cachemanagerlistener Cache Manager Notifier import org notifications cachemanagerlistener Cache Manager Notifier Impl import org persistence factory Cache Store Factory Registry import org registry Internal Cache Registry import org registry impl Internal Cache Registry Impl import org remoting transport Transport import org stats Cluster Container Stats import org topology Cluster Topology Manager import org topology Local Topology Manager import org util Byte String import org util Module Properties import org util Time Service import org util logging Log import org util logging Log Factory import org util logging events Event Log Manager import org xsite Global Site Admin Operations import net jcip annotations Thread Safe global component registry shared components stored author Manik Surtani since Scope Scopes Survives Restarts Thread Safe public class Global Component Registry extends Abstract Component Registry private static final Log log Log Factory get Log Global Component Registry class private static final Atomic Boolean version Logged new Atomic Boolean false Hook shut cache exits private Thread shutdown Hook flag shutdown hook sets calling cache stop Allows stop identify called shutdown hook private boolean invoked Shutdown Hook private final Global Configuration global Configuration Tracking set created caches order make easy remove cache remote nodes private final Set String created Caches private final Module Properties module Properties new Module Properties private final Component Metadata Repo component Metadata Repo final Collection Module Lifecycle module Lifecycles final Concurrent Map Byte String Component Registry named Components new Concurrent Hash Map protected final Weak Reference Class Loader default Class Loader Creates instance component registry configuration passed automatically registered param configuration configuration created public Global Component Registry Global Configuration configuration Embedded Cache Manager cache Manager Set String created Caches Class Loader configured Class Loader configuration class Loader module Lifecycles Module Properties resolve Module Lifecycles configured Class Loader component Metadata Repo new Component Metadata Repo Load component metadata component Metadata Repo initialize Module Properties get Module Metadata Files configured Class Loader configured Class Loader default Class Loader new Weak Reference register Default Class Loader configured Class Loader try order important global Configuration configuration register Component Global Component Registry class register Component configuration Global Configuration class register Component cache Manager Embedded Cache Manager class register Component new Cache Manager Jmx Registration Cache Manager Jmx Registration class register Component new Cache Manager Notifier Impl Cache Manager Notifier class register Component new Internal Cache Registry Impl Internal Cache Registry class register Component new Cache Store Factory Registry Cache Store Factory Registry class register Component new Global Site Admin Operations Global Site Admin Operations class module Properties load Module Command Handlers configured Class Loader Map Byte Module Command Factory factories module Properties module Command Factories factories null factories Empty register Non Volatile Component factories Known Component Names else register Non Volatile Component Collections empty Map Known Component Names created Caches created Caches get Create Component Event Log Manager class necessary make sure transport started available components may need messy approach though proper fix get Create Component Transport class two necessary workaround get Create Component Local Topology Manager class get Create Component Cluster Topology Manager class get Create Component Cluster Container Stats class get Create Component Encoder Registry class get Create Component Scheduled Executor Service class Known Component Names catch Exception e throw new Cache Exception Unable construct Global Component Registry e Override protected Class Loader get Class Loader return default Class Loader get Override protected Log get Log return log Override public Component Metadata Repo get Component Metadata Repo return component Metadata Repo Override protected synchronized void remove Shutdown Hook called source shutdown hook de register shutdown hook invoked Shutdown Hook shutdown Hook null Runtime get Runtime remove Shutdown Hook shutdown Hook Override public Time Service get Time Service return get Create Component Time Service class Override protected synchronized void add Shutdown Hook Array List Bean Server al Bean Server Factory find Bean Server null Shutdown Hook Behavior shutdown Hook Behavior global Configuration shutdown hook Behavior boolean register Shutdown Hook shutdown Hook Behavior Shutdown Hook Behavior al Empty shutdown Hook Behavior Shutdown Hook Behavior register Shutdown Hook log tracef Registering shutdown hook Configured behavior shutdown Hook Behavior shutdown Hook new Thread try invoked Shutdown Hook true Global Component Registry stop finally invoked Shutdown Hook false Runtime get Runtime add Shutdown Hook shutdown Hook else log tracef registering shutdown hook Configured behavior shutdown Hook Behavior public final Component Registry get Named Component Registry String name need sync method named Components thread safe correctly published final return get Named Component Registry Byte String String name public final Component Registry get Named Component Registry Byte String name need sync method named Components thread safe correctly published final return named Components get name public synchronized final void register Named Component Registry Component Registry component Registry String name named Components put Byte String String name component Registry public synchronized final void unregister Named Component Registry String name named Components remove Byte String String name public synchronized final void rewire Named Registries Component Registry cr named Components values cr rewire public Map Byte Module Command Initializer get Module Command Initializers module Properties final n need synchronize method safe publishing return Collections unmodifiable Map module Properties module Command Initializers Override public void start try boolean need Notify synchronized nothing global components already running state start Allowed return need Notify state Component Status state Component Status need Notify Module Lifecycle l module Lifecycles log Trace Enabled log tracef Invoking cache Manager Starting l l cache Manager Starting global Configuration super start version Logged compare Set false true log version Version print Version super post Start need Notify state Component Status Module Lifecycle l module Lifecycles log Trace Enabled log tracef Invoking cache Manager Started l l cache Manager Started warn Uber Jar Duplicates catch Runtime Exception rte Embedded Cache Manager Startup Exception exception new Embedded Cache Manager Startup Exception rte state Component Status try super stop catch Exception e exception add Suppressed e throw exception private void warn Uber Jar Duplicates Uber Jar Duplicated Jars Warner scanner new Manifest Uber Jar Duplicated Jars Warner scanner Classpath Correct Async Accept Async Classpath Correct Classpath Correct log warn Uber Jar Duplicates Override public synchronized void stop boolean need Notify state Component Status state Component Status need Notify Module Lifecycle l module Lifecycles log Trace Enabled log tracef Invoking cache Manager Stopping l l cache Manager Stopping super stop state Component Status need Notify Module Lifecycle l module Lifecycles log Trace Enabled log tracef Invoking cache Manager Stopped l l cache Manager Stopped public void notify Cache Started String cache Name Component Registry cr get Named Component Registry cache Name Module Lifecycle l module Lifecycles log Trace Enabled log tracef Invoking cache Started l l cache Started cr cache Name public final Global Configuration get Global Configuration final need synchronise return global Configuration Removes cache given name returning true cache removed public synchronized boolean remove Cache String cache Name return created Caches remove cache Name public Module Properties get Module Properties return module Properties
package org configuration global import java lang ref Weak Reference import java util Collections import java util Hash Map import java util List import java util Map import java util Optional import org Version import org factories annotations Survives Restarts import org factories scopes Scope import org factories scopes Scopes p Configuration component exposes global configuration p author Manik Surtani author Vladimir Blagojevic author Mircea Markus jboss com author Galder Zamarre author Pete Muir author Pedro Ruivo since see href config html ce global Configuration reference Scope Scopes Survives Restarts public class Global Configuration Default replication version link org Version get Version Short public static final short Version get Version Short private final Global Jmx Statistics Configuration global Jmx Statistics private final Transport Configuration transport private final Global Security Configuration security private final Serialization Configuration serialization private final Shutdown Configuration shutdown private final Global State Configuration global State private final Map Class modules private final Site Configuration site private final Weak Reference Class Loader cl private final Thread Pool Configuration expiration Thread Pool private final Thread Pool Configuration listener Thread Pool private final Thread Pool Configuration replication Queue Thread Pool private final Thread Pool Configuration persistence Thread Pool private final Thread Pool Configuration state Transfer Thread Pool private final Thread Pool Configuration async Thread Pool private final Optional String default Cache Name Global Configuration Thread Pool Configuration expiration Thread Pool Thread Pool Configuration listener Thread Pool Thread Pool Configuration replication Queue Thread Pool Thread Pool Configuration persistence Thread Pool Thread Pool Configuration state Transfer Thread Pool Thread Pool Configuration async Thread Pool Global Jmx Statistics Configuration global Jmx Statistics Transport Configuration transport Global Security Configuration security Serialization Configuration serialization Shutdown Configuration shutdown Global State Configuration global State List modules Site Configuration site Optional String default Cache Name Class Loader cl expiration Thread Pool expiration Thread Pool listener Thread Pool listener Thread Pool replication Queue Thread Pool replication Queue Thread Pool persistence Thread Pool persistence Thread Pool state Transfer Thread Pool state Transfer Thread Pool async Thread Pool async Thread Pool global Jmx Statistics global Jmx Statistics transport transport security security serialization serialization shutdown shutdown global State global State Map Class Object module Map new Hash Map Object module modules module Map put module get Class module modules Collections unmodifiable Map module Map site site default Cache Name default Cache Name cl new Weak Reference cl deprecated method always returns null Look thread pool named link listener Thread Pool instead Deprecated public Executor Factory Configuration async Listener Executor return null deprecated method always returns null Look thread pool named link persistence Thread Pool instead Deprecated public Executor Factory Configuration persistence Executor return null deprecated method always returns null Look thread pool named link Transport Configuration transport Thread Pool instead Deprecated public Executor Factory Configuration async Transport Executor return null deprecated method always returns null Look thread pool named link Transport Configuration remote Command Thread Pool instead Deprecated public Executor Factory Configuration remote Commands Executor return null deprecated method always returns null Look thread pool named link expiration Thread Pool instead Deprecated public Scheduled Executor Factory Configuration eviction Scheduled Executor return null public Thread Pool Configuration expiration Thread Pool return expiration Thread Pool deprecated Use link expiration Thread Pool instead Deprecated public Thread Pool Configuration eviction Thread Pool return expiration Thread Pool public Thread Pool Configuration listener Thread Pool return listener Thread Pool deprecated Since longer used Deprecated public Thread Pool Configuration replication Queue Thread Pool return replication Queue Thread Pool public Thread Pool Configuration persistence Thread Pool return persistence Thread Pool public Thread Pool Configuration state Transfer Thread Pool return state Transfer Thread Pool public Thread Pool Configuration async Thread Pool return async Thread Pool public Global Jmx Statistics Configuration global Jmx Statistics return global Jmx Statistics public Transport Configuration transport return transport public Global Security Configuration security return security public Serialization Configuration serialization return serialization public Shutdown Configuration shutdown return shutdown public Global State Configuration global State return global State Suppress Warnings unchecked public module Class module Class return modules get module Class public Map Class modules return modules Get classloader use configuration public Class Loader class Loader return cl get public Site Configuration sites return site public Optional String default Cache Name return default Cache Name Override public String String return Global Configuration listener Thread Pool listener Thread Pool expiration Thread Pool expiration Thread Pool persistence Thread Pool persistence Thread Pool state Transfer Thread Pool state Transfer Thread Pool replication Queue Thread Pool replication Queue Thread Pool global Jmx Statistics global Jmx Statistics transport transport security security serialization serialization shutdown shutdown global State global State modules modules site site default Cache Name default Cache Name cl cl public boolean Clustered return transport transport null
package org configuration global import java lang ref Weak Reference import java lang reflect Constructor import java util Array List import java util Arrays import java util Linked List import java util List import java util Optional import org commons Cache Configuration Exception import org commons configuration Builder import org commons configuration Built import org commons util Util public class Global Configuration Builder implements Global Configuration Child Builder private Weak Reference Class Loader cl private final Transport Configuration Builder transport private final Global Jmx Statistics Configuration Builder global Jmx Statistics private final Serialization Configuration Builder serialization private final Global Security Configuration Builder security private final Thread Pool Configuration Builder expiration Thread Pool private final Thread Pool Configuration Builder listener Thread Pool private final Thread Pool Configuration Builder replication Queue Thread Pool private final Thread Pool Configuration Builder persistence Thread Pool private final Thread Pool Configuration Builder state Transfer Thread Pool private final Thread Pool Configuration Builder async Thread Pool private final Shutdown Configuration Builder shutdown private final Global State Configuration Builder global State private final List Builder modules new Array List private final Site Configuration Builder site private Optional String default Cache Name public Global Configuration Builder Gi contexts used Use core bundle default instead Class Loader default null Util Gi Context default Thread current Thread get Context Class Loader default null default Global Configuration Builder class get Class Loader cl new Weak Reference default transport new Transport Configuration Builder global Jmx Statistics new Global Jmx Statistics Configuration Builder serialization new Serialization Configuration Builder security new Global Security Configuration Builder shutdown new Shutdown Configuration Builder global State new Global State Configuration Builder site new Site Configuration Builder expiration Thread Pool new Thread Pool Configuration Builder listener Thread Pool new Thread Pool Configuration Builder replication Queue Thread Pool new Thread Pool Configuration Builder persistence Thread Pool new Thread Pool Configuration Builder state Transfer Thread Pool new Thread Pool Configuration Builder async Thread Pool new Thread Pool Configuration Builder default Cache Name Optional empty Helper method gets default constructed Global Configuration preconfigured use default clustering stack return new global configuration public Global Configuration Builder clustered Default transport default Transport clear Properties return Helper method gets default constructed Global Configuration preconfigured use mode return new global configuration public Global Configuration Builder non Clustered Default transport transport null clear Properties return protected Class Loader get Class Loader return cl get public Global Configuration Builder class Loader Class Loader cl cl new Weak Reference cl return Override public Transport Configuration Builder transport return transport Override public Global Jmx Statistics Configuration Builder global Jmx Statistics return global Jmx Statistics Override public Serialization Configuration Builder serialization return serialization Deprecated Override public Thread Pool Configuration Builder eviction Thread Pool return expiration Thread Pool Override public Thread Pool Configuration Builder expiration Thread Pool return expiration Thread Pool Override public Thread Pool Configuration Builder listener Thread Pool return listener Thread Pool Deprecated Override public Thread Pool Configuration Builder replication Queue Thread Pool return replication Queue Thread Pool Override public Thread Pool Configuration Builder persistence Thread Pool return persistence Thread Pool Override public Thread Pool Configuration Builder state Transfer Thread Pool return state Transfer Thread Pool Override public Thread Pool Configuration Builder async Thread Pool return async Thread Pool Override public Global Security Configuration Builder security return security Override public Shutdown Configuration Builder shutdown return shutdown Override public List Builder modules return modules public Global Configuration Builder clear Modules modules clear return Override public Site Configuration Builder site return site public extends Builder add Module Class klass try Constructor constructor klass get Declared Constructor Global Configuration Builder class builder constructor new Instance modules add builder return builder catch Exception e throw new Cache Configuration Exception Could instantiate module configuration builder klass get Name e Override public Global State Configuration Builder global State return global State Override public Global Configuration Builder default Cache Name String default Cache Name default Cache Name Optional default Cache Name return public Optional String default Cache Name return default Cache Name Suppress Warnings unchecked public void validate List Runtime Exception validation Exceptions new Array List Arrays List expiration Thread Pool listener Thread Pool replication Queue Thread Pool persistence Thread Pool state Transfer Thread Pool async Thread Pool global Jmx Statistics transport security serialization shutdown global State site c try c validate catch Runtime Exception e validation Exceptions add e modules c try c validate catch Runtime Exception e validation Exceptions add e Cache Configuration Exception Multiple Runtime Exceptions validation Exceptions Present e throw e Override public Global Configuration build validate List Object modules Config new Linked List Builder module modules modules Config add module create return new Global Configuration expiration Thread Pool create listener Thread Pool create replication Queue Thread Pool create persistence Thread Pool create state Transfer Thread Pool create async Thread Pool create global Jmx Statistics create transport create security create serialization create shutdown create global State create modules Config site create default Cache Name cl get public Global Configuration Builder read Global Configuration template cl new Weak Reference template class Loader default Cache Name template default Cache Name Object c template modules values Built built c get Class get Annotation Built class Builder Object builder add Module built value builder read c expiration Thread Pool read template expiration Thread Pool listener Thread Pool read template listener Thread Pool replication Queue Thread Pool read template replication Queue Thread Pool persistence Thread Pool read template persistence Thread Pool state Transfer Thread Pool read template state Transfer Thread Pool async Thread Pool read template async Thread Pool global Jmx Statistics read template global Jmx Statistics security read template security serialization read template serialization shutdown read template shutdown global State read template global State transport read template transport site read template sites return public static Global Configuration Builder default Clustered Builder Global Configuration Builder builder new Global Configuration Builder builder transport default Transport return builder Override public String String return Global Configuration Builder expiration Thread Pool expiration Thread Pool listener Executor Thread Pool listener Thread Pool cl cl transport transport global Jmx Statistics global Jmx Statistics serialization serialization replication Queue Thread Pool replication Queue Thread Pool persistence Thread Pool persistence Thread Pool state Transfer Thread Pool state Transfer Thread Pool async Thread Pool async Thread Pool security security shutdown shutdown global State global State site site Override public boolean equals Object return true null get Class get Class return false Global Configuration Builder Global Configuration Builder expiration Thread Pool equals expiration Thread Pool return false listener Thread Pool equals listener Thread Pool return false replication Queue Thread Pool equals replication Queue Thread Pool return false persistence Thread Pool equals persistence Thread Pool return false state Transfer Thread Pool equals state Transfer Thread Pool return false async Thread Pool equals async Thread Pool return false cl null cl equals cl cl null return false global Jmx Statistics equals global Jmx Statistics return false serialization equals serialization return false shutdown equals shutdown return false site equals site return false security equals security return false global State equals global State return false default Cache Name equals default Cache Name return false return transport equals transport Override public int hash Code int result cl null cl hash Code result result transport hash Code result result global Jmx Statistics hash Code result result serialization hash Code result result expiration Thread Pool hash Code result result listener Thread Pool hash Code result result replication Queue Thread Pool hash Code result result persistence Thread Pool hash Code result result state Transfer Thread Pool hash Code result result async Thread Pool hash Code result result shutdown hash Code result result site hash Code result result security hash Code result result global State hash Code result result modules hash Code result result default Cache Name hash Code return result
package org marshall core import java io Exception import java io Input Stream import java io Object Input import java io Object Output import java io Output Stream import java io Serializable import java lang reflect Array import java util function Bi Consumer import org commands Remote Commands Factory import org commons Cache Exception import org commons io Byte Buffer import org commons io Exposed Byte Array Output Stream import org commons marshall Advanced Externalizer import org commons marshall Buffer Size Predictor import org commons marshall Externalizer import org commons marshall Marshallable Type Hints import org commons marshall Marshaller import org commons marshall Serializable Exception import org commons marshall Serialize Function import org commons marshall Serialize import org commons marshall Streaming Marshaller import org configuration global Global Configuration import org factories Global Component Registry import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org factories scopes Scope import org factories scopes Scopes import org marshall core Class Externalizer Map Id Externalizer Map import org util logging Log import org util logging Log Factory globally scoped marshaller needed transport layer unmarshall requests even known cache marshaller job author Galder Zamarre since Scope Scopes public class Global Marshaller implements Streaming Marshaller private static final Log log Log Factory get Log Global Marshaller class private static final boolean trace log Trace Enabled static final int static final int x static final int x static final int x static final int x static final int x static final int x array encoded follows flags component type component type info array length element type element type info array elements ssncieee depends type bytes eee depends type Flags ss link link link link n link link c link eee link link link link Element type present link set case array elements wo n preceded instance type identifier common elements Multidimensional arrays supported static final int x static final int x Type last bits static final int x Array size first bits static final int x elements type static final int x Component type matches instance type static final int x elements array null static final int x Length array static final int x static final int x static final int x static final int x private final Marshallable Type Hints marshallable Type Hints new Marshallable Type Hints private Global Component Registry gcr private Remote Commands Factory cmd Factory private Class Externalizer Map internal Exts private Id Externalizer Map reverse Internal Exts private Class Externalizer Map external Exts private Id Externalizer Map reverse External Exts private Class Identifiers class Identifiers private Marshaller external public Global Marshaller public Global Marshaller Marshaller external external external Inject public void inject Global Component Registry gcr Remote Commands Factory cmd Factory gcr gcr cmd Factory cmd Factory Override Start priority start externalizer table transport public void start internal Exts Internal Externalizers load gcr cmd Factory reverse Internal Exts internal Exts reverse Map Ids trace log tracef Internal class externalizer ids internal Exts log tracef Internal reverse externalizers reverse Internal Exts external Exts External Externalizers load gcr get Global Configuration reverse External Exts external Exts reverse Map trace log tracef External class externalizer ids external Exts log tracef External reverse externalizers reverse External Exts external null external start Default External Marshaller gcr get Global Configuration class Identifiers Class Identifiers load gcr get Global Configuration public Marshaller start Default External Marshaller Global Configuration global Cfg Streaming Marshaller marshaller new External Boss Marshaller global Cfg marshaller start return marshaller Override Stop priority Stop transport avoid send receive marshaller ready public void stop internal Exts clear reverse Internal Exts clear external Exts clear reverse External Exts clear class Identifiers null stop Default External Marshaller public void stop Default External Marshaller external instanceof Streaming Marshaller Streaming Marshaller external stop Override public byte object Byte Buffer Object obj throws Exception Interrupted Exception try Bytes Object Output write Object Output obj return Bytes trim unused bytes catch java io Serializable Exception nse log Debug Enabled log debug Object serializable nse throw new Serializable Exception nse get Message nse get Cause private Bytes Object Output write Object Output Object obj throws Exception Buffer Size Predictor size Predictor marshallable Type Hints get Buffer Size Predictor obj Bytes Object Output write Object Output obj size Predictor next Size obj size Predictor record Size pos return private Bytes Object Output write Object Output Object obj int estimated Size throws Exception Bytes Object Output new Bytes Object Output estimated Size write Nullable Object obj return Override public Object object Byte Buffer byte buf throws Exception Class Found Exception Bytes Object Input Bytes Object Input buf return object Object Input private Object object Object Input Bytes Object Input throws Exception Class Found Exception return read Nullable Object Override public Object Output start Object Output Output Stream os boolean Reentrant int estimated Size throws Exception Bytes Object Output new Bytes Object Output estimated Size return new Stream Bytes Object Output os Override public void object Object Stream Object obj Object Output throws Exception write Object obj Override public void finish Object Output Object Output oo try oo flush catch Exception e ignored Override public Object object Byte Buffer byte bytes int offset int len throws Exception Class Found Exception Ignore length since boundary checks useful unmarshalling code knows expect specifically g reading byte subset within always appended length Bytes Object Input Bytes Object Input bytes offset return object Object Input Override public Object object Input Stream Input Stream throws Exception Class Found Exception limited use case e g reading Result Set Input Stream copying stream byte problematic far though really ideal int len available Exposed Byte Array Output Stream bytes byte buf len bytes new Exposed Byte Array Output Stream len buf new byte Math min len else input stream providers implement available bytes new Exposed Byte Array Output Stream buf new byte int bytes Read bytes Read read buf buf length bytes write buf bytes Read return object Byte Buffer bytes get Raw Buffer bytes size Override public boolean Marshallable Object throws Exception Class clazz get Class boolean contains Marshallable marshallable Type Hints Known Marshallable clazz contains Marshallable boolean marshallable marshallable Type Hints Marshallable clazz trace log tracef Marshallable type known marshallable b clazz get Name marshallable return marshallable else Marshallable Candidate boolean Marshallable true try object Buffer catch Exception e Marshallable false throw e finally marshallable Type Hints mark Marshallable clazz Marshallable return Marshallable return false private boolean Marshallable Candidate Object return instanceof Serializable internal Exts get get Class null external Exts get get Class null get Class get Annotation Serialize class null External Marshallable private boolean External Marshallable Object try return external Marshallable catch Exception e throw new Serializable Exception Object type get Class expected marshallable e Override public Buffer Size Predictor get Buffer Size Predictor Object return marshallable Type Hints get Buffer Size Predictor get Class Override public Byte Buffer object Buffer Object throws Exception Interrupted Exception try Bytes Object Output write Object Output return Byte Buffer catch java io Serializable Exception nse log Debug Enabled log debug Object serializable nse throw new Serializable Exception nse get Message nse get Cause Override public byte object Byte Buffer Object obj int estimated Size throws Exception Interrupted Exception try Bytes Object Output write Object Output obj estimated Size return Bytes catch java io Serializable Exception nse log Debug Enabled log debug Object serializable nse throw new Serializable Exception nse get Message nse get Cause Override public Object Input start Object Input Input Stream boolean Reentrant throw new Unsupported Operation Exception longer use Override public void finish Object Input Object Input oi throw new Unsupported Operation Exception longer use Override public Object object Object Stream Object Input throw new Unsupported Operation Exception longer use public Externalizer find Externalizer Object obj Class clazz obj get Class Externalizer ext internal Exts get clazz ext null ext external Exts get clazz ext null ext find Annotated Externalizer clazz return ext void write Nullable Object Object obj Bytes Object Output throws Exception obj null write Byte else write Non Nullable Object obj Object read Nullable Object Bytes Object Input throws Exception Class Found Exception int type read Unsigned Byte return type null read Non Nullable Object type Bi Consumer Object Output Object find Writer Object obj Class clazz obj get Class Advanced Externalizer internal Ext internal Exts get clazz internal Ext null return object write Internal Clean object internal Ext Advanced Externalizer external Ext external Exts get clazz external Ext null return object write External Clean object external Ext return null Advanced Externalizer find Externalizer Object Input throws Exception int type read Unsigned Byte switch type case return reverse Internal Exts get read Unsigned Byte case return reverse External Exts get read Int default return null private void write Non Nullable Object Object obj Bytes Object Output throws Exception Class clazz obj get Class int id Primitives get clazz id write Primitive obj id else clazz Array write Array clazz obj else Advanced Externalizer ext internal Exts get clazz ext null write Internal obj ext else ext external Exts get clazz ext null write External obj ext else Externalizer annot Ext find Annotated Externalizer clazz annot Ext null write Annotated obj annot Ext else write Unknown obj private void write Array Class clazz Object array Bytes Object Output throws Exception write Byte Class component Type clazz get Component Type int length Array get Length array boolean single Type true Class element Type null int flags length flags else length Primitives flags else length Primitives flags else flags Object first Element Array get array first Element null element Type first Element get Class int length Object element Array get array element null element Type null single Type false break else element get Class element Type single Type false break boolean component Type Match false single Type flags element Type null flags else element Type component Type flags component Type Match true Advanced Externalizer ext ext internal Exts get component Type null write Flags Externalizer component Type component Type Match ext flags else ext external Exts get component Type null write Flags Externalizer component Type component Type Match ext flags else use annotated externalizer specify component type clear component type match flag use class identifier full name Theoretically could write annotated externalizer component type saving one byte worth complexity component Type Match false flags int class Id class Id class Identifiers get Id component Type write Byte flags class Id Class Ids write Byte class Id else write Byte Class Ids write Int class Id else write Byte flags write Object component Type length else length Primitives write Byte length Primitives else length Primitives write Short length Primitives else write Int length single Type Externalizer element Ext int primitive Id element Type null return else component Type Match Note ext null element Ext ext else element Ext internal Exts get element Type null write Byte write Byte Advanced Externalizer element Ext get Id else element Ext external Exts get element Type null write Byte write Int Advanced Externalizer element Ext get Id else element Ext find Annotated Externalizer element Type null could try externalizer class registered Class Identifier likely user registered could rather explicitly register Advanced Externalizer instead write Byte write Object element Ext get Class else primitive Id Primitives get element Type write Byte write Byte primitive Id int length Object element Array get array assert element null Primitives write Raw Primitive element primitive Id finished return else write Byte write element type element Ext null int length Object element Array get array assert element null element Ext write Object element else component type matches type externalizer int length Object element Array get array assert element null write Raw Unknown element else int length Object element Array get array write Nullable Object element private void write Flags Externalizer Bytes Object Output Class component Type boolean component Type Match Advanced Externalizer ext int flags int externalizer Type throws Exception class identified externalizer component type match write externalizer anyway otherwise would write element type later class uniquely identified externalizer try class identifiers boolean Single Class ext get Type Classes size int class Id component Type Match Single Class write Byte flags externalizer Type switch externalizer Type case write Byte ext get Id break case write Int ext get Id break default throw new Illegal State Exception Single Class class Id class Identifiers get Id component Type else class Id class Identifiers get Id component Type write Byte flags else write Byte flags Single Class class Id write Object component Type else class Id Class Ids write Byte class Id else write Byte Class Ids write Int class Id private void write Unknown Object obj Bytes Object Output throws Exception assert Externally Marshallable Allowed obj Check support obj get Class write Byte write Raw Unknown obj private void write Raw Unknown Object obj Bytes Object Output throws Exception external instanceof Streaming Marshaller Streaming Marshaller external object Object Stream obj else try byte bytes external object Byte Buffer obj write Int bytes length write bytes catch Interrupted Exception e Thread current Thread interrupt private void write Annotated Object obj Bytes Object Output Externalizer ext throws Exception write Byte write Object ext get Class ext write Object obj private void write Internal Object obj Advanced Externalizer ext Object Output throws Exception write Byte write Byte ext get Id ext write Object obj private void write Internal Clean Object obj Advanced Externalizer ext Object Output try write Internal obj ext catch Exception e throw new Cache Exception e private void write External Object obj Advanced Externalizer ext Object Output throws Exception write Byte write Int ext get Id ext write Object obj private void write External Clean Object obj Advanced Externalizer ext Object Output try write External obj ext catch Exception e throw new Cache Exception e private void write Primitive Object obj Bytes Object Output int id throws Exception write Byte Primitives write Primitive obj id private Externalizer find Annotated Externalizer Class clazz try Serialize serial Ann clazz get Annotation Serialize class serial Ann null return Externalizer serial Ann value new Instance else Serialize Function func Serial Ann clazz get Annotation Serialize Function class func Serial Ann null return Externalizer func Serial Ann value new Instance return null catch Exception e throw new Illegal Argument Exception String format instantiate externalizer clazz e private Object read Non Nullable Object int type Bytes Object Input throws Exception Class Found Exception switch type case return Primitives read Primitive case return read Externalizer read Unsigned Byte reverse Internal Exts case return read Externalizer read Int reverse External Exts case return read Annotated case return read Unknown case return read Array default throw new Exception Unknown type type private Object read Externalizer int id Id Externalizer Map reverse Map Bytes Object Input throws Exception Class Found Exception Advanced Externalizer ext reverse Map get id return ext read Object private Object read Annotated Bytes Object Input throws Exception Class Found Exception Class extends Externalizer clazz Class extends Externalizer read Object try Externalizer ext clazz new Instance return ext read Object catch Exception e throw new Cache Exception Error instantiating class clazz e private Object read Array Bytes Object Input throws Exception Class Found Exception int flags read Byte int type flags Advanced Externalizer component Ext null Class ext Clazz null Class component Type switch type case case case throw new Exception Unexpected component type type case component Ext reverse Internal Exts get read Byte component Type get Read Class component Ext break case component Ext reverse External Exts get read Int component Type get Read Class component Ext break case ext Clazz Class read Object intentional break case component Type Class read Object break case int class Id read Byte class Id Class Ids component Type class Identifiers get Class class Id else component Type class Identifiers get Class read Int break default throw new Exception Unknown component type type int length int masked Size flags switch masked Size case length break case length read Unsigned Byte Primitives break case length read Unsigned Short Primitives break case length read Int break default throw new Exception Unknown array size masked Size Object array Array new Instance component Type length flags return array boolean single Type flags boolean component Type Match flags component type match set must single type assert component Type Match single Type true single Type Externalizer ext component Type Match ext get Externalizer type component Ext ext Clazz else type read Byte ext read Externalizer type ext null int length Array set array ext read Object else switch type case int length Array set array read Unknown return array case int primitive Id read Byte int length Array set array Primitives read Raw Primitive primitive Id return array default throw new Illegal State Exception else int length Array set array read Nullable Object return array private Externalizer get Externalizer int type Advanced Externalizer component Ext Class ext Clazz throws Exception switch type case case return component Ext case try return Externalizer ext Clazz new Instance catch Exception e throw new Cache Exception Error instantiating class ext Clazz e case return null default throw new Exception Unexpected component type type private Externalizer read Externalizer Bytes Object Input int type throws Class Found Exception Exception Class ext Clazz switch type case return reverse Internal Exts get read Byte case return reverse External Exts get read Int case ext Clazz Class read Object try return Externalizer ext Clazz new Instance catch Exception e throw new Cache Exception Error instantiating class ext Clazz e case case return null default throw new Exception Unexpected component type type private Class get Read Class Bytes Object Input Advanced Externalizer component Ext throws Class Found Exception Exception component Ext get Type Classes size return component Ext get Type Classes iterator next else return Class read Object private Object read Unknown Bytes Object Input throws Exception Class Found Exception external instanceof Streaming Marshaller try return Streaming Marshaller external object Object Stream catch Interrupted Exception e Thread current Thread interrupt return null else int length read Int byte bytes new byte length read Fully bytes return external object Byte Buffer bytes
package org transaction xa import java io Exception import java io Object Input import java io Object Output import java util Objects import java util Set import java util concurrent atomic Atomic Long import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids import org remoting transport Address Uniquely identifies transaction spans Ms cluster used replicating modifications transaction messages unique identifier associate changes br Global Transaction instantiated thorough link Transaction Factory class type depends runtime configuration author href mailto bela jboss org Bela Ban Apr author href mailto manik jboss org Manik Surtani manik jboss org author Mircea Markus jboss com since public class Global Transaction implements Cloneable private static final Atomic Long sid new Atomic Long protected long id protected Address addr null private int hash code worst case hash Code returns increases safe private boolean remote false empty ctor used externalization protected Global Transaction protected Global Transaction Address addr boolean remote id sid increment Get addr addr remote remote public Address get Address return addr public long get Id return id public boolean Remote return remote public void set Remote boolean remote remote remote Override public int hash Code hash code hash code addr null addr hash Code int id return hash code Override public boolean equals Object return true instanceof Global Transaction return false Global Transaction Gtx Global Transaction boolean aeq addr null Gtx addr null addr equals Gtx addr return aeq id Gtx id Override public String String return Global Tx Objects String addr local id Returns simplified representation transaction public final String global Id return get Address get Id public void set Id long id id id public void set Address Address address addr address Override public Object clone try return super clone catch Clone Supported Exception e throw new Illegal State Exception Impossible protected abstract static class Abstract Global Tx Externalizer extends Global Transaction extends Abstract Externalizer Override public void write Object Object Output output gtx throws Exception output write Long gtx id output write Object gtx addr Factory method Global Transactions return newly constructed instance Global Transaction one subclasses protected abstract create Global Transaction Override public read Object Object Input input throws Exception Class Found Exception gtx create Global Transaction gtx id input read Long gtx addr Address input read Object return gtx public static class Externalizer extends Abstract Global Tx Externalizer Global Transaction Override Suppress Warnings unchecked public Set Class extends Global Transaction get Type Classes return Util Class extends Global Transaction Set Global Transaction class Override public Integer get Id return Ids Override protected Global Transaction create Global Transaction return Transaction Factory Tx Factory Enum new Global Transaction
package org interceptors impl import java util List import java util Map import java util concurrent Concurrent Linked Queue import org commands remote Get Keys Group Command import org configuration cache Configuration import org container Internal Entry Factory import org container entries Cache Entry import org container entries Entry import org context Invocation Context import org distribution Distribution Manager import org distribution group impl Group Filter import org distribution group impl Group Manager import org factories annotations Inject import org interceptors Async Interceptor import org notifications Listener import org notifications cachelistener Cache Notifier import org notifications cachelistener annotation Cache Entry Activated import org notifications cachelistener event Cache Entry Activated Event interceptor keeps track keys added removed processing link Get Keys Group Command author Pedro Ruivo since public class Grouping Interceptor extends Async Interceptor private Cache Notifier cache Notifier private Group Manager group Manager private Internal Entry Factory factory private boolean Passivation Enabled private Distribution Manager distribution Manager Inject public void inject Dependencies Cache Notifier cache Notifier Group Manager group Manager Internal Entry Factory factory Configuration configuration Distribution Manager distribution Manager cache Notifier cache Notifier group Manager group Manager factory factory Passivation Enabled configuration persistence passivation distribution Manager distribution Manager Override public Object visit Get Keys Group Command Invocation Context ctx Get Keys Group Command command throws Throwable final Object group Name command get Group Name need contact primary owner backup owner command set Group Owner distribution Manager null distribution Manager get Cache Topology Write Owner group Name command Group Owner Passivation Enabled return invoke Next Finally ctx command r Ctx r Command rv rv instanceof List noinspection unchecked filter List Cache Entry rv Key Listener listener new Key Listener group Name group Manager factory try make snapshot recent possible picking modification fly cache Notifier add Listener listener return invoke Next Finally ctx command r Ctx r Command rv cache Notifier remove Listener listener rv instanceof List noinspection unchecked List rv add listener activated Keys noinspection unchecked filter List Cache Entry rv else rv instanceof Map Cache Entry entry listener activated Keys noinspection unchecked Map rv put entry get Key entry get Value private void filter List Cache Entry list int list size Cache Entry entry list get entry instanceof Entry list set factory create entry Listener public static class Key Listener private final Concurrent Linked Queue Cache Entry activated Keys private final Group Filter Object filter private final Internal Entry Factory factory public Key Listener Object group Name Group Manager group Manager Internal Entry Factory factory factory factory filter new Group Filter group Name group Manager activated Keys new Concurrent Linked Queue Cache Entry Activated public void handle Remove Cache Entry Activated Event event final Object key event get Key filter accept key activated Keys add factory create key event get Value event get Metadata
package org distribution group impl import org distribution ch Key Partitioner Key partitioner uses link org distribution group Group annotations map grouped keys segment author Dan Berindei since public class Grouping Partitioner implements Key Partitioner private final Key Partitioner partitioner private final Group Manager group Manager public Grouping Partitioner Key Partitioner partitioner Group Manager group Manager partitioner partitioner group Manager group Manager Override public int get Segment Object key Object group Key group Manager get Group key return partitioner get Segment group Key null group Key key public Key Partitioner unwrap return partitioner
package org distribution group impl import org configuration cache Groups Configuration import org factories Abstract Named Cache Component Factory import org factories Auto Instantiable Factory import org factories annotations Default Factory import org factories scopes Scope import org factories scopes Scopes Scope Scopes Default Factory classes Group Manager class public class Group Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override public construct Class component Type Groups Configuration groups Configuration configuration clustering hash groups groups Configuration enabled return null return component Type cast new Group Manager Impl groups Configuration groupers
package org distribution group impl import static org commons util Reflection Util invoke Accessibly import java lang reflect Method import java security Access Controller import java security Privileged Action import java util Collection import java util Collections import java util List import java util concurrent Concurrent Map import org commons util Collection Factory import org commons util Reflection Util import org commons util Util import org distribution Distribution Manager import org distribution group Group import org distribution group Grouper import org factories annotations Inject import org remoting transport Address public class Group Manager Impl implements Group Manager private interface Group Metadata Group Metadata instance null Object get Group Object instance private static class Group Metadata Impl implements Group Metadata private final Method method Group Metadata Impl Method method method get Parameter Types length throw new Illegal Argument Exception Util format String Group method must zero arguments method method method Override public Object get Group Object instance Object object System get Security Manager null return invoke Accessibly instance method Util else return Access Controller Privileged Privileged Action Object invoke Accessibly instance method Util private static Group Metadata create Group Metadata Class clazz Collection Method possible Methods System get Security Manager null possible Methods Reflection Util get Methods clazz Group class else possible Methods Access Controller Privileged Privileged Action List Method Reflection Util get Methods clazz Group class possible Methods Empty return Group Metadata else possible Methods size return new Group Metadata Impl possible Methods iterator next else throw new Illegal State Exception Util format String define one Group method class hierarchy rooted clazz get Name private final Concurrent Map Class Group Metadata group Metadata Cache private final List Grouper groupers private Distribution Manager distribution Manager public Group Manager Impl List Grouper groupers group Metadata Cache Collection Factory make Concurrent Map groupers null groupers groupers else groupers Collections empty List Inject public void inject Dependencies Distribution Manager distribution Manager distribution Manager distribution Manager Override public Object get Group Object key Group Metadata metadata get Metadata key metadata null return apply Groupers metadata get Group key key else return apply Groupers null key Override public boolean Owner Object group return distribution Manager get Cache Topology Write Owner group Override public Address get Primary Owner Object group return distribution Manager get Cache Topology get Distribution group primary Override public boolean Primary Owner Object group return distribution Manager get Cache Topology get Distribution group Primary private Object apply Groupers Object group Object key Grouper grouper groupers grouper get Key Type Assignable key get Class group Grouper Object grouper compute Group key group return group private Group Metadata get Metadata final Object key final Class key Class key get Class Group Metadata group Metadata group Metadata Cache get key Class group Metadata null ideal possible group metadata redundantly calculated several times however profiling showed using Map Class Future cache approach significantly slower long run group Metadata create Group Metadata key Class Group Metadata previous group Metadata Cache put Absent key Class group Metadata previous null case another thread added metadata already discard created reuse existing return previous return group Metadata
package org configuration cache import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set import org commons configuration attributes Identity Attribute Copier import org commons configuration attributes Simple Instance Attribute Copier import org commons hash Hash import org commons hash Murmur Hash import org distribution ch Consistent Hash import org distribution ch Consistent Hash Factory import org distribution ch Key Partitioner import org distribution ch impl Hash Function Partitioner Allows fine tuning rehashing characteristics Must used distributed cache mode author pmuir public class Hash Configuration public static final Attribute Definition Consistent Hash Factory Attribute Definition builder consistent Hash Factory null Consistent Hash Factory class immutable build public static final Attribute Definition Hash Attribute Definition builder hash Hash Murmur Hash get Instance copier Identity Attribute Copier immutable build public static final Attribute Definition Integer Attribute Definition builder num Owners xml Name owners immutable build assigns owners randomly Sync Consistent Hash Factory n work well low number segments Default Consistent Hash Factory segments ok nodes public static final Attribute Definition Integer Attribute Definition builder num Segments xml Name segments immutable build public static final Attribute Definition Float Attribute Definition builder capacity Factor f immutable xml Name capacity build public static final Attribute Definition Key Partitioner Attribute Definition builder key Partitioner new Hash Function Partitioner Key Partitioner class copier Simple Instance Attribute Copier immutable build static Attribute Set attribute Definition Set return new Attribute Set Hash Configuration class private final Attribute Consistent Hash Factory consistent Hash Factory private final Attribute Hash hash private final Attribute Integer num Owners private final Attribute Integer num Segments private final Attribute Float capacity Factor private final Attribute Key Partitioner key Partitioner private final Groups Configuration groups Configuration private final State Transfer Configuration state Transfer Configuration private final Attribute Set attributes Hash Configuration Attribute Set attributes Groups Configuration groups Configuration State Transfer Configuration state Transfer Configuration attributes attributes check Protection groups Configuration groups Configuration state Transfer Configuration state Transfer Configuration consistent Hash Factory attributes attribute hash attributes attribute num Owners attributes attribute num Segments attributes attribute capacity Factor attributes attribute key Partitioner attributes attribute deprecated Since replaced link consistent Hash Factory Deprecated public Consistent Hash consistent Hash return null consistent hash factory use public Consistent Hash Factory consistent Hash Factory return consistent Hash Factory get hash function use Used bit spreader general hash code generator Typically one many default link org distribution ch Consistent Hash implementations shipped deprecated Since use link key Partitioner instead Deprecated public Hash hash return hash get Number cluster wide replicas cache entry public int num Owners return num Owners get Controls total number hash space segments per cluster p hash space segment granularity key distribution cluster node primary one full segments fraction segment larger code num Segments values mean even distribution keys nodes p hand memory bandwidth usage new consistent hash grows linearly code num Segments recommend keeping code num Segments cluster Size public int num Segments return num Segments get false rebalancing rehashing take place new node joins cluster node leaves deprecated Use link org configuration cache State Transfer Configuration fetch Memory State instead Deprecated public boolean rehash Enabled return state Transfer Configuration fetch Memory State Rehashing timeout deprecated Use link org configuration cache State Transfer Configuration timeout instead Deprecated public long rehash Rpc Timeout return state Transfer Configuration timeout deprecated Use link org configuration cache State Transfer Configuration timeout instead Deprecated public long rehash Wait return state Transfer Configuration timeout Controls proportion entries reside local node compared nodes cluster suggestion guarantee node capacity factor code twice many entries node capacity factor code public float capacity Factor return capacity Factor get public Key Partitioner key Partitioner return key Partitioner get Configuration various grouper definitions See user guide information public Groups Configuration groups return groups Configuration public Attribute Set attributes return attributes Override public String String return Hash Configuration attributes attributes Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Hash Configuration Hash Configuration obj attributes null attributes null return false else attributes equals attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result
package org configuration cache import static org configuration cache Hash Configuration import static org configuration cache Hash Configuration import static org configuration cache Hash Configuration import static org configuration cache Hash Configuration import static org configuration cache Hash Configuration import static org configuration cache Hash Configuration import org commons configuration Builder import org commons configuration attributes Attribute Set import org commons hash Hash import org configuration global Global Configuration import org distribution ch Consistent Hash import org distribution ch Consistent Hash Factory import org distribution ch Key Partitioner import org util logging Log import org util logging Log Factory Allows fine tuning rehashing characteristics Must used distributed cache mode author pmuir public class Hash Configuration Builder extends Abstract Clustering Configuration Child Builder implements Builder Hash Configuration private static final Log log Log Factory get Log Hash Configuration Builder class private final Attribute Set attributes private final Groups Configuration Builder groups Configuration Builder Hash Configuration Builder Clustering Configuration Builder builder super builder attributes Hash Configuration attribute Definition Set groups Configuration Builder new Groups Configuration Builder builder deprecated Since replaced link consistent Hash Factory Consistent Hash Factory Deprecated public Hash Configuration Builder consistent Hash Consistent Hash consistent Hash log consistent Hash Deprecated return consistent hash factory use public Hash Configuration Builder consistent Hash Factory Consistent Hash Factory extends Consistent Hash consistent Hash Factory attributes attribute set consistent Hash Factory return Number cluster wide replicas cache entry public Hash Configuration Builder num Owners int num Owners num Owners throw new Illegal Argument Exception num Owners less attributes attribute set num Owners return boolean Num Owners Set return attributes attribute Modified int num Owners return attributes attribute get deprecated longer used since replaced link num Segments int works like code num Virtual Nodes value entire cluster Deprecated public Hash Configuration Builder num Virtual Nodes int num Virtual Nodes log hash Num Virtual Nodes Deprecated return Controls total number hash space segments per cluster p hash space segment granularity key distribution cluster node primary one full segments fraction segment larger code num Segments values mean even distribution keys nodes p hand memory bandwidth usage new consistent hash grows linearly code num Segments recommend keeping code num Segments cluster Size param num Segments number hash space segments Must strictly positive public Hash Configuration Builder num Segments int num Segments num Segments throw new Illegal Argument Exception num Segments less attributes attribute set num Segments return Enable rebalancing rehashing take place new node joins cluster node leaves deprecated Use link State Transfer Configuration Builder fetch Memory State boolean instead Deprecated public Hash Configuration Builder rehash Enabled state Transfer fetch Memory State true return Enable rebalancing rehashing take place new node joins cluster node leaves deprecated Use link State Transfer Configuration Builder fetch Memory State boolean instead Deprecated public Hash Configuration Builder rehash Enabled boolean enabled state Transfer fetch Memory State enabled return Disable rebalancing rehashing would taken place new node joins cluster node leaves deprecated Use link State Transfer Configuration Builder fetch Memory State boolean instead Deprecated public Hash Configuration Builder rehash Disabled state Transfer fetch Memory State false return Rehashing timeout deprecated Use link State Transfer Configuration Builder timeout long instead Deprecated public Hash Configuration Builder rehash Rpc Timeout long rehash Rpc Timeout state Transfer timeout rehash Rpc Timeout return deprecated longer used Deprecated public Hash Configuration Builder rehash Wait long rehash Wait return hash function use Used bit spreader general hash code generator Typically used conjunction many default link org distribution ch Consistent Hash implementations shipped Currently use object instance instead instantiate new instance class Therefore expect state survive provide args constructor instance resolved deprecated Since use link key Partitioner Key Partitioner instead Deprecated public Hash Configuration Builder hash Hash hash attributes attribute set hash return Controls proportion entries reside local node compared nodes cluster suggestion guarantee node capacity factor code twice many entries node capacity factor code param capacity Factor capacity factor local node Must positive public Hash Configuration Builder capacity Factor float capacity Factor capacity Factor throw new Illegal Argument Exception capacity Factor must positive attributes attribute set capacity Factor return Key partitioner controlling mapping keys hash segments p default implementation code org distribution ch impl Hash Function Partitioner uses hash function configured via link hash Hash Future versions may ignore hash function since public Hash Configuration Builder key Partitioner Key Partitioner key Partitioner attributes attribute set key Partitioner return public Groups Configuration Builder groups return groups Configuration Builder Override public void validate groups Configuration Builder validate Override public void validate Global Configuration global Config groups Configuration Builder validate global Config Override public Hash Configuration create state Transfer create create duplicate State Transfer Configuration instance ok long none state Transfer settings modifiable runtime return new Hash Configuration attributes protect groups Configuration Builder create state Transfer create Override public Hash Configuration Builder read Hash Configuration template attributes read template attributes groups Configuration Builder read template groups return Override public String String return Hash Configuration Builder attributes attributes groups Configuration Builder groups Configuration Builder
package org distribution ch impl import java util Array List import java util List import java util Objects import org commons hash Hash import org commons util Util import org configuration cache Hash Configuration import org distribution ch Key Partitioner Key partitioner computes key segment based hash function author Dan Berindei since public class Hash Function Partitioner implements Key Partitioner private Hash hash Function private int num Segments private int segment Size Override public void init Hash Configuration configuration Objects require Non Null configuration init configuration hash configuration num Segments private void init Hash hash Function int num Segments Objects require Non Null hash Function num Segments throw new Illegal Argument Exception num Segments must strictly positive hash Function hash Function num Segments num Segments segment Size Util get Segment Size num Segments Override public int get Segment Object key result must always positive make sure dividend positive first return hash Function hash key Integer segment Size public Hash get Hash return hash Function public List Integer get Segment End Hashes List Integer hashes new Array List num Segments int num Segments hashes add num Segments segment Size return hashes Override public boolean equals Object return true null get Class get Class return false Hash Function Partitioner Hash Function Partitioner num Segments num Segments return false return Objects equals hash Function hash Function Override public int hash Code int result hash Function null hash Function hash Code result result num Segments return result Override public String String return Hash Function Partitioner hash Function hash Function ns num Segments
package org container entries import static org commons util Util Str import java io Exception import java io Object Input import java io Object Output import java util Set import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids import org metadata Embedded Metadata import org metadata Metadata cache entry immortal expire author Manik Surtani since public class Immortal Cache Entry extends Abstract Internal Cache Entry public Object value public Immortal Cache Entry Object key Object value super key value value Override public final boolean Expired long return false Override public final boolean Expired return false Override public final boolean Expire return false Override public final long get Created return Override public final long get Last Used return Override public final long get Lifespan return Override public final long get Max Idle return Override public final long get Expiry Time return Override public final void touch op Override public void touch long current Time Millis op Override public final void reincarnate op Override public void reincarnate long op Override public Internal Cache Value Internal Cache Value return new Immortal Cache Value value Override public Object get Value return value Override public Object set Value Object value return value value Override public Metadata get Metadata return new Embedded Metadata Builder build Override public void set Metadata Metadata metadata throw new Illegal State Exception Metadata set immortal entries need recreated via entry factory Override public Immortal Cache Entry clone return Immortal Cache Entry super clone public static class Externalizer extends Abstract Externalizer Immortal Cache Entry Override public void write Object Object Output output Immortal Cache Entry ice throws Exception output write Object ice key output write Object ice value Override public Immortal Cache Entry read Object Object Input input throws Exception Class Found Exception Object k input read Object Object v input read Object return new Immortal Cache Entry k v Override public Integer get Id return Ids Override public Set Class extends Immortal Cache Entry get Type Classes return Util Set Immortal Cache Entry class Override public String String return Immortal Cache Entry key Str key value Str value
package org container entries import java io Exception import java io Object Input import java io Object Output import java util Set import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids import org metadata Embedded Metadata import org metadata Metadata immortal cache value correspond link org container entries Immortal Cache Entry author Manik Surtani since public class Immortal Cache Value implements Internal Cache Value Cloneable public Object value public Immortal Cache Value Object value value value Override public Internal Cache Entry Internal Cache Entry Object key return new Immortal Cache Entry key value public final Object set Value Object value Object old value value value return old Override public Object get Value return value Override public boolean Expired long return false Override public boolean Expired return false Override public boolean Expire return false Override public long get Created return Override public long get Last Used return Override public long get Lifespan return Override public long get Max Idle return Override public long get Expiry Time return Override public Metadata get Metadata return new Embedded Metadata Builder lifespan get Lifespan max Idle get Max Idle build Override public boolean equals Object return true instanceof Immortal Cache Value return false Immortal Cache Value Immortal Cache Value value null value equals value value null return false return true Override public int hash Code return value null value hash Code Override public String String return get Class get Simple Name value value Override public Immortal Cache Value clone try return Immortal Cache Value super clone catch Clone Supported Exception e throw new Runtime Exception never happen e public static class Externalizer extends Abstract Externalizer Immortal Cache Value Override public void write Object Object Output output Immortal Cache Value icv throws Exception output write Object icv value Override public Immortal Cache Value read Object Object Input input throws Exception Class Found Exception Object v input read Object return new Immortal Cache Value v Override public Integer get Id return Ids Override public Set Class extends Immortal Cache Value get Type Classes return Util Class extends Immortal Cache Value Set Immortal Cache Value class
package org commons util import java io Exception import java io Input Stream import java io Object Input import java io Object Output import java io Reader import java io Serializable import java lang reflect Array import java util Array List import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Map Entry import java util Objects import java util Set import org commons marshall Abstract Externalizer import org commons marshall Ids import org commons marshall Marshall Util Factory generating immutable type wrappers author Jason Greene author Galder Zamarre author Tristan Tarrant since public class Immutables Whether collection type immutable param Collection Set List Map return true immutable false public static boolean Immutable Object return instanceof Immutable Converts Collection immutable List copying param source collection convert return copied converted immutable list public static List immutable List Convert Collection extends source return new Immutable List Copy source Creates immutable copy list param list list copy return immutable copy public static List immutable List Copy List list list null return null list Empty return Collections empty List list size return Collections singleton List list get return new Immutable List Copy list Creates immutable copy properties param properties Typed Properties copy return immutable copy public static Typed Properties immutable Typed Properties Typed Properties properties properties null return null return new Immutable Typed Properties properties Wraps array immutable list copying involved param param array array wrap return list containing array public static List immutable List Wrap array return new Immutable List Copy array Creates new immutable list containing union combined entries lists param list contains first elements new list param list contains successor elements new list return new immutable merged copy list list public static List immutable List Merge List extends list List extends list return new Immutable List Copy list list public static Immutable List Copy immutable List Add List list int position element copy new Object list size int position copy list get copy position element int position list size copy list get return new Immutable List Copy copy public static Immutable List Copy immutable List Replace List list int position element copy new Object list size int position copy list get copy position element int position list size copy list get return new Immutable List Copy copy public static List immutable List Remove List list int position copy new Object list size int position copy list get int position list size copy list get return new Immutable List Copy copy Converts Collections immutable Set copying param collection collection convert copy return new immutable set containing elements collection public static Set immutable Set Convert Collection extends collection return immutable Set Wrap new Hash Set collection Wraps set immutable set copying involved param set set wrap return immutable set wrapper delegates original set public static Set immutable Set Wrap Set extends set return new Immutable Set Wrapper set Creates immutable copy specified set param set set copy return immutable set copy public static Set immutable Set Copy Set set set null return null set Empty return Collections empty Set set size return Collections singleton set iterator next Set extends copy Object Duplicator duplicate Set set copy null Set uses Collection copy ctor copy attempt Copy Constructor set Collection class copy null copy new Hash Set set return new Immutable Set Wrapper copy Wraps map immutable map copying involved param map map wrap return immutable map wrapper delegates original map public static Map immutable Map Wrap Map extends extends map return new Immutable Map Wrapper map Creates immutable copy specified map param map map copy return immutable map copy public static Map immutable Map Copy Map map map null return null map Empty return Collections empty Map map size Map Entry map entry Set iterator next return Collections singleton Map get Key get Value Map extends extends copy Object Duplicator duplicate Map map copy null copy attempt Copy Constructor map Map class copy null copy new Hash Map map return new Immutable Map Wrapper copy Creates new immutable copy specified Collection param collection collection copy return immutable copy public static Collection immutable Collection Copy Collection collection collection null return null collection Empty return Collections empty Set collection size return Collections singleton collection iterator next Collection extends copy Object Duplicator duplicate Collection collection copy null copy attempt Copy Constructor collection Collection class copy null copy new Array List collection return new Immutable Collection Wrapper copy Wraps collection immutable collection copying involved param collection collection wrap return immutable collection wrapper delegates original collection public static Collection immutable Collection Wrap Collection extends collection return new Immutable Collection Wrapper collection Suppress Warnings unchecked private static attempt Copy Constructor source Class super clazz try return source get Class get Constructor clazz new Instance source catch Exception e return null Wraps link Map Entry immutable link Map Entry copying involved param entry mapping wrap return immutable link Map Entry wrapper delegates original mapping public static Map Entry immutable Entry Map Entry entry return new Immutable Entry entry Wraps key value immutable link Map Entry copying involved param key key wrap param value value wrap return immutable link Map Entry wrapper delegates original mapping public static Map Entry immutable Entry key value return new Immutable Entry key value public interface Immutable Immutable wrapper types implement Collections unmodifiable since simple detect class names dependent private static class Immutable Iterator Wrapper implements Iterator private Iterator extends iterator public Immutable Iterator Wrapper Iterator extends iterator iterator iterator Override public boolean Next return iterator Next Override public next return iterator next Override public void remove throw new Unsupported Operation Exception private static class Immutable Collection Wrapper implements Collection Serializable Immutable private static final long serial Version Collection extends collection public Immutable Collection Wrapper Collection extends collection collection collection Override public boolean add throw new Unsupported Operation Exception Override public boolean add Collection extends c throw new Unsupported Operation Exception Override public void clear throw new Unsupported Operation Exception Override public boolean contains Object return collection contains Override public boolean contains Collection c return collection contains c Override public boolean equals Object return collection equals Override public int hash Code return collection hash Code Override public boolean Empty return collection Empty Override public Iterator iterator return new Immutable Iterator Wrapper collection iterator Override public boolean remove Object throw new Unsupported Operation Exception Override public boolean remove Collection c throw new Unsupported Operation Exception Override public boolean retain Collection c throw new Unsupported Operation Exception Override public int size return collection size Override public Object Array return collection Array Override public Array return collection Array Override public String String return collection String Immutable version Map Entry traversing immutable collections private static class Immutable Entry implements Entry Immutable private key private value private int hash Immutable Entry Entry extends extends entry key entry get Key value entry get Value hash entry hash Code Immutable Entry key value key key value value hash Objects hash Code key Objects hash Code value Override public get Key return key Override public get Value return value Override public set Value value throw new Unsupported Operation Exception private static boolean eq Object Object return null equals Override Suppress Warnings unchecked public boolean equals Object instanceof Entry return false Entry entry Entry return eq entry get Key key eq entry get Value value Override public int hash Code return hash Override public String String return get Key get Value private static class Immutable Set Wrapper extends Immutable Collection Wrapper implements Set Serializable Immutable private static final long serial Version public Immutable Set Wrapper Set extends set super set private static class Immutable Reversible Ordered Set Wrapper extends Immutable Collection Wrapper implements Reversible Ordered Set Serializable Immutable private static final long serial Version public Immutable Reversible Ordered Set Wrapper Set extends set super set Override public Iterator reverse Iterator return new Immutable Iterator Wrapper Reversible Ordered Set extends collection reverse Iterator private static class Immutable Entry Set Wrapper extends Immutable Set Wrapper Entry private static final long serial Version Suppress Warnings unchecked public Immutable Entry Set Wrapper Set extends Entry extends extends set super Set Entry set Override public Object Array Object array new Object collection size int Entry entry array entry return array Override Suppress Warnings unchecked public Array array int size collection size array length size array Array new Instance array get Class get Component Type size int Object result array Entry entry result entry return array Override public Iterator Entry iterator return new Immutable Iterator Wrapper Entry collection iterator Override public Entry next return new Immutable Entry super next public static class Immutable Set Wrapper Externalizer extends Abstract Externalizer Set Override public void write Object Object Output output Set set throws Exception Marshall Util marshall Collection set output Override public Set read Object Object Input input throws Exception Class Found Exception Set Object set Marshall Util unmarshall Collection input Hash Set new return Immutables immutable Set Wrap set Override public Integer get Id return Ids Override Suppress Warnings unchecked public Set Class extends Set get Type Classes return Util Set Immutable Set Wrapper class private static class Immutable Map Wrapper implements Map Serializable Immutable private static final long serial Version private Map extends extends map public Immutable Map Wrapper Map extends extends map map map Override public void clear throw new Unsupported Operation Exception Override public boolean contains Key Object key return map contains Key key Override public boolean contains Value Object value return map contains Value value Override public Set Entry entry Set return new Immutable Entry Set Wrapper map entry Set Override public boolean equals Object return map equals Override public get Object key return map get key Override public int hash Code return map hash Code Override public boolean Empty return map Empty Override public Set key Set return new Immutable Set Wrapper map key Set Override public put key value throw new Unsupported Operation Exception Override public void put Map extends extends throw new Unsupported Operation Exception Override public remove Object key throw new Unsupported Operation Exception Override public int size return map size Override public Collection values return new Immutable Collection Wrapper map values Override public String String return map String public static class Immutable Map Wrapper Externalizer extends Abstract Externalizer Map Override public void write Object Object Output output Map map throws Exception Marshall Util marshall Map map output Override public Map read Object Object Input input throws Exception Class Found Exception return Immutables immutable Map Wrap Marshall Util unmarshall Map input Hash Map new Override public Integer get Id return Ids Override Suppress Warnings unchecked public Set Class extends Map get Type Classes return Util Set Immutable Map Wrapper class private static class Immutable Typed Properties extends Typed Properties Immutable Typed Properties Typed Properties properties super properties null properties Empty Map Entry Object Object e properties entry Set super put e get Key e get Value Override public synchronized void clear throw new Unsupported Operation Exception Override public Set java util Map Entry Object Object entry Set return new Immutable Entry Set Wrapper super entry Set Override public Set Object key Set return new Immutable Set Wrapper super key Set Override public synchronized void load Input Stream Stream throws Exception throw new Unsupported Operation Exception Override public synchronized void load Reader reader throws Exception throw new Unsupported Operation Exception Override public synchronized void load Input Stream throws Exception throw new Unsupported Operation Exception Override public synchronized Object put Object key Object value throw new Unsupported Operation Exception Override public synchronized void put Map throw new Unsupported Operation Exception Override public synchronized Object remove Object key throw new Unsupported Operation Exception Override public synchronized Typed Properties set Property String key String value throw new Unsupported Operation Exception Override public Set String string Property Names return new Immutable Set Wrapper super string Property Names Override public Collection Object values return new Immutable Collection Wrapper super values
package org persistence sifs import java io File import java io Exception import java io Random Access File import java nio Byte Buffer import java nio channels File Channel import java util Array List import java util List import java util Map import java util Tree Map import java util concurrent Blocking Queue import java util concurrent Count Latch import java util concurrent atomic Atomic Long import java util concurrent locks Lock import java util concurrent locks Read Write Lock import java util concurrent locks Reentrant Read Write Lock import org util Time Service import org util logging Log import org util logging Log Factory Keeps entry positions persisted file consists couple segments one modulo range key hashcodes according Data Container key equivalence configuration writes index segment performed single thread multiple segments spreads load author Radim Vansa lt rvansa redhat com gt class Index private static final Log log Log Factory get Log Index class private static final boolean trace log Trace Enabled private static final int x private static final int x protected static final int private final String index Dir private final File Provider file Provider private final Compactor compactor private final int min Node Size private final int max Node Size private final Read Write Lock lock new Reentrant Read Write Lock private final Segment segments private final Time Service time Service public Index File Provider file Provider String index Dir int segments int min Node Size int max Node Size Index Queue index Queue Temporary Table temporary Table Compactor compactor Time Service time Service throws Exception file Provider file Provider compactor compactor time Service time Service index Dir index Dir min Node Size min Node Size max Node Size max Node Size new File index Dir mkdirs segments new Segment segments int segments segments new Segment index Queue sub Queue temporary Table return True index loaded well persisted state public boolean Loaded int segments length segments loaded return false return true public void start int segments length segments start Get record null expired param key param serialized Key return throws Exception public Entry Record get Record Object key byte serialized Key throws Exception int segment key hash Code Integer segments length lock read Lock lock try return Index Node apply Leaf segments segment serialized Key segments segment root Read Lock Index Node Read Operation finally lock read Lock unlock Get position null expired param key param serialized Key return throws Exception public Entry Position get Position Object key byte serialized Key throws Exception int segment key hash Code Integer segments length lock read Lock lock try return Index Node apply Leaf segments segment serialized Key segments segment root Read Lock Index Node Read Operation finally lock read Lock unlock Get position num Records without expiration param key param serialized Key return throws Exception public Entry Info get Info Object key byte serialized Key throws Exception int segment key hash Code Integer segments length lock read Lock lock try return Index Node apply Leaf segments segment serialized Key segments segment root Read Lock Index Node Read Operation finally lock read Lock unlock public void clear throws Exception lock write Lock lock try Array List Count Latch pauses new Array List Count Latch Segment seg segments pauses add seg pause Clear Count Latch pause pauses pause count catch Interrupted Exception e throw new Runtime Exception e finally lock write Lock unlock public void stop Operations throws Interrupted Exception Segment seg segments seg stop Operations public long size throws Interrupted Exception long size Segment seg segments size seg size return size class Segment extends Thread private final Blocking Queue Index Request index Queue private final Temporary Table temporary Table private final Tree Map Integer List Index Space free Blocks new Tree Map Integer List Index Space private final Read Write Lock root Lock new Reentrant Read Write Lock private final File index File File private final boolean loaded private File Channel index File private long index File Size private Atomic Long size new Atomic Long private volatile Index Node root private Segment int id Blocking Queue Index Request index Queue Temporary Table temporary Table throws Exception super Index Updater id set Daemon true index Queue index Queue temporary Table temporary Table index File File new File index Dir index id index File new Random Access File index File File rw get Channel index File position Byte Buffer buffer Byte Buffer allocate index File size read index File buffer buffer get Int long root Offset buffer get Long short root Occupied buffer get Short long free Blocks Offset buffer get Long size set buffer get Long root new Index Node root Offset root Occupied load Free Blocks free Blocks Offset index File Size free Blocks Offset loaded true else index File truncate root Index Node empty Leaves loaded false reserve space shutdown index File Size buffer put Int buffer position buffer limit index File position write index File buffer private void write File Channel index File Byte Buffer buffer throws Exception int written index File write buffer written throw new Illegal State Exception write index file buffer position buffer limit private boolean read File Channel index File Byte Buffer buffer throws Exception int read index File read buffer read return false buffer position buffer limit return true Override public void run try int counter true counter log debug Queue size index Queue size final Index Request request index Queue take trace log trace Indexing request Index Node Overwrite Hook overwrite Hook Index Node Record Change record Change switch request get Type case Index Request cleared cleared index Queue poll null cleared set Result false Count Latch pause new Count Latch request set Result pause log debug Waiting cleared pause await continue case last segment processes delete request actually deletes file request count file Provider delete File request get File compactor release Stats request get File continue case assert index Queue poll null shutdown return case request set Result size get continue case record Change Index Node Record Change overwrite Hook new Index Node Overwrite Hook Override public boolean check int old File int old Offset return old File request get Prev File old Offset request get Prev Offset Override public void set Overwritten boolean overwritten int prev File int prev Offset overwritten request get Offset request get Prev Offset size decrement Get break case record Change Index Node Record Change overwrite Hook new Index Node Overwrite Hook Override public void set Overwritten boolean overwritten int prev File int prev Offset request set Result overwritten request get Offset prev Offset size increment Get else request get Offset prev Offset size decrement Get break case record Change Index Node Record Change overwrite Hook new Index Node Overwrite Hook Override public void set Overwritten boolean overwritten int prev File int prev Offset request get Prev File prev File request get Prev Offset prev Offset size decrement Get break case record Change Index Node Record Change overwrite Hook Index Node Overwrite Hook break default throw new Illegal Argument Exception request String try Index Node set Position root request get Serialized Key request get File request get Offset request get Size overwrite Hook record Change catch Illegal State Exception e throw new Illegal State Exception request String e temporary Table remove Conditionally request get Key request get File request get Offset catch Exception e throw new Runtime Exception e catch Interrupted Exception e throw new Runtime Exception e catch Throwable e log error Error indexer thread e finally try index File close catch Exception e log error Failed close delete index e private void shutdown throws Exception Index Space root Space allocate Index Space root length root store root Space index File position index File Size Byte Buffer buffer Byte Buffer allocate buffer put Int free Blocks size write index File buffer Map Entry Integer List Index Space entry free Blocks entry Set List Index Space list entry get Value int required Size list size buffer buffer capacity required Size Byte Buffer allocate required Size buffer buffer position buffer limit required Size buffer put Int entry get Key buffer put Int list size Index Space space list buffer put Long space offset buffer put Short short space length buffer flip write index File buffer int header Without Magic buffer buffer capacity header Without Magic Byte Buffer allocate header Without Magic buffer buffer put Long root Space offset buffer put Short short root Space length buffer put Long index File Size buffer put Long size get buffer position buffer limit header Without Magic index File position write index File buffer buffer put Int buffer position buffer limit index File position write index File buffer private void load Free Blocks long free Blocks Offset throws Exception index File position free Blocks Offset Byte Buffer buffer Byte Buffer allocate buffer limit read index File buffer throw new Exception read free blocks lists int num Lists buffer get Int int num Lists buffer position buffer limit read index File buffer throw new Exception read free blocks lists int block Length buffer get Int int list Size buffer get Int int required Size list Size buffer buffer capacity required Size Byte Buffer allocate required Size buffer buffer position buffer limit required Size read index File buffer throw new Exception read free blocks lists buffer flip Array List Index Space list new Array List list Size int j j list Size j list add new Index Space buffer get Long buffer get Short free Blocks put block Length list public Count Latch pause Clear throws Interrupted Exception Exception Index Request clear Index Request clear Request index Queue put clear Count Latch pause Count Latch clear get Result root Index Node empty Leaves index File truncate index File Size free Blocks clear size set return pause public long size throws Interrupted Exception Index Request size Request Index Request size Request index Queue put size Request return Long size Request get Result public File Channel get Index File return index File public File Provider get File Provider return file Provider public Compactor get Compactor return compactor public Index Node get Root called root Lock locked return root public void set Root Index Node root root Lock write Lock lock root root root Lock write Lock unlock public int get Max Node Size return max Node Size public int get Min Node Size return min Node Size accessed updater thread Index Space allocate Index Space int length Map Entry Integer List Index Space entry free Blocks ceiling Entry length entry null entry get Value Empty long old Size index File Size index File Size length return new Index Space old Size length else return entry get Value remove entry get Value size accessed updater thread void free Index Space long offset int length length throw new Illegal Argument Exception Offset offset length length fragmentation memory bounds offset length index File Size List Index Space list free Blocks get length list null free Blocks put length list new Array List Index Space list add new Index Space offset length else index File Size length try index File truncate index File Size catch Exception e log warn truncate index e public Lock root Read Lock return root Lock read Lock public void stop Operations throws Interrupted Exception index Queue put Index Request stop Request join public Time Service get Time Service return time Service Offset length pair static class Index Space protected long offset protected int length public Index Space long offset int length offset offset length length Override public boolean equals Object return true null instanceof Index Space return false Index Space inner Node Index Space length inner Node length return false offset inner Node offset return false return true Override public int hash Code int result int offset offset result result length return result Override public String String return String format offset offset length length
package org configuration cache import java util Hash Set import java util Set import org commons configuration Abstract Typed Properties Configuration import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Initializer import org commons configuration attributes Attribute Set import org commons configuration attributes Collection Attribute Copier import org commons util Typed Properties Configures indexing entries cache searching public class Indexing Configuration extends Abstract Typed Properties Configuration public static final Attribute Definition Index Attribute Definition builder index Index immutable build public static final Attribute Definition Boolean Attribute Definition builder auto Config false immutable build public static final Attribute Definition Set Class Attribute Definition builder indexed entities null Class Set Class Class Set class copier Collection Attribute Copier initializer new Attribute Initializer Set Class Override public Set Class initialize return new Hash Set immutable build static Attribute Set attribute Definition Set return new Attribute Set Indexing Configuration class Abstract Typed Properties Configuration attribute Set private static final String directory provider Legacy name ram replaced local heap Deprecated private static final String ram private static final String local heap private static final String org hibernate search store impl Directory Provider private final Attribute Index index private final Attribute Boolean auto Config private final Attribute Set Class indexed Entities public Indexing Configuration Attribute Set attributes super attributes index attributes attribute auto Config attributes attribute indexed Entities attributes attribute Whether indexing enabled False default deprecated Use link index instead Deprecated public boolean enabled return index Enabled true index changes made locally ignoring remote changes useful indexes shared across cluster prevent redundant indexing updates deprecated Use link index instead Deprecated public boolean index Local return index Local p properties passed directly embedded Hibernate Search engine complete date documentation available properties refer Hibernate Search reference version using Query p see href http docs jboss org hibernate stable search reference en html single Hibernate Search Override public Typed Properties properties Overridden replace Javadoc return super properties Returns indexing mode cache public Index index return index get Determines autoconfig enabled Indexing Configuration public boolean auto Config return auto Config get public Set Class indexed Entities return indexed Entities get public Attribute Set attributes return attributes Check indexes shared Currently ram based indexes n allow sort sharing return false index ram thus shared public boolean index Shareable Typed Properties properties properties boolean Ram Directory Provider false Object obj Key properties key Set String key String obj Key key ends String directory Implementation Name String value properties get key trim equals Ignore Case directory Implementation Name equals Ignore Case directory Implementation Name equals directory Implementation Name Ram Directory Provider true else return true return Ram Directory Provider Override public String String return Indexing Configuration attributes attributes
package org configuration cache import static org commons configuration Abstract Typed Properties Configuration import static org configuration cache Indexing Configuration import static org configuration cache Indexing Configuration import static org configuration cache Indexing Configuration import java util Properties import java util Set import org commons configuration Builder import org commons configuration attributes Attribute import org commons configuration attributes Attribute Set import org commons util Typed Properties import org commons util Util import org configuration global Global Configuration import org util logging Log import org util logging Log Factory Configures indexing entries cache searching public class Indexing Configuration Builder extends Abstract Configuration Child Builder implements Builder Indexing Configuration private static final Log log Log Factory get Log Indexing Configuration Builder class private final Attribute Set attributes Indexing Configuration Builder Configuration Builder builder super builder attributes Indexing Configuration attribute Definition Set Enable indexing deprecated Use link index Index instead Deprecated public Indexing Configuration Builder enable Attribute Index index attributes attribute index get Index index set Index return Disable indexing deprecated Use link index Index instead Deprecated public Indexing Configuration Builder disable attributes attribute set Index return Enable disable indexing deprecated Use link index Index instead Deprecated public Indexing Configuration Builder enabled boolean enabled Attribute Index index attributes attribute index get Index enabled index set Index else enabled index set Index return boolean enabled return attributes attribute get Enabled true index changes made locally ignoring remote changes useful indexes shared across cluster prevent redundant indexing updates deprecated Use link index Index instead Deprecated public Indexing Configuration Builder index Local boolean b b attributes attribute set Index return boolean index Local return attributes attribute get Local p Defines single property used multiple times define needed properties full set overridden link Properties Properties p p properties passed directly embedded Hibernate Search engine complete date documentation available properties refer Hibernate Search reference version used Query p see href http docs jboss org hibernate stable search reference en html single Hibernate Search param key Property key param value Property value return code code method chaining public Indexing Configuration Builder add Property String key String value return set Property key value p Defines single value used multiple times define needed property values full set overridden link Properties Properties p p properties passed directly embedded Hibernate Search engine complete date documentation available properties refer Hibernate Search reference version used Query p see href http docs jboss org hibernate stable search reference en html single Hibernate Search param key Property key param value Property value return code code method chaining public Indexing Configuration Builder set Property String key Object value Typed Properties properties attributes attribute get properties put key value attributes attribute set properties return p Query engine relies properties configuration p p properties passed directly embedded Hibernate Search engine complete date documentation available properties refer Hibernate Search reference version using Query p see href http docs jboss org hibernate stable search reference en html single Hibernate Search param props properties return code code method chaining public Indexing Configuration Builder Properties Properties props attributes attribute set Typed Properties Typed Properties props return Indicates indexing mode public Indexing Configuration Builder index Index index attributes attribute set index return enabled applies properties default configurations based cache type param auto Config boolean return code code method chaining public Indexing Configuration Builder auto Config boolean auto Config attributes attribute set auto Config return public boolean auto Config return attributes attribute get public Indexing Configuration Builder add Indexed Entity Class indexed Entity Set Class indexed Entities indexed Entities indexed Entities add indexed Entity attributes attribute set indexed Entities return Set Class indexed Entities return attributes attribute get Override public void validate enabled Indexing conceptually compatible Invalidation mode clustering cache Mode Invalidation throw log invalid Configuration Indexing Invalidation indexed Entities Empty get Builder template anistor take account eventual programmatically defined entity mappings log Indexable Classes Defined anistor must allow definition indexed entities indexing properties indexing enabled Override public void validate Global Configuration global Config enabled Check query module classpath try String clazz org query Search Util load Class Strict clazz global Config class Loader catch Class Found Exception e throw log invalid Configuration Indexing Without Module Override public Indexing Configuration create Typed Properties typed Properties attributes attribute get auto Config clustering cache Mode Distributed Index Overlay apply typed Properties else Index Overlay apply typed Properties attributes attribute set typed Properties return new Indexing Configuration attributes protect Override public Indexing Configuration Builder read Indexing Configuration template attributes read template attributes return Override public String String return Indexing Configuration Builder attributes attributes
package org transaction xa recovery import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Hash Set import java util Set import javax transaction xa Xid import org commons marshall Abstract Externalizer import org commons util Small Int Set import org commons util Util import org marshall core Ids import org remoting transport Address author Mircea Markus since public class Doubt Tx Info Impl implements Recovery Manager Doubt Tx Info private Xid xid private Long internal Id private Small Int Set status private transient Set Address owners new Hash Set private transient boolean Local public Doubt Tx Info Impl Xid xid Long internal Id Integer status xid xid internal Id internal Id status new Small Int Set status status set status public Doubt Tx Info Impl Xid xid long internal Id Set Integer status xid xid internal Id internal Id status new Small Int Set status public Doubt Tx Info Impl Xid xid long internal Id xid internal Id Collections empty Set Override public Xid get Xid return xid Override public Long get Internal Id return internal Id Override public Set Integer get Status return status Override public Set Address get Owners return owners public void add Status Set Integer status Set status add status Set public void add Owner Address owner owners add owner Override public boolean Local return Local public void set Local boolean local Local local public static class Externalizer extends Abstract Externalizer Doubt Tx Info Impl public Externalizer Override public void write Object Object Output output Doubt Tx Info Impl Doubt Tx Info Impl throws Exception output write Object Doubt Tx Info Impl get Xid output write Long Doubt Tx Info Impl get Internal Id Small Int Set write output Doubt Tx Info Impl status Override public Doubt Tx Info Impl read Object Object Input input throws Exception Class Found Exception return new Doubt Tx Info Impl Xid input read Object input read Long Small Int Set read input Override public Integer get Id return Ids Override public Set Class extends Doubt Tx Info Impl get Type Classes return Util Set Doubt Tx Info Impl class Override public boolean equals Object return true null get Class get Class return false Doubt Tx Info Impl Doubt Tx Info Impl Local Local return false internal Id null internal Id equals internal Id internal Id null return false owners null owners equals owners owners null return false status null status equals status status null return false xid null xid equals xid xid null return false return true Override public int hash Code int result xid null xid hash Code result result internal Id null internal Id hash Code result result status null status hash Code result result owners null owners hash Code result result Local return result Override public String String return get Class get Simple Name xid xid internal Id internal Id status status owners owners Local Local
package org util concurrent locks impl import static java util concurrent atomic Atomic Reference Field Updater new Updater import static org util concurrent Completable Futures await import java util Objects import java util Queue import java util concurrent Completable Future import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Linked Queue import java util concurrent Concurrent Map import java util concurrent Time Unit import java util concurrent atomic Atomic Reference Field Updater import org util Time Service import org util concurrent Timeout Exception import org util concurrent locks Deadlock Checker import org util concurrent locks Deadlock Detected Exception import org util concurrent locks Extended Lock Promise import org util concurrent locks Lock Listener import org util concurrent locks Lock State import org util logging Log import org util logging Log Factory special lock cache p main different traditional link java util concurrent locks Lock allowing use object lock owner possible use link Thread lock owner makes similar link java util concurrent locks Lock p addition asynchronous interface link acquire Object long Time Unit acquire lock immediately except free return link Extended Lock Promise promise allow test lock acquired asynchronously cancel lock acquisition without blocking author Pedro Ruivo since public class Lock private static final Log log Log Factory get Log Lock class private static final boolean trace log Trace Enabled private static final Atomic Reference Field Updater Lock Lock Place Holder new Updater Lock class Lock Place Holder class current private static final Atomic Reference Field Updater Lock Place Holder Lock State new Updater Lock Place Holder class Lock State class lock State private final Queue Lock Place Holder pending Request private final Concurrent Map Object Lock Place Holder lock Owners private final Runnable release Runnable private Time Service time Service private volatile Lock Place Holder current Creates new instance param time Service link Time Service check timeouts public Lock Time Service time Service time Service time Service pending Request new Concurrent Linked Queue lock Owners new Concurrent Hash Map current null release Runnable null Creates new instance param time Service link Time Service check timeouts param release Runnable link Runnable invoked every time lock released public Lock Time Service time Service Runnable release Runnable time Service time Service pending Request new Concurrent Linked Queue lock Owners new Concurrent Hash Map current null release Runnable release Runnable Tests purpose public void set Time Service Time Service time Service time Service null time Service time Service tries acquire lock p invoked multiple times owner link Extended Lock Promise returned timed link release Object invoked p lock free immediately acquired otherwise lock owner queued param lock Owner lock owner needs acquire lock param time timeout value param time Unit timeout unit return link Extended Lock Promise throws Null Pointer Exception code lock Owner code time Unit code null public Extended Lock Promise acquire Object lock Owner long time Time Unit time Unit Objects require Non Null lock Owner Lock Owner non null Objects require Non Null time Unit Time Unit non null trace log tracef Acquire lock Timeout lock Owner time time Unit Lock Place Holder lock Place Holder lock Owners get lock Owner lock Place Holder null trace log tracef Lock owner already exists lock Place Holder return lock Place Holder lock Place Holder create Lock Info lock Owner time time Unit Lock Place Holder lock Owners put Absent lock Owner lock Place Holder null trace log tracef Lock owner already exists return trace log tracef Created new one lock Place Holder pending Request add lock Place Holder try Acquire null return lock Place Holder tries release lock held code lock Owner p lock acquired waiting timed deadlocked code lock Owner link Extended Lock Promise canceled code lock Owner current lock owner lock released next lock owner available acquire lock code lock Owner never tried acquire lock method nothing param lock Owner lock owner wants release lock throws Null Pointer Exception code lock Owner code null public void release Object lock Owner Objects require Non Null lock Owner Lock Owner non null trace log tracef Release lock lock Owner Lock Place Holder want Release lock Owners get lock Owner want Release null trace log tracef found lock Owner nothing release return final boolean released want Release set Released trace log tracef Release lock want Release released Lock Place Holder current Locked current current Locked want Release try Acquire want Release return current lock owner code null acquired public Object get Lock Owner Lock Place Holder lock Place Holder current return lock Place Holder null null lock Place Holder owner checks lock acquired p code false return value mean lock free since may queued lock owners return code true lock acquired public boolean Locked return current null forces deadlock checking public void deadlock Check Deadlock Checker deadlock Checker deadlock Checker null return op Lock Place Holder holder current holder null Lock Place Holder pending pending Request pending check Deadlock deadlock Checker holder owner tests lock lock owner p return code true lock owner current lock owner queue param lock Owner lock owner test return code true contains lock owner public boolean contains Lock Owner Object lock Owner return lock Owners contains Key lock Owner private void Canceled Lock Place Holder canceled trace log tracef Release lock canceled canceled owner Lock Place Holder current Locked current current Locked canceled try Acquire canceled private boolean cas Release Lock Place Holder lock Place Holder return cas lock Place Holder null private boolean remove Object lock Owner return lock Owners remove lock Owner null private void trigger Released release Runnable null release Runnable run private boolean cas Lock Place Holder release Lock Place Holder acquire boolean cas compare Set release acquire trace log tracef Lock Owner release acquire cas return cas private void try Acquire Lock Place Holder release Lock Place Holder Release release Lock Place Holder Acquire pending Request peek trace log tracef Try acquire Next queue Current Acquire current Acquire null Release null return else Acquire null nothing acquire release current cas Release Release Release null continue meanwhile could new request recheck return cas Release Acquire set current lock owner must remove queue pending Request remove Acquire Acquire set Acquire trace log tracef successfully acquired lock Acquire return trace log tracef failed acquire invalid state Retrying Acquire oh oh probably next Pending Timed going retry next queue Release Acquire else trace log tracef Unable acquire Lock held thread already set current lock owner return true private Lock Place Holder create Lock Info Object lock Owner long time Time Unit time Unit return new Lock Place Holder lock Owner time Service expected End Time time time Unit private class Lock Place Holder implements Extended Lock Promise private final Object owner private final long timeout private final Completable Future Void notifier volatile Lock State lock State private Lock Place Holder Object owner long timeout owner owner timeout timeout lock State Lock State notifier new Completable Future Override public boolean Available check Timeout return lock State Lock State Override public void lock throws Interrupted Exception Timeout Exception Lock State current State lock State switch current State case check Timeout await notifier time Service remaining Time timeout Time Unit Time Unit break case return acquired case throw new Illegal State Exception Lock already released case cleanup throw new Timeout Exception Timeout waiting lock case cleanup throw new Deadlock Detected Exception Dead Lock detected default throw new Illegal State Exception Unknown lock state current State true Override public void add Listener Lock Listener listener notifier Run invoke listener Override public void cancel Lock State state check Valid Cancel State state Lock State current State lock State switch current State case cas State Lock State state Canceled notify Listeners return break case op thread inside critical section case case case return op lock final state default throw new Illegal State Exception Unknown lock state current State true Override public Object get Requestor return owner Override public Object get Owner Lock Place Holder owner current return owner null owner owner null Override public String String return Lock Place Holder lock State lock State owner owner private void invoke Lock Listener invoker Lock State state lock State switch state case throw new Illegal State Exception valid state invoke listener case case invoker Event Lock State break case case invoker Event state break default throw new Illegal State Exception Unknown lock state state private void check Valid Cancel State Lock State state state Lock State state Lock State throw new Illegal Argument Exception Lock State state valid cancel private void check Deadlock Deadlock Checker checker Object current Owner check Timeout check timeout checking deadlock check deadlock expensive lock State Lock State waiting lock owner equals current Owner needed safe checker deadlock Detected owner current Owner deadlock detected cas State Lock State Lock State state could changed available timed Canceled notify Listeners private boolean set Acquire cas State Lock State Lock State notify Listeners return lock State Lock State private boolean set Released Lock State state lock State switch state case cas State state Lock State cleanup notify Listeners return true break case case case cas State state Lock State cleanup return true break case return false default throw new Illegal State Exception Unknown lock state state true private boolean cas State Lock State expect Lock State update boolean updated compare Set expect update updated trace log tracef State changed expect update return updated private void cleanup remove owner trigger Released private void check Timeout lock State Lock State time Service Time Expired timeout cas State Lock State Lock State Canceled notify Listeners private void notify Listeners lock State Lock State notifier complete null
package org interceptors import java util Array List import java util List import org commands Visitable Command import org context Invocation Context import org factories scopes Scope import org factories scopes Scopes import org interceptors base Command Interceptor Knows build manage chain interceptors Also charge invoking methods chain author Mircea Markus jboss com author Galder Zamarre since deprecated Since use link Async Interceptor Chain instead methods ignore interceptors extend link Command Interceptor Scope Scopes Deprecated public class Interceptor Chain private Async Interceptor Chain async Interceptor Chain public Interceptor Chain Async Interceptor Chain async Interceptor Chain async Interceptor Chain async Interceptor Chain Inserts given interceptor specified position chain based indexing throws Illegal Argument Exception position invalid e g interceptors chain public void add Interceptor Command Interceptor interceptor int position async Interceptor Chain add Interceptor interceptor position Removes interceptor given postion throws Illegal Argument Exception position invalid e g interceptors chain public void remove Interceptor int position async Interceptor Chain remove Interceptor position Returns number interceptors chain public int size return async Interceptor Chain size Returns unmofiable list interceptors sequence first chain null empty list returned public List Command Interceptor List Array List Command Interceptor list new Array List async Interceptor Chain get Interceptors size async Interceptor Chain get Interceptors ci ci instanceof Command Interceptor list add Command Interceptor ci return list Removes occurences supplied interceptor type chain public void remove Interceptor Class extends Command Interceptor clazz async Interceptor Chain remove Interceptor clazz Adds new interceptor list interceptor given type return true interceptor added e Interceptor exists public boolean add Interceptor Command Interceptor Add Class extends Command Interceptor Interceptor return async Interceptor Chain add Interceptor Add Interceptor deprecated Use link add Interceptor Command Interceptor Class instead Deprecated public boolean add Interceptor Command Interceptor Add Class extends Command Interceptor Interceptor boolean Custom return async Interceptor Chain add Interceptor Add Interceptor Adds new interceptor list interceptor given type return true interceptor added e Interceptor exists public boolean add Interceptor Command Interceptor Add Class extends Command Interceptor Interceptor return async Interceptor Chain add Interceptor Add Interceptor Replaces existing interceptor given type interceptor chain new interceptor instance passed parameter param replacing Interceptor interceptor add interceptor chain param Replaced Interceptor Type type interceptor swapped new one return true interceptor replaced public boolean replace Interceptor Command Interceptor replacing Interceptor Class extends Command Interceptor Replaced Interceptor Type return async Interceptor Chain replace Interceptor replacing Interceptor Replaced Interceptor Type Appends end public void append Interceptor Command Interceptor ci boolean Custom async Interceptor Chain append Interceptor ci Custom Walks command interceptor chain received ctx passed p Note Reusing context multiple invocations allowed However two invocations must overlap calling code invoke ctx command interceptor allowed interceptor needs invoke new command entire chain must first copy invocation context link Invocation Context clone p public Object invoke Invocation Context ctx Visitable Command command return async Interceptor Chain invoke ctx command return first code Command Interceptor chain Since likely link Async Interceptor Deprecated public Command Interceptor get First Chain return async Interceptor Chain find Interceptor Extending Command Interceptor class Mainly used unit tests replace interceptor chain starting point passed param interceptor interceptor used first interceptor chain public void set First Chain Command Interceptor interceptor add Interceptor interceptor Returns interceptors extend given command interceptor public List Command Interceptor get Interceptors Extend Class extends Command Interceptor interceptor Class Array List Command Interceptor list new Array List async Interceptor Chain get Interceptors size async Interceptor Chain get Interceptors ci interceptor Class Instance ci list add Command Interceptor ci return list Returns interceptors fully qualified name class equal supplied class name public List Command Interceptor get Interceptors Class Class clazz Array List Command Interceptor list new Array List async Interceptor Chain get Interceptors size async Interceptor Chain get Interceptors ci clazz ci get Class list add Command Interceptor ci return list Checks whether chain contains supplied interceptor instance public boolean contains Instance Command Interceptor interceptor return async Interceptor Chain contains Instance interceptor public boolean contains Interceptor Type Class extends Command Interceptor interceptor Type return async Interceptor Chain contains Interceptor Type interceptor Type public boolean contains Interceptor Type Class extends Command Interceptor interceptor Type boolean also Match Sub Classes return async Interceptor Chain contains Interceptor Type interceptor Type also Match Sub Classes
package org factories import java util List import org commons Cache Configuration Exception import org commons Cache Exception import org configuration cache Cache Mode import org configuration cache Compatibility Mode Configuration import org configuration cache Configuration import org configuration cache Configurations import org configuration cache Custom Interceptors Configuration import org configuration cache Interceptor Configuration import org configuration cache Store Configuration import org factories annotations Default Factory import org interceptors Async Interceptor import org interceptors Async Interceptor Chain import org interceptors Interceptor Chain import org interceptors distribution Distribution Bulk Interceptor import org interceptors distribution Last Chance Interceptor import org interceptors distribution Non Tx Interceptor import org interceptors distribution Tx Interceptor import org interceptors distribution Non Tx Distribution Interceptor import org interceptors distribution Scattered Distribution Interceptor import org interceptors distribution Triangle Distribution Interceptor import org interceptors distribution Tx Distribution Interceptor import org interceptors distribution Versioned Distribution Interceptor import org interceptors impl Async Interceptor Chain Impl import org interceptors impl Batching Interceptor import org interceptors impl Cache Loader Interceptor import org interceptors impl Cache Mgmt Interceptor import org interceptors impl Cache Writer Interceptor import org interceptors impl Call Interceptor import org interceptors impl Clustered Cache Loader Interceptor import org interceptors impl Compatibility Interceptor import org interceptors impl Dist Cache Writer Interceptor import org interceptors impl Entry Wrapping Interceptor import org interceptors impl Grouping Interceptor import org interceptors impl Invalidation Interceptor import org interceptors impl Invocation Context Interceptor import org interceptors impl Marshallable Interceptor import org interceptors impl Notification Interceptor import org interceptors impl Passivation Writer Interceptor import org interceptors impl Prefetch Interceptor import org interceptors impl Retrying Entry Wrapping Interceptor import org interceptors impl Scattered Cache Writer Interceptor import org interceptors impl Transactional Store Interceptor import org interceptors impl Tx Interceptor import org interceptors impl Versioned Entry Wrapping Interceptor import org interceptors locking Non Transactional Locking Interceptor import org interceptors locking Optimistic Locking Interceptor import org interceptors locking Pessimistic Locking Interceptor import org interceptors totalorder Total Order Distribution Interceptor import org interceptors totalorder Total Order Interceptor import org interceptors totalorder Total Order State Transfer Interceptor import org interceptors totalorder Total Order Versioned Distribution Interceptor import org interceptors totalorder Total Order Versioned Entry Wrapping Interceptor import org interceptors xsite Non Transactional Backup Interceptor import org interceptors xsite Optimistic Backup Interceptor import org interceptors xsite Pessimistic Backup Interceptor import org partitionhandling Partition Handling import org partitionhandling impl Partition Handling Interceptor import org statetransfer State Transfer Interceptor import org statetransfer Transaction Synchronizer Interceptor import org transaction Locking Mode import org transaction Transaction Mode import org util logging Log import org util logging Log Factory Factory class builds interceptor chain based cache configuration backwards compatibility factory register link Async Interceptor Chain link Interceptor Chain initializing interceptors author href mailto manik jboss org Manik Surtani manik jboss org author Mircea Markus jboss com author Marko Luksa author Pedro Ruivo since Default Factory classes Async Interceptor Chain class Interceptor Chain class public class Interceptor Chain Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory private static final Log log Log Factory get Log Interceptor Chain Factory class private Async Interceptor create Interceptor Async Interceptor interceptor Class extends Async Interceptor interceptor Type Async Interceptor chained Interceptor component Registry get Component interceptor Type chained Interceptor null register interceptor Type interceptor chained Interceptor interceptor return chained Interceptor private void register Class extends Async Interceptor clazz Async Interceptor chained Interceptor try component Registry register Component chained Interceptor clazz catch Runtime Exception e log unable Create Interceptor clazz e throw e public Async Interceptor Chain build Interceptor Chain Transaction Mode transaction Mode configuration transaction transaction Mode boolean needs Version Aware Components transaction Mode Transactional Configurations Tx Versioned configuration Async Interceptor Chain interceptor Chain new Async Interceptor Chain Impl component Registry get Component Metadata Repo add interceptor chain registry first since interceptors may ask Add old class new interface component Registry register Component interceptor Chain Async Interceptor Chain class component Registry register Component new Interceptor Chain interceptor Chain Interceptor Chain class boolean invocation Batching configuration invocation Batching enabled boolean Total Order configuration transaction transaction Protocol Total Order Cache Mode cache Mode configuration clustering cache Mode cache Mode needs State Transfer interceptor Chain append Interceptor create Interceptor new Distribution Bulk Interceptor Distribution Bulk Interceptor class false load ic Interceptor first invocation Batching interceptor Chain append Interceptor create Interceptor new Batching Interceptor Batching Interceptor class false interceptor Chain append Interceptor create Interceptor new Invocation Context Interceptor Invocation Context Interceptor class false Compatibility Mode Configuration compatibility configuration compatibility compatibility enabled interceptor Chain append Interceptor create Interceptor new Compatibility Interceptor Compatibility Interceptor class false add marshallable check interceptor situations want figure marshalling Async Store interceptor Chain append Interceptor create Interceptor new Marshallable Interceptor Marshallable Interceptor class false load cache management interceptor next configuration jmx Statistics available interceptor Chain append Interceptor create Interceptor new Cache Mgmt Interceptor Cache Mgmt Interceptor class false load state transfer lock interceptor state transfer lock ensures cache member list date necessary even state transfer disabled cache Mode needs State Transfer Total Order interceptor Chain append Interceptor create Interceptor new Total Order State Transfer Interceptor Total Order State Transfer Interceptor class false else interceptor Chain append Interceptor create Interceptor new State Transfer Interceptor State Transfer Interceptor class false transaction Mode Transactional interceptor Chain append Interceptor create Interceptor new Transaction Synchronizer Interceptor Transaction Synchronizer Interceptor class false configuration clustering partition Handling Split Partition Handling interceptor Chain append Interceptor create Interceptor new Partition Handling Interceptor Partition Handling Interceptor class false load total order interceptor Total Order interceptor Chain append Interceptor create Interceptor new Total Order Interceptor Total Order Interceptor class false load tx interceptor transaction Mode Transactional interceptor Chain append Interceptor create Interceptor new Tx Interceptor Tx Interceptor class false total order protocol n need locks Total Order cache Mode Scattered transaction Mode Transactional configuration transaction locking Mode Locking Mode interceptor Chain append Interceptor create Interceptor new Pessimistic Locking Interceptor Pessimistic Locking Interceptor class false else interceptor Chain append Interceptor create Interceptor new Optimistic Locking Interceptor Optimistic Locking Interceptor class false else interceptor Chain append Interceptor create Interceptor new Non Transactional Locking Interceptor Non Transactional Locking Interceptor class false Notification Interceptor used Prepare Commit Rollback notifications needs locking interceptor guarantee locks still held raising notifications transaction Mode Transactional configuration transaction notifications interceptor Chain append Interceptor create Interceptor new Notification Interceptor Notification Interceptor class false configuration sites Enabled Backups configuration sites disable Backups transaction Mode Transaction Mode configuration transaction locking Mode Locking Mode interceptor Chain append Interceptor create Interceptor new Optimistic Backup Interceptor Optimistic Backup Interceptor class false else interceptor Chain append Interceptor create Interceptor new Pessimistic Backup Interceptor Pessimistic Backup Interceptor class false else interceptor Chain append Interceptor create Interceptor new Non Transactional Backup Interceptor Non Transactional Backup Interceptor class false needs added locking interceptor tx caches wrapping interceptor configuration clustering l enabled interceptor Chain append Interceptor create Interceptor new Last Chance Interceptor Last Chance Interceptor class false configuration clustering hash groups enabled interceptor Chain append Interceptor create Interceptor new Grouping Interceptor Grouping Interceptor class false cache Mode Scattered interceptor Chain append Interceptor create Interceptor new Prefetch Interceptor Prefetch Interceptor class false needs Version Aware Components Total Order interceptor Chain append Interceptor create Interceptor new Total Order Versioned Entry Wrapping Interceptor Total Order Versioned Entry Wrapping Interceptor class false else interceptor Chain append Interceptor create Interceptor new Versioned Entry Wrapping Interceptor Versioned Entry Wrapping Interceptor class false else cache Mode Scattered interceptor Chain append Interceptor create Interceptor new Retrying Entry Wrapping Interceptor Retrying Entry Wrapping Interceptor class false else interceptor Chain append Interceptor create Interceptor new Entry Wrapping Interceptor Entry Wrapping Interceptor class false configuration persistence using Stores cache Mode Clustered interceptor Chain append Interceptor create Interceptor new Clustered Cache Loader Interceptor Clustered Cache Loader Interceptor class false else interceptor Chain append Interceptor create Interceptor new Cache Loader Interceptor Cache Loader Interceptor class false configuration persistence passivation interceptor Chain append Interceptor create Interceptor new Passivation Writer Interceptor Passivation Writer Interceptor class false else boolean transactional Store configuration persistence stores stream Match Store Configuration transactional transactional Store transaction Mode Transactional interceptor Chain append Interceptor create Interceptor new Transactional Store Interceptor Transactional Store Interceptor class false switch cache Mode case case case case interceptor Chain append Interceptor create Interceptor new Dist Cache Writer Interceptor Dist Cache Writer Interceptor class false break case interceptor Chain append Interceptor create Interceptor new Scattered Cache Writer Interceptor Scattered Cache Writer Interceptor class false break default interceptor Chain append Interceptor create Interceptor new Cache Writer Interceptor Cache Writer Interceptor class false break configuration clustering l enabled transaction Mode Transactional interceptor Chain append Interceptor create Interceptor new Tx Interceptor Tx Interceptor class false else interceptor Chain append Interceptor create Interceptor new Non Tx Interceptor Non Tx Interceptor class false switch cache Mode case case interceptor Chain append Interceptor create Interceptor new Invalidation Interceptor Invalidation Interceptor class false break case case needs Version Aware Components Total Order interceptor Chain append Interceptor create Interceptor new Total Order Versioned Distribution Interceptor Total Order Versioned Distribution Interceptor class false else interceptor Chain append Interceptor create Interceptor new Versioned Distribution Interceptor Versioned Distribution Interceptor class false break case case transaction Mode Transactional Total Order interceptor Chain append Interceptor create Interceptor new Total Order Distribution Interceptor Total Order Distribution Interceptor class false else interceptor Chain append Interceptor create Interceptor new Tx Distribution Interceptor Tx Distribution Interceptor class false else cache Mode Distributed Configurations Embedded Mode global Configuration interceptor Chain append Interceptor create Interceptor new Triangle Distribution Interceptor Triangle Distribution Interceptor class false else interceptor Chain append Interceptor create Interceptor new Non Tx Distribution Interceptor Non Tx Distribution Interceptor class false break case interceptor Chain append Interceptor create Interceptor new Scattered Distribution Interceptor Scattered Distribution Interceptor class false break case Nothing Async Interceptor call Interceptor create Interceptor new Call Interceptor Call Interceptor class interceptor Chain append Interceptor call Interceptor false log trace Finished building default interceptor chain build Custom Interceptors interceptor Chain configuration custom Interceptors return interceptor Chain private void build Custom Interceptors Async Interceptor Chain interceptor Chain Custom Interceptors Configuration custom Interceptors Interceptor Configuration config custom Interceptors interceptors interceptor Chain contains Interceptor Type config async Interceptor get Class continue Async Interceptor custom Interceptor config async Interceptor Security Actions apply Properties custom Interceptor config properties register custom Interceptor get Class custom Interceptor config first interceptor Chain add Interceptor custom Interceptor else config last interceptor Chain add Interceptor custom Interceptor Call Interceptor class else config index interceptor Chain add Interceptor custom Interceptor config index else config null boolean added interceptor Chain add Interceptor custom Interceptor config added throw new Cache Configuration Exception add class config interceptor exists default chain else config null boolean added interceptor Chain add Interceptor custom Interceptor config added throw new Cache Configuration Exception add class config interceptor exists default chain else config position Interceptor Configuration Position interceptor Chain add Interceptor custom Interceptor private boolean Async Store List Store Configuration loader Configs configuration persistence stores Store Configuration loader Config loader Configs loader Config async enabled return true return false Override public construct Class component Type try Async Interceptor Chain async Interceptor Chain build Interceptor Chain component Type Interceptor Chain class return component Type cast component Registry get Component Interceptor Chain class else return component Type cast async Interceptor Chain catch Cache Exception ce throw ce catch Exception e throw new Cache Configuration Exception Unable build interceptor chain e public static Interceptor Chain Factory get Instance Component Registry component Registry Configuration configuration Interceptor Chain Factory icf new Interceptor Chain Factory icf component Registry component Registry icf configuration configuration return icf
package org stream impl intops import java io Exception import java io Object Input import java io Object Output import java util Comparator import java util Set import java util function Consumer import java util function Double Consumer import java util function Double Function import java util function Double Predicate import java util function Double Int Function import java util function Double Long Function import java util function Double Unary Operator import java util function Function import java util function Int Consumer import java util function Int Function import java util function Int Predicate import java util function Int Double Function import java util function Int Long Function import java util function Int Unary Operator import java util function Long Consumer import java util function Long Function import java util function Long Predicate import java util function Long Double Function import java util function Long Int Function import java util function Long Unary Operator import java util function Predicate import java util function Double Function import java util function Int Function import java util function Long Function import org commons io Unsigned Numeric import org commons marshall Advanced Externalizer import org commons util Util import org marshall core Ids import org stream impl intops object Distinct Operation import org stream impl intops object Filter Operation import org stream impl intops object Flat Map Operation import org stream impl intops object Flat Map Double Operation import org stream impl intops object Flat Map Int Operation import org stream impl intops object Flat Map Long Operation import org stream impl intops object Limit Operation import org stream impl intops object Map Operation import org stream impl intops object Map Double Operation import org stream impl intops object Map Int Operation import org stream impl intops object Map Long Operation import org stream impl intops object Peek Operation import org stream impl intops object Sorted Comparator Operation import org stream impl intops object Sorted Operation import org stream impl intops primitive Boxed Double Operation import org stream impl intops primitive Distinct Double Operation import org stream impl intops primitive Filter Double Operation import org stream impl intops primitive Flat Map Double Operation import org stream impl intops primitive Limit Double Operation import org stream impl intops primitive Map Double Operation import org stream impl intops primitive Map Int Double Operation import org stream impl intops primitive Map Long Double Operation import org stream impl intops primitive Map Obj Double Operation import org stream impl intops primitive Peek Double Operation import org stream impl intops primitive Sorted Double Operation import org stream impl intops primitive Double Int Operation import org stream impl intops primitive Long Int Operation import org stream impl intops primitive Boxed Int Operation import org stream impl intops primitive Distinct Int Operation import org stream impl intops primitive Filter Int Operation import org stream impl intops primitive Flat Map Int Operation import org stream impl intops primitive Limit Int Operation import org stream impl intops primitive Map Int Operation import org stream impl intops primitive Map Double Int Operation import org stream impl intops primitive Map Long Int Operation import org stream impl intops primitive Map Obj Int Operation import org stream impl intops primitive Peek Int Operation import org stream impl intops primitive Sorted Int Operation import org stream impl intops primitive l Double Long Operation import org stream impl intops primitive l Boxed Long Operation import org stream impl intops primitive l Distinct Long Operation import org stream impl intops primitive l Filter Long Operation import org stream impl intops primitive l Flat Map Long Operation import org stream impl intops primitive l Limit Long Operation import org stream impl intops primitive l Map Long Operation import org stream impl intops primitive l Map Double Long Operation import org stream impl intops primitive l Map Int Long Operation import org stream impl intops primitive l Map Obj Long Operation import org stream impl intops primitive l Peek Long Operation import org stream impl intops primitive l Sorted Long Operation import org jboss marshalling util Identity Int Map Externalizer used serializing various intermediate operations public class Intermediate Operation Externalizer implements Advanced Externalizer Intermediate Operation Object stream intermediate operations private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int Double stream intermediate operations private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int Int stream intermediate operations private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int Long stream intermediate operations private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private final Identity Int Map Class extends Intermediate Operation operations new Identity Int Map public Intermediate Operation Externalizer operations put Distinct Operation class operations put Filter Operation class operations put Flat Map Operation class operations put Flat Map Double Operation class operations put Flat Map Int Operation class operations put Flat Map Long Operation class operations put Limit Operation class operations put Map Operation class operations put Map Double Operation class operations put Map Int Operation class operations put Map Long Operation class operations put Peek Operation class operations put Sorted Comparator Operation class operations put Sorted Operation class operations put Boxed Double Operation class operations put Distinct Double Operation class operations put Filter Double Operation class operations put Flat Map Double Operation class operations put Limit Double Operation class operations put Map Double Operation class operations put Map Int Double Operation class operations put Map Long Double Operation class operations put Map Obj Double Operation class operations put Peek Double Operation class operations put Sorted Double Operation class operations put Double Int Operation class operations put Long Int Operation class operations put Boxed Int Operation class operations put Distinct Int Operation class operations put Filter Int Operation class operations put Flat Map Int Operation class operations put Limit Int Operation class operations put Map Int Operation class operations put Map Double Int Operation class operations put Map Long Int Operation class operations put Map Obj Int Operation class operations put Peek Int Operation class operations put Sorted Int Operation class operations put Double Long Operation class operations put Boxed Long Operation class operations put Distinct Long Operation class operations put Filter Long Operation class operations put Flat Map Long Operation class operations put Limit Long Operation class operations put Map Long Operation class operations put Map Double Long Operation class operations put Map Int Long Operation class operations put Map Obj Long Operation class operations put Peek Long Operation class operations put Sorted Long Operation class Override public Set Class extends Intermediate Operation get Type Classes return Util Class extends Intermediate Operation Set Distinct Operation class Filter Operation class Flat Map Operation class Flat Map Double Operation class Flat Map Int Operation class Flat Map Long Operation class Limit Operation class Map Operation class Map Double Operation class Map Int Operation class Map Long Operation class Peek Operation class Sorted Comparator Operation class Sorted Operation class Boxed Double Operation class Distinct Double Operation class Filter Double Operation class Flat Map Double Operation class Limit Double Operation class Map Double Operation class Map Int Double Operation class Map Long Double Operation class Map Double Operation class Peek Double Operation class Sorted Double Operation class Double Int Operation class Long Int Operation class Boxed Int Operation class Distinct Operation class Filter Int Operation class Flat Map Int Operation class Limit Int Operation class Map Int Operation class Map Double Int Operation class Map Long Int Operation class Map Obj Int Operation class Peek Int Operation class Sorted Int Operation class Double Long Operation class Boxed Long Operation class Distinct Operation class Filter Long Operation class Flat Map Long Operation class Limit Operation class Map Long Operation class Map Double Long Operation class Map Int Long Operation class Map Obj Long Operation class Peek Long Operation class Sorted Long Operation class Override public Integer get Id return Ids Override public void write Object Object Output output Intermediate Operation object throws Exception int number operations get object get Class output write Byte number switch number case output write Object Filter Operation object get Predicate break case output write Object Flat Map Operation object get Function break case output write Object Flat Map Double Operation object get Function break case output write Object Flat Map Int Operation object get Function break case output write Object Flat Map Long Operation object get Function break case Unsigned Numeric write Unsigned Long output Limit Operation object get Limit break case output write Object Map Operation object get Function break case output write Object Map Double Operation object get Function break case output write Object Map Int Operation object get Function break case output write Object Map Long Operation object get Function break case output write Object Peek Operation object get Consumer break case output write Object Sorted Comparator Operation object get Comparator break case output write Object Filter Double Operation object get Predicate break case output write Object Flat Map Double Operation object get Function break case Unsigned Numeric write Unsigned Long output Limit Double Operation object get Limit break case output write Object Map Double Operation object get Operator break case output write Object Map Int Double Operation object get Function break case output write Object Map Long Double Operation object get Function break case output write Object Map Obj Double Operation object get Function break case output write Object Peek Double Operation object get Consumer break case output write Object Filter Int Operation object get Predicate break case output write Object Flat Map Int Operation object get Function break case Unsigned Numeric write Unsigned Long output Limit Int Operation object get Limit break case output write Object Map Int Operation object get Operator break case output write Object Map Double Int Operation object get Function break case output write Object Map Long Int Operation object get Function break case output write Object Map Obj Int Operation object get Function break case output write Object Peek Int Operation object get Consumer break case output write Object Filter Long Operation object get Predicate break case output write Object Flat Map Long Operation object get Function break case Unsigned Numeric write Unsigned Long output Limit Long Operation object get Limit break case output write Object Map Long Operation object get Operator break case output write Object Map Double Long Operation object get Function break case output write Object Map Int Long Operation object get Function break case output write Object Map Obj Long Operation object get Function break case output write Object Peek Long Operation object get Consumer break Override public Intermediate Operation read Object Object Input input throws Exception Class Found Exception int number input read Unsigned Byte switch number case return Distinct Operation get Instance case return new Filter Operation Predicate input read Object case return new Flat Map Operation Function input read Object case return new Flat Map Double Operation Function input read Object case return new Flat Map Int Operation Function input read Object case return new Flat Map Long Operation Function input read Object case return new Limit Operation Unsigned Numeric read Unsigned Long input case return new Map Operation Function input read Object case return new Map Double Operation Double Function input read Object case return new Map Int Operation Int Function input read Object case return new Map Long Operation Long Function input read Object case return new Peek Operation Consumer input read Object case return new Sorted Comparator Operation Comparator input read Object case return Sorted Operation get Instance case return Boxed Double Operation get Instance case return Distinct Double Operation get Instance case return new Filter Double Operation Double Predicate input read Object case return new Flat Map Double Operation Double Function input read Object case return new Limit Double Operation Unsigned Numeric read Unsigned Long input case return new Map Double Operation Double Unary Operator input read Object case return new Map Int Double Operation Double Int Function input read Object case return new Map Long Double Operation Double Long Function input read Object case return new Map Obj Double Operation Double Function input read Object case return new Peek Double Operation Double Consumer input read Object case return Sorted Double Operation get Instance case return Double Int Operation get Instance case return Long Int Operation get Instance case return Boxed Int Operation get Instance case return Distinct Int Operation get Instance case return new Filter Int Operation Int Predicate input read Object case return new Flat Map Int Operation Int Function input read Object case return new Limit Int Operation Unsigned Numeric read Unsigned Long input case return new Map Int Operation Int Unary Operator input read Object case return new Map Double Int Operation Int Double Function input read Object case return new Map Long Int Operation Int Long Function input read Object case return new Map Obj Int Operation Int Function input read Object case return new Peek Int Operation Int Consumer input read Object case return Sorted Int Operation get Instance case return Double Long Operation get Instance case return Boxed Long Operation get Instance case return Distinct Long Operation get Instance case return new Filter Long Operation Long Predicate input read Object case return new Flat Map Long Operation Long Function input read Object case return new Limit Long Operation Unsigned Numeric read Unsigned Long input case return new Map Long Operation Long Unary Operator input read Object case return new Map Double Long Operation Long Double Function input read Object case return new Map Int Long Operation Long Int Function input read Object case return new Map Obj Long Operation Long Function input read Object case return new Peek Long Operation Long Consumer input read Object case return Sorted Long Operation get Instance default throw new Illegal Argument Exception Found invalid number number
package org factories import org Advanced Cache import org Cache import org cache impl Cache Impl import org cache impl Encoder Cache import org cache impl Simple Cache Impl import org cache impl Stats Collecting Cache import org commons Cache Configuration Exception import org commons dataconversion Binary Encoder import org commons dataconversion Byte Array Wrapper import org commons dataconversion Compat Mode Encoder import org commons dataconversion Encoder import org commons dataconversion Global Marshaller Encoder import org commons dataconversion Identity Encoder import org commons marshall Streaming Marshaller import org configuration cache Configuration import org configuration cache Configurations import org configuration cache Statistics Configuration import org configuration cache Storage Type import org configuration global Global Configuration import org encoding Data Conversion import org eviction Activation Manager import org eviction Passivation Manager import org eviction impl Activation Manager Stub import org eviction impl Passivation Manager Stub import org expiration Expiration Manager import org jmx Cache Jmx Registration import org manager Default Cache Manager import org notifications cachelistener cluster Cluster Event Manager import org notifications cachelistener cluster impl Cluster Event Manager Stub import org persistence manager Persistence Manager import org persistence manager Persistence Manager Stub import org stats impl Stats Collector import org transaction xa recovery Recovery Admin Operations import org upgrade Rolling Upgrade Manager import org xsite Site Admin Operations internal factory constructing Caches Used link Default Cache Manager intended public p special instance link Abstract Component Factory contains bootstrap information link Component Registry p author href mailto manik jboss org Manik Surtani manik jboss org since public class Internal Cache Factory extends Abstract Named Cache Component Factory implementation clones configuration passed using param configuration use param global Component Registry global component registry attach cache param cache Name name cache return cache throws Cache Configuration Exception problems cfg public Cache create Cache Configuration configuration Global Component Registry global Component Registry String cache Name throws Cache Configuration Exception try configuration simple Cache return create Simple Cache configuration global Component Registry cache Name else return create Wire configuration global Component Registry cache Name catch Cache Configuration Exception ce throw ce catch Runtime Exception throw catch Exception e throw new Runtime Exception e private Class extends Encoder get Encoder Class Global Configuration global Configuration Configuration configuration boolean compat Enabled configuration compatibility enabled boolean embedded Mode Configurations Embedded Mode global Configuration compat Enabled embedded Mode return Compat Mode Encoder class Storage Type storage Type configuration memory storage Type storage Type Storage Type return Binary Encoder class embedded Mode storage Type Storage Type return Global Marshaller Encoder class return Identity Encoder class protected Advanced Cache create Wire Configuration configuration Global Component Registry global Component Registry String cache Name throws Exception Class extends Encoder encoder Class get Encoder Class global Component Registry get Global Configuration configuration Data Conversion key Data Conversion new Data Conversion encoder Class Byte Array Wrapper class Data Conversion value Data Conversion new Data Conversion encoder Class Byte Array Wrapper class Streaming Marshaller marshaller global Component Registry get Create Component Streaming Marshaller class Advanced Cache cache new Cache Impl cache Name cache new Encoder Cache cache key Data Conversion value Data Conversion bootstrap cache Name cache configuration global Component Registry marshaller marshaller null component Registry wire Dependencies marshaller return cache private Advanced Cache create Simple Cache Configuration configuration Global Component Registry global Component Registry String cache Name Advanced Cache cache Class extends Encoder encoder Class get Encoder Class global Component Registry get Global Configuration configuration Statistics Configuration jmx Statistics configuration jmx Statistics boolean statistics Available jmx Statistics null jmx Statistics available Data Conversion key Data Conversion new Data Conversion encoder Class Byte Array Wrapper class Data Conversion value Data Conversion new Data Conversion encoder Class Byte Array Wrapper class statistics Available cache new Stats Collecting Cache cache Name key Data Conversion value Data Conversion else cache new Simple Cache Impl cache Name key Data Conversion value Data Conversion configuration configuration cache new Encoder Cache cache key Data Conversion value Data Conversion component Registry new Component Registry cache Name configuration cache global Component Registry global Component Registry get Class Loader Override protected void bootstrap Components statistics Available register Component new Stats Collector Factory Stats Collector Factory class register Component new Cluster Event Manager Stub Cluster Event Manager class register Component new Passivation Manager Stub Passivation Manager class register Component new Activation Manager Stub Activation Manager class register Component new Persistence Manager Stub Persistence Manager class Override public void cache Components get Create Component Expiration Manager class component Registry register Component new Cache Jmx Registration Cache Jmx Registration class get Name true component Registry register Component new Rolling Upgrade Manager Rolling Upgrade Manager class get Name true component Registry register Component cache Cache class get Name true return cache Bootstraps factory Configuration Component Registry private void bootstrap String cache Name Advanced Cache cache Configuration configuration Global Component Registry global Component Registry Streaming Marshaller marshaller configuration configuration injection bootstrap stuff component Registry new Component Registry cache Name configuration cache global Component Registry global Component Registry get Class Loader bootstrap really happens Registering cache component registry cause component registry look cache Inject methods construct various components dependencies turn component Registry register Component cache Cache class get Name true component Registry register Component new Cache Jmx Registration Cache Jmx Registration class get Name true configuration transaction recovery enabled component Registry register Component new Recovery Admin Operations Recovery Admin Operations class get Name true configuration sites Enabled Backups component Registry register Component new Site Admin Operations Site Admin Operations class get Name true Rolling Upgrade Manager always added registered component Registry register Component new Rolling Upgrade Manager Rolling Upgrade Manager class get Name true Override public construct Class component Type throw new Unsupported Operation Exception never invoked bootstrap factory
package org registry impl import java lang invoke Method Handles import java util Enum Set import java util Set import java util concurrent Concurrent Map import org Cache import org commons util Collection Factory import org commons util concurrent Concurrent Hash Set import org configuration cache Configuration import org configuration cache Configuration Builder import org configuration global Global Configuration import org factories annotations Inject import org manager Embedded Cache Manager import org registry Internal Cache Registry import org util logging Log import org util logging Log Factory Internal Cache Registry Impl author Tristan Tarrant since public class Internal Cache Registry Impl implements Internal Cache Registry private static final Log log Log Factory get Log Method Handles lookup lookup Class private Embedded Cache Manager cache Manager private final Concurrent Map String Enum Set Flag internal Caches Collection Factory make Bounded Concurrent Map private final Set String private Caches new Concurrent Hash Set Inject public void init Embedded Cache Manager cache Manager cache Manager cache Manager Override public void register Internal Cache String name Configuration configuration register Internal Cache name configuration Enum Set none Flag class Synchronized prevent users registering configuration time Override public synchronized void register Internal Cache String name Configuration configuration Enum Set Flag flags boolean config Present cache Manager get Cache Configuration name null check already defined Currently n support existing user defined configuration flags contains Flag internal Caches contains Key name config Present throw log existing Config Internal Cache name n redefine config Present return Configuration Builder builder new Configuration Builder read configuration builder jmx Statistics disable Internal caches must included stats counts Global Configuration global Configuration cache Manager get Cache Manager Configuration flags contains Flag global Configuration global State enabled builder persistence add Single File Store location global Configuration global State persistent Location purge Startup false preload true fetch Persistent State true Security Actions define Configuration cache Manager name builder build internal Caches put name flags flags contains Flag private Caches add name Override public synchronized void unregister Internal Cache String name Internal Cache name Cache Object Object cache cache Manager get Cache name false cache null cache stop internal Caches remove name private Caches remove name Security Actions undefine Configuration cache Manager name Override public boolean Internal Cache String name return internal Caches contains Key name Override public boolean Private Cache String name return private Caches contains name Override public Set String get Internal Cache Names return internal Caches key Set Override public void filter Private Caches Set String names names remove private Caches Override public boolean internal Cache Flag String name Flag flag Enum Set Flag flags internal Caches get name return flags null flags contains flag
package org container import org container entries Cache Entry import org container entries Immortal Cache Entry import org container entries Immortal Cache Value import org container entries Internal Cache Entry import org container entries Internal Cache Value import org container entries Internal Cache Entry import org container entries Mortal Cache Entry import org container entries Mortal Cache Value import org container entries Transient Cache Entry import org container entries Transient Cache Value import org container entries Transient Mortal Cache Entry import org container entries Transient Mortal Cache Value import org container entries metadata Metadata Internal Cache Entry import org container entries metadata Metadata Immortal Cache Entry import org container entries metadata Metadata Immortal Cache Value import org container entries metadata Metadata Mortal Cache Entry import org container entries metadata Metadata Mortal Cache Value import org container entries metadata Metadata Transient Cache Entry import org container entries metadata Metadata Transient Cache Value import org container entries metadata Metadata Transient Mortal Cache Entry import org container entries metadata Metadata Transient Mortal Cache Value import org container versioning Entry Version import org container versioning Entry Versions Map import org context Invocation Context import org context impl Tx Invocation Context import org factories annotations Inject import org metadata Embedded Metadata import org metadata Metadata import org util Time Service implementation generates non versioned entries author Manik Surtani since public class Internal Entry Factory Impl implements Internal Entry Factory private Time Service time Service Inject public void inject Time Service Time Service time Service time Service time Service Override public Internal Cache Entry create Object key Object value Metadata metadata long lifespan metadata null metadata lifespan long max Idle metadata null metadata max Idle Store Metadata metadata null lifespan max Idle return new Immortal Cache Entry key value lifespan max Idle return new Mortal Cache Entry key value lifespan time Service wall Clock Time lifespan max Idle return new Transient Cache Entry key value max Idle time Service wall Clock Time return new Transient Mortal Cache Entry key value max Idle lifespan time Service wall Clock Time else lifespan max Idle return new Metadata Immortal Cache Entry key value metadata lifespan max Idle return new Metadata Mortal Cache Entry key value metadata time Service wall Clock Time lifespan max Idle return new Metadata Transient Cache Entry key value metadata time Service wall Clock Time return new Metadata Transient Mortal Cache Entry key value metadata time Service wall Clock Time Override public Internal Cache Entry create Cache Entry cache Entry return create cache Entry get Key cache Entry get Value cache Entry get Metadata cache Entry get Lifespan cache Entry get Max Idle Override public Internal Cache Entry create Object key Object value Internal Cache Entry cache Entry return create key value cache Entry get Metadata cache Entry get Created cache Entry get Lifespan cache Entry get Last Used cache Entry get Max Idle Override public Internal Cache Entry create Object key Object value Entry Version version long created long lifespan long last Used long max Idle version null lifespan max Idle return new Immortal Cache Entry key value lifespan max Idle return new Mortal Cache Entry key value lifespan created lifespan max Idle return new Transient Cache Entry key value max Idle last Used return new Transient Mortal Cache Entry key value max Idle lifespan last Used created else metadata passed assumed embedded metadata Metadata metadata new Embedded Metadata Builder lifespan lifespan max Idle max Idle version version build lifespan max Idle return new Metadata Immortal Cache Entry key value metadata lifespan max Idle return new Metadata Mortal Cache Entry key value metadata created lifespan max Idle return new Metadata Transient Cache Entry key value metadata last Used return new Metadata Transient Mortal Cache Entry key value metadata last Used created Override public Internal Cache Entry create Object key Object value Metadata metadata long created long lifespan long last Used long max Idle Store Metadata metadata null lifespan max Idle return new Immortal Cache Entry key value lifespan max Idle return new Mortal Cache Entry key value lifespan created lifespan max Idle return new Transient Cache Entry key value max Idle last Used return new Transient Mortal Cache Entry key value max Idle lifespan last Used created else Metadata store take lifespan max Idle settings long meta Lifespan metadata lifespan long meta Max Idle metadata max Idle meta Lifespan meta Max Idle return new Metadata Immortal Cache Entry key value metadata meta Lifespan meta Max Idle return new Metadata Mortal Cache Entry key value metadata created meta Lifespan meta Max Idle return new Metadata Transient Cache Entry key value metadata last Used return new Metadata Transient Mortal Cache Entry key value metadata last Used created Override public Internal Cache Value create Value Cache Entry cache Entry Metadata metadata cache Entry get Metadata long lifespan cache Entry get Lifespan long max Idle cache Entry get Max Idle Store Metadata metadata null lifespan max Idle return new Immortal Cache Value cache Entry get Value lifespan max Idle return new Mortal Cache Value cache Entry get Value lifespan lifespan max Idle return new Transient Cache Value cache Entry get Value max Idle return new Transient Mortal Cache Value cache Entry get Value lifespan max Idle else lifespan max Idle return new Metadata Immortal Cache Value cache Entry get Value cache Entry get Metadata lifespan max Idle return new Metadata Mortal Cache Value cache Entry get Value cache Entry get Metadata lifespan max Idle return new Metadata Transient Cache Value cache Entry get Value cache Entry get Metadata return new Metadata Transient Mortal Cache Value cache Entry get Value cache Entry get Metadata Override need public Internal Cache Entry create Object key Object value Metadata metadata long lifespan long max Idle Store Metadata metadata null lifespan max Idle return new Immortal Cache Entry key value lifespan max Idle return new Mortal Cache Entry key value lifespan time Service wall Clock Time lifespan max Idle return new Transient Cache Entry key value max Idle time Service wall Clock Time return new Transient Mortal Cache Entry key value max Idle lifespan time Service wall Clock Time else Metadata store take lifespan max Idle settings long meta Lifespan metadata lifespan long meta Max Idle metadata max Idle meta Lifespan meta Max Idle return new Metadata Immortal Cache Entry key value metadata meta Lifespan meta Max Idle return new Metadata Mortal Cache Entry key value metadata time Service wall Clock Time meta Lifespan meta Max Idle return new Metadata Transient Cache Entry key value metadata time Service wall Clock Time return new Metadata Transient Mortal Cache Entry key value metadata time Service wall Clock Time Override public Internal Cache Entry update Internal Cache Entry ice Metadata metadata Store Metadata metadata ice return update Metadata Unaware Entry ice metadata lifespan metadata max Idle else return update Metadata Aware Entry ice metadata Override public Internal Cache Entry update Internal Cache Entry cache Entry Object value Metadata metadata Update value metadata atomically attempt get copy cache entry also acquire lock avoid returning partially applied cache entry updates synchronized cache Entry cache Entry set Value value Internal Cache Entry original cache Entry cache Entry update cache Entry metadata instance need reincarnate mortal cache Entry get Lifespan original cache Entry cache Entry reincarnate time Service wall Clock Time return cache Entry Override public Cache Entry copy Cache Entry cache Entry synchronized cache Entry return cache Entry clone Override public Internal Cache Entry create key value Metadata metadata Store Metadata metadata null return new Internal Cache Entry key value metadata lifespan time Service wall Clock Time else return new Metadata Internal Cache Entry key value metadata time Service wall Clock Time Override public Internal Cache Value get Value Ctx Create New Object key Invocation Context ctx Cache Entry entry ctx lookup Entry key entry instanceof Internal Cache Entry return Internal Cache Entry entry Internal Cache Value else ctx Tx Scope Entry Versions Map updated Versions Tx Invocation Context ctx get Cache Transaction get Updated Entry Versions updated Versions null Entry Version version updated Versions get entry get Key version null Metadata metadata entry get Metadata metadata null metadata passed assumed embedded metadata metadata new Embedded Metadata Builder lifespan entry get Lifespan max Idle entry get Max Idle version version build return create entry get Key entry get Value metadata Internal Cache Value else metadata metadata builder version version build return create entry get Key entry get Value metadata Internal Cache Value return create entry Internal Cache Value private Internal Cache Entry update Metadata Unaware Entry Internal Cache Entry ice long lifespan long max Idle ice instanceof Immortal Cache Entry lifespan max Idle return ice else return new Transient Cache Entry ice get Key ice get Value max Idle time Service wall Clock Time else max Idle return new Mortal Cache Entry ice get Key ice get Value lifespan time Service wall Clock Time else long ctm time Service wall Clock Time return new Transient Mortal Cache Entry ice get Key ice get Value max Idle lifespan ctm ctm else ice instanceof Mortal Cache Entry lifespan max Idle return new Immortal Cache Entry ice get Key ice get Value else return new Transient Cache Entry ice get Key ice get Value max Idle time Service wall Clock Time else max Idle Mortal Cache Entry ice set Lifespan lifespan return ice else long ctm time Service wall Clock Time return new Transient Mortal Cache Entry ice get Key ice get Value max Idle lifespan ctm ctm else ice instanceof Transient Cache Entry lifespan max Idle return new Immortal Cache Entry ice get Key ice get Value else Transient Cache Entry ice set Max Idle max Idle return ice else max Idle return new Mortal Cache Entry ice get Key ice get Value lifespan time Service wall Clock Time else long ctm time Service wall Clock Time return new Transient Mortal Cache Entry ice get Key ice get Value max Idle lifespan ctm ctm else ice instanceof Transient Mortal Cache Entry lifespan max Idle return new Immortal Cache Entry ice get Key ice get Value else return new Transient Cache Entry ice get Key ice get Value max Idle time Service wall Clock Time else max Idle return new Mortal Cache Entry ice get Key ice get Value lifespan time Service wall Clock Time else Transient Mortal Cache Entry transient Mortal Entry Transient Mortal Cache Entry ice transient Mortal Entry set Lifespan lifespan transient Mortal Entry set Max Idle max Idle return ice return ice private Internal Cache Entry update Metadata Aware Entry Internal Cache Entry ice Metadata metadata long lifespan metadata lifespan long max Idle metadata max Idle ice instanceof Metadata Immortal Cache Entry lifespan max Idle ice set Metadata metadata return ice else return new Metadata Transient Cache Entry ice get Key ice get Value metadata time Service wall Clock Time else max Idle return new Metadata Mortal Cache Entry ice get Key ice get Value metadata time Service wall Clock Time else long ctm time Service wall Clock Time return new Metadata Transient Mortal Cache Entry ice get Key ice get Value metadata ctm ctm else ice instanceof Metadata Mortal Cache Entry lifespan max Idle return new Metadata Immortal Cache Entry ice get Key ice get Value metadata else return new Metadata Transient Cache Entry ice get Key ice get Value metadata time Service wall Clock Time else max Idle ice set Metadata metadata return ice else long ctm time Service wall Clock Time return new Metadata Transient Mortal Cache Entry ice get Key ice get Value metadata ctm ctm else ice instanceof Metadata Transient Cache Entry lifespan max Idle return new Metadata Immortal Cache Entry ice get Key ice get Value metadata else ice set Metadata metadata return ice else max Idle return new Metadata Mortal Cache Entry ice get Key ice get Value metadata time Service wall Clock Time else long ctm time Service wall Clock Time return new Metadata Transient Mortal Cache Entry ice get Key ice get Value metadata ctm ctm else ice instanceof Metadata Transient Mortal Cache Entry lifespan max Idle return new Metadata Immortal Cache Entry ice get Key ice get Value metadata else return new Metadata Transient Cache Entry ice get Key ice get Value metadata time Service wall Clock Time else max Idle return new Metadata Mortal Cache Entry ice get Key ice get Value metadata time Service wall Clock Time else ice set Metadata metadata return ice return ice Indicates whether entire metadata object needs stored check done avoid keeping entire metadata object around lifespan max Idle time stored information needs stored e version metadata object embedded one keep entire metadata object around return true entire metadata object needs stored otherwise simply store lifespan max Idle existing cache entries private boolean Store Metadata Metadata metadata Internal Cache Entry ice return metadata null ice null Entry Metadata Aware ice metadata version null metadata instanceof Embedded Metadata private boolean Entry Metadata Aware Internal Cache Entry ice return ice instanceof Metadata Immortal Cache Entry ice instanceof Metadata Mortal Cache Entry ice instanceof Metadata Transient Cache Entry ice instanceof Metadata Transient Mortal Cache Entry
package org interceptors impl import static org commons util Util Str import java util Collection import java util Collections import javax transaction Status import javax transaction System Exception import javax transaction Transaction import org Invalid Cache Usage Exception import org commands Flag Affected Command import org commands Visitable Command import org commands control Lock Control Command import org commands tx Transaction Boundary Command import org commands write Write Command import org commons Cache Exception import org context Invocation Context import org context impl Flag Bit Sets import org context impl Tx Invocation Context import org factories Component Registry import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org interceptors Base Async Interceptor import org interceptors Invocation Exception Function import org lifecycle Component Status import org manager Cache Container import org statetransfer Outdated Topology Exception import org transaction Write Skew Exception import org transaction impl Abstract Cache Transaction import org transaction impl Transaction Table import org util User Raised Functional Exception import org util logging Log import org util logging Log Factory author Mircea Markus jboss com author Galder Zamarre since public class Invocation Context Interceptor extends Base Async Interceptor private Component Registry component Registry private Transaction Table tx Table private static final Log log Log Factory get Log Invocation Context Interceptor class private static final boolean trace log Trace Enabled private volatile boolean shutting false private final Invocation Exception Function suppress Exceptions Handler new Invocation Exception Function Override public Object apply Invocation Context r Ctx Visitable Command r Command Throwable throwable throws Throwable throwable instanceof Invalid Cache Usage Exception throwable instanceof Interrupted Exception throw throwable throwable instanceof User Raised Functional Exception throw throwable get Cause else rethrow Exception r Ctx r Command throwable Ignore exception return r Command instanceof Lock Control Command Boolean null Start priority private void set Start Status shutting false Stop priority private void set Stop Status shutting true Inject public void init Component Registry component Registry Transaction Table tx Table component Registry component Registry tx Table tx Table Override public Object visit Command Invocation Context ctx Visitable Command command throws Throwable trace log tracef Invoked command Invocation Context command ctx ctx null throw new Illegal State Exception Null context allowed Component Status status component Registry get Status status allow Invocations ignore Command ctx command status return invoke Next Exceptionally ctx command suppress Exceptions Handler private void ignore Command Invocation Context ctx Visitable Command command Component Status status throws Exception switch status case case throw log cache Terminated get Cache Name Prefix status String case stopping Allowed status ctx throw log cache Stopping get Cache Name Prefix default Allow command run private void rethrow Exception Invocation Context ctx Visitable Command command Throwable th throws Throwable check fail silently failure boolean suppress Exceptions command instanceof Flag Affected Command Flag Affected Command command Flag Flag Bit Sets shutting every possibility invocation fails suppress Exceptions suppress Exceptions shutting suppress Exceptions shutting log trace Exception executing code shutting failing silently th else log trace Exception executing code failing silently th else th instanceof Write Skew Exception log rather see log debug Exception executing call th else th instanceof Outdated Topology Exception trace log tracef Topology changed retrying command th else Collection affected Keys extract Written Keys ctx command log execution Error command get Class get Simple Name Str affected Keys th ctx Tx Scope ctx Origin Local trace log trace Transaction marked rollback exception received mark Tx Rollback ctx ctx Origin Local th instanceof Cache Exception th new Cache Exception th throw th private Collection extract Written Keys Invocation Context ctx Visitable Command command command instanceof Write Command return Write Command command get Affected Keys else command instanceof Lock Control Command return Collections empty List else command instanceof Transaction Boundary Command return Tx Invocation Context Abstract Cache Transaction ctx get Affected Keys return Collections empty List private String get Cache Name Prefix String cache Name component Registry get Cache Name String prefix Cache cache Name cache Name equals Cache Container prefix Default cache return prefix cache non transaction invocations transactional invocations transaction others ongoing ones allowed method returns true circumstances meet Otherwise returns false private boolean stopping Allowed Component Status status Invocation Context ctx throws Exception return status Stopping ctx Tx Scope Ongoing Transaction ctx private void mark Tx Rollback Invocation Context ctx throws Throwable ctx Origin Local ctx Tx Scope Transaction transaction Tx Invocation Context ctx get Transaction transaction null Valid Running Tx transaction transaction set Rollback private boolean Valid Running Tx Transaction tx throws Exception int status try status tx get Status catch System Exception e throw new Cache Exception Unexpected e return status Status private boolean Ongoing Transaction Invocation Context ctx throws System Exception ctx Tx Scope return false ctx Origin Local return tx Table contains Local Tx Tx Invocation Context ctx get Global Transaction else return tx Table contain Remote Tx Tx Invocation Context ctx get Global Transaction
package org marshall core import java io Exception import java io Object Output import java util function Bi Consumer import org commons marshall Advanced Externalizer import org commons marshall Serialize import org commons marshall Streaming Marshaller import org commons marshall jboss Abstract Boss Marshaller import org commons marshall jboss Default Context Class Resolver import org commons marshall jboss Serialize Ext Factory import org configuration global Global Configuration import org jboss marshalling Class Resolver import org jboss marshalling Externalize import org jboss marshalling Object Table import org jboss marshalling Unmarshaller Boss Marshalling based marshaller oriented internal embedded usage uses custom object table based Externalizer instances either internal user defined p reason implemented specially rather resorting Java serialization even efficient Boss serialization lot efficiency gained majority serialization occurs small set known types link org transaction xa Global Transaction link org commands Replicable Command class type information replaced simple magic numbers p Unknown types typically user data falls back Java serialization author Galder Zamarre author Sanne Grinovero since public class Boss Marshaller extends Abstract Boss Marshaller implements Streaming Marshaller final Global Configuration global Cfg final Global Marshaller marshaller public Boss Marshaller global Cfg null marshaller null public Boss Marshaller Global Marshaller marshaller Global Configuration global Cfg global Cfg global Cfg marshaller marshaller Override public void start super start base Cfg set Class Externalizer Factory new Serialize Ext Factory base Cfg set Object Table new Object Table Override public Writer get Object Writer Object object throws Exception Bi Consumer Object Output Object writer marshaller find Writer object return writer null writer accept null Override public Object read Object Unmarshaller unmarshaller throws Exception Class Found Exception Advanced Externalizer Object ext marshaller find Externalizer unmarshaller return ext read Object unmarshaller Class Resolver class Resolver global Cfg serialization class Resolver class Resolver null Override class resolver one detect injected classloaders via Advanced Cache Class Loader calls Class Loader cl global Cfg class Loader class Resolver new Default Context Class Resolver cl base Cfg set Class Resolver class Resolver Override public void stop super stop case avoid leaking class resolver references classloader base Cfg set Class Resolver null Override public boolean Marshallable Candidate Object return super Marshallable Candidate get Class get Annotation Serialize class null get Class get Annotation Externalize class null
package org remoting transport jgroups import java io Exception import java io Object Input import java io Object Output import java util Set import org commons marshall Instance Reusing Advanced Externalizer import org commons util Util import org marshall core Ids import org remoting transport Address encapsulation Groups Address author Manik Surtani since public class Groups Address implements Address protected final org jgroups Address address private final int hash Code public Groups Address final org jgroups Address address address null throw new Illegal Argument Exception Address shall null address address hash Code address hash Code Override public boolean equals final Object return true null get Class get Class return false Groups Address Groups Address return hash Code hash Code address equals address Override public int hash Code return hash Code Override public String String return String value address public org jgroups Address get Groups Address return address Override public int compare Address Groups Address oa Groups Address return address compare oa address public static final class Externalizer extends Instance Reusing Advanced Externalizer Groups Address public Externalizer super false Override public void Write Object Object Output output Groups Address address throws Exception try org jgroups util Util write Address address address output catch Exception e throw new Exception e Override public Groups Address Read Object Object Input unmarshaller throws Exception Class Found Exception try Note Use org jgroups Address concrete class Otherwise applications use local caches would bundle Groups jar verifier needs check arguments Groups Address even method never called org jgroups Address address org jgroups util Util read Address unmarshaller return Groups Address Groups Address Cache Groups Address address catch Exception e throw new Exception e Override public Integer get Id return Ids Override public Set Class extends Groups Address get Type Classes return Util Class extends Groups Address Set Groups Address class
package org remoting transport jgroups import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import org jgroups Address import org jgroups util Extended import org jgroups util Name Cache Cache Groups Address instances author Dan Berindei since public class Groups Address Cache private static final Concurrent Map Address Groups Address address Cache new Concurrent Hash Map public static org remoting transport Address Groups Address Address jgroups Address New entries rarely added added startup compute Absent synchronizes every time Groups Address ispn Address address Cache get jgroups Address ispn Address null return ispn Address return address Cache compute Absent jgroups Address uuid jgroups Address instanceof Extended return new Groups Topology Aware Address Extended jgroups Address else return new Groups Address jgroups Address static void prune Address Cache Prune Groups addresses Local Ds longer cache address cache address Cache address ignore Name Cache get address null address Cache remove address
package org remoting transport jgroups import java io Exception import java io Object Input import java io Object Output import java util Arrays import java util Collections import java util Set import org commons marshall Instance Reusing Advanced Externalizer import org marshall core Ids import org remoting transport Topology Aware Address import org jgroups util Extended import org jgroups util Name Cache import org jgroups util Util encapsulation Groups link Extended site id rack id machine id author Bela Ban since public class Groups Topology Aware Address extends Groups Address implements Topology Aware Address private static final byte Util string Bytes site id private static final byte Util string Bytes rack id private static final byte Util string Bytes machine id public static Extended random String name String site Id String rack Id String machine Id Extended uuid Extended random name name null Name Cache add uuid name add Id uuid site Id add Id uuid rack Id add Id uuid machine Id return uuid private static void add Id Extended uuid byte key String string Value string Value null uuid put key Util string Bytes string Value public Groups Topology Aware Address Extended address super address Override public String get Site Id return get String Override public String get Rack Id return get String Override public String get Machine Id return get String public boolean matches String site Id String rack Id String machine Id return check Component site Id check Component rack Id check Component machine Id Override public boolean Site Topology Aware Address addr addr instanceof Groups Topology Aware Address Extended Groups Topology Aware Address addr topology Address return check Component return check Component addr get Site Id Override public boolean Rack Topology Aware Address addr addr instanceof Groups Topology Aware Address Extended Groups Topology Aware Address addr topology Address return check Component check Component return check Component addr get Site Id check Component addr get Rack Id Override public boolean Machine Topology Aware Address addr addr instanceof Groups Topology Aware Address Extended Groups Topology Aware Address addr topology Address return check Component check Component check Component return check Component addr get Site Id check Component addr get Rack Id check Component addr get Machine Id private boolean check Component byte key Extended uuid return check Component key uuid get key private boolean check Component byte key String string Value return check Component key Util string Bytes string Value private boolean check Component byte key byte expected Value return Arrays equals get Bytes key expected Value private String get String byte key return Util bytes String get Bytes key private byte get Bytes byte key return topology Address get key private Extended topology Address return Extended address public static final class Externalizer extends Instance Reusing Advanced Externalizer Groups Topology Aware Address public Externalizer super false Override public void Write Object Object Output output Groups Topology Aware Address address throws Exception try org jgroups util Util write Address address address output catch Exception e throw new Exception e Override public Groups Topology Aware Address Read Object Object Input unmarshaller throws Exception Class Found Exception try org jgroups Address jgroups Address org jgroups Address org jgroups util Util read Address unmarshaller Note Use org jgroups Address concrete class Otherwise applications use local caches would bundle Groups jar verifier needs check arguments Groups Address even method never called return Groups Topology Aware Address Groups Address Cache Groups Address jgroups Address catch Exception e throw new Exception e Override public Set Class extends Groups Topology Aware Address get Type Classes return Collections singleton Groups Topology Aware Address class Override public Integer get Id return Ids
package org remoting transport jgroups import static org remoting transport jgroups Groups Address Cache Groups Address import static org util logging Log Factory import java io Byte Array Input Stream import java io Exception import java net import java util Array List import java util Arrays import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Objects import java util Properties import java util Set import java util concurrent Completable Future import java util concurrent Execution Exception import java util concurrent Executor import java util concurrent Executor Service import java util concurrent Future import java util concurrent Scheduled Executor Service import java util concurrent Time Unit import java util concurrent locks Condition import java util concurrent locks Lock import java util concurrent locks Reentrant Lock import java util function Function import java util stream Collectors import javax management Bean Server import javax management Object Name import org Illegal Lifecycle State Exception import org commands Flag Affected Command import org commands Replicable Command import org commons Cache Configuration Exception import org commons Cache Exception import org commons io Byte Buffer import org commons marshall Streaming Marshaller import org commons util File Lookup import org commons util File Lookup Factory import org commons util Typed Properties import org commons util Util import org configuration global Global Configuration import org configuration global Transport Configuration import org configuration global Transport Configuration Builder import org configuration parsing Xml Config Helper import org context impl Flag Bit Sets import org factories Known Component Names import org factories annotations Component Name import org factories annotations Inject import org jmx Jmx Util import org notifications cachemanagerlistener Cache Manager Notifier import org remoting inboundhandler Deliver Order import org remoting inboundhandler Inbound Invocation Handler import org remoting inboundhandler Reply import org remoting responses Cache Found Response import org remoting responses Exception Response import org remoting responses Response import org remoting responses Successful Response import org remoting rpc Response Filter import org remoting rpc Response Mode import org remoting transport Abstract Request import org remoting transport Address import org remoting transport Backup Response import org remoting transport impl Filter Map Response Collector import org remoting transport impl Multi Target Request import org remoting transport Request import org remoting transport impl Request Repository import org remoting transport Response Collector import org remoting transport Transport import org remoting transport impl Single Target Request import org util Time Service import org util concurrent Completable Futures import org util logging Log import org util logging Log Factory import org xsite Site Backup import org xsite Site Replicate Command import org jgroups Anycast Address import org jgroups Event import org jgroups Header import org jgroups Channel import org jgroups Merge View import org jgroups Message import org jgroups Receiver import org jgroups Handler import org jgroups View import org jgroups blocks Request Correlator import org jgroups conf Class Configurator import org jgroups jmx Jmx Configurator import org jgroups protocols relay import org jgroups protocols relay Route Status Listener import org jgroups protocols relay Site Address import org jgroups protocols relay Site Master import org jgroups protocols tom import org jgroups util Extended import org jgroups util Message Batch encapsulation Groups transport Groups transports configured using variety methods usually passing one following properties ul li tt configuration String tt Groups configuration String li li tt configuration Xml tt Groups configuration String li li tt configuration File tt String pointing Groups configuration file li li tt channel Lookup tt Fully qualified class name link Groups Channel Lookup instance li ul normally passed Properties link Transport Configuration Builder Properties Properties configuration file author Manik Surtani author Galder Zamarre since public class Groups Transport implements Transport public static final String configuration String public static final String configuration Xml public static final String configuration File public static final String channel Lookup public static final short short Message Flag value Message Flag value Message Flag value protected static final String default configs default jgroups udp xml private static final Log log Log Factory get Log Groups Transport class private static final boolean trace log Trace Enabled private static final Completable Future Map Address Response Completable Future completed Future Collections empty Map private static final Response Collector Map Address Response new Singleton Map Response Collector false private static final Response Collector Map Address Response new Singleton Map Response Collector true private static final short short private static final short Class Configurator get Protocol Id Request Correlator class private static final byte private static final byte private static final byte private final Lock view Update Lock new Reentrant Lock private final Condition view Update Condition view Update Lock new Condition private final Thread Pool Probe Handler probe Handler private final Channel Callbacks channel Callbacks new Channel Callbacks protected boolean connect Channel true disconnect Channel true close Channel true protected Global Configuration configuration protected Typed Properties props protected Streaming Marshaller marshaller protected Cache Manager Notifier notifier protected Time Service time Service protected Inbound Invocation Handler invocation Handler protected Scheduled Executor Service timeout Executor protected Executor remote Executor protected Channel channel protected Address address protected Address physical Address members valid received first view second thread channel Connected Latch signaled protected volatile Cluster View cluster View new Cluster View Cluster View Collections empty List null private volatile Set String sites View Collections empty Set private Completable Future Void next View Future new Completable Future private Request Repository requests Lifecycle setup stuff private boolean global Stats Enabled private Bean Server mbean Server private String domain form used transport created external source passed Global Configuration param channel created running channel use public Groups Transport Channel channel channel channel channel null throw new Illegal Argument Exception deal null channel channel Connected throw new Illegal Argument Exception Channel passed already connected probe Handler new Thread Pool Probe Handler public Groups Transport probe Handler new Thread Pool Probe Handler private static List org jgroups Address Groups Address List Collection Address addresses addresses null return null return addresses stream map Groups Transport Groups Address collect Collectors List Initializes transport global cache configuration transport specific properties Inject public void initialize Global Configuration configuration Streaming Marshaller marshaller Cache Manager Notifier notifier Time Service time Service Inbound Invocation Handler global Handler Component Name Known Component Names Scheduled Executor Service timeout Executor Component Name Known Component Names Executor Service remote Executor configuration configuration marshaller marshaller notifier notifier time Service time Service invocation Handler global Handler timeout Executor timeout Executor remote Executor remote Executor probe Handler update Thread Pool remote Executor Override public Map Address Response invoke Remotely Collection Address recipients Replicable Command command Response Mode mode long timeout Response Filter response Filter Deliver Order deliver Order boolean anycast throws Exception Completable Future Map Address Response future invoke Remotely Async recipients command mode timeout response Filter deliver Order anycast try need set timeout future rpc invocation guaranteed complete within timeout milliseconds return Completable Futures await future catch Execution Exception e throw Util rewrap Cache Exception e get Cause Override public Completable Future Map Address Response invoke Remotely Async Collection Address recipients Replicable Command command Response Mode mode long timeout Response Filter response Filter Deliver Order deliver Order boolean anycast recipients null recipients Empty n send recipients list empty log tracef Destination list empty need send command command return Cluster View view cluster View List Address local Members view get Members int members Size local Members size boolean ignore Leavers mode Response Mode mode Response Mode boolean total Order deliver Order Deliver Order boolean send Staggered Request mode Response Mode deliver Order Deliver Order recipients null recipients size timeout boolean rsvp Rsvp Command command Never allow switch anycast broadcast broadcast unicast still keeping option switch case forcing broadcast node replicated cache impacts performance significantly case may need use close Connection instead boolean broadcast recipients null total Order recipients null members Size n send recipients list empty log tracef cluster single node need broadcast command command return Address single Target compute Single Target recipients local Members members Size broadcast total Order total Order address equals single Target log tracef Skipping request self command command return mode Asynchronous Asynchronous Send message n wait responses return perform Async Remote Invocation recipients command deliver Order rsvp broadcast single Target Collection Address actual Targets broadcast local Members recipients assert single Target null actual Targets null return perform Sync Remote Invocation actual Targets command mode timeout response Filter deliver Order ignore Leavers send Staggered Request broadcast single Target Override public void send Address destination Replicable Command command Deliver Order deliver Order throws Exception destination equals address removed require Non Null throw case trace log trace send sending self return send Command destination command Request deliver Order Rsvp Command command true Override public void send Many Collection Address targets Replicable Command command Deliver Order deliver Order throws Exception targets null send Command command Request deliver Order false else send Command targets command Request deliver Order false Override public Map Address Response invoke Remotely Map Address Replicable Command commands Response Mode mode long timeout boolean use Priority Queue Response Filter response Filter boolean total Order boolean anycast throws Exception Deliver Order deliver Order Deliver Order total Order deliver Order Deliver Order else use Priority Queue deliver Order Deliver Order return invoke Remotely commands mode timeout response Filter deliver Order anycast Override public Map Address Response invoke Remotely Map Address Replicable Command commands Response Mode mode long timeout Response Filter response Filter Deliver Order deliver Order boolean anycast throws Exception commands null commands Empty n send recipients list empty log trace Destination list empty need send message return Collections empty Map mode Synchronous Sync Map Response Collector collector new Sync Map Response Collector false commands size Completable Future Map Address Response request invoke Commands commands key Set commands get collector timeout deliver Order try return Completable Futures await request catch Execution Exception e throw Util rewrap Cache Exception e get Cause else commands command send Command command Request deliver Order Rsvp Command command true return Collections empty Map Override public Backup Response backup Remotely Collection Site Backup backups Site Replicate Command command throws Exception trace log tracef send backups command backups command boolean rsvp Rsvp Command command Map Site Backup Future Response sync Backup Calls new Hash Map backups size Site Backup xsb backups Address recipient Groups Address Cache Groups Address new Site Master xsb get Site Name xsb Sync long timeout xsb get Timeout long request Id requests new Request Id Single Site Request Response request new Single Site Request Passthrough Single Response Collector request Id requests xsb get Site Name add Request request try send Command recipient command request get Request Id Deliver Order rsvp false timeout request set Timeout timeout Executor timeout Time Unit catch Throwable request cancel true throw sync Backup Calls put xsb request else send Command recipient command Request Deliver Order false false return new Groups Backup Response sync Backup Calls time Service Override public boolean Coordinator return cluster View Coordinator Override public Address get Coordinator return cluster View get Coordinator Override public Address get Address return address Override public List Address get Physical Addresses physical Address null channel null org jgroups Address addr org jgroups Address channel new Event Event channel get Address addr null return Collections empty List physical Address new Groups Address addr return Collections singleton List physical Address Override public List Address get Members return cluster View get Members Override public boolean Multicast Capable return channel get Protocol Stack get Transport supports Multicasting Override public void start props Typed Properties Typed Properties configuration transport properties requests new Request Repository log Info Enabled log starting Groups Channel configuration transport cluster Name init Channel channel set Receiver channel Callbacks set Site View Listener channel Callbacks set Site Master Picker new Site Master Picker Impl start Groups Channel Needed wait Initial Nodes channel get Protocol Stack get Transport register Probe Handler probe Handler protected void init Channel final Transport Configuration transport Cfg configuration transport channel null build Channel connect Channel change name channel Lookup already connected channel String transport Node Name transport Cfg node Name transport Node Name null transport Node Name length long range Short long random Range long Math random range range transport Node Name transport Node Name random Range channel set Name transport Node Name Channel must set false n see messages otherwise invalidations targeted remote instances received self total order needs deliver messages invoke Remotely method total order boolean false discard messages maintaining property needed channel set Discard Messages false Topology Aware Consistent Hash need set address generator Groups transport Cfg Topology Info channel n started already connect Channel channel add Address Generator Groups Topology Aware Address random channel get Name transport Cfg site Id transport Cfg rack Id transport Cfg machine Id else org jgroups Address jgroups Address channel get Address jgroups Address instanceof Extended Groups Topology Aware Address address new Groups Topology Aware Address Extended jgroups Address address matches transport Cfg site Id transport Cfg rack Id transport Cfg machine Id throw new Cache Exception Topology information match one set provided Groups channel else throw new Cache Exception Groups address contain topology coordinates private void set Site View Listener Route Status Listener listener relay channel get Protocol Stack find Protocol class relay null relay set Route Status Listener listener private void set Site Master Picker Site Master Picker Impl site Master Picker relay channel get Protocol Stack find Protocol class relay null relay site Master Picker site Master Picker private void start Groups Channel Needed String cluster Name configuration transport cluster Name connect Channel try channel connect cluster Name catch Exception e throw new Cache Exception Unable start Groups Channel e try Normally would done Cache Manager Jmx Registration channel started cache manager starts first cache starts safer global Stats Enabled configuration global Jmx Statistics enabled global Stats Enabled String group Name String format type channel cluster Object Name quote cluster Name mbean Server Jmx Util lookup Bean Server configuration domain Jmx Util build Jmx Domain configuration mbean Server group Name Jmx Configurator register Channel channel mbean Server domain cluster Name true catch Exception e throw new Cache Exception Channel connected unable register Beans e connect Channel channel already started externally need initialize member list receive Cluster View channel get View log Info Enabled log local Physical Address cluster Name get Address get Physical Addresses private void wait Initial Nodes int initial Cluster Size configuration transport initial Cluster Size initial Cluster Size return long timeout configuration transport initial Cluster Timeout long remaining Nanos Time Unit Nanos timeout view Update Lock lock try channel null channel get View get Members size initial Cluster Size remaining Nanos log debugf Waiting nodes current view initial Cluster Size channel get View get Members size remaining Nanos view Update Condition await Nanos remaining Nanos catch Interrupted Exception e log interrupted Waiting Coordinator e Thread current Thread interrupt finally view Update Lock unlock remaining Nanos throw log timeout Waiting Initial Nodes initial Cluster Size channel get View get Members log debugf Initial cluster size nodes reached initial Cluster Size per use private void build Channel File Lookup file Lookup File Lookup Factory new Instance order preference first look external Groups file set properties finally legacy Groups String properties String cfg props null props contains Key String channel Lookup Class Name props get Property try Groups Channel Lookup lookup Util get Instance channel Lookup Class Name configuration class Loader channel lookup get Groups Channel props connect Channel lookup Connect disconnect Channel lookup Disconnect close Channel lookup Close catch Class Cast Exception e log wrong Type Groups Channel Lookup channel Lookup Class Name e throw new Cache Exception e catch Exception e log error Instantiating Groups Channel Lookup channel Lookup Class Name e throw new Cache Exception e channel null props contains Key cfg props get Property Collection confs Collections empty List try confs file Lookup lookup File Locations cfg configuration class Loader catch Exception io ignore check confs later various states confs Empty throw log jgroups Configuration Found cfg else confs size log ambiguous Configuration Files Util Str confs try channel new Channel confs iterator next catch Exception e throw log error Creating Channel Config File cfg e channel null props contains Key cfg props get Property try channel new Channel Xml Config Helper string Element cfg catch Exception e throw log error Creating Channel cfg e channel null props contains Key cfg props get Property try channel new Channel new Byte Array Input Stream cfg get Bytes catch Exception e throw log error Creating Channel Config String cfg e channel null log unable Use Groups Properties Provided props try channel new Channel file Lookup lookup File Location configuration class Loader catch Exception e throw log error Creating Channel Config File e protected void receive Cluster View View new View first view installed returning Channel connect need set local address address null address Groups Address channel get Address List List Address sub Groups new View instanceof Merge View received Merged View channel cluster Name new View sub Groups new Array List List View jgroups Sub Groups Merge View new View get Subgroups View group jgroups Sub Groups sub Groups add Groups Address List group get Members else received Cluster View channel cluster Name new View sub Groups Collections empty List long view Id new View get View Id get Id List Address members Groups Address List new View get Members members Empty return Cluster View old View cluster View Update every view related field holding lock wait View returns everything updated Completable Future Void old Future null view Update Lock lock try Delta view debug log large cluster log Debug Enabled old View get Members null List Address joined new Array List members joined remove old View get Members List Address left new Array List old View get Members left remove members log debugf Joined Left joined left cluster View new Cluster View int view Id members address Create completable future new view old Future next View Future next View Future new Completable Future Wake threads waiting know Coordinator notifications listener throws exception still start view Update Condition signal finally view Update Lock unlock Complete future old view old Future null Completable Future Void future old Future remote Executor execute future complete null notify listeners updating Coordinator boolean Notifier notifier null Notifier sub Groups Empty final Address address get Address notifier notify Merge members old View get Members address int view Id sub Groups else notifier notify View Change members old View get Members get Address int view Id Targets leaving may finish requests potentially potentially block long time n want block view handling unblock commands separate thread remote Executor execute requests request request New View cluster View get Members Set Groups Address Cache prune Address Cache private static List Address Groups Address List List org jgroups Address list return Collections unmodifiable List list stream map Groups Address Cache Groups Address collect Collectors List Override public void stop channel null channel get Protocol Stack get Transport unregister Probe Handler probe Handler String cluster Name configuration transport cluster Name try disconnect Channel channel null channel Connected log disconnect Groups cluster Name Unregistering disconnecting closing cluster name null global Stats Enabled Jmx Configurator unregister Channel channel mbean Server domain channel get Cluster Name channel disconnect close Channel channel null channel Open channel close catch Exception Log log problem Closing Channel Log cluster Name requests null requests request request cancel log cache Manager Stopping channel null address null cluster View new Cluster View Cluster View Collections empty List null requests null Completable Future Void old Future null view Update Lock lock try Create completable future new view old Future next View Future next View Future new Completable Future Wake threads blocked wait View view Update Condition signal finally view Update Lock unlock finally complete future old view old Future null old Future complete null Override public int get View Id channel null throw new Cache Exception cache stopped invocations allowed return cluster View get View Id Override public Completable Future Void View int expected View Id Cluster View view cluster View view View Id Least expected View Id return Completable Futures completed Null trace log tracef Waiting transaction data view current view expected View Id view get View Id view Update Lock lock try view cluster View view View Id Least Cluster View throw new Illegal Lifecycle State Exception else view View Id Least expected View Id return Completable Futures completed Null else return next View Future Compose nil View expected View Id finally view Update Lock unlock Override public void wait View int view Id throws Interrupted Exception channel null return log tracef Waiting view accepted view Id long remaining Nanos Long view Update Lock lock try channel null get View Id view Id remaining Nanos remaining Nanos view Update Condition await Nanos remaining Nanos finally view Update Lock unlock Override public Log get Log return log Override public final void check Total Order Supported replicated distributed tx caches use total order protocol channel get Protocol Stack find Protocol class null throw new Cache Configuration Exception order support total order based transaction protocol must present Groups config Override public Set String get Sites View return sites View Override public Completable Future invoke Command Address target Replicable Command command Response Collector collector Deliver Order deliver Order long timeout Time Unit unit long request Id requests new Request Id Single Target Request request new Single Target Request collector request Id requests target add Request request send Command target command request Id deliver Order Rsvp Command command true timeout request set Timeout timeout Executor timeout unit return request Override public Completable Future invoke Command Collection Address targets Replicable Command command Response Collector collector Deliver Order deliver Order long timeout Time Unit unit long request Id requests new Request Id Address excluded Target deliver Order Deliver Order null get Address Multi Target Request request new Multi Target Request collector request Id requests targets excluded Target try add Request request send Command targets command request Id deliver Order Rsvp Command command catch Throwable request cancel true throw timeout request set Timeout timeout Executor timeout unit return request Override public Completable Future invoke Command Replicable Command command Response Collector collector Deliver Order deliver Order long timeout Time Unit unit long request Id requests new Request Id Address excluded Target deliver Order Deliver Order null get Address Multi Target Request request new Multi Target Request collector request Id requests cluster View get Members excluded Target try add Request request send Command command request Id deliver Order Rsvp Command command catch Throwable request cancel true throw timeout request set Timeout timeout Executor timeout unit return request Override public Completable Future invoke Command Staggered Collection Address targets Replicable Command command Response Collector collector Deliver Order deliver Order long timeout Time Unit unit long request Id requests new Request Id Staggered Request request new Staggered Request collector request Id requests targets get Address command deliver Order timeout unit try add Request request request send Next Message catch Throwable request cancel true throw return request Override public Completable Future invoke Commands Collection Address targets Function Address Replicable Command command Generator Response Collector response Collector long timeout Deliver Order deliver Order long request Id request Id requests new Request Id Address excluded Target get Address Multi Target Request request new Multi Target Request response Collector request Id requests targets excluded Target add Request request try Address target targets Replicable Command command command Generator apply target boolean rsvp Rsvp Command command send Command target command request Id deliver Order rsvp true catch Throwable request cancel true throw timeout request set Timeout timeout Executor timeout Time Unit return request private void add Request Abstract Request request try requests add Request request request New View cluster View get Members Set catch Throwable Removes request scheduled task necessary request cancel true throw void send Command Address target Replicable Command command long request Id Deliver Order deliver Order boolean rsvp boolean Relay Message message new Message Groups Address target marshall Request message command request Id set Message Flags message deliver Order rsvp Relay trace log Command command request Id target String send message private static boolean Rsvp Command Replicable Command command return command instanceof Flag Affected Command Flag Affected Command command Flag Flag Bit Sets private static org jgroups Address Groups Address Address address return Groups Address address get Groups Address private void marshall Request Message message Replicable Command command long request Id try Byte Buffer bytes marshaller object Buffer command message set Buffer bytes get Buf bytes get Offset bytes get Length add Request Header message request Id catch Runtime Exception e throw e catch Exception e throw new Runtime Exception Failure marshal argument e private static void set Message Flags Message message Deliver Order deliver Order boolean rsvp boolean Relay Relay message set Flag Message Flag value short flags encode Deliver Mode deliver Order message set Flag flags commands total order must received originator deliver Order Deliver Order message set Transient Flag Message Transient Flag value rsvp message set Flag Message Flag value private void log Command Replicable Command command long request Id String targets request Id Request log tracef sending request address request Id targets command else log tracef sending command address targets command private void send Message message try channel send message catch Exception e channel Connected throw new Cache Exception e else throw log cache Manager Stopping private void add Request Header Message message long request Id Remove header store request id buffer request Id Request Header header new Request Correlator Header request Id message put Header header private static short encode Deliver Mode Deliver Order deliver Order switch deliver Order case return Message Flag value case return Message Flag value case return short Message Flag value Message Flag value default throw new Illegal Argument Exception Unsupported deliver mode deliver Order return single target address code null multiple targets private Address compute Single Target Collection Address targets List Address local Members int members Size boolean broadcast boolean total Order Address single Target broadcast total Order single Target null else targets null broadcast means eliminated members Size members Size possibilities assert members Size single Target local Members get equals address local Members get local Members get else targets size single Target targets iterator next else single Target null return single Target private Completable Future Map Address Response perform Async Remote Invocation Collection Address recipients Replicable Command command Deliver Order deliver Order boolean rsvp boolean broadcast Address single Target broadcast send Command command Request deliver Order rsvp else single Target null send Command single Target command Request deliver Order rsvp true else send Command recipients command Request deliver Order rsvp return private Completable Future Map Address Response perform Sync Remote Invocation Collection Address targets Replicable Command command Response Mode mode long timeout Response Filter response Filter Deliver Order deliver Order boolean ignore Leavers boolean send Staggered Request boolean broadcast Address single Target Completable Future Map Address Response request send Staggered Request Filter Map Response Collector collector new Filter Map Response Collector response Filter false targets size request invoke Command Staggered targets command collector deliver Order timeout Time Unit else single Target null Response Collector Map Address Response collector ignore Leavers request invoke Command single Target command collector deliver Order timeout Time Unit else Response Collector Map Address Response collector mode Response Mode collector new Filter Map Response Collector response Filter false targets size else response Filter null collector new Filter Map Response Collector response Filter true targets size else collector new Sync Map Response Collector ignore Leavers targets size broadcast request invoke Command command collector deliver Order timeout Time Unit else request invoke Command targets command collector deliver Order timeout Time Unit return request public void send Replicable Command command Deliver Order deliver Order throws Exception send Command command Request deliver Order false Send command entire cluster n send command unless code deliver Order private void send Command Replicable Command command long request Id Deliver Order deliver Order boolean rsvp Message message new Message marshall Request message command request Id set Message Flags message deliver Order rsvp true deliver Order Deliver Order message dest new Anycast Address trace log Command command request Id send message public Channel get Channel return channel private void update Sites View Collection String sites Collection String sites view Update Lock lock try Set String reachable Sites new Hash Set sites View reachable Sites add sites reachable Sites remove sites log tracef Sites view changed new view sites sites reachable Sites log received Site Cluster View reachable Sites sites View Collections unmodifiable Set reachable Sites finally view Update Lock unlock private void site Unreachable String site requests request request instanceof Single Site Request Single Site Request request sites Unreachable Collections singleton site Send command multiple targets n send command unless code deliver Order private void send Command Collection Address targets Replicable Command command long request Id Deliver Order deliver Order boolean rsvp Objects require Non Null targets Message message new Message marshall Request message command request Id set Message Flags message deliver Order rsvp true trace log Command command request Id targets String deliver Order Deliver Order message dest new Anycast Address Groups Address List targets send message else Iterator Address targets iterator send Skipping Self message next Next Message copy message copy true send Skipping Self copy next private void send Skipping Self Message message Address address address equals get Address message dest Groups Address address send message Time Service get Time Service return time Service Scheduled Executor Service get Timeout Executor return timeout Executor private void process Message Message message org jgroups Address src message src short flags message get Flags byte buffer message raw Buffer int offset message offset int length message length Request Correlator Header header message get Header byte type long request Id header null type header type request Id header request Id else type request Id Request address null trace log tracef Ignoring message received initial view type send Response src Cache Found Response request Id null return switch type case case process Request src flags buffer offset length request Id break case process Response src buffer offset length request Id break default log invalid Message Type type src private void send Response org jgroups Address target Response response long request Id Replicable Command command trace log tracef sending response request get Address request Id target response Byte Buffer bytes Channel channel channel channel null Avoid Es stop return try bytes marshaller object Buffer response catch Throwable try call succeed exceptions serializable Exception e instanceof Exception Exception new Cache Exception bytes marshaller object Buffer new Exception Response e catch Throwable tt channel Connected log error Sending Response request Id target command return try Message message new Message target set Flag message set Buffer bytes get Buf bytes get Offset bytes get Length Request Correlator Header header new Request Correlator Header request Id message put Header header channel send message catch Throwable channel Connected log error Sending Response request Id target command private void process Request org jgroups Address src short flags byte buffer int offset int length long request Id try Deliver Order deliver Order decode Deliver Mode flags Replicable Command command Replicable Command marshaller object Byte Buffer buffer offset length Reply reply request Id Request trace log tracef received request get Address request Id src command reply response send Response src response request Id command else trace log tracef received command get Address src command reply Reply src instanceof Site Address String origin Site Site Address src get Site Site Replicate Command command set Origin Site origin Site invocation Handler handle Remote Site origin Site Site Replicate Command command reply deliver Order else invocation Handler handle Cluster Groups Address src command reply deliver Order catch Throwable log error Processing Request request Id src Exception e instanceof Exception Exception new Cache Exception send Response src new Exception Response e request Id null private void process Response org jgroups Address src byte buffer int offset int length long request Id try Response response length Empty buffer signals Fork Channel name running remote node response Cache Found Response else response Response marshaller object Byte Buffer buffer offset length response null response Successful Response trace log tracef received response request get Address request Id src response Address address Groups Address src requests add Response request Id address response catch Throwable log error Processing Response request Id src private Deliver Order decode Deliver Mode short flags boolean Total Order Message Flag Set flags Message Flag boolean oob Message Flag Set flags Message Flag Total Order oob return Deliver Order else Total Order oob return Deliver Order else Total Order oob set point total order flag return Deliver Order throw new Illegal Argument Exception Unable decode order flags flags private class Channel Callbacks implements Receiver Route Status Listener Handler Override public void view Accepted View new view receive Cluster View new view Override public void sites String sites update Sites View Arrays List sites Collections empty List Override public void sites String sites update Sites View Collections empty List Arrays List sites Override public void receive Message message process Message message Override public void receive Message Batch batch batch message messages process Message message Override public Object Event evt switch evt get Type case Event site Unreachable evt get Arg break return null Override public Object Message msg return null Override public void Message Batch batch
package org jmx import java util Set import javax management Instance Already Exists Exception import javax management Bean Server import javax management Malformed Object Name Exception import javax management Object Instance import javax management Object Name import org commons Cache Exception import org configuration global Global Configuration import org util logging Log import org util logging Log Factory Class containing related utility methods author Galder Zamarre since public class Jmx Util private static final Log log Log Factory get Log Jmx Util class private static final boolean trace log Trace Enabled Looks link javax management Bean Server instance based configuration parameters param cfg configuration instance indicating lookup link javax management Bean Server return instance link javax management Bean Server public static Bean Server lookup Bean Server Global Configuration cfg Bean Server Lookup lookup cfg global Jmx Statistics mbean Server Lookup return lookup get Bean Server cfg global Jmx Statistics properties Build domain name param cfg configuration instance containig rules domains allowed param Bean Server link javax management Bean Server check whether domain allowed param group Name String containing group name Bean return string combines allowed domain group name public static String build Jmx Domain Global Configuration cfg Bean Server Bean Server String group Name String jmx Domain find Jmx Domain cfg global Jmx Statistics domain Bean Server group Name String config Jmx Domain cfg global Jmx Statistics domain jmx Domain equals config Jmx Domain cfg global Jmx Statistics allow Duplicate Domains throw log jmx Bean Already Registered group Name config Jmx Domain return jmx Domain Register given dynamic Bean param mbean Dynamic Bean register param object Name link javax management Object Name register Bean param Bean Server link javax management Bean Server store Bean throws Exception registration could completed public static void register Bean Object mbean Object Name object Name Bean Server Bean Server throws Exception Bean Server Registered object Name try Security Actions register Bean mbean object Name Bean Server log tracef Registered mbean object Name catch Instance Already Exists Exception e might happen multiple instances trying concurrently register object Name log could Register Object Name object Name e else log debugf Object name already registered object Name Unregister Bean located given link javax management Object Name param object Name link javax management Object Name Bean registered param Bean Server link javax management Bean Server unregister Bean throws Exception unregistration could completed public static void unregister Bean Object Name object Name Bean Server Bean Server throws Exception Bean Server Registered object Name Security Actions unregister Bean object Name Bean Server log tracef Unregistered object Name Unregister mbeans whose object names match given filter param filter Object Name style formatted filter param Bean Server mbean server unregister mbeans return number mbeans unregistered public static int unregister Beans String filter Bean Server Bean Server try Object Name filter Obj Name new Object Name filter Set Object Instance mbeans Bean Server query Beans filter Obj Name null Object Instance mbean mbeans Object Name name mbean get Object Name trace log trace Unregistering mbean name name Security Actions unregister Bean name Bean Server return mbeans size catch Exception e throw new Cache Exception Unable register mbeans filter filter e private static String find Jmx Domain String jmx Domain Bean Server Bean Server String group Name int index String final Name jmx Domain boolean done false done done true try Object Name target Name new Object Name final Name group Name Security Actions query Names target Name null Bean Server size final Name jmx Domain index done false catch Malformed Object Name Exception e throw new Cache Exception Unable check duplicate names e return final Name
package org notifications cachelistener filter import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Objects import java util Set import org commons marshall Abstract Externalizer import org factories Component Registry import org factories annotations Inject import org filter Key Filter import org marshall core Ids import org metadata Metadata Cache Event Filter implements filtering solely use provided Key Filter author wburns since public class Key Filter Cache Event Filter implements Cache Event Filter Object private final Key Filter super filter public Key Filter Cache Event Filter Key Filter super filter filter Objects require Non Null filter Override public boolean accept key Object old Value Metadata old Metadata Object new Value Metadata new Metadata Event Type event Type return filter accept key Inject protected void inject Dependencies Component Registry cr cr wire Dependencies filter public static class Externalizer extends Abstract Externalizer Key Filter Cache Event Filter Override public Set Class extends Key Filter Cache Event Filter get Type Classes return Collections singleton Key Filter Cache Event Filter class Override public void write Object Object Output output Key Filter Cache Event Filter object throws Exception output write Object object filter Override public Key Filter Cache Event Filter read Object Object Input input throws Exception Class Found Exception return new Key Filter Cache Event Filter Key Filter input read Object Override public Integer get Id return Ids
package org filter import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import org commons marshall Abstract Externalizer import org factories Component Registry import org factories annotations Inject import org marshall core Ids import org metadata Metadata Key Value Filter implements filtering solely use provided Key Filter author wburns since public class Key Filter Key Value Filter implements Key Value Filter private final Key Filter super filter public Key Filter Key Value Filter Key Filter super filter filter null throw new Null Pointer Exception filter filter Override public boolean accept key value Metadata metadata return filter accept key Inject protected void inject Dependencies Component Registry cr cr wire Dependencies filter public static class Externalizer extends Abstract Externalizer Key Filter Key Value Filter Override public Set Class extends Key Filter Key Value Filter get Type Classes return Collections singleton Key Filter Key Value Filter class Override public void write Object Object Output output Key Filter Key Value Filter object throws Exception output write Object object filter Override public Key Filter Key Value Filter read Object Object Input input throws Exception Class Found Exception return new Key Filter Key Value Filter Key Filter input read Object Override public Integer get Id return Ids
package org distribution ch impl import org distribution ch Key Partitioner import org distribution group impl Group Manager import org distribution group impl Grouping Partitioner import org factories Abstract Named Cache Component Factory import org factories Auto Instantiable Factory import org factories annotations Default Factory import org factories annotations Inject Key partitioner factory uses hash function defined configuration future probably remove hash function configuration leave key partitioner author Dan Berindei since Default Factory classes Key Partitioner class public class Key Partitioner Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory private Group Manager group Manager Inject public void inject Group Manager group Manager group Manager group Manager Override public construct Class component Type Key Partitioner partitioner configuration clustering hash key Partitioner partitioner init configuration clustering hash group Manager null return component Type cast partitioner Grouping enabled Since configured partitioner registered component registry need inject dependencies explicitly component Registry wire Dependencies partitioner Grouping Partitioner grouping Partitioner new Grouping Partitioner partitioner group Manager return component Type cast grouping Partitioner
package org filter import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import org commons marshall Abstract Externalizer import org factories Component Registry import org factories annotations Inject import org marshall core Ids Key Filter utilizes given link org filter Key Value Filter determine filter key Note filter passed null value metadata every pass author wburns since public class Key Value Filter Key Filter implements Key Filter private final Key Value Filter super filter public Key Value Filter Key Filter Key Value Filter super filter filter filter Override public boolean accept key return filter accept key null null Inject protected void inject Dependencies Component Registry cr cr wire Dependencies filter public static class Externalizer extends Abstract Externalizer Key Value Filter Key Filter Override public Set Class extends Key Value Filter Key Filter get Type Classes return Collections singleton Key Value Filter Key Filter class Override public void write Object Object Output output Key Value Filter Key Filter object throws Exception output write Object object filter Override public Key Value Filter Key Filter read Object Object Input input throws Exception Class Found Exception return new Key Value Filter Key Filter Key Value Filter input read Object Override public Integer get Id return Ids
package org factories import java util Arrays import java util Collection import java util Hash Map import java util Map Holder known named component names used link org factories annotations Component Name annotation author Manik Surtani since public class Known Component Names public static final String org executors transport public static final String org executors remote public static final String org executors notification public static final String org executors persistence public static final String org executors expiration deprecated Since longer used Deprecated public static final String org executors replication Queue public static final String org modules command initializers public static final String org modules command factories public static final String java lang Class Loader public static final String org executors state Transfer Executor public static final String org transaction version Generator public static final String org executors async public static final String org executors timeout public static final String org Cache Dependency Graph Please make sure kept date public static final Collection String Arrays List private static final Map String Integer new Hash Map private static final Map String Integer new Hash Map private static final Map String Integer new Hash Map static put put put put put put put put put put put put put put put Thread put Thread put Thread put Thread put Thread put Thread put Thread put Thread public static int get Default Threads String component Name return get component Name public static int get Default Thread Prio String component Name return get component Name public static int get Default Queue Size String component Name return get component Name public static String shortened String cn int dot Index cn last Index int dot Index Plus One dot Index String cname cn dot Index Plus One cn length cname shortened cn substring cn length else dot Index cn length dot Index Plus One cname cn substring dot Index Plus One cname thread return cname
package org configuration cache import java util concurrent Time Unit import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set Configures cache behavior distributed caches instances cache modes element ignored public class Configuration public static final Attribute Definition Boolean Attribute Definition builder enabled false immutable auto Persist false build public static final Attribute Definition Integer Attribute Definition builder invalidation Threshold immutable auto Persist false build public static final Attribute Definition Long Attribute Definition builder lifespan Time Unit Millis xml Name l lifespan immutable build public static final Attribute Definition Long Attribute Definition builder cleanup Task Frequency Time Unit Millis xml Name l cleanup interval immutable build static Attribute Set attribute Definition Set return new Attribute Set Configuration class private final Attribute Boolean enabled private final Attribute Integer invalidation Threshold private final Attribute Long lifespan private final Attribute Long cleanup Task Frequency private final Attribute Set attributes Configuration Attribute Set attributes attributes attributes check Protection enabled attributes attribute invalidation Threshold attributes attribute lifespan attributes attribute cleanup Task Frequency attributes attribute public boolean enabled return enabled get p Determines whether multicast web unicasts used performing invalidations p p default multicast used p p threshold set unicasts always used threshold set multicast always used p public int invalidation Threshold return invalidation Threshold get Determines often cleanup thread runs clean internal log requestors specific key public long cleanup Task Frequency return cleanup Task Frequency get Maximum lifespan entry placed cache Default minutes public long lifespan return lifespan get public Attribute Set attributes return attributes Override public String String return Configuration attributes attributes Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Configuration Configuration obj attributes null attributes null return false else attributes equals attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result
package org configuration cache import static org configuration cache Configuration import static org configuration cache Configuration import static org configuration cache Configuration import static org configuration cache Configuration import java util concurrent Time Unit import org commons configuration Builder import org commons configuration attributes Attribute Set import org configuration global Global Configuration import org util logging Log import org util logging Log Factory Configures cache behavior distributed caches instances cache modes element ignored public class Configuration Builder extends Abstract Clustering Configuration Child Builder implements Builder Configuration private final static Log log Log Factory get Log Configuration Builder class Log class private final Attribute Set attributes Configuration Builder Clustering Configuration Builder builder super builder attributes Configuration attribute Definition Set p Determines whether multicast web unicasts used performing invalidations p p default multicast used p p threshold set unicasts always used threshold set multicast always used p param invalidation Threshold threshold use multicast public Configuration Builder invalidation Threshold int invalidation Threshold attributes attribute set invalidation Threshold return Maximum lifespan entry placed cache public Configuration Builder lifespan long lifespan attributes attribute set lifespan return Maximum lifespan entry placed cache public Configuration Builder lifespan long lifespan Time Unit unit return lifespan unit Millis lifespan often requestors map cleaned stale items public Configuration Builder cleanup Task Frequency long frequency Millis attributes attribute set frequency Millis return often requestors map cleaned stale items public Configuration Builder cleanup Task Frequency long frequency Millis Time Unit unit return cleanup Task Frequency unit Millis frequency Millis public Configuration Builder enable attributes attribute set true return public Configuration Builder disable attributes attribute set false return public Configuration Builder enabled boolean enabled attributes attribute set enabled return Override public void validate attributes attribute get clustering cache Mode Distributed throw log l Distributed Cache clustering cache Mode friendly Cache Mode String attributes attribute get throw log l Invalid Lifespan Override public void validate Global Configuration global Config Override public Configuration create return new Configuration attributes protect Override public Configuration Builder read Configuration template attributes read template attributes return Override public String String return Configuration Builder attributes attributes
package org executors import java util Collection import java util Collections import java util List import java util concurrent Callable import java util concurrent Execution Exception import java util concurrent Executor Service import java util concurrent Future import java util concurrent Thread Factory import java util concurrent Time Unit import java util concurrent Timeout Exception import org commons executors Thread Pool Executor Factory import org util Time Service import org util concurrent Blocking Runnable import org util concurrent Blocking Task Aware Executor Service import org util concurrent Blocking Task Aware Executor Service Impl delegating executor lazily constructs initializes underlying executor author Pedro Ruivo since public final class Lazy Initializing Blocking Task Aware Executor Service implements Blocking Task Aware Executor Service private final Thread Pool Executor Factory Executor Service executor Factory private final Thread Factory thread Factory private final Time Service time Service private final String controller Thread Name private volatile Blocking Task Aware Executor Service delegate public Lazy Initializing Blocking Task Aware Executor Service Thread Pool Executor Factory Executor Service executor Factory Thread Factory thread Factory Time Service time Service String controller Thread Name executor Factory executor Factory thread Factory thread Factory time Service time Service controller Thread Name controller Thread Name Override public void execute Blocking Runnable runnable init Needed delegate execute runnable Override public void check Ready Tasks delegate null delegate check Ready Tasks Override public void shutdown delegate null delegate shutdown Override public List Runnable shutdown delegate null return Collections empty List else return delegate shutdown Override public boolean Shutdown return delegate null delegate Shutdown Override public boolean Terminated return delegate null delegate Terminated Override public boolean await Termination long timeout Time Unit unit throws Interrupted Exception delegate null return true else return delegate await Termination timeout unit Override public Future submit Callable task init Needed return delegate submit task Override public Future submit Runnable task result init Needed return delegate submit task result Override public Future submit Runnable task init Needed return delegate submit task Override public List Future invoke Collection extends Callable tasks throws Interrupted Exception init Needed return delegate invoke tasks Override public List Future invoke Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception init Needed return delegate invoke tasks timeout unit Override public invoke Collection extends Callable tasks throws Interrupted Exception Execution Exception init Needed return delegate invoke tasks Override public invoke Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception Execution Exception Timeout Exception init Needed return delegate invoke tasks timeout unit Override public void execute Runnable command init Needed delegate execute command public Blocking Task Aware Executor Service get Executor Service return delegate private void init Needed delegate null synchronized delegate null delegate new Blocking Task Aware Executor Service Impl controller Thread Name executor Factory create Executor thread Factory time Service
package org executors import java util Collection import java util Collections import java util List import java util concurrent Callable import java util concurrent Execution Exception import java util concurrent Executor Service import java util concurrent Future import java util concurrent Thread Factory import java util concurrent Time Unit import java util concurrent Timeout Exception import org commons executors Thread Pool Executor Factory delegating executor lazily constructs initializes underlying executor since unused executors expensive author Manik Surtani since public final class Lazy Initializing Executor Service implements Executor Service private volatile Executor Service delegate private final Thread Pool Executor Factory Executor Service executor Factory private final Thread Factory thread Factory public Lazy Initializing Executor Service Thread Pool Executor Factory Executor Service executor Factory Thread Factory thread Factory executor Factory executor Factory thread Factory thread Factory private void init Needed delegate null synchronized delegate null delegate executor Factory create Executor thread Factory Override public void shutdown delegate null delegate shutdown Override public List Runnable shutdown delegate null return Collections empty List else return delegate shutdown Override public boolean Shutdown return delegate null delegate Shutdown Override public boolean Terminated return delegate null delegate Terminated Override public boolean await Termination long timeout Time Unit unit throws Interrupted Exception delegate null return true else return delegate await Termination timeout unit Override public Future submit Callable task init Needed return delegate submit task Override public Future submit Runnable task result init Needed return delegate submit task result Override public Future submit Runnable task init Needed return delegate submit task Override public List Future invoke Collection extends Callable tasks throws Interrupted Exception init Needed return delegate invoke tasks Override public List Future invoke Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception init Needed return delegate invoke tasks timeout unit Override public invoke Collection extends Callable tasks throws Interrupted Exception Execution Exception init Needed return delegate invoke tasks Override public invoke Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception Execution Exception Timeout Exception init Needed return delegate invoke tasks timeout unit Override public void execute Runnable command init Needed delegate execute command
package org executors import java util Collection import java util Collections import java util List import java util concurrent Callable import java util concurrent Execution Exception import java util concurrent Future import java util concurrent Scheduled Executor Service import java util concurrent Scheduled Future import java util concurrent Thread Factory import java util concurrent Time Unit import java util concurrent Timeout Exception import org commons executors Thread Pool Executor Factory delegating scheduled executor lazily constructs initializes underlying scheduled executor since unused executors expensive author Manik Surtani since public class Lazy Initializing Scheduled Executor Service implements Scheduled Executor Service private volatile Scheduled Executor Service delegate private final Thread Pool Executor Factory Scheduled Executor Service executor Factory private final Thread Factory thread Factory public Lazy Initializing Scheduled Executor Service Thread Pool Executor Factory Scheduled Executor Service executor Factory Thread Factory thread Factory executor Factory executor Factory thread Factory thread Factory private void init Needed delegate null synchronized delegate null delegate executor Factory create Executor thread Factory Override public void shutdown delegate null delegate shutdown Override public List Runnable shutdown delegate null return Collections empty List else return delegate shutdown Override public boolean Shutdown return delegate null delegate Shutdown Override public boolean Terminated return delegate null delegate Terminated Override public boolean await Termination long timeout Time Unit unit throws Interrupted Exception delegate null return true else return delegate await Termination timeout unit Override public Future submit Callable task init Needed return delegate submit task Override public Future submit Runnable task result init Needed return delegate submit task result Override public Future submit Runnable task init Needed return delegate submit task Override public List Future invoke Collection extends Callable tasks throws Interrupted Exception init Needed return delegate invoke tasks Override public List Future invoke Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception init Needed return delegate invoke tasks timeout unit Override public invoke Collection extends Callable tasks throws Interrupted Exception Execution Exception init Needed return delegate invoke tasks Override public invoke Collection extends Callable tasks long timeout Time Unit unit throws Interrupted Exception Execution Exception Timeout Exception init Needed return delegate invoke tasks timeout unit Override public void execute Runnable command init Needed delegate execute command Override public Scheduled Future schedule Runnable command long delay Time Unit unit init Needed return delegate schedule command delay unit Override public Scheduled Future schedule Callable callable long delay Time Unit unit init Needed return delegate schedule callable delay unit Override public Scheduled Future schedule Fixed Rate Runnable command long initial Delay long period Time Unit unit init Needed return delegate schedule Fixed Rate command initial Delay period unit Override public Scheduled Future schedule Fixed Delay Runnable command long initial Delay long delay Time Unit unit init Needed return delegate schedule Fixed Delay command initial Delay delay unit
package org persistence remote import java util Map import org commons marshall Advanced Externalizer import org configuration global Global Configuration import org factories Global Component Registry import org lifecycle Module Lifecycle import org persistence remote upgrade Migration Task import org persistence remote upgrade Removed Filter author gustavonalle since public class Lifecycle Callbacks implements Module Lifecycle Override public void cache Manager Starting Global Component Registry gcr Global Configuration global Cfg Map Integer Advanced Externalizer externalizer Map global Cfg serialization advanced Externalizers externalizer Map put Externalizer Ids new Migration Task Externalizer externalizer Map put Externalizer Ids new Removed Filter Externalizer
package org notifications import java lang annotation Element Type import java lang annotation Retention import java lang annotation Retention Policy import java lang annotation Target Class level annotation used annotate object valid cache listener Used link org Cache add Listener Object related p Note even class annotated annotation still needs method level annotation link org notifications cachemanagerlistener annotation Cache Started actually receive notifications p Objects annotated annotation listeners attached running link org Cache users notified link org Cache events p p multiple methods annotated receive event method may receive multiple events using super type p p h Delivery Semantics h p event delivered immediately respective operation underlying cache call returns reason important keep listener processing logic short lived long running task needs performed recommended use another thread p p h Transactional Semantics h p Since event delivered actual cache call transactional outcome yet known reason events always delivered even changes represent discarded containing transaction applications must process events represent changes completed transaction link org notifications cachelistener event Transactional Event get Global Transaction used along link org notifications cachelistener event Transaction Completed Event Transaction Successful record events later process transaction successfully committed Example demonstrates p p h Threading Semantics h p listener implementation must capable handling concurrent invocations Local notifications reuse calling thread remote notifications reuse network thread p p Since notifications reuse calling network thread important realise listener implementation blocks performs long running task original caller triggered cache event may block listener callback completes therefore good idea use listener notified event perform long running tasks separate thread block original caller p p addition locks acquired operation performed still held callback needs kept mind locks may held longer necessary intended may cause deadlocking certain situations See paragraph long running tasks run separate thread p b Note b tt sync tt parameter annotation defaults tt true tt provides semantics Alternatively set tt sync tt tt false tt invocations made separate thread cause blocking caller network thread separate thread taken pool configured using link org config Global Configuration set Async Listener Executor Properties java util Properties link org config Global Configuration set Async Listener Executor Factory Class String p b Summary Notification Annotations b table border cellpadding cellspacing summary Summary notification annotations tr th bgcolor align left Annotation th th bgcolor align left Event th th bgcolor align left Description th tr tr td valign top link org notifications cachemanagerlistener annotation Cache Started td td valign top link org notifications cachemanagerlistener event Cache Started Event td td valign top cache started td tr tr td valign top link org notifications cachemanagerlistener annotation Cache Stopped td td valign top link org notifications cachemanagerlistener event Cache Stopped Event td td valign top cache stopped td tr tr td valign top link org notifications cachelistener annotation Cache Entry Modified td td valign top link org notifications cachelistener event Cache Entry Modified Event td td valign top cache entry modified td tr tr td valign top link org notifications cachelistener annotation Cache Entry Created td td valign top link org notifications cachelistener event Cache Entry Created Event td td valign top cache entry created td tr tr td valign top link org notifications cachelistener annotation Cache Entry Removed td td valign top link org notifications cachelistener event Cache Entry Removed Event td td valign top cache entry removed td tr tr td valign top link org notifications cachelistener annotation Cache Entry Visited td td valign top link org notifications cachelistener event Cache Entry Visited Event td td valign top cache entry visited td tr tr td valign top link org notifications cachelistener annotation Cache Entry Loaded td td valign top link org notifications cachelistener event Cache Entry Loaded Event td td valign top cache entry loaded td tr tr td valign top link org notifications cachelistener annotation Cache Entries Evicted td td valign top link org notifications cachelistener event Cache Entries Evicted Event td td valign top cache entries evicted td tr tr td valign top link org notifications cachelistener annotation Cache Entry Activated td td valign top link org notifications cachelistener event Cache Entry Activated Event td td valign top cache entry activated td tr tr td valign top link org notifications cachelistener annotation Cache Entry Passivated td td valign top link org notifications cachelistener event Cache Entry Passivated Event td td valign top One cache entries passivated td tr tr td valign top link org notifications cachemanagerlistener annotation View Changed td td valign top link org notifications cachemanagerlistener event View Changed Event td td valign top view change event detected td tr tr td valign top link org notifications cachelistener annotation Transaction Registered td td valign top link org notifications cachelistener event Transaction Registered Event td td valign top cache started participate transaction td tr tr td valign top link org notifications cachelistener annotation Transaction Completed td td valign top link org notifications cachelistener event Transaction Completed Event td td valign top cache completed participation transaction td tr tr td valign top link org notifications cachelistener annotation Cache Entry Invalidated td td valign top link org notifications cachelistener event Cache Entry Invalidated Event td td valign top cache entry invalidated remote cache cache mode td tr p table p h Example Method receiving single event h pre Listener public class Single Event Listener Cache Started public void Something Event event System println quot Cache started Details quot event pre p h Example Method receiving multiple events h pre Listener public class Multiple Event Listener Cache Started Cache Stopped public void Something Event event event get Type Event Type System println quot Cache started Details quot event else event get Type Event Type System println quot Cache stopped Details quot event pre p h Example Multiple methods receiving event h pre Listener public class Single Event Listener Cache Started public void handle Start Event event System println quot Cache started quot p Cache Started Cache Stopped Cache Blocked Cache Unblocked View Changed public void log Event Event event log System log Event event get Type pre p p b Example Processing events committed transaction b p pre Listener public class Event Handler private Concurrent Map lt Global Transaction Queue lt Event gt gt map new Concurrent Hash Map lt Global Transaction Queue lt Event gt gt Transaction Registered public void start Transaction Transaction Registered Event event map put event get Global Transaction new Concurrent Linked Queue lt Event gt Cache Entry Created Cache Entry Modified Cache Entry Removed public void add Event Transactional Event event map get event get Global Transaction add event Transaction Completed public void end Transaction Transaction Completed Event event Queue lt Event gt events map get event get Global Transaction map remove event get Global Transaction System println Ended transaction event get Global Transaction get Id event Transaction Successful Event e events System println Event e pre author href mailto manik jboss org Manik Surtani author Jason Greene see org notifications cachemanagerlistener annotation Cache Started see org notifications cachemanagerlistener annotation Cache Stopped see org notifications cachelistener annotation Cache Entry Modified see org notifications cachelistener annotation Cache Entry Created see org notifications cachelistener annotation Cache Entry Removed see org notifications cachelistener annotation Cache Entry Visited see org notifications cachelistener annotation Cache Entry Loaded see org notifications cachelistener annotation Cache Entries Evicted see org notifications cachelistener annotation Cache Entry Activated see org notifications cachelistener annotation Cache Entry Passivated see org notifications cachemanagerlistener annotation View Changed see org notifications cachelistener annotation Transaction Completed see org notifications cachelistener annotation Transaction Registered see org notifications cachelistener annotation Cache Entry Invalidated see org notifications cachelistener annotation Data Rehashed see org notifications cachelistener annotation Topology Changed since Retention Retention Policy Target Element Type public interface Listener Specifies whether callbacks class annotated annotation happens synchronously caller thread asynchronously using separate thread Defaults tt true tt return true expectation callbacks called using caller thread false made separate thread since boolean sync default true Specifies whether event fired primary data owner affected key nodes see update p Note value ignored link org notifications Listener clustered true return true expectation primary data owner fire event false nodes see update fire event since boolean primary default false Defines whether annotated listener clustered Important Clustered listener notified Cache Entry Removed Cache Entry Created Cache Entry Modified Cache Entry Expired events return true expectation listener cluster listener receive notifications data modifications since boolean clustered default false set true entire existing state within cluster evaluated existing matches value Cache Entry Created event triggered listener registration supported listener also link org notifications Listener clustered p using distributed clustered cache possible retrieve new events initial transfer completed handled since new events queued segment belongs completed iteration also help reduce memory strain since distributed clustered listener need eventually retrieve values cache return true expectation listener installed current data sent new events listener receiving new events since boolean include Current State default false Returns type observation level listener defines return observation level listener see Observation since Observation observation default Observation Enumeration defines listener event observed listener receive event operation occurred user wishes notified operation completes listener observe using link Observation level user wishes notified operation completes listener observe using link Observation level user wishes event observe using link Observation level enum Observation Observation level used notified operation completes Override public boolean Invoke boolean pre return pre Observation level used notified operation completed Override public boolean Invoke boolean pre return pre Observation level used notified operation occurs Override public boolean Invoke boolean pre return true public abstract boolean Invoke boolean pre
package org stream impl local import java util Comparator import java util Optional import java util Set import java util Spliterator import java util concurrent Time Unit import java util function Bi Consumer import java util function Bi Function import java util function Binary Operator import java util function Consumer import java util function Function import java util function Int Function import java util function Predicate import java util function Supplier import java util function Double Function import java util function Int Function import java util function Long Function import java util stream Collector import java util stream Double Stream import java util stream Int Stream import java util stream Long Stream import java util stream Stream import org Cache import org Cache Stream import org commons util Closeable Iterator import org commons util Closeables import org factories Component Registry import org stream Cache Aware import org stream impl intops Intermediate Operation import org stream impl intops object Distinct Operation import org stream impl intops object Filter Operation import org stream impl intops object Flat Map Operation import org stream impl intops object Flat Map Double Operation import org stream impl intops object Flat Map Int Operation import org stream impl intops object Flat Map Long Operation import org stream impl intops object Limit Operation import org stream impl intops object Map Operation import org stream impl intops object Map Double Operation import org stream impl intops object Map Int Operation import org stream impl intops object Map Long Operation import org stream impl intops object Peek Operation import org stream impl intops object Skip Operation import org stream impl intops object Sorted Comparator Operation import org stream impl intops object Sorted Operation import org util function Removable Function import org util function Serializable Supplier Cache Stream used locally allows full functionality regular stream also options filter keys functionality param type stream public class Local Cache Stream extends Abstract Local Cache Stream Stream Cache Stream implements Cache Stream public Local Cache Stream Stream Supplier Stream stream Supplier boolean parallel Component Registry registry super stream Supplier parallel registry public Local Cache Stream Abstract Local Cache Stream super Override public Local Cache Stream sequential Distribution return Override public Local Cache Stream parallel Distribution return Override public Local Cache Stream filter Key Segments Set Integer segments segments Filter segments return Override public Local Cache Stream filter Keys Set keys keys Filter keys return Override public Local Cache Stream distributed Batch Size int batch Size change cache loader return Override public Local Cache Stream segment Completion Listener Segment Completion Listener listener segments completed get Stream completed n track return Override public Local Cache Stream disable Rehash Aware Local stream n matter rehash return Override public Local Cache Stream filter Predicate super predicate registry wire Dependencies predicate intermediate Operations add new Filter Operation predicate return Override public Local Cache Stream map Function super extends mapper registry wire Dependencies mapper intermediate Operations add new Map Operation mapper return Local Cache Stream Override public Local Int Cache Stream map Int Int Function super mapper intermediate Operations add new Map Int Operation mapper return new Local Int Cache Stream Override public Local Long Cache Stream map Long Long Function super mapper intermediate Operations add new Map Long Operation mapper return new Local Long Cache Stream Override public Local Double Cache Stream map Double Double Function super mapper intermediate Operations add new Map Double Operation mapper return new Local Double Cache Stream Override public Local Cache Stream flat Map Function super extends Stream extends mapper intermediate Operations add new Flat Map Operation mapper return Local Cache Stream Override public Local Int Cache Stream flat Map Int Function super extends Int Stream mapper intermediate Operations add new Flat Map Int Operation mapper return new Local Int Cache Stream Override public Local Long Cache Stream flat Map Long Function super extends Long Stream mapper intermediate Operations add new Flat Map Long Operation mapper return new Local Long Cache Stream Override public Local Double Cache Stream flat Map Double Function super extends Double Stream mapper intermediate Operations add new Flat Map Double Operation mapper return new Local Double Cache Stream Override public Local Cache Stream distinct intermediate Operations add Distinct Operation get Instance return Override public Local Cache Stream sorted intermediate Operations add Sorted Operation get Instance return Override public Local Cache Stream sorted Comparator super comparator intermediate Operations add new Sorted Comparator Operation comparator return Override public Local Cache Stream peek Consumer super action intermediate Operations add new Peek Operation action return Override public Local Cache Stream limit long max Size intermediate Operations add new Limit Operation max Size return Override public Local Cache Stream skip long n intermediate Operations add new Skip Operation n return Override public void Consumer super action inject Cache action create Stream action Override public void Bi Consumer Cache super action Cache cache registry get Component Cache class registry wire Dependencies action create Stream e action accept cache e Override public void Ordered Consumer super action inject Cache action create Stream Ordered action Method inject cache consumer Note support consumer time param cache Aware instance may link Cache Aware private void inject Cache Consumer super cache Aware cache Aware instanceof Cache Aware Cache Aware cache Aware inject Cache registry get Component Cache class Override public Object Array return create Stream Array Override public Array Int Function generator return create Stream Array generator Override public reduce identity Binary Operator accumulator return create Stream reduce identity accumulator Override public Optional reduce Binary Operator accumulator return create Stream reduce accumulator Override public reduce identity Bi Function super accumulator Binary Operator combiner return create Stream reduce identity accumulator combiner Override public collect Supplier supplier Bi Consumer super accumulator Bi Consumer combiner return create Stream collect supplier accumulator combiner Override public collect Collector super collector return create Stream collect collector Override public collect Serializable Supplier Collector super supplier return create Stream collect supplier get Override public collect Supplier Collector super supplier return create Stream collect supplier get Override public Optional min Comparator super comparator return create Stream min comparator Override public Optional max Comparator super comparator return create Stream max comparator Override public long count return create Stream count Override public boolean Match Predicate super predicate return create Stream Match predicate Override public boolean Match Predicate super predicate return create Stream Match predicate Override public boolean none Match Predicate super predicate return create Stream none Match predicate Override public Optional find First return create Stream find First Override public Optional find return create Stream find Override public Closeable Iterator iterator int size intermediate Operations size size intermediate operations support remove return stream Supplier removable Iterator Closeables iterator create Stream else size Intermediate Operation int Op intermediate Operations peek int Op instanceof Map Operation Map Operation map Map Operation int Op map get Function instanceof Removable Function function removable means use remove return stream Supplier removable Iterator Closeables iterator create Stream return Closeables iterator create Stream Override public Spliterator spliterator return create Stream spliterator Override public Local Cache Stream timeout long timeout Time Unit unit Timeout nothing local cache stream return
package org persistence factory import org commons Cache Configuration Exception import org commons util Util import org configuration cache Store Configuration import org util logging Log import org util logging Log Factory Default implementation uses Local class loader external class loading allowed author Sebastian Laskawiec since public class Local Class Loader Cache Store Factory implements Cache Store Factory private static final Log log Log Factory get Log Local Class Loader Cache Store Factory class Override public create Instance Store Configuration cfg Class class Based Configuration Annotation Configuration Class Extractor get Class Based Configuration Annotation cfg log try get Instance heavily used refactoring might risky However safely catch ignore exception Returning null perfectly legal Object instance Util get Instance class Based Configuration Annotation instance null return instance catch Cache Configuration Exception unable Instantiate log debugv Could instantiate class using local classloader class Based Configuration Annotation get Name return null Override public Store Configuration process Configuration Store Configuration store Configuration return null
package org stream impl import java util Collection import java util Collections import java util Hash Set import java util Iterator import java util Map import java util Set import java util concurrent Completable Future import java util concurrent Concurrent Map import java util concurrent Fork Join Pool import java util stream Stream import org Advanced Cache import org Cache import org Cache Set import org cache impl Abstract Delegating Cache import org commands Commands Factory import org commons Cache Exception import org commons util Collection Factory import org configuration cache Cache Mode import org configuration cache Configuration import org container entries Cache Entry import org context Flag import org distribution ch Consistent Hash import org factories Component Registry import org factories annotations Inject import org factories annotations Start import org lifecycle Component Status import org notifications Listener import org notifications cachelistener annotation Data Rehashed import org notifications cachelistener event Data Rehashed Event import org remoting responses Response import org remoting rpc Rpc Manager import org remoting transport Address import org statetransfer State Transfer Manager import org topology Cache Topology import org util Byte String import org util logging Log import org util logging Log Factory Local stream manager implementation handles injection stream supplier invoking operation subsequently notifying operation rehash changed one segments param key type underlying cache param value type underlying cache Listener observation Listener Observation public class Local Stream Manager Impl implements Local Stream Manager private final static Log log Log Factory get Log Local Stream Manager Impl class private static final boolean trace log Trace Enabled private Advanced Cache cache private Component Registry registry private State Transfer Manager stm private Rpc Manager rpc private Commands Factory factory private boolean Loader private Address local Address private Cache Mode cache Mode private final Concurrent Map Object Segment Listener change Listener Collection Factory make Concurrent Map private Byte String cache Name class Segment Listener private final Set Integer segments private final Segment Aware Operation op private final Set Integer segments Lost Segment Listener Set Integer segments Segment Aware Operation op segments new Hash Set segments op op segments Lost new Hash Set public void local Segments Set Integer local Segments segments local Segments contains trace log tracef Could process segment segments Lost add public void lost Segments Set Integer lost Segments Integer segment lost Segments segments contains segment trace log tracef Lost segment segment op lost Segment false segments Lost add segment segments Lost size segments size trace log tracef segments lost segments op lost Segment true Inject public void inject Cache cache Component Registry registry State Transfer Manager stm Rpc Manager rpc Configuration configuration Commands Factory factory need unwrap cache local stream deal values obviously local entries mappings provided originator node intermediate operation stack operation cache Abstract Delegating Cache unwrap Cache cache get Advanced Cache Flags Flag cache Name Byte String String cache get Name registry registry stm stm rpc rpc factory factory Loader configuration persistence using Stores Start public void start local Address rpc get Address cache add Listener cache Mode cache get Cache Configuration clustering cache Mode need listen data rehash events case data moves iterating rehash occurs causing node lose segment something iterating stream looking values segment ca n guarantee data seen correctly must therefore suspect node sending back owner param event data rehash event Data Rehashed public void data Rehashed Data Rehashed Event event Consistent Hash start Hash event get Consistent Hash Start Consistent Hash end Hash event get Consistent Hash End boolean trace log Trace Enabled start Hash null end Hash null trace log tracef Data rehash occurred start Hash end Hash new topology pre start Hash end Hash event get New Topology Id event Pre change Listener Empty trace log tracef Previous segments start Hash get Segments Owner local Address log tracef segments end Hash get Segments Owner local Address n care newly added segments since means run would n include anyways Set Integer Segments new Hash Set start Hash get Segments Owner local Address n added n care new segments since current request n working retrieve later Segments remove end Hash get Segments Owner local Address Segments Empty make sure current listeners get newest hashes updated occur new nodes nodes leaving hash segments change cases Map Entry Object Segment Listener entry change Listener entry Set trace log tracef Notifying Segment Change Listener entry get Key entry get Value lost Segments Segments else trace log tracef segments removed data rehash notification required else trace log tracef change listeners present private Advanced Cache get Cache Respecting Loader boolean include Loader need skip loader one told skip Loader include Loader return cache get Advanced Cache Flags Flag return cache private Stream Cache Entry get Stream Cache Set Cache Entry cache Entry Set boolean parallel Stream Set Integer segments Set keys Include Set keys Exclude Stream Cache Entry stream parallel Stream cache Entry Set parallel Stream cache Entry Set stream filter Keys keys Include filter Key Segments segments cache Mode Scattered stream stream filter entry entry get Value null keys Exclude Empty return stream filter e keys Exclude contains e get Key return stream private Stream Cache Entry get Rehash Stream Cache Set Cache Entry cache Entry Set Object request Id Segment Listener listener boolean parallel Stream Set Integer segments Set keys Include Set keys Exclude Cache Topology topology stm get Cache Topology trace log tracef Topology supplier id topology request Id Consistent Hash read topology get Current Consistent Hash pending topology get Pending pending null Set Integer lost Segments new Hash Set Iterator Integer iterator segments iterator iterator Next Integer segment iterator next ensure unbox value twice times happy path int int Segment segment int Value segment owned Hs ca n use rehash pending locate Owners Segment int Segment contains local Address read locate Owners Segment int Segment contains local Address iterator remove lost Segments add segment lost Segments Empty trace log tracef Lost segments rehash id lost Segments request Id listener lost Segments lost Segments else trace log tracef Currently middle rehash id request Id else Set Integer Segments read get Segments Owner local Address segments retain Segments trace log tracef found missing segments requested id request Id listener local Segments Segments else trace log tracef Hash id read request Id return get Stream cache Entry Set parallel Stream segments keys Include keys Exclude private void handle Response Error Completable Future Map Address Response completable Future Object request Id Address origin trace completable Future Complete v e v null Response response v values iterator next response Successful log tracef Unsuccessful response sending response request Id origin else e null log tracef e Encounted exception sending response request Id origin else log tracef Response successfully sent request Id Override public void stream Operation Object request Id Address origin boolean parallel Stream Set Integer segments Set keys Include Set keys Exclude boolean include Loader Terminal Operation operation trace log tracef Received operation request id segments request Id origin segments Cache Set Cache Entry cache Entry Set get Cache Respecting Loader include Loader cache Entry Set operation set Supplier get Stream cache Entry Set parallel Stream segments keys Include keys Exclude operation handle Injection registry value operation perform Operation Completable Future Map Address Response completable Future rpc invoke Remotely Async Collections singleton origin factory build Stream Response Command request Id true Collections empty Set value rpc get Default Rpc Options true handle Response Error completable Future request Id origin Override public void stream Operation Rehash Aware Object request Id Address origin boolean parallel Stream Set Integer segments Set keys Include Set keys Exclude boolean include Loader Terminal Operation operation trace log tracef Received rehash aware operation request id segments request Id origin segments Cache Set Cache Entry cache Entry Set get Cache Respecting Loader include Loader cache Entry Set Segment Listener listener new Segment Listener segments operation value operation handle Injection registry currently allow request per id may change later change Listener put request Id listener trace log tracef Registered change listener request Id try operation set Supplier get Rehash Stream cache Entry Set request Id listener parallel Stream segments keys Include keys Exclude value operation perform Operation trace log tracef Request completed segments suspected segments request Id segments listener segments Lost finally change Listener remove request Id trace log tracef Un Registered change listener request Id cache get Status Component Status trace log tracef Cache status longer running segments suspect request Id listener segments Lost add segments value null trace log tracef Sending response request Id Completable Future Map Address Response completable Future rpc invoke Remotely Async Collections singleton origin factory build Stream Response Command request Id true listener segments Lost value rpc get Default Rpc Options true handle Response Error completable Future request Id origin Override public void stream Operation Object request Id Address origin boolean parallel Stream Set Integer segments Set keys Include Set keys Exclude boolean include Loader Key Tracking Terminal Operation operation trace log tracef Received key aware operation request id segments request Id origin segments Cache Set Cache Entry cache Entry Set get Cache Respecting Loader include Loader cache Entry Set operation set Supplier get Stream cache Entry Set parallel Stream segments keys Include keys Exclude operation handle Injection registry Collection value operation perform Operation new Non Rehash Intermediate Collector origin request Id parallel Stream Completable Future Map Address Response completable Future rpc invoke Remotely Async Collections singleton origin factory build Stream Response Command request Id true Collections empty Set value rpc get Default Rpc Options true handle Response Error completable Future request Id origin Override public void stream Operation Rehash Aware Object request Id Address origin boolean parallel Stream Set Integer segments Set keys Include Set keys Exclude boolean include Loader Key Tracking Terminal Operation operation trace log tracef Received key rehash aware operation request id segments request Id origin segments Cache Set Cache Entry cache Entry Set get Cache Respecting Loader include Loader cache Entry Set Segment Listener listener new Segment Listener segments operation Collection Cache Entry results operation handle Injection registry currently allow request per id may change later change Listener put request Id listener trace log tracef Registered change listener request Id try operation set Supplier get Rehash Stream cache Entry Set request Id listener parallel Stream segments keys Include keys Exclude results operation perform Operation Rehash Aware new Non Rehash Intermediate Collector origin request Id parallel Stream trace log tracef Request completed segments suspected segments request Id segments listener segments Lost finally change Listener remove request Id trace log tracef Un Registered change listener request Id cache get Status Component Status trace log tracef Cache status longer running segments suspect request Id listener segments Lost add segments results null Completable Future Map Address Response completable Future rpc invoke Remotely Async Collections singleton origin factory build Stream Response Command request Id true listener segments Lost results rpc get Default Rpc Options true handle Response Error completable Future request Id origin class Non Rehash Intermediate Collector implements Key Tracking Terminal Operation Intermediate Collector private final Address origin private final Object request Id private final boolean use Managed Blocker Non Rehash Intermediate Collector Address origin Object request Id boolean use Managed Blocker origin origin request Id request Id use Managed Blocker use Managed Blocker Override public void send Data Resonse response know parallel stream use managed blocker consume core fork join threads applicable use Managed Blocker try use managed blocker case invoked common thread pool Fork Join Pool managed Block new Response Blocker response catch Interrupted Exception e throw new Cache Exception e else rpc invoke Remotely Collections singleton origin new Stream Response Command cache Name local Address request Id false response rpc get Default Rpc Options true class Response Blocker implements Fork Join Pool Managed Blocker private final response private boolean completed false Response Blocker response response response Override public boolean block throws Interrupted Exception completed way n send response originating node still inside managed blocker n consume thread synchronized Non Rehash Intermediate Collector rpc invoke Remotely Collections singleton origin new Stream Response Command cache Name local Address request Id false response rpc get Default Rpc Options true completed true return completed Override public boolean Releasable return completed
package org topology import static org factories Known Component Names import java util Collections import java util Hash Map import java util Map import java util concurrent Completable Future import java util concurrent Execution Exception import java util concurrent Executor Service import java util concurrent Future import java util concurrent Time Unit import java util concurrent Timeout Exception import org Version import org commands Replicable Command import org commons Cache Exception import org commons marshall Serializable Exception import org distribution ch Consistent Hash import org distribution ch Consistent Hash Factory import org eviction Passivation Manager import org executors Limited Executor import org factories Component Registry import org factories Global Component Registry import org factories annotations Component Name import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org globalstate Global State Manager import org globalstate Global State Provider import org globalstate Scoped Persistent State import org globalstate impl Global State Manager Impl import org globalstate impl Scoped Persistent State Impl import org jmx annotations Data Type import org jmx annotations Bean import org jmx annotations Managed Attribute import org partitionhandling Availability Mode import org partitionhandling impl Partition Handling Manager import org remoting inboundhandler Deliver Order import org remoting responses Exception Response import org remoting responses Response import org remoting responses Successful Response import org remoting rpc Response Mode import org remoting transport Address import org remoting transport Transport import org remoting transport jgroups Suspect Exception import org util Time Service import org util concurrent Within Thread Executor import org util logging Log import org util logging Log Factory import net jcip annotations Guarded code Local Topology Manager implementation author Dan Berindei since Bean object Name Local Topology Manager description Controls cache membership state transfer public class Local Topology Manager Impl implements Local Topology Manager Global State Provider private static Log log Log Factory get Log Local Topology Manager Impl class private static final boolean trace log Trace Enabled private Transport transport private Executor Service async Transport Executor private Global Component Registry gcr private Time Service time Service private Global State Manager global State Manager private Persistent Manager persistent Manager private final Within Thread Executor within Thread Executor new Within Thread Executor synchronize entire map handling status request make sure concurrent topology updates old coordinator private final Map String Local Cache Status running Caches Collections synchronized Map new Hash Map String Local Cache Status private volatile boolean running Guarded running Caches private int latest Status Response View Id private Persistent persistent Inject public void inject Transport transport Component Name Executor Service async Transport Executor Global Component Registry gcr Time Service time Service Global State Manager global State Manager Persistent Manager persistent Manager transport transport async Transport Executor async Transport Executor gcr gcr time Service time Service global State Manager null global State Manager global State Manager global State Manager register State Provider persistent Manager persistent Manager Arbitrary value need start optional Global State Manager Groups Transport Start priority Start n called locks runs component accessible threads Guarded running Caches public void start trace log tracef Starting Local Topology Manager transport get Address persistent null persistent Persistent random global State Manager null global State Manager write Global State persistent Manager add Persistent Address Mapping transport get Address persistent running true latest Status Response View Id transport get View Id Need stop Groups Transport Stop priority public void stop trace log tracef Stopping Local Topology Manager transport get Address persistent Manager remove Persistent Address Mapping persistent running false within Thread Executor shutdown Override public Cache Topology join String cache Name Cache Join Info join Info Cache Topology Handler stm Partition Handling Manager phm throws Exception log debugf Node joining cache transport get Address cache Name Total Order caches must move topology updates another thread Executor Service topology Updates Executor join Info Total Order within Thread Executor async Transport Executor Local Cache Status cache Status new Local Cache Status cache Name join Info stm phm topology Updates Executor Pretend join using thread topology updates executor ensures initial topology request happen thread topology updates handled complete join Future Completable Future Void join Future new Completable Future cache Status get Topology Updates Executor execute Async join Future running Caches put cache Name cache Status long timeout join Info get Timeout long end Time time Service expected End Time timeout Time Unit try true int view Id transport get View Id try Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address join Info view Id Cache Status Response initial Status Cache Status Response execute Coordinator command timeout initial Status null log debug Ignoring null join response coordinator probably shutting wait View view Id cache Status get Join Info get Timeout Time Unit continue Handle Topology Update cache Name initial Status get Cache Topology initial Status get Availability Mode view Id transport get Coordinator cache Status throw new Illegal State Exception already newer topology time received join response Handle Stable Topology Update cache Name initial Status get Stable Topology view Id transport get Coordinator cache Status return initial Status get Cache Topology catch Serializable Exception e point retrying cache join info serializable throw new Cache Join Exception e catch Exception e log debugf e Error sending join request cache coordinator cache Name e get Cause null e get Cause instanceof Cache Join Exception throw Cache Join Exception e get Cause time Service Time Expired end Time throw e Add configuration use fraction state transfer timeout Thread sleep finally join Future complete null Override public void leave String cache Name log debugf Node leaving cache transport get Address cache Name Local Cache Status cache Status running Caches remove cache Name Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address transport get View Id try execute Coordinator command cache Status get Join Info get Timeout catch Exception e log debugf e Error sending leave request cache coordinator cache Name Override public void confirm Rebalance Phase String cache Name int topology Id int rebalance Id Throwable throwable Note coordinator changes sent command get another query status running caches n need retry command failed Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address topology Id rebalance Id throwable transport get View Id try execute Coordinator Async command catch Exception e log debugf e Error sending rebalance completed notification cache coordinator cache Name called coordinator Override public Manager Status Response handle Status Request int view Id try long older view still process topologies old coordinator wait View view Id get Global Timeout Time Unit catch Interrupted Exception e Shutting send back empty status Thread current Thread interrupt return new Manager Status Response Collections empty Map true Map String Cache Status Response caches new Hash Map synchronized running Caches latest Status Response View Id view Id Map Entry String Local Cache Status e running Caches entry Set String cache Name e get Key Local Cache Status cache Status running Caches get cache Name caches put e get Key new Cache Status Response cache Status get Join Info cache Status get Current Topology cache Status get Stable Topology cache Status get Partition Handling Manager get Availability Mode boolean rebalancing Enabled true Avoid adding direct dependency Cluster Topology Manager Replicable Command command new Cache Topology Control Command null Cache Topology Control Command Type transport get Address transport get View Id try gcr wire Dependencies command Successful Response response Successful Response command invoke rebalancing Enabled Boolean response get Response Value catch Throwable log warn Failed obtain rebalancing status log debugf Sending cluster status response view view Id return new Manager Status Response caches rebalancing Enabled Override public void handle Topology Update final String cache Name final Cache Topology cache Topology final Availability Mode availability Mode final int view Id final Address sender throws Interrupted Exception ignore Topology Update cache Name cache Topology return final Local Cache Status cache Status running Caches get cache Name cache Status get Topology Updates Executor execute try Handle Topology Update cache Name cache Topology availability Mode view Id sender cache Status catch Throwable log topology Update Error cache Name private boolean ignore Topology Update final String cache Name final Cache Topology cache Topology running log tracef Ignoring consistent hash update cache local cache manager running cache Topology get Topology Id cache Name return true running Caches get cache Name null log tracef Ignoring consistent hash update cache n exist locally cache Topology get Topology Id cache Name return true return false Update cache topology Local Cache Status pass Cache Topology Handler return code true topology applied code false ignored private boolean Handle Topology Update String cache Name Cache Topology cache Topology Availability Mode availability Mode int view Id Address sender Local Cache Status cache Status try wait View view Id cache Status get Join Info get Timeout Time Unit catch Interrupted Exception e Shutting ignore exception rebalance return false synchronized cache Status cache Topology null topology yet happens cache restarted state Still return true n want send join request return true Register persistent Ds locally register Persistent cache Topology Cache Topology existing Topology cache Status get Current Topology existing Topology null cache Topology get Topology Id existing Topology get Topology Id log debugf Ignoring late consistent hash update cache current topology cache Name existing Topology get Topology Id cache Topology return false Cache Topology Handler handler cache Status get Handler reset Local Topology Rebalance cache Name cache Topology existing Topology handler update Cache Topology cache Name cache Topology view Id sender cache Status return false Consistent Hash current cache Topology get Current Consistent Hash union null cache Topology get Pending null Consistent Hash Factory chf cache Status get Join Info get Consistent Hash Factory switch cache Topology get Phase case removing members topology make sure union owners pending used read phase owners current primary owners must match read write union chf union cache Topology get Pending cache Topology get Current break case Ensure node utilises old partitions read Consistent Hash conflict resolution updated write consistent hash contains owners pre post merge hashes union chf union existing Topology get Write Consistent Hash cache Topology get Pending current existing Topology get Current break default union chf union cache Topology get Current cache Topology get Pending Cache Topology union Topology new Cache Topology cache Topology get Topology Id cache Topology get Rebalance Id current cache Topology get Pending union cache Topology get Phase cache Topology get Actual Members persistent Manager map Addresses cache Topology get Actual Members union Topology log Routing Table Information boolean update Availability Mode First availability Mode Availability Mode update Availability Mode First availability Mode null cache Status get Partition Handling Manager set Availability Mode availability Mode boolean start Conflict Resolution cache Topology get Phase Cache Topology Phase start Conflict Resolution existing Topology null existing Topology get Rebalance Id cache Topology get Rebalance Id union null command sent command arrived first start rebalance ignore command arrives log tracef topology update pending starting rebalance handler rebalance union Topology else handler update Consistent Hash union Topology update Availability Mode First cache Status get Partition Handling Manager set Availability Mode availability Mode return true private void register Persistent Cache Topology cache Topology int count cache Topology get Actual Members size int count persistent Manager add Persistent Address Mapping cache Topology get Actual Members get cache Topology get Members Persistent Ds get private boolean update Cache Topology String cache Name Cache Topology cache Topology int view Id Address sender Local Cache Status cache Status synchronized running Caches validate Command View Id cache Topology view Id sender cache Name return false log debugf Updating local topology cache cache Name cache Topology cache Status set Current Topology cache Topology return true Synchronization required prevent topology updates preparing status response Guarded running Caches private boolean validate Command View Id Cache Topology cache Topology int view Id Address sender String cache Name sender equals transport get Coordinator log debugf Ignoring topology cache old coordinator cache Topology get Topology Id cache Name sender return false view Id latest Status Response View Id log debugf Ignoring topology cache view received status request view cache Topology get Topology Id cache Name view Id latest Status Response View Id return false return true private void reset Local Topology Rebalance String cache Name Cache Topology new Cache Topology Cache Topology old Cache Topology Cache Topology Handler handler boolean new Rebalance new Cache Topology get Pending null new Rebalance initial topology n need reset guaranteed member old Cache Topology null return need reset missed topology update new Cache Topology get Topology Id old Cache Topology get Topology Id return missed topology update topology might removed segments rebalance adds segments need remove old data inbound transfers first happen coordinator changes either old one left merge rebalance merge arrives merged topology update new Cache Topology get Rebalance Id old Cache Topology get Rebalance Id current changed need install reset topology new current first register Persistent new Cache Topology Cache Topology reset Topology new Cache Topology new Cache Topology get Topology Id new Cache Topology get Rebalance Id new Cache Topology get Current null Cache Topology Phase new Cache Topology get Actual Members persistent Manager map Addresses new Cache Topology get Actual Members log debugf Installing fake cache topology cache reset Topology cache Name handler update Consistent Hash reset Topology Override public void handle Stable Topology Update final String cache Name final Cache Topology new Stable Topology final Address sender final int view Id final Local Cache Status cache Status running Caches get cache Name cache Status null cache Status get Topology Updates Executor execute Handle Stable Topology Update cache Name new Stable Topology view Id sender cache Status private void Handle Stable Topology Update String cache Name Cache Topology new Stable Topology int view Id Address sender Local Cache Status cache Status synchronized running Caches validate Command View Id new Stable Topology view Id sender cache Name return Cache Topology stable Topology cache Status get Stable Topology stable Topology null stable Topology get Topology Id new Stable Topology get Topology Id log tracef Updating stable topology cache cache Name new Stable Topology cache Status set Stable Topology new Stable Topology Override public void handle Rebalance final String cache Name final Cache Topology cache Topology final int view Id final Address sender throws Interrupted Exception running log debugf Ignoring rebalance request cache local cache manager running cache Topology get Topology Id cache Name return final Local Cache Status cache Status running Caches get cache Name cache Status null log tracef Ignoring rebalance cache n exist locally cache Topology get Topology Id cache Name return cache Status get Topology Updates Executor execute try Handle Rebalance view Id cache Status cache Topology cache Name sender catch Throwable log rebalance Start Error cache Name private void Handle Rebalance int view Id Local Cache Status cache Status Cache Topology cache Topology String cache Name Address sender try wait View view Id cache Status get Join Info get Timeout Time Unit catch Interrupted Exception e Shutting ignore exception rebalance return synchronized cache Status Cache Topology existing Topology cache Status get Current Topology existing Topology null cache Topology get Topology Id existing Topology get Topology Id Start rebalance commands sent asynchronously entire cluster possible receive old one joiner joiner already become member log debugf Ignoring old rebalance cache current topology cache Name existing Topology get Topology Id cache Topology return update Cache Topology cache Name cache Topology view Id sender cache Status return log debugf Starting local rebalance cache topology cache Name cache Topology cache Topology log Routing Table Information Cache Topology Handler handler cache Status get Handler reset Local Topology Rebalance cache Name cache Topology existing Topology handler Consistent Hash union cache Status get Join Info get Consistent Hash Factory union cache Topology get Current cache Topology get Pending Cache Topology new Topology new Cache Topology cache Topology get Topology Id cache Topology get Rebalance Id cache Topology get Current cache Topology get Pending union cache Topology get Phase cache Topology get Actual Members cache Topology get Members Persistent Ds handler rebalance new Topology Override public Cache Topology get Cache Topology String cache Name Local Cache Status cache Status running Caches get cache Name return cache Status null cache Status get Current Topology null Override public Cache Topology get Stable Cache Topology String cache Name Local Cache Status cache Status running Caches get cache Name return cache Status null cache Status get Stable Topology null Override public boolean Total Order Cache String cache Name running log tracef Total Order Cache returning false local cache manager running cache Name return false Local Cache Status cache Status running Caches get cache Name cache Status null log tracef Total Order Cache returning false cache n exist locally cache Name return false boolean total Order cache Status get Join Info Total Order log tracef Total Order Cache returning cache Name total Order return total Order private void wait View int view Id long timeout Time Unit time Unit throws Interrupted Exception try transport View view Id get timeout time Unit catch Execution Exception e view future never complete exception throw new Cache Exception e get Cause catch Timeout Exception e throw log timeout Waiting View view Id transport get View Id Managed Attribute description Rebalancing enabled display Name Rebalancing enabled data Type Data Type writable true Override public boolean Rebalancing Enabled throws Exception return Cache Rebalancing Enabled null Override public void set Rebalancing Enabled boolean enabled throws Exception set Cache Rebalancing Enabled null enabled Override public boolean Cache Rebalancing Enabled String cache Name throws Exception int view Id transport get View Id Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address view Id return execute Coordinator Retry command view Id public execute Coordinator Retry Replicable Command command int view Id throws Exception boolean retried false long end Nanos time Service expected End Time get Global Timeout Time Unit true try long remaining Millis time Service remaining Time end Nanos Time Unit return execute Coordinator command remaining Millis catch Suspect Exception e trace log tracef Coordinator left cluster querying rebalancing status retrying view information Groups Transport updated atomically could sent request old coordinator work around sending request second time view id retried view Id Math max view Id transport get View Id long remaining Nanos time Service remaining Time end Nanos Time Unit wait View view Id remaining Nanos Time Unit retried false else retried true Override public void set Cache Rebalancing Enabled String cache Name boolean enabled throws Exception Cache Topology Control Command Type type enabled Cache Topology Control Command Type Cache Topology Control Command Type Replicable Command command new Cache Topology Control Command cache Name type transport get Address transport get View Id execute Cluster Sync command get Global Timeout false false Override public Rebalancing Status get Rebalancing Status String cache Name throws Exception Replicable Command command new Cache Topology Control Command cache Name Cache Topology Control Command Type transport get Address transport get View Id int view Id transport get View Id return execute Coordinator Retry command view Id Managed Attribute description Cluster availability display Name Cluster availability data Type Data Type writable false public String get Cluster Availability Availability Mode cluster Availability Availability Mode synchronized running Caches Local Cache Status cache Status running Caches values Availability Mode availability Mode cache Status get Partition Handling Manager get Availability Mode cluster Availability cluster Availability min availability Mode return cluster Availability String Override public Availability Mode get Cache Availability String cache Name Local Cache Status cache Status running Caches get cache Name return cache Status get Partition Handling Manager get Availability Mode Override public void set Cache Availability String cache Name Availability Mode availability Mode throws Exception Cache Topology Control Command Type type Cache Topology Control Command Type Replicable Command command new Cache Topology Control Command cache Name type transport get Address availability Mode transport get View Id execute Coordinator command get Global Timeout Override public void cache Shutdown String name throws Exception Replicable Command command new Cache Topology Control Command name Cache Topology Control Command Type transport get Address transport get View Id execute Coordinator command get Global Timeout Override public void handle Cache Shutdown String cache Name Component Registry cr gcr get Named Component Registry cache Name Perform orderly shutdown operations Passivation Manager passivation Manager cr get Component Passivation Manager class passivation Manager null passivation Manager passivate cache shutdown write state Scoped Persistent State cache State new Scoped Persistent State Impl cache Name cache State set Property Global State Manager Impl Version get Version cache State set Property Global State Manager Impl time Service instant String cache State set Property Global State Manager Impl Version get Major Local Cache Status cache Status running Caches get cache Name cache Status get Current Topology get Current remap Addresses persistent Manager address Persistent Scoped State cache State global State Manager null global State Manager write Scoped State cache State private Object execute Coordinator Replicable Command command long timeout throws Exception Response response transport Coordinator try trace log tracef Attempting execute command self command gcr wire Dependencies command response Response command invoke catch Throwable throw new Cache Exception Error handling join request else node coordinator Address coordinator transport get Coordinator Map Address Response response Map transport invoke Remotely Collections singleton coordinator command Response Mode timeout null Deliver Order false response response Map get coordinator response null response Successful Throwable exception response instanceof Exception Response Exception Response response get Exception null throw new Cache Exception Bad response received coordinator response exception return Successful Response response get Response Value private void execute Coordinator Async final Replicable Command command throws Exception coordinator execution actually synchronous transport Coordinator async Transport Executor execute trace log tracef Attempting execute command self command gcr wire Dependencies command try command invoke catch Throwable log errorf Failed execute Replicable Command coordinator async command get Message else Address coordinator transport get Coordinator ignore responses transport invoke Remotely Collections singleton coordinator command Response Mode null Deliver Order false private Map Address Object execute Cluster Sync final Replicable Command command final int timeout boolean total Order boolean distributed throws Exception first invoke remotely total Order Map Address Response response Map transport invoke Remotely null command Response Mode timeout null Deliver Order distributed return parse Responses response Map Future Map Address Response remote Future transport invoke Remotely Async null command Response Mode timeout null Deliver Order false invoke command local node gcr wire Dependencies command Response local Response try trace log tracef Attempting execute command self command local Response Response command invoke catch Throwable throwable throw new Exception throwable local Response Successful throw new Cache Exception Unsuccessful local response wait remote commands finish Map Address Response response Map remote Future get timeout Time Unit parse responses Map Address Object response Values parse Responses response Map response Values put transport get Address Successful Response local Response get Response Value return response Values private Map Address Object parse Responses Map Address Response response Map Map Address Object response Values new Hash Map transport get Members size Map Entry Address Response entry response Map entry Set Address address entry get Key Response response entry get Value response Successful Throwable cause response instanceof Exception Response Exception Response response get Exception null throw new Cache Exception Unsuccessful response received node address response cause response Values put address Successful Response response get Response Value return response Values private int get Global Timeout Rename setting something like global Rpc Timeout return int gcr get Global Configuration transport distributed Sync Timeout Override public void prepare Persist Scoped Persistent State state state set Property uuid persistent String Override public void prepare Restore Scoped Persistent State state persistent Persistent String state get Property uuid Override public Persistent get Persistent return persistent class Local Cache Status private final Cache Join Info join Info private final Cache Topology Handler handler private final Partition Handling Manager partition Handling Manager private volatile Cache Topology current Topology private volatile Cache Topology stable Topology private final Limited Executor topology Updates Executor Local Cache Status String cache Name Cache Join Info join Info Cache Topology Handler handler Partition Handling Manager phm Executor Service executor join Info join Info handler handler partition Handling Manager phm topology Updates Executor new Limited Executor Topology cache Name executor public Cache Join Info get Join Info return join Info public Cache Topology Handler get Handler return handler public Partition Handling Manager get Partition Handling Manager return partition Handling Manager Cache Topology get Current Topology return current Topology void set Current Topology Cache Topology current Topology current Topology current Topology Cache Topology get Stable Topology return stable Topology void set Stable Topology Cache Topology stable Topology stable Topology stable Topology partition Handling Manager Topology Update current Topology Limited Executor get Topology Updates Executor return topology Updates Executor
package org factories import org factories annotations Default Factory import org util concurrent locks impl Lock Container import org util concurrent locks impl Per Key Lock Container import org util concurrent locks impl Striped Lock Container Factory class creates instances link Lock Container author Pedro Ruivo since Default Factory classes Lock Container class public class Lock Container Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Suppress Warnings unchecked Override public construct Class component Type return configuration locking use Lock Striping new Striped Lock Container configuration locking concurrency Level new Per Key Lock Container
package org configuration cache import java util concurrent Time Unit import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set import org util concurrent Isolation Level Defines local locking concurrency characteristics cache author pmuir public class Locking Configuration public static final Attribute Definition Integer Attribute Definition builder concurrency Level immutable build public static final Attribute Definition Isolation Level Attribute Definition builder isolation Level Isolation Level xml Name isolation immutable build public static final Attribute Definition Long Attribute Definition builder lock Acquisition Timeout Time Unit Millis xml Name acquire timeout build public static final Attribute Definition Boolean Attribute Definition builder striping false immutable build public static final Attribute Definition Boolean Attribute Definition builder write Skew Check true xml Name write skew immutable build static Attribute Set attribute Definition Set return new Attribute Set Locking Configuration class private final Attribute Integer concurrency Level private final Attribute Isolation Level isolation Level private final Attribute Long lock Acquisition Timeout private final Attribute Boolean use Lock Striping private final Attribute Set attributes Locking Configuration Attribute Set attributes attributes check Protection attributes attributes concurrency Level attributes attribute isolation Level attributes attribute lock Acquisition Timeout attributes attribute use Lock Striping attributes attribute Concurrency level lock containers Adjust value according number concurrent threads interacting Similar concurrency Level tuning parameter seen Concurrent Hash Map public int concurrency Level return concurrency Level get option applies non transactional caches clustered local set true default value cache keeps data consistent case concurrent updates clustered caches comes cost additional n expect application write data concurrently disabling flag increases performance deprecated option always code true code modified since version Deprecated public boolean supports Concurrent Updates return true Cache isolation level supports isolation levels See href http en wikipedia org wiki Isolation level http en wikipedia org wiki Isolation level discussion isolation levels public Isolation Level isolation Level return isolation Level get Maximum time attempt particular lock acquisition public long lock Acquisition Timeout return lock Acquisition Timeout get public Locking Configuration lock Acquisition Timeout long timeout lock Acquisition Timeout set timeout return true pool shared locks maintained entries need locked Otherwise lock created per entry cache Lock striping helps control memory footprint may reduce concurrency system public boolean use Lock Striping return use Lock Striping get setting applicable case write skew check set false writer commit time discovers working entry underlying entry different versions working entry overwrite underlying entry true version conflict known write skew throw Exception deprecated since Deprecated public boolean write Skew Check return true public Attribute Set attributes return attributes Override public String String return Locking Configuration attributes attributes Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Locking Configuration Locking Configuration obj attributes null attributes null return false else attributes equals attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result
package org configuration cache import static org configuration cache Locking Configuration import static org configuration cache Locking Configuration import static org configuration cache Locking Configuration import static org configuration cache Locking Configuration import java util concurrent Time Unit import org commons configuration Builder import org commons configuration attributes Attribute import org commons configuration attributes Attribute Set import org configuration global Global Configuration import org util concurrent Isolation Level import org util logging Log import org util logging Log Factory Defines local locking concurrency characteristics cache author pmuir public class Locking Configuration Builder extends Abstract Configuration Child Builder implements Builder Locking Configuration private static final Log log Log Factory get Log Locking Configuration Builder class private final Attribute Set attributes protected Locking Configuration Builder Configuration Builder builder super builder attributes Locking Configuration attribute Definition Set Concurrency level lock containers Adjust value according number concurrent threads interacting Similar concurrency Level tuning parameter seen Concurrent Hash Map public Locking Configuration Builder concurrency Level int attributes attribute set return Cache isolation level supports isolation levels See href http en wikipedia org wiki Isolation level http en wikipedia org wiki Isolation level discussion isolation levels public Locking Configuration Builder isolation Level Isolation Level isolation Level attributes attribute set isolation Level return public Isolation Level isolation Level return attributes attribute get see org configuration cache Locking Configuration supports Concurrent Updates deprecated Deprecated public Locking Configuration Builder supports Concurrent Updates boolean log warn Concurrent Update Support Cannot Configured return Maximum time attempt particular lock acquisition public Locking Configuration Builder lock Acquisition Timeout long l attributes attribute set l return Maximum time attempt particular lock acquisition public Locking Configuration Builder lock Acquisition Timeout long l Time Unit unit return lock Acquisition Timeout unit Millis l true pool shared locks maintained entries need locked Otherwise lock created per entry cache Lock striping helps control memory footprint may reduce concurrency system public Locking Configuration Builder use Lock Striping boolean b attributes attribute set b return setting applicable case write skew check set false writer commit time discovers working entry underlying entry different versions working entry overwrite underlying entry true version conflict known write skew throw Exception deprecated since automatically enabled transactions Deprecated public Locking Configuration Builder write Skew Check boolean b return Override public void validate Attribute Isolation Level isolation Level attributes attribute get Builder clustering cache Mode Clustered isolation Level get Isolation Level isolation Level set Isolation Level isolation Level get Isolation Level isolation Level set Isolation Level isolation Level get Isolation Level isolation Level set Isolation Level Override public void validate Global Configuration global Config Override public Locking Configuration create return new Locking Configuration attributes protect Override public Locking Configuration Builder read Locking Configuration template attributes read template attributes return Override public String String return get Class get Simple Name attributes
package org factories import org factories annotations Default Factory import org util concurrent locks Lock Manager import org util concurrent locks Pending Lock Manager import org util concurrent locks impl Default Lock Manager import org util concurrent locks impl Default Pending Lock Manager import org util concurrent locks impl Op Pending Lock Manager Factory class creates instances link Lock Manager author Manik Surtani href mailto manik jboss org manik jboss org since Default Factory classes Lock Manager class Pending Lock Manager class public class Lock Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override public construct Class component Type Pending Lock Manager class equals component Type return component Type cast configuration clustering cache Mode Clustered new Default Pending Lock Manager Op Pending Lock Manager get Instance else Lock Manager class equals component Type return component Type cast new Default Lock Manager throw new Illegal Argument Exception Unexpected component type component Type
package org util concurrent locks link org util concurrent locks impl Lock possible states p Used listener notify state changes author Pedro Ruivo since public enum Lock State lock owner queue waiting lock available lock owner left queue available acquire lock time occurred lock owner waits queue deadlock occurred another possible lock owner abort lock owner released lock
package org client hotrod logging import static org jboss logging Logger Level import static org jboss logging Logger Level import static org jboss logging Logger Level import static org jboss logging Logger Level import static org jboss logging Logger Level import java io Exception import java lang reflect Method import java net Socket Address import java util Collection import java util List import java util Element Exception import java util Set import org client hotrod event Client Event import org client hotrod event Incorrect Client Listener Exception import org client hotrod exceptions Hot Rod Client Exception import org client hotrod impl transport Transport import org client hotrod impl transport tcp Tcp Transport import org commons Cache Configuration Exception import org commons Cache Exception import org commons Cache Listener Exception import org jboss logging Basic Logger import org jboss logging annotations Cause import org jboss logging annotations Log Message import org jboss logging annotations Message import org jboss logging annotations Message Logger Log abstraction hot rod client module message ids ranging inclusively reserved author Galder Zamarre since Message Logger project Code public interface Log extends Basic Logger Log Message level Message value Could find file classpath using defaults id void could Find Properties File String properties File Log Message level Message value perform operations cache associated unstarted Remote Cache Manager Use Remote Cache Manager start using remote cache id void unstarted Remote Cache Manager Log Message level Message value Invalid magic number Expected x received x id void invalid Magic Number short expected Magic Number short received Magic Log Message level Message value Invalid message id Expected received id void invalid Message Id long expected Msg Id long received Msg Id Log Message level Message value Error received server id void error Server String message Log Message level Message value sent new topology view id age containing addresses id void new Topology Socket Address address int view Id int age int topology Size Set Socket Address topology Log Message level Message value Exception encountered Retry id void exception Retries Left int retry int max Retries Cause Hot Rod Client Exception te id logged Log Message level Message value Issues closing socket id void error Closing Socket Tcp Transport transport Exception e Log Message level Message value hash function configured version id void Function Configured int hash Function Version Log Message level Message value Could invalidate connection id void could Invalidate Connection Tcp Transport transport Cause Exception e Log Message level Message value Could release connection id void could Release Connection Tcp Transport transport Cause Exception e Log Message level Message value New server added adding pool id void new Server Added Socket Address server Log Message level Message value Failed adding new server id void failed Adding New Server Socket Address server Cause Exception e Log Message level Message value Server cluster anymore removing pool id void removing Server Socket Address server Log Message level Message value Unable convert string property int Using default value id void unable Convert String Property Int String value int default Value Log Message level Message value Unable convert string property long Using default value id void unable Convert String Property Long String value long default Value Log Message level Message value Unable convert string property boolean Using default value b id void unable Convert String Property Boolean String value boolean default Value Log Message level Message value version id void version String version Message value Enabled Trust Store specified id Cache Configuration Exception Trust Manager Configuration Message value password required open Key Store id Cache Configuration Exception missing Key Store Password String key Store Message value password required open Trust Store id Cache Configuration Exception missing Trust Store Password String trust Store Message value configure custom Key Store Trust Store specifying Context id Cache Configuration Exception xor Context Message value Unable parse server address id Cache Configuration Exception parse Error Server Address String server Message value Invalid max retries value Value greater equal zero id Cache Configuration Exception invalid Max Retries int retries Per Server Message value enable authentication without specifying Callback Handler client Subject id Cache Configuration Exception invalid Callback Handler Message value selected authentication mechanism among supported server mechanisms id Security Exception unsupported Mech String auth Mech List String server Mechs Message value invalid mechanism id Cache Configuration Exception invalid Sasl Mechanism String sasl Mechanism Message value Connection dedicated listener id received event listener id id Illegal State Exception unexpected Listener Id String listener Id String expected Listener Id Message value Unable unmarshall bytes id Hot Rod Client Exception unable Unmarshall Bytes String bytes Cause Exception e Message value Caught exception invoking method listener instance id Cache Listener Exception exception Invoking Listener String name Method Object target Cause Throwable cause Message value Methods annotated must accept exactly one parameter assignable type id Incorrect Client Listener Exception incorrect Client Listener String annotation Name Collection allowed Parameters Message value Methods annotated return type void id Incorrect Client Listener Exception incorrect Client Listener String annotation Name Log Message level Message value Unexpected error consuming event id void unexpected Error Consuming Event Client Event client Event Cause Throwable Log Message level Message value Unable complete reading event server id void unable Read Event Server Cause Throwable Socket Address server Message value Cache listener class must annotated org client hotrod annotation Client Listener id Incorrect Client Listener Exception missing Client Listener Annotation String class Name Message value Unknown event type received id Hot Rod Client Exception unknown Event short event Type Id Log Message level Message value Unable set method accessible id void unable Set Accesible Method Cause Exception e Log Message level Message value Unrecoverable error reading event server exiting event reader thread id void unrecoverable Error Reading Event Cause Throwable Socket Address server Log Message level Message value Unable read bytes id void unable Unmarshall Bytes Error String element String bytes Cause Exception e Message value enabling near caching number max entries must configured id Cache Configuration Exception near Cache Max Entries Undefined Log Message level Message value Successfully closed remote iterator id void iteration Closed String iteration Id Message value Invalid iteration id id Illegal State Exception error Closing Iteration String iteration Id Message value Invalid iteration id id Element Exception error Retrieving Next String iteration Id Log Message level Message value Switched cluster id void switched Cluster String cluster Name Log Message level Message value Switched back main cluster id void switched Back Main Cluster Log Message level Message value Manually switched cluster id void manually Switched Cluster String cluster Name Log Message level Message value Manually switched back main cluster id void manually Switched Back Main Cluster Message value Name failover cluster needs specified id Cache Configuration Exception missing Cluster Name Definition Message value Host needs specified server definition failover cluster id Cache Configuration Exception missing Host Definition Message value least one server address needs specified failover cluster id Cache Configuration Exception missing Cluster Servers Definition String site Name Message value Duplicate failover cluster specified id Cache Configuration Exception duplicate Cluster Definition String site Name Message value client listener must use raw data uses query filter id Incorrect Client Listener Exception client Listener Must Use Raw Data String class Name Message value client listener must use filter converter factory id Incorrect Client Listener Exception client Listener Must Use Designated Filter Converter Factory String filter Converter Factory Name Log Message level Message value Ignoring error closing iteration id void ignoring Error Iteration Close String iteration Id Cause Exception e Log Message level Message value Started iteration id void started Iteration String iteration Id Log Message level Message value Transport obtained iteration id void iteration Transport Obtained Transport transport String iteration Id Log Message level Message value Tracking key belonging segment already tracked b id void tracking Segment Key String key int segment boolean Tracked Log Message level Message value Classpath look correct Make sure mixing uber jars id void warn Uber Jar Duplicates Log Message level Message value Unable convert property enum Using default value id void unable Convert String Property Enum String value String default Value Message value specify callback handler username authentication id Cache Configuration Exception callback Handler Username Mutually Exclusive Message value Class blocked Java standard deserialization white list Adjust client configuration java serialization white list regular expression include class id Cache Exception class Whitelist String class Name
package org client hotrod logging import org jboss logging Logger Factory creates link Log instances author Manik Surtani since public class Log Factory public static Log get Log Class clazz return Logger get Message Logger Log class clazz get Name public static get Log Class clazz Class log Class return Logger get Message Logger log Class clazz get Name
package org topology import java io Exception import java io Object Input import java io Object Output import java io Serializable import java util Collections import java util Map import java util Set import org commons marshall Instance Reusing Advanced Externalizer import org marshall core Ids author Dan Berindei since public class Manager Status Response implements Serializable private final Map String Cache Status Response caches private final boolean rebalancing Enabled public Manager Status Response Map String Cache Status Response caches boolean rebalancing Enabled rebalancing Enabled rebalancing Enabled caches caches public Map String Cache Status Response get Caches return caches public boolean Rebalancing Enabled return rebalancing Enabled Override public String String return Manager Status Response caches caches rebalancing Enabled rebalancing Enabled public static class Externalizer extends Instance Reusing Advanced Externalizer Manager Status Response Override public void Write Object Object Output output Manager Status Response cache Status Response throws Exception output write Object cache Status Response caches output write Boolean cache Status Response rebalancing Enabled Override public Manager Status Response Read Object Object Input unmarshaller throws Exception Class Found Exception Map String Cache Status Response caches Map String Cache Status Response unmarshaller read Object boolean rebalancing Enabled unmarshaller read Boolean return new Manager Status Response caches rebalancing Enabled Override public Integer get Id return Ids Override public Set Class extends Manager Status Response get Type Classes return Collections Class extends Manager Status Response singleton Manager Status Response class
package org marshall exts import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Hash Map import java util Map import java util Set import java util Tree Map import java util concurrent Concurrent Hash Map import org commons equivalence Equivalence import org commons equivalence Equivalent Hash Map import org commons marshall Abstract Externalizer import org commons marshall Marshall Util import org commons util Fast Copy Hash Map import org commons util Util import org container versioning Entry Versions Map import org distribution util Read Segment Aware Map import org marshall core Ids import org jboss marshalling util Identity Int Map Map externalizer map implementations except immutable maps singleton maps e Fast Copy Hash Map Hash Map Tree Map author Galder Zamarre since public class Map Externalizer extends Abstract Externalizer Map private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private final Identity Int Map Class numbers new Identity Int Map Class public Map Externalizer numbers put Hash Map class numbers put Read Segment Aware Map class numbers put Tree Map class numbers put Fast Copy Hash Map class numbers put Equivalent Hash Map class numbers put Concurrent Hash Map class numbers put Entry Versions Map class numbers put get Private Singleton Map Class numbers put get Private Empty Map Class Override public void write Object Object Output output Map map throws Exception int number numbers get map get Class output write number switch number case case case case Marshall Util marshall Map map output break case Equivalent Hash Map equivalent Map Equivalent Hash Map map output write Object equivalent Map get Key Equivalence output write Object equivalent Map get Value Equivalence Marshall Util marshall Map map output break case copy map avoid Concurrent Modification Exception Marshall Util marshall Map Fast Copy Hash Map map clone output break case Map Entry singleton Map Entry map entry Set iterator next output write Object singleton get Key output write Object singleton get Value break default break Override public Map read Object Object Input input throws Exception Class Found Exception int magic Number input read Unsigned Byte switch magic Number case return Marshall Util unmarshall Map input Hash Map new case return Marshall Util unmarshall Map input size new Tree Map case return Marshall Util unmarshall Map input Fast Copy Hash Map new case Equivalence Object key Eq Equivalence Object input read Object Equivalence Object value Eq Equivalence Object input read Object return Marshall Util unmarshall Map input size new Equivalent Hash Map key Eq value Eq case return Marshall Util unmarshall Map input Concurrent Hash Map new case return Marshall Util unmarshall Map input Entry Versions Map new case return Collections singleton Map input read Object input read Object case return Collections empty Map default throw new Illegal State Exception Unknown Map type magic Number Override public Integer get Id return Ids Override public Set Class extends Map get Type Classes return Util Class extends Map Set Hash Map class Tree Map class Fast Copy Hash Map class Equivalent Hash Map class Read Segment Aware Map class Concurrent Hash Map class Entry Versions Map class get Private Singleton Map Class get Private Empty Map Class private static Class extends Map get Private Singleton Map Class return get Map Class java util Collections Singleton Map private static Class extends Map get Private Empty Map Class return get Map Class java util Collections Empty Map private static Class extends Map get Map Class String class Name return Util Map load Class class Name Map class get Class Loader
package org stream impl intops object import java util function Function import java util stream Stream import org factories Component Registry import org stream impl intops Intermediate Operation Performs map operation regular link Stream param type input stream param type output stream public class Map Operation implements Intermediate Operation Stream Stream private final Function super extends function public Map Operation Function super extends function function function Override public Stream perform Stream stream return stream map function Override public void handle Injection Component Registry registry registry wire Dependencies function public Function super extends get Function return function
package org factories import org commons Cache Exception import org commons marshall Marshaller import org commons marshall Streaming Marshaller import org factories annotations Default Factory import org marshall core Global Marshaller Marshaller Factory author Galder Zamarre since Default Factory classes Streaming Marshaller class Marshaller class public class Marshaller Factory extends Empty Constructor Factory implements Auto Instantiable Factory Override public construct Class component Type Object comp Marshaller config Marshaller global Configuration serialization marshaller config Marshaller null comp new Global Marshaller else comp new Global Marshaller config Marshaller try return component Type cast comp catch Exception e throw new Cache Exception Problems casting bootstrap component comp get Class type component Type e
package org configuration cache import org commons configuration Abstract Typed Properties Configuration import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set import org commons configuration attributes Identity Attribute Copier import org eviction Eviction Type Controls memory storage configuration cache author William Burns public class Memory Configuration public static final Attribute Definition Integer Attribute Definition builder address count build public static final Attribute Definition Storage Type Attribute Definition builder storage Storage Type copier Identity Attribute Copier immutable build public static final Attribute Definition Long Attribute Definition builder size build public static final Attribute Definition Eviction Type Attribute Definition builder type Eviction Type build static public Attribute Set attribute Definition Set return new Attribute Set Memory Configuration class Abstract Typed Properties Configuration attribute Set private final Attribute Long size private final Attribute Eviction Type eviction Type private final Attribute Storage Type storage Type private final Attribute Integer address Count private final Attribute Set attributes Memory Configuration Attribute Set attributes attributes attributes storage Type attributes attribute size attributes attribute eviction Type attributes attribute address Count attributes attribute Storage type use data container return public Storage Type storage Type return storage Type get Size eviction disabled return public long size return size get public void size long new Size size set new Size configured eviction type return public Eviction Type eviction Type return eviction Type get public boolean Eviction Enabled return size get address pointer count return public int address Count return address Count get public Attribute Set attributes return attributes Override public String String return Memory Configuration attributes attributes
package org configuration cache import static org configuration cache Memory Configuration import static org configuration cache Memory Configuration import static org configuration cache Memory Configuration import static org configuration cache Memory Configuration import org commons Cache Configuration Exception import org commons configuration Builder import org commons configuration attributes Attribute Set import org configuration global Global Configuration import org eviction Eviction Type Controls data container cache author William Burns public class Memory Configuration Builder extends Abstract Configuration Child Builder implements Builder Memory Configuration private Attribute Set attributes Memory Configuration Builder Configuration Builder builder super builder attributes Memory Configuration attribute Definition Set Set link Storage Type determine data stored data container param storage Type storage type underlying data return configuration builder public Memory Configuration Builder storage Type Storage Type storage Type attributes attribute set storage Type return Defines maximum size eviction occurs See link eviction Type Eviction Type details size interpreted param size public Memory Configuration Builder size long size attributes attribute set size return Sets eviction type either ul li entries evicted number entries exceeds link size long li li entries evicted approximate combined size values exceeds link size long li ul Cache size guaranteed exceed upper limit specified max entries However due nature eviction unlikely ever exactly maximum number entries specified param type public Memory Configuration Builder eviction Type Eviction Type type attributes attribute set type return Configuration setting using heap defines many address pointers number rounded next power two helps performance address pointers less collisions improve performance read write operations param address Count return public Memory Configuration Builder address Count int address Count attributes attribute set address Count return Override public void validate Storage Type type attributes attribute get type Storage Type get Builder compatibility Enabled throw new Cache Configuration Exception Compatibility mode requires storage type type long size attributes attribute get size Eviction Type eviction Type attributes attribute get eviction Type Eviction Type type Storage Type throw new Cache Configuration Exception based eviction requires binary type Override public void validate Global Configuration global Config Override public Memory Configuration create return new Memory Configuration attributes protect Override public Memory Configuration Builder read Memory Configuration template attributes read template attributes return Override public String String return Data Container Configuration Builder attributes attributes
package org container entries metadata import java io Exception import java io Object Input import java io Object Output import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org commons util Util import org container entries Abstract Internal Cache Entry import org container entries Expiry Helper import org container entries Internal Cache Value import org marshall core Ids import org metadata Metadata cache entry mortal link Metadata Aware author Galder Zamarre since public class Metadata Mortal Cache Entry extends Abstract Internal Cache Entry implements Metadata Aware protected Object value protected Metadata metadata protected long created public Metadata Mortal Cache Entry Object key Object value Metadata metadata long created super key value value metadata metadata created created Override public Object get Value return value Override public Object set Value Object value return value value Override public final boolean Expired long return Expiry Helper Expired Mortal metadata lifespan created Override public final boolean Expired return Expired System current Time Millis Override public final boolean Expire return true Override public final long get Created return created Override public final long get Last Used return Override public final long get Lifespan return metadata lifespan Override public final long get Max Idle return Override public final long get Expiry Time long lifespan metadata lifespan return lifespan created lifespan Override public final void touch op Override public final void touch long current Time Millis op Override public final void reincarnate reincarnate System current Time Millis Override public void reincarnate long created Override public Internal Cache Value Internal Cache Value return new Metadata Mortal Cache Value value metadata created Override public Metadata get Metadata return metadata Override public void set Metadata Metadata metadata metadata metadata public static class Externalizer extends Abstract Externalizer Metadata Mortal Cache Entry Override public void write Object Object Output output Metadata Mortal Cache Entry ice throws Exception output write Object ice key output write Object ice value output write Object ice metadata Unsigned Numeric write Unsigned Long output ice created Override public Metadata Mortal Cache Entry read Object Object Input input throws Exception Class Found Exception Object k input read Object Object v input read Object Metadata metadata Metadata input read Object long created Unsigned Numeric read Unsigned Long input return new Metadata Mortal Cache Entry k v metadata created Override public Integer get Id return Ids Override public Set Class extends Metadata Mortal Cache Entry get Type Classes return Util Set Metadata Mortal Cache Entry class
package org container entries metadata import java io Exception import java io Object Input import java io Object Output import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org commons util Util import org container entries Expiry Helper import org container entries Immortal Cache Value import org container entries Internal Cache Entry import org marshall core Ids import org metadata Metadata mortal cache value correspond link org container entries metadata Metadata Mortal Cache Entry author Galder Zamarre since public class Metadata Mortal Cache Value extends Immortal Cache Value implements Metadata Aware Metadata metadata long created public Metadata Mortal Cache Value Object value Metadata metadata long created super value metadata metadata created created Override public Internal Cache Entry Internal Cache Entry Object key return new Metadata Mortal Cache Entry key value metadata created Override public Metadata get Metadata return metadata Override public void set Metadata Metadata metadata metadata metadata Override public final long get Created return created Override public final long get Lifespan return metadata lifespan Override public boolean Expired long return Expiry Helper Expired Mortal metadata lifespan created Override public boolean Expired return Expired System current Time Millis Override public long get Expiry Time long lifespan metadata lifespan return lifespan created lifespan Override public final boolean Expire return true public static class Externalizer extends Abstract Externalizer Metadata Mortal Cache Value Override public void write Object Object Output output Metadata Mortal Cache Value mcv throws Exception output write Object mcv value output write Object mcv metadata Unsigned Numeric write Unsigned Long output mcv created Override public Metadata Mortal Cache Value read Object Object Input input throws Exception Class Found Exception Object v input read Object Metadata metadata Metadata input read Object long created Unsigned Numeric read Unsigned Long input return new Metadata Mortal Cache Value v metadata created Override public Integer get Id return Ids Override public Set Class extends Metadata Mortal Cache Value get Type Classes return Util Class extends Metadata Mortal Cache Value Set Metadata Mortal Cache Value class
package org container entries metadata import java io Exception import java io Object Input import java io Object Output import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org commons util Util import org container entries Abstract Internal Cache Entry import org container entries Expiry Helper import org container entries Internal Cache Value import org marshall core Ids import org metadata Metadata cache entry transient e considered expired period used link org container entries metadata Metadata Aware author Galder Zamarre since public class Metadata Transient Cache Entry extends Abstract Internal Cache Entry implements Metadata Aware protected Object value protected Metadata metadata protected long last Used public Metadata Transient Cache Entry Object key Object value Metadata metadata long last Used super key value value metadata metadata last Used last Used Override public Object get Value return value Override public Object set Value Object value return value value Override public final void touch touch System current Time Millis Override public final void touch long current Time Millis last Used current Time Millis Override public final void reincarnate op Override public void reincarnate long op Override public final boolean Expire return true Override public boolean Expired long return Expiry Helper Expired Transient metadata max Idle last Used Override public boolean Expired return Expired System current Time Millis Override public long get Created return Override public final long get Last Used return last Used Override public long get Lifespan return Override public long get Expiry Time long max Idle metadata max Idle return max Idle last Used max Idle Override public final long get Max Idle return metadata max Idle Override public Internal Cache Value Internal Cache Value return new Metadata Transient Cache Value value metadata last Used Override public Metadata get Metadata return metadata Override public void set Metadata Metadata metadata metadata metadata public static class Externalizer extends Abstract Externalizer Metadata Transient Cache Entry Override public void write Object Object Output output Metadata Transient Cache Entry ice throws Exception output write Object ice key output write Object ice value output write Object ice metadata Unsigned Numeric write Unsigned Long output ice last Used Override public Metadata Transient Cache Entry read Object Object Input input throws Exception Class Found Exception Object k input read Object Object v input read Object Metadata metadata Metadata input read Object long last Used Unsigned Numeric read Unsigned Long input return new Metadata Transient Cache Entry k v metadata last Used Override public Integer get Id return Ids Override public Set Class extends Metadata Transient Cache Entry get Type Classes return Util Set Metadata Transient Cache Entry class
package org container entries metadata import java io Exception import java io Object Input import java io Object Output import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org commons util Util import org container entries Expiry Helper import org container entries Immortal Cache Value import org container entries Internal Cache Entry import org marshall core Ids import org metadata Metadata transient cache value correspond link org container entries Transient Cache Entry link org container entries metadata Metadata Aware author Galder Zamarre since public class Metadata Transient Cache Value extends Immortal Cache Value implements Metadata Aware Metadata metadata long last Used public Metadata Transient Cache Value Object value Metadata metadata long last Used super value metadata metadata last Used last Used Override public Internal Cache Entry Internal Cache Entry Object key return new Metadata Transient Cache Entry key value metadata last Used Override public long get Max Idle return metadata max Idle Override public long get Last Used return last Used Override public final boolean Expired long return Expiry Helper Expired Transient metadata max Idle last Used Override public final boolean Expired return Expired System current Time Millis Override public boolean Expire return true Override public Metadata get Metadata return metadata Override public void set Metadata Metadata metadata metadata metadata Override public long get Expiry Time long max Idle metadata max Idle return max Idle last Used max Idle public static class Externalizer extends Abstract Externalizer Metadata Transient Cache Value Override public void write Object Object Output output Metadata Transient Cache Value tcv throws Exception output write Object tcv value output write Object tcv metadata Unsigned Numeric write Unsigned Long output tcv last Used Override public Metadata Transient Cache Value read Object Object Input input throws Exception Class Found Exception Object v input read Object Metadata metadata Metadata input read Object long last Used Unsigned Numeric read Unsigned Long input return new Metadata Transient Cache Value v metadata last Used Override public Integer get Id return Ids Override public Set Class extends Metadata Transient Cache Value get Type Classes return Util Class extends Metadata Transient Cache Value Set Metadata Transient Cache Value class
package org container entries metadata import static java lang Math min import java io Exception import java io Object Input import java io Object Output import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org commons util Util import org container entries Abstract Internal Cache Entry import org container entries Expiry Helper import org container entries Internal Cache Value import org marshall core Ids import org metadata Metadata form link org container entries Transient Mortal Cache Entry link org container entries versioned Versioned author Manik Surtani since public class Metadata Transient Mortal Cache Entry extends Abstract Internal Cache Entry implements Metadata Aware Object value Metadata metadata long created long last Used public Metadata Transient Mortal Cache Entry Object key Object value Metadata metadata long key value metadata public Metadata Transient Mortal Cache Entry Object key Object value Metadata metadata long last Used long created super key value value metadata metadata last Used last Used created created Override public Object get Value return value Override public long get Lifespan return metadata lifespan Override public final boolean Expire return true Override public long get Created return created Override public boolean Expired long return Expiry Helper Expired Transient Mortal metadata max Idle last Used metadata lifespan created Override public boolean Expired return Expired System current Time Millis Override public final long get Expiry Time long lifespan metadata lifespan long lset lifespan created lifespan long max Idle metadata max Idle long muet max Idle last Used max Idle lset return muet muet return lset return min lset muet Override public Internal Cache Value Internal Cache Value return new Metadata Transient Mortal Cache Value value metadata created last Used Override public long get Last Used return last Used Override public final void touch last Used System current Time Millis Override public final void touch long current Time Millis last Used current Time Millis Override public final void reincarnate reincarnate System current Time Millis Override public void reincarnate long created Override public long get Max Idle return metadata max Idle Override public Object set Value Object value return value value Override public Metadata get Metadata return metadata Override public void set Metadata Metadata metadata metadata metadata public static class Externalizer extends Abstract Externalizer Metadata Transient Mortal Cache Entry Override public void write Object Object Output output Metadata Transient Mortal Cache Entry ice throws Exception output write Object ice key output write Object ice value output write Object ice metadata Unsigned Numeric write Unsigned Long output ice created Unsigned Numeric write Unsigned Long output ice last Used Override public Metadata Transient Mortal Cache Entry read Object Object Input input throws Exception Class Found Exception Object k input read Object Object v input read Object Metadata metadata Metadata input read Object long created Unsigned Numeric read Unsigned Long input long last Used Unsigned Numeric read Unsigned Long input return new Metadata Transient Mortal Cache Entry k v metadata last Used created Override public Integer get Id return Ids Override public Set Class extends Metadata Transient Mortal Cache Entry get Type Classes return Util Set Metadata Transient Mortal Cache Entry class
package org container entries metadata import static java lang Math min import java io Exception import java io Object Input import java io Object Output import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org commons util Util import org container entries Expiry Helper import org container entries Internal Cache Entry import org marshall core Ids import org metadata Metadata form link org container entries Transient Mortal Cache Value link org container entries versioned Versioned author Manik Surtani since public class Metadata Transient Mortal Cache Value extends Metadata Mortal Cache Value implements Metadata Aware long last Used public Metadata Transient Mortal Cache Value Object v Metadata metadata long created long last Used super v metadata created last Used last Used Override public Internal Cache Entry Internal Cache Entry Object key return new Metadata Transient Mortal Cache Entry key value metadata last Used created Override public long get Max Idle return metadata max Idle Override public long get Last Used return last Used Override public boolean Expired long return Expiry Helper Expired Transient Mortal metadata max Idle last Used metadata lifespan created Override public boolean Expired return Expired System current Time Millis Override public long get Expiry Time long lifespan metadata lifespan long lset lifespan created lifespan long max Idle metadata max Idle long muet max Idle last Used max Idle lset return muet muet return lset return min lset muet public static class Externalizer extends Abstract Externalizer Metadata Transient Mortal Cache Value Override public void write Object Object Output output Metadata Transient Mortal Cache Value value throws Exception output write Object value value output write Object value metadata Unsigned Numeric write Unsigned Long output value created Unsigned Numeric write Unsigned Long output value last Used Override public Metadata Transient Mortal Cache Value read Object Object Input input throws Exception Class Found Exception Object v input read Object Metadata metadata Metadata input read Object long created Unsigned Numeric read Unsigned Long input long last Used Unsigned Numeric read Unsigned Long input return new Metadata Transient Mortal Cache Value v metadata created last Used Override public Integer get Id return Ids Override public Set Class extends Metadata Transient Mortal Cache Value get Type Classes return Util Class extends Metadata Transient Mortal Cache Value Set Metadata Transient Mortal Cache Value class
package org remoting import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids import java io Exception import java io Object Input import java io Object Output import java io Serializable import java util Arrays import java util Set Wrapper object entries arrive via Tful interface author Michael Neale since public class Cache Entry implements Serializable private static final long serial Version href http en wikipedia org wiki Content type value example application octet stream Often used headers public String content Type payload actual form contents depends content Type field String data content Type application json application xml text public byte data public Cache Entry public Cache Entry String content Type byte data content Type content Type data data Override public boolean equals Object return true instanceof Cache Entry return false Cache Entry Cache Entry return content Type null content Type equals content Type content Type null Arrays equals data data Override public int hash Code return content Type null content Type hash Code data null Arrays hash Code data public static class Externalizer extends Abstract Externalizer Cache Entry Override public Set Class extends Cache Entry get Type Classes return Util Class extends Cache Entry Set Cache Entry class Override public void write Object Object Output Cache Entry obj throws Exception write obj content Type write Int obj data length write obj data Override public Cache Entry read Object Object Input throws Exception Class Found Exception String content Type read int len read Int byte data new byte len read Fully data return new Cache Entry content Type data Override public Integer get Id return Ids
package org util import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util Map import java util Properties import org commands Replicable Command import org commands module Module Command Extensions import org commands module Module Command Factory import org commands module Module Command Initializer import org commands remote Cache Rpc Command import org commons util Service Finder import org factories components Module Metadata File Finder import org lifecycle Module Lifecycle import org util logging Log import org util logging Log Factory code Module Properties code class represents module service extensions author Vladimir Blagojevic author Sanne Grinovero author Galder Zamarre since public class Module Properties extends Properties private static final long serial Version private static final Log log Log Factory get Log Module Properties class private Map Byte Module Command Factory command Factories private Map Byte Module Command Initializer command Initializers private Collection Class extends Replicable Command module Commands public static Collection Module Lifecycle resolve Module Lifecycles Class Loader cl return Service Finder load Module Lifecycle class cl Retrieves Iterable containing metadata file finders declared module param cl class loader use return Iterable Module Metadata File Finders public static Iterable Module Metadata File Finder get Module Metadata Files Class Loader cl return Service Finder load Module Metadata File Finder class cl Suppress Warnings unchecked public void load Module Command Handlers Class Loader cl Collection Module Command Extensions module Cmd Ext Loader Service Finder load Module Command Extensions class cl module Cmd Ext Loader iterator Next command Factories new Hash Map Byte Module Command Factory command Initializers new Hash Map Byte Module Command Initializer module Commands new Hash Set Class extends Replicable Command Module Command Extensions extension module Cmd Ext Loader log debugf Loading module command extension class extension Module Command Factory cmd Factory extension get Module Command Factory Module Command Initializer cmd Initializer extension get Module Command Initializer Map Entry Byte Class extends Replicable Command command cmd Factory get Module Commands entry Set byte id command get Key command Factories contains Key id throw new Illegal Argument Exception String format use id commands already use id command Factories get id get Class get Name command Factories put id cmd Factory module Commands add command get Value command Initializers put id cmd Initializer else log debugf module command extensions load command Initializers Collections empty Map command Factories Collections empty Map public Collection Class extends Replicable Command module Commands return module Commands public Map Byte Module Command Factory module Command Factories return command Factories public Map Byte Module Command Initializer module Command Initializers return command Initializers Suppress Warnings unchecked public Collection Class extends Cache Rpc Command module Cache Rpc Commands Collection Class extends Replicable Command cmds module Commands cmds null cmds Empty return Collections empty Set Collection Class extends Cache Rpc Command cache Rpc Cmds new Hash Set Class extends Cache Rpc Command Class extends Replicable Command module Cmd Class cmds Cache Rpc Command class Assignable module Cmd Class cache Rpc Cmds add Class extends Cache Rpc Command module Cmd Class return cache Rpc Cmds public Collection Class extends Replicable Command module Replicable Commands Collection Class extends Replicable Command cmds module Commands cmds null cmds Empty return Collections empty Set Collection Class extends Replicable Command replicable Cmds new Hash Set Class extends Replicable Command Class extends Replicable Command module Cmd Class cmds Cache Rpc Command class Assignable module Cmd Class replicable Cmds add module Cmd Class return replicable Cmds
package org container entries import static org commons util Util Str import java io Exception import java io Object Input import java io Object Output import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids import org metadata Embedded Metadata import org metadata Metadata cache entry mortal e lifespan author Manik Surtani since public class Mortal Cache Entry extends Abstract Internal Cache Entry protected Object value protected long lifespan protected long created public Mortal Cache Entry Object key Object value long lifespan long created super key value value lifespan lifespan created created Override public Object get Value return value Override public Object set Value Object value return value value Override public final boolean Expired long return Expiry Helper Expired Mortal lifespan created Override public final boolean Expired return Expired System current Time Millis Override public final boolean Expire return true public void set Lifespan long lifespan lifespan lifespan Override public final long get Created return created Override public final long get Last Used return Override public final long get Lifespan return lifespan Override public final long get Max Idle return Override public final long get Expiry Time return lifespan created lifespan Override public final void touch op Override public final void touch long current Time Millis op Override public final void reincarnate reincarnate System current Time Millis Override public void reincarnate long created Override public Internal Cache Value Internal Cache Value return new Mortal Cache Value value created lifespan Override public Metadata get Metadata return new Embedded Metadata Builder lifespan lifespan build Override public void set Metadata Metadata metadata throw new Illegal State Exception Metadata set mortal entries need recreated via entry factory Override public Mortal Cache Entry clone return Mortal Cache Entry super clone public static class Externalizer extends Abstract Externalizer Mortal Cache Entry Override public void write Object Object Output output Mortal Cache Entry mce throws Exception output write Object mce key output write Object mce value Unsigned Numeric write Unsigned Long output mce created output write Long mce lifespan could negative use unsigned longs Override public Mortal Cache Entry read Object Object Input input throws Exception Class Found Exception Object k input read Object Object v input read Object long created Unsigned Numeric read Unsigned Long input Long lifespan input read Long return new Mortal Cache Entry k v lifespan created Override public Integer get Id return Ids Override public Set Class extends Mortal Cache Entry get Type Classes return Util Set Mortal Cache Entry class Override public String String return Mortal Cache Entry key Str key value Str value
package org container entries import java io Exception import java io Object Input import java io Object Output import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids mortal cache value correspond link org container entries Mortal Cache Entry author Manik Surtani since public class Mortal Cache Value extends Immortal Cache Value protected long created protected long lifespan public Mortal Cache Value Object value long created long lifespan super value created created lifespan lifespan Override public final long get Created return created public final void set Created long created created created Override public final long get Lifespan return lifespan public final void set Lifespan long lifespan lifespan lifespan Override public boolean Expired long return Expiry Helper Expired Mortal lifespan created Override public boolean Expired return Expired System current Time Millis Override public final boolean Expire return true Override public Internal Cache Entry Internal Cache Entry Object key return new Mortal Cache Entry key value lifespan created Override public long get Expiry Time return lifespan created lifespan Override public boolean equals Object return true instanceof Mortal Cache Value return false super equals return false Mortal Cache Value Mortal Cache Value created created return false lifespan lifespan return false return true Override public int hash Code int result super hash Code result result int created created result result int lifespan lifespan return result Override public String String return Mortal Cache Value value value lifespan lifespan created created Override public Mortal Cache Value clone return Mortal Cache Value super clone public static class Externalizer extends Abstract Externalizer Mortal Cache Value Override public void write Object Object Output output Mortal Cache Value mcv throws Exception output write Object mcv value Unsigned Numeric write Unsigned Long output mcv created output write Long mcv lifespan could negative use unsigned longs Override public Mortal Cache Value read Object Object Input input throws Exception Class Found Exception Object v input read Object long created Unsigned Numeric read Unsigned Long input Long lifespan input read Long return new Mortal Cache Value v created lifespan Override public Integer get Id return Ids Override public Set Class extends Mortal Cache Value get Type Classes return Util Class extends Mortal Cache Value Set Mortal Cache Value class
package org commons hash import java io Object Input import java util Collections import java util Set import org commons marshall Ids import org commons marshall Wrapped Byte Array import org commons marshall exts State Externalizer import net jcip annotations Immutable import net jcip annotations Thread Safe Murmur Hash implementation Java based Austin Appleby href https code google com p smhasher source browse trunk Murmur Hash cpp original implementing x version always faster bit native processors even bit ran bit also fast faster x version modern bit processors author Patrick Mc Farland see href http sites google com site murmurhash Murmur Hash website see href http en wikipedia org wiki Murmur Hash Murmur Hash entry Wikipedia since Thread Safe Immutable public class Murmur Hash implements Hash private final static Murmur Hash instance new Murmur Hash public static final byte byte public static Murmur Hash get Instance return instance private Murmur Hash static class State long h long h long k long k long c long c static long getblock byte key int return key x key x key x key x key x key x key x key x static void bmix State state state k state c state k state k state k state k state c state h state k state h state h state h state h state h state k state c state k state k state k state k state c state h state k state h state h state h state h x dce state h state h x ab state c state c x b c state c state c x bce static long fmix long k k k k xff afd ed ccd k k k xc ceb fe ec k k return k Hash value using x bit variant Murmur Hash param key value hash param seed random value return bit hashed key array containing two longs public static long Murmur Hash x final byte key final int seed State state new State state h x e c f af seed state h x dcd f cd fd seed state c x c b state c x cf ad f int key length state k getblock key state k getblock key bmix state state k state k int tail key length switch key length case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k key tail bmix state state h key length state h state h state h state h state h fmix state h state h fmix state h state h state h state h state h return new long state h state h Hash value using x bit variant Murmur Hash param key value hash param seed random value return bit hashed key public static long Murmur Hash x final byte key final int seed Exactly Murmur Hash x except returns state h State state new State state h x e c f af seed state h x dcd f cd fd seed state c x c b state c x cf ad f int key length state k getblock key state k getblock key bmix state state k state k int tail key length switch key length case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k long key tail case state k key tail bmix state state h key length state h state h state h state h state h fmix state h state h fmix state h state h state h state h state h return state h Hash value using x bit variant Murmur Hash param key value hash param seed random value return bit hashed key public static int Murmur Hash x final byte key final int seed return int Murmur Hash x key seed Hash value using x bit variant Murmur Hash param key value hash param seed random value return bit hashed key array containing two longs public static long Murmur Hash x final long key final int seed State state new State state h x e c f af seed state h x dcd f cd fd seed state c x c b state c x cf ad f int key length state k key state k key bmix state long tail key key length Key length odd key length state k tail bmix state state h key length state h state h state h state h state h fmix state h state h fmix state h state h state h state h state h return new long state h state h Hash value using x bit variant Murmur Hash param key value hash param seed random value return bit hashed key public static long Murmur Hash x final long key final int seed Exactly Murmur Hash x except returns state h State state new State state h x e c f af seed state h x dcd f cd fd seed state c x c b state c x cf ad f int key length state k key state k key bmix state long tail key key length key length state k tail bmix state state h key length state h state h state h state h state h fmix state h state h fmix state h state h state h state h state h return state h Hash value using x bit variant Murmur Hash param key value hash param seed random value return bit hashed key public static int Murmur Hash x final long key final int seed return int Murmur Hash x key seed Override public int hash byte payload return Murmur Hash x payload Hashes byte array efficiently param payload byte array hash return hash code byte array public static int hash long payload return Murmur Hash x payload Override public int hash int hashcode Obtained inlining Murmur Hash x byte removing unused code since know input always bytes need bytes output byte b byte hashcode byte b byte hashcode byte b byte hashcode byte b byte hashcode State state new State state h x e c f af state h x dcd f cd fd state c x c b state c x cf ad f state k state k state k long b state k long b state k long b state k b bmix state state h state h state h state h state h state h fmix state h state h fmix state h state h state h state h state h return int state h Override public int hash Object instanceof byte return hash byte else instanceof Wrapped Byte Array return hash Wrapped Byte Array get Bytes else instanceof long return hash long else instanceof String return hash String String else return hash hash Code private int hash String String return int Murmur Hash x String private long Murmur Hash x String String long seed Exactly Murmur Hash x except works directly String chars Murmur Hash State state new Murmur Hash State state h x e c f af seed state h x dcd f cd fd seed state c x c b state c x cf ad f int byte Len int string Len length int string Len char c char int cp Character Surrogate c cp c else Character High Surrogate c string Len char c char Character Low Surrogate c cp Character Code Point c c else cp else cp else cp cp x f add Byte state byte cp byte Len else cp x ff byte b byte xc x f cp byte b byte x x f cp add Byte state b byte Len add Byte state b byte Len else cp xffff byte b byte xe x f cp byte b byte x x f cp byte b byte x x f cp add Byte state b byte Len add Byte state b byte Len add Byte state b byte Len else byte b byte xf x cp byte b byte x x f cp byte b byte x x f cp byte b byte x x f cp add Byte state b byte Len add Byte state b byte Len add Byte state b byte Len add Byte state b byte Len long saved state k long saved state k state k state k switch byte Len case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k long byte saved case state k byte saved bmix state state h byte Len state h state h state h state h state h fmix state h state h fmix state h state h state h state h state h return state h private void add Byte State state byte b int len int shift len x long bb b xff shift len x state k bb else state k bb len xf xf bmix state state k state k Override public boolean equals Object return null get Class get Class Override public int hash Code return Override public String String return Murmur Hash public static class Externalizer extends State Externalizer Murmur Hash Override public Set Class extends Murmur Hash get Type Classes return Collections singleton Murmur Hash class Override public Murmur Hash read Object Object Input input return instance Override public Integer get Id return Ids
package org factories import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names get Default Thread Prio import static org factories Known Component Names shortened import java util concurrent Executor import java util concurrent Executor Service import java util concurrent Scheduled Executor Service import java util concurrent Thread Factory import org commons Cache Configuration Exception import org commons executors Blocking Thread Pool Executor Factory import org commons executors Scheduled Thread Pool Executor Factory import org commons executors Thread Pool Executor Factory import org configuration global Global Configuration import org configuration global Thread Pool Configuration import org executors Lazy Initializing Blocking Task Aware Executor Service import org executors Lazy Initializing Executor Service import org executors Lazy Initializing Scheduled Executor Service import org factories annotations Default Factory import org factories annotations Stop import org factories threads Default Thread Factory import org util concurrent Blocking Task Aware Executor Service factory specifically knows create named executors author Manik Surtani author Pedro Ruivo since Default Factory classes Executor Service class Executor class Scheduled Executor Service class Blocking Task Aware Executor Service class public class Named Executors Factory extends Named Component Factory implements Auto Instantiable Factory private Executor Service notification Executor private Executor Service async Transport Executor private Executor Service persistence Executor private Blocking Task Aware Executor Service remote Commands Executor private Scheduled Executor Service expiration Executor private Executor Service state Transfer Executor private Executor Service async Operations Executor private Scheduled Executor Service timeout Executor Override Suppress Warnings unchecked public construct Class component Type String component Name try Construction happens startup either Cache Manager Cache using synchronized protection great impact app performance component Name equals synchronized notification Executor null notification Executor create Executor Service global Configuration listener Thread Pool Executor Service Type return notification Executor else component Name equals synchronized persistence Executor null persistence Executor create Executor Service global Configuration persistence Thread Pool Executor Service Type return persistence Executor else component Name equals synchronized async Transport Executor null async Transport Executor create Executor Service global Configuration transport transport Thread Pool Executor Service Type return async Transport Executor else component Name equals synchronized expiration Executor null expiration Executor create Executor Service global Configuration expiration Thread Pool Executor Service Type return expiration Executor else component Name equals synchronized remote Commands Executor null remote Commands Executor create Executor Service global Configuration transport remote Command Thread Pool Executor Service Type return remote Commands Executor else component Name equals synchronized state Transfer Executor null state Transfer Executor create Executor Service global Configuration state Transfer Thread Pool Executor Service Type return state Transfer Executor else component Name equals synchronized async Operations Executor null async Operations Executor create Executor Service global Configuration async Thread Pool Executor Service Type return async Operations Executor else component Name ends synchronized timeout Executor null timeout Executor create Executor Service null Executor Service Type return timeout Executor else throw new Cache Configuration Exception Unknown named executor component Name catch Cache Configuration Exception ce throw ce catch Exception e throw new Cache Configuration Exception Unable instantiate Executor Factory named component component Name e Stop priority public void stop remote Commands Executor null remote Commands Executor shutdown notification Executor null notification Executor shutdown persistence Executor null persistence Executor shutdown async Transport Executor null async Transport Executor shutdown expiration Executor null expiration Executor shutdown state Transfer Executor null state Transfer Executor shutdown timeout Executor null timeout Executor shutdown async Operations Executor null async Operations Executor shutdown Suppress Warnings unchecked private extends Executor Service create Executor Service Thread Pool Configuration thread Pool Configuration String component Name Executor Service Type type Thread Factory thread Factory Thread Pool Executor Factory executor Factory thread Pool Configuration null thread Factory thread Pool Configuration thread Factory null thread Pool Configuration thread Factory create Thread Factory Defaults global Configuration component Name executor Factory thread Pool Configuration thread Pool Factory null thread Pool Configuration thread Pool Factory create Thread Pool Factory Defaults component Name type else thread Factory create Thread Factory Defaults global Configuration component Name executor Factory create Thread Pool Factory Defaults component Name type switch type case return new Lazy Initializing Scheduled Executor Service executor Factory thread Factory case final String controller Name Controller shortened component Name global Configuration transport node Name return new Lazy Initializing Blocking Task Aware Executor Service executor Factory thread Factory global Component Registry get Time Service controller Name default return new Lazy Initializing Executor Service executor Factory thread Factory private Thread Factory create Thread Factory Defaults Global Configuration global Cfg final String component Name Use defaults return new Default Thread Factory null get Default Thread Prio component Name Default Thread Factory global Cfg transport node Name shortened component Name private Thread Pool Executor Factory create Thread Pool Factory Defaults final String component Name Executor Service Type type switch type case return Scheduled Thread Pool Executor Factory create default int default Queue Size Known Component Names get Default Queue Size component Name int default Max Threads Known Component Names get Default Threads component Name return Blocking Thread Pool Executor Factory create default Max Threads default Queue Size private enum Executor Service Type
package org interceptors locking import java util Collection import java util function Predicate import org Invalid Cache Usage Exception import org commands Data Command import org commands Flag Affected Command import org commands write Data Write Command import org context Invocation Context import org util logging Log import org util logging Log Factory Locking interceptor used non transactional caches author Mircea Markus public class Non Transactional Locking Interceptor extends Abstract Locking Interceptor private static final Log log Log Factory get Log Non Transactional Locking Interceptor class private final Predicate Object Lock Key Lock Key Override protected Log get Log return log Override protected final Object visit Data Read Command Invocation Context ctx Data Command command throws Throwable assert Non Transactional ctx return invoke Next ctx command Override protected Object visit Data Write Command Invocation Context ctx Data Write Command command throws Throwable assert Non Transactional ctx return visit Non Tx Data Write Command ctx command Override protected Object handle Read Many Command Invocation Context ctx Flag Affected Command command Collection keys assert Non Transactional ctx return invoke Next ctx command Override protected Object handle Write Many Command Invocation Context ctx Flag Affected Command command Collection keys boolean forwarded throws Throwable assert Non Transactional ctx forwarded Skip Locking command return invoke Next ctx command try lock Record ctx keys stream filter Lock Key get Lock Timeout Millis command catch Throwable lock Manager unlock ctx throw return invoke Next Finally ctx command unlock Return Handler private void assert Non Transactional Invocation Context ctx happens cache used transaction scope ctx Tx Scope throw new Invalid Cache Usage Exception non transactional cache accessed transactional Invocation Context
package org interceptors distribution import java util Array List import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Map Entry import java util Set import java util concurrent Completable Future import java util function Bi Consumer import org commands functional Read Write Key Command import org commands functional Read Write Key Value Command import org commands functional Read Write Many Command import org commands functional Read Write Many Entries Command import org commands functional Write Key Command import org commands functional Write Key Value Command import org commands functional Write Many Command import org commands functional Write Many Entries Command import org commands read Get Cache Entry Command import org commands write Compute Command import org commands write Compute Absent Command import org commands write Put Key Value Command import org commands write Put Map Command import org commands write Remove Command import org commands write Replace Command import org commands write Write Command import org container entries Cache Entry import org context Invocation Context import org context impl Flag Bit Sets import org distribution Localized Cache Topology import org distribution ch Consistent Hash import org interceptors Invocation Finally Action import org interceptors Invocation Success Function import org remoting responses Successful Response import org remoting transport Address import org statetransfer Outdated Topology Exception import org util concurrent Completable Futures import org util logging Log import org util logging Log Factory Non transactional interceptor used distributed caches support concurrent writes implemented based lock forwarding g k written node owners k forwards given command acquires lock k forwards remaining owners applies change returns lock acquisition needed applies result well releases lock returns result operation p Note even though introduces additional forwarding behaves well conjunction consistent hash aware hotrod clients connect directly lock owner author Mircea Markus author Dan Berindei since public class Non Tx Distribution Interceptor extends Base Distribution Interceptor private static Log log Log Factory get Log Non Tx Distribution Interceptor class private static final boolean trace log Trace Enabled private final Put Map Helper put Map Helper new Put Map Helper create Remote Callback private final Read Write Many Helper read Write Many Helper new Read Write Many Helper create Remote Callback private final Read Write Many Entries Helper read Write Many Entries Helper new Read Write Many Entries Helper create Remote Callback private final Write Many Entries Helper write Many Entries Helper new Write Many Entries Helper create Remote Callback private final Write Many Helper write Many Helper new Write Many Helper create Remote Callback private Map Address Set Integer primary Owners Segments Consistent Hash ch Map Address Set Integer map new Hash Map ch get Members size int segment segment ch get Num Segments segment Address owner ch locate Primary Owner Segment segment map compute Absent owner new Hash Set add segment return map assuming function ran primary owner given segments private Map Address Set Integer backup Owners Segments Consistent Hash ch Set Integer segments Map Address Set Integer map new Hash Map ch get Members size ch Replicated Address member ch get Members map put member segments map remove rpc Manager get Address else Integer segment segments List Address owners ch locate Owners Segment segment int owners size map compute Absent owners get new Hash Set add segment return map Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Compute Absent Command Invocation Context ctx Compute Absent Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable return handle Read Write Many Command ctx command put Map Helper Override public Object visit Write Many Entries Command Invocation Context ctx Write Many Entries Command command throws Throwable return handle Write Many Command ctx command write Many Entries Helper Override public Object visit Write Many Command Invocation Context ctx Write Many Command command throws Throwable return handle Write Many Command ctx command write Many Helper Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable return handle Read Write Many Command ctx command read Write Many Helper Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable return handle Read Write Many Command ctx command read Write Many Entries Helper private extends Write Command Container Item Object handle Write Many Command Invocation Context ctx command Write Many Command Helper Container Item helper throws Exception due possible repeating operation Outdated Topology Exception thrown possible function applied multiple times nodes general solution proper solution probably record Command Invocation Id entry implement housekeeping Localized Cache Topology cache Topology check Topology Id command Consistent Hash ch cache Topology get Write Consistent Hash ctx Origin Local Map Address Set Integer segment Map primary Owners Segments ch Count Completable Future Future new Count Completable Future segment Map size Go members node invoke Next node owner keys others keys issue remote call Everything finished Future completed Entry Address Set Integer pair segment Map entry Set Address member pair get Key Set Integer segments pair get Value handle Segments Write Many Command ctx command helper ch Future member segments return async Value Future else origin local check data need return handle Remote Write Many Command ctx command helper private extends Write Command Container Item void handle Segments Write Many Command Invocation Context ctx command Write Many Command Helper Container Item helper Consistent Hash ch Count Completable Future Future Address member Set Integer segments member equals rpc Manager get Address Container Items filter Wrap ctx command segments helper local Command helper copy Local command Items Local keys backed handler counters Future decremented backup calls complete invoke Next Finally ctx local Command create Local Invocation Handler ch Future segments helper f rv return copy helper copy Primary command ch segments int size helper get Items copy size size Future count return rpc Manager invoke Remotely Async Collections singleton List member copy default Sync Options Complete response Map throwable throwable null Future complete Exceptionally throwable else get Successful Response Fail response Map Future rsp Future complete Exceptionally Outdated Topology Exception null return Future count private extends Write Command Item Object handle Remote Write Many Command Invocation Context ctx command Write Many Command Helper Item helper Item item helper get Items command Object key helper item key item ctx lookup Entry key null entry Factory wrap External Entry ctx key null false true helper Register Remote Callback command return invoke Next Apply ctx command helper remote Callback else return invoke Next ctx command private extends Write Command Container Item Container filter Wrap Invocation Context ctx command Set Integer segments Write Many Command Helper Container Item helper Filter command keys entries collection wrap null context yet Container Items helper new Container Item item helper get Items command Object key helper item key item segments contains key Partitioner get Segment key helper accumulate Items item Cache Entry entry ctx lookup Entry key entry null executed write commands entry Factory wrap External Entry ctx key null false true return Items private extends Write Command Container Item Object handle Read Write Many Command Invocation Context ctx command Write Many Command Helper Item Container helper throws Exception due possible repeating operation Outdated Topology Exception thrown possible function applied multiple times nodes general solution proper solution probably record Command Invocation Id entry implement housekeeping Consistent Hash ch check Topology Id command get Write Consistent Hash ctx Origin Local Map Address Set Integer segment Map primary Owners Segments ch Object results null command Flag Flag Bit Sets results new Object helper get Items command size Merging Completable Future Object Future new Merging Completable Future segment Map size results helper transform Result Mutable Int offset new Mutable Int Go members node invoke Next node owner keys others keys issue remote call Everything finished Future completed Entry Address Set Integer pair segment Map entry Set Address member pair get Key Set Integer segments pair get Value member equals rpc Manager get Address handle Local Segments Read Write Many Command ctx command helper ch Future offset segments else handle Remote Segments Read Write Many Command command helper ch Future offset member segments return async Value Future else origin local return handle Remote Read Write Many Command ctx command helper private extends Write Command Container Item void handle Local Segments Read Write Many Command Invocation Context ctx command Write Many Command Helper Container Item helper Consistent Hash ch Merging Completable Future Object Future Mutable Int offset Set Integer segments throws Exception Container Items helper new Container List Completable Future retrievals null Filter command keys entries collection record remote retrieval context yet Item item helper get Items command Object key helper item key item segments contains key Partitioner get Segment key helper accumulate Items item retrievals add Remote Get ctx command retrievals key int size helper container Size Items size Future count return final int Offset offset value offset value size local Command helper copy Local command Items Invocation Finally Action handler create Local Invocation Handler ch Future segments helper Merging Completable Future move List Items Future Offset retrievals null invoke Next Finally ctx local Command handler else must wait retrievals finish proceeding local command Completable Future ra retrievals Array new Completable Future retrievals size Object result async Invoke Next ctx command Completable Future ra make Stage result Finally ctx command handler Local keys backed handler counters Future decremented backup calls complete private extends Write Command Item void handle Remote Segments Read Write Many Command command Write Many Command Helper Item helper Consistent Hash ch Merging Completable Future Object Future Mutable Int offset Address member Set Integer segments final int Offset offset value iterate entries Read Segment Aware Map really worth copy helper copy Primary command ch segments int size helper get Items copy size offset value size size Future count return Send command primary owner rpc Manager invoke Remotely Async Collections singleton List member copy default Sync Options Complete responses throwable throwable null Future complete Exceptionally throwable else Successful Response response get Successful Response Fail responses Future rsp Future complete Exceptionally Outdated Topology Exception response null return Object response Value response get Response Value Merging Completable Future move List Items Future response Value Future Offset Future count private extends Write Command Item Object handle Remote Read Write Many Command Invocation Context ctx command Write Many Command Helper Item helper throws Exception List Completable Future retrievals null check data need Item item helper get Items command retrievals add Remote Get ctx command retrievals helper item key item Completable Future Void delay retrievals null Completable Future ra retrievals Array new Completable Future retrievals size delay Completable Future ra else delay Completable Futures completed Null Object result async Invoke Next ctx command delay helper Register Remote Callback command return make Stage result Apply ctx command helper remote Callback else return result private List Completable Future add Remote Get Invocation Context ctx Write Command command List Completable Future retrievals Object key throws Exception Cache Entry cache Entry ctx lookup Entry key cache Entry null rare situation n mind bit ineffective remote gets command Flag Flag Bit Sets command Flag Flag Bit Sets entry Factory wrap External Entry ctx key null false true else retrievals null retrievals new Array List Get Cache Entry Command fake Get Command cf build Get Cache Entry Command key command get Flags Bit Set Completable Future get Future remote Get ctx fake Get Command fake Get Command get Key true retrievals add get Future return retrievals private extends Write Command extends Count Completable Future Item Invocation Finally Action create Local Invocation Handler Consistent Hash ch Future Set Integer segments Write Many Command Helper Item helper Bi Consumer Object return Value Consumer return r Ctx r Command rv throwable throwable null Future complete Exceptionally throwable else try return Value Consumer accept Future rv Map Address Set Integer backup Owners backup Owners Segments ch segments Entry Address Set Integer backup backup Owners entry Set r Command original command backup Copy helper copy Backup r Command ch backup get Value helper get Items backup Copy Empty continue Set Address backup Owner Collections singleton backup get Key Synchronous backup Copy Future increment rpc Manager invoke Remotely Async backup Owner backup Copy default Sync Options Complete response Map remote Throwable remote Throwable null Future complete Exceptionally remote Throwable else Future count else rpc Manager invoke Remotely Async backup Owner backup Copy default Async Options Future count catch Throwable Future complete Exceptionally Override public Object visit Write Key Value Command Invocation Context ctx Write Key Value Command command throws Throwable return handle Non Tx Write Command ctx command Override public Object visit Write Key Command Invocation Context ctx Write Key Command command throws Throwable return handle Non Tx Write Command ctx command private final static class Mutable Int public int value private extends Write Command Object write Many Remote Callback Write Many Command Helper helper Invocation Context ctx command Object rv Consistent Hash ch check Topology Id command get Write Consistent Hash already checked command topology actual assume really primary owner Map Address Set Integer backups backup Owners Segments ch ch get Primary Segments Owner rpc Manager get Address backups Empty return rv boolean Sync Synchronous command Completable Future futures Sync new Completable Future backups size null int future Entry Address Set Integer backup backups entry Set copy helper copy Backup command ch backup get Value Sync futures future rpc Manager invoke Remotely Async Collections singleton backup get Key copy default Sync Options else rpc Manager invoke Remotely Async Collections singleton backup get Key copy default Async Options return Sync async Value Completable Future futures Apply nil rv rv private extends Write Command Invocation Success Function create Remote Callback Write Many Command Helper helper return ctx command rv write Many Remote Callback helper ctx command rv
package org context impl import java util Collections import java util Map import java util Set import org commons util Collection Factory import org container entries Cache Entry import org remoting transport Address Context used non transactional calls remote local author Mircea Markus jboss com since public class Non Tx Invocation Context extends Abstract Invocation Context private static final int private final Map Object Cache Entry looked Entries private Set Object locked Keys private Object lock Owner public Non Tx Invocation Context int num Entries Address origin super origin looked Entries Collection Factory make Map Collection Factory compute Capacity num Entries public Non Tx Invocation Context Address origin super origin looked Entries Collection Factory make Map Override public Cache Entry lookup Entry Object k return looked Entries get k Override public void remove Looked Entry Object key looked Entries remove key Override public void put Looked Entry Object key Cache Entry e looked Entries put key e Override Suppress Warnings unchecked public Map Object Cache Entry get Looked Entries return Map Object Cache Entry looked Entries null Collections empty Map looked Entries Override public boolean Tx Scope return false Override public Object get Lock Owner return lock Owner Override public void set Lock Owner Object lock Owner lock Owner lock Owner Override public Non Tx Invocation Context clone Non Tx Invocation Context dolly Non Tx Invocation Context super clone dolly looked Entries put looked Entries return dolly Override public void add Locked Key Object key locked Keys null locked Keys Collection Factory make Set locked Keys add key Override public Set Object get Locked Keys return locked Keys null Collections empty Set locked Keys Override public void clear Locked Keys locked Keys null
package org commons marshall exts import java io Exception import java io Object Output import org commons marshall Abstract Externalizer externalizer writes state simply marshalls class information author Galder Zamarre since public abstract class State Externalizer extends Abstract Externalizer Override public void write Object Object Output output object throws Exception instance state op
package org container offheap import java io Exception import org commons Cache Exception import org commons marshall Marshaller import org commons marshall Wrapped Byte Array import org commons marshall Wrapped Bytes import org configuration cache Configuration import org container Internal Entry Factory import org container entries Internal Cache Entry import org container versioning Entry Version import org factories annotations Inject import org metadata Embedded Metadata import org metadata Metadata import org util Time Service Factory create Cache Entry instances heap memory author wburns since public class Heap Entry Factory Impl implements Heap Entry Factory private static final Heap Memory Heap Memory private static final byte new byte private Marshaller marshaller private Heap Memory Allocator allocator private Time Service time Service private Internal Entry Factory internal Entry Factory private boolean eviction Enabled custom store metadata bits used private static final byte Version set combination following types private static final byte one following ever set private static final byte private static final byte private static final byte private static final byte composed hash Code int key Length int metadata Length int value Length int type byte private static final int Inject public void inject Marshaller marshaller Heap Memory Allocator allocator Time Service time Service Internal Entry Factory internal Entry Factory Configuration configuration marshaller marshaller allocator allocator time Service time Service internal Entry Factory internal Entry Factory eviction Enabled configuration memory Eviction Enabled Create entry heap first bytes always reserved future reference another entry param key key use param value value use param metadata metadata use return address entry created heap Override public long create Wrapped Bytes key Wrapped Bytes value Metadata metadata byte type byte metadata Bytes metadata instanceof Embedded Metadata Entry Version version metadata version byte version Bytes version null type try version Bytes marshaller object Byte Buffer version catch Exception Interrupted Exception e throw new Cache Exception e else type version Bytes long lifespan metadata lifespan long max Idle metadata max Idle lifespan max Idle type metadata Bytes version Bytes else lifespan max Idle type metadata Bytes new byte version Bytes length Bits put Long metadata Bytes lifespan Bits put Long metadata Bytes time Service wall Clock Time System arraycopy version Bytes metadata Bytes version Bytes length else lifespan max Idle type metadata Bytes new byte version Bytes length Bits put Long metadata Bytes max Idle Bits put Long metadata Bytes time Service wall Clock Time System arraycopy version Bytes metadata Bytes version Bytes length else type metadata Bytes new byte version Bytes length Bits put Long metadata Bytes max Idle Bits put Long metadata Bytes lifespan long time time Service wall Clock Time Bits put Long metadata Bytes time Bits put Long metadata Bytes time System arraycopy version Bytes metadata Bytes version Bytes length else type try metadata Bytes marshaller object Byte Buffer metadata catch Exception Interrupted Exception e throw new Cache Exception e int key Size key get Length int metadata Size metadata Bytes length int value Size value get Length Eviction requires additional memory pointer beginning points linked node int header Offset eviction Enabled long total Size header Offset key Size metadata Size value Size long memory Address allocator allocate total Size header Offset int offset eviction Enabled Write empty linked address pointer first put Long memory Address offset offset put Int memory Address offset key hash Code offset put Int memory Address offset key get Length offset put Int memory Address offset metadata Bytes length offset put Int memory Address offset value get Length offset put Byte memory Address offset type offset put Bytes key get Bytes key back Array Offset memory Address offset key Size offset key Size put Bytes metadata Bytes memory Address offset metadata Size offset metadata Size put Bytes value get Bytes value back Array Offset memory Address offset value Size offset value Size assert offset total Size return memory Address Override public long get Size long entry Address int header Offset eviction Enabled int key Length get Int entry Address header Offset int metadata Length get Int entry Address header Offset int value Length get Int entry Address header Offset return header Offset key Length metadata Length value Length Override public long get Next long entry Address return get Long entry Address eviction Enabled Override public void set Next long entry Address long value put Long entry Address eviction Enabled value Override public long get Lru Node long entry Address return get Long entry Address Override public void set Lru Node long entry Address long value put Long entry Address value Override public int get Hash Code long entry Address bytes eviction needed optional bytes linked pointer int header Offset eviction Enabled return get Int entry Address header Offset Assumes address n contain linked pointer beginning param address address read entry return entry memory location Override public Internal Cache Entry Wrapped Bytes Wrapped Bytes Memory long address int header Offset eviction Enabled int offset header Offset int hash Code get Int address offset offset byte key Bytes new byte get Int address offset offset byte metadata Bytes new byte get Int address offset offset byte value Bytes new byte get Int address offset offset byte metadata Type get Byte address offset offset get Bytes address offset key Bytes key Bytes length offset key Bytes length get Bytes address offset metadata Bytes metadata Bytes length offset metadata Bytes length get Bytes address offset value Bytes value Bytes length offset value Bytes length Metadata metadata custom metadata metadata Type try metadata Metadata marshaller object Byte Buffer metadata Bytes catch Exception Class Found Exception e throw new Cache Exception e return internal Entry Factory create new Wrapped Byte Array key Bytes new Wrapped Byte Array value Bytes metadata else long lifespan long max Idle long created long last Used offset boolean Version metadata Type Ignore find type switch metadata Type x case lifespan max Idle created last Used break case max Idle lifespan Bits get Long metadata Bytes offset created Bits get Long metadata Bytes offset last Used break case lifespan max Idle Bits get Long metadata Bytes offset created last Used Bits get Long metadata Bytes offset break case lifespan Bits get Long metadata Bytes offset max Idle Bits get Long metadata Bytes offset created Bits get Long metadata Bytes offset last Used Bits get Long metadata Bytes offset break default throw new Illegal Argument Exception Unsupported type metadata Type Version try Entry Version version Entry Version marshaller object Byte Buffer metadata Bytes offset metadata Bytes length offset return internal Entry Factory create new Wrapped Byte Array key Bytes hash Code new Wrapped Byte Array value Bytes version created lifespan last Used max Idle catch Exception Class Found Exception e throw new Cache Exception e else return internal Entry Factory create new Wrapped Byte Array key Bytes hash Code new Wrapped Byte Array value Bytes Metadata null created lifespan last Used max Idle Override public Wrapped Bytes get Key long address long header Offset eviction Enabled int key Length get Int address header Offset byte key Bytes new byte key Length get Bytes address header Offset key Bytes key Bytes length return new Wrapped Byte Array key Bytes Assumes address points entry excluding pointer reference beginning param address address entry read param wrapped Bytes key check equals return whether key address equal Override public boolean equals Key long address Wrapped Bytes wrapped Bytes int header Offset eviction Enabled int hash Code wrapped Bytes hash Code hash Code get Int address header Offset return false int key Length get Int address header Offset key Length wrapped Bytes get Length return false int key Length byte b get Byte address header Offset b wrapped Bytes get Byte return false return true
package org distribution ch impl import java util Arrays import java util Hash Map import java util List import java util Map import org distribution ch Consistent Hash import org remoting transport Address class holds statistics consistent hash counts many segments owned primary owned member author Dan Berindei since public class Ownership Statistics private final Map Address Integer nodes private final int primary Owned private final int owned public Ownership Statistics List Address nodes nodes new Hash Map Address Integer nodes size int nodes size nodes put nodes get primary Owned new int nodes size owned new int nodes size public Ownership Statistics Consistent Hash ch List Address active Nodes active Nodes int ch get Num Segments List Address owners ch locate Owners Segment int j j owners size j Address address owners get j Integer node Index nodes get address node Index null j primary Owned node Index owned node Index public Ownership Statistics Ownership Statistics nodes new Hash Map Address Integer nodes primary Owned Arrays copy primary Owned primary Owned length owned Arrays copy owned owned length public int get Primary Owned Address Integer nodes get null return return primary Owned public int get Owned Address Integer nodes get null return return owned public void inc Primary Owned Address Integer nodes get null throw new Illegal Argument Exception Trying modify statistics node n exist primary Owned public void inc Owned Address Integer nodes get null throw new Illegal Argument Exception Trying modify statistics node n exist owned public void dec Primary Owned Address Integer nodes get null throw new Illegal Argument Exception Trying modify statistics node n exist primary Owned public void dec Owned Address Integer nodes get null throw new Illegal Argument Exception Trying modify statistics node n exist owned public int sum Primary Owned int segments Primary Owners int owned Count primary Owned segments Primary Owners owned Count return segments Primary Owners public int sum Owned int Owners Count int owned Count owned Owners Count owned Count return Owners Count public String String String Builder sb new String Builder Ownership Statistics boolean First true Map Entry Address Integer e nodes entry Set First sb append Address node e get Key Integer index e get Value sb append node append append primary Owned index append append owned index primary Owned index First false return sb String
package org configuration parsing import static org commons util String Property Replacer replace Properties import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names import static org factories Known Component Names shortened import java util Collections import java util Hash Map import java util Map import java util Objects import java util Properties import java util concurrent Thread Factory import java util concurrent Time Unit import javax xml stream Stream Constants import javax xml stream Stream Exception import org commons api Basic Cache Container import org commons configuration Built import org commons configuration Configured import org commons equivalence Equivalence import org commons executors Blocking Thread Pool Executor Factory import org commons executors Cached Thread Pool Executor Factory import org commons executors Scheduled Thread Pool Executor Factory import org commons executors Thread Pool Executor Factory import org commons marshall Advanced Externalizer import org commons util Util import org configuration cache Abstract Store Configuration Builder import org configuration cache Async Store Configuration Builder import org configuration cache Authorization Configuration Builder import org configuration cache Backup Configuration import org configuration cache Backup Configuration Builder import org configuration cache Backup Failure Policy import org configuration cache Cache Mode import org configuration cache Cluster Loader Configuration Builder import org configuration cache Configuration import org configuration cache Configuration Builder import org configuration cache Custom Store Configuration Builder import org configuration cache Index import org configuration cache Interceptor Configuration import org configuration cache Interceptor Configuration Builder import org configuration cache Memory Configuration Builder import org configuration cache Partition Handling Configuration Builder import org configuration cache Security Configuration Builder import org configuration cache Single File Store Configuration Builder import org configuration cache Storage Type import org configuration cache Store Configuration Builder import org configuration global Global Authorization Configuration Builder import org configuration global Global Configuration Builder import org configuration global Global Role Configuration Builder import org configuration global Global State Configuration Builder import org configuration global Shutdown Hook Behavior import org configuration global Thread Pool Configuration import org configuration global Thread Pool Configuration Builder import org configuration global Transport Configuration Builder import org conflict Entry Merge Policy import org conflict Merge Policies import org eviction Eviction Type import org factories threads Default Thread Factory import org partitionhandling Partition Handling import org persistence cluster Cluster Loader import org persistence file Single File Store import org persistence spi Cache Loader import org remoting transport Transport import org security Principal Role Mapper import org security impl Cluster Role Mapper import org security impl Common Name Role Mapper import org security impl Identity Role Mapper import org transaction Locking Mode import org transaction Transaction Protocol import org util concurrent Isolation Level import org util logging Log import org util logging Log Factory import org kohsuke Meta Inf Services class implements parser schema files author Tristan Tarrant author Galder Zamarre since Meta Inf Services Namespaces Namespace uri urn config root Namespace uri urn config root Namespace uri urn config root Namespace root Namespace uri urn config root Namespace uri urn config root Namespace uri urn config root Namespace uri urn config root Namespace uri urn config root Namespace uri urn config root public class Parser implements Configuration Parser static final Log log Log Factory get Log Parser class private final Map String Default Thread Factory thread Factories new Hash Map private final Map String Thread Pool Configuration Builder thread Pools new Hash Map private final Map String String thread Pool Thread Factory new Hash Map public Parser Override public void read Element final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Container reader holder break case parse Groups reader holder break case parse Threads reader holder break default throw Parse Utils unexpected Element reader private void parse Serialization final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Global Configuration Builder builder holder get Global Configuration Builder int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder serialization marshaller Util get Instance value holder get Class Loader break case builder serialization version value break default throw Parse Utils unexpected Attribute reader parse Advanced Externalizers reader holder private void parse Advanced Externalizers final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Global Configuration Builder builder holder get Global Configuration Builder reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case int attributes reader get Attribute Count Advanced Externalizer advanced Externalizer null Integer id null Parse Utils require Attributes reader Attribute get Local Name int attributes String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case advanced Externalizer Util get Instance value holder get Class Loader break case id Integer value value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader id null builder serialization add Advanced Externalizer id advanced Externalizer else builder serialization add Advanced Externalizer advanced Externalizer break default throw Parse Utils unexpected Element reader private void parse Threads Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Thread Factory reader break case parse Cached Thread Pool reader holder break case parse Scheduled Thread Pool reader holder break case parse Blocking Bounded Queue Thread Pool reader holder break default throw Parse Utils unexpected Element reader Link thread factories thread pools referenced Map Entry String Thread Pool Configuration Builder entry thread Pools entry Set String thread Factory Name thread Pool Thread Factory get entry get Key thread Factory Name null Thread Factory thread Factory thread Factories get thread Factory Name entry get Value thread Factory thread Factory private void parse Blocking Bounded Queue Thread Pool Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Thread Pool Configuration Builder builder new Thread Pool Configuration Builder holder get Global Configuration Builder String name null String thread Factory Name null int max Threads int core Threads int queue Length long keep Alive int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case name value break case thread Factory Name value break case core Threads Integer value value break case max Threads Integer value value break case queue Length Integer value value break case keep Alive Long value value break default throw Parse Utils unexpected Attribute reader Thread Pool Executor Factory factory new Blocking Thread Pool Executor Factory max Threads core Threads queue Length keep Alive builder thread Pool Factory factory Keep track thread pool thread factory name mapping wait threads section processed link actual thread factories thread pools thread Pool Thread Factory put name thread Factory Name thread Pools put name builder Parse Utils require Content reader private void parse Scheduled Thread Pool Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Thread Pool Configuration Builder builder new Thread Pool Configuration Builder holder get Global Configuration Builder String name null String thread Factory Name null int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case name value break case thread Factory Name value break default throw Parse Utils unexpected Attribute reader Thread Pool Executor Factory factory Scheduled Thread Pool Executor Factory create builder thread Pool Factory factory Keep track thread pool thread factory name mapping wait threads section processed link actual thread factories thread pools thread Pool Thread Factory put name thread Factory Name thread Pools put name builder Parse Utils require Content reader private void parse Cached Thread Pool Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Thread Pool Configuration Builder builder new Thread Pool Configuration Builder holder get Global Configuration Builder String name null String thread Factory Name null int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case name value break case thread Factory Name value break default throw Parse Utils unexpected Attribute reader Thread Pool Executor Factory factory Cached Thread Pool Executor Factory create builder thread Pool Factory factory Keep track thread pool thread factory name mapping wait threads section processed link actual thread factories thread pools thread Pool Thread Factory put name thread Factory Name thread Pools put name builder Parse Utils require Content reader private void parse Thread Factory Extended Stream Reader reader throws Stream Exception String name null Thread Group thread Group null String thread Name Pattern null int priority minimum priority int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case name value break case thread Group new Thread Group value break case thread Name Pattern value break case priority Integer value value break default throw Parse Utils unexpected Attribute reader Default Thread Factory thread Factory new Default Thread Factory name thread Group priority thread Name Pattern null null thread Factories put name thread Factory Parse Utils require Content reader private void parse Groups Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Transport transport null int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case transport Util get Instance value holder get Class Loader break default throw Parse Utils unexpected Attribute reader transport null Set default transport holder get Global Configuration Builder transport default Transport else holder get Global Configuration Builder transport transport transport reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Stack File reader holder break default throw Parse Utils unexpected Element reader private void parse Stack File Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception String stack Name null int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case stack Name value holder get Global Configuration Builder transport add Property stack stack Name value break case holder get Global Configuration Builder transport add Property stack File Path stack Name value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Container Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception holder push Scope Parser Scope Global Configuration Builder builder holder get Global Configuration Builder reader get Schema since builder default Cache Name Basic Cache Container int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder global Jmx Statistics cache Manager Name value break case log ignore Xml Attribute attribute break case builder default Cache Name value break case log ignore Xml Attribute attribute break case log ignore Xml Attribute attribute break case builder async Thread Pool read create Thread Pool Configuration value break case builder listener Thread Pool read create Thread Pool Configuration value break case log eviction Executor Deprecated fallthrough case builder expiration Thread Pool read create Thread Pool Configuration value break case reader get Schema since throw Parse Utils unexpected Attribute reader attribute get Local Name else log ignored Replication Queue Attribute attribute get Local Name reader get Location get Line Number break case builder persistence Thread Pool read create Thread Pool Configuration value break case builder state Transfer Thread Pool read create Thread Pool Configuration value break case log ignore Xml Attribute attribute break case builder global Jmx Statistics enabled Boolean value value break case builder shutdown hook Behavior Shutdown Hook Behavior value value break default throw Parse Utils unexpected Attribute reader reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Transport reader holder break case parse Local Cache reader holder false break case parse Local Cache reader holder true break case parse Invalidation Cache reader holder false break case parse Invalidation Cache reader holder true break case parse Replicated Cache reader holder false break case parse Replicated Cache reader holder true break case parse Distributed Cache reader holder false break case parse Distributed Cache reader holder true break case reader get Schema since parse Scattered Cache reader holder false else throw Parse Utils unexpected Element reader break case reader get Schema since parse Scattered Cache reader holder true else throw Parse Utils unexpected Element reader break case parse Serialization reader holder break case reader get Schema since throw Parse Utils unexpected Element reader else parse Modules reader holder break case parse Jmx reader holder break case parse Global Security reader holder break case reader get Schema since parse Global State reader holder else throw Parse Utils unexpected Element reader break default reader handle holder holder pop Scope private void parse Global Security Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Parse Utils require Attributes reader reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Global Authorization reader holder break default throw Parse Utils unexpected Element reader private void parse Global Authorization Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Global Authorization Configuration Builder builder holder get Global Configuration Builder security authorization enable int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder audit Logger Util get Instance value holder get Class Loader break default throw Parse Utils unexpected Attribute reader Principal Role Mapper role Mapper null reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case role Mapper null throw Parse Utils unexpected Element reader Parse Utils require Attributes reader Parse Utils require Content reader role Mapper new Identity Role Mapper break case role Mapper null throw Parse Utils unexpected Element reader Parse Utils require Attributes reader Parse Utils require Content reader role Mapper new Common Name Role Mapper break case role Mapper null throw Parse Utils unexpected Element reader Parse Utils require Attributes reader Parse Utils require Content reader role Mapper new Cluster Role Mapper break case role Mapper null throw Parse Utils unexpected Element reader role Mapper parse Custom Mapper reader holder break case parse Global Role reader builder break default throw Parse Utils unexpected Element reader role Mapper null builder principal Role Mapper role Mapper private Principal Role Mapper parse Custom Mapper Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception String mapper Class Parse Utils require Single Attribute reader Attribute get Local Name Parse Utils require Content reader return Util get Instance mapper Class holder get Class Loader private void parse Global Role Extended Stream Reader reader Global Authorization Configuration Builder builder throws Stream Exception String attributes Parse Utils require Attributes reader Attribute get Local Name Attribute get Local Name Global Role Configuration Builder role builder role attributes String permission attributes split role permission permission int reader get Attribute Count Parse Utils require Namespace Attribute reader Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case case Already handled break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Jmx Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Global Configuration Builder builder holder get Global Configuration Builder int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder global Jmx Statistics jmx Domain value break case builder global Jmx Statistics Bean Server Lookup Util get Instance value holder get Class Loader break case builder global Jmx Statistics allow Duplicate Domains Boolean value value break default throw Parse Utils unexpected Attribute reader Properties properties parse Properties reader builder global Jmx Statistics Properties properties private void parse Modules Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception reader Next reader next Tag Stream Constants reader handle holder private void parse Transport Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Global Configuration Builder global Builder holder get Global Configuration Builder holder get Global Configuration Builder transport get Transport null holder get Global Configuration Builder transport default Transport Transport Configuration Builder transport holder get Global Configuration Builder transport int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case boolean stack Found transport get Property stack value null stack Found String file Path transport get Property stack File Path value transport add Property stack value transport add Property configuration File file Path break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case global Builder transport cluster Name value break case break case break case break case break case break case break case break case break case global Builder transport transport Thread Pool read create Thread Pool Configuration value break case reader get Schema since throw Parse Utils unexpected Attribute reader attribute get Local Name else log ignored Attribute total order executor attribute get Local Name reader get Location get Line Number case global Builder transport remote Command Thread Pool read create Thread Pool Configuration value break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case global Builder transport distributed Sync Timeout Long value value break case global Builder transport node Name value Default Thread Factory thread Factory thread Factories values thread Factory set Node value break case break case global Builder transport machine Id value break case global Builder transport rack Id value break case global Builder transport site Id value global Builder site local Site value break case reader get Schema since global Builder transport initial Cluster Size Integer value value else throw Parse Utils unexpected Attribute reader break case reader get Schema since global Builder transport initial Cluster Timeout Long parse Long value Time Unit else throw Parse Utils unexpected Attribute reader break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break case break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Global State Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Parse Utils require Attributes reader Global State Configuration Builder builder holder get Global Configuration Builder global State enable reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case builder persistent Location parse Global State Path reader break case builder temporary Location parse Global State Path reader break default throw Parse Utils unexpected Element reader private String parse Global State Path Extended Stream Reader reader throws Stream Exception String path replace Properties Parse Utils require Attributes reader Attribute get Local Name int reader get Attribute Count Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case log ignore Xml Attribute attribute break case Handled break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader return path private Thread Pool Configuration create Thread Pool Configuration String thread Pool Name String component Name Thread Pool Configuration Builder thread Pool thread Pools get thread Pool Name thread Pool null throw log undefined Thread Pool Name thread Pool Name Thread Pool Configuration thread Pool Configuration thread Pool create Default Thread Factory thread Factory thread Pool Configuration thread Factory thread Factory set Component shortened component Name return thread Pool Configuration private void parse Local Cache Extended Stream Reader reader Configuration Builder Holder holder boolean template throws Stream Exception holder push Scope template Parser Scope Parser Scope String name reader get Attribute Value null Attribute get Local Name String configuration reader get Attribute Value null Attribute get Local Name Configuration Builder builder get Configuration Builder holder name template configuration builder clustering cache Mode Cache Mode int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name parse Cache Attribute reader attribute value builder reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name parse Cache Element reader element holder holder pop Scope private void parse Cache Attribute Extended Stream Reader reader int index Attribute attribute String value Configuration Builder builder throws Stream Exception switch attribute case case Handled caller break case case case log ignore Xml Attribute attribute break case builder simple Cache Boolean value value break case builder jmx Statistics enabled Boolean value value break case builder jmx Statistics available Boolean value value break case log ignore Xml Attribute attribute break case builder unsafe unreliable Return Values Boolean value value break default throw Parse Utils unexpected Attribute reader index private void parse Shared State Cache Element Extended Stream Reader reader Element element Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder switch element case parse State Transfer reader builder break default parse Cache Element reader element holder private void parse Backups Extended Stream Reader reader Configuration Builder builder throws Stream Exception backups present remove existing backups added default config builder sites backups clear reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Backup reader builder break default throw Parse Utils unexpected Element reader private void parse Partition Handling Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder Partition Handling Configuration Builder ph builder clustering partition Handling int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case log partition Handling Configuration Enabled Deprecated ph enabled Boolean value value break case ph Split Partition Handling value value Upper Case break case Merge Policy mp Merge Policy String value Entry Merge Policy merge Policy mp Merge Policy Util get Instance value holder get Class Loader mp impl ph merge Policy merge Policy break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Backup Extended Stream Reader reader Configuration Builder builder throws Stream Exception Backup Configuration Builder backup builder sites add Backup int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case backup site value break case backup strategy Backup Configuration Backup Strategy value value break case backup backup Failure Policy Backup Failure Policy value value break case backup replication Timeout Long value value break case backup enabled Boolean value value break case backup use Two Phase Commit Boolean parse Boolean value break case backup failure Policy Class value break default throw Parse Utils unexpected Attribute reader backup site null throw Parse Utils missing Required reader Collections singleton Attribute reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Take Offline reader backup break case parse Site State Transfer reader backup break default throw Parse Utils unexpected Element reader private void parse Take Offline Extended Stream Reader reader Backup Configuration Builder backup throws Stream Exception int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case backup take Offline Failures Integer value value break case backup take Offline min Time Wait Long value value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Site State Transfer Extended Stream Reader reader Backup Configuration Builder backup throws Stream Exception int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case backup state Transfer chunk Size Integer parse Int value break case backup state Transfer timeout Long parse Long value break case backup state Transfer max Retries Integer parse Int value break case backup state Transfer wait Time Long parse Long value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Backup Extended Stream Reader reader Configuration Builder builder throws Stream Exception builder sites backup reset int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder sites backup remote Cache value break case builder sites backup remote Site value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Cache Security Extended Stream Reader reader Configuration Builder builder throws Stream Exception Security Configuration Builder security Builder builder security Parse Utils require Attributes reader reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Cache Authorization reader security Builder authorization enable break default throw Parse Utils unexpected Element reader private void parse Cache Authorization Extended Stream Reader reader Authorization Configuration Builder authz Builder throws Stream Exception int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case authz Builder enabled Boolean parse Boolean value break case String role value split authz Builder role role break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader protected void parse Cache Element Extended Stream Reader reader Element element Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder switch element case parse Locking reader builder break case parse Transaction reader builder holder break case parse Eviction reader builder break case parse Expiration reader builder break case parse Persistence reader holder break case parse Indexing reader holder break case parse Custom Interceptors reader holder break case parse Versioning reader holder break case parse Compatibility reader holder break case parse Store Binary reader holder break case reader get Schema since throw Parse Utils unexpected Element reader else parse Modules reader holder break case parse Data Container reader holder break case parse Memory reader holder break case parse Backups reader builder break case parse Backup reader builder break case parse Partition Handling reader holder break case parse Cache Security reader builder break default reader handle holder private void parse Data Container final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case log data Container Configuration Deprecated builder data Container data Container Util get Instance value holder get Class Loader break case builder data Container key Equivalence Util Equivalence get Instance value holder get Class Loader break case builder data Container value Equivalence Util Equivalence get Instance value holder get Class Loader break default throw Parse Utils unexpected Attribute reader Properties properties new Properties reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Property reader properties break default throw Parse Utils unexpected Element reader builder data Container Properties properties private void parse Memory final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Memory Configuration Builder memory Builder holder get Current Configuration Builder memory Parse Utils require Attributes reader reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case memory Builder storage Type Storage Type parse Heap Memory Attributes reader holder break case memory Builder storage Type Storage Type parse Object Memory Attributes reader holder break case memory Builder storage Type Storage Type parse Binary Memory Attributes reader holder break default throw Parse Utils unexpected Element reader private void parse Heap Memory Attributes final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Memory Configuration Builder memory Builder holder get Current Configuration Builder memory int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case memory Builder size Long parse Long value break case memory Builder eviction Type Eviction Type value value break case memory Builder address Count Integer parse Int value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Object Memory Attributes final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Memory Configuration Builder memory Builder holder get Current Configuration Builder memory int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case memory Builder size Long parse Long value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Binary Memory Attributes final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Memory Configuration Builder memory Builder holder get Current Configuration Builder memory int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case memory Builder size Long parse Long value break case memory Builder eviction Type Eviction Type value value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Store Binary final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception log element Deprecated Use Element Element Configuration Builder builder holder get Current Configuration Builder Boolean binary Keys null Boolean binary Values null builder memory storage Type Storage Type int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case binary Keys Boolean parse Boolean value break case binary Values Boolean parse Boolean value break default throw Parse Utils unexpected Attribute reader binary Keys null binary Keys binary Values null binary Values builder memory storage Type Storage Type explicitly disable Parse Utils require Content reader private void parse Compatibility Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder builder compatibility enable int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder compatibility marshaller Util get Instance value holder get Class Loader break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Versioning final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception int reader get Attribute Count Parse Utils require Namespace Attribute reader Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case log ignored Attribute versioning attribute get Local Name reader get Location get Line Number break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Custom Interceptors Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Parse Utils require Attributes reader reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Interceptor reader holder break default throw Parse Utils unexpected Element reader private void parse Interceptor Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder Interceptor Configuration Builder interceptor Builder builder custom Interceptors add Interceptor int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case interceptor Builder Util load Class value holder get Class Loader break case interceptor Builder Util load Class value holder get Class Loader break case interceptor Builder interceptor Class Util load Class value holder get Class Loader break case interceptor Builder index Integer parse Int value break case interceptor Builder position Interceptor Configuration Position value value Upper Case break default throw Parse Utils unexpected Attribute reader interceptor Builder Properties parse Properties reader protected void parse Locking Extended Stream Reader reader Configuration Builder builder throws Stream Exception int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder locking isolation Level Isolation Level value value break case builder locking use Lock Striping Boolean parse Boolean value break case builder locking lock Acquisition Timeout Long parse Long value break case builder locking concurrency Level Integer parse Int value break case log ignored Attribute write skew attribute attribute get Local Name reader get Location get Line Number break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader protected void parse Transaction Extended Stream Reader reader Configuration Builder builder Configuration Builder Holder holder throws Stream Exception int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder transaction cache Stop Timeout Long parse Long value break case Transaction Mode tx Mode Transaction Mode value value builder transaction transaction Mode tx Mode get Mode builder transaction use Synchronization tx Mode Enabled tx Mode get Mode Transactional builder transaction recovery enabled tx Mode Recovery Enabled builder invocation Batching enable tx Mode Batching Enabled break case builder transaction locking Mode Locking Mode value value break case builder transaction transaction Manager Lookup Util get Instance value holder get Class Loader break case builder transaction reaper Wake Interval Long parse Long value break case builder transaction completed Tx Timeout Long parse Long value break case builder transaction transaction Protocol Transaction Protocol value value break case builder transaction auto Commit Boolean parse Boolean value break case builder transaction recovery recovery Info Cache Name value break case builder transaction notifications Boolean parse Boolean value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Eviction Extended Stream Reader reader Configuration Builder builder throws Stream Exception log element Deprecated Use Element Element int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case case case log ignore Xml Element attribute break case log eviction Max Entries Deprecated case builder memory size Long parse Long value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Expiration Extended Stream Reader reader Configuration Builder builder throws Stream Exception int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder expiration max Idle Long parse Long value break case builder expiration lifespan Long parse Long value break case builder expiration wake Interval Long parse Long value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Invalidation Cache Extended Stream Reader reader Configuration Builder Holder holder boolean template throws Stream Exception holder push Scope template Parser Scope Parser Scope String name reader get Attribute Value null Attribute get Local Name String configuration reader get Attribute Value null Attribute get Local Name Configuration Builder builder get Configuration Builder holder name template configuration Cache Mode base Cache Mode configuration null Cache Mode builder clustering cache Mode builder clustering cache Mode base Cache Mode int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder clustering hash key Partitioner Util get Instance value holder get Class Loader break default parse Clustered Cache Attribute reader attribute value builder base Cache Mode reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element default parse Cache Element reader element holder holder pop Scope private void parse Segmented Cache Attribute Extended Stream Reader reader int index Attribute attribute String value Configuration Builder builder Class Loader class Loader Cache Mode base Cache Mode throws Stream Exception switch attribute case builder clustering hash num Segments Integer parse Int value break case builder clustering hash consistent Hash Factory Util get Instance value class Loader break case reader get Schema since builder clustering hash key Partitioner Util get Instance value class Loader else throw Parse Utils unexpected Attribute reader index break default parse Clustered Cache Attribute reader index attribute value builder base Cache Mode private void parse Clustered Cache Attribute Extended Stream Reader reader int index Attribute attribute String value Configuration Builder builder Cache Mode base Cache Mode throws Stream Exception switch attribute case reader get Schema since throw Parse Utils unexpected Attribute reader attribute get Local Name else log ignored Replication Queue Attribute attribute get Local Name reader get Location get Line Number break case Mode mode Mode value value builder clustering cache Mode mode apply base Cache Mode break case log ignored Replication Queue Attribute attribute get Local Name reader get Location get Line Number break case log ignored Replication Queue Attribute attribute get Local Name reader get Location get Line Number break case builder clustering remote Timeout Long parse Long value break default parse Cache Attribute reader index attribute value builder private void parse Replicated Cache Extended Stream Reader reader Configuration Builder Holder holder boolean template throws Stream Exception holder push Scope template Parser Scope Parser Scope String name reader get Attribute Value null Attribute get Local Name String configuration reader get Attribute Value null Attribute get Local Name Configuration Builder builder get Configuration Builder holder name template configuration Cache Mode base Cache Mode configuration null Cache Mode builder clustering cache Mode builder clustering cache Mode base Cache Mode int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name parse Segmented Cache Attribute reader attribute value builder holder get Class Loader base Cache Mode reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element default parse Shared State Cache Element reader element holder holder pop Scope private void parse State Transfer Extended Stream Reader reader Configuration Builder builder throws Stream Exception int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder clustering state Transfer await Initial Transfer Boolean parse Boolean value break case builder clustering state Transfer fetch Memory State Boolean parse Boolean value break case builder clustering state Transfer timeout Long parse Long value break case builder clustering state Transfer chunk Size Integer parse Int value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader private void parse Distributed Cache Extended Stream Reader reader Configuration Builder Holder holder boolean template throws Stream Exception holder push Scope template Parser Scope Parser Scope String name reader get Attribute Value null Attribute get Local Name String configuration reader get Attribute Value null Attribute get Local Name Configuration Builder builder get Configuration Builder holder name template configuration Cache Mode base Cache Mode configuration null Cache Mode builder clustering cache Mode builder clustering cache Mode base Cache Mode int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder clustering hash num Owners Integer parse Int value break case long lifespan Long parse Long value lifespan builder clustering l enable lifespan lifespan else builder clustering l disable break case builder clustering l cleanup Task Frequency Long parse Long value break case builder clustering hash capacity Factor Float parse Float value break default parse Segmented Cache Attribute reader attribute value builder holder get Class Loader base Cache Mode reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Groups reader holder break default parse Shared State Cache Element reader element holder holder pop Scope private void parse Groups final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder Parse Utils require Single Attribute reader enabled int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case Boolean parse Boolean value builder clustering hash groups enabled else builder clustering hash groups disabled break default throw Parse Utils unexpected Attribute reader reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case String value Parse Utils read String Attribute Element reader class builder clustering hash groups add Grouper Util get Instance value holder get Class Loader break default throw Parse Utils unexpected Element reader private void parse Scattered Cache Extended Stream Reader reader Configuration Builder Holder holder boolean template throws Stream Exception String name reader get Attribute Value null Attribute get Local Name String configuration reader get Attribute Value null Attribute get Local Name Configuration Builder builder get Configuration Builder holder name template configuration Cache Mode base Cache Mode configuration null Cache Mode builder clustering cache Mode builder clustering cache Mode base Cache Mode int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder clustering invalidation Batch Size Integer parse Int value break default parse Segmented Cache Attribute reader attribute value builder holder get Class Loader base Cache Mode reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element default parse Shared State Cache Element reader element holder private Configuration Builder get Configuration Builder Configuration Builder Holder holder String name boolean template String base Configuration Name holder get Named Configuration Builders contains Key name throw log duplicate Cache Name name Configuration Builder builder holder new Configuration Builder name template template base Configuration Name null Configuration Builder base Configuration Builder holder get Named Configuration Builders get base Configuration Name base Configuration Builder null throw log undeclared Configuration base Configuration Name name Configuration base Configuration base Configuration Builder build base Configuration Template throw log Configuration base Configuration Name builder read base Configuration return builder private void parse Persistence final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case builder persistence passivation Boolean parse Boolean value break default throw Parse Utils unexpected Attribute reader clear order override configuration defined default cache builder persistence clear Stores reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Cluster Loader reader holder break case parse File Store reader holder break case parse Custom Store reader holder break case log ignore Xml Element element break default reader handle holder private void parse Cluster Loader Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder Cluster Loader Configuration Builder cclb builder persistence add Cluster Loader int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value String attr Name reader get Attribute Local Name Attribute attribute Attribute Name attr Name switch attribute case cclb remote Call Timeout Long parse Long value break default parse Store Attribute reader cclb break parse Store Elements reader cclb protected void parse File Store Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Single File Store Configuration Builder store Builder holder get Current Configuration Builder persistence add Single File Store int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case log ignore Xml Attribute attribute break case store Builder location value break case store Builder max Entries Integer value value break case store Builder fragmentation Factor Float parse Float value break default parse Store Attribute reader store Builder parse Store Elements reader store Builder method public static reused custom cache store loader configuration parsers public static void parse Store Attribute Extended Stream Reader reader int index Abstract Store Configuration Builder store Builder throws Stream Exception String value replace Properties reader get Attribute Value index Attribute attribute Attribute Name reader get Attribute Local Name index switch attribute case store Builder shared Boolean parse Boolean value break case store Builder ignore Modifications Boolean value value break case store Builder preload Boolean parse Boolean value break case store Builder fetch Persistent State Boolean parse Boolean value break case store Builder purge Startup Boolean parse Boolean value break case store Builder singleton enabled Boolean parse Boolean value break case store Builder transactional Boolean parse Boolean value break case store Builder max Batch Size Integer parse Int value break default throw Parse Utils unexpected Attribute reader index private void parse Store Elements Extended Stream Reader reader Store Configuration Builder store Builder throws Stream Exception reader Next reader next Tag Stream Constants parse Store Element reader store Builder public static void parse Store Element Extended Stream Reader reader Store Configuration Builder store Builder throws Stream Exception Element element Element Name reader get Local Name switch element case parse Store Write Behind reader store Builder async enable break case parse Store Property reader store Builder break default throw Parse Utils unexpected Element reader public static void parse Store Write Behind Extended Stream Reader reader Async Store Configuration Builder store Builder throws Stream Exception int reader get Attribute Count String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case reader get Schema since throw Parse Utils unexpected Attribute reader attribute get Local Name else store Builder flush Lock Timeout Long parse Long value break case store Builder modification Queue Size Integer parse Int value break case reader get Schema since throw Parse Utils unexpected Attribute reader attribute get Local Name else store Builder shutdown Timeout Long parse Long value break case store Builder thread Pool Size Integer parse Int value break default throw Parse Utils unexpected Attribute reader Parse Utils require Content reader public static void parse Store Property Extended Stream Reader reader Store Configuration Builder store Builder throws Stream Exception String property Parse Utils require Single Attribute reader Attribute get Local Name String value reader get Element Text store Builder add Property property value private void parse Custom Store final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder Boolean fetch Persistent State null Boolean ignore Modifications null Boolean purge Startup null Boolean preload null Boolean shared null Boolean singleton null Boolean transactional null Cache Loader store null int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case store Util get Instance value holder get Class Loader break case fetch Persistent State Boolean value value break case ignore Modifications Boolean value value break case purge Startup Boolean value value break case preload Boolean parse Boolean value break case shared Boolean parse Boolean value break case singleton Boolean parse Boolean value break case transactional Boolean parse Boolean value break default throw Parse Utils unexpected Attribute reader store null store instanceof Single File Store Single File Store Configuration Builder sfs builder persistence add Single File Store fetch Persistent State null sfs fetch Persistent State fetch Persistent State ignore Modifications null sfs ignore Modifications ignore Modifications purge Startup null sfs purge Startup purge Startup preload null sfs preload preload shared null sfs shared shared singleton null sfs singleton enabled singleton transactional null sfs transactional transactional parse Store Elements reader sfs else store instanceof Cluster Loader Cluster Loader Configuration Builder cscb builder persistence add Cluster Loader parse Store Elements reader cscb else Configured annotation store get Class get Annotation Configured class Class extends Store Configuration Builder builder Class null annotation null Class configured annotation value configured null Built built configured get Annotation Built class builder Class built value Subclass Store Configuration Builder class Store Configuration Builder config Builder n specify builder use custom configuration builder set class builder Class null config Builder builder persistence add Store Custom Store Configuration Builder class custom Store Class store get Class else config Builder builder persistence add Store builder Class fetch Persistent State null config Builder fetch Persistent State fetch Persistent State ignore Modifications null config Builder ignore Modifications ignore Modifications purge Startup null config Builder purge Startup purge Startup preload null config Builder preload preload shared null config Builder shared shared transactional null config Builder transactional transactional parse Store Elements reader config Builder private void parse Indexing final Extended Stream Reader reader final Configuration Builder Holder holder throws Stream Exception Configuration Builder builder holder get Current Configuration Builder int reader get Attribute Count Parse Utils require Namespace Attribute reader String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case Index index Index value value builder indexing index index break case builder indexing auto Config Boolean value value break default throw Parse Utils unexpected Attribute reader Properties indexing Properties new Properties reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Indexed Entities reader holder builder break case parse Property reader indexing Properties break default throw Parse Utils unexpected Element reader builder indexing Properties indexing Properties private void parse Indexed Entities Extended Stream Reader reader Configuration Builder Holder holder Configuration Builder builder throws Stream Exception Parse Utils require Attributes reader reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case Parse Utils require Attributes reader String class Name reader get Element Text Class indexed Entity Util load Class class Name holder get Class Loader builder indexing add Indexed Entity indexed Entity break default throw Parse Utils unexpected Element reader private static void parse Property Extended Stream Reader reader Properties properties throws Stream Exception int attributes reader get Attribute Count Parse Utils require Attributes reader Attribute get Local Name String key null String property Value int attributes String value replace Properties reader get Attribute Value Attribute attribute Attribute Name reader get Attribute Local Name switch attribute case key value break default throw Parse Utils unexpected Attribute reader property Value replace Properties reader get Element Text properties set Property key property Value public static Properties parse Properties final Extended Stream Reader reader throws Stream Exception Properties properties new Properties reader Next reader next Tag Stream Constants Element element Element Name reader get Local Name switch element case parse Property reader properties break default throw Parse Utils unexpected Element reader return properties public enum Merge Policy null null Merge Policies Merge Policies Merge Policies private final Entry Merge Policy impl Merge Policy Entry Merge Policy policy impl policy public Entry Merge Policy get Impl return impl public static Merge Policy String String str Merge Policy mp Merge Policy values mp name equals Ignore Case str return mp return public static Merge Policy Configuration Entry Merge Policy policy policy null return Merge Policy mp Merge Policy values mp impl null Objects equals mp impl get Class policy get Class return mp return public enum Transaction Mode org transaction Transaction Mode false false false org transaction Transaction Mode false false true org transaction Transaction Mode false false false org transaction Transaction Mode true false false org transaction Transaction Mode true true false private final org transaction Transaction Mode mode private final boolean xa Enabled private final boolean recovery Enabled private final boolean batching Enabled Transaction Mode org transaction Transaction Mode mode boolean xa Enabled boolean recovery Enabled boolean batching Enabled mode mode xa Enabled xa Enabled recovery Enabled recovery Enabled batching Enabled batching Enabled public static Transaction Mode Configuration org transaction Transaction Mode mode boolean xa Enabled boolean recovery Enabled boolean batching Enabled mode org transaction Transaction Mode return Transaction Mode tx Mode Transaction Mode values tx Mode mode mode tx Mode xa Enabled xa Enabled tx Mode recovery Enabled recovery Enabled tx Mode batching Enabled batching Enabled return tx Mode throw log unknown Transaction Configuration mode xa Enabled recovery Enabled batching Enabled public org transaction Transaction Mode get Mode return mode public boolean Enabled return xa Enabled public boolean Recovery Enabled return recovery Enabled public boolean Batching Enabled return batching Enabled public enum Mode true false private final boolean sync Mode boolean sync sync sync public static Mode Cache Mode Cache Mode mode return mode Synchronous public Cache Mode apply Cache Mode mode return sync mode Sync mode Async public boolean Synchronous return sync Override public Namespace get Namespaces return Parse Utils get Namespace Annotations get Class
package org configuration parsing import static javax xml stream Stream Constants import static javax xml stream Stream Constants import static javax xml stream Stream Constants import java io Buffered Input Stream import java io Buffered Output Stream import java io File Found Exception import java io Exception import java io Input Stream import java io Output Stream import java lang ref Weak Reference import java util Collection import java util Map import java util Service Loader import java util concurrent Concurrent Map import javax xml namespace Name import javax xml stream Input Factory import javax xml stream Output Factory import javax xml stream Stream Exception import javax xml stream Stream Reader import javax xml stream Stream Writer import org commons Cache Configuration Exception import org commons util Collection Factory import org commons util File Lookup import org commons util File Lookup Factory import org commons util Service Finder import org commons util Util import org configuration cache Configuration import org configuration global Global Configuration import org configuration serializing Configuration Holder import org configuration serializing Serializer import org configuration serializing Extended Stream Writer import org configuration serializing Extended Stream Writer Impl import org util logging Log import org util logging Log Factory Parser Registry namespace mapping aware meta parser provides way delegate parsing multi namespace files appropriate parsers defined link Configuration Parser interface registry available parsers built using link Service Loader system Implementations link Configuration Parser include services org configuration parsing Configuration Parser file containing list available parsers author Tristan Tarrant since public class Parser Registry implements Namespace Mapping Parser private static final Log log Log Factory get Log Parser Registry class private final Weak Reference Class Loader cl private final Concurrent Map Name Configuration Parser parser Mappings public Parser Registry Thread current Thread get Context Class Loader public Parser Registry Class Loader class Loader class Loader false public Parser Registry Class Loader class Loader boolean default parser Mappings Collection Factory make Concurrent Map cl new Weak Reference class Loader Collection Configuration Parser parsers Service Finder load Configuration Parser class cl get Parser Registry class get Class Loader Configuration Parser parser parsers Namespace namespaces parser get Namespaces namespaces null throw log parser Declare Namespaces parser get Class get Name boolean skip Parser default skip Parser Namespace ns namespaces equals ns uri skip Parser false skip Parser Namespace ns namespaces Name q Name new Name ns uri ns root Configuration Parser existing Parser parser Mappings put Absent q Name parser existing Parser null parser get Class equals existing Parser get Class log parser Root Element Already Registered q Name parser get Class get Name existing Parser get Class get Name public Configuration Builder Holder parse File String filename throws Exception File Lookup file Lookup File Lookup Factory new Instance Input Stream file Lookup lookup File filename cl get null throw new File Found Exception filename try return parse finally Util close public Configuration Builder Holder parse Input Stream try Configuration Builder Holder holder new Configuration Builder Holder cl get parse holder holder validate return holder catch Cache Configuration Exception e throw e catch Exception e throw new Cache Configuration Exception e public void parse Input Stream Configuration Builder Holder holder throws Stream Exception Buffered Input Stream input new Buffered Input Stream Stream Reader sub Reader Input Factory new Instance create Stream Reader input Extended Stream Reader reader new Extended Stream Reader Impl sub Reader parse reader holder sub Reader close Fire parsing Complete events Parser Context parser Context holder get Parser Contexts values parser Context fire Parsing Complete public void parse Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception try reader require null null reader next Tag reader require null null parse Element reader holder reader next consume remaining parsing events finally try reader close catch Exception e Override public void parse Element Extended Stream Reader reader Configuration Builder Holder holder throws Stream Exception Name name reader get Name Configuration Parser parser parser Mappings get name parser null throw log unsupported Configuration name get Local Part name get Namespace Schema old Schema reader get Schema reader set Schema Schema Namespace name get Namespace parser read Element reader holder reader set Schema old Schema public void serialize Output Stream os Global Configuration global Configuration Map String Configuration configurations throws Stream Exception Buffered Output Stream output new Buffered Output Stream os Stream Writer sub Writer Output Factory new Instance create Stream Writer output Extended Stream Writer writer new Extended Stream Writer Impl sub Writer serialize writer global Configuration configurations sub Writer close public void serialize Extended Stream Writer writer Global Configuration global Configuration Map String Configuration configurations throws Stream Exception writer write Start Document writer write Start Element Serializer serializer new Serializer serializer serialize writer new Configuration Holder global Configuration configurations writer write End Element writer write End Document
package org configuration parsing import static javax xml stream Stream Constants import static org commons util String Property Replacer replace Properties import java util Collections import java util Iterator import java util Set import javax xml Constants import javax xml stream Location import javax xml stream Stream Exception import javax xml stream Stream Reader author href mailto david lloyd redhat com David Lloyd public final class Parse Utils private Parse Utils public static Element next Element Stream Reader reader throws Stream Exception reader next Tag return null return Element Name reader get Local Name Get exception reporting unexpected element param reader stream reader return exception public static Stream Exception unexpected Element final Stream Reader reader return new Stream Exception Unexpected element reader get Name encountered reader get Location Get exception reporting unexpected end tag element param reader stream reader return exception public static Stream Exception unexpected End Element final Stream Reader reader return new Stream Exception Unexpected end element reader get Name encountered reader get Location Get exception reporting unexpected attribute param reader stream reader param index attribute index return exception public static Stream Exception unexpected Attribute final Stream Reader reader final int index return new Stream Exception Unexpected attribute reader get Attribute Name index encountered reader get Location Get exception reporting unexpected attribute param reader stream reader param name attribute name return exception public static Stream Exception unexpected Attribute final Stream Reader reader final String name return new Stream Exception Unexpected attribute name encountered reader get Location Get exception reporting invalid attribute value param reader stream reader param index attribute index return exception public static Stream Exception invalid Attribute Value final Stream Reader reader final int index return new Stream Exception Invalid value reader get Attribute Value index attribute reader get Attribute Name index reader get Location Get exception reporting missing required attribute param reader stream reader param required set enums whose String method returns attribute name return exception public static Stream Exception missing Required final Stream Reader reader final Set required final String Builder b new String Builder Iterator iterator required iterator iterator Next final Object iterator next b append String iterator Next b append return new Stream Exception Missing required attribute b reader get Location Get exception reporting missing required child element param reader stream reader param required set enums whose String method returns attribute name return exception public static Stream Exception missing Required Element final Stream Reader reader final Set required final String Builder b new String Builder Iterator iterator required iterator iterator Next final Object iterator next b append String iterator Next b append return new Stream Exception Missing required element b reader get Location Checks current element attributes throwing link javax xml stream Stream Exception one found param reader reader throws javax xml stream Stream Exception error occurs public static void require Attributes final Stream Reader reader throws Stream Exception reader get Attribute Count throw unexpected Attribute reader Consumes remainder current element throwing link javax xml stream Stream Exception contains child elements param reader reader throws javax xml stream Stream Exception error occurs public static void require Content final Stream Reader reader throws Stream Exception reader Next reader next Tag throw unexpected Element reader Get exception reporting attribute given name already declared scope param reader stream reader param name name redeclared return exception public static Stream Exception duplicate Attribute final Stream Reader reader final String name return new Stream Exception attribute named name already declared reader get Location Get exception reporting element given type name already declared scope param reader stream reader param name name redeclared return exception public static Stream Exception duplicate Named Element final Stream Reader reader final String name return new Stream Exception element type named name already declared reader get Location Read element contains single boolean attribute param reader reader param attribute Name attribute name usually value return boolean value throws javax xml stream Stream Exception error occurs element contain specified attribute contains attributes contains child elements public static boolean read Boolean Attribute Element final Stream Reader reader final String attribute Name throws Stream Exception require Single Attribute reader attribute Name final boolean value Boolean parse Boolean reader get Attribute Value require Content reader return value Read element contains single string attribute param reader reader param attribute Name attribute name usually value name return string value throws javax xml stream Stream Exception error occurs element contain specified attribute contains attributes contains child elements public static String read String Attribute Element final Stream Reader reader final String attribute Name throws Stream Exception require Single Attribute reader attribute Name final String value reader get Attribute Value require Content reader return value Require current element single attribute given name param reader reader param attribute Name attribute name throws javax xml stream Stream Exception error occurs public static String require Single Attribute final Stream Reader reader final String attribute Name throws Stream Exception final int count reader get Attribute Count count throw missing Required reader Collections singleton attribute Name require Namespace Attribute reader attribute Name equals reader get Attribute Local Name throw unexpected Attribute reader count throw unexpected Attribute reader return reader get Attribute Value Require named attributes returning values order param reader reader param attribute Names attribute names return attribute values order throws javax xml stream Stream Exception error occurs public static String require Attributes final Stream Reader reader boolean replace final String attribute Names throws Stream Exception final int length attribute Names length final String result new String length int length final String name attribute Names final String value reader get Attribute Value null name value null throw missing Required reader Collections singleton name result replace replace Properties value value return result public static String require Attributes final Stream Reader reader final String attribute Names throws Stream Exception return require Attributes reader false attribute Names public static boolean Namespace Attribute final Stream Reader reader final int index String namespace reader get Attribute Namespace index done remove null check return namespace null Constants equals namespace public static void require Namespace Attribute final Stream Reader reader final int index throws Stream Exception Namespace Attribute reader index throw unexpected Attribute reader index public static String get Warning Message final String msg final Location location return String format Parsing problem row col n Message n location get Line Number location get Column Number msg public static Namespace get Namespace Annotations Class cls Namespaces namespaces Annotation cls get Annotation Namespaces class namespaces Annotation null return namespaces Annotation value Namespace namespace Annotation cls get Annotation Namespace class namespace Annotation null return new Namespace namespace Annotation return null public static String get List Attribute Value String value return value split
package org distribution group impl import java util List import java util Objects import java util Set import java util function Unary Operator import org commons hash Hash import org distribution ch Consistent Hash import org distribution ch Key Partitioner import org globalstate Scoped Persistent State import org remoting transport Address link Consistent Hash wrapper uses link Key Partitioner instead link Hash author Dan Berindei since public class Partitioner Consistent Hash implements Consistent Hash private final Consistent Hash ch private final Key Partitioner key Partitioner public Partitioner Consistent Hash Consistent Hash ch Key Partitioner key Partitioner ch Objects require Non Null ch key Partitioner Objects require Non Null key Partitioner Override public int get Num Segments return ch get Num Segments Override public int get Num Owners return ch get Num Owners Override public List Address get Members return ch get Members Override public int get Segment Object key return key Partitioner get Segment key Override public List Address locate Owners Segment int segment Id return ch locate Owners Segment segment Id Override public Address locate Primary Owner Segment int segment Id return ch locate Primary Owner Segment segment Id Override public boolean Segment Local Node Address node Address int segment Id return ch Segment Local Node node Address segment Id Override public boolean Replicated return ch Replicated Override public Set Integer get Segments Owner Address owner return ch get Segments Owner owner Override public Set Integer get Primary Segments Owner Address owner return ch get Primary Segments Owner owner Override public String get Routing Table String return ch get Routing Table String Override public boolean Key Local Node Address node Address Object key int segment ch Replicated get Segment key return ch Segment Local Node node Address segment Override public Hash get Hash Function return ch get Hash Function public Key Partitioner get Key Partitioner return key Partitioner Override public void Scoped State Scoped Persistent State state ch Scoped State state Override public Consistent Hash remap Addresses Unary Operator Address remapper return ch remap Addresses remapper Override public boolean equals Object return true null get Class get Class return false Partitioner Consistent Hash Partitioner Consistent Hash ch equals ch return false return key Partitioner equals key Partitioner Override public int hash Code int result ch hash Code result result key Partitioner hash Code return result Override public String String return Partitioner Consistent Hash ch
package org configuration cache import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set import org conflict Entry Merge Policy import org partitionhandling Partition Handling Controls cache handles partitioning multiple node failures author Mircea Markus since public class Partition Handling Configuration Deprecated public static final Attribute Definition Boolean Attribute Definition builder enabled false immutable build public static final Attribute Definition Partition Handling Attribute Definition builder Split Partition Handling immutable build public static final Attribute Definition Entry Merge Policy Attribute Definition builder merge Policy null Entry Merge Policy class immutable build static Attribute Set attribute Definition Set return new Attribute Set Partition Handling Configuration class private final Attribute Set attributes public Partition Handling Configuration Attribute Set attributes attributes attributes check Protection Deprecated public boolean enabled return Split Partition Handling public Partition Handling Split return attributes attribute get public Entry Merge Policy merge Policy return attributes attribute get public Attribute Set attributes return attributes Override public String String return Partition Handling Configuration attributes attributes Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Partition Handling Configuration Partition Handling Configuration obj attributes null attributes null return false else attributes equals attributes return false return true
package org configuration cache import static org configuration cache Partition Handling Configuration import static org configuration cache Partition Handling Configuration import org commons configuration Builder import org commons configuration attributes Attribute Set import org configuration global Global Configuration import org conflict Entry Merge Policy import org partitionhandling Partition Handling Controls cache handles partitioning multiple node failures author Mircea Markus since public class Partition Handling Configuration Builder extends Abstract Clustering Configuration Child Builder implements Builder Partition Handling Configuration private final Attribute Set attributes public Partition Handling Configuration Builder Clustering Configuration Builder builder super builder attributes Partition Handling Configuration attribute Definition Set param enabled code true partitions enter degraded mode code false keep working independently Deprecated public Partition Handling Configuration Builder enabled boolean enabled Split enabled Partition Handling Partition Handling return public Partition Handling Configuration Builder Split Partition Handling partition Handling attributes attribute set partition Handling return public Partition Handling Configuration Builder merge Policy Entry Merge Policy merge Policy attributes attribute set merge Policy return Override public void validate Override public void validate Global Configuration global Config Override public Partition Handling Configuration create return new Partition Handling Configuration attributes protect Override public Builder read Partition Handling Configuration template attributes read template attributes return
package org eviction impl import static org commons util Util Str import static org persistence Persistence Util internal Metadata import static org persistence manager Persistence Manager Access Mode import java util concurrent Time Unit import java util concurrent atomic Atomic Long import org commons Cache Exception import org commons util Iterator Mapper import org commons util Util import org configuration cache Configuration import org container Data Container import org container entries Internal Cache Entry import org context impl Immutable Context import org distribution Distribution Manager import org eviction Passivation Manager import org factories annotations Inject import org factories annotations Start import org marshall core Marshalled Entry import org marshall core Marshalled Entry Factory import org notifications cachelistener Cache Notifier import org persistence manager Persistence Manager import org persistence spi Persistence Exception import org util Time Service import org util logging Log import org util logging Log Factory public class Passivation Manager Impl implements Passivation Manager Persistence Manager persistence Manager Cache Notifier notifier Configuration cfg private volatile boolean skip Stop false boolean stats Enabled false boolean enabled false private static final Log log Log Factory get Log Passivation Manager Impl class private final Atomic Long passivations new Atomic Long private Data Container Object Object container private Time Service time Service private static final boolean trace log Trace Enabled private Marshalled Entry Factory marshalled Entry Factory private Distribution Manager distribution Manager Inject public void inject Persistence Manager persistence Manager Cache Notifier notifier Configuration cfg Data Container container Time Service time Service Marshalled Entry Factory marshalled Entry Factory Distribution Manager distribution Manager persistence Manager persistence Manager notifier notifier cfg cfg container container time Service time Service marshalled Entry Factory marshalled Entry Factory distribution Manager distribution Manager Start priority public void start enabled cfg persistence passivation cfg persistence using Stores enabled stats Enabled cfg jmx Statistics enabled Override public boolean Enabled return enabled private boolean Key Object key return distribution Manager null distribution Manager get Cache Topology Write Owner key Override public void passivate Internal Cache Entry entry Object key enabled entry null Key key entry get Key notify listeners entry passivated notifier notify Cache Entry Passivated key entry get Value true Immutable Context null trace log tracef Passivating entry Str key try Marshalled Entry marshalled Entry marshalled Entry Factory new Marshalled Entry entry get Key entry get Value internal Metadata entry persistence Manager write Non Tx Stores marshalled Entry stats Enabled passivations get Increment catch Cache Exception e log unable Passivate Entry key e notifier notify Cache Entry Passivated key null false Immutable Context null Override public void passivate throws Persistence Exception enabled skip Stop long start time Service time log passivating Entries int count container size Including Expired Iterable Marshalled Entry iterable new Iterator Mapper container iterator e marshalled Entry Factory new Marshalled Entry e get Key e get Value internal Metadata e persistence Manager write Batch Non Tx Stores iterable log passivated Entries count Util pretty Print Time time Service time Duration start Time Unit Override public void skip Passivation Stop boolean skip skip Stop skip Override public long get Passivations return passivations get Override public boolean get Statistics Enabled return stats Enabled Override public void set Statistics Enabled boolean enabled stats Enabled enabled Override public void reset Statistics passivations set
package org util concurrent locks impl import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import java util concurrent Time Unit import org commons util Ref import org factories annotations Inject import org util Time Service import org util concurrent locks Deadlock Checker import org util concurrent locks Extended Lock Promise lock container creates maintains new lock per entry author Pedro Ruivo since public class Per Key Lock Container implements Lock Container private static final int private final Concurrent Map Object Lock lock Map private Time Service time Service public Per Key Lock Container lock Map new Concurrent Hash Map Inject public void inject Time Service time Service time Service time Service Lock lock lock Map values lock set Time Service time Service Override public Extended Lock Promise acquire Object key Object lock Owner long time Time Unit time Unit Ref Extended Lock Promise reference Ref create null lock Map compute key Key lock lock null lock create Lock Key reference set lock acquire lock Owner time time Unit return lock return reference get Override public Lock get Lock Object key return lock Map get key Override public void release Object key Object lock Owner lock Map compute Present key ignored Key lock lock release lock Owner return lock Locked null lock remove empty Override public int get Num Locks Held int count Lock lock lock Map values lock Locked count return count Override public boolean Locked Object key Lock lock lock Map get key return lock null lock Locked Override public int size return lock Map size Override public void deadlock Check Deadlock Checker deadlock Checker lock Map values lock lock deadlock Check deadlock Checker Override public String String return Per Key Lock Container locks lock Map private Lock create Lock Object key return new Lock time Service lock Map compute Present key ignored Key lock lock Locked lock null
package org configuration cache import static org configuration cache Persistence Configuration import java lang reflect Constructor import java util Array List import java util List import java util concurrent Time Unit import org commons Cache Configuration Exception import org commons configuration Builder import org commons configuration Configuration Utils import org commons configuration attributes Attribute Set import org configuration global Global Configuration import org util logging Log import org util logging Log Factory Configuration cache stores public class Persistence Configuration Builder extends Abstract Configuration Child Builder implements Builder Persistence Configuration private static final Log log Log Factory get Log Persistence Configuration Builder class private final List Store Configuration Builder stores new Array List Store Configuration Builder private final Attribute Set attributes protected Persistence Configuration Builder Configuration Builder builder super builder attributes Persistence Configuration attribute Definition Set public Persistence Configuration Builder passivation boolean b attributes attribute set b return true data written cache store evicted memory phenomenon known passivation Next time data requested activated means data brought back memory removed persistent store gives ability overflow disk similar swapping operating system br br false cache store contains copy contents memory writes cache result cache store writes essentially gives write configuration boolean passivation return attributes attribute get Adds cache loader uses specified builder class build configuration public extends Store Configuration Builder add Store Class klass try Constructor constructor klass get Declared Constructor Persistence Configuration Builder class builder constructor new Instance stores add builder return builder catch Exception e throw new Cache Configuration Exception Could instantiate loader configuration builder klass get Name e Adds cache loader uses specified builder instance build configuration param builder instance link Store Configuration Builder public Store Configuration Builder add Store Store Configuration Builder builder stores add builder return builder Adds cluster cache loader public Cluster Loader Configuration Builder add Cluster Loader Cluster Loader Configuration Builder builder new Cluster Loader Configuration Builder stores add builder return builder Adds single file cache store public Single File Store Configuration Builder add Single File Store Single File Store Configuration Builder builder new Single File Store Configuration Builder stores add builder return builder Removes configured stores builder public Persistence Configuration Builder clear Stores stores clear return Override public void validate boolean Local Cache builder clustering create cache Mode equals Cache Mode int num Fetch Persistent State Store Configuration Builder b stores b validate Store Configuration store Configuration b create store Configuration shared store Configuration singleton Store enabled throw log singleton Store Cannot Shared store Configuration get Class get Simple Name store Configuration shared store Configuration transactional Local Cache throw log clustered Transactional Store Must Shared store Configuration get Class get Simple Name store Configuration async enabled store Configuration transactional throw log transactional Store Cannot Async store Configuration get Class get Simple Name store Configuration fetch Persistent State num Fetch Persistent State num Fetch Persistent State throw log One Fetch Persistent Store Allowed store guarantee reaper expiration thread enabled stores Empty boolean reaper Enabled builder expiration reaper Enabled long wakeup Interval builder expiration wakeup Interval reaper Enabled wakeup Interval builder expiration enable Reaper wakeup Interval log debug Store present expiration reaper wakeup less explicitly enabling setting wakeup interval minute builder expiration wake Interval Time Unit else log debug Store present however expiration reaper enabled explicitly enabling Override public void validate Global Configuration global Config Store Configuration Builder b stores b validate global Config Override public Persistence Configuration create List Store Configuration stores new Array List Store Configuration stores size Store Configuration Builder loader stores stores add loader create return new Persistence Configuration attributes protect stores Suppress Warnings unchecked Override public Persistence Configuration Builder read Persistence Configuration template attributes read template attributes clear Stores Store Configuration c template stores Class extends Store Configuration Builder builder Class get Builder Class c Store Configuration Builder builder add Store builder Class builder read c return private Class extends Store Configuration Builder get Builder Class Store Configuration c Class extends Store Configuration Builder builder Class Class extends Store Configuration Builder Configuration Utils builder Non Strict c builder Class null builder Class Custom Store Configuration Builder class return builder Class public List Store Configuration Builder stores return stores Override public String String return Persistence Configuration Builder stores stores attributes attributes
package org persistence manager import static java util concurrent Time Unit import static org context Flag import static org context Flag import static org context Flag import static org context Flag import static org context Flag import static org context Flag import static org context Flag import static org factories Known Component Names import static org persistence manager Persistence Manager Access Mode import java util Array List import java util Arrays import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import java util concurrent Executor import java util concurrent Executor Service import java util concurrent Time Unit import java util concurrent atomic Atomic Integer import java util concurrent atomic Atomic Reference import java util concurrent locks Read Write Lock import java util concurrent locks Reentrant Read Write Lock import java util function Consumer import javax transaction Transaction import javax transaction Transaction Manager import org Advanced Cache import org commons Cache Exception import org commons api Lifecycle import org commons io Byte Buffer Factory import org commons marshall Streaming Marshaller import org commons util Ref import org commons util Util import org configuration cache Cache Mode import org configuration cache Configuration import org configuration cache Store Configuration import org context Flag import org context Invocation Context import org eviction Eviction Type import org expiration Expiration Manager import org factories annotations Component Name import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org filter Key Filter import org interceptors Async Interceptor import org interceptors Async Interceptor Chain import org interceptors impl Cache Loader Interceptor import org interceptors impl Cache Writer Interceptor import org interceptors impl Transactional Store Interceptor import org marshall core Marshalled Entry import org marshall core Marshalled Entry Factory import org metadata Metadata import org metadata impl Internal Metadata Impl import org persistence Initialization Context Impl import org persistence async Advanced Async Cache Loader import org persistence async Advanced Async Cache Writer import org persistence async Async Cache Loader import org persistence async Async Cache Writer import org persistence async State import org persistence factory Cache Store Factory Registry import org persistence spi Advanced Cache Expiration Writer import org persistence spi Advanced Cache Loader import org persistence spi Advanced Cache Writer import org persistence spi Cache Loader import org persistence spi Cache Writer import org persistence spi Flag Affected Store import org persistence spi Local Cache Loader import org persistence spi Persistence Exception import org persistence spi Transactional Cache Writer import org persistence support Advanced Singleton Cache Writer import org persistence support Batch Modification import org persistence support Delegating Cache Loader import org persistence support Delegating Cache Writer import org persistence support Singleton Cache Writer import org util Time Service import org util concurrent Within Thread Executor import org util logging Log import org util logging Log Factory public class Persistence Manager Impl implements Persistence Manager private static final Log log Log Factory get Log Persistence Manager Impl class private static final boolean trace log Trace Enabled Configuration configuration Advanced Cache Object Object cache Streaming Marshaller Transaction Manager transaction Manager private Time Service time Service private final List Cache Loader loaders new Array List private final List Cache Writer non Tx Writers new Array List private final List Transactional Cache Writer tx Writers new Array List private final Read Write Lock stores Mutex new Reentrant Read Write Lock private final Map Object Store Configuration config Map new Hash Map private Cache Store Factory Registry cache Store Factory Registry private Expiration Manager expiration Manager private Advanced Purge Listener advanced Listener making volatile might change Start needs visibility volatile boolean enabled private Executor persistence Executor private Byte Buffer Factory byte Buffer Factory private Marshalled Entry Factory marshalled Entry Factory private volatile boolean clear Stop private boolean preloaded Inject public void inject Advanced Cache Object Object cache Streaming Marshaller marshaller Configuration configuration Transaction Manager transaction Manager Time Service time Service Component Name Executor Service persistence Executor Byte Buffer Factory byte Buffer Factory Marshalled Entry Factory marshalled Entry Factory Cache Store Factory Registry cache Store Factory Registry Expiration Manager expiration Manager cache cache marshaller configuration configuration transaction Manager transaction Manager time Service time Service persistence Executor persistence Executor byte Buffer Factory byte Buffer Factory marshalled Entry Factory marshalled Entry Factory cache Store Factory Registry cache Store Factory Registry expiration Manager expiration Manager advanced Listener new Advanced Purge Listener expiration Manager Override Start priority public void start preloaded false enabled configuration persistence using Stores enabled return try create Loaders Writers Transaction xa Tx null transaction Manager null xa Tx transaction Manager suspend try Set undelegated new Hash Set black magic make sure store start gets invoked Consumer Cache Writer start Writer writer writer start writer instanceof Delegating Cache Writer Cache Writer actual undelegate writer actual start undelegated add actual else undelegated add writer config Map get writer purge Startup writer instanceof Advanced Cache Writer throw new Persistence Exception purge Startup set stores implementing Advanced Cache Writer class get Name Advanced Cache Writer writer clear non Tx Writers start Writer tx Writers start Writer Cache Loader l loaders undelegated contains l l start l instanceof Delegating Cache Loader Cache Loader actual undelegate l undelegated contains actual actual start finally xa Tx null transaction Manager resume xa Tx catch Exception e throw new Cache Exception Unable start cache loaders e Override Stop public void stop needed clear persistent store stopping clear Stop clear Stores Access Mode Set undelegated new Hash Set Consumer Cache Writer stop Writers writer writer stop writer instanceof Delegating Cache Writer Cache Writer actual undelegate writer actual stop undelegated add actual else undelegated add writer non Tx Writers stop Writers non Tx Writers clear tx Writers stop Writers tx Writers clear Cache Loader l loaders undelegated contains l l stop l instanceof Delegating Cache Loader Cache Loader actual undelegate l undelegated contains actual actual stop loaders clear preloaded false Override public boolean Preloaded return preloaded Override Start priority public void preload enabled return Advanced Cache Loader preload Cl null Cache Loader l loaders config Map get l preload l instanceof Advanced Cache Loader throw new Persistence Exception preload cache loader l get Class get Name n implement Advanced Cache Loader class get Name preload Cl Advanced Cache Loader l preload Cl instanceof Advanced Async Cache Loader preload Cl Advanced Cache Loader Advanced Async Cache Loader preload Cl undelegate break preload Cl null return long start time Service time final long max Entries get Max Entries final Atomic Integer loaded Entries new Atomic Integer final Advanced Cache Object Object flagged Cache get Cache State Insertion Ref Boolean preloaded new Ref Boolean true preload Cl process null task Context loaded Entries get Increment max Entries task Context stop preloaded set false return Metadata metadata get Metadata null Internal Metadata Impl get Metadata actual null downcast go away preload Key flagged Cache get Key get Value metadata new Within Thread Executor true true preloaded preloaded get log debugf Preloaded keys loaded Entries get Util pretty Print Time time Service time Duration start Override public void disable Store String store Type enabled stores Mutex write Lock lock try remove Cache Loader store Type loaders remove Cache Writer store Type non Tx Writers remove Cache Writer store Type tx Writers finally stores Mutex write Lock unlock loaders Empty non Tx Writers Empty tx Writers Empty Async Interceptor Chain chain cache get Advanced Cache get Async Interceptor Chain Async Interceptor loader Interceptor chain find Interceptor Extending Cache Loader Interceptor class loader Interceptor null log persistence Without Cache Loader Interceptor else chain remove Interceptor loader Interceptor get Class Async Interceptor writer Interceptor chain find Interceptor Extending Cache Writer Interceptor class writer Interceptor null writer Interceptor chain find Interceptor Class Transactional Store Interceptor class writer Interceptor null log persistence Without Cache Write Interceptor else chain remove Interceptor writer Interceptor get Class else chain remove Interceptor writer Interceptor get Class enabled false Override public Set get Stores Class store Class stores Mutex read Lock lock try Set result new Hash Set Cache Loader l loaders Cache Loader real undelegate l store Class Instance real result add real Consumer Cache Writer get Writers writer Cache Writer real undelegate writer store Class Instance real result add real non Tx Writers get Writers tx Writers get Writers return result finally stores Mutex read Lock unlock Override public Collection String get Stores String stores Mutex read Lock lock try Set String loader Types new Hash Set loaders size Cache Loader loader loaders loader Types add undelegate loader get Class get Name Cache Writer writer non Tx Writers loader Types add undelegate writer get Class get Name Cache Writer writer tx Writers loader Types add undelegate writer get Class get Name return loader Types finally stores Mutex read Lock unlock private static class Advanced Purge Listener implements Advanced Cache Expiration Writer Expiration Purge Listener private final Expiration Manager expiration Manager private Advanced Purge Listener Expiration Manager expiration Manager expiration Manager expiration Manager Override public void marshalled Entry Purged Marshalled Entry entry expiration Manager handle Store Expiration entry Override public void entry Purged key expiration Manager handle Store Expiration key Override public void purge Expired enabled return long start try trace log trace Purging cache store expired entries start time Service time stores Mutex read Lock lock try Consumer Cache Writer purge Writer writer Shared stores purged coordinator config Map get writer shared cache get Cache Manager Coordinator return writer instanceof Advanced Cache Expiration Writer Advanced Cache Expiration Writer writer purge persistence Executor advanced Listener else writer instanceof Advanced Cache Writer Advanced Cache Writer writer purge persistence Executor key expiration Manager handle Store Expiration key non Tx Writers purge Writer tx Writers purge Writer finally stores Mutex read Lock unlock trace log tracef Purging cache store completed Util pretty Print Time time Service time Duration start Time Unit catch Exception e log exception Purging Data Container e Override public void clear Stores Access Mode mode stores Mutex read Lock lock try Apply tx Writers well clear happen Tx context Consumer Cache Writer clear Writer writer writer instanceof Advanced Cache Writer mode Perform config Map get writer Advanced Cache Writer writer clear non Tx Writers clear Writer tx Writers clear Writer finally stores Mutex read Lock unlock Override public boolean delete Stores Object key Access Mode mode stores Mutex read Lock lock try boolean removed false Cache Writer w non Tx Writers mode Perform config Map get w removed w delete key return removed finally stores Mutex read Lock unlock Override public void process Stores Key Filter key Filter Advanced Cache Loader Cache Loader Task task boolean fetch Value boolean fetch Metadata process Stores persistence Executor key Filter task fetch Value fetch Metadata Override public void process Stores Executor executor Key Filter key Filter Advanced Cache Loader Cache Loader Task task boolean fetch Value boolean fetch Metadata process Stores executor key Filter task fetch Value fetch Metadata Override public void process Stores Key Filter key Filter Advanced Cache Loader Cache Loader Task task boolean fetch Value boolean fetch Metadata Access Mode mode process Stores persistence Executor key Filter task fetch Value fetch Metadata mode Override public void process Stores Executor executor Key Filter key Filter Advanced Cache Loader Cache Loader Task task boolean fetch Value boolean fetch Metadata Access Mode mode stores Mutex read Lock lock try Cache Loader loader loaders mode Perform config Map get loader loader instanceof Advanced Cache Loader Advanced Cache Loader loader process key Filter task executor fetch Value fetch Metadata finally stores Mutex read Lock unlock Override public Marshalled Entry load Stores Object key Invocation Context context stores Mutex read Lock lock try Cache Loader l loaders context Origin Local Local Loader l continue Marshalled Entry load l load key load null return load return null finally stores Mutex read Lock unlock private boolean Local Loader Cache Loader loader loader instanceof Local Cache Loader return true loader instanceof Delegating Cache Loader Cache Loader unwrapped Loader Delegating Cache Loader loader undelegate unwrapped Loader instanceof Local Cache Loader return true return false Override public void write Non Tx Stores Marshalled Entry marshalled Entry Access Mode access Mode write Non Tx Stores marshalled Entry access Mode Override public void write Non Tx Stores Marshalled Entry marshalled Entry Access Mode access Mode long flags stores Mutex read Lock lock try non Tx Writers stream filter writer writer instanceof Flag Affected Store Flag Affected Store class cast writer Write flags filter writer access Mode Perform config Map get writer writer writer write marshalled Entry finally stores Mutex read Lock unlock Override public void write Batch Non Tx Stores Iterable Marshalled Entry entries Access Mode access Mode long flags stores Mutex read Lock lock try non Tx Writers stream filter writer writer instanceof Flag Affected Store Flag Affected Store class cast writer Write flags filter writer access Mode Perform config Map get writer writer writer write Batch entries finally stores Mutex read Lock unlock Override public void delete Batch Non Tx Stores Iterable Object keys Access Mode access Mode long flags stores Mutex read Lock lock try non Tx Writers stream filter writer access Mode Perform config Map get writer writer writer delete Batch keys finally stores Mutex read Lock unlock Override public void prepare Tx Stores Transaction transaction Batch Modification batch Modification Access Mode access Mode throws Persistence Exception stores Mutex read Lock lock try Cache Writer writer tx Writers access Mode Perform config Map get writer configuration clustering cache Mode equals Cache Mode Transactional Cache Writer tx Writer Transactional Cache Writer undelegate writer tx Writer prepare Modifications transaction batch Modification finally stores Mutex read Lock unlock Override public void commit Tx Stores Transaction transaction Access Mode access Mode perform Tx Stores access Mode writer writer commit transaction Override public void rollback Tx Stores Transaction transaction Access Mode access Mode perform Tx Stores access Mode writer writer rollback transaction Override public Advanced Cache Loader get State Transfer Provider stores Mutex read Lock lock try Cache Loader l loaders Store Configuration store Configuration config Map get l store Configuration fetch Persistent State store Configuration shared return Advanced Cache Loader l return null finally stores Mutex read Lock unlock Override public int size stores Mutex read Lock lock try Cache Loader l loaders l instanceof Advanced Cache Loader return Advanced Cache Loader l size finally stores Mutex read Lock unlock return Override public void set Clear Stop boolean clear Stop clear Stop clear Stop public List Cache Loader get Loaders return Collections unmodifiable List loaders public List Cache Writer get Writers return Collections unmodifiable List non Tx Writers public List Cache Writer get Tx Writers return Collections unmodifiable List tx Writers private void create Loaders Writers Store Configuration cfg configuration persistence stores Object bare Instance cache Store Factory Registry create Instance cfg Store Configuration processed Configuration cache Store Factory Registry process Store Configuration cfg Cache Writer writer create Cache Writer bare Instance Cache Loader loader create Cache Loader bare Instance writer post Process Writer processed Configuration writer loader post Process Reader processed Configuration writer loader Initialization Context Impl ctx new Initialization Context Impl processed Configuration cache time Service byte Buffer Factory marshalled Entry Factory initialize Loader processed Configuration loader ctx initialize Writer processed Configuration writer ctx initialize Bare Instance bare Instance ctx private Cache Loader post Process Reader Store Configuration cfg Cache Writer writer Cache Loader loader cfg async enabled loader null writer null loader create Async Loader loader Async Cache Writer writer return loader private Cache Writer post Process Writer Store Configuration cfg Cache Writer writer writer null cfg ignore Modifications writer null else cfg singleton Store enabled writer create Singleton Writer cfg writer else cfg async enabled writer create Async Writer writer return writer private Cache Loader create Async Loader Cache Loader loader Async Cache Writer async Writer Atomic Reference State state async Writer get State loader loader instanceof Advanced Cache Loader new Advanced Async Cache Loader loader state new Async Cache Loader loader state return loader private Singleton Cache Writer create Singleton Writer Store Configuration cfg Cache Writer writer return writer instanceof Advanced Cache Writer new Advanced Singleton Cache Writer writer cfg singleton Store new Singleton Cache Writer writer cfg singleton Store private void initialize Writer Store Configuration cfg Cache Writer writer Initialization Context Impl ctx writer null writer instanceof Delegating Cache Writer writer init ctx undelegate writer instanceof Transactional Cache Writer cfg transactional configuration transaction transaction Mode Transactional tx Writers add Transactional Cache Writer writer else cache non transactional possible store treat normal store n happen Cache Configuration Exception thrown validation non Tx Writers add writer else non Tx Writers add writer config Map put writer cfg private void initialize Loader Store Configuration cfg Cache Loader loader Initialization Context Impl ctx loader null loader instanceof Delegating Cache Loader loader init ctx loaders add loader config Map put loader cfg private void initialize Bare Instance Object instance Initialization Context Impl ctx delegates propagate init underlaying object delegate well order assure init invoked instance instanceof Cache Writer Cache Writer instance init ctx else Cache Loader instance init ctx private Cache Loader create Cache Loader Object instance return instance instanceof Cache Loader Cache Loader instance null private Cache Writer create Cache Writer Object instance return instance instanceof Cache Writer Cache Writer instance null protected Async Cache Writer create Async Writer Cache Writer writer return writer instanceof Advanced Cache Writer new Advanced Async Cache Writer writer new Async Cache Writer writer private Cache Loader undelegate Cache Loader l return l instanceof Delegating Cache Loader Delegating Cache Loader l undelegate l private Cache Writer undelegate Cache Writer w return w instanceof Delegating Cache Writer Delegating Cache Writer w undelegate w private Advanced Cache Object Object get Cache State Insertion List Flag flags new Array List Arrays List boolean Shared false Cache Writer w non Tx Writers config Map get w shared Shared true break Shared index Shareable flags add else flags add return cache get Advanced Cache Flags flags Array new Flag flags size private boolean index Shareable return configuration indexing index Shareable private long get Max Entries configuration memory Eviction Enabled configuration memory eviction Type Eviction Type return configuration memory size return Long private void preload Key Advanced Cache Object Object cache Object key Object value Metadata metadata final Transaction transaction suspend Needed boolean success false try try begin Needed cache put key value metadata success true catch Exception e throw new Persistence Exception Unable preload e finally commit Needed success finally commit Needed throw exception need try finally resume Needed transaction private void resume Needed Transaction transaction configuration transaction transaction Mode Transactional transaction Manager null transaction null try transaction Manager resume transaction catch Exception e throw new Persistence Exception e private Transaction suspend Needed configuration transaction transaction Mode Transactional transaction Manager null try return transaction Manager suspend catch Exception e throw new Persistence Exception e return null private void begin Needed configuration transaction transaction Mode Transactional transaction Manager null try transaction Manager begin catch Exception e throw new Persistence Exception e private void commit Needed boolean success configuration transaction transaction Mode Transactional transaction Manager null try success transaction Manager commit else transaction Manager rollback catch Exception e throw new Persistence Exception e public Executor get Persistence Executor return persistence Executor public Streaming Marshaller get Marshaller return private void remove Cache Loader String store Type Collection Cache Loader collection Iterator Cache Loader collection iterator Next Cache Loader loader next Remove store Type loader undelegate loader private void remove Cache Writer String store Type Collection extends Cache Writer collection Iterator extends Cache Writer collection iterator Next Cache Writer writer next Remove store Type writer undelegate writer private void Remove Iterator extends Lifecycle String store Type Lifecycle wrapper Lifecycle actual actual get Class get Name equals store Type wrapper stop actual wrapper actual stop remove private void perform Tx Stores Access Mode access Mode Consumer Transactional Cache Writer action stores Mutex read Lock lock try tx Writers stream filter writer access Mode Perform config Map get writer action finally stores Mutex read Lock unlock
package org topology import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import java util import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids import org remoting transport Address Persistent special link Address whose purpose remain unchanged across node restarts using global state author Tristan Tarrant since public class Persistent implements Address final uuid final int hash Code private Persistent uuid uuid uuid hash Code uuid hash Code public Persistent long msb long lsb new msb lsb public static Persistent random return new Persistent Util thread Local Random public static Persistent String String name return new Persistent String name public long get Significant Bits return uuid get Significant Bits public long get Least Significant Bits return uuid get Least Significant Bits Override public int compare Address Persistent Persistent return uuid compare uuid Override public int hash Code return hash Code Override public String String return uuid String Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Persistent Persistent obj uuid null uuid null return false else uuid equals uuid return false return true public static class Externalizer extends Abstract Externalizer Persistent Override public Set Class extends Persistent get Type Classes return Collections Class extends Persistent singleton Persistent class Override public void write Object Object Output output Persistent uuid throws Exception output write Long uuid get Significant Bits output write Long uuid get Least Significant Bits Override public Persistent read Object Object Input input throws Exception Class Found Exception return new Persistent input read Long input read Long Override public Integer get Id return Ids
package org topology import java util Array List import java util List import java util concurrent Concurrent Hash Map import java util concurrent Concurrent Map import java util function Unary Operator import org remoting transport Address import org util logging Log import org util logging Log Factory Implementation link Persistent Manager interface author Tristan Tarrant since public class Persistent Manager Impl implements Persistent Manager private static final Log log Log Factory get Log Persistent Manager Impl class private final Concurrent Map Address Persistent address uuid new Concurrent Hash Map private final Concurrent Map Persistent Address uuid address new Concurrent Hash Map Override public void add Persistent Address Mapping Address address Persistent persistent address uuid put address persistent uuid address put persistent address Override public Persistent get Persistent Uuid Address address return address uuid get address Override public Address get Address Persistent persistent return uuid address get persistent Override public void remove Persistent Address Mapping Persistent persistent persistent null null would invalid letting proceed would trigger would hide real issue return Address address uuid address get persistent address null address uuid remove address uuid address remove persistent Override public void remove Persistent Address Mapping Address address Persistent uuid address uuid get address uuid null uuid address remove uuid address uuid remove address Override public List Persistent map Addresses List Address addresses Array List Persistent list new Array List addresses size Address address addresses Persistent persistent address uuid get address persistent null never happen better log avoid swallowed elsewhere Null Pointer Exception npe new Null Pointer Exception log fatal find mapping address address npe throw npe else list add persistent return list Override public Unary Operator Address address Persistent return address address uuid get address Override public Unary Operator Address persistent Address return address uuid address get address
package org jmx import java lang management Management Factory import java util Properties import javax management Bean Server Default implementation link Bean Server Lookup return platform Bean server p Note enable platform Bean Server following system property passed Sun b Dcom sun management jmxremote b author Mircea Markus jboss com since public class Platform Bean Server Lookup implements Bean Server Lookup Override public Bean Server get Bean Server Properties properties return Management Factory get Platform Bean Server
package org partitionhandling impl import static org util logging events Messages import java util Array List import java util Comparator import java util List import java util Map import java util Objects import java util stream Collectors import org distribution ch Consistent Hash import org distribution ch Consistent Hash Factory import org partitionhandling Availability Mode import org remoting transport Address import org topology Cache Join Info import org topology Cache Status Response import org topology Cache Topology import org topology Persistent Manager import org util logging Log import org util logging Log Factory import org util logging events Event Log Category import org util logging events Event Log Manager public class Prefer Availability Strategy implements Availability Strategy public static final Comparator Cache Status Response null return Cache Topology get Cache Topology Cache Topology get Cache Topology int topology Id Integer get Topology Id compare get Topology Id topology Id return topology Id int rebalance Id Integer get Rebalance Id compare get Rebalance Id rebalance Id return topology Id List Address get Members List Address get Members size size int compare Address get compare get compare Address return Integer hash Code compare hash Code return size size private static final Log log Log Factory get Log Prefer Availability Strategy class private final Event Log Manager event Log Manager private final Persistent Manager persistent Manager private final Lost Data Check lost Data Check private final boolean resolve Conflicts Merge public Prefer Availability Strategy Event Log Manager event Log Manager Persistent Manager persistent Manager Lost Data Check lost Data Check boolean resolve Conflicts Merge event Log Manager event Log Manager persistent Manager persistent Manager lost Data Check lost Data Check resolve Conflicts Merge resolve Conflicts Merge Override public void Join Availability Strategy Context context Address joiner context queue Rebalance context get Expected Members Override public void Graceful Leave Availability Strategy Context context Address leaver Cache Topology current Topology context get Current Topology List Address new Members new Array List current Topology get Members new Members remove leaver new Members Empty log debugf last node cache left context get Cache Name context update Current Topology new Members return context get Stable Topology null lost Data Check test context get Stable Topology get Current new Members event Log Manager get Event Logger context context get Cache Name warn Event Log Category lost Data Graceful Leaver leaver case rebalancing disabled another rebalance progress context update Current Topology new Members context queue Rebalance new Members Override public void Cluster View Change Availability Strategy Context context List Address cluster Members Cache Topology current Topology context get Current Topology List Address new Members new Array List current Topology get Members new Members retain cluster Members log tracef Cache lose members skipping rebalance context get Cache Name return check Lost Data context new Members update case rebalancing disabled another rebalance progress context update Current Topology new Members context queue Rebalance new Members protected void check Lost Data Availability Strategy Context context List Address new Members Cache Topology stable Topology context get Stable Topology List Address stable Members stable Topology get Members List Address lost Members new Array List stable Members lost Members remove new Members lost Data Check test stable Topology get Current new Members event Log Manager get Event Logger context context get Cache Name fatal Event Log Category lost Data Abrupt Leavers lost Members else lost Members size Math ceil stable Members size event Log Manager get Event Logger context context get Cache Name warn Event Log Category minority Partition new Members lost Members stable Members Override public void Partition Merge Availability Strategy Context context Map Address Cache Status Response status Response Map must first sort response list ensure max Topology chosen deterministically event multiple topologies exist number members List Cache Status Response status Responses status Response Map values stream sorted collect Collectors List Pick biggest stable topology e one members Cache Topology max Stable Topology null Cache Status Response response status Responses Cache Topology stable Topology response get Stable Topology stable Topology null node n properly joined yet continue max Stable Topology null max Stable Topology get Members size stable Topology get Members size max Stable Topology stable Topology pick biggest current topology derived biggest stable topology Cache Topology max Topology null Cache Status Response response status Responses Cache Topology stable Topology response get Stable Topology Objects equals stable Topology max Stable Topology continue Cache Topology topology response get Cache Topology topology null node n properly joined yet continue max Topology null max Topology get Members size topology get Members size max Topology topology max Topology null log debugf current topology recovered joiners cache context get Cache Name Since picked biggest topology topology id may biggest int max Topology Id int max Rebalance Id Cache Status Response response status Responses Cache Topology topology response get Cache Topology topology null max Topology Id topology get Topology Id max Topology Id topology get Topology Id max Rebalance Id topology get Rebalance Id max Rebalance Id topology get Rebalance Id Increment topology id bigger topology might sent old coordinator enough nodes wait new Groups view answering status request new view ca n process topology updates old view id Also cancel pending rebalance removing pending n recover rebalance confirmation status yet Cache Topology merged Topology null List Address new Members context get Expected Members boolean resolve Conflicts resolve Conflicts Merge Split Brain Healing context max Topology max Stable Topology max Topology null required resolve Conflicts utilise expected members necessary conflict resolution writes go owners resolve Conflicts Cache Join Info join Info context get Join Info Consistent Hash Factory chf join Info get Consistent Hash Factory Consistent Hash mergehash chf create join Info get Hash Function join Info get Num Owners join Info get Num Segments new Members context get Capacity Factors merged Topology new Cache Topology max Topology Id max Rebalance Id max Topology get Current mergehash mergehash Cache Topology Phase new Members persistent Manager map Addresses new Members else merged Topology new Cache Topology max Topology Id max Rebalance Id max Topology get Current null Cache Topology Phase max Topology get Actual Members persistent Manager map Addresses max Topology get Actual Members context update Topologies Merge merged Topology max Stable Topology null resolve Conflicts First update Hs remove nodes left current topology List Address surviving Members new Array List new Members merged Topology null surviving Members retain merged Topology get Members check Lost Data context surviving Members context update Current Topology surviving Members start rebalance merged members context queue Rebalance new Members expected members stable members know split brain heal occurring However max Topology Size know new coordinator private boolean Split Brain Healing Availability Strategy Context context Cache Topology max Topology Cache Topology max Stable Topology boolean New Coordinator max Topology null max Topology get Members size boolean membership Increased New Coordinator max Stable Topology null context get Expected Members size max Stable Topology get Members size return New Coordinator membership Increased Override public void Rebalance End Availability Strategy Context context nothing need another rebalance already queue Override public void Manual Availability Change Availability Strategy Context context Availability Mode new Availability Mode cache always
package org commands write import static org commons util Util Str import java io Exception import java io Object Input import java io Object Output import org commands Command Invocation Id import org commands Metadata Aware Command import org commands Visitor import org commons marshall Marshall Util import org container entries Entry import org context Invocation Context import org context impl Flag Bit Sets import org metadata Metadata import org metadata Metadatas import org notifications cachelistener Cache Notifier Implements functionality defined link org Cache put Object Object author Mircea Markus jboss com since public class Put Key Value Command extends Abstract Data Write Command implements Metadata Aware Command public static final byte private Object value private boolean put Absent private Cache Notifier Object Object notifier private boolean successful true private Metadata metadata private Value Matcher value Matcher public Put Key Value Command public Put Key Value Command Object key Object value boolean put Absent Cache Notifier notifier Metadata metadata long flags Bit Set Command Invocation Id command Invocation Id super key flags Bit Set command Invocation Id value value put Absent put Absent value Matcher put Absent Value Matcher Value Matcher noinspection unchecked notifier notifier metadata metadata public void init Cache Notifier notifier noinspection unchecked notifier notifier public Object get Value return value public void set Value Object value value value Override public Object accept Visitor Invocation Context ctx Visitor visitor throws Throwable return visitor visit Put Key Value Command ctx Override public Load Type load Type Conditional Flag Flag Bit Sets return Load Type else return Load Type Override public Object perform Invocation Context ctx throws Throwable worth looking entry never going apply change value Matcher Value Matcher successful false return null noinspection unchecked Entry Object Object e Entry ctx lookup Entry key e null throw new Illegal State Exception wrapped Object prev Value e get Value value Matcher matches prev Value null value successful false return prev Value return perform Put e ctx Override public byte get Command Id return Override public void write Object Output output throws Exception output write Object key output write Object value output write Object metadata Marshall Util marshall Enum value Matcher output Command Invocation Id write output command Invocation Id output write Long Flag Bit Sets copy Without Remotable Flags get Flags Bit Set output write Boolean put Absent Override public void read Object Input input throws Exception Class Found Exception key input read Object value input read Object metadata Metadata input read Object value Matcher Marshall Util unmarshall Enum input Value Matcher value command Invocation Id Command Invocation Id read input set Flags Bit Set input read Long put Absent input read Boolean Override public Metadata get Metadata return metadata Override public void set Metadata Metadata metadata metadata metadata public boolean Put Absent return put Absent public void set Put Absent boolean put Absent put Absent put Absent Override public boolean equals Object return true null get Class get Class return false super equals return false Put Key Value Command Put Key Value Command put Absent put Absent return false value null value equals value value null return false return metadata null metadata equals metadata metadata null Override public int hash Code int result super hash Code result result value null value hash Code result result put Absent result result metadata null metadata hash Code return result Override public String String return new String Builder append Put Key Value Command key append Str key append value append Str value append flags append print Flags append command Invocation Id append Command Invocation Id show command Invocation Id append put Absent append put Absent append value Matcher append value Matcher append metadata append metadata append successful append successful append topology Id append get Topology Id append String Override public boolean Successful return successful Override public boolean Conditional return put Absent Override public Value Matcher get Value Matcher return value Matcher Override public void set Value Matcher Value Matcher value Matcher value Matcher value Matcher Override public void init Backup Write Rpc Command Backup Write Rpc Command command command set Write command Invocation Id key value metadata get Flags Bit Set get Topology Id Override public void fail successful false Override public boolean Return Value Expected return Conditional super Return Value Expected private Object perform Put Entry Object Object e Invocation Context ctx Object entry Value e get Value Object Non tx tx set state transfer Flag Flag Bit Sets Flag Bit Sets e Created notifier notify Cache Entry Created key value metadata true ctx else notifier notify Cache Entry Modified key value metadata entry Value e get Metadata true ctx e set Value value Metadatas update Metadata e metadata e Removed e set Created true e set Expired false e set Removed false e set Valid true null e set Changed true Return expected value retrying put Absent command e null return value Matcher Value Matcher null
package org client hotrod impl operations import java util concurrent Time Unit import java util concurrent atomic Atomic Integer import org client hotrod configuration Configuration import org client hotrod exceptions Invalid Response Exception import org client hotrod impl protocol Codec import org client hotrod impl protocol Hot Rod Constants import org client hotrod impl transport Transport import org client hotrod impl transport Transport Factory import net jcip annotations Immutable Implements put defined href http community jboss org wiki Hot Rod Protocol Hot Rod protocol specification author Mircea Markus jboss com since Immutable public class Put Operation extends Abstract Key Value Operation public Put Operation Codec codec Transport Factory transport Factory Object key byte key Bytes byte cache Name Atomic Integer topology Id int flags Configuration cfg byte value long lifespan Time Unit lifespan Time Unit long max Idle Time Unit max Idle Time Unit super codec transport Factory key key Bytes cache Name topology Id flags cfg value lifespan lifespan Time Unit max Idle max Idle Time Unit Override protected execute Operation Transport transport short status send Put Operation transport Hot Rod Constants Success status throw new Invalid Response Exception Unexpected response status Integer Hex String status return return Possible Prev Value transport status
package org transaction xa recovery import java io Exception import java io Object Input import java io Object Output import java util Collections import java util Set import javax transaction xa Xid import org commons util Util import org marshall core Ids import org remoting transport Address import org transaction xa Dld Global Transaction import org transaction xa Global Transaction Dld Global Transaction also holds xid information required recovery purpose class avoid serialization Xid objects wire case recovery enabled author Mircea Markus jboss com since deprecated Since longer used Deprecated public class Recovery Aware Dld Global Transaction extends Dld Global Transaction implements Recoverable Transaction Identifier public Recovery Aware Dld Global Transaction public Recovery Aware Dld Global Transaction Address addr boolean remote super addr remote private volatile Xid xid private volatile long internal Id Override public Xid get Xid return xid Override public void set Xid Xid xid xid xid Override public long get Internal Id return internal Id Override public void set Internal Id long internal Id internal Id internal Id Deprecated public static class Externalizer extends Global Transaction Abstract Global Tx Externalizer Recovery Aware Dld Global Transaction Override public void write Object Object Output output Recovery Aware Dld Global Transaction global Transaction throws Exception super write Object output global Transaction output write Long global Transaction get Coin Toss global Transaction locks Origin Empty output write Object null else output write Object global Transaction locks Origin output write Object global Transaction xid output write Long global Transaction internal Id Override protected Recovery Aware Dld Global Transaction create Global Transaction return new Recovery Aware Dld Global Transaction Override Suppress Warnings unchecked public Recovery Aware Dld Global Transaction read Object Object Input input throws Exception Class Found Exception Recovery Aware Dld Global Transaction global Transaction super read Object input global Transaction set Coin Toss input read Long Object locks Origin Obj input read Object locks Origin Obj null global Transaction set Locks Held Origin Collections empty Set else global Transaction set Locks Held Origin Set Object locks Origin Obj Xid xid Xid input read Object global Transaction set Xid xid global Transaction set Internal Id input read Long return global Transaction Override public Integer get Id return Ids Override public Set Class extends Recovery Aware Dld Global Transaction get Type Classes return Util Class extends Recovery Aware Dld Global Transaction Set Recovery Aware Dld Global Transaction class Override public String String return get Class get Simple Name xid xid internal Id internal Id super String
package org transaction xa recovery import java io Exception import java io Object Input import java io Object Output import java util Set import javax transaction xa Xid import org commons util Util import org marshall core Ids import org remoting transport Address import org transaction xa Global Transaction import org transaction xa Transaction Factory Global Transaction also holds xid information required recovery author Mircea Markus jboss com since public class Recovery Aware Global Transaction extends Global Transaction implements Recoverable Transaction Identifier private volatile Xid xid private volatile long internal Id public Recovery Aware Global Transaction super public Recovery Aware Global Transaction Address addr boolean remote super addr remote Override public Xid get Xid return xid Override public void set Xid Xid xid xid xid Override public long get Internal Id return internal Id Override public void set Internal Id long internal Id internal Id internal Id Override public String String return get Class get Simple Name xid xid internal Id internal Id super String public static class Externalizer extends Global Transaction Abstract Global Tx Externalizer Recovery Aware Global Transaction Override protected Recovery Aware Global Transaction create Global Transaction return Recovery Aware Global Transaction Transaction Factory Tx Factory Enum new Global Transaction Override public void write Object Object Output output Recovery Aware Global Transaction xid Gtx throws Exception super write Object output xid Gtx output write Object xid Gtx xid output write Long xid Gtx get Internal Id Override public Recovery Aware Global Transaction read Object Object Input input throws Exception Class Found Exception Recovery Aware Global Transaction xid Gtx super read Object input Xid xid Xid input read Object xid Gtx set Xid xid xid Gtx set Internal Id input read Long return xid Gtx Override public Integer get Id return Ids Override public Set Class extends Recovery Aware Global Transaction get Type Classes return Util Class extends Recovery Aware Global Transaction Set Recovery Aware Global Transaction class
package org configuration cache import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set Defines recovery configuration cache author pmuir public class Recovery Configuration public static final String recovery Info Cache Name public static final Attribute Definition Boolean Attribute Definition builder enabled false immutable build public static final Attribute Definition String Attribute Definition builder recovery Info Cache Name xml Name recovery cache immutable build static Attribute Set attribute Definition Set return new Attribute Set Recovery Configuration class private final Attribute Boolean enabled private final Attribute String recovery Info Cache Name private final Attribute Set attributes Recovery Configuration Attribute Set attributes attributes attributes check Protection enabled attributes attribute recovery Info Cache Name attributes attribute Determines recovery enabled cache public boolean enabled return enabled get Sets name cache recovery related information held specified defaults cache named link Recovery Configuration public String recovery Info Cache Name return recovery Info Cache Name get public Attribute Set attributes return attributes Override public String String return Recovery Configuration attributes attributes Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Recovery Configuration Recovery Configuration obj attributes null attributes null return false else attributes equals attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result
package org configuration cache import static org configuration cache Recovery Configuration import static org configuration cache Recovery Configuration import java lang invoke Method Handles import org commons configuration Builder import org commons configuration attributes Attribute Set import org configuration global Global Configuration import org transaction Transaction Mode import org transaction Transaction Protocol import org util logging Log import org util logging Log Factory Defines recovery configuration cache author pmuir public class Recovery Configuration Builder extends Abstract Transport Configuration Child Builder implements Builder Recovery Configuration private static final Log log Log Factory get Log Method Handles lookup lookup Class private final Attribute Set attributes Recovery Configuration Builder Transaction Configuration Builder builder super builder attributes Recovery Configuration attribute Definition Set Enable recovery cache public Recovery Configuration Builder enable attributes attribute set true return Disable recovery cache public Recovery Configuration Builder disable attributes attribute set false return Enable recovery cache public Recovery Configuration Builder enabled boolean enabled attributes attribute set enabled return boolean Enabled return attributes attribute get Sets name cache recovery related information held specified defaults cache named link Recovery Configuration public Recovery Configuration Builder recovery Info Cache Name String recovery Info Name attributes attribute set recovery Info Name return Override public void validate attributes attribute get return nothing validate transaction transaction Mode Transaction Mode throw log recovery Supported Non Tx Cache transaction use Synchronization throw log recovery Supported Synchronization transaction transaction Protocol Transaction Protocol throw log unavailable Total Order Tx Recovery Override public void validate Global Configuration global Config validate Override public Recovery Configuration create return new Recovery Configuration attributes protect Override public Recovery Configuration Builder read Recovery Configuration template attributes read template attributes return Override public String String return Recovery Configuration Builder attributes attributes
package org factories import java util concurrent Concurrent Map import java util concurrent Time Unit import org Cache import org commons Cache Configuration Exception import org configuration cache Cache Mode import org configuration cache Configuration import org configuration cache Configuration Builder import org configuration cache Recovery Configuration import org factories annotations Default Factory import org manager Embedded Cache Manager import org registry Internal Cache Registry import org transaction Transaction Mode import org transaction xa recovery Recovery Aware Remote Transaction import org transaction xa recovery Recovery Info Key import org transaction xa recovery Recovery Manager import org transaction xa recovery Recovery Manager Impl import org util logging Log import org util logging Log Factory Factory Recovery Manager author Mircea Markus jboss com since Default Factory classes Recovery Manager class public class Recovery Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory private static final Log log Log Factory get Log Recovery Manager Factory class private static final long Time Unit Millis Override Suppress Warnings unchecked public Recovery Manager Recovery Manager construct Class Recovery Manager component Type configuration transaction recovery enabled String recovery Cache Name configuration transaction recovery recovery Info Cache Name log tracef Using recovery cache name recovery Cache Name Embedded Cache Manager cm component Registry get Global Component Registry get Component Embedded Cache Manager class boolean use Default Cache recovery Cache Name equals Recovery Configuration use defined cache use Default Cache check see cache defined cm get Cache Configuration Names contains recovery Cache Name throw new Cache Configuration Exception Recovery cache recovery Cache Name exist else Internal Cache Registry internal Cache Registry component Registry get Global Component Registry get Component Internal Cache Registry class internal Cache Registry register Internal Cache recovery Cache Name get Default Recovery Cache Config return Recovery Manager build Recovery Manager component Registry get Cache Name recovery Cache Name cm use Default Cache else return null private Configuration get Default Recovery Cache Config Configuration Builder builder new Configuration Builder recovery cache participate main cache transactions especially removals cache executed context finalised transaction cause issues builder transaction transaction Mode Transaction Mode builder clustering cache Mode Cache Mode builder expiration lifespan builder transaction recovery disable return builder build private Recovery Manager build Recovery Manager String cache Name String recovery Cache Name Embedded Cache Manager cm boolean Default log tracef obtain reference recovery cache recovery Cache Name Cache recovery Cache cm get Cache recovery Cache Name recovery Cache get Cache Configuration transaction transaction Mode Transactional see comment get Default Recovery Cache Config throw new Cache Configuration Exception recovery cache n transactional log tracef Obtained reference recovery cache recovery Cache Name return new Recovery Manager Impl Concurrent Map Recovery Info Key Recovery Aware Remote Transaction recovery Cache cache Name
package org commons util import java lang annotation Annotation import java lang reflect Field import java lang reflect Method import java util Array List import java util Arrays import java util Collection import java util Linked List import java util List import org commons Cache Exception import org commons logging Log import org commons logging Log Factory Basic reflection utilities enhance provides author Manik Surtani href mailto manik jboss org manik jboss org since public class Reflection Util private static final Log log Log Factory get Log Reflection Util class private static final String private static final Class primitives int class byte class short class long class float class double class boolean class char class private static final Class primitive Arrays int class byte class short class long class float class double class boolean class char class public static final Class new Class Returns set Methods contain given method annotation includes public protected package private methods well superclasses Note include overridden methods param c class inspect param annotation Type type annotation look return List Method objects require injection public static List Method get Methods Class c Class extends Annotation annotation Type List Method annotated new Linked List inspect Recursively c annotated annotation Type return annotated Returns set Methods contain given method annotation includes public protected package private methods superclasses interfaces param c class inspect param annotation Type type annotation look return List Method objects require injection public static List Method get Methods Shallow Class c Class extends Annotation annotation Type List Method annotated new Linked List Method c get Declared Methods Annotation Present annotation Type annotated add return annotated private static void get Annotated Field Helper List Field list Class c Class extends Annotation annotation Type Field declared Fields c get Declared Fields Field field declared Fields field Annotation Present annotation Type list add field public static List Field get Annotated Fields Class c Class extends Annotation annotation Type List Field fields new Array List Class could null case interface c null c equals Object class c c get Superclass get Annotated Field Helper fields c annotation Type return fields public static Method find Method Class type String method Name try return type get Declared Method method Name catch Method Exception e type equals Object class type Interface throw new Cache Exception e return find Method type get Superclass method Name public static Method find Method Class type String method Name Class parameters throws Class Found Exception try return type get Declared Method method Name parameters catch Method Exception e type equals Object class type Interface throw new Cache Exception e return find Method type get Superclass method Name parameters Inspects class superclasses way link Object method instances contain given annotation even identifies private package protected methods public ones param c param param annotation Type private static void inspect Recursively Class c List Method Class extends Annotation annotation Type Method c get Declared Methods n bother method already overridden subclass Found Annotation Present annotation Type add c equals Object class c Interface inspect Recursively c get Superclass annotation Type Class ifc c get Interfaces inspect Recursively ifc annotation Type Tests whether method already found e overridden param method inspect param collection methods found return true method signature already exists private static boolean Found Method Collection Method Method found get Name equals found get Name Arrays equals get Parameter Types found get Parameter Types return false return true private static Field find Field Recursively Class c String field Name Field f null try f c get Declared Field field Name catch Field Exception e c equals Object class f find Field Recursively c get Superclass field Name return f Invokes method using reflection accessible manner using link Method set Accessible boolean param instance instance execute method param method method execute param parameters parameters public static Object invoke Accessibly Object instance Method method Object parameters return Security Actions invoke Accessibly instance method parameters public static Method find Getter Field Class c String field Name Method retval find Getter Field Using Reflection c field Name retval null c equals Object class c Interface retval find Getter Field c get Superclass field Name retval null Class ifc c get Interfaces retval find Getter Field ifc field Name retval null break return retval private static Method find Getter Field Using Reflection Class c String field Name Method c get Declared Methods String name get Name String null name starts get name substring else name starts name substring null equals Ignore Case field Name return return null public static Method find Setter Field Class c String field Name c Object class return null Method c get Declared Methods String name get Name String null name starts set name substring null equals Ignore Case field Name return Try parent class run return find Setter Field c get Superclass field Name public static String extract Field Name String setter Getter String field null setter Getter starts set setter Getter starts get field setter Getter substring else setter Getter starts field setter Getter substring field null field length String Builder sb new String Builder sb append Character Lower Case field char field length sb append field substring return sb String return null Retrieves value field object instance via reflection param instance inspect param field Name name field retrieve return value public static Object get Value Object instance String field Name Field f find Field Recursively instance get Class field Name f null throw new Cache Exception Could find field named field Name instance instance try f set Accessible true return f get instance catch Illegal Access Exception iae throw new Cache Exception access field f iae Inspects class passed class level annotation specified annotation available method recursively inspects superclasses interfaces finds required annotation p Returns null annotation found param clazz class inspect param ann annotation search Must class level annotation return annotation instance null Suppress Warnings unchecked public static extends Annotation get Annotation Class clazz Class ann true first check class clazz get Annotation ann null return check interfaces clazz Interface Class interfaces clazz get Interfaces Class inter interfaces get Annotation inter ann null return check superclasses Class superclass clazz get Superclass superclass null return null else look clazz superclass Tests whether annotation present class order tested ul li class li li implemented interfaces li li superclasses li ul param clazz class test param annotation annotation look return true annotation found false otherwise public static boolean Annotation Present Class clazz Class extends Annotation annotation return get Annotation clazz annotation null public static Class Class Array String type List Class Loader class Loader throws Class Found Exception type List null return Class retval new Class type List length int String type List retval get Class Name class Loader return retval public static Class get Class Name String name Class Loader cl throws Class Found Exception try return Util load Class Strict name cl catch Class Found Exception cnfe Could primitive let check Class primitive primitives name equals primitive get Name return primitive Class primitive primitive Arrays name equals primitive get Name return primitive throw new Class Found Exception Class name found public static String String Array Class classes classes null return else String class Names new String classes length int classes length class Names classes get Name return class Names public static Field get Field String field Name Class object Class try return object Class get Declared Field field Name catch Field Exception e object Class equals Object class return get Field field Name object Class get Superclass else return null public static unwrap Object obj Class clazz clazz null clazz Assignable obj get Class return clazz cast obj throw log unable Unwrap obj clazz public static unwrap Class clazz Object objs clazz null Object objs clazz Assignable get Class return clazz cast throw log unable Unwrap Arrays String objs clazz
package org commands import java util Map import org commands control Lock Control Command import org commands functional Read Key Command import org commands functional Read Many Command import org commands functional Read Write Key Command import org commands functional Read Write Key Value Command import org commands functional Read Write Many Command import org commands functional Read Write Many Entries Command import org commands functional Tx Read Key Command import org commands functional Tx Read Many Command import org commands functional Write Key Command import org commands functional Write Key Value Command import org commands functional Write Many Command import org commands functional Write Many Entries Command import org commands module Module Command Factory import org commands read Distributed Execute Command import org commands read Get Cache Entry Command import org commands read Get Key Value Command import org commands remote Cache Rpc Command import org commands remote Clustered Get Command import org commands remote Clustered Get Command import org commands remote Get Keys Group Command import org commands remote Single Rpc Command import org commands remote recovery Complete Transaction Command import org commands remote recovery Get Doubt Transactions Command import org commands remote recovery Get Doubt Tx Info Command import org commands remote recovery Tx Completion Notification Command import org commands tx Commit Command import org commands tx Prepare Command import org commands tx Rollback Command import org commands tx Versioned Commit Command import org commands tx Versioned Prepare Command import org commands tx totalorder Total Order Commit Command import org commands tx totalorder Total Order Non Versioned Prepare Command import org commands tx totalorder Total Order Rollback Command import org commands tx totalorder Total Order Versioned Commit Command import org commands tx totalorder Total Order Versioned Prepare Command import org commands write Backup Put Map Rpc Command import org commands write Backup Write Rpc Command import org commands write Clear Command import org commands write Compute Command import org commands write Compute Absent Command import org commands write Invalidate Command import org commands write Invalidate Command import org commands write Invalidate Versions Command import org commands write Put Key Value Command import org commands write Put Map Command import org commands write Remove Command import org commands write Remove Expired Command import org commands write Replace Command import org commons Cache Exception import org factories Known Component Names import org factories annotations Component Name import org factories annotations Inject import org factories scopes Scope import org factories scopes Scopes import org manager Embedded Cache Manager import org manager impl Replicable Command Manager Function import org manager impl Replicable Command Runnable import org statetransfer State Request Command import org statetransfer State Response Command import org stream impl Stream Request Command import org stream impl Stream Response Command import org stream impl Stream Segment Response Command import org topology Cache Topology Control Command import org util Byte String import org xsite Single Site Rpc Command import org xsite Site Admin Command import org xsite statetransfer Site State Push Command import org xsite statetransfer Site State Transfer Control Command Specifically used create un initialized link org commands Replicable Command byte stream link Scopes component n knowledge initializing command injecting cache specific components p Usually second step unmarshalling command byte stream creating un initialized version using factory pass command though link Commands Factory initialize Replicable Command Replicable Command boolean see Commands Factory initialize Replicable Command Replicable Command boolean author Manik Surtani author Mircea Markus jboss com since Scope Scopes public class Remote Commands Factory private Embedded Cache Manager cache Manager private Map Byte Module Command Factory command Factories Inject public void inject Embedded Cache Manager cache Manager Component Name Known Component Names Map Byte Module Command Factory command Factories cache Manager cache Manager command Factories command Factories Creates un initialized command Un initialized sense parameters set components specific cache question set p would typically set parameters using link Commands Factory initialize Replicable Command Replicable Command boolean p param id id command param type type command return replicable command public Replicable Command Stream byte id byte type Replicable Command command type switch id case Put Key Value Command command new Put Key Value Command break case Put Map Command command new Put Map Command break case Remove Command command new Remove Command break case Replace Command command new Replace Command break case Compute Command command new Compute Command break case Compute Absent Command command new Compute Absent Command break case Get Key Value Command command new Get Key Value Command break case Clear Command command new Clear Command break case Invalidate Command command new Invalidate Command break case Invalidate Command command new Invalidate Command break case Cache Topology Control Command command new Cache Topology Control Command break case Get Keys Group Command command new Get Keys Group Command break case Get Cache Entry Command command new Get Cache Entry Command break case Read Write Key Command command new Read Write Key Command break case Read Write Key Value Command command new Read Write Key Value Command break case Read Write Many Command command new Read Write Many Command break case Read Write Many Entries Command command new Read Write Many Entries Command break case Write Key Command command new Write Key Command break case Write Key Value Command command new Write Key Value Command break case Write Many Command command new Write Many Command break case Write Many Entries Command command new Write Many Entries Command break case Remove Expired Command command new Remove Expired Command break case Replicable Command Runnable command new Replicable Command Runnable break case Replicable Command Manager Function command new Replicable Command Manager Function break case Read Key Command command new Read Key Command break case Read Many Command command new Read Many Command break case Tx Read Key Command command new Tx Read Key Command break case Tx Read Many Command command new Tx Read Many Command break default throw new Cache Exception Unknown command id id else Module Command Factory mcf command Factories get id mcf null return mcf Stream id else throw new Cache Exception Unknown command id id return command Resolve link Cache Rpc Command stream param id id command param type type command whether internal user defined param cache Name cache name command directed return instance link Cache Rpc Command public Cache Rpc Command Stream byte id byte type Byte String cache Name Cache Rpc Command command type switch id case Lock Control Command command new Lock Control Command cache Name break case Prepare Command command new Prepare Command cache Name break case Versioned Prepare Command command new Versioned Prepare Command cache Name break case Total Order Non Versioned Prepare Command command new Total Order Non Versioned Prepare Command cache Name break case Total Order Versioned Prepare Command command new Total Order Versioned Prepare Command cache Name break case Commit Command command new Commit Command cache Name break case Versioned Commit Command command new Versioned Commit Command cache Name break case Total Order Commit Command command new Total Order Commit Command cache Name break case Total Order Versioned Commit Command command new Total Order Versioned Commit Command cache Name break case Rollback Command command new Rollback Command cache Name break case Total Order Rollback Command command new Total Order Rollback Command cache Name break case Single Rpc Command command new Single Rpc Command cache Name break case Clustered Get Command command new Clustered Get Command cache Name break case State Request Command command new State Request Command cache Name break case State Response Command command new State Response Command cache Name break case Remove Cache Command command new Remove Cache Command cache Name cache Manager break case Tx Completion Notification Command command new Tx Completion Notification Command cache Name break case Get Doubt Transactions Command command new Get Doubt Transactions Command cache Name break case Distributed Execute Command command new Distributed Execute Command cache Name break case Get Doubt Tx Info Command command new Get Doubt Tx Info Command cache Name break case Complete Transaction Command command new Complete Transaction Command cache Name break case Create Cache Command command new Create Cache Command cache Name break case Site Admin Command command new Site Admin Command cache Name break case Cancel Command command new Cancel Command cache Name break case Site State Transfer Control Command command new Site State Transfer Control Command cache Name break case Site State Push Command command new Site State Push Command cache Name break case Single Site Rpc Command command new Single Site Rpc Command cache Name break case Clustered Get Command command new Clustered Get Command cache Name break case Stream Request Command command new Stream Request Command cache Name break case Stream Segment Response Command command new Stream Segment Response Command cache Name break case Stream Response Command command new Stream Response Command cache Name break case Backup Write Rpc Command command new Backup Write Rpc Command cache Name break case Backup Put Map Rpc Command command new Backup Put Map Rpc Command cache Name break case Invalidate Versions Command command new Invalidate Versions Command cache Name break default throw new Cache Exception Unknown command id id else Module Command Factory mcf command Factories get id mcf null return mcf Stream id cache Name else throw new Cache Exception Unknown command id id return command
package org commands write import static org commons util Util Str import java io Exception import java io Object Input import java io Object Output import java util Objects import org commands Command Invocation Id import org commands Metadata Aware Command import org commands Visitor import org commons marshall Marshall Util import org container entries Entry import org context Invocation Context import org context impl Flag Bit Sets import org metadata Metadata import org notifications cachelistener Cache Notifier import org util logging Log import org util logging Log Factory author Mircea Markus jboss com author href mailto galder zamarreno jboss com Galder Zamarreno since public class Remove Command extends Abstract Data Write Command implements Metadata Aware Command private static final Log log Log Factory get Log Remove Command class public static final byte protected Cache Notifier Object Object notifier protected boolean successful true private boolean non Existent false protected Metadata metadata protected Value Matcher value Matcher null value indicates entry removed key mapped value null entry removed regardless value mapped protected Object value public Remove Command Object key Object value Cache Notifier notifier long flags Bit Set Command Invocation Id command Invocation Id super key flags Bit Set command Invocation Id value value noinspection unchecked notifier notifier value Matcher value null Value Matcher Value Matcher public void init Cache Notifier notifier noinspection unchecked notifier notifier public Remove Command Override public Object accept Visitor Invocation Context ctx Visitor visitor throws Throwable return visitor visit Remove Command ctx Override public Object perform Invocation Context ctx throws Throwable worth looking entry never going apply change value Matcher Value Matcher successful false return null Entry e Entry ctx lookup Entry key Object prev Value e get Value prev Value null non Existent true value Matcher matches null value null e set Changed true e set Removed true e set Created false instanceof Evict Command e set Evicted true e set Value null return Conditional true null else log trace Nothing remove since entry n exist context null successful false return false value Matcher matches prev Value value null successful false return false instanceof Evict Command e set Evicted true return perform Remove e prev Value ctx public void notify Invocation Context ctx Object removed Value Metadata removed Metadata boolean Pre notifier notify Cache Entry Removed key removed Value removed Metadata Pre ctx Override public byte get Command Id return Override public void set Metadata Metadata metadata metadata metadata Override public Metadata get Metadata return metadata Override public boolean equals Object super equals return false Remove Command Remove Command return Objects equals value value Override public int hash Code int result super hash Code result result value null value hash Code return result Override public String String return new String Builder append Remove Command key append Str key append value append Str value append metadata append metadata append flags append print Flags append command Invocation Id append Command Invocation Id show command Invocation Id append value Matcher append value Matcher append topology Id append get Topology Id append String Override public boolean Successful return successful Override public boolean Conditional return value null public boolean Non Existent return non Existent Override public void write Object Output output throws Exception output write Object key output write Object value output write Object metadata output write Long Flag Bit Sets copy Without Remotable Flags get Flags Bit Set Marshall Util marshall Enum value Matcher output Command Invocation Id write output command Invocation Id Override public void read Object Input input throws Exception Class Found Exception key input read Object value input read Object metadata Metadata input read Object set Flags Bit Set input read Long value Matcher Marshall Util unmarshall Enum input Value Matcher value command Invocation Id Command Invocation Id read input Override public Value Matcher get Value Matcher return value Matcher Override public void set Value Matcher Value Matcher value Matcher value Matcher value Matcher Override public void fail successful false Override public Load Type load Type return Conditional Flag Flag Bit Sets Load Type Load Type public Object get Value return value public void set Value Object value value value Override public final boolean Return Value Expected ignored conditional remove return Conditional super Return Value Expected Override public void init Backup Write Rpc Command Backup Write Rpc Command command command set Remove command Invocation Id key get Flags Bit Set get Topology Id protected Object perform Remove Entry e Object prev Value Invocation Context ctx notify ctx prev Value e get Metadata true e set Removed true e set Valid false e set Changed true e set Value null metadata null e set Metadata metadata value Matcher Value Matcher return Conditional true prev Value else Return expected value retrying return Conditional true value
package org commands write import static org commons util Util Str import java io Exception import java io Object Input import java io Object Output import java util Objects import org commands Command Invocation Id import org commons util Enum Util import org container entries Entry import org context Invocation Context import org context impl Flag Bit Sets import org metadata Metadata import org notifications cachelistener Cache Notifier import org util logging Log import org util logging Log Factory Removes entry expired memory author William Burns since public class Remove Expired Command extends Remove Command public static final int private static final Log log Log Factory get Log Remove Expired Command class private Long lifespan public Remove Expired Command value matcher always n need serialize like commands value Matcher Value Matcher public Remove Expired Command Object key Object value Long lifespan Cache Notifier notifier Command Invocation Id command Invocation Id value Equivalence null command never compares values super key value notifier Enum Util command Invocation Id lifespan lifespan value Matcher Value Matcher Performs expiration specified entry param ctx invocation context return null Override public Object perform Invocation Context ctx throws Throwable Entry e Entry ctx lookup Entry key e null e Removed Object value e get Value provided lifespan null means store removal command ca n compare lifespan Object prev Value e get Value lifespan null value Matcher matches prev Value value null e set Expired true return perform Remove e prev Value ctx else e get Metadata null metadata value means gone currently shown due expired value though verify matches value well value null value Matcher matches prev Value value null e set Expired true return perform Remove e prev Value ctx else e get Lifespan e get Lifespan lifespan entries lifespan positive means ca n expire n even try remove Lastly metadata verify equals lifespan value match add threshold verify n created value lifespan expiring value Matcher matches prev Value value null e set Expired true return perform Remove e prev Value ctx else log trace remove entry lifespan value match else log trace Nothing remove since entry n exist context already removed successful false return false Override public boolean Conditional return true Override public void notify Invocation Context ctx Object removed Value Metadata removed Metadata boolean Pre Pre notifier notify Cache Entry Expired key value removed Metadata ctx Override public byte get Command Id return Override public String String return Remove Expired Command key Str key value Str value lifespan lifespan Override public void write Object Output output throws Exception Command Invocation Id write output command Invocation Id output write Object key output write Object value lifespan null output write Boolean true output write Long lifespan else output write Boolean false Override public void read Object Input input throws Exception Class Found Exception command Invocation Id Command Invocation Id read input key input read Object value input read Object boolean lifespan Provided input read Boolean lifespan Provided lifespan input read Long else lifespan null Override public boolean equals Object return true null get Class get Class return false super equals return false Remove Expired Command Remove Expired Command return Objects equals lifespan lifespan Override public int hash Code return Objects hash super hash Code lifespan Override public long get Flags Bit Set Override flags return Flag Bit Sets Override public void init Backup Write Rpc Command Backup Write Rpc Command command command set Remove Expired command Invocation Id key value Flag Bit Sets get Topology Id
package org client hotrod impl operations import java util concurrent atomic Atomic Integer import org client hotrod configuration Configuration import org client hotrod impl protocol Codec import org client hotrod impl protocol Hot Rod Constants import org client hotrod impl transport Transport import org client hotrod impl transport Transport Factory import net jcip annotations Immutable Implement remove operation described href http community jboss org wiki Hot Rod Protocol Hot Rod protocol specification author Mircea Markus jboss com since Immutable public class Remove Operation extends Abstract Key Operation public Remove Operation Codec codec Transport Factory transport Factory Object key byte key Bytes byte cache Name Atomic Integer topology Id int flags Configuration cfg super codec transport Factory key key Bytes cache Name topology Id flags cfg Override public execute Operation Transport transport short status send Key Operation key Bytes transport result return Possible Prev Value transport status Hot Rod Constants Exist status return null return result
package org commands import java io Exception import java io Object Input import java io Object Output import java util concurrent Completable Future import java util concurrent Completion Exception import org context Invocation Context import org remoting transport Address import org util concurrent Completable Futures core command based cache framework Commands correspond specific areas functionality cache replicated using link org remoting rpc Rpc Manager author Mircea Markus jboss com author Manik Surtani since public interface Replicable Command Invoke command asynchronously p p method replaces link perform Invocation Context remote execution default implementation link perform Invocation Context removed future versions p since default Completable Future Object invoke Async throws Throwable return Completable Future completed Future perform null Invoke command synchronously p p method optional Unless command never blocks please implement link invoke Async instead p since default Object invoke throws Throwable try return invoke Async join catch Completion Exception e throw Completable Futures extract Exception e Performs primary function command Please see specific implementation classes details performed well return types b Important b method invoked end interceptors chain never called directly custom interceptor param ctx invocation context return arbitrary return value generated performing command throws Throwable event problems deprecated Since split link invoke Async link Visitable Command perform Invocation Context Deprecated default Object perform Invocation Context ctx throws Throwable return invoke Used marshallers convert command id streaming return method id command compatible pre Method Call ids byte get Command Id true return value provided performed remotely Otherwise remote link org remoting responses Response Generator may choose simply return null save marshalling costs return true false boolean Return Value Expected true return value marshalled link org remoting responses Successful Response otherwise marshalled link org remoting responses Unsuccessful Response default boolean Successful return true true command processed asynchronously thread provided thread pool Otherwise command processed directly Groups thread p feature allows avoid keep Groups thread busy originate discard messages retransmissions commands block waiting state acquiring locks etc return true return code true command block wait code false otherwise boolean Block Writes instance link Object Output param output stream throws Exception error occurred void write Object Output output throws Exception Reads instance stream written link write Object Output param input stream read throws Exception error occurred throws Class Found Exception tries load undefined class void read Object Input input throws Exception Class Found Exception Sets sender link Address p default n set anything Implement method sender link Address needed param origin sender link Address default void set Origin Address origin op default
package org marshall exts import java io Exception import java io Object Input import java io Object Output import java util Collection import java util Set import org commands Remote Commands Factory import org commands Replicable Command import org commands Topology Affected Command import org commands functional Read Key Command import org commands functional Read Many Command import org commands functional Read Write Key Command import org commands functional Read Write Key Value Command import org commands functional Read Write Many Command import org commands functional Read Write Many Entries Command import org commands functional Tx Read Key Command import org commands functional Tx Read Many Command import org commands functional Write Key Command import org commands functional Write Key Value Command import org commands functional Write Many Command import org commands functional Write Many Entries Command import org commands read Distributed Execute Command import org commands read Get Key Value Command import org commands remote Cache Rpc Command import org commands remote Get Keys Group Command import org commands write Clear Command import org commands write Compute Command import org commands write Compute Absent Command import org commands write Evict Command import org commands write Invalidate Command import org commands write Invalidate Command import org commands write Put Key Value Command import org commands write Put Map Command import org commands write Remove Command import org commands write Remove Expired Command import org commands write Replace Command import org commons marshall Abstract Externalizer import org commons util Util import org factories Global Component Registry import org manager impl Replicable Command Manager Function import org manager impl Replicable Command Runnable import org marshall core Ids import org topology Cache Topology Control Command import org util Byte String Replicable Command Externalizer author Galder Zamarre since public class Replicable Command Externalizer extends Abstract Externalizer Replicable Command private final Remote Commands Factory cmd Factory private final Global Component Registry global Component Registry public Replicable Command Externalizer Remote Commands Factory cmd Factory Global Component Registry global Component Registry cmd Factory cmd Factory global Component Registry global Component Registry Override public void write Object Object Output output Replicable Command command throws Exception write Command Header output command write Command Parameters output command protected void write Command Parameters Object Output output Replicable Command command throws Exception command write output command instanceof Topology Affected Command output write Int Topology Affected Command command get Topology Id protected void write Command Header Object Output output Replicable Command command throws Exception decide whether core user defined command load check Collection Class extends Replicable Command module Commands get Module Commands Write indexer separate commands defined external core module ones defined via module commands module Commands null module Commands contains command get Class output write Byte else output write Byte output write Short command get Command Id Override public Replicable Command read Object Object Input input throws Exception Class Found Exception Replicable Command replicable Command read Command Header input read Command Parameters input replicable Command return replicable Command private Replicable Command read Command Header Object Input input throws Exception byte type input read Byte short method Id input read Short return cmd Factory Stream byte method Id type void read Command Parameters Object Input input Replicable Command command throws Exception Class Found Exception command read input command instanceof Topology Affected Command Topology Affected Command command set Topology Id input read Int protected Cache Rpc Command Stream byte id byte type Byte String cache Name return cmd Factory Stream id type cache Name Override public Integer get Id return Ids Override public Set Class extends Replicable Command get Type Classes noinspection unchecked Set Class extends Replicable Command core Commands Util Set Cache Topology Control Command class Distributed Execute Command class Get Key Value Command class Clear Command class Evict Command class Invalidate Command class Invalidate Command class Put Key Value Command class Put Map Command class Remove Command class Remove Expired Command class Replace Command class Compute Command class Compute Absent Command class Get Keys Group Command class Read Key Command class Read Many Command class Read Write Key Command class Read Write Key Value Command class Write Key Command class Write Key Value Command class Write Many Command class Write Many Entries Command class Read Write Many Command class Read Write Many Entries Command class Tx Read Key Command class Tx Read Many Command class Replicable Command Runnable class Replicable Command Manager Function class Search commands replicable cache specific replicable commands Collection Class extends Replicable Command module Commands global Component Registry get Module Properties module Replicable Commands module Commands null module Commands Empty core Commands add module Commands return core Commands private Collection Class extends Replicable Command get Module Commands return global Component Registry get Module Properties module Commands
package org distribution ch impl import java io Exception import java io Object Input import java io Object Output import java util Array List import java util Arrays import java util Collection import java util Collections import java util Hash Set import java util Iterator import java util List import java util Set import java util function Unary Operator import org commons hash Hash import org commons marshall Instance Reusing Advanced Externalizer import org commons util Util import org distribution ch Consistent Hash import org globalstate Scoped Persistent State import org marshall core Ids import org remoting transport Address import org topology Persistent import org commons util Small Int Set import org util Range Set Special implementation link org distribution ch Consistent Hash replicated caches hash space several segments owned members primary ownership segment evenly spread members author Dan Berindei author anistor redhat com since public class Replicated Consistent Hash implements Consistent Hash private static final String primary Owners private static final String primary Owners private final Hash hash Function private final int primary Owners private final List Address members private final Set Address members Set private final Set Integer segments private final int segment Size public Replicated Consistent Hash Hash hash Function List Address members int primary Owners hash Function hash Function members Collections unmodifiable List new Array List members members Set Collections unmodifiable Set new Hash Set members primary Owners primary Owners segments new Range Set primary Owners length segment Size Util get Segment Size primary Owners length public Replicated Consistent Hash union Replicated Consistent Hash ch get Hash Function equals ch get Hash Function throw new Illegal Argument Exception consistent hash objects must hash function get Num Segments ch get Num Segments throw new Illegal Argument Exception consistent hash objects must number segments List Address union Members new Array List get Members Address member ch get Members union Members contains member union Members add member int primary Owners new int get Num Segments int segment Id segment Id primary Owners length segment Id Address primary Owner locate Primary Owner Segment segment Id int primary Owner Index union Members index primary Owner primary Owners segment Id primary Owner Index return new Replicated Consistent Hash get Hash Function union Members primary Owners Replicated Consistent Hash Scoped Persistent State state hash Function Util get Instance state get Property Consistent Hash Persistence Constants null int num Members Integer parse Int state get Property Consistent Hash Persistence Constants members new Array List num Members int num Members Persistent uuid Persistent String state get Property String format Consistent Hash Persistence Constants members add uuid members Set Collections unmodifiable Set new Hash Set members int num Primary Owners state get Int Property primary Owners new int num Primary Owners int num Primary Owners primary Owners state get Int Property String format segments new Range Set primary Owners length segment Size Util get Segment Size primary Owners length Override public int get Num Segments return primary Owners length Override public int get Num Owners return members size Override public List Address get Members return members Override public Hash get Hash Function return hash Function Override public int get Segment Object key result must always positive make sure dividend positive first return hash Function hash key Integer segment Size Override public List Address locate Owners Segment int segment Id Address primary Owner locate Primary Owner Segment segment Id List Address owners new Array List members size owners add primary Owner Address member members member equals primary Owner owners add member return owners Override public Address locate Primary Owner Segment int segment Id return members get primary Owners segment Id Override public Set Integer get Segments Owner Address owner owner null throw new Illegal Argument Exception owner null members Set contains owner throw new Illegal Argument Exception node member owner return segments Override public Set Integer get Primary Segments Owner Address owner int index members index owner index throw new Illegal Argument Exception node member owner Set Integer primary Segments new Small Int Set primary Owners length int primary Owners length primary Owners index primary Segments add return primary Segments Override public String get Routing Table String String Builder sb new String Builder Address members sb length sb append n Set Integer primary Segments get Primary Segments Owner sb append append primary append primary Segments return sb String Override public Set Address locate Owners Collection Object keys return members Set Override public boolean Key Local Node Address node Address Object key return Segment Local Node node Address Override public boolean Segment Local Node Address node Address int segment Id return members Set contains node Address Override public boolean Replicated return true public void Scoped State Scoped Persistent State state state set Property Consistent Hash Persistence Constants get Class get Name state set Property Consistent Hash Persistence Constants hash Function get Class get Name state set Property Consistent Hash Persistence Constants Integer String members size int members size state set Property String format Consistent Hash Persistence Constants members get String state set Property Integer String primary Owners length int primary Owners length state set Property String format Integer String primary Owners Override public Consistent Hash remap Addresses Unary Operator Address remapper List Address remapped Members new Array List members size Iterator Address members iterator Next Address remapper apply next null return null remapped Members add return new Replicated Consistent Hash hash Function remapped Members primary Owners Override public String String String Builder sb new String Builder Replicated Consistent Hash sb append ns append segments size sb append owners append members size append int primary Owned new int members size int primary Owners length primary Owned primary Owners boolean first true int members size Address members get first first false else sb append sb append append append primary Owned sb append return sb String Override public int hash Code final int prime int result result prime result hash Function null hash Function hash Code result prime result members null members hash Code result prime result Arrays hash Code primary Owners return result Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Replicated Consistent Hash Replicated Consistent Hash obj hash Function null hash Function null return false else hash Function equals hash Function return false members null members null return false else members equals members return false Arrays equals primary Owners primary Owners return false return true public static class Externalizer extends Instance Reusing Advanced Externalizer Replicated Consistent Hash Override public void Write Object Object Output output Replicated Consistent Hash ch throws Exception output write Object ch hash Function output write Object ch members output write Object ch primary Owners Override Suppress Warnings unchecked public Replicated Consistent Hash Read Object Object Input unmarshaller throws Exception Class Found Exception Hash hash Function Hash unmarshaller read Object List Address members List Address unmarshaller read Object int primary Owners int unmarshaller read Object return new Replicated Consistent Hash hash Function members primary Owners Override public Integer get Id return Ids Override public Set Class extends Replicated Consistent Hash get Type Classes return Collections singleton Replicated Consistent Hash class
package org distribution ch impl import java io Object Input import java io Object Output import java util Array Deque import java util Collections import java util List import java util Map import java util Queue import java util Set import org commons hash Hash import org commons marshall Abstract Externalizer import org distribution ch Consistent Hash Factory import org globalstate Scoped Persistent State import org marshall core Ids import org remoting transport Address import org util logging Log import org util logging Log Factory Factory Replicated Consistent Hash author Dan Berindei author anistor redhat com since public class Replicated Consistent Hash Factory implements Consistent Hash Factory Replicated Consistent Hash private static final Log log Log Factory get Log Replicated Consistent Hash Factory class Override public Replicated Consistent Hash create Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors int primary Owners new int num Segments int num Segments primary Owners members size return new Replicated Consistent Hash hash Function members primary Owners Override public Replicated Consistent Hash Persistent State Scoped Persistent State state String consistent Hash Class state get Property consistent Hash Replicated Consistent Hash class get Name equals consistent Hash Class throw log persistent Consistent Hash Mismatch get Class get Name consistent Hash Class return new Replicated Consistent Hash state Override public Replicated Consistent Hash update Members Replicated Consistent Hash base List Address new Members Map Address Float actual Capacity Factors new Members equals base get Members return base recompute primary ownership based new list members removes leavers int num Segments base get Num Segments int primary Owners new int num Segments int node Usage new int new Members size boolean found Orphan Segments false int segment Id segment Id num Segments segment Id Address primary Owner base locate Primary Owner Segment segment Id int primary Owner Index new Members index primary Owner primary Owners segment Id primary Owner Index primary Owner Index found Orphan Segments true else node Usage primary Owner Index ensure leavers replaced existing members segments orphan found Orphan Segments int num Segments primary Owners int least Used find Least Used Node node Usage primary Owners least Used node Usage least Used ensure even spread ownership int min Segments Per Node num Segments new Members size Queue Integer segments Node new Queue new Members size int segment Id segment Id primary Owners length segment Id int owner primary Owners segment Id Queue Integer segments segments Node owner segments null segments Node owner segments new Array Deque Integer min Segments Per Node segments add segment Id int Used Node int node node node Usage length node node Usage node min Segments Per Node take segment node min Segments Per Node used node Usage Used Node min Segments Per Node Used Node find Used Node node Usage int segment Id segments Node Used Node poll n add segment Id new owner queue primary Owners segment Id node node Usage Used Node node Usage node return new Replicated Consistent Hash base get Hash Function new Members primary Owners private int find Least Used Node int node Usage int res int node node node Usage length node node Usage node node Usage res res node return res private int find Used Node int node Usage int res int node node node Usage length node node Usage node node Usage res res node return res Override public Replicated Consistent Hash rebalance Replicated Consistent Hash base return base Override public Replicated Consistent Hash union Replicated Consistent Hash ch Replicated Consistent Hash ch return ch union ch Override public boolean equals Object return null get Class get Class Override public int hash Code return public static class Externalizer extends Abstract Externalizer Replicated Consistent Hash Factory Override public void write Object Object Output output Replicated Consistent Hash Factory chf Override Suppress Warnings unchecked public Replicated Consistent Hash Factory read Object Object Input unmarshaller return new Replicated Consistent Hash Factory Override public Integer get Id return Ids Override public Set Class extends Replicated Consistent Hash Factory get Type Classes return Collections Class extends Replicated Consistent Hash Factory singleton Replicated Consistent Hash Factory class
package org jmx import java lang reflect Field import java lang reflect Invocation Target Exception import java lang reflect Method import java lang reflect Modifier import java util Hash Map import java util Map import javax management Attribute import javax management Attribute List import javax management Attribute Found Exception import javax management Dynamic Bean import javax management Bean Attribute Info import javax management Bean Exception import javax management Bean Info import javax management Bean Operation Info import javax management Bean Parameter Info import javax management Reflection Exception import javax management Service Found Exception import org commons util Collection Factory import org commons util Reflection Util import org factories components Jmx Attribute Metadata import org factories components Jmx Operation Metadata import org factories components Jmx Operation Parameter import org factories components Manageable Component Metadata import org jmx annotations Bean import org jmx annotations Managed Operation import org util logging Log import org util logging Log Factory class entirely copied Groups name Could n simply reuse Groups ship Bean Managed Attribute Managed Operation p original Group Resource Bean logic modified invoke method checks whether operation called exposed link Managed Operation otherwise call fails Groups deviated logic purpose liked fact could expose class methods simply annotating class link Bean annotation author Mircea Markus jboss com author Galder Zamarre since public class Resource Bean implements Dynamic Bean private static final String Dynamic Bean Description private static final Log log Log Factory get Log Resource Bean class private static final boolean trace log Trace Enabled private final Object obj private final Class object Class private final Ispn Bean Operation Info op Infos private final Bean Attribute Info att Infos private final Hash Map String Invokable Bean Attribute Info atts new Hash Map String Invokable Bean Attribute Info private final Manageable Component Metadata Bean Metadata private static final Map String Field Collection Factory make Concurrent Map private static final Map String Method Collection Factory make Concurrent Map public Resource Bean Object instance Manageable Component Metadata Bean Metadata throws Field Exception Class Found Exception instance null throw new Null Pointer Exception make Bean wrapper null instance obj instance object Class instance get Class Bean Metadata Bean Metadata Load fields int att Infos new Bean Attribute Info Bean Metadata get Attribute Metadata size Jmx Attribute Metadata attribute Metadata Bean Metadata get Attribute Metadata String attribute Name attribute Metadata get Name Invokable Bean Attribute Info info Jmx Info attribute Metadata atts contains Key attribute Name throw new Illegal Argument Exception Component Bean Metadata get Name metadata duplicate attribute attribute Name atts put attribute Name info att Infos info get Bean Attribute Info trace log tracef Attribute r b w b b type attribute Name info get Bean Attribute Info Readable info get Bean Attribute Info Writable info get Bean Attribute Info info get Bean Attribute Info get Type operations Ispn Bean Operation Info op op Infos new Ispn Bean Operation Info Bean Metadata get Operation Metadata size Jmx Operation Metadata operation Bean Metadata get Operation Metadata op Jmx Info operation op Infos op trace log tracef Operation op get Return Type op get Name private static Field find Field Class object Class String field Name throws Field Exception String key object Class get Name field Name Field f get key f null f Reflection Util get Field field Name object Class f null put key f return f private static Method find Setter Class object Class String field Name throws Field Exception String key object Class get Name field Name Method get key null Reflection Util find Setter Field object Class field Name null put key return private static Method find Getter Class object Class String field Name throws Field Exception String key object Class get Name g field Name Method get key null Reflection Util find Getter Field object Class field Name null put key return private Invokable Bean Attribute Info Jmx Info Jmx Attribute Metadata attribute Metadata throws Field Exception attribute Metadata Use Setter Field field find Field object Class attribute Metadata get Name field null return new Invokable Field Based Bean Attribute Info attribute Metadata get Name attribute Metadata get Type attribute Metadata get Description true attribute Metadata Writable attribute Metadata field Method setter attribute Metadata Writable find Setter object Class attribute Metadata get Name null Method getter find Getter object Class attribute Metadata get Name return new Invokable Setter Based Bean Attribute Info attribute Metadata get Name attribute Metadata get Type attribute Metadata get Description true attribute Metadata Writable attribute Metadata getter setter private Ispn Bean Operation Info Jmx Info Jmx Operation Metadata operation Metadata throws Class Found Exception Jmx Operation Parameter parameters operation Metadata get Method Parameters Bean Parameter Info params new Bean Parameter Info parameters length int parameters length params new Bean Parameter Info parameters get Name parameters get Type parameters get Description return new Ispn Bean Operation Info operation Metadata get Method Name operation Metadata get Description params operation Metadata get Return Type Bean Operation Info operation Metadata get Operation Name Object get Object return obj Override public synchronized Bean Info get Bean Info client n know Ispn Bean Operation Info need convert first Bean Operation Info operation Info Client new Bean Operation Info op Infos length int op Infos length Ispn Bean Operation Info current op Infos operation Info Client new Bean Operation Info current get Operation Name current get Description current get Signature current get Return Type Bean Operation Info return new Bean Info get Object get Class get Canonical Name Bean Metadata get Description att Infos null operation Info Client null Override public Object get Attribute String name throws Attribute Found Exception name null name length throw new Null Pointer Exception Invalid attribute requested name Attribute attr get Named Attribute name attr null throw new Attribute Found Exception Unknown attribute name Known attributes names atts key Set return attr get Value Override public synchronized void set Attribute Attribute attribute throws Attribute Found Exception Bean Exception attribute null attribute get Name null throw new Null Pointer Exception Invalid attribute requested attribute set Named Attribute attribute Override public synchronized Attribute List get Attributes String names Attribute List al new Attribute List String name names Attribute attr get Named Attribute name attr null al add attr else log could Find Attribute name return al Override public synchronized Attribute List set Attributes Attribute List list Attribute List results new Attribute List Object List list Attribute attr Attribute List try set Named Attribute attr results add attr catch Exception e log failed Update Attribute attr get Name attr get Value return results Override public Object invoke String name Object args String sig throws Bean Exception Reflection Exception log Debug Enabled log debugf Invoke method called name Bean Operation Info op Info null Ispn Bean Operation Info op op Infos op get Operation Name equals name op Info op break op Info null final String msg Operation name amongst operations op Infos throw new Bean Exception new Service Found Exception msg msg Argument type transformation according signatures int sig length clients e g pass arguments java lang String need fields numbers args null log Debug Enabled log debugf Argument value transformation class method invoke need class args args get Class sig sig equals int class get Canonical Name sig equals Integer class get Canonical Name args get Class Integer class args get Class int class args Integer parse Int String args sig equals Long class get Canonical Name sig equals long class get Canonical Name args get Class Long class args get Class long class args Long parse Long String args try Class classes new Class sig length int classes length classes Reflection Util get Class Name sig null Method method get Object get Class get Method op Info get Name classes return method invoke get Object args catch Exception e throw new Bean Exception new Exception get Root Cause e public Throwable get Root Cause Throwable throwable Throwable cause cause throwable get Cause null throwable cause return throwable private Attribute get Named Attribute String name Attribute result null name equals result new Attribute Bean Metadata get Description else Invokable Bean Attribute Info atts get name null name length legacy Earlier versions used upper case starting letter attributes Character first Char name char Character Upper Case first Char name name replace First Character String first Char Character String Character Lower Case first Char atts get name null try result new Attribute name invoke null trace log tracef Attribute r b w b b value name get Bean Attribute Info Readable get Bean Attribute Info Writable get Bean Attribute Info result get Value catch Exception e log debugf e Exception reading value attribute name else log queried Attribute Found name return result private void set Named Attribute Attribute attribute throws Bean Exception Attribute Found Exception log Debug Enabled log debugf Invoking set attribute value attribute get Name attribute get Value String name attribute get Name Invokable Bean Attribute Info atts get name null name length legacy Earlier versions used upper case starting letter attributes Character first Char name char Character Upper Case first Char name name replace First Character String first Char Character String Character Lower Case first Char atts get name null try invoke attribute catch Exception e log error Writing Value Attribute name e throw new Bean Exception e Error invoking setter attribute name else log could Invoke Set Attribute name attribute get Value throw new Attribute Found Exception Could find attribute name private static abstract class Invokable Bean Attribute Info private final Bean Attribute Info attribute Info public Invokable Bean Attribute Info String name String type String description boolean Readable boolean Writable boolean attribute Info new Bean Attribute Info name type description Readable Writable public abstract Object invoke Attribute throws Illegal Access Exception Invocation Target Exception public Bean Attribute Info get Bean Attribute Info return attribute Info private static class Invokable Field Based Bean Attribute Info extends Invokable Bean Attribute Info private transient final Field field private transient final Resource Bean resource public Invokable Field Based Bean Attribute Info String name String type String description boolean Readable boolean Writable boolean Field field Resource Bean resource super name type description Readable Writable field field resource resource Override public Object invoke Attribute throws Illegal Access Exception Modifier Public field get Modifiers field set Accessible true null return field get resource get Object else field set resource get Object get Value return null private static class Invokable Setter Based Bean Attribute Info extends Invokable Bean Attribute Info private transient final Method setter private transient final Method getter private transient final Resource Bean resource public Invokable Setter Based Bean Attribute Info String name String type String description boolean Readable boolean Writable boolean Method getter Method setter Resource Bean resource super name type description Readable Writable setter setter getter getter resource resource Override public Object invoke Attribute throws Illegal Access Exception Invocation Target Exception null Modifier Public getter get Modifiers getter set Accessible true return getter invoke resource get Object null else Modifier Public setter get Modifiers setter set Accessible true return setter invoke resource get Object get Value public String get Object Name String Bean Metadata get Jmx Object Name return null trim length object Class get Simple Name
package org factories import org factories annotations Default Factory import org remoting responses Default Response Generator import org remoting responses Response Generator Creates Response Generator author Manik Surtani since Default Factory classes Response Generator class public class Response Generator Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override public construct Class component Type return component Type cast new Default Response Generator
package org remoting rpc Represents different handling mechanisms dealing remote command responses include waiting responses nodes cluster link Response Mode waiting responses link Response Mode waiting first valid response link Response Mode author Manik Surtani since public enum Response Mode commands use mode prevent Suspect Exceptions broadcast anycast translates Groups broadcast would cause Suspect Exceptions mode situation node leaving want address living members topology already updated view yet use asymmetric cluster nodes respond Cache Found Response broadcast public boolean Synchronous return Asynchronous public boolean Asynchronous return
package org upgrade import java util Hash Set import java util Set import java util concurrent Time Unit import org Cache import org commons util Service Finder import org commons util Util import org factories annotations Inject import org factories annotations Survives Restarts import org factories scopes Scope import org factories scopes Scopes import org jmx annotations Bean import org jmx annotations Managed Operation import org jmx annotations Parameter import org util Time Service import org util logging Log import org util logging Log Factory component handles control hooks handle migrating one version another author Manik Surtani author Tristan Tarrant since Bean object Name Rolling Upgrade Manager description component handles control hooks handle migrating data one version another Scope value Scopes Survives Restarts public class Rolling Upgrade Manager private static final Log log Log Factory get Log Rolling Upgrade Manager class private final Set Source Migrator source Migrators new Hash Set private Cache Object Object cache private Time Service time Service Inject public void initialize final Cache Object Object cache Time Service time Service cache cache time Service time Service Managed Operation description Synchronizes data old cluster using specified migrator display Name Synchronizes data old cluster using specified migrator public long synchronize Data Parameter name migrator Name description name migrator use String migrator Name throws Exception Target Migrator migrator get Migrator migrator Name long start time Service time long count migrator synchronize Data cache log entries Migrated count cache get Name Util pretty Print Time time Service time Duration start Time Unit return count Managed Operation description Synchronizes data old cluster using specified migrator display Name Synchronizes data old cluster using specified migrator public long synchronize Data Parameter name migrator Name description name migrator use String migrator Name Parameter name read Batch description Numbers entries transferred time old cluster int read Batch Parameter name threads description Number threads per node used write data new cluster int threads throws Exception Target Migrator migrator get Migrator migrator Name long start time Service time long count migrator synchronize Data cache read Batch threads log entries Migrated count cache get Name Util pretty Print Time time Service time Duration start Time Unit return count Managed Operation description Disconnects target cluster source cluster according specified migrator display Name Disconnects target cluster source cluster public void disconnect Source Parameter name migrator Name description name migrator use String migrator Name throws Exception Target Migrator migrator get Migrator migrator Name migrator disconnect Source cache private Target Migrator get Migrator String name throws Exception Class Loader cl cache get Cache Manager get Cache Manager Configuration class Loader Target Migrator Service Finder load Target Migrator class cl name equals Ignore Case get Name return throw log unknown Migrator name Registers migrator specific data format endpoint ecosystem typically one Migrator implementation Hot Rod one memcached one one embedded mode would typically added upgrade manager first access via protocols param migrator public void add Source Migrator Source Migrator migrator source Migrators add migrator
package org factories import org commons Cache Configuration Exception import org factories annotations Default Factory import org remoting rpc Rpc Manager import org remoting rpc Rpc Manager Impl factory Rpc Manager author Manik Surtani href mailto manik jboss org manik jboss org since Default Factory classes Rpc Manager class public class Rpc Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override public construct Class component Type configuration clustering cache Mode Clustered return null transport configured global Configuration Clustered throw new Cache Configuration Exception Transport configured order use clustered caches return component Type cast new Rpc Manager Impl
package org remoting rpc import java text Number Format import java util Collection import java util Hash Map import java util List import java util Map import java util Set import java util concurrent Completable Future import java util concurrent Completion Exception import java util concurrent Execution Exception import java util concurrent Time Unit import java util concurrent atomic Atomic Long import org commands Commands Factory import org commands Replicable Command import org commands Topology Affected Command import org commands remote Cache Rpc Command import org commons Cache Exception import org configuration cache Configuration import org distribution ch Consistent Hash import org factories annotations Inject import org factories annotations Start import org jmx Jmx Statistics Exposer import org jmx annotations Data Type import org jmx annotations Display Type import org jmx annotations Bean import org jmx annotations Managed Attribute import org jmx annotations Managed Operation import org jmx annotations Measurement Type import org jmx annotations Parameter import org jmx annotations Units import org remoting inboundhandler Deliver Order import org remoting responses Response import org remoting transport Address import org remoting transport Transport import org statetransfer State Transfer Manager import org topology Cache Topology import org util Time Service import org util concurrent Completable Futures import org util logging Log import org util logging Log Factory component really wrapper around link org remoting transport Transport implementation used set transport provide lifecycle dependency hooks external transport implementations author Manik Surtani author Galder Zamarre author Mircea Markus jboss com author Pedro Ruivo since Bean object Name Rpc Manager description Manages remote calls remote cache instances cluster public class Rpc Manager Impl implements Rpc Manager Jmx Statistics Exposer private static final Log log Log Factory get Log Rpc Manager Impl class private static final boolean trace log Trace Enabled private Transport private final Atomic Long replication Count new Atomic Long private final Atomic Long replication Failures new Atomic Long private final Atomic Long total Replication Time new Atomic Long private boolean statistics Enabled false default n gather statistics private Configuration configuration private Commands Factory cf private State Transfer Manager state Transfer Manager private Time Service time Service Inject public void inject Dependencies Transport Configuration cfg Commands Factory cf State Transfer Manager state Transfer Manager Time Service time Service configuration cfg cf cf state Transfer Manager state Transfer Manager time Service time Service Start priority private void start statistics Enabled configuration jmx Statistics enabled configuration transaction transaction Protocol Total Order check Total Order Supported Managed Attribute description Retrieves committed view display Name Committed view data Type Data Type public String get Committed View String Cache Topology cache Topology state Transfer Manager get Cache Topology cache Topology null return return cache Topology get Current get Members String Managed Attribute description Retrieves pending view display Name Pending view data Type Data Type public String get Pending View String Cache Topology cache Topology state Transfer Manager get Cache Topology cache Topology null return Consistent Hash pending cache Topology get Pending return pending null pending get Members String null Override public Completable Future Map Address Response invoke Remotely Async Collection Address recipients Replicable Command rpc Rpc Options options trace log tracef invoking recipient list options get Address rpc recipients options configuration clustering cache Mode Clustered throw new Illegal State Exception Trying invoke remote command cache clustered Set topology id command case n yet set Topology Id rpc Cache Rpc Command cache Rpc rpc instanceof Cache Rpc Command Cache Rpc Command rpc cf build Single Rpc Command rpc long start Time Nanos statistics Enabled time Service time Completable Future Map Address Response invocation try invocation invoke Remotely Async recipients cache Rpc options response Mode options time Unit Millis options timeout options response Filter options deliver Order configuration clustering cache Mode Distributed catch Exception e log unexpected Error Replicating e statistics Enabled replication Failures increment Get return rethrow Cache Exception e return invocation handle response Map throwable statistics Enabled long time Taken time Service time Duration start Time Nanos Time Unit total Replication Time get Add time Taken throwable null statistics Enabled replication Count increment Get trace log tracef Response rpc response Map return response Map else statistics Enabled replication Failures increment Get return rethrow Cache Exception throwable private rethrow Cache Exception Throwable throwable throwable get Cause null throwable instanceof Completion Exception throwable throwable get Cause throwable instanceof Cache Exception log trace Replication exception throwable throw Cache Exception throwable else log unexpected Error Replicating throwable throw new Cache Exception throwable Override public Map Address Response invoke Remotely Collection Address recipients Replicable Command rpc Rpc Options options Completable Future Map Address Response future invoke Remotely Async recipients rpc options try return Completable Futures await future catch Interrupted Exception e Thread current Thread interrupt throw new Cache Exception Thread interrupted invoking e catch Execution Exception e Throwable cause e get Cause cause instanceof Cache Exception throw Cache Exception cause else throw new Cache Exception Unexpected exception replicating command cause Override public Map Address Response invoke Remotely Map Address Replicable Command rpcs Rpc Options options trace log tracef invoking options get Address rpcs options n use replication queue n want send command nodes configuration clustering cache Mode Clustered throw new Illegal State Exception Trying invoke remote command cache clustered Map Address Replicable Command replaced Commands null Map Entry Address Replicable Command entry rpcs entry Set Replicable Command rpc entry get Value Set topology id command case n yet set Topology Id rpc rpc instanceof Cache Rpc Command rpc cf build Single Rpc Command rpc ca n modify map iteration replaced Commands null replaced Commands new Hash Map replaced Commands put entry get Key rpc replaced Commands null rpcs put replaced Commands long start Time Nanos statistics Enabled start Time Nanos time Service time try Map Address Response result invoke Remotely rpcs options response Mode options time Unit Millis options timeout options response Filter options deliver Order configuration clustering cache Mode Distributed statistics Enabled replication Count increment Get trace log tracef Response rpcs result return result catch Interrupted Exception e Thread current Thread interrupt throw new Cache Exception Thread interrupted invoking e catch Cache Exception e log trace replication exception e statistics Enabled replication Failures increment Get throw e catch Throwable th log unexpected Error Replicating th statistics Enabled replication Failures increment Get throw new Cache Exception th finally statistics Enabled long time Taken time Service time Duration start Time Nanos Time Unit total Replication Time get Add time Taken private Cache Rpc Command Cache Rpc Command Replicable Command command return command instanceof Cache Rpc Command Cache Rpc Command command cf build Single Rpc Command command Override public void send Address destination Replicable Command command Deliver Order deliver Order trace log tracef invoking ordered get Address command destination deliver Order Set topology id command case n yet set Topology Id command Cache Rpc Command cache Rpc Cache Rpc Command command try send destination cache Rpc deliver Order catch Exception e error Replicating e Override public void send Many Collection Address destinations Replicable Command command Deliver Order deliver Order trace log tracef invoking list ordered get Address command destinations deliver Order Set topology id command case n yet set Topology Id command Cache Rpc Command cache Rpc Cache Rpc Command command try send Many destinations cache Rpc deliver Order catch Exception e error Replicating e private void error Replicating Exception e log unexpected Error Replicating e statistics Enabled replication Failures increment Get rethrow Cache Exception e Override public Transport get Transport return private void set Topology Id Replicable Command command command instanceof Topology Affected Command Topology Affected Command topology Affected Command Topology Affected Command command topology Affected Command get Topology Id int current Topology Id state Transfer Manager get Cache Topology get Topology Id trace log tracef Topology id missing command setting command current Topology Id topology Affected Command set Topology Id current Topology Id information Override Managed Operation description Resets statistics gathered component display Name Reset statistics public void reset Statistics replication Count set replication Failures set total Replication Time set Managed Attribute description Number successful replications display Name Number successful replications measurement Type Measurement Type display Type Display Type public long get Replication Count Statistics Enabled return return replication Count get Managed Attribute description Number failed replications display Name Number failed replications measurement Type Measurement Type display Type Display Type public long get Replication Failures Statistics Enabled return return replication Failures get Managed Attribute description Enables disables gathering statistics component display Name Statistics enabled data Type Data Type writable true public boolean Statistics Enabled return statistics Enabled Override public boolean get Statistics Enabled return Statistics Enabled deprecated already attribute n operation thing Override Deprecated Managed Operation display Name Enable disable statistics Deprecated use statistics Enabled attribute instead public void set Statistics Enabled Parameter name enabled description Whether statistics enabled disabled true false boolean statistics Enabled statistics Enabled statistics Enabled Managed Attribute description Successful replications ratio total replications display Name Successful replications ratio public String get Success Ratio replication Count get statistics Enabled return double ration calculate Success Ratio return Number Format get Instance format ration Managed Attribute description Successful replications ratio total replications numeric double format display Name Successful replication ratio units Units display Type Display Type public double get Success Ratio Floating Point replication Count get statistics Enabled return return calculate Success Ratio private double calculate Success Ratio double total Count replication Count get replication Failures get return replication Count get total Count Managed Attribute description average time spent transport layer milliseconds display Name Average time spent transport layer units Units display Type Display Type public long get Average Replication Time replication Count get return return total Replication Time get replication Count get Managed Attribute description Retrieves x site view display Name Cross site x site view data Type Data Type public String get Sites View Set String sites View get Sites View return sites View null sites View String mainly unit testing public void set Transport Transport Override public Address get Address return null get Address null Override public int get Topology Id Cache Topology cache Topology state Transfer Manager get Cache Topology return cache Topology null cache Topology get Topology Id Override public Rpc Options Builder get Rpc Options Builder Response Mode response Mode return get Rpc Options Builder response Mode response Mode Synchronous Deliver Order Deliver Order Override public Rpc Options Builder get Rpc Options Builder Response Mode response Mode Deliver Order deliver Order return new Rpc Options Builder configuration clustering remote Timeout Time Unit response Mode deliver Order Override public Rpc Options get Default Rpc Options boolean sync return get Default Rpc Options sync sync Deliver Order Deliver Order Override public Rpc Options get Default Rpc Options boolean sync Deliver Order deliver Order return get Rpc Options Builder sync Response Mode Response Mode deliver Order build Override public List Address get Members return state Transfer Manager get Cache Topology get Members
package org commons executors import java util concurrent Scheduled Executor Service import java util concurrent Scheduled Thread Pool Executor import java util concurrent Thread Factory author Galder Zamarre public enum Scheduled Thread Pool Executor Factory implements Thread Pool Executor Factory Scheduled Executor Service Override public Scheduled Executor Service create Executor Thread Factory factory Scheduled Thread Pool Executor result new Scheduled Thread Pool Executor factory result set Remove Cancel Policy true return result Override public void validate op public static Scheduled Thread Pool Executor Factory create return
package org client hotrod event import java lang reflect Method import java security Access Controller import java security Privileged Action import org client hotrod logging Log import org client hotrod logging Log Factory Security Actions org client hotrod event package move change class method visibility avoid called link java security Code Source thus granting privilege escalation external code author Galder Zamarre since final class Security Actions private static final Log log Log Factory get Log Security Actions class private Security Actions static void set Accessible final Method try System get Security Manager null Access Controller Privileged new Privileged Action Void Override public Void run set Accessible true return null else set Accessible true catch Exception e log unable Set Accesible e
package org stream impl termop import java util concurrent atomic Atomic Boolean import java util concurrent atomic Atomic Reference import java util function Function import java util function Supplier import java util stream Base Stream import java util stream Stream import org stream impl Terminal Operation import org stream impl intops Intermediate Operation import org util logging Log import org util logging Log Factory terminal based operation runs provided function evaluate operation segment lost evaluation function function results ignored subsequently retried new stable segments repeated either full stable run completed function lost segment states segments left param output type function param type stream entries param type stream public class Segment Retrying Operation extends Base Stream extends extends Base Terminal Operation implements Terminal Operation private static final Log log Log Factory get Log Segment Retrying Operation class private static final Base Stream Stream empty private final Function super extends function private transient Atomic Reference Base Stream stream Ref new Atomic Reference private transient Atomic Boolean continue Trying new Atomic Boolean true public Segment Retrying Operation Iterable Intermediate Operation intermediate Operations Supplier extends Stream supplier Function super extends function super intermediate Operations supplier function function Override public boolean lost Segment boolean stop Lost Base Stream old Stream stream Ref get continue Trying set stop Lost boolean affected old Stream null stream non null n empty means processing time segment lost tell one close old Stream fail operation completes concurrently affected stream Ref compare Set old Stream short circuit things like sending response waiting retrieval cache loader old Stream close else affected true else affected false return affected private inner Perform Operation Base Stream stream Intermediate Operation int Op intermediate Operations stream int Op perform stream return function apply stream Override public perform Operation boolean keep Trying true Base Stream stream value stream supplier get stream Ref set stream value inner Perform Operation stream log trace Completed operation trying see done stream Ref compare Set stream null keep Trying continue Trying get log tracef Operation done due try denial keep Trying return keep Trying value null public Function super extends get Function return function
package org transaction xa recovery import java io Exception import java io Object Input import java io Object Output import java util Arrays import java util Set import javax transaction xa Xid import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids import net jcip annotations Immutable xid implementation needed link javax transaction xa Xid link java io Serializable need serialize send network spec enforce anyway equals hashcode methods Xid providers expected able cope Xid class returned Resource methods author Mircea Markus jboss com since deprecated use link org commons tx Xid Impl instead Immutable Deprecated public class Serializable Xid implements Xid private final byte branch Qualifier private final byte global Transaction Id private final int format Id public Serializable Xid byte branch Qualifier byte global Transaction Id int formant Id branch Qualifier branch Qualifier global Transaction Id global Transaction Id format Id formant Id public Serializable Xid Xid xid xid get Branch Qualifier xid get Global Transaction Id xid get Format Id Override public byte get Branch Qualifier return branch Qualifier Override public byte get Global Transaction Id return global Transaction Id Override public int get Format Id return format Id Override public boolean equals Object return true null instanceof Xid return false Xid xid Xid format Id xid get Format Id return false Arrays equals branch Qualifier xid get Branch Qualifier return false Arrays equals global Transaction Id xid get Global Transaction Id return false return true Override public int hash Code int result branch Qualifier null Arrays hash Code branch Qualifier result result global Transaction Id null Arrays hash Code global Transaction Id result result format Id return result Override public String String taken com arjuna ats jta xa String Builder string Builder new String Builder string Builder append string Builder append format Id string Builder append string Builder append global Transaction Id length string Builder append string Builder append branch Qualifier length string Builder append byte Global Transaction Id global Transaction Id string Builder append Global Transaction Id string Builder append byte Branch Qualifier branch Qualifier string Builder append Branch Qualifier string Builder append return string Builder String public static class Xid Externalizer extends Abstract Externalizer Serializable Xid Override public void write Object Object Output output Serializable Xid object throws Exception output write Object object get Branch Qualifier output write Object object get Global Transaction Id output write Int object get Format Id Override public Serializable Xid read Object Object Input input throws Exception Class Found Exception byte bq byte input read Object byte gt Id byte input read Object int type input read Int return new Serializable Xid bq gt Id type Override public Set Class extends Serializable Xid get Type Classes return Util Class extends Serializable Xid Set Serializable Xid class Override public Integer get Id return Ids
package org configuration global import java util Map import org Version import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set import org commons marshall Advanced Externalizer import org commons marshall Marshaller import org jboss marshalling Class Resolver public class Serialization Configuration public static final Attribute Definition Marshaller Attribute Definition builder marshaller null Marshaller class immutable build public static final Attribute Definition Short Attribute Definition builder version Version get Marshall Version immutable build public static final Attribute Definition Class Resolver Attribute Definition builder class Resolver null Class Resolver class immutable build static Attribute Set attribute Definition Set return new Attribute Set Serialization Configuration class private final Map Integer Advanced Externalizer advanced Externalizers private final Class Resolver class Resolver private final Marshaller marshaller private final short version private final Attribute Set attributes Serialization Configuration Attribute Set attributes Map Integer Advanced Externalizer advanced Externalizers attributes attributes check Protection marshaller attributes attribute get version attributes attribute get class Resolver attributes attribute get advanced Externalizers advanced Externalizers public Marshaller marshaller return marshaller public short version return version public Map Integer Advanced Externalizer advanced Externalizers return advanced Externalizers public Class Resolver class Resolver return class Resolver public Attribute Set attributes return attributes Override public String String return Serialization Configuration advanced Externalizers advanced Externalizers attributes attributes Override public int hash Code final int prime int result result prime result advanced Externalizers null advanced Externalizers hash Code result prime result attributes null attributes hash Code return result Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Serialization Configuration Serialization Configuration obj advanced Externalizers null advanced Externalizers null return false else advanced Externalizers equals advanced Externalizers return false attributes null attributes null return false else attributes equals attributes return false return true
package org configuration global import static org configuration global Serialization Configuration import static org configuration global Serialization Configuration import static org configuration global Serialization Configuration import java util Hash Map import java util Map import org Version import org commons Cache Configuration Exception import org commons configuration Builder import org commons configuration attributes Attribute Set import org commons marshall Advanced Externalizer import org commons marshall Marshaller import org jboss marshalling Class Resolver Configures serialization marshalling settings public class Serialization Configuration Builder extends Abstract Global Configuration Builder implements Builder Serialization Configuration private final Attribute Set attributes private Map Integer Advanced Externalizer advanced Externalizers new Hash Map Serialization Configuration Builder Global Configuration Builder global Config super global Config attributes Serialization Configuration attribute Definition Set Set marshaller instance marshall unmarshall cache entries param marshaller public Serialization Configuration Builder marshaller Marshaller marshaller attributes attribute set marshaller return public Marshaller get Marshaller return attributes attribute get Largest allowable version use marshalling internal state Set lowest version cache instance cluster ensure compatibility communications However setting low mean lose benefit improvements newer versions marshaller param marshall Version public Serialization Configuration Builder version short marshall Version attributes attribute set marshall Version return Largest allowable version use marshalling internal state Set lowest version cache instance cluster ensure compatibility communications However setting low mean lose benefit improvements newer versions marshaller param marshall Version public Serialization Configuration Builder version String marshall Version version Version get Version Short marshall Version return Helper method allows quick registration link Advanced Externalizer implementation alongside corresponding identifier Remember identifier needs positive number including clash identifiers system param id param advanced Externalizer public Serialization Configuration Builder add Advanced Externalizer int id Advanced Externalizer advanced Externalizer Advanced Externalizer ext advanced Externalizers get id ext null throw new Cache Configuration Exception String format Duplicate externalizer id found Externalizer id shared another externalizer id advanced Externalizer get Class get Name ext get Class get Name advanced Externalizers put id advanced Externalizer return Helper method allows quick registration link Advanced Externalizer implementation alongside corresponding identifier Remember identifier needs positive number including clash identifiers system param advanced Externalizer public Serialization Configuration Builder add Advanced Externalizer Advanced Externalizer advanced Externalizer Integer id advanced Externalizer get Id id null throw new Cache Configuration Exception String format advanced externalizer identifier set externalizer advanced Externalizer get Class get Name add Advanced Externalizer id int Value advanced Externalizer return Helper method allows quick registration link Advanced Externalizer implementations param advanced Externalizers public Serialization Configuration Builder add Advanced Externalizer Advanced Externalizer advanced Externalizers Advanced Externalizer advanced Externalizer advanced Externalizers add Advanced Externalizer advanced Externalizer return Class resolver use unmarshalling objects param class Resolver public Serialization Configuration Builder class Resolver Class Resolver class Resolver attributes attribute set class Resolver return Override public void validate op validation required Override public Serialization Configuration create return new Serialization Configuration attributes protect advanced Externalizers Override public Serialization Configuration Builder read Serialization Configuration template attributes read template attributes advanced Externalizers template advanced Externalizers return Override public String String return Serialization Configuration Builder attributes attributes advanced Externalizers advanced Externalizers
package org commons marshall jboss import org commons marshall Serialize Function import org commons marshall Serialize import org jboss marshalling Annotation Class Externalizer Factory import org jboss marshalling Class Externalizer Factory import org jboss marshalling Externalizer Boss Marshalling plugin class link Class Externalizer Factory allows annotations used instead Boss Marshalling ones order discover classes serializable externalizers author Galder Zamarre since public class Serialize Ext Factory implements Class Externalizer Factory final Class Externalizer Factory jbmar Ext Factory new Annotation Class Externalizer Factory Override public Externalizer get Externalizer Class type Serialize serial Ann type get Annotation Serialize class Serialize Function lambda Serial Ann type get Annotation Serialize Function class serial Ann null lambda Serial Ann null Check Boss Marshaller Externalize return jbmar Ext Factory get Externalizer type else try org commons marshall Externalizer ext serial Ann null serial Ann value new Instance lambda Serial Ann value new Instance return new Boss Externalizer Adapter ext catch Exception e throw new Illegal Argument Exception String format instantiate externalizer type e
package org commons util import java util Collection import java util Iterator import java util Linked Hash Map import java util Map import java util Service Configuration Error import java util Service Loader import org commons logging Log import org commons logging Log Factory import org osgi framework Bundle Context import org osgi framework Framework Util import org osgi util tracker Service Tracker Service Finder link java util Service Loader replacement understands multiple classpaths author Tristan Tarrant author Brett Meyer since public class Service Finder private static final Log Log Factory get Log Service Finder class public static Collection load Class contract Class Loader loaders Map String services new Linked Hash Map loaders length try Service Loader loaded Services Service Loader load contract add Services loaded Services services catch Exception e Ignore else Class Loader loader loaders loader null continue try Service Loader loaded Services Service Loader load contract loader add Services loaded Services services catch Exception e Ignore add Osgi Services contract services services Empty debugf service impls found contract get Simple Name return services values private static void add Services Service Loader loaded Services Map String services Iterator loaded Services iterator Next try service next services put Absent service get Class get Name service null debugf Loading service impl service get Class get Simple Name else debugf Ignoring already loaded service service get Class get Simple Name catch Service Configuration Error e debugf Skipping service impl e private static void add Osgi Services Class contract Map String services Util Gi Context return final Bundle Context bundle Context Framework Util get Bundle Service Finder class get Bundle Context final Service Tracker service Tracker new Service Tracker bundle Context contract get Name null service Tracker open try final Object osgi Services service Tracker get Services osgi Services null Object osgi Service osgi Services services put Absent osgi Service get Class get Name osgi Service null debugf Loading service impl osgi Service get Class get Simple Name else debugf Ignoring already loaded service osgi Service get Class get Simple Name catch Exception e ignore
package org context import java util Collections import java util Map import java util Set import org container entries Cache Entry import org remoting transport Address author Mircea Markus author Sanne Grinovero deprecated Since class going moved internal package Deprecated public final class Single Key Non Tx Invocation Context implements Invocation Context possible key wrapped locked e g get takes place private boolean Locked private Object key private Cache Entry cache Entry move Origin address Invocation Context Factory Origin Local true addresses Memory allocation cost verify worth looking object alignment would need different implementation pointing null would n help private final Address origin private Object lock Owner public Single Key Non Tx Invocation Context final Address origin origin origin Override public boolean Origin Local return origin null Override public boolean Tx Scope return false Override public Object get Lock Owner return lock Owner Override public void set Lock Owner Object lock Owner lock Owner lock Owner Override public Invocation Context clone try return Invocation Context super clone catch Clone Supported Exception e throw new Illegal State Exception Impossible e Override public Set Object get Locked Keys return Locked Collections singleton key Collections empty Set Override public void clear Locked Keys Locked false Dan n necessary n clear looked keys retrying non tx command topology change cache Entry null Override public void add Locked Key final Object key key null Set key key key else Key Equals key throw illegal State Exception Locked true private Illegal State Exception illegal State Exception return new Illegal State Exception single key invocation context using multiple keys n possible Override public Cache Entry lookup Entry final Object key key null Key Equals key return cache Entry return null public boolean Key Equals Object key return key key key equals key Override public Map Object Cache Entry get Looked Entries return cache Entry null Collections empty Map Collections singleton Map key cache Entry Override public void put Looked Entry final Object key final Cache Entry e key null Set key key key else Key Equals key throw illegal State Exception cache Entry e Override public void remove Looked Entry final Object key key null Key Equals key cache Entry null public Object get Key return key public Cache Entry get Cache Entry return cache Entry Override public Address get Origin return origin Override public Class Loader get Class Loader return null Override public void set Class Loader Class Loader class Loader op Override public boolean Locked Key final Object key return Locked Key Equals key Override public boolean Entry Removed Context final Object key Cache Entry ce lookup Entry key return ce null ce Removed ce Changed public void reset State key null cache Entry null Locked false Override public String String final String Builder sb new String Builder Single Key Non Tx Invocation Context sb append Locked append Locked sb append key append key sb append cache Entry append cache Entry sb append origin append origin sb append lock Owner append lock Owner sb append return sb String
package org configuration cache import java util Array List import java util Collections import java util Hash Set import java util List import java util Set import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Initializer import org commons configuration attributes Attribute Set author Mircea Markus jboss com since public class Sites Configuration public static final Attribute Definition Boolean Attribute Definition builder disable false immutable build public static final Attribute Definition Set String Attribute Definition builder backup sites use null Class Set String Class Set class initializer new Attribute Initializer Set String Override public Set String initialize return new Hash Set immutable build static final Attribute Set attribute Definition Set return new Attribute Set Sites Configuration class private final Backup Configuration backup private final List Backup Configuration Backups private final Attribute Boolean disable Backups private final Attribute Set String Use Backup Sites private final Attribute Set attributes public Sites Configuration Attribute Set attributes List Backup Configuration Backups Backup Configuration backup attributes attributes check Protection Backups Collections unmodifiable List Backups disable Backups attributes attribute Use Backup Sites attributes attribute backup backup Returns true cache wo n backup data remotely would still accept sites backing data site public boolean disable Backups return disable Backups get Returns list sites cache might back data list actual sites defined link Use Backup Sites public List Backup Configuration Backups return Backups Returns list link Backup Configuration link org configuration cache Backup Configuration enabled true public List Backup Configuration enabled Backups List Backup Configuration result new Array List Backup Configuration bc Backups bc enabled result add bc return result return information caches backup data cache public Backup Configuration backup return backup public Backup Failure Policy get Failure Policy String site Name Backup Configuration bc Backups bc site equals site Name return bc backup Failure Policy throw new Illegal State Exception must site configured site Name public boolean Use Backup String site Name Backup Configuration bc Backups bc site equals site Name return bc enabled return false public boolean Enabled Backups Backup Configuration bc Backups bc enabled return true return false public Set String Use Backup Sites return Use Backup Sites get public Attribute Set attributes return attributes Override public int hash Code final int prime int result result prime result attributes null attributes hash Code result prime result backup null backup hash Code return result Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Sites Configuration Sites Configuration obj attributes null attributes null return false else attributes equals attributes return false backup null backup null return false else backup equals backup return false return true Override public String String return Sites Configuration backup backup Backups Backups attributes attributes
package org statetransfer import static org context Flag import static org context Flag import static org context Flag import static org context Flag import static org context Flag import static org context Flag import static org context Flag import static org context Flag import static org factories Known Component Names import static org persistence manager Persistence Manager Access Mode import java util Array List import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import java util concurrent Completable Future import java util concurrent Count Latch import java util concurrent Executor Service import java util concurrent Time Unit import java util concurrent atomic Atomic Boolean import java util concurrent atomic Atomic Integer import java util stream Collectors import java util stream Int Stream import javax transaction System Exception import javax transaction Transaction Manager import org Cache import org commands Commands Factory import org commands write Invalidate Command import org commands write Put Key Value Command import org commons Cache Exception import org commons util Enum Util import org commons util Small Int Set import org commons util concurrent Concurrent Hash Set import org configuration cache Cache Mode import org configuration cache Configuration import org configuration cache Partition Handling Configuration import org conflict impl Internal Conflict Manager import org container Data Container import org container entries Internal Cache Entry import org context Invocation Context import org context Invocation Context Factory import org context impl Tx Invocation Context import org distexec Distributed Callable import org distribution Distribution Info import org distribution Distribution Manager import org distribution Triangle Order Manager import org distribution ch Consistent Hash import org distribution ch Key Partitioner import org executors Limited Executor import org factories Known Component Names import org factories annotations Component Name import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org filter Key Filter import org interceptors Async Interceptor Chain import org notifications cachelistener Cache Notifier import org partitionhandling Partition Handling import org persistence manager Persistence Manager import org remoting responses Cache Found Response import org remoting responses Response import org remoting responses Successful Response import org remoting rpc Response Mode import org remoting rpc Rpc Manager import org remoting rpc Rpc Options import org remoting transport Address import org remoting transport jgroups Suspect Exception import org topology Cache Topology import org topology Local Topology Manager import org transaction impl Remote Transaction import org transaction impl Transaction Table import org transaction totalorder Total Order Latch import org transaction totalorder Total Order Manager import org transaction xa Cache Transaction import org transaction xa Global Transaction import org util concurrent Blocking Task Aware Executor Service import org util concurrent Command Ack Collector import org util concurrent Completable Futures import org util concurrent Timeout Exception import org util logging Log import org util logging Log Factory import net jcip annotations Guarded link State Consumer implementation author anistor redhat com since public class State Consumer Impl implements State Consumer protected static final Log log Log Factory get Log State Consumer Impl class protected static final boolean trace log Trace Enabled protected static final int protected static final long Enum Util bit Set protected Cache cache protected State Transfer Manager state Transfer Manager protected Local Topology Manager local Topology Manager protected String cache Name protected Configuration configuration protected Rpc Manager rpc Manager protected Transaction Manager transaction Manager optional protected Commands Factory commands Factory protected Transaction Table transaction Table optional protected Data Container Object Object data Container protected Persistence Manager persistence Manager protected Async Interceptor Chain interceptor Chain protected Invocation Context Factory icf protected State Transfer Lock state Transfer Lock protected Cache Notifier cache Notifier protected Total Order Manager total Order Manager protected Blocking Task Aware Executor Service remote Commands Executor protected long timeout protected boolean Fetch Enabled protected boolean Transactional protected boolean Invalidation Mode protected boolean Total Order protected volatile Key Invalidation Listener key Invalidation Listener test purpose protected Commit Manager commit Manager protected Executor Service state Transfer Executor protected Command Ack Collector command Ack Collector protected Triangle Order Manager triangle Order Manager protected Distribution Manager distribution Manager protected Key Partitioner key Partitioner private Internal Conflict Manager conflict Manager protected volatile Cache Topology cache Topology Indicates state transfer progress set new topology id Topology Update Rebalance true called changed back topology update null pending received protected final Atomic Integer state Transfer Topology Id new Atomic Integer Indicates rebalance progress local node yet received new segments yet set true rebalance starts becomes inbound transfers completed state Transfer Topology Id set back protected final Atomic Boolean waiting State new Atomic Boolean false protected Completable Future Void state Transfer Future Completable Futures completed Null protected final Object transfer Maps Lock new Object map keeps track current inbound state transfers source address could multiple transfers flowing source different segments values lists works tandem transfers Segment always need kept sync updates need atomic Guarded transfer Maps Lock private final Map Address List Inbound Transfer Task transfers Source new Hash Map map keeps track current inbound state transfers segment id one transfers per segment works tandem transfers Source always need kept sync updates need atomic Guarded transfer Maps Lock protected final Map Integer List Inbound Transfer Task transfers Segment new Hash Map Push Cs background thread protected Limited Executor state Request Executor private volatile boolean owns Data false protected Rpc Options synchronous Rpc Options protected Rpc Options synchronous Ignore Leavers Rpc Options public State Consumer Impl Stops applying incoming state Also stops tracking updated keys called end state transfer Clear Command committed state transfer param topology Id Override public void stop Applying State int topology Id trace log tracef Stop keeping track changed keys state transfer topology topology Id commit Manager stop Track Inject public void init Cache cache Component Name Executor Service state Transfer Executor State Transfer Manager state Transfer Manager Local Topology Manager local Topology Manager Async Interceptor Chain interceptor Chain Invocation Context Factory icf Configuration configuration Rpc Manager rpc Manager Transaction Manager transaction Manager Commands Factory commands Factory Persistence Manager persistence Manager Data Container Object Object data Container Transaction Table transaction Table State Transfer Lock state Transfer Lock Cache Notifier cache Notifier Total Order Manager total Order Manager Component Name Known Component Names Blocking Task Aware Executor Service remote Commands Executor Commit Manager commit Manager Command Ack Collector command Ack Collector Triangle Order Manager triangle Order Manager Distribution Manager distribution Manager Key Partitioner key Partitioner Internal Conflict Manager conflict Manager cache cache cache Name cache get Name state Transfer Executor state Transfer Executor state Transfer Manager state Transfer Manager local Topology Manager local Topology Manager interceptor Chain interceptor Chain icf icf configuration configuration rpc Manager rpc Manager transaction Manager transaction Manager commands Factory commands Factory persistence Manager persistence Manager data Container data Container transaction Table transaction Table state Transfer Lock state Transfer Lock cache Notifier cache Notifier total Order Manager total Order Manager remote Commands Executor remote Commands Executor commit Manager commit Manager command Ack Collector command Ack Collector triangle Order Manager triangle Order Manager distribution Manager distribution Manager key Partitioner key Partitioner conflict Manager conflict Manager Invalidation Mode configuration clustering cache Mode Invalidation Transactional configuration transaction transaction Mode Transactional Total Order configuration transaction transaction Protocol Total Order timeout configuration clustering state Transfer timeout public boolean Active Transfers synchronized transfer Maps Lock return transfers Source Empty Override public boolean State Transfer Progress return state Transfer Topology Id get Override public boolean State Transfer Progress Key Object key Invalidation Mode invalidation mode much relevance key actually transferred right false response mean usual remote lookup write operation performed null assumed invalidation mode user must expect data disappear cache time null previous value cause trouble return false Distribution Info distribution Info distribution Manager get Cache Topology get Distribution key return distribution Info Write Owner distribution Info Read Owner Override public boolean owns Data return owns Data Override public Completable Future Void Topology Update final Cache Topology cache Topology final boolean Rebalance final boolean Member cache Topology get Members contains rpc Manager get Address final boolean start Conflict Resolution Rebalance cache Topology get Phase Cache Topology Phase trace log tracef Received new topology cache Rebalance b Member b topology cache Name Rebalance Member cache Topology owns Data Member owns Data true else owns Data Member happen merge local node minority partition owns Data false member leaves crashes immediately rebalance started new command may executed command start rebalance boolean start Rebalance Rebalance Rebalance start Conflict Resolution cache Topology get Pending null cache Topology get Pending null trace log tracef Forcing start Rebalance true start Rebalance true start Rebalance update rebalance topology id starting rebalance going ignore state response smaller topology id state Transfer Topology Id compare Set cache Topology get Topology Id conflict Manager cancel Version Requests cache Notifier notify Data Rehashed cache Topology get Current cache Topology get Pending cache Topology get Union cache Topology get Topology Id true start Conflict Resolution stops state applied prior rebalance also prevents tracking stopped state Transfer Topology Id set await Total Order Transactions cache Topology start Rebalance Make sure n send command added transfer tasks even tasks removed added waiting State set false state Transfer Future new Completable Future final Consistent Hash new Write Ch cache Topology get Write Consistent Hash final Cache Topology previous Cache Topology cache Topology final Consistent Hash previous Read Ch previous Cache Topology null previous Cache Topology get Current null final Consistent Hash previous Write Ch previous Cache Topology null previous Cache Topology get Write Consistent Hash null Ensures writes data container use right consistent hash need try finally block since assignment state Transfer Lock acquire Exclusive Topology Lock Topology Installed cache Topology get Topology Id start Rebalance previous Write Ch new Write Ch cache Topology cache Topology triangle Order Manager update Cache Topology cache Topology distribution Manager null distribution Manager set Cache Topology cache Topology conflict Manager Topology Update distribution Manager get Cache Topology need track changes user puts conflict resolution prioritised Merge Policy updates Tracking stopped subsequent rebalance completes start Rebalance start Conflict Resolution trace log tracef Start keeping track keys rebalance commit Manager stop Track commit Manager start Track state Transfer Lock release Exclusive Topology Lock state Transfer Lock notify Topology Installed cache Topology get Topology Id remote Commands Executor check Ready Tasks try fetch transactions data segments owners enabled start Conflict Resolution Transactional Fetch Enabled Set Integer added Segments removed Segments previous Write Ch null segments assigned initial means first member first member add segments via rebalance removed Segments Collections empty Set added Segments Collections empty Set Perhaps member listener installation happen cache members configuration clustering cache Mode Distributed configuration clustering cache Mode Scattered Collection Distributed Callable callables get Cluster Listeners cache Topology Distributed Callable callable callables callable set Environment cache null try callable call catch Exception e log cluster Listener Installation Failure e trace log tracef cache added segments cache Name added Segments else Set Integer previous Segments get Owned Segments previous Write Ch Set Integer new Segments get Owned Segments new Write Ch new Segments size new Write Ch get Num Segments Optimization replicated caches removed Segments new Small Int Set else removed Segments new Small Int Set previous Segments removed Segments remove new Segments rebalance need request segments new added Segments new Small Int Set new Segments added Segments remove previous Segments trace log tracef cache new segments old segments cache Name new Segments previous Segments log tracef cache added segments removed segments cache Name added Segments removed Segments remove inbound transfers segments longer cancel Transfers removed Segments Scattered cache gets added segments first want keep start Rebalance added Segments Empty configuration clustering cache Mode Scattered last owner segment leaves cluster new set owners assigned new owners try retrieve segment happens rebalance might already sent rebalance confirmation coordinator wo n wait us retrieve segments anyway log debugf requesting segments last owner left cluster added Segments added Segments clear check existing transfers restarted different source initial source longer member restart Broken Transfers cache Topology added Segments handle Segments start Rebalance added Segments removed Segments int state Transfer Topology Id state Transfer Topology Id get trace log tracef Topology update processed state Transfer Topology Id start Rebalance pending Object state Transfer Topology Id start Rebalance cache Topology get Pending state Transfer Topology Id start Rebalance cache Topology get Phase Rebalance received topology update without pending signalling end rebalance boolean changed state Transfer Topology Id compare Set state Transfer Topology Id changed stop Applying State state Transfer Topology Id coordinator changed might get two concurrent topology updates want notify Data Rehashed listeners Consistent Hash next Consistent Hash cache Topology get Pending next Consistent Hash null next Consistent Hash cache Topology get Current cache Notifier notify Data Rehashed previous Read Ch next Consistent Hash previous Write Ch cache Topology get Topology Id false trace log tracef Unlock State Transfer Progress topology cache Topology get Topology Id Total Order total Order Manager notify State Transfer End finally state Transfer Lock notify Transaction Data Received cache Topology get Topology Id remote Commands Executor check Ready Tasks set flag transfers added transfers Source map state Transfer Topology Id get Member waiting State set true notify End State Transfer Needed Remove transactions whose originators left cache Need applied transactions nodes notify Transaction Data Received otherwise Rollback Commands would block try transaction Table null transaction Table cleanup Leaver Transactions rpc Manager get Transport get Members catch Exception e fail state transfer cleanup fails See details log transaction Cleanup Error e command Ack Collector Members Change new Write Ch get Members rebalance completed notify End State Transfer Needed confirmed switch cache Topology get Phase case case state Transfer Future complete null Partition Handling Configuration ph Config configuration clustering partition Handling boolean Member previous Write Ch null previous Write Ch get Members contains rpc Manager get Address boolean delete Past Member Vals Member ph Config Split Partition Handling ph Config merge Policy null data segments removed data container cache store need discard data segments n previously owned lose membership e g merge local partition degraded mode partition available enabled exception merge policy enabled case must perform removal node member new topology otherwise entries updated conflict resolution removed resulting subset owners hosting resolved entry Set Integer removed Segments Member delete Past Member Vals cache Topology get Phase Cache Topology Phase removed Segments Int Stream range new Write Ch get Num Segments boxed collect Collectors Set Set Integer new Segments get Owned Segments new Write Ch removed Segments remove new Segments try remove Stale Data removed Segments catch Interrupted Exception e Thread current Thread interrupt throw new Cache Exception e conflict Manager restart Version Requests return state Transfer Future protected void Topology Installed int topology Id boolean start Rebalance Consistent Hash previous Write Ch Consistent Hash new Write Ch protected void handle Segments boolean start Rebalance Set Integer added Segments Set Integer removed Segments added Segments Empty add transfers new restarted segments add Transfers added Segments private void await Total Order Transactions Cache Topology cache Topology boolean Rebalance total order wait remote transactions proceeding Total Order trace log trace State Transfer Total Order cache Waiting remote transactions finish try Total Order Latch block total Order Manager notify State Transfer Start cache Topology get Topology Id Rebalance block await Un Block catch Interrupted Exception e interrupted Thread current Thread interrupt throw new Cache Exception e trace log trace State Transfer Total Order cache remote transactions finished Moving protected void notify End State Transfer Needed waiting State get Active Transfers return waiting State compare Set true false int topology Id state Transfer Topology Id get log debugf Finished receiving segments cache topology cache Name topology Id stop Applying State topology Id state Transfer Future complete null protected Set Integer get Owned Segments Consistent Hash consistent Hash Address address rpc Manager get Address return consistent Hash get Members contains address consistent Hash get Segments Owner address Collections empty Set Override public void apply State final Address sender int topology Id boolean push Transfer Collection State Chunk state Chunks Consistent Hash w Ch cache Topology get Write Consistent Hash Ignore responses received longer member w Ch get Members contains rpc Manager get Address trace log tracef Ignoring received state longer member cache cache Name return Ignore segments requested previous rebalance happen coordinator leaves new coordinator cancels rebalance progress int rebalance Topology Id state Transfer Topology Id get rebalance Topology Id push Transfer log debugf Discarding state response topology id cache n state transfer progress topology Id cache Name return topology Id rebalance Topology Id log debugf Discarding state response old topology id cache state transfer request topology b topology Id cache Name waiting State return trace log tracef applying received state data container cache keys cache Name data Container size Including Expired final Count Latch count Latch new Count Latch state Chunks size push Transfer push transfer specific scattered cache easiest way integrate State Chunk state Chunk state Chunks state Chunk get Cache Entries null state Transfer Executor submit Apply State sender state Chunk get Segment Id state Chunk get Cache Entries count Latch count else Set Integer Segments w Ch get Segments Owner rpc Manager get Address State Chunk state Chunk state Chunks state Transfer Executor submit try apply Chunk sender Segments state Chunk catch Throwable e log error Failed applying state e count Latch count log tracef Latch count Latch get Count try boolean await count Latch await timeout Time Unit await throw new Timeout Exception Timed applying state catch Interrupted Exception e Thread current Thread interrupt throw new Cache Exception e trace log tracef applying received state data container cache keys cache Name data Container size Including Expired synchronized transfer Maps Lock log tracef Segments received yet cache cache Name transfers Source private void apply Chunk Address sender Set Integer Segments State Chunk state Chunk Segments contains state Chunk get Segment Id log warnf Discarding received cache entries segment cache belong node state Chunk get Segment Id cache Name return Notify inbound task chunk cache entries received Inbound Transfer Task inbound Transfer null synchronized transfer Maps Lock List Inbound Transfer Task inbound Transfers transfers Segment get state Chunk get Segment Id inbound Transfers null inbound Transfer inbound Transfers stream filter task task get Source equals sender find First Else null inbound Transfer null state Chunk get Cache Entries null Apply State sender state Chunk get Segment Id state Chunk get Cache Entries inbound Transfer State Received state Chunk get Segment Id state Chunk Last Chunk else cache get Status allow Invocations log ignoring Unsolicited State sender state Chunk get Segment Id cache Name private void Apply State Address sender int segment Id Collection Internal Cache Entry cache Entries trace log tracef Applying new state chunk segment cache node received cache entries segment Id cache Name sender cache Entries size avoids handling State Transfer Interceptor potential locks State Transfer Lock boolean transactional transaction Manager null Internal Cache Entry e cache Entries try Invocation Context ctx transactional transaction Manager begin ctx icf create Invocation Context transaction Manager get Transaction true Tx Invocation Context ctx get Cache Transaction set State Transfer Flag else non tx cache ctx icf create Single Key Non Tx Invocation Context Put Key Value Command put commands Factory build Put Key Value Command e get Key e get Value e get Metadata ctx set Lock Owner put get Key Lock Owner interceptor Chain invoke ctx put transaction Manager null transaction Manager commit catch Exception ex cache get Status allow Invocations log debugf Cache shutting stopping state transfer cache Name break else log problem Applying State Key ex get Message e get Key ex finally try transactional transaction Manager get Transaction null transaction Manager rollback catch System Exception e Ignore trace log tracef Finished applying chunk segment cache segment Id cache Name private void apply Transactions Address sender Collection Transaction Info transactions int topology Id log debugf Applying transactions cache transferred node transactions size cache Name sender Transactional Transaction Info transaction Info transactions Global Transaction gtx transaction Info get Global Transaction rpc Manager get Address equals gtx get Address continue transaction originated node happen partition handling Mark global transaction remote used logging hash Code equals ignore gtx set Remote true Cache Transaction tx transaction Table get Local Transaction gtx tx null tx transaction Table get Remote Transaction gtx tx null try tx transaction Table get Create Remote Transaction gtx transaction Info get Modifications Force node replay given transaction data making think behind Remote Transaction tx set Looked Entries Topology topology Id catch Throwable trace log tracef Failed create remote transaction gtx tx null transaction Info get Locked Keys tx add Backup Lock Key Must run Persistence Manager Start priority public void start Cache Mode mode configuration clustering cache Mode Fetch Enabled mode needs State Transfer configuration clustering state Transfer fetch Memory State configuration persistence fetch Persistent State rpc options changes runtime use always instance synchronous Rpc Options rpc Manager get Rpc Options Builder Response Mode timeout timeout Time Unit build synchronous Ignore Leavers Rpc Options rpc Manager get Rpc Options Builder Response Mode timeout timeout Time Unit build state Request Executor new Limited Executor State Request cache Name state Transfer Executor Stop priority Override public void stop trace log tracef Shutting State Consumer cache node cache Name rpc Manager get Address try synchronized transfer Maps Lock cancel inbound transfers state Request Executor cancel Queued Tasks make copy cancel might remove transfers Collection List Inbound Transfer Task transfers new Array List transfers Source values List Inbound Transfer Task inbound Transfers transfers inbound Transfers Inbound Transfer Task cancel transfers Source clear transfers Segment clear catch Throwable log errorf Failed stop State Consumer cache node cache Name rpc Manager get Address Override public Cache Topology get Cache Topology return cache Topology public void set Key Invalidation Listener Key Invalidation Listener key Invalidation Listener key Invalidation Listener key Invalidation Listener used scattered cache private void add Transfers Set Integer segments log debugf Adding inbound state transfer segments segments set nodes reported errors fetching data retried topology Set Address excluded Sources new Hash Set sources segments going get source Map Address Set Integer sources new Hash Map Transactional Total Order request Transactions segments sources excluded Sources Fetch Enabled request Segments segments sources excluded Sources trace log tracef Finished adding inbound state transfer segments segments cache Name private void find Sources Set Integer segments Map Address Set Integer sources Set Address excluded Sources cache get Status Terminated return Small Int Set segments Without Source new Small Int Set configuration clustering hash num Segments Integer segment Id segments Address source find Source segment Id excluded Sources ignore segments owners pull data segments considered empty lost require state transfer source null Set Integer segments Source sources compute Absent source k new Small Int Set segments Source add segment Id else segments Without Source set segment Id segments Without Source Empty log Live Owners Found Segments segments Without Source cache Name excluded Sources private Address find Source int segment Id Set Address excluded Sources List Address owners cache Topology get Read Consistent Hash locate Owners Segment segment Id owners contains rpc Manager get Address prefer transactions sourced primary owners Needed pessimistic mode originator primary owner key lock command replicated backup owners See Pessimistic Distribution Interceptor acquire Remote Needed Address owners equals rpc Manager get Address excluded Sources contains return return null private void request Transactions Set Integer segments Map Address Set Integer sources Set Address excluded Sources find Sources segments sources excluded Sources boolean seen Failures false true Small Int Set failed Segments new Small Int Set int topology Id cache Topology get Topology Id Map Entry Address Set Integer source Entry sources entry Set Address source source Entry get Key Set Integer segments Source source Entry get Value boolean failed false boolean exclude false try Response response get Transactions source segments Source topology Id response instanceof Successful Response List Transaction Info transactions List Transaction Info Successful Response response get Response Value apply Transactions source transactions topology Id else response instanceof Cache Found Response log debugf Cache stopped node sending transaction information cache Name source failed true exclude true else log unsuccessful Response Retrieving Transactions Segments source response failed true catch Suspect Exception e log debugf Node left cluster sending transaction information source failed true exclude true catch Exception e cache get Status Terminated log debugf Cache stopped requesting transactions cache Name sources clear return else log failed Retrieve Transactions Segments cache Name source segments e primary owner still cluster ca n exclude see failed true requesting transactions failed need retry failed failed Segments add segments Source primary owner longer running retry backup owner exclude excluded Sources add source failed Segments Empty break look sources failed segments seen Failures true sources clear find Sources failed Segments sources excluded Sources seen Failures start fresh next step starts fetching segments sources clear private Collection Distributed Callable get Cluster Listeners Cache Topology topology Address source topology get Members n send source equals rpc Manager get Address trace log tracef Requesting cluster listeners cache node cache Name source get cluster listeners try State Request Command cmd commands Factory build State Request Command State Request Command Type rpc Manager get Address topology get Topology Id null Map Address Response responses rpc Manager invoke Remotely Collections singleton source cmd synchronous Ignore Leavers Rpc Options Response response responses get source response instanceof Successful Response return Collection Distributed Callable Successful Response response get Response Value else log unsuccessful Response Cluster Listeners source response catch Cache Exception e log exception Cluster Listener Retrieval source e trace log trace Unable acquire cluster listeners members assuming none present return Collections empty Set private Response get Transactions Address source Set Integer segments int topology Id trace log tracef Requesting transactions node segments source segments get transactions locks State Request Command cmd commands Factory build State Request Command State Request Command Type rpc Manager get Address topology Id segments Map Address Response responses rpc Manager invoke Remotely Collections singleton source cmd synchronous Rpc Options return responses get source used scattered cache private void request Segments Set Integer segments Map Address Set Integer sources Set Address excluded Sources sources Empty find Sources segments sources excluded Sources Map Entry Address Set Integer e sources entry Set add Transfer e get Key e get Value Cancel transfers segments longer param removed Segments segments cancelled protected void cancel Transfers Set Integer removed Segments synchronized transfer Maps Lock List Integer segments Cancel new Array List removed Segments segments Cancel Empty int segment Id segments Cancel remove List Inbound Transfer Task inbound Transfers transfers Segment get segment Id inbound Transfers null need check transfer already completed Inbound Transfer Task inbound Transfer inbound Transfers Set Integer cancelled Segments new Small Int Set removed Segments cancelled Segments retain inbound Transfer get Segments segments Cancel remove cancelled Segments transfers Segment key Set remove cancelled Segments also remove transfers Source entire task gets cancelled inbound Transfer cancel Segments cancelled Segments inbound Transfer Cancelled remove Transfer inbound Transfer protected void remove Stale Data final Set Integer removed Segments throws Interrupted Exception log debugf Removing longer owned entries cache cache Name key Invalidation Listener null key Invalidation Listener Invalidation removed Segments Collections empty Set removed Segments Empty return Keys used need removed data container cache stores final Concurrent Hash Set Object keys Remove new Concurrent Hash Set data Container execute Task Key Filter ice Object key ice get Key int key Segment get Segment key removed Segments contains key Segment keys Remove add key gather keys cache store belong segments removed moved removed Segments Empty try Key Filter filter key data Container contains Key key return false int key Segment get Segment key return removed Segments contains key Segment persistence Manager process Stores filter marshalled Entry task Context keys Remove add marshalled Entry get Key false false catch Cache Exception e log failed Loading Keys Cache Store e keys Remove Empty try Invalidate Command invalidate Cmd commands Factory build Invalidate Command Enum Util bit Set keys Remove Array Invocation Context ctx icf create Non Tx Invocation Context ctx set Lock Owner invalidate Cmd get Key Lock Owner interceptor Chain invoke ctx invalidate Cmd trace log tracef Removed keys data container keys keys Remove size data Container size Including Expired catch Cache Exception e log failed Invalidate Keys e Check existing transfers restarted different source initial source longer member private void restart Broken Transfers Cache Topology cache Topology Set Integer added Segments Set Address members new Hash Set cache Topology get Read Consistent Hash get Members synchronized transfer Maps Lock Iterator Map Entry Address List Inbound Transfer Task transfers Source entry Set iterator Next Map Entry Address List Inbound Transfer Task entry next Address source entry get Key members contains source trace log tracef Removing inbound transfers source cache source cache Name List Inbound Transfer Task inbound Transfers entry get Value remove Inbound Transfer Task inbound Transfer inbound Transfers segments restarted still new write trace log tracef Removing inbound transfers node segments source inbound Transfer get Segments inbound Transfer cancel transfers Segment key Set remove inbound Transfer get Segments added Segments add inbound Transfer get Unfinished Segments exclude already progress valid source added Segments remove transfers Segment key Set private int get Segment Object key use version routing table involved computing segment return key Partitioner get Segment key used scattered cache private Inbound Transfer Task add Transfer Address source Set Integer segments Source final Inbound Transfer Task inbound Transfer synchronized transfer Maps Lock trace log tracef Adding transfer segments source segments Source segments Source remove transfers Segment key Set already progress segments excluded segments Source Empty trace log tracef segments already progress skipping return null inbound Transfer new Inbound Transfer Task segments Source source cache Topology get Topology Id rpc Manager commands Factory timeout cache Name true add Transfer inbound Transfer segments Source state Request Executor execute Async Completable Future Void transfer Started inbound Transfer request Segments trace log tracef Waiting inbound transfer finish inbound Transfer return transfer Started Complete Void throwable Task Completion inbound Transfer return inbound Transfer Guarded transfer Maps Lock protected void add Transfer Inbound Transfer Task inbound Transfer Set Integer segments int segment Id segments transfers Segment compute Absent segment Id new Array List add inbound Transfer transfers Source compute Absent inbound Transfer get Source new Array List add inbound Transfer protected boolean remove Transfer Inbound Transfer Task inbound Transfer boolean found false synchronized transfer Maps Lock trace log tracef Removing inbound transfers node segments inbound Transfer get Segments inbound Transfer get Source cache Name List Inbound Transfer Task transfers transfers Source get inbound Transfer get Source transfers null found transfers remove inbound Transfer transfers Empty transfers Source remove inbound Transfer get Source int segment inbound Transfer get Segments transfers transfers Segment get segment transfers null transfers remove inbound Transfer transfers Empty transfers Segment remove segment return found protected void Task Completion final Inbound Transfer Task inbound Transfer trace log tracef Inbound transfer finished inbound Transfer inbound Transfer Completed Successfully remove Transfer inbound Transfer notify End State Transfer Needed public interface Key Invalidation Listener void Invalidation Set Integer removed Segments Set Integer stale Segments
package org statetransfer import static org factories Known Component Names import java util Array List import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import java util concurrent Completable Future import java util concurrent Executor Service import java util concurrent Time Unit import java util concurrent Timeout Exception import org Cache import org commands Commands Factory import org commands write Write Command import org configuration cache Configuration import org container Data Container import org container Internal Entry Factory import org distexec Distributed Callable import org distribution ch Consistent Hash import org distribution ch Key Partitioner import org factories annotations Component Name import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org notifications Listener import org notifications cachelistener cluster Cluster Cache Notifier import org persistence manager Persistence Manager import org remoting rpc Rpc Manager import org remoting transport Address import org topology Cache Topology import org transaction impl Local Transaction import org transaction impl Transaction Originator Checker import org transaction impl Transaction Table import org transaction xa Cache Transaction import org transaction xa Global Transaction import org util concurrent Completable Futures import org util logging Log import org util logging Log Factory link State Provider implementation author anistor redhat com since Listener public class State Provider Impl implements State Provider protected static final Log log Log Factory get Log State Provider Impl class protected static final boolean trace log Trace Enabled protected String cache Name private Configuration configuration protected Rpc Manager rpc Manager protected Commands Factory commands Factory private Cluster Cache Notifier cluster Cache Notifier private Transaction Table transaction Table optional protected Data Container data Container protected Persistence Manager persistence Manager optional protected Executor Service executor Service protected State Transfer Lock state Transfer Lock protected Internal Entry Factory entry Factory protected long timeout protected int chunk Size protected Key Partitioner key Partitioner protected State Consumer state Consumer private Transaction Originator Checker transaction Originator Checker map keeps track current outbound state transfers destination address could multiple transfers flowing destination different segments values lists private final Map Address List Outbound Transfer Task transfers Destination new Hash Map public State Provider Impl Inject public void init Cache cache Component Name Executor Service executor Service Use dedicated Executor Service Configuration configuration Rpc Manager rpc Manager Commands Factory commands Factory Cluster Cache Notifier cluster Cache Notifier Persistence Manager persistence Manager Data Container data Container Transaction Table transaction Table State Transfer Lock state Transfer Lock State Consumer state Consumer Internal Entry Factory entry Factory Key Partitioner key Partitioner Transaction Originator Checker transaction Originator Checker cache Name cache get Name executor Service executor Service configuration configuration rpc Manager rpc Manager commands Factory commands Factory cluster Cache Notifier cluster Cache Notifier persistence Manager persistence Manager data Container data Container transaction Table transaction Table state Transfer Lock state Transfer Lock state Consumer state Consumer entry Factory entry Factory transaction Originator Checker transaction Originator Checker timeout configuration clustering state Transfer timeout chunk Size configuration clustering state Transfer chunk Size key Partitioner key Partitioner public boolean State Transfer Progress synchronized transfers Destination return transfers Destination Empty public Completable Future Void Topology Update Cache Topology cache Topology boolean Rebalance Cancel outbound state transfers destinations longer members new topology rebalance cancelled stop every outbound transfer prevent leaking transfers one rebalance next Set Address members new Hash Set cache Topology get Write Consistent Hash get Members synchronized transfers Destination Iterator Address transfers Destination key Set iterator Next Address destination next members contains destination List Outbound Transfer Task transfers transfers Destination get destination remove Outbound Transfer Task outbound Transfer transfers outbound Transfer cancel return Completable Futures completed Null todo anistor must cancel transfers segments longer Start priority Override public void start Stop priority Override public void stop trace log tracef Shutting State Provider cache node cache Name rpc Manager get Address cancel outbound transfers try synchronized transfers Destination Iterator List Outbound Transfer Task transfers Destination values iterator Next List Outbound Transfer Task transfers next remove Outbound Transfer Task outbound Transfer transfers outbound Transfer cancel catch Throwable log errorf Failed stop State Provider cache node cache Name rpc Manager get Address public List Transaction Info get Transactions Segments Address destination int request Topology Id Set Integer segments throws Interrupted Exception trace log tracef Received request transactions node cache topology id segments destination cache Name request Topology Id segments final Cache Topology cache Topology get Cache Topology request Topology Id destination true final Consistent Hash read Ch cache Topology get Read Consistent Hash Set Integer owned Segments read Ch get Segments Owner rpc Manager get Address owned Segments contains segments segments remove owned Segments throw new Illegal Argument Exception Segments segments owned rpc Manager get Address List Transaction Info transactions new Array List migrate locks cache transactional distributed configuration transaction transaction Mode Transactional collect Transactions Transfer destination transactions transaction Table get Remote Transactions segments cache Topology collect Transactions Transfer destination transactions transaction Table get Local Transactions segments cache Topology trace log tracef Found transaction transfer transactions size return transactions Override public Collection Distributed Callable get Cluster Listeners Install return cluster Cache Notifier retrieve Cluster Listener Callables Install private Cache Topology get Cache Topology int request Topology Id Address destination boolean Req Transactions throws Interrupted Exception Cache Topology cache Topology state Consumer get Cache Topology int current Topology Id cache Topology null cache Topology get Topology Id request Topology Id current Topology Id Req Transactions log debugf Transactions requested node topology older local topology destination request Topology Id current Topology Id else log debugf Segments requested node topology older local topology destination request Topology Id current Topology Id else request Topology Id current Topology Id trace log tracef requested node topology greater local topology Waiting topology installed locally Req Transactions Transactions Segments destination request Topology Id current Topology Id request Topology Id try state Transfer Lock wait Topology request Topology Id timeout Time Unit catch Timeout Exception e throw log failed Waiting Topology request Topology Id cache Topology state Consumer get Cache Topology return cache Topology private void collect Transactions Transfer Address destination List Transaction Info transactions Transfer Collection extends Cache Transaction transactions Set Integer segments Cache Topology cache Topology int topology Id cache Topology get Topology Id Set Address members new Hash Set cache Topology get Members need filter state transfer generated transactions transactions running requested segments Cache Transaction tx transactions final Global Transaction gtx tx get Global Transaction Skip transactions whose originators left topology id check needed joiners Also skip transactions originates state transfer starts tx get Topology Id topology Id transaction Originator Checker Originator Missing gtx members trace log tracef Skipping transaction started current topology leaver tx continue transfer locked keys belong requested segments Set Object filtered Locked Keys new Hash Set Set Object locked Keys tx get Locked Keys synchronized locked Keys Object key locked Keys segments contains key Partitioner get Segment key filtered Locked Keys add key Set Object backup Locked Keys tx get Backup Locked Keys synchronized backup Locked Keys Object key backup Locked Keys segments contains key Partitioner get Segment key filtered Locked Keys add key filtered Locked Keys Empty trace log tracef Skipping transaction state requestor n key tx destination continue trace log tracef Sending transaction new owner tx destination List Write Command tx Modifications tx get Modifications Write Command modifications null tx Modifications Empty modifications tx Modifications Array new Write Command tx Modifications size key affected local transaction new owner must add new owner transaction affected nodes set receives commit rollback command See tx instanceof Local Transaction Local Transaction local Tx Local Transaction tx local Tx locks Acquired Collections singleton destination trace log tracef Adding affected node transferred transaction keys destination gtx filtered Locked Keys transactions Transfer add new Transaction Info gtx tx get Topology Id modifications filtered Locked Keys Override public void start Outbound Transfer Address destination int request Topology Id Set Integer segments boolean apply State throws Interrupted Exception trace log tracef Starting outbound transfer node cache topology id segments destination cache Name request Topology Id segments destination node must already Inbound Transfer Task waiting segments Outbound Transfer Task outbound Transfer new Outbound Transfer Task destination segments chunk Size request Topology Id key Partitioner Task Completion chunks Outbound Transfer Task default Map Entry Data Container Outbound Transfer Task default Map Entry Store data Container persistence Manager rpc Manager commands Factory entry Factory timeout cache Name apply State false add Transfer outbound Transfer outbound Transfer execute executor Service protected void add Transfer Outbound Transfer Task transfer Task trace log tracef Adding outbound transfer segments transfer Task get Destination transfer Task get Segments synchronized transfers Destination List Outbound Transfer Task transfers transfers Destination compute Absent transfer Task get Destination k new Array List transfers add transfer Task Override public void cancel Outbound Transfer Address destination int topology Id Set Integer segments trace log tracef Cancelling outbound transfer node cache topology id segments destination cache Name topology Id segments get outbound transfers address given segments cancel transfers synchronized transfers Destination List Outbound Transfer Task transfer Tasks transfers Destination get destination transfer Tasks null get array copy collection avoid Concurrent Modification Exception entire task gets cancelled remove Transfer transfer Task called Outbound Transfer Task task List Copy transfer Tasks Array new Outbound Transfer Task transfer Tasks size Outbound Transfer Task transfer Task task List Copy transfer Task get Topology Id topology Id transfer Task cancel Segments segments potentially result call remove Transfer transfer Task private void remove Transfer Outbound Transfer Task transfer Task synchronized transfers Destination List Outbound Transfer Task transfer Tasks transfers Destination get transfer Task get Destination transfer Tasks null transfer Tasks remove transfer Task transfer Tasks Empty transfers Destination remove transfer Task get Destination protected void Task Completion Outbound Transfer Task transfer Task trace log tracef Removing outbound transfer segments cache segments transfer Task Cancelled cancelled completed transfer Task get Destination cache Name transfer Task get Segments remove Transfer transfer Task
package org configuration cache import java util concurrent Time Unit import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set Configures state retrieved new cache joins cluster Used invalidation replication clustered modes since public class State Transfer Configuration public static final Attribute Definition Boolean Attribute Definition builder await Initial Transfer true immutable build public static final Attribute Definition Boolean Attribute Definition builder fetch Memory State true xml Name enabled immutable build public static final Attribute Definition Long Attribute Definition builder timeout Time Unit Millis immutable build public static final Attribute Definition Integer Attribute Definition builder chunk Size immutable build static final Attribute Set attribute Definition Set return new Attribute Set Store Binary Configuration class private final Attribute Boolean await Initial Transfer private final Attribute Boolean fetch Memory State private final Attribute Long timeout private final Attribute Integer chunk Size private final Attribute Set attributes State Transfer Configuration Attribute Set attributes attributes attributes check Protection await Initial Transfer attributes attribute fetch Memory State attributes attribute timeout attributes attribute chunk Size attributes attribute code true cache fetch data neighboring caches starts cache starts warm although impact startup time p distributed mode state transferred running caches well ownership keys changes e g cache left cluster Disabling setting means key sometimes less code num Owner owners public boolean fetch Memory State return fetch Memory State get maximum amount time milliseconds wait state neighboring caches throwing exception aborting startup public long timeout return timeout get maximum amount time milliseconds wait state neighboring caches throwing exception aborting startup public State Transfer Configuration timeout long l timeout set l return state transferred batches code chunk Size cache entries chunk Size equal Integer state transferred recommended public int chunk Size return chunk Size get code true cause first call method code Cache Manager get Cache joiner node block wait joining complete cache finished receiving state neighboring caches fetch Memory State enabled option applies distributed replicated caches enabled default Please note setting code false make cache object available immediately access keys available locally yet transferred actually cause transparent remote access impact logic application might impact performance public boolean await Initial Transfer return await Initial Transfer get want remember user n configure await Initial Transfer default cache private boolean original Await Initial Transfer return await Initial Transfer Modified public Attribute Set attributes return attributes Override public String String return get Class get Simple Name attributes Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false State Transfer Configuration State Transfer Configuration obj attributes null attributes null return false else attributes equals attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result
package org configuration cache import static org configuration cache State Transfer Configuration import static org configuration cache State Transfer Configuration import static org configuration cache State Transfer Configuration import static org configuration cache State Transfer Configuration import java util concurrent Time Unit import org commons Cache Configuration Exception import org commons configuration Builder import org commons configuration attributes Attribute import org commons configuration attributes Attribute Set import org configuration global Global Configuration import org util logging Log import org util logging Log Factory Configures state transferred cache joins leaves cluster Used distributed replication clustered modes since public class State Transfer Configuration Builder extends Abstract Clustering Configuration Child Builder implements Builder State Transfer Configuration private static final Log log Log Factory get Log State Transfer Configuration Builder class private final Attribute Set attributes State Transfer Configuration Builder Clustering Configuration Builder builder super builder attributes State Transfer Configuration attribute Definition Set code true cache fetch data neighboring caches starts cache starts warm although impact startup time p distributed mode state transferred running caches well ownership keys changes e g cache left cluster Disabling setting means key sometimes less code num Owner owners public State Transfer Configuration Builder fetch Memory State boolean b attributes attribute set b return code true cause first call method code Cache Manager get Cache joiner node block wait joining complete cache finished receiving state neighboring caches fetch Memory State enabled option applies distributed replicated caches enabled default Please note setting code false make cache object available immediately access keys available locally yet transferred actually cause transparent remote access impact logic application might impact performance public State Transfer Configuration Builder await Initial Transfer boolean b attributes attribute set b return state transferred batches code chunk Size cache entries chunk Size equal Integer state transferred recommended public State Transfer Configuration Builder chunk Size int attributes attribute set return maximum amount time milliseconds wait state neighboring caches throwing exception aborting startup public State Transfer Configuration Builder timeout long l attributes attribute set l return maximum amount time milliseconds wait state neighboring caches throwing exception aborting startup public State Transfer Configuration Builder timeout long l Time Unit unit return timeout unit Millis l Override public void validate attributes attribute get throw new Cache Configuration Exception chunk Size clustering cache Mode Invalidation Attribute Boolean fetch Attribute attributes attribute fetch Attribute Modified fetch Attribute get throw log attribute Allowed Invalidation Mode name Attribute Boolean await Initial Transfer attributes attribute await Initial Transfer Modified await Initial Transfer get get Clustering Builder cache Mode needs State Transfer throw log await Initial Transfer Dist Repl Override public void validate Global Configuration global Config Override public State Transfer Configuration create return new State Transfer Configuration attributes protect Override public State Transfer Configuration Builder read State Transfer Configuration template attributes read template attributes return Override public String String return State Transfer Configuration Builder attributes attributes
package org statetransfer import java util concurrent Completable Future import org commands Topology Affected Command import org commands Visitable Command import org commands control Lock Control Command import org commands functional Read Write Key Command import org commands functional Read Write Key Value Command import org commands functional Read Write Many Command import org commands functional Read Write Many Entries Command import org commands functional Write Key Command import org commands functional Write Key Value Command import org commands functional Write Many Command import org commands functional Write Many Entries Command import org commands tx Commit Command import org commands tx Prepare Command import org commands tx Rollback Command import org commands tx Transaction Boundary Command import org commands write Clear Command import org commands write Compute Command import org commands write Compute Absent Command import org commands write Evict Command import org commands write Invalidate Command import org commands write Invalidate Command import org commands write Put Key Value Command import org commands write Put Map Command import org commands write Remove Command import org commands write Replace Command import org commands write Write Command import org context Invocation Context import org context impl Flag Bit Sets import org context impl Tx Invocation Context import org interceptors Invocation Finally Function import org interceptors impl Base State Transfer Interceptor import org remoting Remote Exception import org remoting responses Unsure Response import org remoting transport Address import org remoting transport jgroups Suspect Exception import org util logging Log import org util logging Log Factory interceptor two tasks ol li command topology id higher current topology id wait node receive transaction data new topology id li li topology id changed command execution retry command originator replicates new owners li ol cache configured asynchronous replication owners signal originator saw new topology instead owner forwards command owners new topology author anistor redhat com public class State Transfer Interceptor extends Base State Transfer Interceptor private static final Log log Log Factory get Log State Transfer Interceptor class private static final boolean trace log Trace Enabled private final Invocation Finally Function handle Tx Return handle Tx Return private final Invocation Finally Function handle Tx Write Return handle Tx Write Return private final Invocation Finally Function handle Non Tx Write Return handle Non Tx Write Return Override public Object visit Prepare Command Tx Invocation Context ctx Prepare Command command throws Throwable return handle Tx Command ctx command Override public Object visit Commit Command Tx Invocation Context ctx Commit Command command throws Throwable return handle Tx Command ctx command Override public Object visit Rollback Command Tx Invocation Context ctx Rollback Command command throws Throwable return handle Tx Command ctx command Override public Object visit Lock Control Command Tx Invocation Context ctx Lock Control Command command throws Throwable trace log tracef handle Tx Command command origin command get Origin ctx update Topology Id command return invoke Next Handle ctx command handle Tx Return Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable return handle Write Command ctx command Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable return handle Write Command ctx command Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable return handle Write Command ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return handle Write Command ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable return handle Write Command ctx command Override public Object visit Compute Absent Command Invocation Context ctx Compute Absent Command command throws Throwable return handle Write Command ctx command Override public Object visit Clear Command Invocation Context ctx Clear Command command throws Throwable return handle Write Command ctx command Override public Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable return handle Write Command ctx command Override public Object visit Invalidate Command Invocation Context ctx Invalidate Command command throws Throwable need forward command return invoke Next ctx command Override public Object visit Evict Command Invocation Context ctx Evict Command command throws Throwable necessary propagate eviction new owners case state transfer return invoke Next ctx command Override public Object visit Read Write Key Value Command Invocation Context ctx Read Write Key Value Command command throws Throwable return handle Write Command ctx command Override public Object visit Read Write Key Command Invocation Context ctx Read Write Key Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Key Command Invocation Context ctx Write Key Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Many Entries Command Invocation Context ctx Write Many Entries Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Key Value Command Invocation Context ctx Write Key Value Command command throws Throwable return handle Write Command ctx command Override public Object visit Write Many Command Invocation Context ctx Write Many Command command throws Throwable return handle Write Command ctx command Override public Object visit Read Write Many Command Invocation Context ctx Read Write Many Command command throws Throwable return handle Write Command ctx command Override public Object visit Read Write Many Entries Command Invocation Context ctx Read Write Many Entries Command command throws Throwable return handle Write Command ctx command Special processing required transaction commands private Object handle Tx Command Tx Invocation Context ctx Transaction Boundary Command command trace log tracef handle Tx Command command origin command get Origin ctx update Topology Id command return invoke Next Handle ctx command handle Tx Return private Address get Origin Tx Invocation Context ctx local commands may Global Transaction yet return ctx Origin Local ctx get Origin ctx get Global Transaction get Address private Object handle Tx Return Invocation Context ctx Visitable Command command Object rv Throwable throws Throwable Transaction Boundary Command tx Command Transaction Boundary Command command int retry Topology Id int current Topology current Topology Id instanceof Outdated Topology Exception instanceof Owners Lost Exception happen originator retry Topology Id Math max current Topology tx Command get Topology Id else null throw ctx Origin Local originator retry got Outdated Topology Exception could caused either owner leaving owner newer topology need retry new topology originator entries wrapped anyway retry Topology Id originator retry command tx Command set Topology Id retry Topology Id tx Command instanceof Prepare Command Prepare Command tx Command set Retried Command true Completable Future Void transaction Data Future state Transfer Lock transaction Data Future retry Topology Id return retry Done transaction Data Future retry Topology Id ctx tx Command handle Tx Return else current Topology tx Command get Topology Id Signal originator retry return Unsure Response return rv private Object handle Write Command Invocation Context ctx Write Command command ctx Tx Scope return handle Tx Write Command ctx command else return handle Non Tx Write Command ctx command private Object handle Tx Write Command Invocation Context ctx Write Command command trace log tracef handle Tx Write Command command origin command ctx get Origin update Topology Id command return invoke Next Handle ctx command handle Tx Write Return private Object handle Tx Write Return Invocation Context r Ctx Visitable Command r Command Object rv Throwable throws Throwable int retry Topology Id Write Command write Command Write Command r Command instanceof Outdated Topology Exception instanceof Owners Lost Exception happen originator retry Topology Id Math max current Topology Id write Command get Topology Id else null throw r Ctx Origin Local originator retry got Outdated Topology Exception could caused either owner leaving owner newer topology need retry new topology originator entries wrapped anyway retry Topology Id originator retry command write Command set Topology Id retry Topology Id Completable Future Void transaction Data Future state Transfer Lock transaction Data Future retry Topology Id return retry Done transaction Data Future retry Topology Id r Ctx write Command handle Tx Write Return else current Topology Id write Command get Topology Id Signal originator retry return Unsure Response return rv non tx write commands retry command locally topology changed retry originator command n code flag private Object handle Non Tx Write Command Invocation Context ctx Write Command command trace log tracef handle Non Tx Write Command command topology id command command get Topology Id update Topology Id command catch Outdated Topology Exceptions originator ctx Origin Local return invoke Next ctx command return invoke Next Handle ctx command handle Non Tx Write Return private Object handle Non Tx Write Return Invocation Context r Ctx Visitable Command r Command Object rv Throwable throws Throwable null return rv Throwable ce ce instanceof Remote Exception ce ce get Cause ce instanceof Outdated Topology Exception ce instanceof Suspect Exception ce instanceof Owners Lost Exception throw increment topology id update Topology Id Wait Transaction Data waits next topology Without could retry command fast could get Outdated Topology Exception int current Topology Id current Topology Id Write Command write Command Write Command r Command int new Topology Id get New Topology Id ce current Topology Id write Command trace log tracef Retrying command topology change current topology requested current Topology Id new Topology Id write Command write Command set Topology Id new Topology Id write Command add Flags Flag Bit Sets non tx context waiting transaction data equal waiting topology Completable Future Void transaction Data Future state Transfer Lock transaction Data Future new Topology Id return retry Done transaction Data Future new Topology Id r Ctx write Command handle Non Tx Write Return Override public Object handle Default Invocation Context ctx Visitable Command command throws Throwable command instanceof Topology Affected Command return handle Topology Affected Command ctx command ctx get Origin else return invoke Next ctx command private Object handle Topology Affected Command Invocation Context ctx Visitable Command command Address origin trace log tracef handle Topology Affected Command command origin command origin update Topology Id Topology Affected Command command return invoke Next ctx command Override protected Log get Log return log
package org statetransfer import java util concurrent Completable Future import java util concurrent locks Read Write Lock import java util concurrent locks Reentrant Read Write Lock import org factories annotations Stop import org util concurrent Completable Futures import org util logging Log import org util logging Log Factory code State Transfer Lock implementation author anistor redhat com author Dan Berindei since public class State Transfer Lock Impl implements State Transfer Lock private static final Log log Log Factory get Log State Transfer Lock Impl class private static final boolean trace log Trace Enabled private static final int Integer private final Read Write Lock ownership Lock new Reentrant Read Write Lock private volatile int topology Id future topology equal topology Id private Completable Future Void topology Future new Completable Future private volatile int transaction Data Topology Id private Completable Future Void transaction Data Future new Completable Future Stop public void stop notify Topology Installed notify Transaction Data Received Suppress Warnings Lock Acquired Safely Released Override public void acquire Exclusive Topology Lock ownership Lock write Lock lock Override public void release Exclusive Topology Lock ownership Lock write Lock unlock Suppress Warnings Lock Acquired Safely Released Override public void acquire Shared Topology Lock ownership Lock read Lock lock Override public void release Shared Topology Lock ownership Lock read Lock unlock Override public void notify Transaction Data Received int topology Id topology Id transaction Data Topology Id log debugf Trying set topology id lower current one topology Id topology Id return trace log tracef Signalling transaction data received topology topology Id transaction Data Topology Id topology Id Completable Future Void old Future null try synchronized old Future transaction Data Future transaction Data Future new Completable Future finally old Future null old Future complete null Override public Completable Future Void transaction Data Future int expected Topology Id transaction Data Topology Id expected Topology Id return Completable Futures completed Null trace log tracef Waiting transaction data topology current topology expected Topology Id transaction Data Topology Id synchronized transaction Data Topology Id expected Topology Id return Completable Futures completed Null else return transaction Data Future Compose nil transaction Data Future expected Topology Id Override public boolean transaction Data Received int expected Topology Id trace log tracef Checking transaction data received topology current topology expected Topology Id transaction Data Topology Id return transaction Data Topology Id expected Topology Id Override public void notify Topology Installed int topology Id topology Id topology Id log debugf Trying set topology id lower current one topology Id topology Id return trace log tracef Signalling topology installed topology Id topology Id topology Id Completable Future Void old Future null try synchronized old Future topology Future topology Future new Completable Future finally old Future null old Future complete null Override public Completable Future Void topology Future int expected Topology Id topology Id expected Topology Id return Completable Futures completed Null trace log tracef Waiting topology installed current topology expected Topology Id topology Id synchronized topology Id expected Topology Id return Completable Futures completed Null else return topology Future Compose nil topology Future expected Topology Id Override public boolean topology Received int expected Topology Id return topology Id expected Topology Id
package org statetransfer import java util Collection import java util Collections import java util Hash Set import java util Map import java util Optional import java util Set import java util concurrent Completable Future import java util concurrent Count Latch import java util concurrent Time Unit import org Cache import org commands Topology Affected Command import org commons Cache Exception import org configuration cache Cache Mode import org configuration cache Configuration import org configuration global Global Configuration import org distribution Distribution Manager import org distribution Localized Cache Topology import org distribution ch Consistent Hash import org distribution ch Consistent Hash Factory import org distribution ch Key Partitioner import org distribution ch impl Scattered Consistent Hash Factory import org distribution ch impl Sync Consistent Hash Factory import org distribution ch impl Sync Replicated Consistent Hash Factory import org distribution ch impl Topology Aware Sync Consistent Hash Factory import org distribution group impl Partitioner Consistent Hash import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org globalstate Global State Manager import org globalstate Scoped Persistent State import org notifications cachelistener Cache Notifier import org partitionhandling impl Partition Handling Manager import org remoting inboundhandler Deliver Order import org remoting responses Response import org remoting rpc Rpc Manager import org remoting rpc Rpc Options import org remoting transport Address import org topology Cache Join Info import org topology Cache Topology import org topology Cache Topology Handler import org topology Local Topology Manager import org util logging Log import org util logging Log Factory link State Transfer Manager implementation author anistor redhat com since public class State Transfer Manager Impl implements State Transfer Manager private static final Log log Log Factory get Log State Transfer Manager Impl class private static final boolean trace log Trace Enabled private State Consumer state Consumer private State Provider state Provider private Partition Handling Manager partition Handling Manager private Distribution Manager distribution Manager private String cache Name private Cache Notifier cache Notifier private Configuration configuration private Global Configuration global Configuration private Rpc Manager rpc Manager private Local Topology Manager local Topology Manager private Optional Integer persistent State Checksum private final Count Latch initial State Transfer Complete new Count Latch first topology local node member command lower topology id ignored private volatile int first Topology Member Integer private Key Partitioner key Partitioner public State Transfer Manager Impl Inject public void init State Consumer state Consumer State Provider state Provider Cache cache Cache Notifier cache Notifier Configuration configuration Global Configuration global Configuration Rpc Manager rpc Manager Key Partitioner key Partitioner Local Topology Manager local Topology Manager Partition Handling Manager partition Handling Manager Global State Manager global State Manager Distribution Manager distribution Manager state Consumer state Consumer state Provider state Provider cache Name cache get Name cache Notifier cache Notifier configuration configuration global Configuration global Configuration rpc Manager rpc Manager key Partitioner key Partitioner local Topology Manager local Topology Manager partition Handling Manager partition Handling Manager distribution Manager distribution Manager global State Manager null persistent State Checksum global State Manager read Scoped State cache Name map Scoped Persistent State get Checksum else persistent State Checksum Optional empty needs Distribution Manager cache loader manager inits preloads Start priority Override public void start throws Exception trace log tracef Starting State Transfer Manager cache node cache Name rpc Manager get Address Cache Join Info join Info new Cache Join Info pick Consistent Hash Factory configuration clustering hash hash configuration clustering hash num Segments configuration clustering hash num Owners configuration clustering state Transfer timeout configuration transaction transaction Protocol Total Order configuration clustering cache Mode configuration clustering partition Handling enabled configuration clustering hash capacity Factor local Topology Manager get Persistent persistent State Checksum Cache Topology initial Topology local Topology Manager join cache Name join Info new Cache Topology Handler Override public void update Consistent Hash Cache Topology cache Topology Topology Update cache Topology false Override public void rebalance Cache Topology cache Topology Topology Update cache Topology true partition Handling Manager trace log tracef State Transfer Manager cache node received initial topology cache Name rpc Manager get Address initial Topology Consistent Hash Factory explicitly configured choose suitable one based cache mode private Consistent Hash Factory pick Consistent Hash Factory Consistent Hash Factory factory configuration clustering hash consistent Hash Factory factory null Cache Mode cache Mode configuration clustering cache Mode cache Mode Clustered cache Mode Distributed global Configuration transport Topology Info factory new Topology Aware Sync Consistent Hash Factory else factory new Sync Consistent Hash Factory else cache Mode Replicated cache Mode Invalidation factory new Sync Replicated Consistent Hash Factory else cache Mode Scattered factory new Scattered Consistent Hash Factory else throw new Cache Exception Unexpected cache mode cache Mode return factory Decorates given cache topology add key partitioner key partitioner may include support grouping well private Cache Topology add Partitioner Cache Topology cache Topology Consistent Hash current cache Topology get Current current new Partitioner Consistent Hash current key Partitioner Consistent Hash pending cache Topology get Pending pending null pending new Partitioner Consistent Hash pending key Partitioner Consistent Hash union cache Topology get Union union null union new Partitioner Consistent Hash union key Partitioner return new Cache Topology cache Topology get Topology Id cache Topology get Rebalance Id current pending union cache Topology get Phase cache Topology get Actual Members cache Topology get Members Persistent Ds private void Topology Update Cache Topology new Cache Topology boolean Rebalance Cache Topology old Cache Topology state Consumer get Cache Topology int new Topology Id new Cache Topology get Topology Id old Cache Topology null old Cache Topology get Topology Id new Topology Id throw new Illegal State Exception Old topology higher old old Cache Topology new new Cache Topology trace log tracef Installing new cache topology cache new Cache Topology cache Name need extra synchronization since Local Topology Manager already serializes topology updates first Topology Member Integer new Cache Topology get Members contains rpc Manager get Address first Topology Member new Topology Id trace log tracef first topology local node member first Topology Member handle partitioner new Cache Topology add Partitioner new Cache Topology int new Rebalance Id new Cache Topology get Rebalance Id Cache Topology Phase phase new Cache Topology get Phase cache Notifier notify Topology Changed old Cache Topology new Cache Topology new Topology Id true Completable Future Void consumer Future state Consumer Topology Update new Cache Topology Rebalance Completable Future Void provider Future state Provider Topology Update new Cache Topology Rebalance Completable Future consumer Future provider Future Run switch phase case case case case local Topology Manager confirm Rebalance Phase cache Name new Topology Id new Rebalance Id null cache Notifier notify Topology Changed old Cache Topology new Cache Topology new Topology Id false initial State Transfer Complete get Count assert state Consumer get Cache Topology new Cache Topology boolean Joined phase Cache Topology Phase new Cache Topology get Read Consistent Hash get Members contains rpc Manager get Address Joined initial State Transfer Complete count log tracef Initial state transfer complete cache node cache Name rpc Manager get Address partition Handling Manager Topology Update new Cache Topology Start priority Suppress Warnings unused public void wait Initial State Transfer Complete throws Exception configuration clustering state Transfer await Initial Transfer local Topology Manager Cache Rebalancing Enabled cache Name initial State Transfer Complete count trace log tracef Waiting initial state transfer finish cache cache Name rpc Manager get Address boolean success initial State Transfer Complete await configuration clustering state Transfer timeout Time Unit success throw new Cache Exception String format Initial state transfer timed cache cache Name rpc Manager get Address Stop priority Override public void stop trace log tracef Shutting State Transfer Manager cache node cache Name rpc Manager get Address initial State Transfer Complete count local Topology Manager leave cache Name Override public boolean Join Complete return state Consumer get Cache Topology null anistor mean received topology update rebalance yet Override public String get Rebalancing Status throws Exception return local Topology Manager get Rebalancing Status cache Name String Override public boolean State Transfer Progress return state Consumer State Transfer Progress Override public boolean State Transfer Progress Key Object key return state Consumer State Transfer Progress Key key Override public Cache Topology get Cache Topology return state Consumer get Cache Topology Override public Map Address Response forward Command Needed Topology Affected Command command Set Object affected Keys Address origin Localized Cache Topology cache Topology distribution Manager get Cache Topology cache Topology null trace log tracef fowarding command topology null command return Collections empty Map int cmd Topology Id command get Topology Id forward commands older topology ids new targets need make sure latest topology int local Topology Id cache Topology get Topology Id tx lock write command forward new owners trace log tracef Command Topology Id local Topology Id cmd Topology Id local Topology Id cmd Topology Id local Topology Id Collection Address new Targets new Hash Set cache Topology get Write Owners affected Keys new Targets remove rpc Manager get Address Forwarding originator would create cycle may real originator one original recipients even one nodes one original recipients forwarded command non transactional caches real originator keeps lock duration means could get deadlock forwarding new Targets remove origin new Targets Empty Update topology id prevent cycles command set Topology Id local Topology Id trace log tracef Forwarding command new targets command new Targets final Rpc Options rpc Options rpc Manager get Default Rpc Options false Deliver Order find way forward command async received async Tx Completion Notification Commands commands forwarded asynchronously must return rpc Manager invoke Remotely new Targets command rpc Options return Collections empty Map Investigate merging owns Data get First Topology Member serve similar purpose Override public boolean owns Data return state Consumer owns Data Override public int get First Topology Member return first Topology Member Override public String String return State Transfer Manager Impl cache Name rpc Manager get Address
package org configuration cache import org configuration parsing Element Enumeration defining various storage types data container author wburns since public enum Storage Type Objects stored heap objects provided serialized across nodes stored deserialized instances object Equality defined equals method implementation class Element Entries stored Java heap byte instances mode equality defined byte created serialized provided object Element Entries stored normal Java heap mode equality defined byte created serialized provided object Element Element element Storage Type Element element element element public Element get Element return element
package org configuration cache import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set Controls whether stored memory keys values stored references original objects serialized binary format benefits approaches often used clustered mode storing objects binary means cost serialization happens early amortized deserialization costs incurred lazily improves throughput p possible control fine grained basis choose store keys values binary p see Store Binary Configuration Builder deprecated Use link Memory Configuration instead Deprecated public class Store Binary Configuration public static final Attribute Definition Boolean Attribute Definition builder enabled false auto Persist false build public static final Attribute Definition Boolean Attribute Definition builder keys true immutable build public static final Attribute Definition Boolean Attribute Definition builder values true immutable build static Attribute Set attribute Definition Set return new Attribute Set Store Binary Configuration class private final Attribute Boolean enabled private final Attribute Boolean store Keys Binary private final Attribute Boolean store Values Binary private final Attribute Set attributes Store Binary Configuration Attribute Set attributes attributes attributes check Protection enabled attributes attribute store Keys Binary attributes attribute store Values Binary attributes attribute Enables storing keys values binary deprecated use link Memory Configuration storage Type instead Deprecated public boolean enabled return enabled get Deprecated public Store Binary Configuration enabled boolean enabled enabled set enabled return Enables storing keys binary deprecated store binary enabled keys always stored binary Deprecated public boolean store Keys Binary return store Keys Binary get Enables storing values binary deprecated store binary enabled values always stored binary Deprecated public boolean store Values Binary return store Values Binary get Enables defensive copies deprecated Store binary configuration always defensive Deprecated public boolean defensive return true public Attribute Set attributes return attributes Override public String String return Store Binary Configuration attributes attributes Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Store Binary Configuration Store Binary Configuration obj attributes null attributes null return false else attributes equals attributes return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code return result
package org configuration cache import static org configuration cache Store Binary Configuration import org commons configuration Builder import org commons configuration attributes Attribute Set import org configuration global Global Configuration Controls whether stored memory keys values stored references original objects serialized binary format benefits approaches often used clustered mode storing objects binary means cost serialization happens early amortized deserialization costs incurred lazily improves throughput p possible control fine grained basis choose store keys values binary p see Store Binary Configuration deprecated Please use link Memory Configuration Builder storage Type Storage Type method instead Deprecated public class Store Binary Configuration Builder extends Abstract Configuration Child Builder implements Builder Store Binary Configuration private final Attribute Set attributes Store Binary Configuration Builder Configuration Builder builder super builder attributes Store Binary Configuration attribute Definition Set Enables storing keys values binary public Store Binary Configuration Builder enable attributes attribute set true get Builder memory storage Type Storage Type return Disables storing keys values binary public Store Binary Configuration Builder disable attributes attribute set false get Builder memory storage Type Storage Type return Sets whether feature enabled disabled param enabled true feature enabled false disabled public Store Binary Configuration Builder enabled boolean enabled attributes attribute set enabled get Builder memory storage Type enabled Storage Type Storage Type return Specify whether keys stored binary param store Keys Binary true keys stored binary false keys stored object references deprecated longer supported keys values enabled store binary Deprecated public Store Binary Configuration Builder store Keys Binary boolean store Keys Binary return Specify whether values stored binary param store Values Binary true values stored binary false values stored object references deprecated longer supported keys values enabled store binary Deprecated public Store Binary Configuration Builder store Values Binary boolean store Values Binary return defensive copying disabled keeps object references around marshalls keys lazily clients modify entries via original object references marshalling happens entries replicated distributed stored cache store Since client references valid clients make changes entries cache using references modifications local still need call one cache put replace methods order changes replicate defensive copies enabled marshalls objects moment stored hence changes made object references stored cache even local caches param defensive boolean indicating whether defensive copies enabled cache wide return configuration builder fluent programmatic configuration deprecated Store binary configuration always defensive Deprecated public Store Binary Configuration Builder defensive boolean defensive return Override public void validate Nothing validate Override public void validate Global Configuration global Config Override public Store Binary Configuration create return new Store Binary Configuration attributes protect Override public Store Binary Configuration Builder read Store Binary Configuration template attributes read template attributes return Override public String String return Store Binary Configuration Builder attributes attributes
package org factories import org configuration cache Cache Mode import org factories annotations Default Factory import org partitionhandling Partition Handling import org stream impl Cluster Stream Manager import org stream impl Cluster Stream Manager Impl import org stream impl Local Stream Manager import org stream impl Local Stream Manager Impl import org stream impl Partition Aware Cluster Stream Manager Factory allows creation link Local Stream Manager link Cluster Stream Manager based provided configuration author wburns since Default Factory classes Local Stream Manager class Cluster Stream Manager class public class Stream Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory Override public construct Class component Type Cache Mode cache Mode configuration clustering cache Mode cache Mode needs State Transfer component Type equals Local Stream Manager class return component Type cast new Local Stream Manager Impl component Type equals Cluster Stream Manager class configuration clustering partition Handling Split Partition Handling return component Type cast new Partition Aware Cluster Stream Manager else return component Type cast new Cluster Stream Manager Impl return null
package org stream import java io Exception import java io Object Input import java io Object Output import java util Hash Map import java util Map import java util Objects import java util Set import java util function Function import java util function Predicate import org Advanced Cache import org Cache import org commons marshall Advanced Externalizer import org commons util Util import org container entries Cache Entry import org factories annotations Inject import org marshall core Ids Static factory class containing methods provide marshallable instances common use cases Every instance returned various static methods uses marshalling reduce payload sizes considerably used whenever possible public class Stream Marshalling private Stream Marshalling Provides predicate returns true object equal param object instance test equality return predicate public static Predicate Object equality Predicate Object object return new Equality Predicate object Predicate returns true object passed null return predicate public static Predicate Object non Null Predicate return Non Null Predicate get Instance Predicate taht always returns true irrespective value provided return predicate public static Predicate Object always True Predicate return Always True Predicate get Instance Provides function returns key entry invoked param key type entry param value type entry return function applied given entry return key public static Function Map Entry entry Key Function return Entry Key Function get Instance Provides function returns value entry invoked param key type entry param value type entry return function applied given entry return value public static Function Map Entry entry Value Function return Entry Value Function get Instance Provides function given key return link Cache Entry maps key function works used link org Cache Stream returned desired link Cache entry read b Cache b b Cache Stream b created param key type param expected value type entry return function applied returns entry given key public static Function Cache Entry key Entry Function return new Key Entry Function private static final class Equality Predicate implements Predicate Object private final Object object private Equality Predicate Object object Objects non Null object object object Override public boolean test Object return object equals private static final class Non Null Predicate implements Predicate Object private static final Non Null Predicate new Non Null Predicate public static Non Null Predicate get Instance return Override public boolean test Object return null private static final class Always True Predicate implements Predicate Object private static final Always True Predicate new Always True Predicate public static Always True Predicate get Instance return Override public boolean test Object return true private static final class Entry Key Function implements Function Map Entry private static final Entry Key Function new Entry Key Function public static Entry Key Function get Instance return Entry Key Function Override public apply Map Entry kv Entry return kv Entry get Key private static final class Entry Value Function implements Function Map Entry private static final Entry Value Function new Entry Value Function public static Entry Value Function get Instance return Entry Value Function Override public apply Map Entry kv Entry return kv Entry get Value private static final class Key Entry Function implements Function Cache Entry private Advanced Cache advanced Cache Override public Cache Entry apply k return advanced Cache get Cache Entry k Inject public void inject Cache cache advanced Cache cache get Advanced Cache public static final class Stream Marshalling Externalizer implements Advanced Externalizer Object enum Externalizer Id Equality Predicate class Entry Key Function class Entry Value Function class Non Null Predicate class Always True Predicate class Key Entry Function class private final Class extends Object marshalled Class Externalizer Id Class extends Object marshalled Class marshalled Class marshalled Class private final Map Class extends Object Externalizer Id objects new Hash Map public Stream Marshalling Externalizer Externalizer Id id Externalizer Id values objects put id marshalled Class id Override public Set Class get Type Classes return Util Class extends Object Set Equality Predicate class Entry Key Function class Entry Value Function class Non Null Predicate class Always True Predicate class Key Entry Function class Override public Integer get Id return Ids Override public void write Object Object Output output Object object throws Exception Externalizer Id id objects get object get Class id null throw new Illegal Argument Exception Unsupported class object get Class provided output write Byte id ordinal switch id case output write Object Equality Predicate object object break Override public Object read Object Object Input input throws Exception Class Found Exception int number input read Unsigned Byte Externalizer Id ids Externalizer Id values number number ids length throw new Illegal Argument Exception Found invalid number number Externalizer Id id ids number switch id case return new Equality Predicate input read Object case return Entry Key Function get Instance case return Entry Value Function get Instance case return Non Null Predicate get Instance case return Always True Predicate get Instance case return new Key Entry Function default throw new Illegal Argument Exception Externalizer Id supported id
package org stream impl import java io Exception import java io Object Input import java io Object Output import java util Hash Set import java util Set import java util concurrent Completable Future import org commands Topology Affected Command import org commands remote Base Rpc Command import org commons marshall Marshall Util import org commons util Util import org factories annotations Inject import org remoting transport Address import org util Byte String import org util concurrent Completable Futures Stream request command sent remote nodes handle execution remote intermediate terminal operations param key type public class Stream Request Command extends Base Rpc Command implements Topology Affected Command public static final byte private Local Stream Manager lsm private Object id private Type type private boolean parallel Stream private Set Integer segments private Set keys private Set excluded Keys private boolean include Loader private Object terminal Operation private int topology Id Override public int get Topology Id return topology Id Override public void set Topology Id int topology Id topology Id topology Id public Object get Id return id public enum Type private static final Type values Command Id Uniqueness Test private Stream Request Command super null public Stream Request Command Byte String cache Name super cache Name public Stream Request Command Byte String cache Name Address origin Object id boolean parallel Stream Type type Set Integer segments Set keys Set excluded Keys boolean include Loader Object terminal Operation super cache Name set Origin origin id id parallel Stream parallel Stream type type segments segments keys keys excluded Keys excluded Keys include Loader include Loader terminal Operation terminal Operation Inject public void inject Local Stream Manager lsm lsm lsm Override public Completable Future Object invoke Async throws Throwable switch type case lsm stream Operation id get Origin parallel Stream segments keys excluded Keys include Loader Terminal Operation terminal Operation break case lsm stream Operation Rehash Aware id get Origin parallel Stream segments keys excluded Keys include Loader Terminal Operation terminal Operation break case lsm stream Operation id get Origin parallel Stream segments keys excluded Keys include Loader Key Tracking Terminal Operation terminal Operation break case lsm stream Operation Rehash Aware id get Origin parallel Stream segments keys excluded Keys include Loader Key Tracking Terminal Operation terminal Operation break return Completable Futures completed Null Override public byte get Command Id return Override public void write Object Output output throws Exception output write Object get Origin output write Object id output write Boolean parallel Stream Marshall Util marshall Enum type output Marshall Util marshall Collection segments output Marshall Util marshall Collection keys output Marshall Util marshall Collection excluded Keys output output write Boolean include Loader output write Object terminal Operation Override public void read Object Input input throws Exception Class Found Exception set Origin Address input read Object id input read Object parallel Stream input read Boolean type Marshall Util unmarshall Enum input ordinal Type ordinal segments Marshall Util unmarshall Collection Unbounded input Hash Set new keys Marshall Util unmarshall Collection Unbounded input Hash Set new excluded Keys Marshall Util unmarshall Collection Unbounded input Hash Set new include Loader input read Boolean terminal Operation input read Object Override public boolean Return Value Expected return false Override public boolean Block return true Override public String String final String Builder sb new String Builder Stream Request Command sb append type append type sb append include Loader append include Loader sb append terminal Operation append terminal Operation sb append topology Id append topology Id sb append id append id sb append segments append segments sb append keys append Util Str keys sb append excluded Keys append Util Str excluded Keys sb append return sb String
package org commons util import java io File import java util Properties import org commons logging Log import org commons logging Log Factory utility class replacing properties strings author href mailto jason planet com Jason Dillon author href Scott Stark jboss org Scott Stark author href claudio vesco previnet Claudio Vesco author href mailto adrian jboss com Adrian Brock author href mailto dimitris jboss org Dimitris Andreadis since public class String Property Replacer private static final Log log Log Factory get Log String Property Replacer class New line string constant public static final String Security Actions get Property line separator n File separator value private static final String File separator Path separator value private static final String File path Separator File separator alias private static final String Path separator alias private static final String States used property parsing private static final int private static final int private static final int Go input string replace occurance p System get Property p value property p defined p reference remain unchanged p property reference form p v property p default value v returned p property reference form p p p p v primary secondary properties tried turn returning either unchanged input default value p property replaced System get Property file separator value property replaced System get Property path separator param string string possible references return input string property references replaced valid references input string returned public static String replace Properties final String string return replace Properties string null Go input string replace occurance p props get Property p value property p defined p reference remain unchanged p property reference form p v property p default value v returned p property reference form p p p p v primary secondary properties tried turn returning either unchanged input default value p property replaced System get Property file separator value property replaced System get Property path separator param string string possible references param props source x property ref values null means use System get Property return input string property references replaced valid references input string returned public static String replace Properties final String string final Properties props string null return null final char chars string Char Array String Builder buffer new String Builder boolean properties false int state int start int chars length char c chars Dollar sign outside brackets c state state Open bracket immediatley dollar else c state buffer append string substring start state start open bracket dollar else state state Closed bracket open bracket else c state content start buffer append Correct else Collect system property String value String key string substring start check alias equals key value else equals key value else check properties props null value props get Property key else value Security Actions get Property key value null Check default value key default int colon key index colon String real Key key substring colon props null value props get Property real Key else value Security Actions get Property real Key value null Check composite key key key value resolve Composite Key real Key props composite key either use specified default value null value key substring colon else default check composite key key key value resolve Composite Key key props value null properties true buffer append value else buffer append buffer append key buffer append log property Could Replaced key start state properties properties return string Collect trailing characters start chars length buffer append string substring start chars length Done return buffer String Try resolve key provided properties checking actually key key case try first key key fails return null p also accepts key key param key key resolve param props properties use return resolved key null private static String resolve Composite Key String key Properties props String value null Look comma int comma key index comma first part try resolve comma Check first part String key key substring comma props null value props get Property key else value Security Actions get Property key Check second part one first lookup failed value null comma key length String key key substring comma props null value props get Property key else value Security Actions get Property key Return whatever found null return value
package org remoting responses import java io Exception import java io Object Input import java io Object Output import java util Set import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids successful response author Manik Surtani since public class Successful Response extends Valid Response public static final Successful Response new Successful Response null private final Object response Value private Successful Response Object response Value response Value response Value public static Successful Response create Object response Value return response Value null new Successful Response response Value Override public boolean Successful return true public Object get Response Value return response Value Override public boolean equals Object return true null get Class get Class return false Successful Response Successful Response response Value null response Value equals response Value response Value null return false return true Override public int hash Code return response Value null response Value hash Code Override public String String return Successful Response Util Str response Value public static class Externalizer extends Abstract Externalizer Successful Response Override public void write Object Object Output output Successful Response response throws Exception output write Object response response Value Override public Successful Response read Object Object Input input throws Exception Class Found Exception return create input read Object Override public Integer get Id return Ids Override public Set Class extends Successful Response get Type Classes return Util Class extends Successful Response Set Successful Response class
package org configuration cache import java util concurrent Time Unit import org commons configuration Builder import org commons configuration attributes Attribute Set import org configuration global Global Configuration configured communications synchronous whenever thread sends message sent wire blocks receives acknowledgment recipient Sync Config mutually exclusive Async Config deprecated Since code repl Timeout attribute code Clustering Configuration Builder remote Timeout Deprecated public class Sync Configuration Builder extends Abstract Clustering Configuration Child Builder implements Builder Sync Configuration private final Attribute Set attributes protected Sync Configuration Builder Clustering Configuration Builder builder super builder attributes Sync Configuration attribute Definition Set timeout used wait acknowledgment making remote call call aborted exception thrown deprecated Since please use link Clustering Configuration Builder remote Timeout long Deprecated public Sync Configuration Builder repl Timeout long l attributes attribute Clustering Configuration set l return timeout used wait acknowledgment making remote call call aborted exception thrown deprecated Since please use link Clustering Configuration Builder remote Timeout long Time Unit Deprecated public Sync Configuration Builder repl Timeout long l Time Unit unit return repl Timeout unit Millis l Override public void validate Override public void validate Global Configuration global Config Override public Sync Configuration create return new Sync Configuration attributes protect Override public Sync Configuration Builder read Sync Configuration template attributes read template attributes return Override public String String return Sync Configuration Builder attributes attributes
package org distribution ch impl import java io Object Input import java io Object Output import java util Array List import java util Collections import java util Comparator import java util Hash Map import java util Hash Set import java util List import java util Map import java util Set import org commons hash Hash import org commons marshall Abstract Externalizer import org commons util Util import org distribution ch Consistent Hash Factory import org globalstate Scoped Persistent State import org marshall core Ids import org remoting transport Address import org util logging Log import org util logging Log Factory One assumptions people made consistent hashing involves thinking given particular key topology would produce consistent hash value matter cache stored However exactly case order optimise number segments moved join leave uses consistent hash depends previous consistent hash Given two caches even contain exactly keyset easy consistent hash history differ e g nodes join might see two separate topology change one cache single topology change reason node send link org topology Cache Topology Control Command cache wants join batch cache topology changes example rebalance progress joins queued send one go rebalance finished link org distribution ch Consistent Hash Factory implementation avoids issues mentioned guarantees multiple caches members consistent hash drawback compared link org distribution ch impl Default Consistent Hash Factory though potentially move lot segments rebalance strictly necessary taking advantage optimisation mentioned author Dan Berindei since public class Sync Consistent Hash Factory implements Consistent Hash Factory Default Consistent Hash private static final Log log Log Factory get Log Sync Consistent Hash Factory class public static final float f public static final float f Override public Default Consistent Hash create Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors check Capacity Factors members capacity Factors Builder builder create Builder hash Function num Owners num Segments members capacity Factors builder populate Owners num Segments builder copy Owners return new Default Consistent Hash hash Function num Owners num Segments members capacity Factors builder segment Owners Override public Default Consistent Hash Persistent State Scoped Persistent State state String consistent Hash Class state get Property consistent Hash Default Consistent Hash class get Name equals consistent Hash Class throw log persistent Consistent Hash Mismatch get Class get Name consistent Hash Class return new Default Consistent Hash state protected Builder create Builder Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors return new Builder hash Function num Owners num Segments members capacity Factors protected void check Capacity Factors List Address members Map Address Float capacity Factors capacity Factors null float total Capacity Address node members Float capacity Factor capacity Factors get node capacity Factor null capacity Factor throw new Illegal Argument Exception Invalid capacity factor node node total Capacity capacity Factor total Capacity throw new Illegal Argument Exception must least one node non zero capacity factor Override public Default Consistent Hash update Members Default Consistent Hash base List Address new Members Map Address Float actual Capacity Factors check Capacity Factors new Members actual Capacity Factors Consistent Hash Factory contract says return instance making changes boolean Capacity Factors actual Capacity Factors null base get Capacity Factors null actual Capacity Factors equals base get Capacity Factors new Members equals base get Members Capacity Factors return base int num Segments base get Num Segments int num Owners base get Num Owners assume leavers far fewer members makes sense check leavers Hash Set Address leavers new Hash Set Address base get Members leavers remove new Members Create new balanced case need allocate new owners segments owners Default Consistent Hash rebalanced null Remove leavers List Address new Segment Owners new List num Segments int num Segments List Address owners new Array List Address base locate Owners Segment owners remove leavers owners Empty new Segment Owners owners else segment owners fix rebalanced null rebalanced create base get Hash Function num Owners num Segments new Members actual Capacity Factors new Segment Owners rebalanced locate Owners Segment return new Default Consistent Hash base get Hash Function num Owners num Segments new Members actual Capacity Factors new Segment Owners Override public Default Consistent Hash rebalance Default Consistent Hash base Default Consistent Hash rebalanced create base get Hash Function base get Num Owners base get Num Segments base get Members base get Capacity Factors Consistent Hash Factory contract says return instance making changes rebalanced equals base return base return rebalanced Override public Default Consistent Hash union Default Consistent Hash ch Default Consistent Hash ch return ch union ch protected static class Builder protected final Hash hash Function protected final int num Owners protected final Map Address Float capacity Factors protected final int actual Num Owners protected final int num Segments protected final List Address sorted Members protected final int segment Size protected final List Address segment Owners protected final Ownership Statistics stats protected boolean ignore Max Segments protected Builder Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors hash Function hash Function num Segments num Segments num Owners num Owners actual Num Owners Math min num Owners members size sorted Members sort members capacity Factors capacity Factors populate Capacity Factors capacity Factors sorted Members segment Size Util get Segment Size num Segments segment Owners new List num Segments int num Segments segment Owners new Array List Address actual Num Owners stats new Ownership Statistics members private Map Address Float populate Capacity Factors Map Address Float capacity Factors List Address sorted Members capacity Factors null return capacity Factors Map Address Float real Capacity Factors new Hash Map Address member sorted Members real Capacity Factors put member f return real Capacity Factors protected void add Owner Check int segment Address owner segment Owners segment add owner stats inc Owned owner segment Owners segment size stats inc Primary Owned owner protected float compute Total Capacity capacity Factors null return sorted Members size float total Capacity Address member sorted Members Float capacity Factor capacity Factors get member total Capacity capacity Factor return total Capacity protected List Address sort List Address members final Map Address Float capacity Factors Array List Address result new Array List Address members Collections sort result new Comparator Address Override public int compare Address Address Sort descending capacity factor ascending address int capacity Comparison capacity Factors null capacity Factors get compare capacity Factors get return capacity Comparison capacity Comparison compare return result protected void copy Owners ignore Max Segments false Copy Owners ignore Max Segments true Copy Owners protected void Copy Owners primary owners already assigned sometimes backup owners well segment enough owners add owners previous segments int segment segment num Segments segment List Address owners segment Owners segment int additional Owners Segment next Segment segment Add Owners owners additional Owners Segment segment List Address additional Owners segment Owners additional Owners Segment Address additional Owner additional Owners add Backup Owner segment additional Owner Add Owners owners break additional Owners Segment next Segment additional Owners Segment protected boolean Add Owners List Address owners return owners size actual Num Owners protected int next Segment int segment segment num Segments return return segment protected void populate Owners int num Segments int virtual Node Loop already assigned primary owner segment Address member sorted Members int segment compute Segment member virtual Node add Primary Owner segment member virtual Node stats sum Primary Owned num Segments segments members may segments point Loop assigned least one segment member assigned num Owners owners segments virtual Node boolean members Zero Segments false Address member sorted Members stats get Owned member continue members Zero Segments true int segment compute Segment member virtual Node add Backup Owner segment member virtual Node members Zero Segments stats sum Owned num Segments private int compute Segment Address member int virtual Node Add virtual node count applying Murmur Hash node hash Code make badly spread test addresses int virtual Node Hash normalized Hash hash Function member hash Code virtual Node virtual Node Hash normalized Hash hash Function virtual Node Hash virtual Node return virtual Node Hash segment Size protected double compute Expected Segments Node Address node int num Copies Float node Capacity Factor capacity Factors get node node Capacity Factor return double remaining Capacity compute Total Capacity double remaining Copies num Copies num Segments Address sorted Members float capacity Factor capacity Factors get double node Segments capacity Factor remaining Capacity remaining Copies node Segments num Segments node Segments num Segments remaining Capacity capacity Factor remaining Copies node Segments node equals return node Segments else nodes less num Segments segments stop iteration node equals node Segments node Capacity Factor remaining Capacity remaining Copies return Math max node Segments throw new Illegal State Exception nodes collection include node protected boolean add Primary Owner int segment Address candidate List Address owners segment Owners segment owners Empty double expected Segments compute Expected Segments Node candidate long max Segments Math round Math ceil expected Segments stats get Primary Owned candidate max Segments add Owner Check segment candidate return true return false protected boolean add Backup Owner int segment Address candidate List Address owners segment Owners segment owners size actual Num Owners owners contains candidate ignore Max Segments double expected Segments compute Expected Segments Node candidate actual Num Owners long max Segments Math round Math ceil expected Segments stats get Owned candidate max Segments add Owner Check segment candidate return true else capacity Factors get candidate equals f add Owner Check segment candidate return true return false protected int normalized Hash Hash hash Function int hashcode return hash Function hash hashcode Integer Override public boolean equals Object return null get Class get Class Override public int hash Code return public static class Externalizer extends Abstract Externalizer Sync Consistent Hash Factory Override public void write Object Object Output output Sync Consistent Hash Factory chf Override Suppress Warnings unchecked public Sync Consistent Hash Factory read Object Object Input unmarshaller return new Sync Consistent Hash Factory Override public Integer get Id return Ids Override public Set Class extends Sync Consistent Hash Factory get Type Classes return Collections Class extends Sync Consistent Hash Factory singleton Sync Consistent Hash Factory class
package org distribution ch impl import java io Object Input import java io Object Output import java util Collections import java util List import java util Map import java util Set import org commons hash Hash import org commons marshall Abstract Externalizer import org distribution ch Consistent Hash Factory import org globalstate Scoped Persistent State import org marshall core Ids import org remoting transport Address import org util logging Log import org util logging Log Factory link Sync Consistent Hash Factory adapted replicated caches primary owner key replicated distributed caches author Dan Berindei since public class Sync Replicated Consistent Hash Factory implements Consistent Hash Factory Replicated Consistent Hash private static final Log log Log Factory get Log Sync Replicated Consistent Hash Factory class public static final float f public static final float f private static final Sync Consistent Hash Factory sync new Sync Consistent Hash Factory Override public Replicated Consistent Hash create Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors Default Consistent Hash dch sync create hash Function num Segments members null return replicated Default dch Override public Replicated Consistent Hash Persistent State Scoped Persistent State state String consistent Hash Class state get Property consistent Hash Replicated Consistent Hash class get Name equals consistent Hash Class throw log persistent Consistent Hash Mismatch get Class get Name consistent Hash Class return new Replicated Consistent Hash state private Replicated Consistent Hash replicated Default Default Consistent Hash dch int num Segments dch get Num Segments List Address members dch get Members int primary Owners new int num Segments int segment segment num Segments segment primary Owners segment members index dch locate Primary Owner Segment segment return new Replicated Consistent Hash dch get Hash Function members primary Owners Override public Replicated Consistent Hash update Members Replicated Consistent Hash base List Address new Members Map Address Float actual Capacity Factors Default Consistent Hash base default Replicated base Default Consistent Hash dch sync update Members base new Members null return replicated Default dch private Default Consistent Hash default Replicated Replicated Consistent Hash base int num Segments base get Num Segments List Address base Segment Owners new List num Segments int segment segment num Segments segment base Segment Owners segment Collections singleton List base locate Primary Owner Segment segment return new Default Consistent Hash base get Hash Function num Segments base get Members null base Segment Owners Override public Replicated Consistent Hash rebalance Replicated Consistent Hash base Default Consistent Hash base default Replicated base Default Consistent Hash dch sync rebalance base return replicated Default dch Override public Replicated Consistent Hash union Replicated Consistent Hash ch Replicated Consistent Hash ch return ch union ch public static class Externalizer extends Abstract Externalizer Sync Replicated Consistent Hash Factory Override public void write Object Object Output output Sync Replicated Consistent Hash Factory chf Override Suppress Warnings unchecked public Sync Replicated Consistent Hash Factory read Object Object Input unmarshaller return new Sync Replicated Consistent Hash Factory Override public Integer get Id return Ids Override public Set Class extends Sync Replicated Consistent Hash Factory get Type Classes return Collections Class extends Sync Replicated Consistent Hash Factory singleton Sync Replicated Consistent Hash Factory class
package org stream impl import java io Exception import java io Object Input import java io Object Output import java util Comparator import java util Double Summary Statistics import java util Int Summary Statistics import java util Long Summary Statistics import java util Optional Double import java util Optional Int import java util Optional Long import java util function Bi Consumer import java util function Bi Function import java util function Binary Operator import java util function Consumer import java util function Double Binary Operator import java util function Double Consumer import java util function Double Predicate import java util function Function import java util function Int Binary Operator import java util function Int Consumer import java util function Int Function import java util function Int Predicate import java util function Long Binary Operator import java util function Long Consumer import java util function Long Predicate import java util function Obj Double Consumer import java util function Obj Int Consumer import java util function Obj Long Consumer import java util function Predicate import java util function Supplier import java util stream Collector import java util stream Double Stream import java util stream Int Stream import java util stream Long Stream import java util stream Stream import org Cache import org Cache Stream import org Double Cache Stream import org Int Cache Stream import org Long Cache Stream import org commons marshall Externalizer import org commons marshall Serialize import org util logging Log import org util logging Log Factory Static factory class used provide marshallable terminal operations final class Terminal Functions private static final Log log Log Factory get Log Terminal Functions class private Terminal Functions public static Function Stream Boolean Match Function Predicate super predicate return new Match Function predicate public static Function Double Stream Boolean Match Function Double Predicate predicate return new Match Double Function predicate public static Function Int Stream Boolean Match Function Int Predicate predicate return new Match Int Function predicate public static Function Long Stream Boolean Match Function Long Predicate predicate return new Match Long Function predicate public static Function Stream Boolean Match Function Predicate super predicate return new Match Function predicate public static Function Double Stream Boolean Match Function Double Predicate predicate return new Match Double Function predicate public static Function Int Stream Boolean Match Function Int Predicate predicate return new Match Int Function predicate public static Function Long Stream Boolean Match Function Long Predicate predicate return new Match Long Function predicate public static Function Double Stream double average Double Function return Average Double Function get Instance public static Function Int Stream long average Int Function return Average Int Function get Instance public static Function Long Stream long average Long Function return Average Long Function get Instance public static Function Stream collect Function Supplier supplier Bi Consumer super accumulator Bi Consumer combiner return new Collect Function supplier accumulator combiner public static Function Double Stream collect Function Supplier supplier Obj Double Consumer accumulator Bi Consumer combiner return new Collect Double Function supplier accumulator combiner public static Function Int Stream collect Function Supplier supplier Obj Int Consumer accumulator Bi Consumer combiner return new Collect Int Function supplier accumulator combiner public static Function Long Stream collect Function Supplier supplier Obj Long Consumer accumulator Bi Consumer combiner return new Collect Long Function supplier accumulator combiner public static Function Stream collector Function Collector super collector return new Collector Function collector public static Function Stream Long count Function return Count Function get Instance public static Function Double Stream Long count Double Function return Count Double Function get Instance public static Function Int Stream Long count Int Function return Count Int Function get Instance public static Function Long Stream Long count Long Function return Count Long Function get Instance public static Function Stream find Function return Find Function get Instance public static Function Double Stream Double find Double Function return Find Double Function get Instance public static Function Int Stream Integer find Int Function return Find Int Function get Instance public static Function Long Stream Long find Long Function return Find Long Function get Instance public static Function Stream Void Function Consumer super consumer return new Function consumer public static Function Cache Stream Void Function Bi Consumer Cache super consumer return new Bi Consumer Function consumer public static Function Double Stream Void Function Double Consumer consumer return new Double Function consumer public static Function Double Cache Stream Void Function Obj Double Consumer Cache consumer return new Obj Double Function consumer public static Function Int Stream Void Function Int Consumer consumer return new Int Function consumer public static Function Int Cache Stream Void Function Obj Int Consumer Cache consumer return new Obj Int Function consumer public static Function Long Stream Void Function Long Consumer consumer return new Long Function consumer public static Function Long Cache Stream Void Function Obj Long Consumer Cache consumer return new Obj Long Function consumer public static Function Stream max Function Comparator super comparator return new Max Function comparator public static Function Double Stream Double max Double Function return Max Double Function get Instance public static Function Int Stream Integer max Int Function return Max Int Function get Instance public static Function Long Stream Long max Long Function return Max Long Function get Instance public static Function Stream min Function Comparator super comparator return new Min Function comparator public static Function Double Stream Double min Double Function return Min Double Function get Instance public static Function Int Stream Integer min Int Function return Min Int Function get Instance public static Function Long Stream Long min Long Function return Min Long Function get Instance public static Function Stream Boolean none Match Function Predicate super predicate return new None Match Function predicate public static Function Double Stream Boolean none Match Function Double Predicate predicate return new None Match Double Function predicate public static Function Int Stream Boolean none Match Function Int Predicate predicate return new None Match Int Function predicate public static Function Long Stream Boolean none Match Function Long Predicate predicate return new None Match Long Function predicate public static Function Stream reduce Function Binary Operator accumulator return new Reduce Function accumulator public static Function Double Stream Double reduce Function Double Binary Operator accumulator return new Reduce Double Function accumulator public static Function Int Stream Integer reduce Function Int Binary Operator accumulator return new Reduce Int Function accumulator public static Function Long Stream Long reduce Function Long Binary Operator accumulator return new Reduce Long Function accumulator public static Function Stream reduce Function identity Binary Operator accumulator return new Identity Reduce Function identity accumulator public static Function Double Stream Double reduce Function double identity Double Binary Operator accumulator return new Identity Reduce Double Function identity accumulator public static Function Int Stream Integer reduce Function int identity Int Binary Operator accumulator return new Identity Reduce Int Function identity accumulator public static Function Long Stream Long reduce Function long identity Long Binary Operator accumulator return new Identity Reduce Long Function identity accumulator public static Function Stream reduce Function identity Bi Function super accumulator Binary Operator combiner return new Identity Reduce Combiner Function identity accumulator combiner public static Function Double Stream Double sum Double Function return Sum Double Function get Instance public static Function Int Stream Integer sum Int Function return Sum Int Function get Instance public static Function Long Stream Long sum Long Function return Sum Long Function get Instance public static Function Double Stream Double Summary Statistics summary Statistics Double Function return Summary Statistics Double Function get Instance public static Function Long Stream Long Summary Statistics summary Statistics Long Function return Summary Statistics Long Function get Instance public static Function Int Stream Int Summary Statistics summary Statistics Int Function return Summary Statistics Int Function get Instance public static Function Stream Object Array Function return Array Function get Instance public static Function Double Stream double Array Double Function return Array Double Function get Instance public static Function Int Stream int Array Int Function return Array Int Function get Instance public static Function Long Stream long Array Long Function return Array Long Function get Instance public static Function Stream Array Function Int Function generator return new Array Generator Function generator Serialize value Match Function Match Function Externalizer class private static final class Match Function implements Function Stream Boolean private final Predicate super predicate private Match Function Predicate super predicate predicate predicate Override public Boolean apply Stream stream return stream Match predicate public static final class Match Function Externalizer implements Externalizer Match Function Override public void write Object Object Output output Match Function object throws Exception output write Object object predicate Override public Match Function read Object Object Input input throws Exception Class Found Exception return new Match Function Predicate input read Object Serialize value Match Double Function Match Double Function Externalizer class private static final class Match Double Function implements Function Double Stream Boolean private final Double Predicate predicate private Match Double Function Double Predicate predicate predicate predicate Override public Boolean apply Double Stream stream return stream Match predicate public static final class Match Double Function Externalizer implements Externalizer Match Double Function Override public void write Object Object Output output Match Double Function object throws Exception output write Object object predicate Override public Match Double Function read Object Object Input input throws Exception Class Found Exception return new Match Double Function Double Predicate input read Object Serialize value Match Int Function Match Int Function Externalizer class private static final class Match Int Function implements Function Int Stream Boolean private final Int Predicate predicate private Match Int Function Int Predicate predicate predicate predicate Override public Boolean apply Int Stream stream return stream Match predicate public static final class Match Int Function Externalizer implements Externalizer Match Int Function Override public void write Object Object Output output Match Int Function object throws Exception output write Object object predicate Override public Match Int Function read Object Object Input input throws Exception Class Found Exception return new Match Int Function Int Predicate input read Object Serialize value Match Long Function Match Long Function Externalizer class private static final class Match Long Function implements Function Long Stream Boolean private final Long Predicate predicate private Match Long Function Long Predicate predicate predicate predicate Override public Boolean apply Long Stream stream return stream Match predicate public static final class Match Long Function Externalizer implements Externalizer Match Long Function Override public void write Object Object Output output Match Long Function object throws Exception output write Object object predicate Override public Match Long Function read Object Object Input input throws Exception Class Found Exception return new Match Long Function Long Predicate input read Object Serialize value Match Function Match Function Externalizer class private static final class Match Function implements Function Stream Boolean private final Predicate super predicate private Match Function Predicate super predicate predicate predicate Override public Boolean apply Stream stream return stream Match predicate public static final class Match Function Externalizer implements Externalizer Match Function Override public void write Object Object Output output Match Function object throws Exception output write Object object predicate Override public Match Function read Object Object Input input throws Exception Class Found Exception return new Match Function Predicate input read Object Serialize value Match Double Function Match Double Function Externalizer class private static final class Match Double Function implements Function Double Stream Boolean private final Double Predicate predicate private Match Double Function Double Predicate predicate predicate predicate Override public Boolean apply Double Stream stream return stream Match predicate public static final class Match Double Function Externalizer implements Externalizer Match Double Function Override public void write Object Object Output output Match Double Function object throws Exception output write Object object predicate Override public Match Double Function read Object Object Input input throws Exception Class Found Exception return new Match Double Function Double Predicate input read Object Serialize value Match Int Function Match Int Function Externalizer class private static final class Match Int Function implements Function Int Stream Boolean private final Int Predicate predicate private Match Int Function Int Predicate predicate predicate predicate Override public Boolean apply Int Stream stream return stream Match predicate public static final class Match Int Function Externalizer implements Externalizer Match Int Function Override public void write Object Object Output output Match Int Function object throws Exception output write Object object predicate Override public Match Int Function read Object Object Input input throws Exception Class Found Exception return new Match Int Function Int Predicate input read Object Serialize value Match Long Function Match Long Function Externalizer class private static final class Match Long Function implements Function Long Stream Boolean private final Long Predicate predicate private Match Long Function Long Predicate predicate predicate predicate Override public Boolean apply Long Stream stream return stream Match predicate public static final class Match Long Function Externalizer implements Externalizer Match Long Function Override public void write Object Object Output output Match Long Function object throws Exception output write Object object predicate Override public Match Long Function read Object Object Input input throws Exception Class Found Exception return new Match Long Function Long Predicate input read Object Serialize value Average Double Function Average Double Function Externalizer class private static final class Average Double Function implements Function Double Stream double private static final Average Double Function new Average Double Function private Average Double Function public static Average Double Function get Instance return Override public double apply Double Stream stream Double Summary Statistics stats stream summary Statistics return new double stats get Sum stats get Count public static final class Average Double Function Externalizer implements Externalizer Average Double Function Override public void write Object Object Output output Average Double Function object throws Exception Override public Average Double Function read Object Object Input input throws Exception Class Found Exception return get Instance Serialize value Average Int Function Average Int Function Externalizer class private static final class Average Int Function implements Function Int Stream long private static final Average Int Function new Average Int Function private Average Int Function public static Average Int Function get Instance return Override public long apply Int Stream stream Int Summary Statistics stats stream summary Statistics return new long stats get Sum stats get Count public static final class Average Int Function Externalizer implements Externalizer Average Int Function Override public void write Object Object Output output Average Int Function object throws Exception Override public Average Int Function read Object Object Input input throws Exception Class Found Exception return get Instance Serialize value Average Long Function Average Long Function Externalizer class private static final class Average Long Function implements Function Long Stream long private static final Average Long Function new Average Long Function private Average Long Function public static Average Long Function get Instance return Override public long apply Long Stream stream Long Summary Statistics stats stream summary Statistics return new long stats get Sum stats get Count public static final class Average Long Function Externalizer implements Externalizer Average Long Function Override public void write Object Object Output output Average Long Function object throws Exception Override public Average Long Function read Object Object Input input throws Exception Class Found Exception return get Instance Serialize value Count Function Count Function Externalizer class private static final class Count Function implements Function Stream Long private static final Count Function new Count Function private Count Function public static Count Function get Instance return Count Function Override public Long apply Stream stream long count stream count log tracef Count value count return count public static final class Count Function Externalizer implements Externalizer Count Function Override public void write Object Object Output output Count Function object throws Exception Override public Count Function read Object Object Input input throws Exception Class Found Exception return get Instance Serialize value Count Double Function Count Double Function Externalizer class private static final class Count Double Function implements Function Double Stream Long private static final Count Double Function new Count Double Function private Count Double Function public static Count Double Function get Instance return Count Double Function Override public Long apply Double Stream stream return stream count public static final class Count Double Function Externalizer implements Externalizer Count Double Function Override public void write Object Object Output output Count Double Function object throws Exception Override public Count Double Function read Object Object Input input throws Exception Class Found Exception return get Instance Serialize value Count Int Function Count Int Function Externalizer class private static final class Count Int Function implements Function Int Stream Long private static final Count Int Function new Count Int Function private Count Int Function public static Count Int Function get Instance return Count Int Function Override public Long apply Int Stream stream return stream count public static final class Count Int Function Externalizer implements Externalizer Count Int Function Override public void write Object Object Output output Count Int Function object throws Exception Override public Count Int Function read Object Object Input input throws Exception Class Found Exception return get Instance Serialize value Count Long Function Count Long Function Externalizer class private static final class Count Long Function implements Function Long Stream Long private static final Count Long Function new Count Long Function private Count Long Function public static Count Long Function get Instance return Count Long Function Override public Long apply Long Stream stream return stream count public static final class Count Long Function Externalizer implements Externalizer Count Long Function Override public void write Object Object Output output Count Long Function object throws Exception Override public Count Long Function read Object Object Input input throws Exception Class Found Exception return get Instance Serialize value Find Function Find Function Externalizer class private static final class Find Function implements Function Stream private static final Find Function new Find Function private Find Function public static Find Function get Instance return Find Function Override public apply Stream stream return stream find Else null public static final class Find Function Externalizer implements Externalizer Find Function Override public void write Object Object Output output Find Function object throws Exception Override public Find Function read Object Object Input input throws Exception Class Found Exception return get Instance Serialize value Find Double Function Find Double Function Externalizer class private static final class Find Double Function implements Function Double Stream Double private static final Find Double Function new Find Double Function private Find Double Function public static Find Double Function get Instance return Find Double Function Override public Double apply Double Stream stream Optional Double stream find Present return get Double else return null public static final class Find Double Function Externalizer implements Externalizer Find Double Function Override public void write Object Object Output output Find Double Function object throws Exception Override public Find Double Function read Object Object Input input throws Exception Class Found Exception return get Instance Serialize value Find Int Function Find Int Function Externalizer class private static final class Find Int Function implements Function Int Stream Integer private static final Find Int Function new Find Int Function private Find Int Function public static Find Int Function get Instance return Find Int Function Override public Integer apply Int Stream stream Optional Int stream find Present return get Int else return null public static final class Find Int Function Externalizer implements Externalizer Find Int Function Override public void write Object Object Output output Find Int Function object throws Exception Override public Find Int Function read Object Object Input input throws Exception Class Found Exception return get Instance Serialize value Find Long Function Find Long Function Externalizer class private static final class Find Long Function implements Function Long Stream Long private static final Find Long Function new Find Long Function private Find Long Function public static Find Long Function get Instance return Find Long Function Override public Long apply Long Stream stream Optional Long stream find Present return get Long else return null public static final class Find Long Function Externalizer implements Externalizer Find Long Function Override public void write Object Object Output output Find Long Function object throws Exception Override public Find Long Function read Object Object Input input throws Exception Class Found Exception return get Instance Serialize value None Match Function None Match Function Externalizer class private static final class None Match Function implements Function Stream Boolean private final Predicate super predicate private None Match Function Predicate super predicate predicate predicate Override public Boolean apply Stream stream return stream none Match predicate public static final class None Match Function Externalizer implements Externalizer None Match Function Override public void write Object Object Output output None Match Function object throws Exception output write Object object predicate Override public None Match Function read Object Object Input input throws Exception Class Found Exception return new None Match Function Predicate input read Object Serialize value None Match Double Function None Match Double Function Externalizer class private static final class None Match Double Function implements Function Double Stream Boolean private final Double Predicate predicate private None Match Double Function Double Predicate predicate predicate predicate Override public Boolean apply Double Stream stream return stream none Match predicate public static final class None Match Double Function Externalizer implements Externalizer None Match Double Function Override public void write Object Object Output output None Match Double Function object throws Exception output write Object object predicate Override public None Match Double Function read Object Object Input input throws Exception Class Found Exception return new None Match Double Function Double Predicate input read Object Serialize value None Match Int Function None Match Int Function Externalizer class private static final class None Match Int Function implements Function Int Stream Boolean private final Int Predicate predicate private None Match Int Function Int Predicate predicate predicate predicate Override public Boolean apply Int Stream stream return stream none Match predicate public static final class None Match Int Function Externalizer implements Externalizer None Match Int Function Override public void write Object Object Output output None Match Int Function object throws Exception output write Object object predicate Override public None Match Int Function read Object Object Input input throws Exception Class Found Exception return new None Match Int Function Int Predicate input read Object Serialize value None Match Long Function None Match Long Function Externalizer class private static final class None Match Long Function implements Function Long Stream Boolean private final Long Predicate predicate private None Match Long Function Long Predicate predicate predicate predicate Override public Boolean apply Long Stream stream return stream none Match predicate public static final class None Match Long Function Externalizer implements Externalizer None Match Long Function Override public void write Object Object Output output None Match Long Function object throws Exception output write Object object predicate Override public None Match Long Function read Object Object Input input throws Exception Class Found Exception return new None Match Long Function Long Predicate input read Object Serialize value Collect Function Collect Function Externalizer class private static final class Collect Function implements Function Stream private final Supplier supplier private final Bi Consumer super accumulator private final Bi Consumer combiner private Collect Function Supplier supplier Bi Consumer super accumulator Bi Consumer combiner supplier supplier accumulator accumulator combiner combiner Override public apply Stream stream return stream collect supplier accumulator combiner public static final class Collect Function Externalizer implements Externalizer Collect Function Override public void write Object Object Output output Collect Function object throws Exception output write Object object supplier output write Object object accumulator output write Object object combiner Override public Collect Function read Object Object Input input throws Exception Class Found Exception return new Collect Function Supplier input read Object Bi Consumer input read Object Bi Consumer input read Object Serialize value Collect Double Function Collect Double Function Externalizer class private static final class Collect Double Function implements Function Double Stream private final Supplier supplier private final Obj Double Consumer accumulator private final Bi Consumer combiner private Collect Double Function Supplier supplier Obj Double Consumer accumulator Bi Consumer combiner supplier supplier accumulator accumulator combiner combiner Override public apply Double Stream stream return stream collect supplier accumulator combiner public static final class Collect Double Function Externalizer implements Externalizer Collect Double Function Override public void write Object Object Output output Collect Double Function object throws Exception output write Object object supplier output write Object object accumulator output write Object object combiner Override public Collect Double Function read Object Object Input input throws Exception Class Found Exception return new Collect Double Function Supplier input read Object Obj Double Consumer input read Object Bi Consumer input read Object Serialize value Collect Int Function Collect Int Function Externalizer class private static final class Collect Int Function implements Function Int Stream private final Supplier supplier private final Obj Int Consumer accumulator private final Bi Consumer combiner private Collect Int Function Supplier supplier Obj Int Consumer accumulator Bi Consumer combiner supplier supplier accumulator accumulator combiner combiner Override public apply Int Stream stream return stream collect supplier accumulator combiner public static final class Collect Int Function Externalizer implements Externalizer Collect Int Function Override public void write Object Object Output output Collect Int Function object throws Exception output write Object object supplier output write Object object accumulator output write Object object combiner Override public Collect Int Function read Object Object Input input throws Exception Class Found Exception return new Collect Int Function Supplier input read Object Obj Int Consumer input read Object Bi Consumer input read Object Serialize value Collect Long Function Collect Long Function Externalizer class private static final class Collect Long Function implements Function Long Stream private final Supplier supplier private final Obj Long Consumer accumulator private final Bi Consumer combiner private Collect Long Function Supplier supplier Obj Long Consumer accumulator Bi Consumer combiner supplier supplier accumulator accumulator combiner combiner Override public apply Long Stream stream return stream collect supplier accumulator combiner public static final class Collect Long Function Externalizer implements Externalizer Collect Long Function Override public void write Object Object Output output Collect Long Function object throws Exception output write Object object supplier output write Object object accumulator output write Object object combiner Override public Collect Long Function read Object Object Input input throws Exception Class Found Exception return new Collect Long Function Supplier input read Object Obj Long Consumer input read Object Bi Consumer input read Object Serialize value Collector Function Collector Function Externalizer class private static final class Collector Function implements Function Stream private final Collector super collector private Collector Function Collector super collector collector collector Override public apply Stream stream return stream collect collector public static final class Collector Function Externalizer implements Externalizer Collector Function Override public void write Object Object Output output Collector Function object throws Exception output write Object object collector Override public Collector Function read Object Object Input input throws Exception Class Found Exception return new Collector Function Collector input read Object Serialize value Function Function Externalizer class private static final class Function implements Function Stream Void private final Consumer super consumer private Function Consumer super consumer consumer consumer Override public Void apply Stream stream stream consumer return null public static final class Function Externalizer implements Externalizer Function Override public void write Object Object Output output Function object throws Exception output write Object object consumer Override public Function read Object Object Input input throws Exception Class Found Exception return new Function Consumer input read Object Serialize value Bi Consumer Function Bi Consumer Function Externalizer class private static final class Bi Consumer Function implements Function Cache Stream Void private final Bi Consumer Cache super consumer private Bi Consumer Function Bi Consumer Cache super consumer consumer consumer Override public Void apply Cache Stream stream stream consumer return null public static final class Bi Consumer Function Externalizer implements Externalizer Bi Consumer Function Override public void write Object Object Output output Bi Consumer Function object throws Exception output write Object object consumer Override public Bi Consumer Function read Object Object Input input throws Exception Class Found Exception return new Bi Consumer Function Bi Consumer input read Object Serialize value Double Function Double Function Externalizer class private static final class Double Function implements Function Double Stream Void private final Double Consumer consumer private Double Function Double Consumer consumer consumer consumer Override public Void apply Double Stream stream stream consumer return null public static final class Double Function Externalizer implements Externalizer Double Function Override public void write Object Object Output output Double Function object throws Exception output write Object object consumer Override public Double Function read Object Object Input input throws Exception Class Found Exception return new Double Function Double Consumer input read Object Serialize value Obj Double Function Obj Double Function Externalizer class private static final class Obj Double Function implements Function Double Cache Stream Void private final Obj Double Consumer Cache consumer private Obj Double Function Obj Double Consumer Cache consumer consumer consumer Override public Void apply Double Cache Stream stream stream consumer return null public static final class Obj Double Function Externalizer implements Externalizer Obj Double Function Override public void write Object Object Output output Obj Double Function object throws Exception output write Object object consumer Override public Obj Double Function read Object Object Input input throws Exception Class Found Exception return new Obj Double Function Obj Double Consumer input read Object Serialize value Int Function Int Function Externalizer class private static final class Int Function implements Function Int Stream Void private final Int Consumer consumer private Int Function Int Consumer consumer consumer consumer Override public Void apply Int Stream stream stream consumer return null public static final class Int Function Externalizer implements Externalizer Int Function Override public void write Object Object Output output Int Function object throws Exception output write Object object consumer Override public Int Function read Object Object Input input throws Exception Class Found Exception return new Int Function Int Consumer input read Object Serialize value Obj Int Function Obj Int Function Externalizer class private static final class Obj Int Function implements Function Int Cache Stream Void private final Obj Int Consumer Cache consumer private Obj Int Function Obj Int Consumer Cache consumer consumer consumer Override public Void apply Int Cache Stream stream stream consumer return null public static final class Obj Int Function Externalizer implements Externalizer Obj Int Function Override public void write Object Object Output output Obj Int Function object throws Exception output write Object object consumer Override public Obj Int Function read Object Object Input input throws Exception Class Found Exception return new Obj Int Function Obj Int Consumer input read Object Serialize value Long Function Long Function Externalizer class private static final class Long Function implements Function Long Stream Void private final Long Consumer consumer private Long Function Long Consumer consumer consumer consumer Override public Void apply Long Stream stream stream consumer return null public static final class Long Function Externalizer implements Externalizer Long Function Override public void write Object Object Output output Long Function object throws Exception output write Object object consumer Override public Long Function read Object Object Input input throws Exception Class Found Exception return new Long Function Long Consumer input read Object Serialize value Obj Long Function Obj Long Function Externalizer class private static final class Obj Long Function implements Function Long Cache Stream Void private final Obj Long Consumer Cache consumer private Obj Long Function Obj Long Consumer Cache consumer consumer consumer Override public Void apply Long Cache Stream stream stream consumer return null public static final class Obj Long Function Externalizer implements Externalizer Obj Long Function Override public void write Object Object Output output Obj Long Function object throws Exception output write Object object consumer Override public Obj Long Function read Object Object Input input throws Exception Class Found Exception return new Obj Long Function Obj Long Consumer input read Object Serialize value Max Function Max Function Externalizer class private static final class Max Function implements Function Stream private final Comparator super comparator private Max Function Comparator super comparator comparator comparator Override public apply Stream stream return stream max comparator Else null public static final class Max Function Externalizer implements Externalizer Max Function Override public void write Object Object Output output Max Function object throws Exception output write Object object comparator Override public Max Function read Object Object Input input throws Exception Class Found Exception return new Max Function Comparator input read Object Serialize value Max Double Function Max Double Function Externalizer class private static final class Max Double Function implements Function Double Stream Double private static final Max Double Function new Max Double Function private Max Double Function public static Max Double Function get Instance return Override public Double apply Double Stream stream Optional Double op stream max op Present return op get Double else return null public static final class Max Double Function Externalizer implements Externalizer Max Double Function Override public void write Object Object Output output Max Double Function object throws Exception Override public Max Double Function read Object Object Input input throws Exception Class Found Exception return Max Double Function get Instance Serialize value Max Int Function Max Int Function Externalizer class private static final class Max Int Function implements Function Int Stream Integer private static final Max Int Function new Max Int Function private Max Int Function public static Max Int Function get Instance return Override public Integer apply Int Stream stream Optional Int op stream max op Present return op get Int else return null public static final class Max Int Function Externalizer implements Externalizer Max Int Function Override public void write Object Object Output output Max Int Function object throws Exception Override public Max Int Function read Object Object Input input throws Exception Class Found Exception return Max Int Function get Instance Serialize value Max Long Function Max Long Function Externalizer class private static final class Max Long Function implements Function Long Stream Long private static final Max Long Function new Max Long Function private Max Long Function public static Max Long Function get Instance return Override public Long apply Long Stream stream Optional Long op stream max op Present return op get Long else return null public static final class Max Long Function Externalizer implements Externalizer Max Long Function Override public void write Object Object Output output Max Long Function object throws Exception Override public Max Long Function read Object Object Input input throws Exception Class Found Exception return Max Long Function get Instance Serialize value Min Function Min Function Externalizer class private static final class Min Function implements Function Stream private final Comparator super comparator private Min Function Comparator super comparator comparator comparator Override public apply Stream stream return stream min comparator Else null public static final class Min Function Externalizer implements Externalizer Min Function Override public void write Object Object Output output Min Function object throws Exception output write Object object comparator Override public Min Function read Object Object Input input throws Exception Class Found Exception return new Min Function Comparator input read Object Serialize value Min Double Function Min Double Function Externalizer class private static final class Min Double Function implements Function Double Stream Double private static final Min Double Function new Min Double Function private Min Double Function public static Min Double Function get Instance return Override public Double apply Double Stream stream Optional Double op stream min op Present return op get Double else return null public static final class Min Double Function Externalizer implements Externalizer Min Double Function Override public void write Object Object Output output Min Double Function object throws Exception Override public Min Double Function read Object Object Input input throws Exception Class Found Exception return Min Double Function get Instance Serialize value Min Int Function Min Int Function Externalizer class private static final class Min Int Function implements Function Int Stream Integer private static final Min Int Function new Min Int Function private Min Int Function public static Min Int Function get Instance return Override public Integer apply Int Stream stream Optional Int op stream min op Present return op get Int else return null public static final class Min Int Function Externalizer implements Externalizer Min Int Function Override public void write Object Object Output output Min Int Function object throws Exception Override public Min Int Function read Object Object Input input throws Exception Class Found Exception return Min Int Function get Instance Serialize value Min Long Function Min Long Function Externalizer class private static final class Min Long Function implements Function Long Stream Long private static final Min Long Function new Min Long Function private Min Long Function public static Min Long Function get Instance return Override public Long apply Long Stream stream Optional Long op stream min op Present return op get Long else return null public static final class Min Long Function Externalizer implements Externalizer Min Long Function Override public void write Object Object Output output Min Long Function object throws Exception Override public Min Long Function read Object Object Input input throws Exception Class Found Exception return Min Long Function get Instance Serialize value Reduce Function Reduce Function Externalizer class private static final class Reduce Function implements Function Stream private final Binary Operator accumulator private Reduce Function Binary Operator accumulator accumulator accumulator Override public apply Stream stream return stream reduce accumulator Else null public static final class Reduce Function Externalizer implements Externalizer Reduce Function Override public void write Object Object Output output Reduce Function object throws Exception output write Object object accumulator Override public Reduce Function read Object Object Input input throws Exception Class Found Exception return new Reduce Function Binary Operator input read Object Serialize value Reduce Double Function Reduce Double Function Externalizer class private static final class Reduce Double Function implements Function Double Stream Double private final Double Binary Operator accumulator private Reduce Double Function Double Binary Operator accumulator accumulator accumulator Override public Double apply Double Stream stream Optional Double optional Int stream reduce accumulator optional Int Present return optional Int get Double else return null public static final class Reduce Double Function Externalizer implements Externalizer Reduce Double Function Override public void write Object Object Output output Reduce Double Function object throws Exception output write Object object accumulator Override public Reduce Double Function read Object Object Input input throws Exception Class Found Exception return new Reduce Double Function Double Binary Operator input read Object Serialize value Reduce Int Function Reduce Int Function Externalizer class private static final class Reduce Int Function implements Function Int Stream Integer private final Int Binary Operator accumulator private Reduce Int Function Int Binary Operator accumulator accumulator accumulator Override public Integer apply Int Stream stream Optional Int optional Int stream reduce accumulator optional Int Present return optional Int get Int else return null public static final class Reduce Int Function Externalizer implements Externalizer Reduce Int Function Override public void write Object Object Output output Reduce Int Function object throws Exception output write Object object accumulator Override public Reduce Int Function read Object Object Input input throws Exception Class Found Exception return new Reduce Int Function Int Binary Operator input read Object Serialize value Reduce Long Function Reduce Long Function Externalizer class private static final class Reduce Long Function implements Function Long Stream Long private final Long Binary Operator accumulator private Reduce Long Function Long Binary Operator accumulator accumulator accumulator Override public Long apply Long Stream stream Optional Long optional Int stream reduce accumulator optional Int Present return optional Int get Long else return null public static final class Reduce Long Function Externalizer implements Externalizer Reduce Long Function Override public void write Object Object Output output Reduce Long Function object throws Exception output write Object object accumulator Override public Reduce Long Function read Object Object Input input throws Exception Class Found Exception return new Reduce Long Function Long Binary Operator input read Object Serialize value Identity Reduce Function Identity Reduct Function Externalizer class private static final class Identity Reduce Function implements Function Stream private final identity private final Binary Operator accumulator private Identity Reduce Function identity Binary Operator accumulator identity identity accumulator accumulator Override public apply Stream stream return stream reduce identity accumulator public static final class Identity Reduct Function Externalizer implements Externalizer Identity Reduce Function Override public void write Object Object Output output Identity Reduce Function object throws Exception output write Object object identity output write Object object accumulator Override public Identity Reduce Function read Object Object Input input throws Exception Class Found Exception return new Identity Reduce Function input read Object Binary Operator input read Object Serialize value Identity Reduce Double Function Identity Reduct Function Externalizer class private static final class Identity Reduce Double Function implements Function Double Stream Double private final double identity private final Double Binary Operator accumulator private Identity Reduce Double Function double identity Double Binary Operator accumulator identity identity accumulator accumulator Override public Double apply Double Stream stream return stream reduce identity accumulator public static final class Identity Reduct Function Externalizer implements Externalizer Identity Reduce Double Function Override public void write Object Object Output output Identity Reduce Double Function object throws Exception output write Double object identity output write Object object accumulator Override public Identity Reduce Double Function read Object Object Input input throws Exception Class Found Exception return new Identity Reduce Double Function input read Double Double Binary Operator input read Object Serialize value Identity Reduce Int Function Identity Reduct Function Externalizer class private static final class Identity Reduce Int Function implements Function Int Stream Integer private final int identity private final Int Binary Operator accumulator private Identity Reduce Int Function int identity Int Binary Operator accumulator identity identity accumulator accumulator Override public Integer apply Int Stream stream return stream reduce identity accumulator public static final class Identity Reduct Function Externalizer implements Externalizer Identity Reduce Int Function Override public void write Object Object Output output Identity Reduce Int Function object throws Exception output write Int object identity output write Object object accumulator Override public Identity Reduce Int Function read Object Object Input input throws Exception Class Found Exception return new Identity Reduce Int Function input read Int Int Binary Operator input read Object Serialize value Identity Reduce Long Function Identity Reduct Function Externalizer class private static final class Identity Reduce Long Function implements Function Long Stream Long private final long identity private final Long Binary Operator accumulator private Identity Reduce Long Function long identity Long Binary Operator accumulator identity identity accumulator accumulator Override public Long apply Long Stream stream return stream reduce identity accumulator public static final class Identity Reduct Function Externalizer implements Externalizer Identity Reduce Long Function Override public void write Object Object Output output Identity Reduce Long Function object throws Exception output write Long object identity output write Object object accumulator Override public Identity Reduce Long Function read Object Object Input input throws Exception Class Found Exception return new Identity Reduce Long Function input read Long Long Binary Operator input read Object Serialize value Identity Reduce Combiner Function Identity Reduct Function Externalizer class private static final class Identity Reduce Combiner Function implements Function Stream private final identity private final Bi Function super accumulator private final Binary Operator combiner private Identity Reduce Combiner Function identity Bi Function super accumulator Binary Operator combiner identity identity accumulator accumulator combiner combiner Override public apply Stream stream return stream reduce identity accumulator combiner public static final class Identity Reduct Function Externalizer implements Externalizer Identity Reduce Combiner Function Override public void write Object Object Output output Identity Reduce Combiner Function object throws Exception output write Object object identity output write Object object accumulator output write Object object combiner Override public Identity Reduce Combiner Function read Object Object Input input throws Exception Class Found Exception return new Identity Reduce Combiner Function input read Object Bi Function input read Object Binary Operator input read Object Serialize value Sum Double Function Sum Double Function Externalizer class private static final class Sum Double Function implements Function Double Stream Double private static final Sum Double Function new Sum Double Function private Sum Double Function public static Sum Double Function get Instance return Override public Double apply Double Stream stream return stream sum public static final class Sum Double Function Externalizer implements Externalizer Sum Double Function Override public void write Object Object Output output Sum Double Function object throws Exception Override public Sum Double Function read Object Object Input input throws Exception Class Found Exception return Sum Double Function get Instance Serialize value Sum Int Function Sum Int Function Externalizer class private static final class Sum Int Function implements Function Int Stream Integer private static final Sum Int Function new Sum Int Function private Sum Int Function public static Sum Int Function get Instance return Override public Integer apply Int Stream stream return stream sum public static final class Sum Int Function Externalizer implements Externalizer Sum Int Function Override public void write Object Object Output output Sum Int Function object throws Exception Override public Sum Int Function read Object Object Input input throws Exception Class Found Exception return Sum Int Function get Instance Serialize value Sum Long Function Sum Long Function Externalizer class private static final class Sum Long Function implements Function Long Stream Long private static final Sum Long Function new Sum Long Function private Sum Long Function public static Sum Long Function get Instance return Override public Long apply Long Stream stream return stream sum public static final class Sum Long Function Externalizer implements Externalizer Sum Long Function Override public void write Object Object Output output Sum Long Function object throws Exception Override public Sum Long Function read Object Object Input input throws Exception Class Found Exception return Sum Long Function get Instance Serialize value Summary Statistics Double Function Summary Statistics Double Function Externalizer class private static final class Summary Statistics Double Function implements Function Double Stream Double Summary Statistics private static final Summary Statistics Double Function new Summary Statistics Double Function private Summary Statistics Double Function public static Summary Statistics Double Function get Instance return Override public Double Summary Statistics apply Double Stream stream return stream summary Statistics public static final class Summary Statistics Double Function Externalizer implements Externalizer Summary Statistics Double Function Override public void write Object Object Output output Summary Statistics Double Function object throws Exception Override public Summary Statistics Double Function read Object Object Input input throws Exception Class Found Exception return Summary Statistics Double Function get Instance Serialize value Summary Statistics Int Function Summary Statistics Int Function Externalizer class private static final class Summary Statistics Int Function implements Function Int Stream Int Summary Statistics private static final Summary Statistics Int Function new Summary Statistics Int Function private Summary Statistics Int Function public static Summary Statistics Int Function get Instance return Override public Int Summary Statistics apply Int Stream stream return stream summary Statistics public static final class Summary Statistics Int Function Externalizer implements Externalizer Summary Statistics Int Function Override public void write Object Object Output output Summary Statistics Int Function object throws Exception Override public Summary Statistics Int Function read Object Object Input input throws Exception Class Found Exception return Summary Statistics Int Function get Instance Serialize value Summary Statistics Long Function Summary Statistics Long Function Externalizer class private static final class Summary Statistics Long Function implements Function Long Stream Long Summary Statistics private static final Summary Statistics Long Function new Summary Statistics Long Function private Summary Statistics Long Function public static Summary Statistics Long Function get Instance return Override public Long Summary Statistics apply Long Stream stream return stream summary Statistics public static final class Summary Statistics Long Function Externalizer implements Externalizer Summary Statistics Long Function Override public void write Object Object Output output Summary Statistics Long Function object throws Exception Override public Summary Statistics Long Function read Object Object Input input throws Exception Class Found Exception return Summary Statistics Long Function get Instance Serialize value Array Function Array Function Externalizer class private static final class Array Function implements Function Stream Object private static final Array Function new Array Function private Array Function public static Array Function get Instance return Override public Object apply Stream stream return stream Array public static final class Array Function Externalizer implements Externalizer Array Function Override public void write Object Object Output output Array Function object throws Exception Override public Array Function read Object Object Input input throws Exception Class Found Exception return Array Function get Instance Serialize value Array Double Function Array Double Function Externalizer class private static final class Array Double Function implements Function Double Stream double private static final Array Double Function new Array Double Function private Array Double Function public static Array Double Function get Instance return Override public double apply Double Stream stream return stream Array public static final class Array Double Function Externalizer implements Externalizer Array Double Function Override public void write Object Object Output output Array Double Function object throws Exception Override public Array Double Function read Object Object Input input throws Exception Class Found Exception return Array Double Function get Instance Serialize value Array Int Function Array Int Function Externalizer class private static final class Array Int Function implements Function Int Stream int private static final Array Int Function new Array Int Function private Array Int Function public static Array Int Function get Instance return Override public int apply Int Stream stream return stream Array public static final class Array Int Function Externalizer implements Externalizer Array Int Function Override public void write Object Object Output output Array Int Function object throws Exception Override public Array Int Function read Object Object Input input throws Exception Class Found Exception return Array Int Function get Instance Serialize value Array Long Function Array Long Function Externalizer class private static final class Array Long Function implements Function Long Stream long private static final Array Long Function new Array Long Function private Array Long Function public static Array Long Function get Instance return Override public long apply Long Stream stream return stream Array public static final class Array Long Function Externalizer implements Externalizer Array Long Function Override public void write Object Object Output output Array Long Function object throws Exception Override public Array Long Function read Object Object Input input throws Exception Class Found Exception return Array Long Function get Instance Serialize value Array Generator Function Array Generator Function Externalizer class private static final class Array Generator Function implements Function Stream private final Int Function generator private Array Generator Function Int Function generator generator generator Override public apply Stream stream return stream Array generator public static final class Array Generator Function Externalizer implements Externalizer Array Generator Function Override public void write Object Object Output output Array Generator Function object throws Exception output write Object object generator Override public Array Generator Function read Object Object Input input throws Exception Class Found Exception return new Array Generator Function Int Function input read Object
package org stream impl termop import java io Exception import java io Object Input import java io Object Output import java util Set import java util function Bi Consumer import java util function Consumer import java util function Double Consumer import java util function Function import java util function Int Consumer import java util function Long Consumer import java util function Obj Double Consumer import java util function Obj Int Consumer import java util function Obj Long Consumer import org commons io Unsigned Numeric import org commons marshall Advanced Externalizer import org commons util Util import org marshall core Ids import org stream impl intops Intermediate Operation import org stream impl termop object Flat Map Iterator Operation import org stream impl termop object Bi Operation import org stream impl termop object Operation import org stream impl termop object Map Iterator Operation import org stream impl termop object Map Iterator Operation import org stream impl termop primitive Double Operation import org stream impl termop primitive Flat Map Double Operation import org stream impl termop primitive Flat Map Int Operation import org stream impl termop primitive Flat Map Long Operation import org stream impl termop primitive Flat Map Obj Double Operation import org stream impl termop primitive Flat Map Obj Int Operation import org stream impl termop primitive Flat Map Obj Long Operation import org stream impl termop primitive Int Operation import org stream impl termop primitive Long Operation import org stream impl termop primitive Obj Double Operation import org stream impl termop primitive Obj Int Operation import org stream impl termop primitive Obj Long Operation import org jboss marshalling util Identity Int Map link Advanced Externalizer provides functionality required marshalling various terminal operations used various distributed streams including primitive forms public class Terminal Operation Externalizer implements Advanced Externalizer Base Terminal Operation private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private static final int private final Identity Int Map Class extends Base Terminal Operation operations new Identity Int Map public Terminal Operation Externalizer operations put Single Run Operation class operations put Segment Retrying Operation class operations put Flat Map Iterator Operation class operations put Map Iterator Operation class operations put Map Iterator Operation class operations put Operation class operations put Flat Map Double Operation class operations put Flat Map Int Operation class operations put Flat Map Long Operation class operations put Double Operation class operations put Int Operation class operations put Long Operation class operations put Bi Operation class operations put Obj Double Operation class operations put Obj Int Operation class operations put Obj Long Operation class operations put Flat Map Obj Double Operation class operations put Flat Map Obj Int Operation class operations put Flat Map Obj Long Operation class Override public Set Class extends Base Terminal Operation get Type Classes return Util Class extends Base Terminal Operation Set Single Run Operation class Segment Retrying Operation class Flat Map Iterator Operation class Map Iterator Operation class Map Iterator Operation class Operation class Flat Map Double Operation class Flat Map Int Operation class Flat Map Long Operation class Double Operation class Int Operation class Long Operation class Bi Operation class Obj Double Operation class Obj Int Operation class Obj Long Operation class Flat Map Obj Double Operation class Flat Map Obj Int Operation class Flat Map Obj Long Operation class Override public Integer get Id return Ids Override public void write Object Object Output output Base Terminal Operation object throws Exception int number operations get object get Class output write Byte number output write Object object get Intermediate Operations switch number case output write Object Single Run Operation object get Function break case output write Object Segment Retrying Operation object get Function break case Unsigned Numeric write Unsigned Int output Flat Map Iterator Operation object get Batch Size break case Unsigned Numeric write Unsigned Int output Map Iterator Operation object get Batch Size break case Unsigned Numeric write Unsigned Int output Map Iterator Operation object get Batch Size break case Unsigned Numeric write Unsigned Int output Operation object get Batch Size output write Object Operation object get Consumer break case Unsigned Numeric write Unsigned Int output Flat Map Double Operation object get Batch Size output write Object Flat Map Double Operation object get Consumer break case Unsigned Numeric write Unsigned Int output Flat Map Int Operation object get Batch Size output write Object Flat Map Int Operation object get Consumer break case Unsigned Numeric write Unsigned Int output Flat Map Long Operation object get Batch Size output write Object Flat Map Long Operation object get Consumer break case Unsigned Numeric write Unsigned Int output Double Operation object get Batch Size output write Object Double Operation object get Consumer break case Unsigned Numeric write Unsigned Int output Int Operation object get Batch Size output write Object Int Operation object get Consumer break case Unsigned Numeric write Unsigned Int output Long Operation object get Batch Size output write Object Long Operation object get Consumer break case Unsigned Numeric write Unsigned Int output Bi Operation object get Batch Size output write Object Bi Operation object get Consumer break case Unsigned Numeric write Unsigned Int output Obj Double Operation object get Batch Size output write Object Obj Double Operation object get Consumer break case Unsigned Numeric write Unsigned Int output Obj Int Operation object get Batch Size output write Object Obj Int Operation Object object get Consumer break case Unsigned Numeric write Unsigned Int output Obj Long Operation object get Batch Size output write Object Obj Long Operation object get Consumer break case Unsigned Numeric write Unsigned Int output Flat Map Obj Double Operation object get Batch Size output write Object Flat Map Obj Double Operation object get Consumer break case Unsigned Numeric write Unsigned Int output Flat Map Obj Int Operation object get Batch Size output write Object Flat Map Obj Int Operation object get Consumer break case Unsigned Numeric write Unsigned Int output Flat Map Obj Long Operation object get Batch Size output write Object Flat Map Obj Long Operation object get Consumer break default throw new Illegal Argument Exception Override public Base Terminal Operation read Object Object Input input throws Exception Class Found Exception int number input read Unsigned Byte switch number case return new Single Run Operation Iterable Intermediate Operation input read Object null Function input read Object case return new Segment Retrying Operation Iterable Intermediate Operation input read Object null Function input read Object case return new Flat Map Iterator Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input case return new Map Iterator Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input case return new Map Iterator Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input case return new Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Consumer input read Object case return new Flat Map Double Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Double Consumer input read Object case return new Flat Map Int Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Int Consumer input read Object case return new Flat Map Long Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Long Consumer input read Object case return new Double Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Double Consumer input read Object case return new Int Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Int Consumer input read Object case return new Long Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Long Consumer input read Object case return new Bi Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Bi Consumer input read Object case return new Obj Double Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Obj Double Consumer input read Object case return new Obj Int Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Obj Int Consumer input read Object case return new Obj Long Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Obj Long Consumer input read Object case return new Flat Map Obj Double Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Obj Double Consumer input read Object case return new Flat Map Obj Int Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Obj Int Consumer input read Object case return new Flat Map Obj Long Operation Iterable Intermediate Operation input read Object null Unsigned Numeric read Unsigned Int input Obj Long Consumer input read Object default throw new Illegal Argument Exception Found invalid number number
package org factories threads import java util regex Matcher import java util regex Pattern author Galder Zamarre public class Thread Name Info private final long global Thread Sequence Num private final long per Factory Thread Sequence Num private final long factory Sequence Num private final String node private final String component Thread Name Info long global Thread Sequence Num long per Factory Thread Sequence Num long factory Sequence Num String node String component global Thread Sequence Num global Thread Sequence Num per Factory Thread Sequence Num per Factory Thread Sequence Num factory Sequence Num factory Sequence Num node node component component private static final Pattern search Pattern Pattern compile Format thread name string ul li code emit percent sign li li code emit per factory thread sequence number li li code g emit global thread sequence number li li code f emit factory sequence number li li code p emit code separated thread group path li li code emit thread li li code emit thread group name li li code n emit node name li li code c emit component name li ul param thread thread param format String format string return thread name string public String format Thread thread String format String final String Builder builder new String Builder format String length final Thread Group group thread get Thread Group final Matcher matcher search Pattern matcher format String matcher find matcher group null builder append matcher group else switch matcher group char case builder append break case builder append per Factory Thread Sequence Num break case g builder append global Thread Sequence Num break case f builder append factory Sequence Num break case p group null append Group Path group builder break case builder append thread get Id break case group null builder append group get Name break case n node null builder append node break case c component null builder append component break return builder String private static void append Group Path Thread Group group String Builder builder final Thread Group parent group get Parent parent null append Group Path parent builder builder append builder append group get Name
package org configuration global import java util concurrent Thread Factory import org commons executors Thread Pool Executor Factory author Galder Zamarre public class Thread Pool Configuration private final Thread Factory thread Factory private final Thread Pool Executor Factory thread Pool Factory protected Thread Pool Configuration Thread Factory thread Factory Thread Pool Executor Factory thread Pool Factory thread Factory thread Factory thread Pool Factory thread Pool Factory public extends Thread Pool Executor Factory thread Pool Factory return thread Pool Factory public extends Thread Factory thread Factory return thread Factory Override public String String return Thread Pool Configuration thread Factory thread Factory thread Pool Factory thread Pool Factory
package org configuration global import java util concurrent Thread Factory import org commons configuration Builder import org commons executors Thread Pool Executor Factory author Galder Zamarre public class Thread Pool Configuration Builder extends Abstract Global Configuration Builder implements Builder Thread Pool Configuration Thread Factory thread Factory Thread Pool Executor Factory thread Pool Factory public Thread Pool Configuration Builder Global Configuration Builder global Config super global Config Override public void validate thread Pool Factory null thread Pool Factory validate public Thread Pool Configuration Builder thread Factory Thread Factory thread Factory thread Factory thread Factory return public Thread Pool Configuration Builder thread Pool Factory Thread Pool Executor Factory thread Pool Factory thread Pool Factory thread Pool Factory return Override public Thread Pool Configuration create return new Thread Pool Configuration thread Factory thread Pool Factory Override public Thread Pool Configuration Builder read Thread Pool Configuration template thread Factory template thread Factory thread Pool Factory template thread Pool Factory return Override public boolean equals Object return true null get Class get Class return false Thread Pool Configuration Builder Thread Pool Configuration Builder thread Pool Factory null thread Pool Factory equals thread Pool Factory thread Pool Factory null return false thread Factory null thread Factory equals thread Factory thread Factory null return false return true Override public int hash Code int result thread Factory null thread Factory hash Code result result thread Pool Factory null thread Pool Factory hash Code return result
package org remoting transport jgroups import java util Hash Map import java util Map import java util concurrent Executor Service import java util concurrent Thread Pool Executor import java util concurrent Time Unit import org executors Lazy Initializing Blocking Task Aware Executor Service import org util concurrent Blocking Task Aware Executor Service Impl import org jgroups stack Diagnostics Handler probe handler link org jgroups tests Probe protocol Groups p contains single key returns information remote thread pool executor service author Pedro Ruivo since class Thread Pool Probe Handler implements Diagnostics Handler Probe Handler private static final String ispn remote private volatile Executor Service executor Override public Map String String handle Probe String keys keys null keys length return null Thread Pool Executor exec extract executor exec null return null Map String String map new Hash Map String key keys switch key case map put active thread String value exec get Active Count map put min thread String value exec get Core Pool Size map put max thread String value exec get Maximum Pool Size map put current pool size String value exec get Pool Size map put largest pool size String value exec get Largest Pool Size map put keep alive String value exec get Keep Alive Time Time Unit map put queue size String value exec get Queue size break return map Empty null map Override public String supported Keys return new String void update Thread Pool Executor Service executor Service executor Service null executor executor Service private static Thread Pool Executor extract Executor Service service service instanceof Thread Pool Executor return Thread Pool Executor service else service instanceof Blocking Task Aware Executor Service Impl return extract Blocking Task Aware Executor Service Impl service get Executor Service else service instanceof Lazy Initializing Blocking Task Aware Executor Service return extract Lazy Initializing Blocking Task Aware Executor Service service get Executor Service return null n know handle remaining cases
package org distribution ch impl import java io Object Input import java io Object Output import java util Collections import java util Hash Set import java util List import java util Set import org commons marshall Abstract Externalizer import org distribution topologyaware Topology Info import org distribution topologyaware Topology Level import org marshall core Ids import org remoting transport Address import org remoting transport Topology Aware Address Default topology aware consistent hash factory implementation author Dan Berindei since public class Topology Aware Consistent Hash Factory extends Default Consistent Hash Factory Override protected void add Backup Owners Builder builder Topology Info topology Info new Topology Info builder get Members builder get Capacity Factors Remove extra owners could leftovers add Primary Owners n worry location information yet remove Extra Backup Owners builder owners segment num Owners add new owners Unlike parent class allow many segments one node order get many different sites racks machines owner list add Backup Owners Level builder topology Info Topology Level add Backup Owners Level builder topology Info Topology Level add Backup Owners Level builder topology Info Topology Level add Backup Owners Level builder topology Info Topology Level owners segment num Owners every segment steps replace Backup Owners Level builder topology Info Topology Level replace Backup Owners Level builder topology Info Topology Level replace Backup Owners Level builder topology Info Topology Level Replace owners many segments owners replace Backup Owner Level builder topology Info private void add Backup Owners Level Builder builder Topology Info topology Info Topology Level level first phase new owners must min Segments segments may possible fill segments num Owners owners way repeat loop iteration higher limit owned segments int extra Segments Add Backup Owners Level builder topology Info level extra Segments extra Segments private boolean Add Backup Owners Level Builder builder Topology Info topology Info Topology Level level int extra Segments boolean sufficient Owners true int segment segment builder get Num Segments segment List Address owners builder get Owners segment owners size builder get Actual Num Owners continue int max Distinct Locations topology Info get Distinct Locations Count level builder get Actual Num Owners Topology Info owners Info new Topology Info owners builder get Capacity Factors int distinct Locations owners Info get Distinct Locations Count level builder get Actual Num Owners distinct Locations max Distinct Locations continue float total Capacity topology Info compute Total Capacity builder get Members builder get Capacity Factors Address candidate builder get Members int node Extra Segments int extra Segments builder get Capacity Factor candidate total Capacity int max Segments topology Info compute Expected Segments builder get Num Segments builder get Actual Num Owners candidate node Extra Segments builder get Owned candidate max Segments owners contains candidate location Duplicate owners candidate level builder add Owner segment candidate distinct Locations owners list live need query owners size builder get Actual Num Owners break distinct Locations max Distinct Locations owners size builder get Actual Num Owners sufficient Owners false return sufficient Owners private void replace Backup Owners Level Builder builder Topology Info topology Info Topology Level level int extra Segments Replace Backup Owners Level builder topology Info level extra Segments extra Segments private boolean Replace Backup Owners Level Builder builder Topology Info topology Info Topology Level level int extra Segments boolean sufficient Locations true point segment already actual Num Owners owners int segment segment builder get Num Segments segment List Address owners builder get Owners segment int max Distinct Locations topology Info get Distinct Locations Count level builder get Actual Num Owners Topology Info owners Info new Topology Info owners builder get Capacity Factors int distinct Locations owners Info get Distinct Locations Count level builder get Actual Num Owners distinct Locations max Distinct Locations continue float total Capacity topology Info compute Total Capacity builder get Members builder get Capacity Factors int owners size Address owner owners get location Duplicate owners owner level Got duplicate site rack machine might alternative Address candidate builder get Members int expected Segments topology Info compute Expected Segments builder get Num Segments builder get Actual Num Owners candidate int node Extra Segments int extra Segments builder get Capacity Factor candidate total Capacity builder get Owned candidate expected Segments node Extra Segments owners contains candidate location Duplicate owners candidate level builder add Owner segment candidate builder remove Owner segment owner distinct Locations owners list live need query break distinct Locations max Distinct Locations sufficient Locations false return sufficient Locations private void replace Backup Owner Level Builder builder Topology Info topology Info owner owned owner max Segments find another node owned node max Segments replace owner Replace Backup Owners Level builder topology Info step also replace owners max Segments segments separate iteration minimizes number moves nodes owned node max Segments num Owners num Segments n divide evenly num Nodes Replace Backup Owners Level builder topology Info step allow replacing nodes already owned node max Segments Necessary num Owners num Segments n divide evenly num Nodes nodes could max Segments segments yet one node could max Segments num Owners num Segments num Nodes segments Replace Backup Owners Level builder topology Info private void Replace Backup Owners Level Builder builder Topology Info topology Info int min Segments Diff int max Segments Diff Iterate owners outer loop minimize number owner changes segment point segment already actual Num Owners owners int owner Idx builder get Actual Num Owners owner Idx owner Idx int segment segment builder get Num Segments segment List Address owners builder get Owners segment Address owner owners get owner Idx int max Segments topology Info compute Expected Segments builder get Num Segments builder get Actual Num Owners owner max Segments Diff builder get Owned owner max Segments Owner many segments Find another node replace Address candidate builder get Members int min Segments topology Info compute Expected Segments builder get Num Segments builder get Actual Num Owners candidate min Segments Diff builder get Owned candidate min Segments owners contains candidate maintains Diversity owners candidate owner builder add Owner segment candidate builder remove Owner segment owner owners list live need query break private Object get Location Id Address address Topology Level level Topology Aware Address taa Topology Aware Address address Object location Id switch level case location Id taa get Site Id break case location Id taa get Site Id taa get Rack Id break case location Id taa get Site Id taa get Rack Id taa get Machine Id break case location Id address break default throw new Illegal State Exception Unknown level level return location Id private boolean location Duplicate List Address addresses Address target Topology Level level Object target Location Id get Location Id target level Address address addresses address target get Location Id address level equals target Location Id return true return false private boolean maintains Diversity List Address owners Address candidate Address replaced return maintains Diversity owners candidate replaced Topology Level maintains Diversity owners candidate replaced Topology Level maintains Diversity owners candidate replaced Topology Level private boolean maintains Diversity List Address owners Address candidate Address replaced Topology Level machine Set Object old Machines new Hash Set Object owners size Set Object new Machines new Hash Set Object owners size new Machines add get Location Id candidate machine Address node owners old Machines add get Location Id node machine node equals replaced new Machines add get Location Id node machine return new Machines size old Machines size public static class Externalizer extends Abstract Externalizer Topology Aware Consistent Hash Factory Override public void write Object Object Output output Topology Aware Consistent Hash Factory chf Override Suppress Warnings unchecked public Topology Aware Consistent Hash Factory read Object Object Input unmarshaller return new Topology Aware Consistent Hash Factory Override public Integer get Id return Ids Override public Set Class extends Topology Aware Consistent Hash Factory get Type Classes return Collections Class extends Topology Aware Consistent Hash Factory singleton Topology Aware Consistent Hash Factory class
package org distribution ch impl import java io Object Input import java io Object Output import java util Collections import java util List import java util Map import java util Set import org commons hash Hash import org commons marshall Abstract Externalizer import org distribution topologyaware Topology Info import org distribution topologyaware Topology Level import org marshall core Ids import org remoting transport Address import org remoting transport Topology Aware Address link org distribution ch Consistent Hash Factory implementation guarantees caches members consistent hash also tries distribute segments based topology information link org configuration global Transport Configuration p drawback compared link org distribution ch impl Default Consistent Hash Factory potentially move lot segments rebalance strictly necessary p recommended using code Topology Aware Sync Consistent Hash Factory small number segments distribution segments owners gets better higher number segments especially bad code num Segments lt num Nodes author Dan Berindei since public class Topology Aware Sync Consistent Hash Factory extends Sync Consistent Hash Factory Override protected Builder create Builder Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors return new Builder hash Function num Owners num Segments members capacity Factors protected static class Builder extends Sync Consistent Hash Factory Builder protected final Topology Info topology Info protected Topology Level current Level Topology Level protected Builder Hash hash Function int num Owners int num Segments List Address members Map Address Float capacity Factors super hash Function num Owners num Segments members capacity Factors topology Info new Topology Info members capacity Factors Override protected void copy Owners copy Owners Level Topology Level copy Owners Level Topology Level copy Owners Level Topology Level copy Owners Level Topology Level private void copy Owners Level Topology Level topology Level current Level topology Level ignore Max Segments false super Copy Owners ignore Max Segments true super Copy Owners Override protected boolean add Backup Owner int segment Address candidate List Address owners segment Owners segment owners size actual Num Owners location Already Added candidate owners current Level ignore Max Segments owners Empty long max Segments Math round compute Expected Segments Node candidate stats get Primary Owned candidate max Segments add Owner Check segment candidate return true else long max Segments Math round compute Expected Segments Node candidate actual Num Owners stats get Owned candidate max Segments add Owner Check segment candidate return true else capacity Factors get candidate equals f add Owner Check segment candidate return true return false Override protected boolean Add Owners List Address owners return owners size topology Info get Distinct Locations Count current Level actual Num Owners Override protected double compute Expected Segments Node Address node int num Copies return topology Info compute Expected Segments num Segments num Copies node private boolean location Already Added Address candidate List Address owners Topology Level level Topology Aware Address topology Aware Candidate Topology Aware Address candidate boolean location Already Added false Address owner owners Topology Aware Address topology Aware Owner Topology Aware Address owner switch level case location Already Added topology Aware Candidate Site topology Aware Owner break case location Already Added topology Aware Candidate Rack topology Aware Owner break case location Already Added topology Aware Candidate Machine topology Aware Owner break case location Already Added owner equals candidate location Already Added break return location Already Added public static class Externalizer extends Abstract Externalizer Topology Aware Sync Consistent Hash Factory Override public void write Object Object Output output Topology Aware Sync Consistent Hash Factory chf Override Suppress Warnings unchecked public Topology Aware Sync Consistent Hash Factory read Object Object Input unmarshaller return new Topology Aware Sync Consistent Hash Factory Override public Integer get Id return Ids Override public Set Class extends Topology Aware Sync Consistent Hash Factory get Type Classes return Collections Class extends Topology Aware Sync Consistent Hash Factory singleton Topology Aware Sync Consistent Hash Factory class
package org transaction totalorder import java util Array List import java util Collection import java util Collections import java util List import java util concurrent Concurrent Map import java util concurrent atomic Atomic Reference import org commons util Collection Factory import org factories Known Component Names import org factories annotations Component Name import org factories annotations Inject import org transaction impl Total Order Remote Transaction State import org util concurrent Blocking Task Aware Executor Service import org util logging Log import org util logging Log Factory class behaves synchronization point incoming transactions totally ordered incoming transactions state transfer p Main functions ul li ensure order prepares sending thread pool e non conflicting prepares processed concurrently li li ensure state transfer waits previous delivered prepares li li ensure prepare waits state transfer progress li ul author Pedro Ruivo since public class Total Order Manager private static final Log log Log Factory get Log Total Order Manager class private static final boolean trace log Trace Enabled map used keep track concurrent transactions private final Concurrent Map Object Total Order Latch keys Locked private final Atomic Reference Total Order Latch state Transfer Progress private Blocking Task Aware Executor Service total Order Executor public Total Order Manager keys Locked Collection Factory make Concurrent Map state Transfer Progress new Atomic Reference null Inject public void inject Component Name Known Component Names Blocking Task Aware Executor Service total Order Executor total Order Executor total Order Executor ensures validation order transaction corresponding prepare command allow prepare command moved thread pool param state total order prepare state public final void ensure Order Total Order Remote Transaction State state Collection keys Modified throws Interrupted Exception retries due state transfer uses state need keys previous locked release order insert keys locked method need synchronized invoked one thread time namely thread delivering messages total order state await Reset Total Order Latch transaction Synchronized Block new Total Order Latch Impl state get Global Transaction global Id state set Transaction Synchronized Block transaction Synchronized Block collect count latch corresponding previous transactions queue Object key keys Modified Total Order Latch prev Tx keys Locked put key transaction Synchronized Block prev Tx null state add Synchronized Block prev Tx state add Locked Key key Total Order Latch state Transfer state Transfer Progress get state Transfer null state add Synchronized Block state Transfer trace log tracef Transaction wait locked state get Global Transaction global Id state get Conflicting Transaction Blocks state get Locked Keys null Clear Command state get Locked Keys Release locked key possibly unblock waiting prepares param state state public final void release Total Order Remote Transaction State state Total Order Latch synchronized Block state get Transaction Synchronized Block synchronized Block null already released return Collection Object locked Keys state get Locked Keys synchronized Block un Block Object key locked Keys keys Locked remove key synchronized Block trace log tracef Release locked keys Checking pending tasks synchronized Block locked Keys state reset notifies state transfer start param topology Id new topology return current pending prepares public final Collection Total Order Latch notify State Transfer Start int topology Id boolean Rebalance state Transfer Progress get null return Collections empty List List Total Order Latch preparing Transactions new Array List keys Locked size preparing Transactions add keys Locked values Rebalance state Transfer Progress set new Total Order Latch Impl State Transfer topology Id trace log tracef State Transfer start wait preparing Transactions return preparing Transactions notifies end state transfer possibly unblock waiting prepares public final void notify State Transfer End Total Order Latch block state Transfer Progress get Set null block null block un Block trace log tracef State Transfer finish release block total Order Executor check Ready Tasks public final boolean Lock Acquired return keys Locked Empty
package org configuration cache import java util concurrent Time Unit import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set import org commons configuration attributes Identity Attribute Copier import org transaction Locking Mode import org transaction Transaction Mode import org transaction Transaction Protocol import org transaction lookup Generic Transaction Manager Lookup import org transaction lookup Transaction Manager Lookup import org transaction lookup Transaction Synchronization Registry Lookup Defines transactional characteristics cache author pmuir author Pedro Ruivo public class Transaction Configuration public static final Attribute Definition Boolean Attribute Definition builder auto commit true immutable build public static final Attribute Definition Long Attribute Definition builder stop timeout Time Unit Millis build public static final Attribute Definition Locking Mode Attribute Definition builder locking Locking Mode build public static final Attribute Definition Transaction Manager Lookup Attribute Definition Transaction Manager Lookup builder transaction manager lookup Generic Transaction Manager Lookup copier Identity Attribute Copier auto Persist false build public static final Attribute Definition Transaction Synchronization Registry Lookup Attribute Definition builder transaction synchronization registry lookup null Transaction Synchronization Registry Lookup class copier Identity Attribute Copier auto Persist false build public static final Attribute Definition Transaction Mode Attribute Definition builder mode Transaction Mode immutable auto Persist false build public static final Attribute Definition Boolean Attribute Definition builder synchronization false immutable auto Persist false build public static final Attribute Definition Boolean Attribute Definition builder single phase auto commit false build public static final Attribute Definition Long Attribute Definition builder reaper wake interval immutable xml Name reaper interval build public static final Attribute Definition Long Attribute Definition builder complete timeout immutable build public static final Attribute Definition Transaction Protocol Attribute Definition builder transaction protocol Transaction Protocol immutable xml Name protocol build public static final Attribute Definition Boolean Attribute Definition builder notifications true immutable build static Attribute Set attribute Definition Set return new Attribute Set Transaction Configuration class private final Attribute Boolean auto Commit private final Attribute Long cache Stop Timeout private final Attribute Locking Mode locking Mode private final Attribute Transaction Manager Lookup transaction Manager Lookup private final Attribute Transaction Synchronization Registry Lookup transaction Synchronization Registry Lookup private final Attribute Transaction Mode transaction Mode private final Attribute Boolean use Synchronization private final Attribute Boolean use Pc Auto Commit Transactions private final Attribute Long reaper Wake Interval private final Attribute Long completed Tx Timeout private final Attribute Transaction Protocol transaction Protocol private final Attribute Boolean notifications private final Attribute Set attributes private final Recovery Configuration recovery Transaction Configuration Attribute Set attributes Recovery Configuration recovery attributes attributes check Protection auto Commit attributes attribute cache Stop Timeout attributes attribute locking Mode attributes attribute transaction Manager Lookup attributes attribute transaction Synchronization Registry Lookup attributes attribute transaction Mode attributes attribute use Synchronization attributes attribute use Pc Auto Commit Transactions attributes attribute reaper Wake Interval attributes attribute completed Tx Timeout attributes attribute transaction Protocol attributes attribute notifications attributes attribute recovery recovery cache transactional e link transaction Mode Transaction Mode transaction Auto Commit enabled single operation transactions user n need manually start transaction transactions injected system Defaults true public boolean auto Commit return auto Commit get ongoing transactions cache stopped waits ongoing remote local transactions finish amount time wait defined cache stop timeout recommended value exceed transaction timeout even new transaction started cache stopped could last long transaction timeout allows public Transaction Configuration cache Stop Timeout long l cache Stop Timeout set l return ongoing transactions cache stopped waits ongoing remote local transactions finish amount time wait defined cache stop timeout recommended value exceed transaction timeout even new transaction started cache stopped could last long transaction timeout allows public long cache Stop Timeout return cache Stop Timeout get Configures whether cache uses optimistic pessimistic locking cache transactional locking mode ignored see Transaction Configuration transaction Mode public Locking Mode locking Mode return locking Mode get Configures whether cache uses optimistic pessimistic locking cache transactional locking mode ignored see Transaction Configuration transaction Mode public Transaction Configuration locking Mode Locking Mode locking Mode locking Mode set locking Mode return true cluster wide commit phase two phase commit transactions synchronous wait responses nodes commit sent Otherwise commit phase asynchronous Keeping false improves performance transactions lead inconsistencies primary owner releases lock backup commits change deprecated since longer supported Deprecated public boolean sync Commit Phase return true true cluster wide commit phase two phase commit transactions synchronous wait responses nodes commit sent Otherwise commit phase asynchronous Keeping false improves performance transactions lead inconsistencies primary owner releases lock backup commits change deprecated sync Rollback Phase setting longer modified runtime must nodes Deprecated public Transaction Configuration sync Commit Phase boolean b return true cluster wide rollback phase two phase commit transactions synchronous wait responses nodes rollback sent Otherwise rollback phase asynchronous Keeping false improves performance transactions deprecated since longer supported Deprecated public boolean sync Rollback Phase return true true cluster wide rollback phase two phase commit transactions synchronous wait responses nodes rollback sent deprecated sync Rollback Phase setting longer modified runtime must nodes Deprecated public Transaction Configuration sync Rollback Phase boolean b return Configure Transaction manager lookup directly using instance Transaction Manager Lookup Calling method marks cache transactional public Transaction Manager Lookup transaction Manager Lookup return transaction Manager Lookup get deprecated since transaction manager looked cache startup Deprecated public Transaction Configuration transaction Manager Lookup Transaction Manager Lookup transaction Manager Lookup transaction Manager Lookup set transaction Manager Lookup return Configure Transaction Synchronization Registry lookup directly using instance Transaction Manager Lookup Calling method marks cache transactional public Transaction Synchronization Registry Lookup transaction Synchronization Registry Lookup return transaction Synchronization Registry Lookup get public Transaction Mode transaction Mode return transaction Mode get public boolean use Synchronization return use Synchronization get method allows configuration transaction recovery cache method called automatically enables recovery want disabled make sure call link Recovery Configuration Builder enabled boolean false parameter public Recovery Configuration recovery return recovery see Transaction Configuration Builder reaper Wake Interval long public long reaper Wake Interval return reaper Wake Interval get see Transaction Configuration Builder completed Tx Timeout long public long completed Tx Timeout return completed Tx Timeout get could access cache transactionally non transactionally Naturally non transactional access faster offers less consistency guarantees onwards mixed access longer supported wan na speed transactional caches ready trade consistency guarantees enable use Pc Auto Commit Transactions p configuration option force induced transaction started result enabling auto Commit commit single phase instead Cs case full Phase Commit p b b option used modifying key multiple transactions offer consistency guarantees concurrent access public boolean use Pc Auto Commit Transactions return use Pc Auto Commit Transactions get return transaction protocol use Total Order public Transaction Protocol transaction Protocol return transaction Protocol get return transactional notifications link org notifications cachelistener annotation Transaction Registered link org notifications cachelistener annotation Transaction Completed triggered public boolean notifications return notifications get public Attribute Set attributes return attributes Override public String String return Transaction Configuration attributes attributes recovery recovery Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Transaction Configuration Transaction Configuration obj attributes null attributes null return false else attributes equals attributes return false recovery null recovery null return false else recovery equals recovery return false return true Override public int hash Code final int prime int result result prime result attributes null attributes hash Code result prime result recovery null recovery hash Code return result
package org configuration cache import static org configuration cache Transaction Configuration import static org configuration cache Transaction Configuration import static org configuration cache Transaction Configuration import static org configuration cache Transaction Configuration import static org configuration cache Transaction Configuration import static org configuration cache Transaction Configuration import static org configuration cache Transaction Configuration import static org configuration cache Transaction Configuration import static org configuration cache Transaction Configuration import static org configuration cache Transaction Configuration import static org configuration cache Transaction Configuration import static org configuration cache Transaction Configuration import java lang invoke Method Handles import java util concurrent Time Unit import javax transaction Synchronization import javax transaction Transaction Manager import javax transaction xa Resource import org commons configuration Builder import org commons configuration attributes Attribute import org commons configuration attributes Attribute Set import org configuration global Global Configuration import org transaction Locking Mode import org transaction Transaction Mode import org transaction Transaction Protocol import org transaction lookup Transaction Manager Lookup import org transaction lookup Transaction Synchronization Registry Lookup import org util logging Log import org util logging Log Factory Defines transactional characteristics cache author pmuir author Pedro Ruivo public class Transaction Configuration Builder extends Abstract Configuration Child Builder implements Builder Transaction Configuration private static final Log log Log Factory get Log Method Handles lookup lookup Class private final Attribute Set attributes private final Recovery Configuration Builder recovery Transaction Configuration Builder Configuration Builder builder super builder attributes Transaction Configuration attribute Definition Set recovery new Recovery Configuration Builder cache transactional e link transaction Mode org transaction Transaction Mode Transaction Mode transaction Auto Commit enabled single operation transactions user n need manually start transaction transactions injected system Defaults true public Transaction Configuration Builder auto Commit boolean b attributes attribute set b return ongoing transactions cache stopped waits ongoing remote local transactions finish amount time wait defined cache stop timeout recommended value exceed transaction timeout even new transaction started cache stopped could last long transaction timeout allows p configuration property may adjusted runtime public Transaction Configuration Builder cache Stop Timeout long l attributes attribute set l return ongoing transactions cache stopped waits ongoing remote local transactions finish amount time wait defined cache stop timeout recommended value exceed transaction timeout even new transaction started cache stopped could last long transaction timeout allows p configuration property may adjusted runtime public Transaction Configuration Builder cache Stop Timeout long l Time Unit unit return cache Stop Timeout unit Millis l Configures whether cache uses optimistic pessimistic locking cache transactional locking mode ignored see org configuration cache Transaction Configuration transaction Mode public Transaction Configuration Builder locking Mode Locking Mode locking Mode attributes attribute set locking Mode return Locking Mode locking Mode return attributes attribute get true cluster wide commit phase two phase commit transactions synchronous wait responses nodes commit sent Otherwise commit phase asynchronous Keeping false improves performance transactions lead inconsistencies backup owner commits transaction primary owner released lock deprecated since longer supported Deprecated public Transaction Configuration Builder sync Commit Phase boolean b return See link sync Commit Phase boolean return code true sync commit phase enabled deprecated since longer supported Deprecated boolean sync Commit Phase return true true cluster wide rollback phase two phase commit transactions synchronous wait responses nodes rollback sent Otherwise rollback phase asynchronous Keeping false lead inconsistencies transaction rolled back commit timeout backup owner could commit transaction primary released lock deprecated since longer supported Deprecated public Transaction Configuration Builder sync Rollback Phase boolean b return Configure Transaction manager lookup directly using instance Transaction Manager Lookup Calling method marks cache transactional public Transaction Configuration Builder transaction Manager Lookup Transaction Manager Lookup tml attributes attribute set tml tml null transaction Mode Transaction Mode return public Transaction Manager Lookup transaction Manager Lookup return attributes attribute get Configure Transaction Synchronization Registry lookup directly using instance Transaction Manager Lookup Calling method marks cache transactional public Transaction Configuration Builder transaction Synchronization Registry Lookup Transaction Synchronization Registry Lookup lookup attributes attribute set lookup return public Transaction Configuration Builder transaction Mode Transaction Mode transaction Mode attributes attribute set transaction Mode return public Transaction Mode transaction Mode attributes attribute Modified return attributes attribute get else return null Configures whether cache registers synchronization transaction manager registers resource often unnecessary register full resource unless intend make use recovery well registering synchronization significantly efficient param b true link Synchronization used rather link Resource communicating link Transaction Manager public Transaction Configuration Builder use Synchronization boolean b attributes attribute set b return See link use Synchronization boolean return code true synchronization enlistment enabled boolean use Synchronization return attributes attribute get method allows configuration transaction recovery cache method called automatically enables recovery want disabled make sure call link Recovery Configuration Builder disable public Recovery Configuration Builder recovery return recovery could access cache transactionally non transactionally Naturally non transactional access faster offers less consistency guarantees onwards mixed access longer supported wan na speed transactional caches ready trade consistency guarantees enable use Pc Auto Commit Transactions p configuration option force induced transaction started result enabling auto Commit commit single phase instead Cs case full Phase Commit public Transaction Configuration Builder use Pc Auto Commit Transactions boolean b attributes attribute set b return time interval millis thread cleans transaction completion information kicks Defaults public Transaction Configuration Builder reaper Wake Interval long interval attributes attribute set interval return duration millis keep information completion transaction Defaults public Transaction Configuration Builder completed Tx Timeout long timeout attributes attribute set timeout return public Transaction Configuration Builder transaction Protocol Transaction Protocol transaction Protocol attributes attribute set transaction Protocol return See link transaction Protocol Transaction Protocol return current configured link Transaction Protocol public Transaction Protocol transaction Protocol return attributes attribute get return transactional notifications link org notifications cachelistener annotation Transaction Registered link org notifications cachelistener annotation Transaction Completed triggered public Transaction Configuration Builder notifications boolean enabled attributes attribute set enabled return Override public void validate Attribute Long reaper Wake Interval attributes attribute Attribute Long completed Tx Timeout attributes attribute reaper Wake Interval get throw log invalid Reaper Wake Interval reaper Wake Interval get completed Tx Timeout get throw log invalid Completed Tx Timeout completed Tx Timeout get Cache Mode cache Mode clustering cache Mode attributes attribute get Transaction Protocol total order supports transactional caches transaction Mode Transaction Mode throw log invalid Tx Mode Total Order transaction Mode total order supports replicated distributed mode cache Mode Replicated cache Mode Distributed throw log invalid Cache Mode Total Order clustering cache Mode friendly Cache Mode String locking Mode Locking Mode throw log invalid Locking Mode Total Order locking Mode attributes attribute get get Builder template log transaction Notifications Disabled attributes attribute get Transaction Mode cache Mode Synchronous throw log unsupported Async Cache Mode cache Mode recovery validate Override public void validate Global Configuration global Config recovery validate global Config Override public Transaction Configuration create transaction Mode null get Builder invocation Batching Enabled transaction Mode Transaction Mode else transaction Mode null transaction Mode Transaction Mode return new Transaction Configuration attributes protect recovery create Override public Transaction Configuration Builder read Transaction Configuration template attributes read template attributes recovery read template recovery return Override public String String return Transaction Configuration Builder attributes attributes recovery recovery
package org transaction impl import static javax transaction xa Resource import static javax transaction xa Resource import java util List import javax transaction Transaction import javax transaction xa Exception import org commands Commands Factory import org commands tx Commit Command import org commands tx Prepare Command import org commands tx Rollback Command import org commands write Write Command import org configuration cache Configuration import org configuration cache Configurations import org context Invocation Context Factory import org context impl Local Tx Invocation Context import org factories annotations Inject import org factories annotations Start import org factories annotations Stop import org interceptors Interceptor Chain import org transaction xa Global Transaction import org transaction xa recovery Recovery Manager import org util logging Log import org util logging Log Factory Coordinates transaction prepare commits received link javax transaction Transaction Manager Integrates either link org transaction xa Transaction Xa Adapter link org transaction synchronization Synchronization Adapter author Mircea Markus jboss com author Pedro Ruivo since public class Transaction Coordinator private static final Log log Log Factory get Log Transaction Coordinator class private static final boolean trace log Trace Enabled private Commands Factory commands Factory private Invocation Context Factory icf private Interceptor Chain invoker private Transaction Table tx Table private Recovery Manager recovery Manager private Configuration configuration private Command Creator command Creator private volatile boolean shutting false private boolean total Order private boolean default One Phase Commit private boolean use Pc Auto Commit Transactions Inject public void init Commands Factory commands Factory Invocation Context Factory icf Interceptor Chain invoker Transaction Table tx Table Recovery Manager recovery Manager Configuration configuration commands Factory commands Factory icf icf invoker invoker tx Table tx Table recovery Manager recovery Manager configuration configuration use Pc Auto Commit Transactions configuration transaction use Pc Auto Commit Transactions total Order configuration transaction transaction Protocol Total Order default One Phase Commit Configurations One Phase Commit configuration Configurations One Phase Total Order Commit configuration Start priority private void set Start Status shutting false Stop priority private void set Stop Status shutting true Start public void start Configurations Tx Versioned configuration need create versioned variants Prepare Command Commit Command command Creator new Command Creator Override public Commit Command create Commit Command Global Transaction gtx return commands Factory build Versioned Commit Command gtx Override public Prepare Command create Prepare Command Global Transaction gtx List Write Command modifications boolean one Phase Commit return commands Factory build Versioned Prepare Command gtx modifications one Phase Commit else command Creator new Command Creator Override public Commit Command create Commit Command Global Transaction gtx return commands Factory build Commit Command gtx Override public Prepare Command create Prepare Command Global Transaction gtx List Write Command modifications boolean one Phase Commit return commands Factory build Prepare Command gtx modifications one Phase Commit public final int prepare Local Transaction local Transaction throws Exception return prepare local Transaction false public final int prepare Local Transaction local Transaction boolean replay Entry Wrapping throws Exception validate Marked Rollback local Transaction One Phase Commit local Transaction trace log tracef Received prepare tx Skipping call used local Transaction return Prepare Command prepare Command command Creator create Prepare Command local Transaction get Global Transaction local Transaction get Modifications false trace log tracef Sending prepare command chain prepare Command Local Tx Invocation Context ctx icf create Tx Invocation Context local Transaction prepare Command set Replay Entry Wrapping replay Entry Wrapping try invoker invoke ctx prepare Command local Transaction Read trace log tracef Readonly transaction local Transaction get Global Transaction force cleanup release objects held Ms n call commit tx See commit Internal ctx return else tx Table local Transaction Prepared local Transaction return catch Throwable e shutting log trace Exception preparing back probably shutting else log error Processing Prepare e rollback transaction throwing exception guarantee calls Resource rollback prepare failed rollback local Transaction tells rolled back already n call rollback Exception xe new Exception Exception xe init Cause e throw xe public boolean commit Local Transaction local Transaction boolean One Phase throws Exception trace log tracef Committing transaction local Transaction get Global Transaction Local Tx Invocation Context ctx icf create Tx Invocation Context local Transaction One Phase Commit local Transaction One Phase validate Marked Rollback local Transaction trace log trace prepare call interceptor chain List Write Command modifications local Transaction get Modifications Prepare Command command command Creator create Prepare Command local Transaction get Global Transaction modifications true try invoker invoke ctx command catch Throwable e handle Commit Failure e true ctx return true else local Transaction Read commit Internal ctx return false public void rollback Local Transaction local Transaction throws Exception try rollback Internal icf create Tx Invocation Context local Transaction catch Throwable e shutting log trace Exception rolling back probably shutting else log error Rolling Back e final Transaction transaction local Transaction get Transaction might possible cache stopped still holds reference Resource transaction null tx Table failure Completing Transaction transaction Exception xe new Exception Exception xe init Cause e throw xe private void handle Commit Failure Throwable e boolean one Phase Commit Local Tx Invocation Context ctx throws Exception trace log tracef Could n commit transaction trying rollback ctx get Cache Transaction one Phase Commit log error Processing pc Prepare Command e else log error Processing pc Commit Command e try boolean Recovery Enabled recovery Manager null boolean Total Order one Phase Commit total Order Recovery Enabled Total Order send rollback Total Order create new remote transaction rollback needed way one node aborts transaction nodes abort rollback Internal ctx catch Throwable e log could Rollback Prepared Pc Transaction ctx get Cache Transaction e inform resource manager error occurred transaction branch Exception xe new Exception Exception xe init Cause e throw xe finally tx Table failure Completing Transaction ctx get Transaction Exception xe new Exception Exception xe init Cause e throw xe heuristic rollback private void commit Internal Local Tx Invocation Context ctx throws Exception Commit Command commit Command command Creator create Commit Command ctx get Global Transaction try invoker invoke ctx commit Command tx Table remove Local Transaction ctx get Cache Transaction catch Throwable e handle Commit Failure e false ctx private void rollback Internal Local Tx Invocation Context ctx throws Throwable trace log tracef rollback transaction ctx get Global Transaction Rollback Command rollback Command commands Factory build Rollback Command ctx get Global Transaction invoker invoke ctx rollback Command tx Table remove Local Transaction ctx get Cache Transaction private void validate Marked Rollback Local Transaction local Transaction throws Exception local Transaction Marked Rollback trace log tracef Transaction already marked rollback Forcing rollback local Transaction rollback local Transaction throw new Exception Exception public boolean Pc Auto Commit Transaction Local Transaction local Transaction return use Pc Auto Commit Transactions local Transaction Implicit Transaction private interface Command Creator Commit Command create Commit Command Global Transaction gtx Prepare Command create Prepare Command Global Transaction gtx List Write Command modifications boolean one Phase Commit private boolean One Phase Commit Local Transaction local Transaction return default One Phase Commit Pc Auto Commit Transaction local Transaction
package org transaction xa import java util Random import javax transaction Transaction import org commands write Write Command import org configuration cache Configuration import org container versioning Numeric Version import org container versioning Version Generator import org factories Known Component Names import org factories annotations Component Name import org factories annotations Inject import org factories annotations Start import org remoting transport Address import org transaction impl Local Transaction import org transaction impl Remote Transaction import org transaction synchronization Sync Local Transaction import org transaction xa recovery Recovery Aware Dld Global Transaction import org transaction xa recovery Recovery Aware Global Transaction import org transaction xa recovery Recovery Aware Local Transaction import org transaction xa recovery Recovery Aware Remote Transaction import org util Time Service import org util logging Log import org util logging Log Factory Factory transaction related sate author Mircea Markus jboss com public class Transaction Factory private static final Log log Log Factory get Log Transaction Factory class private Tx Factory Enum tx Factory Enum private Configuration configuration private Version Generator cluster Id Generator private Time Service time Service private boolean Clustered public enum Tx Factory Enum Deprecated Override public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time return new Recovery Aware Local Transaction tx gtx implicit Transaction topology Id tx Creation Time Override public Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered Recovery Aware Dld Global Transaction dld Global Transaction new Recovery Aware Dld Global Transaction addr remote ideal causes issues far Could internal id Object instead long dld Global Transaction set Internal Id Numeric Version cluster Id Generator generate New get Version return add Coin Toss dld Global Transaction Override public Global Transaction new Global Transaction return new Recovery Aware Dld Global Transaction Override public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time return new Recovery Aware Remote Transaction modifications tx topology Id tx Creation Time Override public Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time return new Recovery Aware Remote Transaction tx topology Id tx Creation Time Deprecated Override public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time return new Local Xa Transaction tx gtx implicit Transaction topology Id tx Creation Time Override public Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered return add Coin Toss new Dld Global Transaction addr remote Override public Global Transaction new Global Transaction return new Dld Global Transaction Override public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction modifications tx topology Id tx Creation Time Override public Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction tx topology Id tx Creation Time Deprecated Override public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time return new Sync Local Transaction tx gtx implicit Transaction topology Id tx Creation Time Override public Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered return add Coin Toss new Dld Global Transaction addr remote Override public Global Transaction new Global Transaction return new Dld Global Transaction Override public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction modifications tx topology Id tx Creation Time Override public Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction tx topology Id tx Creation Time Override public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time return new Recovery Aware Local Transaction tx gtx implicit Transaction topology Id tx Creation Time Override public Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered Recovery Aware Global Transaction recovery Aware Global Transaction new Recovery Aware Global Transaction addr remote ideal causes issues far Could internal id Object instead long recovery Aware Global Transaction set Internal Id Numeric Version cluster Id Generator generate New get Version return recovery Aware Global Transaction Override public Global Transaction new Global Transaction return new Recovery Aware Global Transaction Override public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time return new Recovery Aware Remote Transaction modifications tx topology Id tx Creation Time Override public Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time return new Recovery Aware Remote Transaction tx topology Id tx Creation Time Override public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time return new Local Xa Transaction tx gtx implicit Transaction topology Id tx Creation Time Override public Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered return new Global Transaction addr remote Override public Global Transaction new Global Transaction return new Global Transaction Override public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction modifications tx topology Id tx Creation Time Override public Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction tx topology Id tx Creation Time Override public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time return new Sync Local Transaction tx gtx implicit Transaction topology Id tx Creation Time Override public Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered return new Global Transaction addr remote Override public Global Transaction new Global Transaction return new Global Transaction Override public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction modifications tx topology Id tx Creation Time Override public Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time return new Remote Transaction tx topology Id tx Creation Time public abstract Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id long tx Creation Time public abstract Global Transaction new Global Transaction Address addr boolean remote Version Generator cluster Id Generator boolean clustered public abstract Global Transaction new Global Transaction protected long generate Random Id return rnd next Long protected Global Transaction add Coin Toss Dld Global Transaction dld Global Transaction dld Global Transaction set Coin Toss generate Random Id return dld Global Transaction class internally synchronized shared instances private final Random rnd new Random public abstract Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id long tx Creation Time public abstract Remote Transaction new Remote Transaction Global Transaction tx int topology Id long tx Creation Time public Global Transaction new Global Transaction return tx Factory Enum new Global Transaction public Global Transaction new Global Transaction Address addr boolean remote return tx Factory Enum new Global Transaction addr remote cluster Id Generator Clustered public Local Transaction new Local Transaction Transaction tx Global Transaction gtx boolean implicit Transaction int topology Id return tx Factory Enum new Local Transaction tx gtx implicit Transaction topology Id time Service time public Remote Transaction new Remote Transaction Write Command modifications Global Transaction tx int topology Id return tx Factory Enum new Remote Transaction modifications tx topology Id time Service time public Remote Transaction new Remote Transaction Global Transaction tx int topology Id return tx Factory Enum new Remote Transaction tx topology Id time Service time Inject public void init Configuration configuration Component Name value Known Component Names Version Generator cluster Id Generator Time Service time Service configuration configuration cluster Id Generator cluster Id Generator time Service time Service Start public void start boolean xa configuration transaction use Synchronization boolean recovery Enabled configuration transaction recovery enabled boolean batching Enabled configuration invocation Batching enabled init false recovery Enabled xa batching Enabled Clustered configuration clustering cache Mode Clustered public void init boolean dld Enabled boolean recovery Enabled boolean xa boolean batching Enabled batching Enabled tx Factory Enum Tx Factory Enum else recovery Enabled xa tx Factory Enum Tx Factory Enum else using synchronisation enlistment tx Factory Enum Tx Factory Enum else xa tx Factory Enum Tx Factory Enum else tx Factory Enum Tx Factory Enum log tracef Setting factory enum tx Factory Enum
package org factories import javax transaction Transaction Manager import org commons Cache Exception import org factories annotations Default Factory import org transaction lookup Transaction Manager Lookup import org transaction tm Batch Mode Transaction Manager import org util logging Log import org util logging Log Factory Uses number mechanisms retrieve transaction manager author Manik Surtani href mailto manik jboss org manik jboss org author Galder Zamarre since Default Factory classes Transaction Manager class public class Transaction Manager Factory extends Abstract Named Cache Component Factory implements Auto Instantiable Factory private static final Log log Log Factory get Log Transaction Manager Factory class Override public construct Class component Type configuration transaction transaction Mode Transactional return null See Transaction Manager injected config Transaction Manager transaction Manager null Transaction Manager Lookup lookup configuration transaction transaction Manager Lookup try lookup null component Registry wire Dependencies lookup transaction Manager lookup get Transaction Manager catch Exception e log could Instantiate Transaction Manager e transaction Manager null configuration invocation Batching enabled log using Batch Mode Transaction Manager transaction Manager Batch Mode Transaction Manager get Instance transaction Manager null throw new Cache Exception transactional cache transaction manager could found Configure transaction manager lookup properly return component Type cast transaction Manager
Boss Home Professional Open Source Copyright Red Hat Inc individual contributors indicated author tags See copyright txt file distribution full listing individual contributors free software redistribute modify terms Lesser General Public License published Free Software Foundation either version License option later version software distributed hope useful without even implied warranty See Lesser General Public License details received copy Lesser General Public License along software write Free Software Foundation Inc Franklin St Fifth Floor Boston see site http www fsf org package org jboss clustering subsystem author Paul Ferraro public enum Transaction Mode org transaction Transaction Mode false false org transaction Transaction Mode false false org transaction Transaction Mode true false org transaction Transaction Mode true true private final org transaction Transaction Mode mode private final boolean xa Enabled private final boolean recovery Enabled private Transaction Mode org transaction Transaction Mode mode boolean xa Enabled boolean recovery Enabled mode mode xa Enabled xa Enabled recovery Enabled recovery Enabled public org transaction Transaction Mode get Mode return mode public boolean Enabled return xa Enabled public boolean Recovery Enabled return recovery Enabled
package org transaction import java util Collection import javax transaction Transaction import org transaction xa Global Transaction Interface allows fetch link org transaction xa Global Transaction associated local remote transactions author Pedro Ruivo since public interface Transaction Table param transaction local transaction Must non null return link org transaction xa Global Transaction associated transaction code null n exists Global Transaction get Global Transaction Transaction transaction return unmodified collection link org transaction xa Global Transaction associated local running transactions Collection Global Transaction get Local Global Transaction return unmodified collection link org transaction xa Global Transaction associated remote transactions Collection Global Transaction get Remote Global Transaction
package org container entries import static org commons util Util Str import java io Exception import java io Object Input import java io Object Output import java util Set import java util concurrent Time Unit import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids import org metadata Embedded Metadata import org metadata Metadata cache entry transient e considered expired period used author Manik Surtani since public class Transient Cache Entry extends Abstract Internal Cache Entry protected Object value protected long max Idle protected long last Used public Transient Cache Entry Object key Object value long max Idle long last Used super key value value max Idle max Idle last Used last Used Override public Object get Value return value Override public Object set Value Object value return value value Override public final void touch touch System current Time Millis Override public final void touch long current Time Millis last Used current Time Millis Override public final void reincarnate op Override public void reincarnate long op Override public final boolean Expire return true Override public boolean Expired long return Expiry Helper Expired Transient max Idle last Used Override public boolean Expired return Expired System current Time Millis public void set Max Idle long max Idle max Idle max Idle Override public long get Created return Override public final long get Last Used return last Used Override public long get Lifespan return Override public long get Expiry Time return max Idle last Used max Idle Override public final long get Max Idle return max Idle Override public Internal Cache Value Internal Cache Value return new Transient Cache Value value max Idle last Used Override public Metadata get Metadata return new Embedded Metadata Builder max Idle max Idle Time Unit build Override public void set Metadata Metadata metadata throw new Illegal State Exception Metadata set mortal entries need recreated via entry factory Override public Transient Cache Entry clone return Transient Cache Entry super clone public static class Externalizer extends Abstract Externalizer Transient Cache Entry Override public void write Object Object Output output Transient Cache Entry tce throws Exception output write Object tce key output write Object tce value Unsigned Numeric write Unsigned Long output tce last Used output write Long tce max Idle could negative use unsigned longs Override public Transient Cache Entry read Object Object Input input throws Exception Class Found Exception Object k input read Object Object v input read Object long last Used Unsigned Numeric read Unsigned Long input Long max Idle input read Long return new Transient Cache Entry k v max Idle last Used Override public Integer get Id return Ids Override public Set Class extends Transient Cache Entry get Type Classes return Util Set Transient Cache Entry class Override public String String return Transient Cache Entry key Str key value Str value
package org container entries import java io Exception import java io Object Input import java io Object Output import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids transient cache value correspond link org container entries Transient Cache Entry author Manik Surtani since public class Transient Cache Value extends Immortal Cache Value protected long max Idle protected long last Used public Transient Cache Value Object value long max Idle long last Used super value max Idle max Idle last Used last Used Override public long get Max Idle return max Idle public void set Max Idle long max Idle max Idle max Idle Override public long get Last Used return last Used public void set Last Used long last Used last Used last Used Override public final boolean Expired long return Expiry Helper Expired Transient max Idle last Used Override public final boolean Expired return Expired System current Time Millis Override public boolean Expire return true Override public Internal Cache Entry Internal Cache Entry Object key return new Transient Cache Entry key value max Idle last Used Override public long get Expiry Time return max Idle last Used max Idle Override public boolean equals Object return true instanceof Transient Cache Value return false super equals return false Transient Cache Value Transient Cache Value last Used last Used return false max Idle max Idle return false return true Override public int hash Code int result super hash Code result result int max Idle max Idle result result int last Used last Used return result Override public String String return Transient Cache Value max Idle max Idle last Used last Used super String Override public Transient Cache Value clone return Transient Cache Value super clone public static class Externalizer extends Abstract Externalizer Transient Cache Value Override public void write Object Object Output output Transient Cache Value tcv throws Exception output write Object tcv value Unsigned Numeric write Unsigned Long output tcv last Used output write Long tcv max Idle could negative use unsigned longs Override public Transient Cache Value read Object Object Input input throws Exception Class Found Exception Object v input read Object long last Used Unsigned Numeric read Unsigned Long input Long max Idle input read Long return new Transient Cache Value v max Idle last Used Override public Integer get Id return Ids Override public Set Class extends Transient Cache Value get Type Classes return Util Class extends Transient Cache Value Set Transient Cache Value class
package org container entries import static java lang Math min import static org commons util Util Str import java io Exception import java io Object Input import java io Object Output import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids import org metadata Embedded Metadata import org metadata Metadata cache entry transient mortal author Manik Surtani since public class Transient Mortal Cache Entry extends Abstract Internal Cache Entry protected Object value protected long max Idle protected long last Used protected long lifespan protected long created public Transient Mortal Cache Entry Object key Object value long max Idle long lifespan long current Time Millis key value max Idle lifespan current Time Millis current Time Millis public Transient Mortal Cache Entry Object key Object value long max Idle long lifespan long last Used long created super key value value max Idle max Idle lifespan lifespan created created last Used last Used public void set Lifespan long lifespan lifespan lifespan public void set Max Idle long max Idle max Idle max Idle Override public Object get Value return value Override public long get Lifespan return lifespan Override public final boolean Expire return true Override public long get Created return created Override public boolean Expired long return Expiry Helper Expired Transient Mortal max Idle last Used lifespan created Override public boolean Expired return Expired System current Time Millis Override public final long get Expiry Time long lset lifespan created lifespan long muet max Idle last Used max Idle lset return muet muet return lset return min lset muet Override public Internal Cache Value Internal Cache Value return new Transient Mortal Cache Value value created lifespan max Idle last Used Override public long get Last Used return last Used Override public final void touch touch System current Time Millis Override public final void touch long current Time Millis last Used current Time Millis Override public final void reincarnate reincarnate System current Time Millis Override public void reincarnate long created Override public long get Max Idle return max Idle Override public Object set Value Object value return value value Override public Metadata get Metadata return new Embedded Metadata Builder lifespan lifespan max Idle max Idle build Override public void set Metadata Metadata metadata throw new Illegal State Exception Metadata set mortal entries need recreated via entry factory Override public Transient Mortal Cache Entry clone return Transient Mortal Cache Entry super clone Override public String String return get Class get Simple Name key Str key value Str value public static class Externalizer extends Abstract Externalizer Transient Mortal Cache Entry Override public void write Object Object Output output Transient Mortal Cache Entry entry throws Exception output write Object entry key output write Object entry value Unsigned Numeric write Unsigned Long output entry created output write Long entry lifespan could negative use unsigned longs Unsigned Numeric write Unsigned Long output entry last Used output write Long entry max Idle could negative use unsigned longs Override public Transient Mortal Cache Entry read Object Object Input input throws Exception Class Found Exception Object k input read Object Object v input read Object long created Unsigned Numeric read Unsigned Long input Long lifespan input read Long long last Used Unsigned Numeric read Unsigned Long input Long max Idle input read Long return new Transient Mortal Cache Entry k v max Idle lifespan last Used created Override public Integer get Id return Ids Override public Set Class extends Transient Mortal Cache Entry get Type Classes return Util Set Transient Mortal Cache Entry class
package org container entries import static java lang Math min import java io Exception import java io Object Input import java io Object Output import java util Set import org commons io Unsigned Numeric import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids transient mortal cache value correspond link org container entries Transient Mortal Cache Entry author Manik Surtani since public class Transient Mortal Cache Value extends Mortal Cache Value protected long max Idle protected long last Used public Transient Mortal Cache Value Object value long created long lifespan long max Idle long last Used value created lifespan max Idle last Used last Used public Transient Mortal Cache Value Object value long created long lifespan long max Idle super value created lifespan max Idle max Idle Override public long get Max Idle return max Idle public void set Max Idle long max Idle max Idle max Idle Override public long get Last Used return last Used public void set Last Used long last Used last Used last Used Override public boolean Expired long return Expiry Helper Expired Transient Mortal max Idle last Used lifespan created Override public boolean Expired return Expired System current Time Millis Override public Internal Cache Entry Internal Cache Entry Object key return new Transient Mortal Cache Entry key value max Idle lifespan last Used created Override public long get Expiry Time long lset lifespan created lifespan long muet max Idle last Used max Idle lset return muet muet return lset return min lset muet Override public boolean equals Object return true instanceof Transient Mortal Cache Value return false super equals return false Transient Mortal Cache Value Transient Mortal Cache Value last Used last Used return false max Idle max Idle return false return true Override public int hash Code int result super hash Code result result int max Idle max Idle result result int last Used last Used return result Override public String String return Transient Mortal Cache Value max Idle max Idle last Used last Used super String Override public Transient Mortal Cache Value clone return Transient Mortal Cache Value super clone public static class Externalizer extends Abstract Externalizer Transient Mortal Cache Value Override public void write Object Object Output output Transient Mortal Cache Value value throws Exception output write Object value value Unsigned Numeric write Unsigned Long output value created output write Long value lifespan could negative use unsigned longs Unsigned Numeric write Unsigned Long output value last Used output write Long value max Idle could negative use unsigned longs Override public Transient Mortal Cache Value read Object Object Input input throws Exception Class Found Exception Object v input read Object long created Unsigned Numeric read Unsigned Long input Long lifespan input read Long long last Used Unsigned Numeric read Unsigned Long input Long max Idle input read Long return new Transient Mortal Cache Value v created lifespan max Idle last Used Override public Integer get Id return Ids Override public Set Class extends Transient Mortal Cache Value get Type Classes return Util Class extends Transient Mortal Cache Value Set Transient Mortal Cache Value class
Boss Home Professional Open Source Copyright Red Hat Inc individual contributors indicated author tags See copyright txt file distribution full listing individual contributors free software redistribute modify terms Lesser General Public License published Free Software Foundation either version License option later version software distributed hope useful without even implied warranty See Lesser General Public License details received copy Lesser General Public License along software write Free Software Foundation Inc Franklin St Fifth Floor Boston see site http www fsf org package org server jgroups spi import org jboss network Socket Binding Defines configuration Groups transport protocol author Paul Ferraro public interface Transport Configuration extends Protocol Configuration boolean Shared Socket Binding get Diagnostics Socket Binding Topology get Topology interface Topology String get Machine String get Rack String get Site
package org jboss clustering subsystem import java util concurrent Time Unit import org server commons service Builder import org server spi service Cache Container Service Name import org server jgroups spi Channel Factory import org server jgroups spi service Channel Service Name import org jboss clustering subsystem Embedded Cache Manager Configuration Service Transport Configuration import org jboss msc service Service Builder import org jboss msc service Service Controller import org jboss msc service Service Name import org jboss msc service Service Target import org jboss msc service Value Service import org jboss msc value Injected Value import org jboss msc value Value import org jgroups Channel public class Transport Configuration Builder implements Builder Transport Configuration Value Transport Configuration Transport Configuration private final Injected Value Channel channel new Injected Value private final Injected Value Channel Factory factory new Injected Value private final String name private Long lock Timeout private boolean strict Peer Peer private int initial Cluster Size private long initial Cluster Timeout public Transport Configuration Builder String name name name Transport Configuration Builder set Lock Timeout long lock Timeout Time Unit time Unit lock Timeout time Unit Millis lock Timeout return Transport Configuration Builder set Strict Peer Peer boolean strict Peer Peer strict Peer Peer strict Peer Peer return Transport Configuration Builder set Initial Cluster Size int initial Cluster Size initial Cluster Size initial Cluster Size return Transport Configuration Builder set Initial Cluster Timeout long initial Cluster Timeout initial Cluster Timeout initial Cluster Timeout return Override public Channel Factory get Channel Factory return factory get Value Override public Channel get Channel return channel get Value Override public boolean Strict Peer Peer return strict Peer Peer Override public Long get Lock Timeout return lock Timeout Override public int get Initial Cluster Size return initial Cluster Size Override public long get Initial Cluster Timeout return initial Cluster Timeout Override public Transport Configuration get Value throws Illegal State Exception Illegal Argument Exception return Override public Service Name get Service Name return Cache Container Service Name get Service Name name append transport Override public Service Builder Transport Configuration build Service Target target Service Builder Transport Configuration builder target add Service get Service Name new Value Service add Dependency Channel Service Name get Service Name name Channel class channel add Dependency Channel Service Name get Service Name name Channel Factory class factory return builder set Initial Mode Service Controller Mode
package org client hotrod impl transport import java net Socket Address import java util Collection import java util Map import java util Set import java util concurrent atomic Atomic Integer import javax net ssl Context import org client hotrod Cache Topology Info import org client hotrod configuration Configuration import org client hotrod event Client Listener Notifier import org client hotrod impl consistenthash Consistent Hash import org client hotrod impl consistenthash Consistent Hash Factory import org client hotrod impl operations Add Client Listener Operation import org client hotrod impl protocol Codec import org client hotrod impl transport tcp Tcp Transport Factory Cluster Switch Status import org commons marshall Marshaller Transport factory building managing link org client hotrod impl transport Transport objects author Mircea Markus jboss com since public interface Transport Factory Transport get Transport Set Socket Address failed Servers byte cache Name Transport get Address Transport Socket Address server Socket Address get Socket Address Object key byte cache Name void release Transport Transport transport void start Codec codec Configuration configuration Atomic Integer topology Id Client Listener Notifier listener Notifier void update Servers Collection Socket Address new Servers byte cache Name boolean quiet void destroy Cache Topology Info get Cache Topology Info byte cache Name deprecated called Hot Rod x protocol Deprecated void update Hash Function Map Socket Address Set Integer servers Hash int num Key Owners short hash Function Version int hash Space byte cache Name Atomic Integer topology Id void update Hash Function Socket Address segment Owners int num Segments short hash Function Version byte cache Name Atomic Integer topology Id Consistent Hash get Consistent Hash byte cache Name Consistent Hash Factory get Consistent Hash Factory Transport get Transport Object key Set Socket Address failed Servers byte cache Name boolean Tcp Delay boolean Tcp Keep Alive int get Max Retries int get Timeout int get Connect Timeout void invalidate Transport Socket Address server Address Transport transport Context get Context void reset byte cache Name Atomic Integer create Topology Id byte cache Name int get Topology Id byte cache Name Cluster Switch Status try Switch Cluster String failed Cluster Name byte cache Name Marshaller get Marshaller boolean switch Cluster String cluster Name String get Current Cluster Name int get Topology Age String get Sni Host Name void add Disconnected Listener Add Client Listener Operation listener throws Interrupted Exception
package org interceptors distribution import static org commands Visitable Command Load Type import static org commands Visitable Command Load Type import java util Array List import java util Collection import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Set import java util concurrent Completable Future import org commands Command Invocation Id import org commands Commands Factory import org commands Flag Affected Command import org commands Topology Affected Command import org commands Visitable Command import org commands read Get Cache Entry Command import org commands read Get Key Value Command import org commands write Abstract Data Write Command import org commands write Backup Ack Command import org commands write Backup Multi Key Ack Command import org commands write Backup Put Map Rpc Command import org commands write Backup Write Rpc Command import org commands write Compute Command import org commands write Compute Absent Command import org commands write Data Write Command import org commands write Put Key Value Command import org commands write Put Map Command import org commands write Remove Command import org commands write Replace Command import org commons util Collections import org container entries Cache Entry import org context Invocation Context import org context impl Flag Bit Sets import org distribution Distribution Info import org distribution Localized Cache Topology import org distribution Triangle Order Manager import org factories annotations Inject import org factories annotations Start import org remoting inboundhandler Deliver Order import org remoting responses Response import org remoting responses Successful Response import org remoting responses Unsuccessful Response import org remoting responses Valid Response import org remoting transport Address import org statetransfer Outdated Topology Exception import org statetransfer State Transfer Interceptor import org util concurrent Command Ack Collector import org util concurrent Completable Futures import org util logging Log import org util logging Log Factory Non transactional interceptor used distributed caches supports concurrent writes p implemented based Triangle algorithm p link Get Key Value Command reads value locally available node owner value stored n available remote request made link Data Write Command performed follow ul li command forwarded primary owner key li li primary owner locks key executes operation sends link Backup Write Rpc Command backup owners releases lock sends link Successful Response link Unsuccessful Response back originator li li backup owner applies update sends link Backup Ack Command back originator li li originator collects ack owners returns li ul link Put Map Command performed similar way ul li subset map split primary owner li li primary owner locks key executes command splits keys backup owner send replies originator li li backup owner applies update sends back link Backup Multi Key Ack Command originator li li originator collects acknowledges owners returns li ul acknowledges management done link Command Ack Collector p topology changes command executed link Outdated Topology Exception thrown link State Transfer Interceptor catch retries command p finish wiki page add link author Pedro Ruivo since public class Triangle Distribution Interceptor extends Non Tx Distribution Interceptor private static final Log log Log Factory get Log Triangle Distribution Interceptor class private static final boolean trace log Trace Enabled private Command Ack Collector command Ack Collector private Commands Factory commands Factory private Triangle Order Manager triangle Order Manager private Address local Address private static Map Object Object merge Maps Map Address Response responses Map Object Object result Map noinspection unchecked Map Object Object remote Map Map Object Object Successful Response responses values iterator next get Response Value return Collections merge Maps result Map remote Map Inject public void inject Command Ack Collector command Ack Collector Commands Factory commands Factory Triangle Order Manager triangle Order Manager command Ack Collector command Ack Collector commands Factory commands Factory triangle Order Manager triangle Order Manager Start public void start local Address rpc Manager get Address Override public Object visit Put Key Value Command Invocation Context ctx Put Key Value Command command throws Throwable return handle Data Write Command ctx command Override public Object visit Put Map Command Invocation Context ctx Put Map Command command throws Throwable ctx Origin Local return handle Local Put Map Command ctx command else return handle Remote Put Map Command ctx command Override public Object visit Remove Command Invocation Context ctx Remove Command command throws Throwable return handle Data Write Command ctx command Override public Object visit Replace Command Invocation Context ctx Replace Command command throws Throwable return handle Data Write Command ctx command Override public Object visit Compute Command Invocation Context ctx Compute Command command throws Throwable return handle Data Write Command ctx command Override public Object visit Compute Absent Command Invocation Context ctx Compute Absent Command command throws Throwable return handle Data Write Command ctx command private Object handle Remote Put Map Command Invocation Context ctx Put Map Command command Localized Cache Topology cache Topology check Topology Id command final Visitable Command Load Type load Type command load Type command Forwarded backup remote backups return async Invoke Next ctx command check Remote Get Needed ctx command command get Map key Set cache Topology load Type primary need send command backups ordered send Backups command command get Map cache Topology return async Invoke Next ctx command check Remote Get Needed ctx command command get Map key Set cache Topology load Type private void send Backups Put Map Command command Map Object Object entries Localized Cache Topology cache Topology Backup Owner Classifier filter new Backup Owner Classifier cache Topology entries size entries entry Set filter add int topology Id command get Topology Id Map Entry Integer Map Object Object entry filter per Segment Key Value entry Set int segment Id entry get Key Collection Address backups cache Topology get Distribution Segment segment Id write Backups backups Empty primary owner segments may one owner e g rebalance continue Map Object Object map entry get Value long sequence triangle Order Manager next segment Id topology Id Backup Put Map Rpc Command backup Put Map Rpc Command commands Factory build Backup Put Map Rpc Command command backup Put Map Rpc Command set Map map backup Put Map Rpc Command set Sequence sequence trace log tracef Command got sequence segment command get Command Invocation Id segment Id sequence rpc Manager send Many backups backup Put Map Rpc Command Deliver Order private Object handle Local Put Map Command Invocation Context ctx Put Map Command command local command need split primary owner send command final Localized Cache Topology cache Topology check Topology Id command final Primary Owner Classifier filter new Primary Owner Classifier cache Topology command get Map size final boolean sync Synchronous command final Visitable Command Load Type load Type command load Type command get Map entry Set filter add sync Collector Map Object Object collector command Ack Collector create Multi Key Collector command get Command Invocation Id get Id filter primaries key Set filter backups command get Topology Id Completable Future Map Object Object local Result new Completable Future final Map Object Object local Entries filter primaries remove local Address forward Primary Owners command filter local Result handle map throwable throwable null collector primary Exception throwable else collector primary Result map true return null local Entries null send Backups command local Entries cache Topology Completable Future remote Get check Remote Get Needed ctx command local Entries key Set cache Topology load Type load Type return make Stage async Invoke Next ctx command remote Get Handle ctx command r Ctx r Command rv throwable throwable null local Result complete Exceptionally Completable Futures extract Exception throwable else noinspection unchecked local Result complete Map Object Object rv return async Value collector get Future else local Result complete command Flag Flag Bit Sets null new Hash Map return async Value collector get Future final Map Object Object local Entries filter primaries remove local Address forward Primary Owners command filter local Entries null send Backups command local Entries cache Topology return async Invoke Next ctx command check Remote Get Needed ctx command local Entries key Set cache Topology load Type load Type return null private extends Flag Affected Command Topology Affected Command Completable Future check Remote Get Needed Invocation Context ctx command Set Object keys Localized Cache Topology cache Topology boolean needs Previous Value needs Previous Value Object key keys Cache Entry cache Entry ctx lookup Entry key cache Entry null cache Topology Write Owner key entry Factory wrap External Entry ctx key null false true return Completable Futures completed Null final List Completable Future future List new Array List keys size Object key keys Cache Entry cache Entry ctx lookup Entry key cache Entry null cache Topology Write Owner key wrap Key Externally ctx command key future List final int size future List size size return Completable Futures completed Null Completable Future array new Completable Future size future List Array array return Completable Future array private extends Flag Affected Command Topology Affected Command void wrap Key Externally Invocation Context ctx command Object key List Completable Future future List command Flag Flag Bit Sets Flag Bit Sets entry Factory wrap External Entry ctx key null false true else Get Cache Entry Command fake Get Command cf build Get Cache Entry Command key command get Flags Bit Set fake Get Command set Topology Id command get Topology Id future List add remote Get ctx fake Get Command key true private void forward Primary Owners Put Map Command command Primary Owner Classifier splitter Map Entry Address Map Object Object entry splitter primaries entry Set Put Map Command copy new Put Map Command command false copy set Map entry get Value rpc Manager send entry get Key copy Deliver Order private Completable Future Map Object Object forward Primary Owners Put Map Command command Primary Owner Classifier splitter Completable Future Map Object Object local Result Completable Future Map Object Object future local Result Map Entry Address Map Object Object entry splitter primaries entry Set Put Map Command copy new Put Map Command command false copy set Map entry get Value Completable Future Map Address Response remote Future rpc Manager invoke Remotely Async Collections singleton entry get Key copy default Sync Options future remote Future Combine future Triangle Distribution Interceptor merge Maps return future override handle Non Tx Write Command functional commands triangelized private Object handle Data Write Command Invocation Context context Abstract Data Write Command command assert context Tx Scope command Flag Flag Bit Sets n go triangle return invoke Next context command Localized Cache Topology topology check Topology Id command Distribution Info distribution Info topology get Distribution command get Key distribution Info Primary assert context lookup Entry command get Key null return context Origin Local local Primary Owner Write context command distribution Info remote Primary Owner Write context command distribution Info else distribution Info Write Backup return context Origin Local local Write Invocation context command distribution Info remote Backup Owner Write context command else always local assert context Origin Local return local Write Invocation context command distribution Info private Object remote Backup Owner Write Invocation Context context Data Write Command command Cache Entry entry context lookup Entry command get Key entry null command load Type return async Invoke Next context command remote Get context command command get Key true entry Factory wrap External Entry context command get Key null false true return invoke Next context command private Object local Primary Owner Write Invocation Context context Data Write Command command Distribution Info distribution Info command Flag Flag Bit Sets command set Value Matcher command get Value Matcher matcher Retry return invoke Next Apply context command r Ctx r Command rv final Data Write Command dw Command Data Write Command r Command final Command Invocation Id id dw Command get Command Invocation Id Collection Address backup Owners distribution Info write Backups dw Command Successful backup Owners Empty trace log tracef Command successful primary owner id return rv final int topology Id dw Command get Topology Id Synchronous dw Command dw Command Return Value Expected Collector Object collector command Ack Collector create id get Id backup Owners topology Id check topology registering collector n collector may wait forever timeout non existing acknowledges check Topology Id topology Id collector collector primary Result rv true send Backups distribution Info dw Command backup Owners return async Value collector get Future else send Backups distribution Info dw Command backup Owners return rv private Object remote Primary Owner Write Invocation Context context Data Write Command command final Distribution Info distribution Info primary owner need execute command check successful send backups reply originator needed command Flag Flag Bit Sets command set Value Matcher command get Value Matcher matcher Retry return invoke Next Apply context command r Ctx r Command rv final Data Write Command dw Command Data Write Command r Command final Command Invocation Id id dw Command get Command Invocation Id Collection Address backup Owners distribution Info write Backups dw Command Successful backup Owners Empty trace log tracef Command successful primary owner id return rv send Backups distribution Info dw Command backup Owners return rv private void send Backups Distribution Info distribution Info Data Write Command command Collection Address backup Owners Command Invocation Id id command get Command Invocation Id int segment Id distribution Info segment Id trace log tracef Command send backup owner id backup Owners long sequence Number triangle Order Manager next segment Id command get Topology Id Backup Write Rpc Command backup Write Rpc Command commands Factory build Backup Write Rpc Command command backup Write Rpc Command set Sequence sequence Number trace log tracef Command got sequence segment id sequence Number segment Id must send message collector registered map rpc Manager send Many backup Owners backup Write Rpc Command Deliver Order private Object local Write Invocation Invocation Context context Data Write Command command Distribution Info distribution Info assert context Origin Local final Command Invocation Id invocation Id command get Command Invocation Id Synchronous command command Return Value Expected command Flag Flag Bit Sets final int topology Id command get Topology Id Collector Object collector command Ack Collector create invocation Id get Id distribution Info write Backups topology Id check topology registering collector n collector may wait forever timeout non existing acknowledges check Topology Id topology Id collector forward Primary command distribution Info collector return async Value collector get Future else rpc Manager send distribution Info primary command Deliver Order return null private void forward Primary Data Write Command command Distribution Info distribution Info Collector Object collector Completable Future Map Address Response remote Invocation rpc Manager invoke Remotely Async Collections singleton List distribution Info primary command default Sync Options remote Invocation handle responses throwable throwable null collector primary Exception Completable Futures extract Exception throwable else Valid Response response Valid Response responses values iterator next response Successful command fail collector primary Result response get Response Value response Successful return null private void check Topology Id int topology Id Collector collector int current Topology Id state Transfer Manager get Cache Topology get Topology Id current Topology Id topology Id topology Id collector primary Exception Outdated Topology Exception throw Outdated Topology Exception Classifies keys primary owner address keys segments backup owners address segments p first map used forward command primary owner subset keys p second map used initialize link Command Ack Collector wait backups acknowledges private static class Primary Owner Classifier private final Map Address Collection Integer backups private final Map Address Map Object Object primaries private final Localized Cache Topology cache Topology private final int entry Count private Primary Owner Classifier Localized Cache Topology cache Topology int entry Count cache Topology cache Topology int member Size cache Topology get Members size backups new Hash Map member Size primaries new Hash Map member Size entry Count entry Count public void add Map Entry Object Object entry int segment cache Topology get Segment entry get Key Distribution Info distribution Info cache Topology get Distribution Segment segment final Address primary Owner distribution Info primary primaries compute Absent primary Owner address new Hash Map entry Count put entry get Key entry get Value Address backup distribution Info write Backups backups compute Absent backup address new Hash Set entry Count add segment classifier used primary owner handles remote link Put Map Command p maps backup owner address subset keys private static class Backup Owner Classifier private final Map Integer Map Object Object per Segment Key Value private final Localized Cache Topology cache Topology private final int entry Count private Backup Owner Classifier Localized Cache Topology cache Topology int entry Count cache Topology cache Topology per Segment Key Value new Hash Map cache Topology get Read Consistent Hash get Num Segments entry Count entry Count public void add Map Entry Object Object entry per Segment Key Value compute Absent cache Topology get Segment entry get Key address new Hash Map entry Count put entry get Key entry get Value
package org client hotrod impl import java util Properties import org client hotrod logging Log import org client hotrod logging Log Factory import org commons util String Property Replacer Type aware properties Extends link Properties class provide accessors convert values certain types using default values conversion possible config Ref name Properties add enclosing component author Manik Surtani since public class Typed Properties extends Properties serial Version private static final long serial Version private static final Log log Log Factory get Log Typed Properties class Copy constructor param p properties instance null treated empty Properties instance public Typed Properties Properties p p null p Empty put p Default constructor returns empty instance public Typed Properties Factory method converts link Properties instance instance Typed Properties needed param p properties convert return Typed Properties object Returns empty Typed Properties instance p null public static Typed Properties Typed Properties Properties p p instanceof Typed Properties return Typed Properties p return new Typed Properties p public int get Int Property String key int default Value return get Int Property key default Value false public int get Int Property String key int default Value boolean String Replace String value get Property key value null return default Value value value trim value length return default Value String Replace value String Property Replacer replace Properties value try return Integer parse Int value catch Number Format Exception nfe log unable Convert String Property Int value default Value return default Value public long get Long Property String key long default Value return get Long Property key default Value false public long get Long Property String key long default Value boolean String Replace String value get Property key value null return default Value value value trim value length return default Value String Replace value String Property Replacer replace Properties value try return Long parse Long value catch Number Format Exception nfe log unable Convert String Property Long value default Value return default Value public boolean get Boolean Property String key boolean default Value return get Boolean Property key default Value false public boolean get Boolean Property String key boolean default Value boolean String Replace String value get Property key value null return default Value value value trim value length return default Value String Replace value String Property Replacer replace Properties value try return Boolean parse Boolean value catch Exception e log unable Convert String Property Boolean value default Value return default Value public extends Enum get Enum Property String key Class enum Class default Value return get Enum Property key enum Class default Value false public extends Enum get Enum Property String key Class enum Class default Value boolean String Replace String value get Property key value null return default Value value value trim value length return default Value String Replace value String Property Replacer replace Properties value try return Enum value enum Class value catch Illegal Argument Exception e log unable Convert String Property Enum value default Value name return default Value Get property associated key optionally applying string property replacement defined link String Property Replacer replace Properties result param key hashtable key param default Value default value param String Replace boolean indicating whether apply string property replacement return value property list specified key valu optionally inspected String property replacement public String get Property String key String default Value boolean String Replace String Replace return String Property Replacer replace Properties get Property key default Value else return get Property key default Value Override public synchronized Typed Properties set Property String key String value super set Property key value return
package org container offheap import java util concurrent atomic Atomic Long import java util function Long Unary Operator import org factories annotations Inject import org util logging Log import org util logging Log Factory import sun misc Unsafe Memory allocator allocates memory directly using link Unsafe author wburns since public class Unpooled Heap Memory Allocator implements Heap Memory Allocator private static final Log log Log Factory get Log Unpooled Heap Memory Allocator class Log class private static final boolean trace log Trace Enabled private final Atomic Long amount Allocated new Atomic Long private Long Unary Operator size Calculator Inject public void inject Heap Entry Factory Heap Entry Factory size Calculator Heap Entry Factory get Size Override public long allocate long memory Length long memory Location Heap Memory allocate memory Length long current Size amount Allocated add Get memory Length trace log tracef Allocated heap memory x x bytes Total size memory Location memory Length current Size return memory Location Override public void deallocate long memory Address deallocate memory Address size Calculator apply Long memory Address Override public void deallocate long memory Address long size long current Size amount Allocated add Get size trace log tracef Deallocating heap memory x x bytes Total size memory Address size current Size Heap Memory free memory Address Override public long get Allocated Amount return amount Allocated get
package org configuration cache import java util Map import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set Controls certain tuning parameters may break public contracts exchange better performance cases p Use care thoroughly reading understanding documentation specific feature p see Unsafe Configuration Builder public class Unsafe Configuration public static final Attribute Definition Boolean Attribute Definition builder unreliable return values false immutable build static Attribute Set attribute Definition Set return new Attribute Set Unsafe Configuration class private final Attribute Boolean unreliable Return Values private final Attribute Set attributes Unsafe Configuration Attribute Set attributes attributes attributes check Protection unreliable Return Values attributes attribute Specifies whether allowed disregard link Map contract providing return values link org Cache put Object Object link org Cache remove Object methods public boolean unreliable Return Values return unreliable Return Values get public Attribute Set attributes return attributes Override public String String return attributes String Override public boolean equals Object Unsafe Configuration Unsafe Configuration return attributes equals attributes Override public int hash Code return attributes hash Code
package org configuration cache import static org configuration cache Unsafe Configuration import java util Map import org commons configuration Builder import org commons configuration attributes Attribute Set import org configuration global Global Configuration Controls certain tuning parameters may break public contracts exchange better performance cases p Use care thoroughly reading understanding documentation specific feature p public class Unsafe Configuration Builder extends Abstract Configuration Child Builder implements Builder Unsafe Configuration private final Attribute Set attributes protected Unsafe Configuration Builder Configuration Builder builder super builder attributes Unsafe Configuration attribute Definition Set Specify whether allowed disregard link Map contract providing return values link org Cache put Object Object link org Cache remove Object methods p Providing return values expensive may entail read disk across network usage methods never make use return values allowing unreliable return values helps optimize away remote calls disk reads p param allow Unreliable Return Values true return values methods described relied public Unsafe Configuration Builder unreliable Return Values boolean allow Unreliable Return Values attributes attribute set allow Unreliable Return Values return Override public void validate Nothing validate Override public void validate Global Configuration global Config Override public Unsafe Configuration create return new Unsafe Configuration attributes protect Override public Unsafe Configuration Builder read Unsafe Configuration template attributes read template attributes return Override public String String return get Class get Simple Name attributes
package org container offheap import java lang reflect Field import java security Access Controller import java security Privileged Action import org commons Cache Exception import sun misc Unsafe author wburns since class Unsafe Holder static Unsafe Unsafe Holder get Unsafe Suppress Warnings restriction private static Unsafe get Unsafe attempt access field Unsafe Unsafe final Object maybe Unsafe Access Controller Privileged Privileged Action Object try final Field unsafe Field Unsafe class get Declared Field Unsafe unsafe Field set Accessible true unsafe instance return unsafe Field get null catch Field Exception Security Exception Illegal Access Exception e return e maybe Unsafe instanceof Exception throw new Cache Exception Exception maybe Unsafe else return Unsafe maybe Unsafe
package org remoting responses import java io Exception import java io Object Input import java io Object Output import java util Set import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids unsuccessful response author Manik Surtani since public class Unsuccessful Response extends Valid Response public static final Unsuccessful Response new Unsuccessful Response null private final Object response Value private Unsuccessful Response Object value response Value value public static Unsuccessful Response create Object value return value null new Unsuccessful Response value Override public boolean Successful return false public Object get Response Value return response Value Override public String String return Unsuccessful Response response Value Util Str response Value Override public boolean equals Object return true null get Class get Class return false Unsuccessful Response Unsuccessful Response response Value null response Value equals response Value response Value null return false return true Override public int hash Code return response Value null response Value hash Code public static class Externalizer extends Abstract Externalizer Unsuccessful Response Override public void write Object Object Output output Unsuccessful Response response throws Exception output write Object response get Response Value Override public Unsuccessful Response read Object Object Input input throws Exception Class Found Exception return create input read Object Override public Integer get Id return Ids Override public Set Class extends Unsuccessful Response get Type Classes return Util Class extends Unsuccessful Response Set Unsuccessful Response class
package org remoting responses import java io Exception import java io Object Input import java io Object Output import java util Set import org commons marshall Abstract Externalizer import org commons util Util import org marshall core Ids unsure response used Dist essentially asks caller check next response next node since sender state flux probably middle rebalancing author Manik Surtani since public class Unsure Response extends Valid Response public static final Unsure Response new Unsure Response Override public boolean Successful return false Override public Object get Response Value throw new Unsupported Operation Exception public static class Externalizer extends Abstract Externalizer Unsure Response Override public void write Object Object Output output Unsure Response subject throws Exception Override public Unsure Response read Object Object Input input throws Exception Class Found Exception return Override public Integer get Id return Ids Override public Set Class extends Unsure Response get Type Classes return Util Class extends Unsure Response Set Unsure Response class
package org commons tx import javax transaction Status Transaction related util class author Pedro Ruivo since public class Util private Util public static String transaction Status String int status switch status case Status return case Status return case Status return case Status return case Status return case Status return case Status return case Status return case Status return case Status return default return unknown status status
package org cli commands server import org cli Context import org cli commands Processed Command import org kohsuke Meta Inf Services Meta Inf Services org cli commands Command class public class Version extends Abstract Server Command Override public String get Name return version Override public int nesting return Override public boolean Available Context context return true Override public void execute Context context Processed Command command Line context println Client Version Version class get Package get Implementation Version context Connected super execute context command Line
package org configuration cache import org commons configuration attributes Attribute import org commons configuration attributes Attribute Definition import org commons configuration attributes Attribute Set configuration element controls whether entries versioned Versioning necessary example using optimistic transactions clustered environment able perform write skew checks deprecated since automatically enable versioning needed Deprecated public class Versioning Configuration public static final Attribute Definition Boolean Attribute Definition builder enabled true immutable auto Persist false build public static final Attribute Definition Versioning Scheme Attribute Definition builder scheme Versioning Scheme immutable build static Attribute Set attribute Definition Set return new Attribute Set Versioning Configuration class private final Attribute Boolean enabled private final Attribute Versioning Scheme scheme private final Attribute Set attributes Versioning Configuration Attribute Set attributes attributes attributes check Protection enabled attributes attribute scheme attributes attribute public boolean enabled return enabled get public Versioning Scheme scheme return scheme get Override public boolean equals Object Versioning Configuration Versioning Configuration return attributes equals attributes Override public int hash Code return attributes hash Code Override public String String return attributes String public Attribute Set attributes return attributes
package org commons marshall import java io Exception import java io Object Input import java io Object Output import java util Arrays import java util Collections import java util Set import org commons util Util Simple wrapper around byte provide equals hash Code semantics author wburns since public class Wrapped Byte Array implements Wrapped Bytes private final byte bytes private transient int hash Code public Wrapped Byte Array byte bytes bytes bytes hash Code Arrays hash Code bytes public Wrapped Byte Array byte bytes int hash Code bytes bytes hash Code hash Code Override public byte get Bytes return bytes Override public int back Array Offset return Override public int get Length return bytes length Override public byte get Byte int offset return bytes offset Override public boolean equals Object return true null return false Class Class get Class get Class Class return Wrapped Bytes class Assignable Class equals Wrapped Bytes Wrapped Bytes Wrapped Byte Array Wrapped Byte Array return Arrays equals bytes bytes public boolean equals Wrapped Bytes Wrapped Bytes int length get Length get Length length return false hash Code hash Code return false int length get Byte get Byte return false return true Override public int hash Code return hash Code Override public String String return Wrapped Byte Array bytes Util print Array bytes hash Code hash Code public static class Externalizer extends Abstract Externalizer Wrapped Byte Array Override public Set Class extends Wrapped Byte Array get Type Classes return Collections singleton Wrapped Byte Array class Override public Integer get Id return Ids Override public void write Object Object Output output Wrapped Byte Array object throws Exception Marshall Util marshall Byte Array object bytes output Override public Wrapped Byte Array read Object Object Input input throws Exception Class Found Exception byte bytes Marshall Util unmarshall Byte Array input return new Wrapped Byte Array bytes
package org commands write import java util Collection import org commands Flag Affected Command import org commands Topology Affected Command import org commands Visitable Command command modifies cache way author Manik Surtani since public interface Write Command extends Visitable Command Flag Affected Command Topology Affected Command commands may want provide information whether command successful different failure usually would result exception thrown example put Absent anything key question present would result Successful call returning false return true command completed successfully false otherwise boolean Successful Certain commands work based certain condition state cache example link org Cache put Absent Object Object anything condition met e entry question already present method tests whether command question conditional return true command conditional false otherwise boolean Conditional return current value matching policy Value Matcher get Value Matcher param value Matcher new value matching policy void set Value Matcher Value Matcher value Matcher return collection keys affected write command commands Clear Command may return empty collection method Collection get Affected Keys Used conditional commands update status command originator based result execution primary owner deprecated since Deprecated default void update Status Remote Response Object remote Response Make subsequent invocations link Successful return code false code void fail Indicates whether command write meaning makes attempt read previously associated value key command directed return true command write false otherwise default boolean Write return false
package org transaction xa import java util concurrent Concurrent Map import javax transaction Transaction import javax transaction xa Exception import javax transaction xa Xid import org Cache import org commons Cache Exception import org commons tx Xid Impl import org commons util Collection Factory import org configuration cache Configurations import org factories annotations Inject import org factories annotations Start import org transaction impl Local Transaction import org transaction impl Transaction Table import org transaction xa recovery Recovery Manager import org util logging Log import org util logging Log Factory link Transaction Table used link Transaction Xa Adapter author Mircea Markus jboss com since public class Xa Transaction Table extends Transaction Table private static final Log log Log Factory get Log Xa Transaction Table class private static final boolean trace log Trace Enabled protected Concurrent Map Xid Local Xa Transaction xid Local Tx protected Recovery Manager recovery Manager private String cache Name private boolean one Phase Total Order Inject public void init Recovery Manager recovery Manager Cache cache recovery Manager recovery Manager cache Name cache get Name Start priority Start cache loader manager Suppress Warnings unused public void start Xid Mapping distributed mode write skew check allow phases one Phase Total Order Configurations One Phase Total Order Commit configuration final int concurrency Level configuration locking concurrency Level xid Local Tx Collection Factory make Concurrent Map concurrency Level f concurrency Level Override public boolean remove Local Transaction Local Transaction local Tx boolean result false local Tx get Transaction null null force invocation recovery perhaps remote node result super remove Local Transaction local Tx remove Xid Tx Mapping Local Xa Transaction local Tx return result private void remove Xid Tx Mapping Local Xa Transaction local Tx final Xid xid local Tx get Xid xid null xid Local Tx remove xid public Local Xa Transaction get Local Transaction Xid xid return xid Local Tx get xid private void add Local Transaction Mapping Local Xa Transaction local Transaction local Transaction get Xid null throw new Illegal State Exception Initialize xid first xid Local Tx put local Transaction get Xid local Transaction Override public void enlist Transaction transaction Local Transaction ltx Local Xa Transaction local Transaction Local Xa Transaction ltx local Transaction Enlisted make sure enlist try transaction enlist Resource new Transaction Xa Adapter local Transaction catch Exception e Xid xid local Transaction get Xid xid null local Transaction get Looked Entries Empty log debug Attempting rollback clear stale resources try tx Coordinator rollback local Transaction catch Exception xae log debug Caught exception attempting clean xid xae log failed Enlist Transaction Xa Adapter e throw new Cache Exception e Override public int get Local Tx Count return xid Local Tx size public int prepare Xid external Xid throws Exception Xid xid convert Xid external Xid Local Xa Transaction local Transaction get Local Transaction Validate xid return tx Coordinator prepare local Transaction public void commit Xid external Xid boolean One Phase throws Exception Xid xid convert Xid external Xid Local Xa Transaction local Transaction get Local Transaction Validate xid boolean committed One Phase One Phase one Phase Total Order committed One Phase tx Coordinator commit local Transaction true else One Phase One Phase true means participant distributed transaction optimization run though running high chance leaving cluster inconsistent state tx Coordinator prepare local Transaction committed One Phase tx Coordinator commit local Transaction false else committed One Phase tx Coordinator commit local Transaction false forget Successfully Completed Transaction recovery Manager local Transaction get Xid local Transaction committed One Phase void rollback Xid external Xid throws Exception Xid xid convert Xid external Xid Local Xa Transaction local Transaction get Local Transaction Validate xid local Transaction mark Rollback true make sure locks longer associated transactions tx Coordinator rollback local Transaction conversion recovery enabled private Xid convert Xid Xid external Xid Recovery Enabled return Xid Impl copy external Xid else return external Xid void start Xid external Xid Local Xa Transaction local Transaction Xid xid convert Xid external Xid transform internal format order able serialize local Transaction set Xid xid add Local Transaction Mapping local Transaction trace log tracef start called tx local Transaction get Global Transaction void end Local Xa Transaction local Transaction trace log tracef end called tx local Transaction get Global Transaction cache Name void forget Xid external Xid throws Exception Xid xid convert Xid external Xid trace log tracef forget called xid xid try Recovery Enabled recovery Manager remove Recovery Information null xid true null false else trace log trace Recovery enabled catch Exception e log warn Exception Removing Recovery e Exception xe new Exception Exception xe init Cause e throw xe boolean Recovery Enabled return recovery Manager null private void forget Successfully Completed Transaction Recovery Manager recovery Manager Xid xid Local Xa Transaction local Transaction boolean committed One Phase final Global Transaction gtx local Transaction get Global Transaction Recovery Enabled recovery Manager remove Recovery Information local Transaction get Remote Locks Acquired xid false gtx partition Handling Manager Transaction Partially Committed gtx remove Local Transaction local Transaction else release Locks Completed Transaction local Transaction committed One Phase private Local Xa Transaction get Local Transaction Validate Xid xid throws Exception Local Xa Transaction local Transaction get Local Transaction xid local Transaction null trace log tracef tx found xid throw new Exception Exception return local Transaction
package org configuration parsing import java util Array Deque import java util Deque import javax xml namespace Namespace Context import javax xml namespace Name import javax xml stream Location import javax xml stream Stream Exception import javax xml stream Stream Reader author href mailto david lloyd redhat com David Lloyd author Tristan Tarrant since final class Extended Stream Reader Impl implements Extended Stream Reader private final Namespace Mapping Parser parser private final Stream Reader stream Reader private final Deque Context stack new Array Deque Context private Schema schema Extended Stream Reader Impl final Namespace Mapping Parser parser final Stream Reader stream Reader parser parser stream Reader stream Reader stack push new Context Override public void handle final Configuration Builder Holder holder throws Stream Exception require null null boolean ok false try final Deque Context stack stack stack push new Context try parser parse Element holder finally stack pop ok true finally ok safe Close Override public Object get Property final String name throws Illegal Argument Exception return stream Reader get Property name Override public int next throws Stream Exception final Context context stack get First context depth final int next stream Reader next next context depth else next context depth return next else try throw read Past End get Location finally safe Close Override public void require final int type final String namespace final String local Name throws Stream Exception stream Reader require type namespace local Name Override public String get Element Text throws Stream Exception return stream Reader get Element Text trim Override public int next Tag throws Stream Exception final Context context stack get First context depth final int next stream Reader next Tag next context depth else next context depth return next else try throw read Past End get Location finally safe Close Override public boolean Next throws Stream Exception return stack get First depth stream Reader Next Override public void close throws Stream Exception throw new Unsupported Operation Exception Override public String get Namespace final String prefix return stream Reader get Namespace prefix Override public boolean Start Element return stream Reader Start Element Override public boolean End Element return stream Reader End Element Override public boolean Characters return stream Reader Characters Override public boolean White Space return stream Reader White Space Override public String get Attribute Value final String namespace final String local Name return stream Reader get Attribute Value namespace local Name Override public int get Attribute Count return stream Reader get Attribute Count Override public Name get Attribute Name final int index return stream Reader get Attribute Name index Override public String get Attribute Namespace final int index return stream Reader get Attribute Namespace index Override public String get Attribute Local Name final int index return stream Reader get Attribute Local Name index Override public String get Attribute Prefix final int index return stream Reader get Attribute Prefix index Override public String get Attribute Type final int index return stream Reader get Attribute Type index Override public String get Attribute Value final int index return stream Reader get Attribute Value index Override public boolean Attribute Specified final int index return stream Reader Attribute Specified index Override public int get Namespace Count return stream Reader get Namespace Count Override public String get Namespace Prefix final int index return stream Reader get Namespace Prefix index Override public String get Namespace final int index return stream Reader get Namespace index Override public Namespace Context get Namespace Context return stream Reader get Namespace Context Override public int get Event Type return stream Reader get Event Type Override public String get Text return stream Reader get Text Override public char get Text Characters return stream Reader get Text Characters Override public int get Text Characters final int source Start final char target final int target Start final int length throws Stream Exception return stream Reader get Text Characters source Start target target Start length Override public int get Text Start return stream Reader get Text Start Override public int get Text Length return stream Reader get Text Length Override public String get Encoding return stream Reader get Encoding Override public boolean Text return stream Reader Text Override public Location get Location return stream Reader get Location Override public Name get Name return stream Reader get Name Override public String get Local Name return stream Reader get Local Name Override public boolean Name return stream Reader Name Override public String get Namespace return stream Reader get Namespace Override public String get Prefix return stream Reader get Prefix Override public String get Version return stream Reader get Version Override public boolean Standalone return stream Reader Standalone Override public boolean standalone Set return stream Reader standalone Set Override public String get Character Encoding Scheme return stream Reader get Character Encoding Scheme Override public String get Target return stream Reader get Target Override public String get Data return stream Reader get Data Override public String get List Attribute Value int return get Attribute Value split Override public Schema get Schema return schema Override public void set Schema Schema schema schema schema private members private static final class Context int depth private void safe Close try stream Reader close catch Exception e ignore private static Stream Exception read Past End final Location location return new Stream Exception Attempt read past end element location
package org xsite statetransfer import static org context Flag import static org context Flag import static org context Flag import static org context Flag import java util concurrent atomic Atomic Reference import javax transaction Transaction Manager import org commands Commands Factory import org commands write Put Key Value Command import org commons Cache Exception import org commons util Enum Util import org context Flag import org context Invocation Context import org context Invocation Context Factory import org context Single Key Non Tx Invocation Context import org context impl Tx Invocation Context import org factories annotations Inject import org interceptors Async Interceptor Chain import org statetransfer Commit Manager import org util logging Log import org util logging Log Factory contains logic needed consume state sent site author Pedro Ruivo since public class Site State Consumer Impl implements Site State Consumer private static final long Enum Util bit Set private static final Log log Log Factory get Log Site State Consumer Impl class private static final boolean trace log Trace Enabled private static final boolean debug log Debug Enabled private Transaction Manager transaction Manager private Invocation Context Factory invocation Context Factory private Commands Factory commands Factory private Async Interceptor Chain interceptor Chain private Commit Manager commit Manager private Atomic Reference String sending Site new Atomic Reference null Inject public void inject Transaction Manager transaction Manager Invocation Context Factory invocation Context Factory Commands Factory commands Factory Async Interceptor Chain interceptor Chain Commit Manager commit Manager transaction Manager transaction Manager invocation Context Factory invocation Context Factory commands Factory commands Factory interceptor Chain interceptor Chain commit Manager commit Manager Override public void start State Transfer String sending Site debug log debugf Starting state transfer Receiving sending Site sending Site compare Set null sending Site commit Manager start Track Flag else throw new Cache Exception Already receiving state sending Site get Override public void end State Transfer String sending Site debug log debugf Ending state transfer sending Site String current Sending Site sending Site get sending Site null sending Site equals current Sending Site sending Site set null commit Manager stop Track else log Debug Enabled log debugf Received end request non sender site Expects got current Sending Site sending Site Override public void apply State Site State chunk throws Exception debug log debugf Received state keys chunk length transaction Manager null apply State Transaction chunk else apply State Non Transaction chunk Override public String get Sending Site Name return sending Site get private void apply State Transaction Site State chunk throws Exception try transaction Manager begin Invocation Context ctx invocation Context Factory create Invocation Context transaction Manager get Transaction true Tx Invocation Context ctx get Cache Transaction set State Transfer Flag Site State site State chunk interceptor Chain invoke ctx create Put site State trace log tracef Successfully applied key site State transaction Manager commit debug log debugf Successfully applied state keys inserted chunk length catch Exception e log unable Apply Site State e safe Rollback throw e private void apply State Non Transaction Site State chunk Single Key Non Tx Invocation Context ctx Single Key Non Tx Invocation Context invocation Context Factory create Single Key Non Tx Invocation Context Site State site State chunk Put Key Value Command command create Put site State ctx set Lock Owner command get Key Lock Owner interceptor Chain invoke ctx command ctx reset State use context Old context longer needed trace log tracef Successfully applied key site State debug log debugf Successfully applied state keys inserted chunk length private Put Key Value Command create Put Site State state return commands Factory build Put Key Value Command state key state value state metadata private void safe Rollback try transaction Manager rollback catch Exception e ignored debug log debug Error rollbacking transaction e
package org xsite statetransfer import static org factories Known Component Names import static org persistence spi Advanced Cache Loader Cache Loader Task import static org persistence spi Advanced Cache Loader Task Context import static org remoting transport Retry Failure Site Command Max Retries Policy import static org remoting transport Retry Failure Site Command Retry Policy import static org xsite statetransfer Site State Transfer Control Command State Transfer Control import java util Array List import java util Arrays import java util Collection import java util Collections import java util List import java util Map import java util concurrent Callable import java util concurrent Concurrent Map import java util concurrent Executor Service import java util concurrent Time Unit import org commands Commands Factory import org commons Cache Exception import org commons util Collection Factory import org configuration cache Backup Configuration import org configuration cache Configuration import org configuration cache Site State Transfer Configuration import org container Data Container import org container entries Internal Cache Entry import org factories annotations Component Name import org factories annotations Inject import org interceptors locking Clustering Dependent Logic import org marshall core Marshalled Entry import org persistence manager Persistence Manager import org persistence spi Advanced Cache Loader import org remoting rpc Rpc Manager import org remoting transport Address import org remoting transport Retry Failure Site Command import org statetransfer State Transfer Lock import org util concurrent Completable Futures import org util concurrent Within Thread Executor import org util logging Log import org util logging Log Factory import org xsite Site Backup contains logic send state another site author Pedro Ruivo since public class Site State Provider Impl implements Site State Provider private static final int private static final Executor Service new Within Thread Executor private static final Log log Log Factory get Log Site State Provider Impl class private static final boolean trace log Trace Enabled private static final boolean debug log Debug Enabled private final Concurrent Map String State Push Task running State Transfer private Data Container data Container private Persistence Manager persistence Manager private Clustering Dependent Logic clustering Dependent Logic private Commands Factory commands Factory private Rpc Manager rpc Manager private Executor Service executor Service private Configuration configuration private Site State Transfer Manager state Transfer Manager private State Transfer Lock state Transfer Lock public Site State Provider Impl running State Transfer Collection Factory make Concurrent Map Inject public void inject Data Container data Container Persistence Manager persistence Manager Rpc Manager rpc Manager Clustering Dependent Logic clustering Dependent Logic Commands Factory commands Factory Component Name value Executor Service executor Service Configuration configuration Site State Transfer Manager x Site State Transfer Manager State Transfer Lock state Transfer Lock data Container data Container persistence Manager persistence Manager clustering Dependent Logic clustering Dependent Logic commands Factory commands Factory rpc Manager rpc Manager executor Service executor Service configuration configuration state Transfer Manager x Site State Transfer Manager state Transfer Lock state Transfer Lock Override public void start State Transfer String site Name Address origin int min Topology Id Site State Transfer Configuration state Transfer Configuration null Backup Configuration backup Configuration configuration sites Backups backup Configuration site equals site Name state Transfer Configuration backup Configuration state Transfer break state Transfer Configuration null throw new Cache Exception Unable start Site State Transfer Backup configuration found site Name State Push Task task new State Push Task site Name origin state Transfer Configuration min Topology Id running State Transfer put Absent site Name task null debug log debugf Starting state transfer site site Name executor Service execute task else debug log debugf start state transfer site already started site Name case coordinator leaves command processed rpc Manager get Address equals rpc Manager get Members get rpc Manager get Members contains origin state Transfer Manager become Coordinator site Name Override public void cancel State Transfer String site Name State Push Task task running State Transfer remove site Name task null task canceled true Override public Collection String get Current State Sending Collection String sending new Array List running State Transfer size Map Entry String State Push Task entry running State Transfer entry Set entry get Value finished sending add entry get Key return sending Override public Collection String get Sites Missing Coordinator Collection Address current Members final Collection String state Transfer Needs New Coordinator new Array List running State Transfer size Map Entry String State Push Task entry running State Transfer entry Set current Members contains entry get Value origin state Transfer Needs New Coordinator add entry get Key return state Transfer Needs New Coordinator private void notify State Transfer End final String site Name final Address origin final boolean error rpc Manager get Address equals origin executor Service submit Callable Void try state Transfer Manager notify State Push Finished site Name origin error catch Throwable throwable ignored return null else Site State Transfer Control Command command commands Factory build Site State Transfer Control Command site Name command set Status Ok error rpc Manager invoke Remotely Collections singleton origin command rpc Manager get Default Rpc Options false private boolean Send Key Object key return clustering Dependent Logic get Cache Topology get Distribution key Primary private void send Shared Buffer Site Backup x Site Backup List Site State shared Buffer State Push Task task throws Throwable shared Buffer size return Site State private Buffer shared Buffer Array new Site State shared Buffer size trace log debugf Sending chunk site Chunk contains x Site Backup get Site Name Arrays String private Buffer else debug log debugf Sending chunk site Chunk keys x Site Backup get Site Name private Buffer length Site State Push Command command commands Factory build Site State Push Command private Buffer x Site Backup get Timeout Retry Failure Site Command remote Site Retry Failure Site Command new Instance x Site Backup command task retry Policy remote Site execute rpc Manager get Transport task wait Time Time Unit private class State Push Task implements Runnable private final Site Backup x Site Backup private final int chunk Size private final Address origin private final Retry Policy retry Policy private final long wait Time private final int min Topology Id private volatile boolean finished private volatile boolean canceled private boolean error public State Push Task String site Name Address origin Site State Transfer Configuration configuration int min Topology Id min Topology Id min Topology Id chunk Size configuration chunk Size wait Time configuration wait Time retry Policy new Max Retries Policy configuration max Retries origin origin x Site Backup new Site Backup site Name true configuration timeout canceled false finished false error false Override public void run try debug log debugf Site State Transfer wait min topology x Site Backup get Site Name min Topology Id Completable Futures await state Transfer Lock topology Future min Topology Id final List Site State chunk new Array List chunk Size chunk Size debug log debugf Site State Transfer start Data Container iteration x Site Backup get Site Name Internal Cache Entry ice data Container canceled log debugf Site State Transfer State transfer canceled x Site Backup get Site Name return chunk Size chunk size chunk Size try send Shared Buffer x Site Backup chunk catch Throwable error true log unable Send Site State x Site Backup get Site Name return chunk clear Send Key ice get Key trace log tracef Added key current chunk ice get Key chunk add Site State Data Container ice canceled return chunk size try send Shared Buffer x Site Backup chunk catch Throwable error true log unable Send Site State x Site Backup get Site Name return debug log debugf Site State Transfer finish Data Container iteration x Site Backup get Site Name Suppress Warnings unchecked Advanced Cache Loader Object Object st Provider persistence Manager get State Transfer Provider st Provider null debug log debugf Site State Transfer start Persistence iteration x Site Backup get Site Name State Transfer Cache Loader Task task new State Transfer Cache Loader Task x Site Backup chunk try st Provider process k Send Key k data Container contains Key k task true true canceled log debugf Site State Transfer State transfer canceled x Site Backup get Site Name return task send Remaining State catch Cache Exception e error true log failed Loading Keys Cache Store e return catch Throwable error true log unable Send Site State x Site Backup get Site Name return debug log debugf Site State Transfer finish Persistence iteration x Site Backup get Site Name else debug log debugf Site State Transfer skip Persistence iteration x Site Backup get Site Name catch Throwable e error true log unable Send Site State x Site Backup get Site Name e finally finished true log debugf Site State Transfer State transfer finished x Site Backup get Site Name canceled notify State Transfer End x Site Backup get Site Name origin error Override public String String return State Push Task origin origin canceled canceled private class State Transfer Cache Loader Task implements Cache Loader Task Object Object private final List Site State chunk private final Site Backup x Site Backup private final State Push Task task private State Transfer Cache Loader Task Site Backup x Site Backup List Site State chunk State Push Task task x Site Backup x Site Backup chunk chunk task task Override public void process Entry Marshalled Entry Object Object marshalled Entry Task Context task Context throws Interrupted Exception task canceled task Context stop log debugf Site State Transfer State transfer canceled x Site Backup get Site Name return task chunk Size chunk size task chunk Size try send Shared Buffer x Site Backup chunk task catch Throwable log unable Send Site State x Site Backup get Site Name task Context stop chunk clear chunk add Site State Cache Loader marshalled Entry public void send Remaining State throws Throwable chunk size send Shared Buffer x Site Backup chunk task
