licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop accumulo import java io except import java math big decim import java math big integ import java util collect import java util collect import java util hash map import java util iter import java util link list import java util list import java util map import java util map entri import java util properti import java util concurr time unit import org apach accumulo core client accumulo secur except import org apach accumulo core client batch writer config import org apach accumulo core client mapreduc accumulo input format import org apach accumulo core client mapreduc accumulo output format import org apach accumulo core client secur token password token import org apach accumulo core datum key import org apach accumulo core datum mutat import org apach accumulo core data rang import org apach accumulo core data valu import org apach accumulo core secur author import org apach accumulo core util pair import org apach common cli command line import org apach common cli pars except import org apach common lang string util import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f path import org apach hadoop io text import org apach hadoop mapreduc input format import org apach hadoop mapreduc job import org apach hadoop mapreduc output format import org apach hadoop mapreduc record reader import org apach hadoop mapreduc record writer import org apach load caster import org apach load func import org apach load store caster import org apach resourc schema import org apach resourc schema resourc field schema import org apach store func interfac import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer split import org apach backend hadoop hbase base binari convert import org apach builtin utf storag convert import org apach datum datum bag import org apach data data byte array import org apach datum data type import org apach datum tupl import org apach impl context import org apach impl util object serial import org apach impl util context import org joda time date time load store func retriev datum store datum accumulo key val pair return tupl key colfam colqual colvi timestamp valu field except timestamp datum byte array timestamp long tupl write form key colfam colqual colvi valu key colfam colqual valu public abstract class abstract accumulo storag extend load func implement store func interfac privat static final log log log factori get log abstract accumulo storag class protect static final char protect static final string privat static final string accumulo input format class get simpl name privat static final string accumulo output format class get simpl name privat final static string storag convert privat final static string accumulo binari convert privat final static string accumulo caster protect final accumulo storag option storag option protect final command line command line privat record reader key valu reader privat record writer text mutat writer protect string inst protect string zookeep protect string user protect string password protect string tabl protect text tabl name protect author author protect list column column protect string start null protect string end null default batch writer config protect int max write thread protect long max mutat buffer size l protect long max latenc long protect string column separ protect boolean ignor whitespac true protect load store caster caster protect resourc schema schema protect string context signatur null public abstract accumulo storag string column string arg throw pars except except storag option new accumulo storag option command line storag option get command line arg extract command line arg extract arg command line storag option split user provid column pars column column initi link column def split column link param column column privat void pars column string column str column new link list column ignor whitespac column str string util strip column str column str empti string column string util split column str column separ column add new column ignor whitespac string util strip column column els preserv origin function empti column fetch datum map column add new column extract argument pass constructor avoid param cli param opt protect void extract arg command line cli accumulo storag option opt throw except opt author cli author opt get author cli start cli get option valu accumulo storag option get opt null end cli get option valu accumulo storag option get opt null cli option accumulo storag option get opt max latenc opt get int cli accumulo storag option cli option accumulo storag option get opt max write thread opt get int cli accumulo storag option cli option accumulo storag option get opt max mutat buffer size opt get long cli accumulo storag option properti client system prop context get context get client system prop string default caster null client system prop default caster client system prop get properti default caster string caster option cli get option valu caster default caster equal ignor case caster option caster new utf storag convert els equal ignor case caster option caster new base binari convert els tri caster load store caster context instanti func spec caster option catch class cast except e log error configur caster implement load caster interfac throw new except e catch runtim except e log error configur caster class find e throw new except e log debug use caster caster get class cli option accumulo storag option get opt column separ cli get option valu accumulo storag option get opt cli option accumulo storag option get opt string valu cli get option valu accumulo storag option get opt fals equal ignor case valu ignor whitespac fals els true equal ignor case valu ignor whitespac true els log warn ignor unknown valu accumulo storag option get opt valu protect command line get command line return command line protect map string string get input format entri configur conf return get entri conf protect map string string get output format entri configur conf return get entri conf remov give valu configur account chang configur give version hadoop use param conf param entri unset protect void unset entri configur configur conf map string string entri unset boolean configur unset true tri conf get class get method unset string class catch method except e configur unset fals catch secur except e configur unset fals hadoop actual contain method configur unset configur unset simpl unset conf entri unset els run someth els remov everyth add clear unset conf entri unset unset element configur use unset method param conf param entri unset protect void simpl unset configur conf map string string entri unset string key entri unset key set conf unset key replac give entri configur clear configur add element n map entri unset param conf param entri unset protect void clear unset configur conf map string string entri unset get copi entri iter entri string string origin entri conf iter conf clear origin entri next entri string string origin entri origin entri next set pair n collect key unset entri unset contain key origin entri get key conf set origin entri get key origin entri get valu overrid public tupl get next throw except tri load next pair reader next key valu return null key key key reader get current key valu valu valu reader get current valu assert key null valu null return get tupl key valu catch interrupt except e throw new except e get messag protect abstract tupl get tupl key key valu valu throw except overrid suppress warn rawtyp public input format get input format return new accumulo input format overrid suppress warn uncheck rawtyp public void prepar read record reader reader split split reader reader privat void set locat uri string locat throw except ex accumulo tabl instanc myinstanc user root password secret zookeep auth fetch column col cq col cq start abc end z string column auth tri locat start accumulo throw new except bad scheme string url part locat split url part length string param url part split string pair param split pair equal instanc inst pair els pair equal user user pair els pair equal password password pair els pair equal zookeep zookeep pair els pair equal auth auth pair els pair equal fetch column column pair els pair equal start start pair els pair equal end end pair els pair equal write buffer size byte max mutat buffer size long pars long pair els pair equal write thread max write thread integ pars int pair els pair equal write latenc ms max latenc long pars long pair string part url part split tabl part tabl name new text tabl null author auth null author new author els author new author string util split auth string util empti column pars column column catch except e throw new except expect accumulo tabl instanc instanc name user user password password zookeep zookeep auth author start start row end end row fetch column cf cq cf cq write buffer size byte write thread write latenc ms e get messag protect record writer text mutat get writer return writer extract element configur whose key match give prefix param conf param prefix return protect map string string get entri configur conf string prefix map string string entri new hash map string string entri string string entri conf string key entri get key key start prefix entri put key entri get valu return entri overrid public void set locat string locat job job throw except set locat uri locat load depend jar job get configur map string string entri get input format entri job get configur unset entri configur job get configur entri tri accumulo input format set connector info job user new password token password catch accumulo secur except e throw new except e accumulo input format set input tabl name job tabl accumulo input format set scan author job author accumulo input format set zoo keeper instanc job inst zookeep list pair text text input format column new link list pair text text int colfam prefix column c column switch c get type case pull colf colq individu input format column add make pair c get column famili c get column qualifi break case colfam colfam prefix break case colqual give colfam input format column add make pair c get column famili null break default log info ignor unhandl column type break colfam prefix pull column filter client side creat iter let we push filter logic colfam prefix input format column empti accumulo input format fetch column job input format column collect rang rang collect singleton new rang start end log info scan accumulo rang tabl tabl accumulo input format set rang job rang configur input format job protect pair text text make pair string first string second return new pair text text null first null new text first null second null new text second ensur accumulo depend jar add configur allevi need client depend jar param job mapreduc job object throw except protect void load depend jar configur conf throw except thank base util add depend jar conf org apach accumulo trace instrument tracer class org apach accumulo core client instanc class org apach accumulo fate fate class org apach zookeep zoo keeper class org apach thrift servic client class method allow specif implement add element job read datum accumulo param job protect void configur input format job job method allow specif implement add element job write datum accumulo param job protect void configur output format job job overrid public string rel absolut path string locat path cur dir throw except return locat overrid public void set context signatur string signatur context signatur signatur store func method public void set store func context signatur string signatur context signatur signatur return properti base code context signatur code protect properti get properti return context get context get properti get class new string context signatur public string rel ab path store locat string locat path cur dir throw except return rel absolut path locat cur dir public void set store locat string locat job job throw except set locat uri locat load depend jar job get configur map string string entri get output format entri job get configur unset entri configur job get configur entri tri accumulo output format set connector info job user new password token password catch accumulo secur except e throw new except e accumulo output format set creat tabl job true accumulo output format set zoo keeper instanc job inst zookeep batch writer config bw config new batch writer config bw config set max latenc max latenc time unit bw config set max memori max mutat buffer size bw config set max write thread max write thread accumulo output format set batch writer option job bw config log info write datum tabl configur output format job suppress warn rawtyp public output format get output format return new accumulo output format suppress warn rawtyp uncheck public void prepar write record writer writer writer writer protect abstract collect mutat get mutat tupl tupl throw exec except except public void put next tupl tupl throw exec except except collect mutat mut get mutat tupl mutat mut mut tri get writer write tabl name mut catch interrupt except e throw new except e public void cleanup failur string failur job job public void cleanup success string locat job job overrid public void check schema resourc schema throw except caster instanceof load store caster log error caster must implement load store caster write accumulo throw new except bad caster caster get class schema get properti set properti context signatur schema object serial serial schema protect text tupl text tupl tupl int resourc field schema field schema throw except object tupl get byte type schema type field schema return obj text type protect text object text object resourc field schema field schema throw except byte type schema type field schema return obj text type protect byte schema type object resourc field schema field schema return field schema null datum type find type field schema get type protect byte schema type object int resourc field schema field schema return field schema null datum type find type field schema get type protect byte tupl byte tupl tupl int resourc field schema field schema throw except object tupl get byte type schema type field schema return obj byte type protect text obj text object byte type throw except byte byte obj byte type null byte log warn creat empti text null valu return new text return new text byte suppress warn uncheck protect byte obj byte object byte type throw except null return null switch type case data type return datum byte array get case data type return caster byte data bag case data type return caster byte string case data type return caster byte doubl case data type return caster byte float case data type return caster byte integ case data type return caster byte long case data type return caster byte big integ case data type return caster byte big decim case data type return caster byte boolean case data type return caster byte date time type convers uncheck reli data type find type right thing case data type return caster byte map string object case data type return null case data type return caster byte tupl case data type throw new except unabl determin type get class default throw new except unabl find convert tupl field overrid public load caster get load caster throw except return caster 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java io data input import java io data output import java io except import java util import org apach backend hadoop executionengin physic layer relat oper accumul tupl buffer public class accumul bag implement data bag privat static final long serial version privat transient accumul tupl buffer buffer privat int index public accumul bag accumul tupl buffer buffer int index buffer buffer index index public void add tupl throw new runtim except accumul bag support add oper public void add datum bag b throw new runtim except accumul bag support add oper public void clear throw new runtim except accumul bag support clear oper public boolean distinct return fals public boolean sort return fals public accumul tupl buffer get tuplebuff return buffer public iter tupl iter return buffer get tupl index public void mark stale boolean stale public long size int size iter tupl iter next next size return size public long get memori size return public long spill return public void read field data input datainput throw except throw new except accumul bag support read field oper public void write datum output dataoutput throw except throw new except accumul bag support write oper public int compar object throw new runtim except accumul bag support compar oper public boolean equal object return true return fals public int hash code assert fals hash code design return 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import java io except import org apach accumul import org apach eval func import org apach datum tupl class use provid free implement eval func exec function give implement accumul interfac instead provid redund implement provid base exec function free give method associ accumul interfac implement inform implement accumul see link accumul public abstract class accumul eval func extend eval func implement accumul overrid public abstract void accumul tupl b throw except overrid public abstract void cleanup overrid public abstract get valu overrid public exec tupl input throw except accumul input result get valu cleanup return result 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin spark optim import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper global rearrang import org apach backend hadoop executionengin physic layer util plan helper import org apach backend hadoop executionengin spark plan spark op plan visitor import org apach backend hadoop executionengin spark plan spark oper plan import org apach backend hadoop executionengin spark plan spark oper import org apach backend hadoop executionengin util accumul optim util import org apach impl plan depth first walker import org apach impl plan visitor except import java util list visitor optim plan determin vertex plan run accumul mode public class accumul optim extend spark op plan visitor public accumul optim spark oper plan plan super plan new depth first walker spark oper spark oper plan plan overrid public void visit spark op spark oper spark oper throw visitor except physic plan plan spark oper physic plan list physic oper po plan get root po null po size return list global rearrang glr plan helper get physic oper plan global rearrang class global rearrang glr glr list physic oper successor plan get successor glr accumul optim util add accumul plan successor 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop accumulo import java io byte array input stream import java io data input stream import java io data output stream import java io except import java math big decim import java math big integ import java util map import org apach accumulo core constant import org apach load store caster import org apach resourc schema resourc field schema import org apach backend executionengin exec except import org apach datum datum bag import org apach data data byte array import org apach datum tupl import org joda time date time import com googl common base precondit load store caster implement store type implement byte gener string represent charset pull implement accumulo lexicod implement public class accumulo binari convert implement load store caster privat static final int integ byte privat static final int long byte overrid public datum bag byte bag byte b resourc field schema field schema throw except throw new exec except ca n gener datum bag byte overrid public big decim byte big decim byte b throw except throw new exec except ca n gener big integ byte overrid public big integ byte big integ byte b throw except take accumulo big integ lexicod data input stream di new datum input stream new byte array input stream b int len di read int len len x len math ab len byte byte new byte len di read fulli byte byte byte x byte return new big integ byte overrid public boolean byte boolean byte b throw except precondit check argument b length return b byte overrid public string byte char array byte b throw except return new string b constant overrid public date time byte date time byte b throw except string new string b constant return date time pars overrid public doubl byte doubl byte b throw except return doubl long bit doubl byte long b overrid public float byte float byte b throw except return float int bit float byte integ b overrid public integ byte integ byte b throw except precondit check argument b length int n int b length n n b x return n overrid public long byte long byte b throw except precondit check argument b length long l int b length l l b x return l overrid public map string object byte map byte b resourc field schema field schema throw except throw new exec except ca n gener map byte overrid public tupl byte tupl byte b resourc field schema field schema throw except throw new exec except ca n gener tupl byte implement overrid public byte byte big decim bd throw except throw new except ca n gener byte big decim overrid public byte byte big integ bi throw except take accumulo big integ lexicod byte byte bi byte array byte ret new byte byte length data output stream do new datum output stream new fix byte array output stream ret flip sign bit byte byte x byte int len byte length bi signum len len len len x tri do write int len do write byte final do close return ret overrid public byte byte boolean b throw except return new byte b byte byte overrid public byte byte data bag bag throw except throw new exec except cant gener byte datum bag overrid public byte byte data byte array throw except return get overrid public byte byte date time dt throw except return dt string get byte constant overrid public byte byte doubl throw except return byte doubl doubl raw long bit overrid public byte byte float f throw except return byte float float raw int bit f overrid public byte byte integ val throw except int int val val int valu byte b new byte int b byte int val int val b byte int val return b overrid public byte byte long val throw except long long val val long valu byte b new byte int b byte long val long val b byte long val return b overrid public byte byte map string object throw except throw new except ca n gener byte map overrid public byte byte string throw except return get byte constant overrid public byte byte tupl throw except throw new except ca n gener byte tupl 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop accumulo import java io except import java util collect import java util collect import java util hash map import java util iter import java util map import java util map entri import java util sort map import org apach accumulo core client iter set import org apach accumulo core client mapreduc accumulo input format import org apach accumulo core datum key import org apach accumulo core datum mutat import org apach accumulo core datum partial key import org apach accumulo core data rang import org apach accumulo core data valu import org apach accumulo core iter user whole row iter import org apach common cli pars except import org apach hadoop io text import org apach hadoop mapreduc job import org apach log j logger import org apach resourc schema resourc field schema import org apach backend executionengin exec except import org apach data data byte array import org apach datum data type import org apach datum tupl import org apach datum tupl factori basic storag implement use accumulo back store p write datum first entri link tupl treat row accumulo key subsequ entri tupl handl column row link map expand place map key column famili map valu accumulo valu scalar place directli valu empti column qualifi column argument constructor omit null empti string column famili provid key creat accumulo p p read datum aggreg colfam true element row column famili aggreg singl link map result link tupl length uniqu column famili give row aggreg colfam fals column famili column qualifi concaten separ colon place link map result link tupl two entri latter element number element equal number column give row p public class accumulo storag extend abstract accumulo storag privat static final logger log logger get logger accumulo storag class privat static final string privat static final text new text new byte privat static final datum byte array new datum byte array new byte sure accumulo storag instanc need thread safe final text cf holder new text cq holder new text creat accumulo storag write valu link tupl empti column famili n group column famili togeth read creat link map column public accumulo storag throw pars except except creat accumulo storag column famili use write whether column row group famili read param column comma separ list column famili use write datum align n th entri tupl param aggreg colfam uniqu column qualifi valu pair group togeth column famili read datum public accumulo storag string column throw pars except except column public accumulo storag string column str string arg throw pars except except super column str arg overrid protect tupl get tupl key key valu valu throw except sort map key valu row vs whole row iter decod row key valu tupl tupl tupl factori get instanc new tupl column size final text cf holder new text final text cq holder new text final text row key get row int tupl offset tupl set tupl offset new datum byte array text decod row get byte row get length column column column tupl offset switch column get type case cf holder set column get column famili null column get column qualifi cq holder set column get column qualifi els cq holder set get key liter would exist account colf colq colf empti colq key liter start key new key row cf holder cq holder sort map key valu tail map row vs tail map liter start key find element tail map empti tupl set tupl offset els key actual key tail map first key place tupl match user request avoid use valu key wrong colqual liter start key compar actual key partial key tupl set tupl offset new datum byte array tail map get actual key get els row n column look tupl set tupl offset break case cf holder set column get column famili rang colfam prefix rang rang prefix row cf holder key colfam prefix start key new key row cf holder sort map key valu cf tail map row vs tail map colfam prefix start key find element cf tail map empti tupl set tupl offset els hash map string data byte array tupl map new hash map string data byte array build map entri row match colfam prefix entri key valu entri cf tail map entri set colfam prefix rang contain entri get key entri get key get column famili cf holder entri get key get column qualifi cq holder data byte array val new datum byte array entri get valu get avoid add extra colqual empti cq holder get length tupl map put cf holder string val els tupl map put cf holder string cq holder string val els break tupl map empti tupl set tupl offset tupl map break case cf holder set column get column famili cq holder set column get column qualifi rang colqual prefix rang rang prefix row cf holder cq holder key colqual prefix start key new key row cf holder cq holder sort map key valu cq tail map row vs tail map colqual prefix start key cq tail map empti tupl set tupl offset els hash map string data byte array tupl map new hash map string data byte array build map entri row match colqual prefix entri key valu entri cq tail map entri set colqual prefix rang contain entri get key entri get key get column famili cf holder entri get key get column qualifi cq holder data byte array val new datum byte array entri get valu get avoid extra empti colqual cq holder get length tupl map put cf holder string val els tupl map put cf holder string cq holder string val els break tupl map empti tupl set tupl offset tupl map break default break return tupl overrid protect void configur input format job job accumulo input format add iter job new iter set whole row iter class overrid protect collect mutat get mutat tupl tupl throw exec except except final resourc field schema field schema schema null null schema get field iter object tupl iter tupl iter tupl size log debug ignor tupl size tupl size return collect empti list mutat mutat new mutat object text tupl iter next null field schema null field schema int tupl offset iter column column iter column iter tupl iter next column iter next object tupl iter next column column column iter next grab type field final byte type schema type null field schema null field schema tupl offset switch column get type case byte byte obj byte type null byte valu valu new valu byte n column name non map add column mutat column get column famili column get column qualifi valu break case case map string object map tri map map string object catch class cast except e log error expect map tupl offset tupl offset get class get simpl name throw e entri string object entri map entri set string key entri get key object obj valu entri get valu byte valu type data type find type obj valu byte map valu obj byte obj valu valu type column type column get type add column mutat column get column famili key null new valu map valu els column type column get type add column mutat column get column famili column get column qualifi key new valu map valu els throw new except unknown column type break default log info ignor unhandl column type continu tupl offset mutat size return collect empti list return collect singleton list mutat add give column famili column qualifi valu give mutat param mutat param colfam param colqual param column valu protect void add column mutat mutat string colfam string colqual valu column valu null colfam cf holder set colfam els cf holder clear null colqual cq holder set colqual els cq holder clear mutat put cf holder cq holder column valu 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop accumulo import org apach accumulo core secur author import org apach common cli command line import org apach common cli gnu parser import org apach common cli help formatt import org apach common cli option import org apach common cli option import org apach common cli pars except import org apach common lang string util public class accumulo storag option public static final option new option c caster true implement load store caster use typic string convert accumulo binari convert new option auth author true comma separ list author use new option start true row begin read inclus new option e end true row read inclus new option buff mutat buffer size true number byte buffer write datum new option wt write thread true number thread use write datum new option ml max latenc true maximum latenc millisecond mutat flush accumulo new option sep separ true separ string use pars column new option iw ignor whitespac true whether whitespac strip column list privat option option privat gnu parser parser public accumulo storag option parser new gnu parser option new option option add option option add option option add option option add option option add option option add option option add option option add option option add option public string get help messag return c caster load store caster impl auth author auth auth auth start startrow e end endrow buff mutat buffer size byte wt write thread thread ml max latenc second sep separ iw ignor whitespac true fals public command line get command line string arg throw pars except string split arg string util split arg tri return parser pars option split arg catch pars except e help formatt formatt new help formatt formatt print help get help messag option throw e public boolean author command line cli return cli option get opt public author get author command line cli return new author cli get option valu get opt public long get long command line cli option string valu cli get option valu get opt return null valu null long pars long valu public int get int command line cli option string valu cli get option valu get opt return null valu null integ pars int valu 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java math big decim import java math big integ import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except public class add extend binari express oper privat static final long serial version public add oper key k super k public add oper key k int rp super k rp overrid public void visit phi plan visitor v throw visitor except v visit add overrid public string name return add data type find type name result type key string method use invok appropri addit method java provid gener dispatch protect number add number number b byte datum type throw exec except switch datum type case data type return doubl valu doubl doubl b case data type return integ valu integ integ b case data type return long valu long long b case data type return float valu float float b case data type return big integ add big integ b case data type return big decim add big decim b default throw new exec except call unsupport number class data type find type name datum type protect result gener get next byte datum type throw exec except result be accum child null datum type r null return be byte statu result re re lh get next datum type statu re return statu statu statu re result null return re number leav number re result re rh get next datum type statu re return statu statu statu re result null return re number right number re result re result add leav right datum type return re overrid public result get next doubl throw exec except return gener get next data type overrid public result get next float throw exec except return gener get next data type overrid public result get next integ throw exec except return gener get next data type overrid public result get next long throw exec except return gener get next data type overrid public result get next big integ throw exec except return gener get next data type overrid public result get next big decim throw exec except return gener get next data type overrid public add clone throw clone support except add clone new add new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat add oper public class add express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public add express oper plan plan logic express lh logic express rh super add plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof add express add express ao add express return ao get lh equal get lh ao get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null get lh get type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new add express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic optim import java util collect import org apach impl logic layer frontend except import org apach impl util multi map import org apach newplan oper plan import org apach newplan plan walker import org apach newplan logic express logic express plan import org apach newplan logic express logic express visitor import org apach newplan logic relat cogroup import org apach newplan logic relat cube import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split output import org apach newplan logic relat logic relat node visitor import org apach newplan logic relat logic relat oper visitor walk logic plan appli give logic express visitor express encount public abstract class express visitor extend logic relat node visitor protect logic relat oper current op param plan logic plan visit param walker walker use visit plan public express visitor oper plan plan plan walker walker throw frontend except super plan walker get new instanc express visitor appli give express param expr logic express plan visit return new logic express visitor express abstract protect logic express visitor get visitor logic express plan expr throw frontend except privat void visit collect logic express plan lexp plan throw frontend except logic express plan plan lexp plan logic express visitor v get visitor plan v visit overrid public void visit filter filter throw frontend except current op filter logic express visitor v get visitor filter get filter plan v visit overrid public void visit limit limit throw frontend except current op limit limit get limit plan null logic express visitor v get visitor limit get limit plan v visit overrid public void visit join join throw frontend except current op join visit join get express plan valu overrid public void visit cube cu throw frontend except current op cu multi map integ logic express plan express plan cu get express plan integ key express plan key set visit express plan get key overrid public void visit cogroup cg throw frontend except current op cg multi map integ logic express plan express plan cg get express plan integ key express plan key set visit express plan get key overrid public void visit foreach throw frontend except current op foreach inner oper plan go ahead work plan oper plan inner plan foreach get inner plan plan walker new walker current walker spawn child walker inner plan push walker new walker current walker walk pop walker overrid public void visit gener gen throw frontend except current op gen visit gen get output plan overrid public void visit inner load load throw frontend except express inner load contain info rel use foreach current op current op load get logic express plan exp logic express plan load get project get plan logic express visitor v get visitor exp v visit overrid public void visit split output split output throw frontend except current op split output logic express visitor v get visitor split output get filter plan v visit overrid public void visit rank rank throw frontend except current op rank visit rank get rank col plan overrid public void visit sort sort throw frontend except current op sort visit sort get sort col plan 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic optim import org apach impl logic layer frontend except import org apach newplan oper plan import org apach newplan plan walker import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat cube import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat nativ import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat split output import org apach newplan logic relat store import org apach newplan logic relat stream import org apach newplan logic relat union import org apach newplan logic relat logic relat node visitor import org apach newplan logic relat logic relat oper visitor walk logic plan call method everi type node subclass extend implement execut method method call everi node graph public abstract class ralat node visitor extend logic relat node visitor param plan oper plan visit param walker walker use visit plan public ralat node visitor oper plan plan plan walker walker throw frontend except super plan walker method call everi node logic plan param op node current visit abstract protect void execut logic relat oper op throw frontend except overrid public void visit filter filter throw frontend except execut filter overrid public void visit join join throw frontend except execut join overrid public void visit cogroup cg throw frontend except execut cg overrid public void visit load load throw frontend except execut load overrid public void visit store store throw frontend except execut store overrid public void visit foreach throw frontend except execut foreach overrid public void visit split split throw frontend except execut split overrid public void visit split output split output throw frontend except execut split output overrid public void visit union union throw frontend except execut union overrid public void visit sort sort throw frontend except execut sort overrid public void visit rank rank throw frontend except execut rank overrid public void visit distinct distinct throw frontend except execut distinct overrid public void visit cross cross throw frontend except execut cross overrid public void visit stream stream throw frontend except execut stream overrid public void visit limit limit throw frontend except execut limit overrid public void visit nativ lo nativ throw frontend except execut lo nativ overrid public void visit cube cube throw frontend except execut cube 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat boolean express public class express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public express oper plan plan logic express lh logic express rh super plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof express express ao express return ao get lh equal get lh ao get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach pen import java math big decim import java math big integ import java util array list import java util collect import java util hash map import java util hash set import java util iter import java util link list import java util list import java util map import java util set import org joda time date time import org apach common log log import org apach common log log factori import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer relat oper limit import org apach datum bag factori import org apach datum datum bag import org apach data data byte array import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl io file spec import org apach impl logic layer frontend except import org apach impl util multi map import org apach newplan oper import org apach newplan oper plan import org apach newplan logic express add express import org apach newplan logic express express import org apach newplan logic express binari express import org apach newplan logic express cast express import org apach newplan logic express constant express import org apach newplan logic express divid express import org apach newplan logic express equal express import org apach newplan logic express greater equal express import org apach newplan logic express greater express import org apach newplan logic express null express import org apach newplan logic express less equal express import org apach newplan logic express less express import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic express mod express import org apach newplan logic express multipli express import org apach newplan logic express equal express import org apach newplan logic express express import org apach newplan logic express express import org apach newplan logic express project express import org apach newplan logic express regex express import org apach newplan logic express subtract express import org apach newplan logic express user func express import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat store import org apach newplan logic relat union import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat node visitor import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach pen util exampl tupl import org apach pen util pre order depth first walker use gener synthet datum synthet datum gener do make constraint tupl oper travers plan tri replac constraint valu far possibl deal simpl condit right public class augment base data visitor extend logic relat node visitor map load datum bag base data null map load datum bag new base data new hash map load datum bag map oper data bag deriv datum null privat boolean limit fals privat final map oper physic oper log phi map privat map limit long ori limit map map oper data bag output constraint map new hash map oper data bag log log log factori get log get class augment move leaf root henc need depthfirstwalk public augment base data visitor oper plan plan map oper physic oper log phi map map load datum bag base data map oper data bag deriv datum throw frontend except super plan new pre order depth first walker plan base data base datum deriv datum deriv datum log phi map log phi map public void set limit limit true public map load datum bag get new base data throw exec except consolid base datum differ d input multi map file spec data bag input data map new multi map file spec data bag map entri load datum bag e new base data entri set input data map put e get key get file spec e get valu int index file spec f input data map key set int max schema size tupl tupl max schema size null datum bag bag input data map get f bag size int size tupl null bag iter next size size size max schema size max schema size size tupl max schema size datum bag bag input data map get f bag size iter tupl bag iter next tupl next int size max schema size append tupl max schema size get index map entri load datum bag e base datum entri set data bag bag new base data get e get key bag null bag bag factori get instanc new default bag new base data put e get key bag bag add e get valu return new base data public map limit long get ori limit map return ori limit map overrid public void visit cogroup cg throw frontend except limit pre order depth first walker current walker get branch flag return first get outputconstraint current cogroup datum bag output constraint output constraint map get cg output constraint map remov cg boolean abl handl true check handl cogroup tri collect inform group list list integ group spec new link list list integ int num col int index index cg get input logic plan plan size index collect logic express plan group plan cg get express plan get index list integ group col new array list integ logic express plan plan group plan oper leaf plan get sink get leaf instanceof project express group col add integ valu project express leaf get col num els abl handl fals break num col num col group col size group col size group plan size group col size num col come across unwork cogroup plan break els group spec add group col workabl datum point synthes tupl tri abl handl need go output constraint first int num input cg get input logic plan plan size output constraint null iter tupl output constraint iter next tupl output constraint next object group label output constraint get int input input num input input int num input field logic relat oper cg get input logic plan plan get input get schema size list integ group col group spec get input datum bag output output constraint map get cg get input logic plan plan get input output null output bag factori get instanc new default bag output constraint map put cg get input logic plan plan get input output int tupl input constraint get group input group label group col num input field input constraint null output add input constraint go organ datum group add input constraint make group big enough datum bag output datum deriv datum get cg iter tupl output datum iter next tupl group tup next object group label group tup get int input input num input input int num input field logic relat oper cg get input logic plan plan get input get schema size list integ group col group spec get input datum bag output output constraint map get cg get input logic plan plan get input output null output bag factori get instanc new default bag output constraint map put cg get input logic plan plan get input output int num tup add int datum bag group tup get input size int num tup add tupl input constraint get group input group label group col num input field input constraint null output add input constraint catch except e log error error visit cogroup augment phase exampl gener e get messag throw new frontend except error visit cogroup augment phase exampl gener e get messag overrid public void visit join join throw frontend except limit pre order depth first walker current walker get branch flag return first get outputconstraint current cogroup datum bag output constraint output constraint map get join output constraint map remov join boolean abl handl true check handl cogroup tri collect inform group list list integ group spec new link list list integ int num col int index index join get input logic plan plan size index collect logic express plan group plan join get express plan get index list integ group col new array list integ logic express plan plan group plan oper leaf plan get sink get leaf instanceof project express group col add integ valu project express leaf get col num els abl handl fals break num col num col group col size group col size group plan size group col size num col come across unwork cogroup plan break els group spec add group col workabl datum point synthes tupl tri abl handl need go output constraint first int num input join get input logic plan plan size output constraint null iter tupl output constraint iter next tupl output constraint next int input input num input input int num input field logic relat oper join get input logic plan plan get input get schema size list integ group col group spec get input datum bag output output constraint map get join get input logic plan plan get input output null output bag factori get instanc new default bag output constraint map put join get input logic plan plan get input output tupl input constraint get join input output constraint group col num input field input constraint null output add input constraint go organ datum group add input constraint make group big enough datum bag output datum deriv datum get join output datum size datum bag output output constraint map get join get input logic plan plan get output null output size output deriv datum get join get input logic plan plan get tupl input constraint output iter next int input input num input input datum bag output output constraint map get join get input logic plan plan get input output null output bag factori get instanc new default bag output constraint map put join get input logic plan plan get input output int num input field logic relat oper join get input logic plan plan get input get schema size tupl input constraint get join input input constraint group spec get group spec get input num input field input constraint null output add input constraint catch except e log error error visit cogroup augment phase exampl gener e get messag throw new frontend except error visit cogroup augment phase exampl gener e get messag overrid public void visit cross cs throw frontend except overrid public void visit distinct dt throw frontend except limit pre order depth first walker current walker get branch flag return datum bag output constraint output constraint map get dt output constraint map remov dt data bag input constraint output constraint map get dt get input logic plan plan input constraint null input constraint bag factori get instanc new default bag output constraint map put dt get input logic plan plan input constraint output constraint null output constraint size iter tupl output constraint iter next input constraint add next boolean empti input constraint input constraint size empti input constraint data bag input datum deriv datum get dt get input logic plan plan iter tupl input datum iter next input constraint add next set tupl distinct set new hash set tupl iter tupl input constraint iter next distinct set add next break next duplic find gener one input constraint size tupl src exampl tupl input constraint iter next tupl tgt tupl factori get instanc new tupl src get exampl tupl input constraint new exampl tupl tgt input constraint synthet true input constraint add input constraint els empti input constraint input constraint clear overrid public void visit filter filter throw frontend except limit pre order depth first walker current walker get branch flag return datum bag output constraint output constraint map get filter output constraint map remov filter logic express plan filter cond filter get filter plan data bag input constraint output constraint map get filter get input logic plan plan input constraint null input constraint bag factori get instanc new default bag output constraint map put filter get input logic plan plan input constraint data bag output datum deriv datum get filter datum bag input datum deriv datum get filter get input logic plan plan tri output constraint null output constraint size one output constraint gener correspond input constraint iter tupl output constraint iter next tupl output constraint next exampl tupl input constraint gener match tupl output constraint filter cond fals input constraint null input constraint add input constraint els output datum size output constraint output empti gener one input pass filter exampl tupl input constraint gener match tupl filter get schema filter cond fals input constraint null input constraint add input constraint necessari insert neg exampl e tupl pass filter output datum size input datum size tupl pass filter gener one input pass filter exampl tupl input constraint gener match tupl filter get schema filter cond true input constraint null input constraint add input constraint catch except e log error error visit load augment phase exampl gener e get messag e throw new frontend except error visit load augment phase exampl gener e get messag e overrid public void visit throw frontend except limit pre order depth first walker current walker get branch flag return datum bag output constraint output constraint map get output constraint map remov logic plan plan get inner plan boolean abl handl true list integ col new array list integ boolean cast fals output constraint null output constraint size do not anyth case return oper op plan get sink get op instanceof cast express cast true op cast express op get express op instanceof project express abl handl fals els col add integ valu project express op get col num abl handl handl simpl project datum bag output bag factori get instanc new default bag iter tupl output constraint iter next tupl output constraint next tri tupl input constraint back prop constraint output constraint col logic relat oper plan get predecessor get get schema cast output add input constraint catch except e e print stack trace throw new frontend except oper error augment phase exampl gener e get messag output constraint map put plan get predecessor get output overrid public void visit load load throw frontend except data bag input data base datum get load check input datum exist input data null input datum size log error valid input datum find throw new runtim except valid input datum find datum bag new input data new base data get load new input data null new input data bag factori get instanc new default bag new base data put load new input data logic schema schema tri schema load get schema schema null throw new runtim except exampl gener requir schema pleas provid schema load datum catch frontend except e log error error visit load augment phase exampl gener e get messag throw new frontend except error visit load augment phase exampl gener e get messag tupl exampl tupl input datum iter next datum bag output constraint output constraint map get load output constraint map remov load first requir guarante least one output tupl output constraint null output constraint size output constraint bag factori get instanc new default bag output constraint add tupl factori get instanc new tupl schema get field size creat exampl tupl steal valu encount n care field e null field system println exampl tupl string run output constraint one synthes tupl add base datum synthes individu field tri match field exist real datum boolean new input fals iter tupl output constraint iter next tupl output constraint next saniti check output constraint size schema get field size throw new runtim except intern error incorrect number field constraint tupl tupl input tupl factori get instanc new tupl output constraint size exampl tupl input tupl new exampl tupl input tri int input tupl size object output constraint get null exampl tupl size exampl tupl get input tupl set output constraint instanceof exampl tupl input tupl synthet exampl tupl output constraint synthet els raw tupl synthes input tupl synthet true catch exec except e log error error visit load augment phase exampl gener e get messag throw new frontend except error visit load augment phase exampl gener e get messag tri input tupl synthet input input tupl input datum schema input tupl synthet true new input data add input tupl new input new input true catch exec except e throw new frontend except error visit load augment phase exampl gener e get messag privat boolean input tupl new tupl data bag input logic schema schema throw exec except boolean result iter tupl iter input iter iter next result true tupl tmp iter next int schema size new tupl get equal tmp get result fals break result return true return fals overrid public void visit sort throw frontend except limit pre order depth first walker current walker get branch flag return datum bag output constraint output constraint map get output constraint map remov output constraint null output constraint map put get input logic plan plan bag factori get instanc new default bag els output constraint map put get input logic plan plan output constraint overrid public void visit split split throw frontend except limit pre order depth first walker current walker get branch flag return overrid public void visit store store throw frontend except limit pre order depth first walker current walker get branch flag return datum bag output constraint output constraint map get store output constraint null output constraint map put plan get predecessor store get bag factori get instanc new default bag els output constraint map remov store output constraint map put plan get predecessor store get output constraint overrid public void visit union u throw frontend except limit pre order depth first walker current walker get branch flag return datum bag output constraint output constraint map get u output constraint map remov u output constraint null output constraint size do not need anyth find input creat empti bag output constraint return oper op u get input logic plan plan datum bag constraint bag factori get instanc new default bag output constraint map put op constraint return sinc output constraint appli input round robin int count list oper input u get input logic plan plan int input input size oper op input data bag constraint bag factori get instanc new default bag output constraint map put op constraint iter tupl output constraint iter next data bag constraint output constraint map get input get count constraint add next count count input overrid public void visit limit lm throw frontend except limit augment travers return ori limit map null ori limit map new hash map limit long data bag output constraint output constraint map get lm output constraint map remov lm data bag input constraint output constraint map get lm get input logic plan plan input constraint null input constraint bag factori get instanc new default bag output constraint map put lm get input logic plan plan input constraint data bag input datum deriv datum get lm get input logic plan plan output constraint null output constraint size one output constraint gener correspond input constraint iter tupl output constraint iter next input constraint add next plu one one input constraint size input constraint add input datum iter next pre order depth first walker current walker set branch flag els input constraint size add input input constraint input constraint add input datum plu one one input constraint size input constraint add input datum iter next pre order depth first walker current walker set branch flag limit po limit limit log phi map get lm ori limit map put lm long valu po limit get limit po limit set limit input constraint size lm set limit po limit get limit tupl get group input object group label list integ group col int num field throw exec except tupl tupl factori get instanc new tupl num field group col size group label would datum atom set group col get group label els group label instanceof tupl throw new runtim except unrecogn group label tupl group tupl group label int group col size set group col get group get return tupl get join input tupl group list integ group col list integ group col int num field throw exec except tupl tupl factori get instanc new tupl num field group col size group label would datum atom set group col get group get group col get els group instanceof tupl throw new runtim except unrecogn group label int group col size set group col get group get group col get return tupl get join input tupl group list integ group col int num field throw exec except tupl tupl factori get instanc new tupl num field group col size group label would datum atom set group col get group els group instanceof tupl throw new runtim except unrecogn group label int group col size set group col get group get return tupl back prop constraint tupl output constraint list integ col logic schema input schema boolean cast throw exec except tupl input const tupl factori get instanc new tupl input schema get field size tupl input constraint new exampl tupl input const int col col output constraint size col int col col get col object val output constraint get col object val input constraint get col val null val null input constraint set col val input constraint set col cast new datum byte array val string get byte val els val null unabl back propag due conflict column constraint give return null return input constraint gener constraint tupl conform schema pass predic null unabl find tupl exampl tupl gener match tupl logic schema schema logic express plan plan boolean invert throw frontend except exec except return gener match tupl tupl factori get instanc new tupl schema get field size plan invert gener constraint tupl conform constraint pass predic null unabl find tupl constraint tupl tupl whose field blend actual datum valu null null stand n care futur may want replac n care rich constraint languag would help e g case two filter row want downstream filter tell upstream filter predic want satisfi given field exampl tupl gener match tupl tupl constraint logic express plan predic boolean invert throw exec except frontend except tupl tupl factori get instanc new tupl constraint size exampl tupl new exampl tupl int size set constraint get gener match tupl helper predic get sourc get invert synthet true return void gener match tupl helper tupl oper pred boolean invert throw frontend except exec except pred instanceof binari express gener match tupl helper binari express pred invert els pred instanceof express gener match tupl helper express pred invert els pred instanceof null express gener match tupl helper null express pred invert els pred instanceof user func express n know gener input tupl return null suppress gener null els throw new frontend except unknown oper filter predic void gener match tupl helper tupl binari express pred boolean invert throw frontend except exec except pred instanceof express gener match tupl helper express pred invert return els pred instanceof express gener match tupl helper express pred invert return sure express oper root plan boolean leav const fals right const fals object leav const null right const null byte leav data type right data type int leav col right col pred instanceof add express pred instanceof subtract express pred instanceof multipli express pred instanceof divid express pred instanceof mod express pred instanceof regex express return n tri work around oper right pred get lh instanceof constant express leav const true left const constant express pred get lh get valu els logic express lh pred get lh lh instanceof cast express lh cast express lh get express pred get lh operand instanceof project express project express pred get lh operand get project size return hard lh instanceof project express return leav col project express lh get col num leav data type project express lh get type object get leav col null left const true left const pred get rh instanceof constant express right const true right const constant express pred get rh get valu els oper rh pred get rh rh instanceof cast express rh cast express rh get express pred get rh operand instanceof project express project express pred get rh operand get project size return hard rh instanceof project express return right col project express rh get col num right data type project express rh get type object get right col null right const true right const leav const right const return can n realli chang result constant tri chang null constant convert null constant invert pred instanceof equal express leav const set right col gener datum right data type leav const string els right const set left col gener datum leav data type right const string els set left col gener datum leav data type set right col gener datum right data type els pred instanceof equal express leav const set right col gener datum right data type get unequ valu leav const string els right const set left col gener datum leav data type get unequ valu right const string els set left col gener datum leav data type set right col gener datum right data type els pred instanceof greater express pred instanceof greater equal express leav const set right col gener datum right data type get small valu leav const string els right const set left col gener datum leav data type get larg valu right const string els set left col gener datum leav data type set right col gener datum right data type els pred instanceof less express pred instanceof less equal express leav const set right col gener datum right data type get larg valu leav const string els right const set left col gener datum leav data type get small valu right const string els set left col gener datum leav data type set right col gener datum right data type els pred instanceof equal express leav const set right col gener datum right data type get unequ valu leav const string els right const set left col gener datum leav data type get unequ valu right const string els set left col gener datum leav data type set right col gener datum right data type els pred instanceof equal express leav const set right col gener datum right data type leav const string els right const set left col gener datum leav data type right const string els set left col gener datum leav data type set right col gener datum right data type els pred instanceof greater express pred instanceof greater equal express leav const set right col gener datum right data type get larg valu leav const string els right const set left col gener datum leav data type get small valu right const string els set left col gener datum leav data type set right col gener datum right data type els pred instanceof less express pred instanceof less equal express leav const set right col gener datum right data type get small valu leav const string els right const set left col gener datum leav data type get larg valu right const string els set left col gener datum leav data type set right col gener datum right data type void gener match tupl helper tupl express op boolean invert throw frontend except exec except oper input op get lh gener match tupl helper input invert input op get rh gener match tupl helper input invert void gener match tupl helper tupl express op boolean invert throw frontend except exec except oper input op get lh gener match tupl helper input invert input op get rh gener match tupl helper input invert void gener match tupl helper tupl express op boolean invert throw frontend except exec except logic express input op get express gener match tupl helper input invert void gener match tupl helper tupl null express op boolean invert throw frontend except exec except byte type op get express get type invert set null els set gener datum type object get unequ valu object v byte type data type find type v type data type type data type type data type return null object zero gener datum type v equal zero return gener datum type return zero object get small valu object v byte type data type find type v type data type type data type type data type return null switch type case data type string str string v str length return str substr str length els return null case data type data byte array data data byte array v datum size return new datum byte array datum get datum size els return null case data type return integ valu integ v case data type return long valu long v case data type return float valu float v case data type return doubl valu doubl v case data type return big integ v subtract big integ case data type return big decim v subtract big decim case data type date time dt date time v dt get milli second return dt minu milli els dt get second minut return dt minu second els dt get minut hour return dt minu minut els dt get hour day return dt minu hour els return dt minu day default return null object get larg valu object v byte type data type find type v type data type type data type type data type return null switch type case data type return string v case data type string str data byte array v string str str return new datum byte array str case data type return integ valu integ v case data type return long valu long v case data type return float valu float v case data type return doubl valu doubl v case data type return big integ v add big integ case data type return big decim v add big decim case data type date time dt date time v dt get milli second return dt plu milli els dt get second minut return dt plu second els dt get minut hour return dt plu minut els dt get hour day return dt plu hour els return dt plu day default return null object gener datum byte type string datum switch type case data type datum equal ignor case true return boolean els datum equal ignor case fals return boolean els return null case data type return new datum byte array datum get byte case data type return doubl valu datum case data type return float valu datum case data type return integ valu datum case data type return long valu datum case data type return new big integ datum case data type return new big decim datum case data type return new date time datum case data type return datum default return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util array list import java util iter import java util list import org apach accumul import org apach algebra import org apach eval func import org apach func spec import org apach except import org apach backend executionengin exec except import org apach datum datum bag import org apach data data byte array import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl logic layer frontend except import org apach impl logic layer schema schema gener averag set valu class implement link org apach algebra possibl execut perform distribut fashion p oper numer type also oper bytearray cast doubl expect bag tupl one record know schema function pass bag integ long use special adapt version use integ arithmet sum datum return type alway doubl regardless input type p implement link org apach accumul interfac well never prefer method usag avail case combin use give calcul public class extend eval func doubl implement algebra accumul doubl privat static tupl factori tupl factori tupl factori get instanc overrid public doubl exec tupl input throw except tri doubl sum sum input sum null either hand empti bag bag fill null return null case return null doubl count count input doubl avg null count avg new doubl sum count return avg catch exec except ee throw ee overrid public string get initi return initi class get name overrid public string get interm return intermedi class get name overrid public string get final return final class get name static public class initi extend eval func tupl overrid public tupl exec tupl input throw except tupl tupl factori new tupl tri input bag one tupl contain column tri avg data bag bg data bag input get datum byte array dba null bg iter next tupl tp bg iter next dba data byte array tp get set dba null doubl valu dba string null dba null set els set return catch number format except nfe invalid input treat input null tri set null set catch exec except e throw e return catch exec except ee throw ee catch except e int err code string msg error comput averag get class get simpl name throw new exec except msg err code except e static public class intermedi extend eval func tupl overrid public tupl exec tupl input throw except tri datum bag b datum bag input get return combin b catch exec except ee throw ee catch except e int err code string msg error comput averag get class get simpl name throw new exec except msg err code except e static public class final extend eval func doubl overrid public doubl exec tupl input throw except tri datum bag b datum bag input get tupl combin combin b doubl sum doubl combin get sum null return null doubl count long combin get doubl avg null count avg new doubl sum count return avg catch exec except ee throw ee catch except e int err code string msg error comput averag get class get simpl name throw new exec except msg err code except e static protect tupl combin datum bag valu throw exec except doubl sum long count combin call intermedi final either case initi would call would send valid tupl henc n need check incom bag empti tupl output tupl factori new tupl boolean saw non null fals iter tupl valu iter next tupl next doubl doubl get count null avg contribut departur perform implement inspect size bag null els see non null true sum count long get see non null output set new doubl sum els output set null output set long valu count return output static protect long count tupl input throw exec except data bag valu datum bag input get long cnt iter tupl valu iter next tupl tupl next null size get null cnt return cnt static protect doubl sum tupl input throw exec except except data bag valu datum bag input get hand empti bag return valu null valu size return null doubl sum boolean saw non null fals iter tupl valu iter next tupl next tri datum byte array dba data byte array get doubl dba null doubl valu dba string null null continu saw non null true sum catch runtim except exp int err code string msg problem comput sum doubl throw new exec except msg err code except exp see non null return new doubl sum els return null overrid public schema output schema schema input return new schema new schema field schema null datum type non javadoc see org apach eval func get arg func map overrid public list func spec get arg func map throw frontend except list func spec func list new array list func spec func list add new func spec get class get name schema gener nest schema data type data type func list add new func spec doubl avg class get name schema gener nest schema data type data type func list add new func spec float avg class get name schema gener nest schema data type data type func list add new func spec int avg class get name schema gener nest schema data type data type func list add new func spec long avg class get name schema gener nest schema data type data type func list add new func spec big decim avg class get name schema gener nest schema data type data type func list add new func spec big integ avg class get name schema gener nest schema data type data type return func list accumul interfac implement privat doubl intermedi sum null privat doubl intermedi count null overrid public void accumul tupl b throw except tri doubl sum sum b sum null return set default valu intermedi sum null intermedi count null intermedi sum intermedi count doubl count long count b count intermedi count count intermedi sum sum catch exec except ee throw ee catch except e int err code string msg error comput averag get class get simpl name throw new exec except msg err code except e overrid public void cleanup intermedi sum null intermedi count null overrid public doubl get valu doubl avg null intermedi count null intermedi count avg new doubl intermedi sum intermedi count return avg 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io file find except import java io except import java io input stream import java util array list import java util list import java util properti import org apach avro schema import org apach avro schema pars except import org apach avro schema type import org apach avro file datum file stream import org apach avro gener gener contain import org apach avro gener gener datum reader import org apach avro gener gener datum import org apach avro mapr avro input format import org apach avro mapr avro output format import org apach common cli command line import org apach common cli command line parser import org apach common cli gnu parser import org apach common cli help formatt import org apach common cli option import org apach common cli pars except import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f file statu import org apach hadoop f file system import org apach hadoop f path import org apach hadoop io null writabl import org apach hadoop mapreduc input format import org apach hadoop mapreduc input split import org apach hadoop mapreduc job import org apach hadoop mapreduc output format import org apach hadoop mapreduc record reader import org apach hadoop mapreduc record writer import org apach hadoop mapreduc task attempt context import org apach hadoop mapreduc lib input file input format import org apach hadoop mapreduc lib output file output format import org apach express import org apach load func import org apach load metadata import org apach load push import org apach warn import org apach resourc schema import org apach resourc statist import org apach store func import org apach store func interfac import org apach store resourc import org apach backend hadoop executionengin map reduc layer split import org apach datum tupl import org apach impl logic layer frontend except import org apach impl util jar manag import org apach impl util context import org apach impl util util import org apach impl util avro avro array reader import org apach impl util avro avro record reader import org apach impl util avro avro record writer import org apach impl util avro avro storag schema convers util import org apach impl util avro avro tupl wrapper import com googl common collect list import com googl common collect map read write avro datum public class avro storag extend load func implement store func interfac load metadata load push store resourc creat new instanc storag function without specifi schema use load datum public avro storag null null creat new instanc storag function param sn specifi input output schema record name public avro storag final string sn sn null privat string schema name output privat string schema name space null protect boolean allow recurs fals protect boolean doubl colon doubl underscor fals protect schema schema protect final log log log factori get log get class creat new instanc avro storag function specifi output schema properti param sn specifi input output schema record name param opt option avro storag li code namespac code namespac automat gener output schema li li code schemafil code specifi avro schema file read input schema local file hdf url etc li li code schemaclass code specifi fulli qualifi class name avro class classpath implement gener contain li li code examplefil code specifi avro datum file copi input schema local file hdf url etc li li code allowrecurs code option allow recurs schema definit default fals li li code doublecolon code option translat schema name doubl colon name doubl underscor default fals li public avro storag final string sn final string opt super sn null sn length tri schema new schema parser pars sn must valid schema set input avro schema set output avro schema catch schema pars except e valid schema use record name schema name sn opt null string opt arr opt split option valid option new option tri command line parser parser new gnu parser valid option add option n namespac true namespac automat gener output schema valid option add option f schemafil true specifi avro schema file read input output schema valid option add option c schemaclass true specifi fulli qualifi class name avro class classpath implement gener contain valid option add option e examplefil true specifi avro datum file copi output schema valid option add option be allowrecurs fals option allow recurs schema definit default fals valid option add option doublecolon fals option translat schema name doubl colon name doubl underscor default fals command line configur option parser pars valid option opt arr schema name space configur option get option valu namespac null allow recurs configur option option be doubl colon doubl underscor configur option option configur option option f tri path p new path configur option get option valu f configur conf context get context get job conf null conf new configur els conf context get context get job conf schema new schema parser pars file system get p uri conf open p set input avro schema set output avro schema catch file find except fnfe system err printf file find except n log warn schema file find instanti avro storag schema describ local file front end messag back end log ignor mesasg fnfe els configur option option c string schema class configur option get option valu c tri schema gener contain class name schema class new instanc get schema set input avro schema set output avro schema catch class find except illeg access except cnfe system err printf class find except n log error schema class schema class find classpath cnfe throw new runtim except cnfe catch instanti except ie system err printf instanti except n log error schema class schema class must public empti arg constructor ie throw new runtim except ie catch class cast except cce system err printf class cast except n log error schema class schema class must implement org apach avro gener gener contain interfac cce throw new runtim except cce els configur option option e set output avro schema get avro schema configur option get option valu e new job new configur catch pars except e log error except avro storag e log error avro storag call argument sn opt warn pars except avro storag warn help formatt formatt new help formatt formatt print help avro storag option valid option throw new runtim except e catch except e log warn except avro storag e log warn avro storag call argument sn opt warn except avro storag warn throw new runtim except e context signatur instanc protect string udf context signatur null overrid public final void set context signatur final string signatur udf context signatur signatur super set context signatur signatur updat schema input avro schema intern function get properti object associ instanc return properti object associ instanc protect final properti get properti udf context signatur null return get properti avro storag class null els return get properti avro storag class udf context signatur intern function get properti object associ instanc param c class param signatur signatur string return properti object associ instanc suppress warn rawtyp protect final properti get properti final class c final string signatur context context context get context signatur null return context get properti c els return context get properti c new string signatur see org apach load metadata get schema java lang string org apach hadoop mapreduc job overrid public final resourc schema get schema final string locat final job job throw except schema null schema get avro schema locat job set input avro schema resourc schema rs avro storag schema convers util avro schema resourc schema schema allow recurs return rs read avro schema specifi locat param locat locat file param job hadoop job object return avro schema object deriv specifi file throw except protect final schema get avro schema final string locat final job job throw except string locat get path string locat path path new path locat length int path length path new path locat return get avro schema path job read avro schema specifi locat param p locat file param job hadoop job object return avro schema object deriv specifi file throw except public schema get avro schema final path p final job job throw except gener datum reader object avro reader new gener datum reader object array list file statu statu list new array list file statu file system f file system get p uri job get configur path temp p file statu tempf f glob statu temp statu list add tempf file statu statu array file statu statu list array new file statu statu list size statu array null throw new except path p string exist statu array length throw new except path match pattern p string path file path util depth first search file statu array f file path null throw new except path match pattern p string input stream hdf input stream fs open file path datum file stream object avro data stream new datum file stream object hdf input stream avro reader schema avro data stream get schema avro data stream close return see org apach load metadata get statist java lang string org apach hadoop mapreduc job overrid public final resourc statist get statist final string locat final job job throw except return null see org apach load metadata get partit key java lang string org apach hadoop mapreduc job overrid public final string get partit key final string locat final job job throw except return null see org apach load metadata set partit filter org apach express overrid public void set partit filter final express partit filter throw except see org apach store func interfac rel ab path store locat java lang string org apach hadoop f path overrid public final string rel ab path store locat final string locat final path cur dir throw except return load func get absolut path locat cur dir see org apach store func interfac get output format overrid public output format null writabl object get output format throw except hadoop output format avro storag class avro storag output format extend file output format null writabl object overrid public record writer null writabl object get record writer final task attempt context tc throw except interrupt except return new avro record writer avro storag output format schema get default work file tc avro output format tc get configur return new avro storag output format see org apach store func interfac set store locat java lang string org apach hadoop mapreduc job overrid public final void set store locat final string locat final job job throw except file output format set output path job new path locat properti name output avro schema public static final string org apach builtin avro storag output schema see org apach store func interfac check schema org apach resourc schema overrid public final void check schema final resourc schema rs throw except rs null throw new except check schema call null resourc schema schema avro schema avro storag schema convers util resourc schema avro schema rs schema name null schema name length output schema name schema name space map string list schema new hash map doubl colon doubl underscor avro schema null throw new except check schema could translat resourc schema avro schema set output avro schema avro schema set output avro schema param avro schema protect final void set output avro schema final schema schema get properti set properti string util function get output schema udf properti instanc store function return output schema associ protect final schema get output avro schema schema null string schema string get properti get properti schema string null schema new schema parser pars schema string return schema record writer use instanc privat record writer null writabl object writer see org apach store func interfac prepar write org apach hadoop mapreduc record writer suppress warn uncheck rawtyp overrid public final void prepar write final record writer w throw except udf context signatur null throw new except get class string prepar write call without set udf context signatur writer record writer null writabl object w avro record writer writer prepar write get output avro schema see org apach store func interfac put next org apach datum tupl overrid public final void put next final tupl throw except tri writer write null catch interrupt except e log error interrupt except put next throw new except e see org apach store func interfac set store func context signatur java lang string overrid public final void set store func context signatur final string signatur udf context signatur signatur super set context signatur signatur see org apach store func interfac cleanup failur java lang string org apach hadoop mapreduc job overrid public final void cleanup failur final string locat final job job throw except store func cleanup failur impl locat job properti name input avro schema public static final string org apach builtin avro storag input schema see org apach load func set locat java lang string org apach hadoop mapreduc job overrid public void set locat final string locat final job job throw except file input format set input path job locat schema null schema get input avro schema schema null schema get avro schema locat job schema null throw new except could determin avro schema locat locat set input avro schema schema set input avro schema param specifi schema protect final void set input avro schema final schema schema get properti set properti string helper function read input avro schema properti return input avro schema public final schema get input avro schema schema null updat schema input avro schema return schema util function get input avro schema udf properti updat schema instanc privat final void updat schema input avro schema string schema string get properti get properti schema string null schema new schema parser pars schema string schema see org apach load func get input format overrid public input format null writabl gener data record get input format throw except return new org apach backend hadoop executionengin map reduc layer file input format null writabl gener data record overrid public record reader null writabl gener data record creat record reader final input split final task attempt context tc throw except interrupt except schema get input avro schema record reader null writabl gener data record rr null get type type rr new avro array reader els rr new avro record reader tri rr initi tc final rr close tc set statu string return rr suppress warn rawtyp privat record reader reader split split see org apach load func prepar read org apach hadoop mapreduc record reader org apach backend hadoop executionengin map reduc layer split suppress warn rawtyp overrid public final void prepar read final record reader be final split throw except reader be split see org apach load func get next overrid public final tupl get next throw except tri reader next key valu return new avro tupl wrapper gener data record gener data record reader get current valu els return null catch interrupt except e throw new except wrap interrupt except e overrid public void cleanup success final string locat final job job throw except overrid public list oper set get featur return list new array list load push oper set list requir field pass push project protect requir field list requir field list see org apach load push push project org apach load push requir field list overrid public requir field respons push project final requir field list rfl throw frontend except requir field list rfl schema new schema avro storag schema convers util new schema requir field list schema rfl new schema null schema new schema set input avro schema schema return new requir field respons true els log warn could select field subset rfl n warn could select field subset warn return new requir field respons fals overrid public list string get ship file class class list new class schema class avro input format class return func util get ship file class list 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import org apach eval func import org apach except import org apach backend executionengin exec except import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach impl logic layer schema schema method never use directli use link public class bag size extend eval func long overrid public long exec tupl input throw except tri datum bag bag datum bag input get return bag null null long valu bag size catch exec except exp throw exp catch except e int err code string msg error comput size get class get simpl name throw new exec except msg err code except e overrid public schema output schema schema input return new schema new schema field schema null datum type overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import org apach eval func import org apach except import org apach backend executionengin exec except import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl logic layer schema schema field schema flatten bag string use charact default delimit one provid exampl bag b c bag string bag b c bag string bag b c bag b c e f bag string bag b c e f input bag null return null public class bag string extend eval func string privat static final string usag bag string datum bag bag string datum bag delimit privat static final string overrid public string exec tupl input tupl throw except input tupl size input tupl size throw new exec except except object first arg input tupl get first arg null return null first arg instanceof datum bag throw new exec except find type first arg get class get name except input tupl size input tupl get instanceof string throw new exec except usag bag tupl data bag string except data bag bag datum bag input tupl get string delimet input tupl size delimet string input tupl get string builder buffer new string builder tri tupl bag null int size buffer length buffer append delimet buffer append get return buffer string catch except e string msg encournt error flatten bag get class get simpl name throw new exec except msg except e overrid public schema output schema schema input schema tri input schema null input schema size input schema size throw new runtim except expect input find input schema null input schema size field schema input field schema input schema get field input field schema type data type throw new runtim except expect bag tupl find datum type data type find type name input field schema type first field bag schema field schema first field schema input field schema schema get field first field schema null first field schema schema null first field schema schema size throw new runtim except expect bag delimet find input schema first field schema type data type throw new runtim except expect bag delimet find input schema input schema size field schema second input field schema input schema get field second input field schema type data type throw new runtim except expect bag delimet find input schema return new schema new schema field schema null datum type catch frontend except e e print stack trace return null overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import org apach eval func import org apach except import org apach backend executionengin exec except import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl logic layer frontend except import org apach impl logic layer schema schema flatten bag tupl perform flatten first level n recurs flatten nest bag exampl b c b c b c e f b c e f input bag null return null public class bag tupl extend eval func tupl overrid public tupl exec tupl input tupl throw except input tupl size throw new exec except expect input find input tupl size except input tupl get null return null input tupl get instanceof data bag throw new exec except usag bag tupl data bag except data bag input bag data bag input tupl get tri tupl output tupl null long output tupl size get ouput tupl size input bag tupl factori new tupl int size support integ output tupl size integ throw new exec except input bag larg except tupl factori tupl factori tupl factori get instanc output tupl tupl factori new tupl int output tupl size int field num tupl input bag null int size output tupl set field num get return output tupl catch except e string msg encournt error flatten bag tupl get class get simpl name throw new exec except msg except e calcul size output tupl base sum size tupl input bag param bag return total datum element tab privat long get ouput tupl size datum bag bag long size bag null tupl bag size size size return size overrid public schema output schema schema input schema tri input schema null input schema size throw new runtim except expect input find input schema null input schema size schema field schema input field schema input schema get field input field schema type data type throw new runtim except expect bag tupl first field bag schema schema field schema first field schema input field schema schema get field first field schema null first field schema schema null first field schema schema size throw new runtim except expect bag tupl find input schema first field schema type data type throw new runtim except expect bag tupl find input schema output schema schema tupl output schema new schema int first field schema schema size tupl output schema add first field schema schema get field return new schema new schema field schema get schema name get class get name low case input schema tupl output schema data type catch frontend except e e print stack trace return null overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan import java io byte array output stream import java io print stream import java util array dequ import java util array list import java util dequ import java util hash set import java util iter import java util list import java util set import org apach common log log import org apach common log log factori import org apach impl logic layer frontend except import org apach impl util pair public abstract class base oper plan implement oper plan protect list oper op protect plan edg edg protect plan edg edg protect plan edg soft edg protect plan edg soft edg privat list oper root privat list oper leav protect static final log log log factori get log base oper plan class public base oper plan op new array list oper root new array list oper leav new array list oper edg new plan edg edg new plan edg soft edg new plan edg soft edg new plan edg suppress warn uncheck public base oper plan base oper plan shallow copi constructor op list oper array list oper op clone root list oper array list root clone leav list oper array list leav clone edg edg shallow clone edg edg shallow clone soft edg soft edg shallow clone soft edg soft edg shallow clone get number node plan public int size return op size get oper plan predecessor return oper plan predecessor empti list plan empti public list oper get sourc root size op size oper op op edg get op null root add op return root get oper plan successor return oper plan successor empti list plan empti public list oper get sink leav size op size oper op op edg get op null leaf add op return leav give oper get oper immedi plan param op oper fetch predecessor return list oper imeedi op empti list op root public list oper get predecessor oper op return edg get op give oper get oper immedi param op oper fetch successor return list oper imeedi op empti list op leaf public list oper get successor oper op return edg get op give oper get oper softli immedi plan param op oper fetch predecessor return list oper immedi op empti list op root public list oper get soft link predecessor oper op return soft edg get op give oper get oper softli immedi param op oper fetch successor return list oper immedi op empti list op leaf public list oper get soft link successor oper op return soft edg get op add new oper plan connect exist oper param op oper add public void add oper op mark dirti op contain op op add op remov oper plan param op oper remov throw frontend except remov oper attempt remov oper still connect oper public void remov oper op throw frontend except edg contain key op edg contain key op throw new frontend except attempt remov oper op get name still connect plan soft edg contain key op soft edg contain key op throw new frontend except attempt remov oper op get name still softli connect plan mark dirti op remov op connect two oper plan control posit edg list edg place param oper edg come param po posit array edg param oper edg go param po posit array edg public void connect oper int po oper int po connect null null return mark dirti edg put po edg put po check give two oper directli connect param oper edg come param oper edg go public boolean connect oper oper list oper pred get predecessor return pred null pred contain connect two oper plan param oper edg come param oper edg go public void connect oper oper connect null null return mark dirti edg put edg put creat soft edg two node param oper depend upon param oper depend public void creat soft link oper oper soft edg put soft edg put remov soft edg param oper depend upon param oper depend public void remov soft link oper oper soft edg remov soft edg remov disconnect two oper plan param oper edg come param oper edg go return pair posit indic posit array throw frontend except two oper n connect public pair integ integ disconnect oper oper throw frontend except pair oper integ f edg remov posit f null throw new frontend except attempt disconnect oper get name get name connect pair oper integ edg remov posit null throw new frontend except plan inconssist state get name get name connect edg edg mark dirti return new pair integ integ f second second privat void mark dirti root clear leaf clear public iter oper get oper return op iter public boolean equal oper plan throw frontend except return equal privat static boolean check predecessor oper op oper op throw frontend except list oper pred op get plan get predecessor op list oper pred op get plan get predecessor op pred null pred null intent blank els pred null pred null return fals els pred size pred size return fals int pred size oper p pred get oper p pred get p equal p return fals check predecessor p p return fals return true protect static boolean equal oper plan p oper plan p throw frontend except p p return true p null p null list oper leav p get sink list oper leav p get sink leav size leav size return fals must find leaf equal leaf guarante leaf return particular order boolean find true oper op leav boolean find one fals oper op leav op equal op check predecessor op op find one true break find find one find return fals return find return fals public void explain print stream ps string format boolean verbos throw frontend except overrid public string string byte array output stream os new byte array output stream print stream ps new print stream os tri explain ps fals catch frontend except e return return os string overrid public void replac oper old oper oper new oper throw frontend except add new oper list oper pred get predecessor old oper pred null list oper pred copi new array list oper pred copi add pred int pred copi size oper pred pred copi get pair integ integ po disconnect pred old oper connect pred po first new oper list oper succ get successor old oper succ null list oper succ copi new array list oper succ copi add succ int succ copi size oper succ succ copi get pair integ integ po disconnect old oper succ connect new oper succ po second remov old oper assum node multipl input one output node multipl output one input otherwis n know connect input output assumpt true logic plan physic plan plan overrid public void remov reconnect oper oper remov throw frontend except list oper pred copi null get predecessor oper remov null get predecessor oper remov size pred copi new array list oper pred copi add get predecessor oper remov list oper succ copi null get successor oper remov null get successor oper remov size succ copi new array list oper succ copi add get successor oper remov pred copi null pred copi size succ copi null succ copi size throw new frontend except remov reconnect node multipl input output pred copi null pred copi size node multipl input one output output reconnect input output oper succ null pair integ integ po null succ copi null succ succ copi get po disconnect oper remov succ oper pred pred copi pair integ integ po disconnect pred oper remov succ null connect pred po first succ po second els succ copi null succ copi size node multipl output one output output reconnect input output oper pred null pair integ integ po null pred copi null pred pred copi get po disconnect pred oper remov oper succ succ copi pair integ integ po disconnect oper remov succ pred null connect pred po first succ po second els one input output oper pred null pair integ integ po null pred copi null pred pred copi get po disconnect pred oper remov oper succ null pair integ integ po null succ copi null succ succ copi get po disconnect oper remov succ pred null succ null connect pred po first succ po second remov oper remov overrid public void insert oper pred oper oper insert oper succ throw frontend except add oper insert pair integ integ po disconnect pred succ connect pred po first oper insert connect oper insert succ po second method check path give node anoth node param start node check param end node check return true path exist fals otherwis public boolean path exist oper oper list oper successor get successor successor null successor size return fals oper successor successor successor equal path exist successor return true return fals move everyth give oper new oper plan specifi oper move root new oper plan param root oper move everyth param new plan new oper plan move thing throw plan except public void move tree oper root base oper plan new plan throw frontend except dequ oper queue new array dequ oper new plan add root root set plan new plan queue add last root queue empti oper node queue poll get successor node null oper succ get successor node queue contain succ queue add last succ new plan add succ succ set plan new plan new plan connect node succ trim root trim everyth give oper specifi oper remov param op oper trim everyth throw frontend except public void trim oper op throw frontend except get successor op null list oper succ new array list oper succ add get successor op oper succ succ disconnect op succ trim succ remov succ 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java util array list import java util list import org apach datum tupl import org apach impl plan oper key import org apach impl util ident hash set base class binari express oper support lh rh oper use fetch input appli appropri oper appropri type public abstract class binari express oper extend express oper privat static final long serial version protect express oper lh protect express oper rh privat transient list express oper child public binari express oper oper key k k public binari express oper oper key k int rp super k rp public express oper get lh return lh get child express express public list express oper get child express child null child new array list express oper child add lh child add rh return child overrid public boolean support multipl input return true public void set lh express oper lh lh lh public express oper get rh return rh public void set rh express oper rh rh rh protect void clone helper binari express oper op n clone refer thing alreadi plan lh op lh rh op rh super clone helper op overrid public tupl illustr markup object object int eq class index return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema import org apach parser sourc locat public class bin cond express extend logic express add oper plan connect left right hand side oper condit oper param plan plan oper part param lh express leav hand side param rh express right hand side public bin cond express oper plan plan logic express condit logic express lh logic express rh super bin cond plan plan add plan connect condit plan connect lh plan connect rh return oper handl condit return express handl condit throw frontend except public logic express get condit throw frontend except return logic express plan get successor get get left hand side express return express leav hand side throw frontend except public logic express get lh throw frontend except return logic express plan get successor get get right hand side express return express right hand side throw frontend except public logic express get rh throw frontend except return logic express plan get successor get link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof bin cond express bin cond express ao bin cond express return ao get condit equal get condit ao get lh equal get lh ao get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema type check exp visitor ensur lh rh schema logic field schema arg fs get lh get field schema field schema arg fs deep copi field schema reset uid uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new bin cond express lg exp plan get condit deep copi lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java io byte array input stream import java io data input import java io data input stream import java io data output import java io except import java io unsupport encod except import java math big decim import java math big integ import java nio byte buffer import java util hash map import java util iter import java util map import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop io data input buffer import org apach hadoop io writabl import org apach hadoop io writabl compar import org apach hadoop io writabl compar import org apach hadoop mapr job conf import org apach except import org apach backend executionengin exec except import org apach classif interfac audienc import org apach classif interfac stabil import org apach datum util sede helper import org apach impl util object serial import org joda time date time import org joda time date time zone class handl read write intermedi result datum type serial format use class effici use data reader writer format use function class subject chang use store intermedi result within queri interfac audienc privat interfac stabil stabl public class bin inter sede implement inter sede privat static final int public static final byte public static final byte public static final byte public static final byte sinc boolean support yet v extern type lot person use int instead datum old schema like stay time optim case well public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte privat static tupl factori tupl factori tupl factori get instanc privat static bag factori bag factori bag factori get instanc public static final int public static final int public static final string public tupl read tupl data input byte type throw except switch type case case case case case case case case case case case case case return sede helper read gener tupl type case case case return read schema tupl type default throw new exec except unknown tupl type find stream type privat tupl read schema tupl data input byte type throw except int id switch type case id read unsign byte break case id read unsign short break case id read int break default throw new runtim except invalid type give read schema tupl type tupl st schema tupl factori get instanc id new tupl st read field return st public int get tupl size datum input byte type throw except int sz switch type case return case return case return case return case return case return case return case return case return case return case sz read unsign byte break case sz read unsign short break case sz read int break default int err code string msg unexpect datatyp type read tupl binari file throw new exec except msg err code except sz construct empti tupl presum writer write empti tupl sz throw new except invalid size sz tupl return sz privat datum bag read bag data input byte type throw except data bag bag bag factori new default bag long size determin size bag switch type case size read unsign byte break case size read unsign short break case size read long break default int err code string msg unexpect datum read bag binari file throw new exec except msg err code except long size tri object read datum bag add tupl catch exec except ee throw ee return bag privat map string object read map data input byte type throw except int size switch type case size read unsign byte break case size read unsign short break case size read int break default int err code string msg unexpect datum read map binari file throw new exec except msg err code except map string object new hash map string object size int size string key string read datum put key read datum return privat intern map read intern map data input throw except int size read int intern map new intern map size int size object key read datum put key read datum return privat writabl compar read writabl data input throw except string class name string read datum creat writeabl class need default constructor class obj class null tri obj class class name class name catch class find except e throw new except could find class class name attempt de serial e writabl compar writabl null tri writabl writabl compar obj class new instanc catch except e string msg could creat instanc class class name attempt de serial default constructor throw new except msg e read field object datum input writabl read field return writabl non javadoc see org apach datum inter sede read datum java io data input overrid public object read datum data input throw except exec except read datum type byte b read byte return read datum b privat static object read byte data input int size throw except byte ba new byte size read fulli ba return new datum byte array ba expect bin inter sede datum type datum type type p see org apach datum inter sede read datum java io data input byte overrid public object read datum data input byte type throw except exec except switch type case case case case case case case case case case case case case return sede helper read gener tupl type case case case return read bag type case case case return read map type case return read intern map case return integ valu case return integ valu case return integ valu read byte case return integ valu read short case return integ valu read int case return long valu case return long valu case return long valu read byte case return long valu read short case return long valu read int case return long valu read long case return new date time read long date time zone offset milli read short case return float valu read float case return doubl valu read doubl case return read big integ case return read big decim case return boolean valu true case return boolean valu fals case return byte valu read byte case case case return new datum byte array sede helper read byte type case case return sede helper read chararray type case return read writabl case case case return read schema tupl type case return null default throw new runtim except unexpect datum type type find stream privat object read big decim data input throw except return new big decim string read datum privat object read big integ data input throw except return new big integ string read datum privat void write big integ data output big integ bi throw except write datum bi string privat void write big decim datum output big decim bd throw except write datum bd string non javadoc see org apach datum inter sede write datum java io data output java lang object overrid public void write datum data output object val throw except read datum type byte type data type find type val write datum val type overrid suppress warn uncheck public void write datum data output object val byte type throw except switch type case data type write tupl tupl val break case data type write bag data bag val break case data type write map map string object val break case data type write byte map object object map object object val write int size iter map entri object object entri set iter next map entri object object entri next write datum entri get key write datum entri get valu break case data type int integ val write byte els write byte els byte byte write byte write byte els short short write byte write short els write byte write int break case data type long lng long val lng write byte els lng write byte els byte lng lng byte write byte write byte int lng els short lng lng short write byte write short int lng els integ lng lng integ write byte write int int lng els write byte write long lng break case data type write byte write long date time val get milli write short date time val get zone get offset date time val break case data type write byte write float float val break case data type write byte write big integ big integ val break case data type write byte write big decim big decim val break case data type write byte write doubl doubl val break case data type boolean val write byte els write byte break case data type write byte write byte byte val break case data type data byte array byte datum byte array val sede helper write byte byte datum break case data type sede helper write chararray string val break case data type write byte store class name know class creat read write datum val get class get name writabl writabl writabl val writabl write break case data type write byte break default throw new runtim except unexpect datum type val get class get name find stream note standard type support output load func privat void write map data output map string object throw except final int sz size sz write byte write byte sz els sz write byte write short sz els write byte write int sz iter map entri string object entri set iter next map entri string object entri next write datum entri get key write datum entri get valu privat void write bag data output datum bag bag throw except n care whether bag sort distinct use iter write guarante thing come correctli end reason wast time sort appli distinct final long sz bag size sz write byte write byte int sz els sz write byte write short int sz els write byte write long sz iter tupl bag iter next write tupl next privat void write tupl data output tupl throw except instanceof type awar tupl write els sede helper write gener tupl non javadoc see org apach datum inter sede add col tupl java io data input org apach datum tupl overrid public void add col tupl data input tupl throw except byte type read byte int sz get tupl size type int sz append read datum public static class bin inter sede tupl raw compar extend writabl compar implement tupl raw compar privat final log log log factori get log get class privat boolean asc privat boolean secondari asc privat static final boolean new boolean privat boolean whole tupl privat boolean secondari sort privat boolean null field privat tupl factori fact privat inter sede sede public bin inter sede tupl raw compar super bin sede tupl class overrid public configur get conf return null overrid public void set conf configur conf tri asc boolean object serial deseri conf get sort order secondari asc boolean object serial deseri conf get secondari sort order secondari sort true catch except ioe log error unabl deseri sort order object ioe get messag throw new runtim except ioe asc null asc new boolean asc true secondari asc null secondari sort fals one entri asc mean whole tupl can not look column whole tupl asc length fact tupl factori get instanc sede inter sede factori get inter sede instanc overrid public boolean compar tupl null return null field compar two bin sede tupl raw byte assum tupl nullabl writabl client class need deal null index overrid public int compar byte b int int l byte b int int l int rc byte buffer bb byte buffer wrap b l byte buffer bb byte buffer wrap b l tri rc compar bin sede tupl bb bb catch except ioe log error error tupl comparison ioe get messag throw new runtim except ioe get messag ioe return rc compar two bin sede tupl raw byte deal sort order method throw except privat int compar bin sede tupl byte buffer bb byte buffer bb throw except null field fals store posit case deseri int bb posit int bb posit treat outermost tupl differ deal sort order int result tri first compar size int tsz read size bb int tsz read size bb tsz tsz return els tsz tsz return els size compar field field secondari sort compound tupl key main key secondari key key sort order deal separ deleg first invoc compar bin inter sede datum assert tsz main key secondari key result compar bin inter sede datum bb bb asc result result compar bin inter sede datum bb bb secondari asc els one tupl key deal sort order int tsz result use distinguish origin call recurs one hack ish result compar bin inter sede datum bb bb flip order descend result whole tupl asc result els whole tupl asc result catch unsupport encod except uee tupl fact new tupl tupl fact new tupl read field new datum input stream new byte array input stream bb array bb limit read field new datum input stream new byte array input stream bb array bb limit deleg compar result compar return result privat int compar bin inter sede datum byte buffer bb byte buffer bb boolean asc throw except int rc byte type type byte dt bb get byte dt bb get switch dt case bin inter sede type datum type type get gener data type dt asc null scan top level tupl origin call null field true type type rc break case bin inter sede case bin inter sede type datum type type get gener data type dt type type fals true int bv dt bin inter sede int bv dt bin inter sede rc bv bv break case bin inter sede type datum type type get gener data type dt type type byte bv bb get byte bv bb get rc bv bv bv bv break case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede type datum type type get gener data type dt type type int iv read int bb dt int iv read int bb dt rc iv iv iv iv break case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede type datum type type get gener data type dt type type long lv read long bb dt long lv read long bb dt rc lv lv lv lv break case bin inter sede type datum type type get gener data type dt type type long lv bb get long bb posit bb posit move cursor forward without read timezon byte long lv bb get long bb posit bb posit rc lv lv lv lv break case bin inter sede type datum type type get gener data type dt type type float fv bb get float float fv bb get float rc float compar fv fv break case bin inter sede type datum type type get gener data type dt type type doubl dv bb get doubl doubl dv bb get doubl rc doubl compar dv dv break case bin inter sede type datum type type get gener data type dt type type int sz read size bb bb get int sz read size bb bb get byte can new byte sz byte can new byte sz bb get can bb get can string str null str null tri str new string can bin inter sede str new string can bin inter sede catch unsupport encod except uee log warn unsupport string encod uee uee print stack trace str null str null rc new big integ str compar new big integ str break case bin inter sede type datum type type get gener data type dt type type int sz read size bb bb get int sz read size bb bb get byte can new byte sz byte can new byte sz bb get can bb get can string str null str null tri str new string can bin inter sede str new string can bin inter sede catch unsupport encod except uee log warn unsupport string encod uee uee print stack trace str null str null rc new big decim str compar new big decim str break case bin inter sede case bin inter sede case bin inter sede type datum type type get gener data type dt type type int basz read size bb dt int basz read size bb dt rc writabl compar compar byte bb array bb posit basz bb array bb posit basz bb posit bb posit basz bb posit bb posit basz break case bin inter sede case bin inter sede type datum type type get gener data type dt type type int casz read size bb dt int casz read size bb dt string str null str null tri str new string bb array bb posit casz bin inter sede str new string bb array bb posit casz bin inter sede catch unsupport encod except uee log warn unsupport string encod uee uee print stack trace final bb posit bb posit casz bb posit bb posit casz str null str null rc str compar str break case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede type datum type type get gener data type dt type type first compar size int tsz read size bb dt int tsz read size bb dt tsz tsz return els tsz tsz return els size compar field field secondari sort use sort order pass caller inner tupl never sort order pass null int tsz rc rc compar bin inter sede datum bb bb null rc asc null asc length asc rc break case bin inter sede case bin inter sede case bin inter sede type datum type type get gener data type dt type type rc compar bin inter sede bag bb bb dt dt break case bin inter sede case bin inter sede case bin inter sede type datum type type get gener data type dt type type rc compar bin inter sede map bb bb dt dt break case bin inter sede type datum type type get gener data type dt type type rc compar bin inter sede gener writabl compar bb bb break default log info unsupport data type binari comparison switch object deseri data type gen type name map get dt dt throw new unsupport encod except compar gener datum type type type rc type type appli sort order key tupl whole tupl asc null asc length asc rc return rc suppress warn rawtyp overrid public int compar writabl compar writabl compar tupl tupl tupl tupl null field fals treat outermost tupl differ deal sort order int result first compar size int tsz size int tsz size tsz tsz return els tsz tsz return els tri size compar field field secondari sort compound tupl key main key secondari key key sort order deal separ deleg first invoc compar datum assert tsz main key secondari key result compar datum get get asc result result compar datum get get secondari asc els one tupl key chanc recurs deleg deal sort order compar datum result compar datum asc catch exec except e throw new runtim except unabl compar tupl e return result privat int compar datum object object boolean asc int rc null null instanceof tupl instanceof tupl object tupl may need appli sort order insid tupl tupl tupl tupl int sz size int sz size sz sz return els sz sz return els int sz tri rc data type compar get get rc asc null asc length asc rc get null record tupl null field null field true rc break catch exec except e throw new runtim except unabl compar tupl e els object tupl deleg data type compar rc data type compar appli sort order key tupl whole tupl asc null asc length asc rc return rc suppress warn uncheck rawtyp privat int compar bin inter sede gener writabl compar byte buffer bb byte buffer bb throw exec except except data input buffer buffer new datum input buffer datum input buffer buffer new datum input buffer buffer reset bb array bb posit bb remain buffer reset bb array bb posit bb remain compar writabl compar sede read datum buffer compar writabl compar sede read datum buffer bb posit buffer get posit bb posit buffer get posit return writabl compar writabl suppress warn uncheck privat int compar bin inter sede bag byte buffer bb byte buffer bb byte dt byte dt throw except int bb posit int bb posit int l bb remain int l bb remain first compar size int bsz read size bb dt int bsz read size bb dt bsz bsz return els bsz bsz return els data input buffer buffer new datum input buffer datum input buffer buffer new datum input buffer buffer reset bb array l buffer reset bb array l datum bag bag datum bag sede read datum buffer dt data bag bag datum bag sede read datum buffer dt bb posit buffer get posit bb posit buffer get posit return bag compar bag suppress warn uncheck privat int compar bin inter sede map byte buffer bb byte buffer bb byte dt byte dt throw exec except except int bb posit int bb posit int l bb remain int l bb remain first compar size int bsz read size bb dt int bsz read size bb dt bsz bsz return els bsz bsz return els data input buffer buffer new datum input buffer datum input buffer buffer new datum input buffer buffer reset bb array l buffer reset bb array l map string object map map string object sede read datum buffer dt map string object map map string object sede read datum buffer dt bb posit buffer get posit bb posit buffer get posit return data type compar map map datum type data type privat static byte get gener data type byte type switch type case bin inter sede return data type case bin inter sede case bin inter sede return data type case bin inter sede return data type case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede return data type case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede return data type case bin inter sede return data type case bin inter sede return data type case bin inter sede return data type case bin inter sede return data type case bin inter sede return data type case bin inter sede case bin inter sede case bin inter sede return data type case bin inter sede case bin inter sede return data type case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede return data type case bin inter sede case bin inter sede case bin inter sede return data type case bin inter sede case bin inter sede case bin inter sede return data type case bin inter sede return data type case bin inter sede return data type default throw new runtim except unexpect datum type type find stream privat static long read long byte buffer bb byte type int byte read switch type case bin inter sede return case bin inter sede return case bin inter sede return bb get case bin inter sede return bb get short case bin inter sede return bb get int case bin inter sede return bb get long default throw new runtim except unexpect datum type type find stream privat static int read int byte buffer bb byte type switch type case bin inter sede return case bin inter sede return case bin inter sede return bb get case bin inter sede return bb get short case bin inter sede return bb get int default throw new runtim except unexpect datum type type find stream param bb byte buffer serial object includ type inform param type serial type inform return size type privat static int read size byte buffer bb return read size bb bb get param bb byte buffer serial object minu type inform param type serial type inform return size type privat static int read size byte buffer bb byte type switch type case bin inter sede case bin inter sede case bin inter sede case bin inter sede return get unsign byte bb case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede return get unsign short bb case bin inter sede case bin inter sede case bin inter sede case bin inter sede case bin inter sede return bb get int case bin inter sede return case bin inter sede return case bin inter sede return case bin inter sede return case bin inter sede return case bin inter sede return case bin inter sede return case bin inter sede return case bin inter sede return case bin inter sede return default throw new runtim except unexpect datum type type find stream format use data input data output unsign short privat static int get unsign short byte buffer bb return bb get xff bb get xff format use data input data output unsign byte privat static int get unsign byte byte buffer bb return bb get xff overrid public class extend tupl raw compar get tupl raw compar class return bin inter sede tupl raw compar class public tupl read tupl data input throw except return read tupl read byte public static boolean tupl byte byte b return b bin inter sede b bin inter sede b bin inter sede b bin inter sede b bin inter sede b bin inter sede b bin inter sede b bin inter sede b bin inter sede b bin inter sede b bin inter sede b bin inter sede b bin inter sede b bin inter sede b bin inter sede b bin inter sede 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java io data input import java io data output import java io except import java util list import org apach classif interfac audienc tupl fast de serial mechan use store intermedi datum map reduc job intern use serial format chang use store persist datum ie load store function interfac audienc privat public class bin sede tupl extend default tupl privat static final long serial version privat static final inter sede sede inter sede factori get inter sede instanc overrid public void write datum output throw except sede write datum data type overrid public void read field data input throw except clear field case reus field clear sede add col tupl default constructor bin sede tupl super construct tupl know number field packag level caller directli invok param size number field alloc tupl bin sede tupl int size super size construct tupl exist list object packag level caller directli invok param c list object turn tupl bin sede tupl list object c super c construct tupl exist list object packag level caller directli invok param c list object turn tupl list keep part tupl param junk use differenti constructor copi list bin sede tupl list object c int junk super c junk public static class extend tupl raw compar get compar class return inter sede factori get inter sede instanc get tupl raw compar class 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java util list import org apach backend executionengin exec except import org apach classif interfac audienc default implement tupl factori interfac audienc privat public class bin sede tupl factori extend tupl factori overrid public tupl new tupl return new bin sede tupl overrid public tupl new tupl int size return new bin sede tupl size overrid suppress warn uncheck public tupl new tupl list c return new bin sede tupl c overrid suppress warn uncheck public tupl new tupl copi list list return new bin sede tupl list overrid public tupl new tupl object datum tupl new bin sede tupl tri set datum catch exec except e world come end alloc tupl one slot can n write slot throw new runtim except unabl write field newli alloc tupl size e return overrid public class extend tupl tupl class return bin sede tupl class overrid public class extend tupl raw compar tupl raw compar class return bin sede tupl get compar class overrid public boolean fix size return fals 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io byte array output stream import java io data output stream import java io except import java math big decim import java math big integ import java util iter import java util map import java util properti import org joda time date time import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f path import org apach hadoop mapreduc input format import org apach hadoop mapreduc job import org apach hadoop mapreduc output format import org apach hadoop mapreduc record reader import org apach hadoop mapreduc record writer import org apach hadoop mapreduc lib input file input format import org apach hadoop mapreduc lib output file output format import org apach express import org apach file input load func import org apach load caster import org apach load func import org apach load metadata import org apach except import org apach resourc schema import org apach resourc schema resourc field schema import org apach resourc statist import org apach store func import org apach store func interfac import org apach backend executionengin exec except import org apach backend hadoop datastorag configur util import org apach backend hadoop datastorag data storag import org apach backend hadoop executionengin map reduc layer split import org apach datum datum bag import org apach data data reader writer import org apach datum tupl import org apach impl io bin storag input format import org apach impl io bin storag output format import org apach impl io bin storag record reader import org apach impl io bin storag record writer import org apach impl io file local import org apach impl logic layer frontend except import org apach impl util util load store datum binari format class use move data map reduc job use function store user datum support public class bin storag extend file input load func implement store func interfac load metadata static class un implement load caster implement load caster privat static final string un implement error messag cast byte load bin storag pleas provid custom convert overrid public datum bag byte bag byte b resourc field schema field schema throw except throw new exec except un implement error messag overrid public string byte char array byte b throw except throw new exec except un implement error messag overrid public doubl byte doubl byte b throw except throw new exec except un implement error messag overrid public float byte float byte b throw except throw new exec except un implement error messag overrid public integ byte integ byte b throw except throw new exec except un implement error messag overrid public long byte long byte b throw except throw new exec except un implement error messag overrid public boolean byte boolean byte b throw except throw new exec except un implement error messag overrid public date time byte date time byte b throw except throw new exec except un implement error messag overrid public map string object byte map byte b resourc field schema field schema throw except throw new exec except un implement error messag overrid public tupl byte tupl byte b resourc field schema field schema throw except throw new exec except un implement error messag overrid public big integ byte big integ byte b throw except throw new exec except un implement error messag overrid public big decim byte big decim byte b throw except throw new exec except un implement error messag iter tupl null privat static final log log log factori get log bin storag class protect long end long privat string caster string null privat load caster caster null privat bin storag record reader rec reader null privat bin storag record writer rec writer null public bin storag user know cast byte bin storag provid class name caster later want convert byte type bin storag know provid way user store intermedi datum without explicitli list field figur part public bin storag string caster string caster string caster string overrid public tupl get next throw except rec reader next key valu return rec reader get current valu els return null overrid public void put next tupl throw except tri rec writer write null catch interrupt except e throw new except e public byte byte data bag bag throw except byte array output stream bao new byte array output stream data output stream do new datum output stream bao tri data reader writer write datum do bag catch except ee int err code string msg error convert bag byte throw new exec except msg err code except ee return bao byte array public byte byte string throw except byte array output stream bao new byte array output stream data output stream do new datum output stream bao tri data reader writer write datum do catch except ee int err code string msg error convert chararray byte throw new exec except msg err code except ee return bao byte array public byte byte doubl throw except byte array output stream bao new byte array output stream data output stream do new datum output stream bao tri data reader writer write datum do catch except ee int err code string msg error convert doubl byte throw new exec except msg err code except ee return bao byte array public byte byte float f throw except byte array output stream bao new byte array output stream data output stream do new datum output stream bao tri data reader writer write datum do f catch except ee int err code string msg error convert float byte throw new exec except msg err code except ee return bao byte array public byte byte integ throw except byte array output stream bao new byte array output stream data output stream do new datum output stream bao tri data reader writer write datum do catch except ee int err code string msg error convert int byte throw new exec except msg err code except ee return bao byte array public byte byte long l throw except byte array output stream bao new byte array output stream data output stream do new datum output stream bao tri data reader writer write datum do l catch except ee int err code string msg error convert long byte throw new exec except msg err code except ee return bao byte array public byte byte boolean b throw except byte array output stream bao new byte array output stream data output stream do new datum output stream bao tri data reader writer write datum do b catch except ee int err code string msg error convert boolean byte throw new exec except msg err code except ee return bao byte array public byte byte date time dt throw except byte array output stream bao new byte array output stream data output stream do new datum output stream bao tri data reader writer write datum do dt catch except ee int err code string msg error convert datetim byte throw new exec except msg err code except ee return bao byte array public byte byte map string object throw except byte array output stream bao new byte array output stream data output stream do new datum output stream bao tri data reader writer write datum do catch except ee int err code string msg error convert map byte throw new exec except msg err code except ee return bao byte array public byte byte tupl throw except byte array output stream bao new byte array output stream data output stream do new datum output stream bao tri data reader writer write datum do catch except ee int err code string msg error convert tupl byte throw new exec except msg err code except ee return bao byte array overrid public input format get input format return new bin storag input format overrid public int hash code return suppress warn uncheck overrid public load caster get load caster throw except caster null class load caster caster class null caster string null class loader cl thread current thread get context class loader tri tri caster string fulli qualifi name caster class class load caster cl load class caster string catch class find except e caster class null tri tri caster string builtin caster class class load caster cl load class org apach builtin caster string catch class find except e throw new frontend except find load caster class caster string e tri caster caster class new instanc catch except e throw new frontend except instanti class caster string e els caster new un implement load caster return caster overrid public void prepar read record reader reader split split rec reader bin storag record reader reader overrid public void set locat string locat job job throw except file input format set input path job locat overrid public output format get output format return new bin storag output format overrid public void prepar write record writer writer rec writer bin storag record writer writer overrid public void set store locat string locat job job throw except file output format set output path job new path locat overrid public void check schema resourc schema throw except overrid public string rel ab path store locat string locat path cur dir throw except return load func get absolut path locat cur dir overrid public string get partit key string locat job job throw except return null suppress warn deprec overrid public resourc schema get schema string locat job job throw except configur conf job get configur properti prop configur util properti conf compil time batch mode file may exist intermedi file return null way would get valid record string locat get path string locat string loc locat sinc local mode implement hadoop local mode treat either local hadoop mode hadoop mode henc use data storag file local open file data storag storag tri storag new data storag new org apach hadoop f path loc uri prop catch runtim except e throw new except e file local file exist loc storag return null return util get schema locat fals job overrid public resourc statist get statist string locat job job throw except return null overrid public void set partit filter express plan throw except throw new unsupport oper except overrid public void set store func context signatur string signatur overrid public void cleanup failur string locat job job throw except store func cleanup failur impl locat job overrid public void cleanup success string locat job job throw except noth 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach valid import java util set import org apach configur import org apach server import org apach impl context import org apach impl logic layer frontend except import com googl common base splitter import com googl common collect set filter handl black whitelist command public final class black whitelist filter implement command filter privat static final int privat static final splitter splitter trim result omit empti string privat final context context privat final set string whitelist privat final set string blacklist public black whitelist filter server server server get context public black whitelist filter context context context context whitelist set new hash set blacklist set new hash set init privat void init string whitelist config context get properti get properti configur whitelist config null iter string iter split whitelist config string elem iter whitelist add elem upper case string blacklist config context get properti get properti configur blacklist config null iter string iter split blacklist config string elem iter string u elem elem upper case whitelist contain u elem throw new illeg state except conflict whitelist blacklist elem appear blacklist add u elem overrid public void valid command command throw frontend except blacklist contain command name throw new frontend except command name command permit check size whitelist empti whitelist disallow use command altogeth whitelist size whitelist contain command name throw new frontend except command name command permit 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach valid import java util set import org apach configur import org apach impl context import org apach impl logic layer frontend except import org apach newplan depth first walker import org apach newplan oper plan import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat cube import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat nativ import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat split output import org apach newplan logic relat store import org apach newplan logic relat stream import org apach newplan logic relat union import org apach newplan logic relat logic relat node visitor import org apach newplan logic rule logic relat node valid import com googl common base splitter import com googl common collect set valid walk list oper defin link configur link configur check whether oper permit case properti defin default let everyth pass usual public final class black whitelist valid implement logic relat node valid privat final context context privat final oper plan oper plan public black whitelist valid context context oper plan oper plan context context oper plan oper plan public void valid throw frontend except black whitelist visitor visitor new black whitelist visitor oper plan visitor visit privat class black whitelist visitor extend logic relat node visitor privat static final int privat final splitter splitter privat final set string blacklist privat final set string whitelist protect black whitelist visitor oper plan plan throw frontend except super plan new depth first walker plan blacklist set new hash set whitelist set new hash set splitter splitter trim result omit empti string init privat void init string blacklist config context get properti get properti configur set blacklist defin user blacklist config null iter string iter splitter split blacklist config string elem iter blacklist add elem lower case string whitelist config context get properti get properti configur set whitelist defin user whitelist config null iter string iter splitter split whitelist config string elem iter string l elem elem lower case blacklist contain l elem throw new illeg state except conflict whitelist blacklist elem appear whitelist add l elem privat void check string oper throw frontend except throw except oper defin whitelist whitelist null whitelist size whitelist contain oper throw new frontend except oper disabl throw except oper defin blacklist blacklist null blacklist size blacklist contain oper throw new frontend except oper disabl overrid public void visit load load throw frontend except check load overrid public void visit filter filter throw frontend except check filter overrid public void visit store store throw frontend except check store overrid public void visit join join throw frontend except check join overrid public void visit foreach throw frontend except check foreach overrid public void visit gener gen throw frontend except public void visit inner load load throw frontend except overrid public void visit cube cube throw frontend except check cube public void visit cogroup lo cogroup throw frontend except check group check cogroup overrid public void visit split lo split throw frontend except check split overrid public void visit split output lo split output throw frontend except overrid public void visit union lo union throw frontend except check union overrid public void visit sort lo sort throw frontend except check order overrid public void visit rank lo rank throw frontend except check rank overrid public void visit distinct lo distinct throw frontend except check distinct overrid public void visit limit lo limit throw frontend except check limit overrid public void visit cross lo cross throw frontend except check cross overrid public void visit stream lo stream throw frontend except check stream overrid public void visit nativ nativ throw frontend except check mapreduc 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io byte array input stream import java io data input stream import java io file import java io file input stream import java io filenam filter import java io except import java util array list import java util list import org apach hadoop f path import org apach hadoop util bloom bloom filter import org apach hadoop util bloom key import org apach filter func import org apach data data byte array import org apach datum data type import org apach datum tupl import org apach datum tupl factori use bloom filter build previous build bloom would first build bloom filter group job exampl group job exampl defin bb build bloom jenkin load foo x group foreach gener bb x store mybloom bloom filter multipl key pass one field entir bag build bloom result file use bloom filter defin bloom bloom mybloom load foo x load bar z filter bloom z join z x use link org apach hadoop util bloom bloom filter also pass bloom filter build bloom directli bloom scalar instead store file load simpl bloom filter reus need discard run script defin bb build bloom jenkin load foo x group foreach gener bb x bloomfilt load bar z filter bloom bloomfilt z join z x public class bloom extend filter func privat static tupl factori tupl factori tupl factori get instanc privat string bloom file privat bloom filter filter null public bloom filenam contain serial bloom filter filenam null arg constructor use bloomfilt bytearray output build bloom pass first argument param filenam file contain serial bloom filter public bloom string filenam bloom file filenam overrid public boolean exec tupl input throw except filter null init input byte b bloom file null first one bloom filter skip input size b data type byte input get els list object input list input get tupl tupl tupl factori new tupl copi input list sub list input list size b data type byte tupl data type els input size b data type byte input get els b data type byte input data type key k new key b return filter membership test k overrid public list string get cach file bloom file null list string list new array list string pass name file append name file task node tri list add bloom file get filenam path bloom file catch except e throw new runtim except e return list return null privat void init tupl input throw except bloom file null input get instanceof datum byte array filter build bloom base bloom datum byte array input get els throw new illeg argument except first argument bloom bloom filter bloom file specifi constructor els filter new bloom filter string dir get filenam path bloom file string part file new file dir list new filenam filter overrid public boolean accept file current string name return name start part string dc file dir part file data input stream di new datum input stream new file input stream dc file tri filter read field di final di close test use directli public void set filter data byte array dba throw except data input stream di new datum input stream new byte array input stream dba get filter new bloom filter filter read field di privat string get filenam path string p throw except path path new path p return path uri get path replac 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util iter import org apach hadoop util bloom bloom filter import org apach hadoop util bloom key import org apach algebra import org apach eval func import org apach datum datum bag import org apach data data byte array import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl logic layer schema schema build bloom filter use later bloom intend run group job exampl defin bb build bloom jenkin load foo x group foreach gener bb x store mybloom bloom filter multipl key pass one field entir bag build bloom result file use bloom filter defin bloom bloom mybloom load foo x load bar z filter bloom z join z x use link org apach hadoop util bloom bloom filter public class build bloom extend build bloom base data byte array implement algebra build bloom filter fix size number hash function param hash type type hash function see link org apach hadoop util hash hash param mode ignor though convent fix fixeds param vector size vector size filter param nb hash number hash function consid public build bloom string hash type string mode string vector size string nb hash super hash type mode vector size nb hash construct bloom filter base expect number element desir accuraci param hash type type hash function see link org apach hadoop util hash hash param num element number distinct element expect place filter param desir fals posit accept rate fals posit float point valu would ie total useless filter public build bloom string hash type string num element string desir fals posit super hash type num element desir fals posit overrid public datum byte array exec tupl input throw except throw new except must use algebra public string get initi return initi class get name public string get interm return intermedi class get name public string get final return final class get name static public class initi extend build bloom base tupl public initi public initi string hash type string mode string vector size string nb hash super hash type mode vector size nb hash public initi string hash type string num element string desir fals posit super hash type num element desir fals posit overrid public tupl exec tupl input throw except input null input size return null strip initi level bag datum bag valu datum bag input get iter tupl valu iter tupl next input tupl one field extract field serial key multipl field serial whole tupl byte b size b data type byte get els b data type byte data type key k new key b filter new bloom filter v size num hash h type filter add k return tupl factori get instanc new tupl bloom static public class intermedi extend build bloom base tupl public intermedi public intermedi string hash type string mode string vector size string nb hash super hash type mode vector size nb hash public intermedi string hash type string num element string desir fals posit super hash type num element desir fals posit overrid public tupl exec tupl input throw except return tupl factori get instanc new tupl bloom input static public class final extend build bloom base data byte array public final public final string hash type string mode string vector size string nb hash super hash type mode vector size nb hash public final string hash type string num element string desir fals posit super hash type num element desir fals posit overrid public datum byte array exec tupl input throw except return bloom input overrid public schema output schema schema input return new schema new schema field schema null datum type 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io byte array input stream import java io byte array output stream import java io data input stream import java io data output stream import java io except import java util iter import org apach hadoop util bloom bloom filter import org apach hadoop util hash hash import org apach eval func import org apach backend executionengin exec except import org apach datum datum bag import org apach data data byte array import org apach datum tupl base class build bloom algebra implement public abstract class build bloom base extend eval func protect int v size protect int num hash protect int h type protect bloom filter filter protect build bloom base param hash type type hash function see link org apach hadoop util hash hash param mode ignor though convent fix fixeds param vector size vector size filter param nb hash number hash function consid public build bloom base string hash type string mode string vector size string nb hash v size integ valu vector size num hash integ valu nb hash h type convert hash type hash type param hash type type hash function see link org apach hadoop util hash hash param num element number distinct element expect place filter param desir fals posit accept rate fals posit float point valu would ie total useless filter public build bloom base string hash type string num element string desir fals posit set size num element desir fals posit h type convert hash type hash type protect datum byte array bloom tupl input throw except filter new bloom filter v size num hash h type tri datum bag valu datum bag input get iter tupl valu iter next tupl next filter bloom datum byte array get catch exec except ee throw new except ee return bloom protect datum byte array bloom throw except byte array output stream bao new byte array output stream v size data output stream do new datum output stream bao filter write do return new datum byte array bao byte array public static bloom filter bloom datum byte array b throw except data input stream di new datum input stream new byte array input stream b get bloom filter f new bloom filter f read field di return f privat int convert hash type string hash type hash type lower case contain jenkin return hash els hash type lower case contain murmur return hash els throw new runtim except unknown hash type hash type valid valu jenkin murmur privat void set size string num element string desir fals posit int num integ valu num element float fp float valu desir fals posit num fp fp throw new runtim except number element must great zero desir fals posit must have size int num math log fp math pow math log log info build bloom set vector size v size num hash int v size num log info build bloom set number hash num hash 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach func spec import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat public class cast express extend unari express privat func spec cast func privat logic schema logic field schema cast schema public cast express oper plan plan logic express exp logic schema logic field schema f super cast plan exp cast schema fs deep copi cast schema reset uid overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit set code func spec code perform cast function param spec code func spec code cast public void set func spec func spec spec cast func spec get code func spec code perform cast function return code func spec code cast public func spec get func spec return cast func overrid public boolean equal oper throw frontend except null instanceof cast express cast express cast express return get express equal get express els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null cast schema schema cast schema type uid field schema field schema merg uid uid field schema bring back top level uid chang logic express exp logic express plan get successor get exp get field schema null field schema uid exp get field schema uid field schema alia exp get field schema alia return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new cast express lg exp plan get express deep copi lg exp plan cast schema deep copi tri func spec orig func spec get func spec orig func spec null cast express copi set func spec orig func spec clone catch clone support except e e print stack trace copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl util import java io except import org apach common log log import org apach common log log factori import org apach load caster import org apach warn import org apach resourc schema resourc field schema import org apach data data byte array import org apach datum data type public class cast util privat static integ max int integ valu integ privat static long max long long valu long protect static final log log log factori get log cast util class param caster load caster use convert byte field param byte param field schema schema bag tupl pass null simpl type param datum type type data type return convert object throw except public static object convert type load caster caster byte byte resourc field schema field schema byte datum type throw except switch data type case data type return caster byte bag byte field schema case data type return new datum byte array byte case data type return caster byte char array byte case data type return caster byte doubl byte case data type return caster byte float byte case data type return caster byte integ byte case data type return caster byte big integ byte case data type return caster byte big decim byte case data type return caster byte long byte case data type return caster byte boolean byte case data type return caster byte date time byte case data type return caster byte map byte field schema case data type return caster byte tupl byte field schema default throw new except unknown type data type public static doubl string doubl string str str null return null els tri return doubl pars doubl str catch number format except e log util warn cast util class unabl interpret valu str field convert doubl catch number format except e get messag field discard warn log return null public static float string float string str str null return null els tri return float pars float str catch number format except e log util warn cast util class unabl interpret valu str field convert float catch number format except e get messag field discard warn log return null public static integ string integ string str str null return null els tri return integ pars int str catch number format except e possibl field interpret doubl unfortun java n handl integ valu need tri convert doubl work go int tri doubl doubl valu str need check overflow error doubl valu max int doubl valu log util warn cast util class valu larg integ warn log return null return integ valu int valu catch number format except nfe log util warn cast util class unabl interpret valu str field convert int catch number format except e get messag field discard warn log return null public static long string long string str str null return null els tri return long pars long str catch number format except e possibl field interpret doubl unfortun java n handl long valu need tri convert doubl work go long tri doubl doubl valu str need check overflow error doubl valu max long doubl valu log util warn cast util class valu larg long warn log return null return long valu long valu catch number format except nfe log util warn cast util class unabl interpret valu str field convert long catch number format except nfe get messag field discard warn log return null public static boolean string boolean string str str null return null els str equal ignor case true return boolean els str equal ignor case fals return boolean els return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop accumulo import com googl common base precondit extract necessari inform user provid column specif colf colq remov trail asterisk colfam colqual appropri set link column type public class column public static enum type privat final type column type privat string column famili privat string column qualifi public column string col precondit check null col int index col index abstract accumulo storag index column famili col column qualifi null column famili end abstract accumulo storag column famili column famili substr column famili length column type type els column type type els col length throw new illeg argument except pars col column famili col substr index column qualifi col substr index handl colf colq column famili end abstract accumulo storag column type type column famili column famili substr column famili length els column qualifi empti column type type els column qualifi end abstract accumulo storag column type type column qualifi column qualifi substr column qualifi length els column type type public type get type return column type public string get column famili return column famili public string get column qualifi return column qualifi public boolean match return type equal column type equal column famili overrid public boolean equal object instanceof column column column null column famili null column famili return fals els column famili equal column famili return fals null column qualifi null column qualifi return fals els column qualifi equal column qualifi return fals return column type column type return fals overrid public string string return column type column famili column qualifi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic visitor import java util array list import java util list import org apach datum data type import org apach impl logic layer frontend except import org apach impl plan plan valid except import org apach newplan depend order walker import org apach newplan oper plan import org apach newplan logic express derefer express import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic express logic express visitor import org apach newplan logic express project express import org apach newplan logic optim express visitor import org apach newplan logic relat logic schema logic plan visitor convert column alia refer column index use underli anonym express plan visitor public class column alia convers visitor extend express visitor public column alia convers visitor oper plan plan throw frontend except super plan new depend order walker plan overrid protect logic express visitor get visitor logic express plan expr plan throw frontend except return new logic express visitor expr plan new depend order walker expr plan overrid public void visit project express expr throw frontend except expr set column number alia public void visit derefer express expr throw frontend except list object raw col expr get raw column raw col empti return list integ col new array list integ raw col size logic express plan plan logic express plan expr get plan logic express pred logic express plan get successor expr get logic schema schema null pred get field schema type data type pred get field schema schema null schema pred get field schema schema get field schema schema null schema size schema get field type data type schema schema get field schema els schema pred get field schema schema int col object rc raw col rc instanceof integ col integ rc schema null schema size col schema size throw new plan valid except expr bind access tri access non exist column col schema schema string fals schema size column col add integ rc els col schema null schema get field posit string rc col throw new plan valid except expr invalid field refer refer field rc exist schema schema null schema string fals col add col expr set bag column col 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java util array list import java util list import org apach backend hadoop executionengin physic layer express oper project repres one sort key sort key may compound sort multipl column case sort key contain multipl column chain info public class column chain info implement cloneabl privat list column info column info new array list column info public boolean equal object instanceof column chain info return fals column chain info c column chain info column info size c column info size return fals int column info size column info get equal c column info get return fals return true public void insert list integ column byte type column info new column info new column info column type column info add new column info insert new column info project star project rang end param start col param type public void insert int start col byte type column info new column info new column info start col type column info add new column info reduc input repres first input put instead match sort inform collect local rearrang public void insert reduc project project size int col project project end project get column size expect first project project one bag get unexpect set column secondari sort optim get use col return els col project get column get list integ new column new array list integ new column add col column info new column info new column info new column project get result type column info add new column info els project project end insert project get start col project get result type els insert project get column project get result type public void insert column chain info column chain info column chain info column info add column chain info column info public list column info get column info return column info public string string return column info string overrid public object clone throw clone support except super clone column chain info result new column chain info column info column info column info column info new column info column info column info clone result column info add new column info return result public int size return column info size public column info get column info int return column info get overrid public int hash code int result column info column info column info result column info hash code return result 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java util array list import java util list import org apach datum data type repres one column insid order key direct map project public class column info implement cloneabl list integ column byte result type int start col boolean rang project fals public column info list integ column byte type column column result type type constructor rang project project star param start col param type public column info int start col byte type start col start col result type type rang project true public byte get result type return result type public int get start col return start col public boolean rang project return rang project public list integ get column return column overrid public string string string result star result result column string result data type find type name result type return result privat boolean star return rang project start col overrid public boolean equal object null instanceof column info return fals column info c column info rang project c rang project start col c start col column null c column null column null column equal c column return true return fals overrid public int hash code return string hash code overrid public object clone throw clone support except column info new col info column info super clone copi mutabl field list integ col new array list integ col add column new col info column col return new col info 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic rule import java util collect import java util hash set import java util iter import java util list import java util map import java util set import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan oper sub plan import org apach newplan revers depend order walker import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic express project express import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat split output import org apach newplan logic relat store import org apach newplan logic relat stream import org apach newplan logic relat union import org apach newplan logic relat logic relat node visitor import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema import org apach newplan logic relat schema defin except helper class use column map key prune figur column prune n make chang oper plan public class column prune helper protect static final string column prune input uid public static final string column prune output uid protect static final string column prune requir column privat oper plan current plan privat oper sub plan sub plan public column prune helper oper plan current plan current plan current plan privat oper sub plan get sub plan throw frontend except oper sub plan p null current plan instanceof oper sub plan p new oper sub plan oper sub plan current plan get base plan els p new oper sub plan current plan iter oper iter current plan get oper iter next oper op iter next op instanceof add oper op p return p privat void add oper oper op oper sub plan subplan throw frontend except op null return subplan add op list oper current plan get predecessor op null return oper pred add oper pred subplan suppress warn uncheck public boolean check throw frontend except list oper sourc current plan get sourc rule run return fals sourc size sourc get get annot null clear annot return fals creat sub plan end foreach sub plan get sub plan sub plan size clear annot return fals column depend visitor v new column depend visitor current plan tri v visit catch schema defin except e oper unknown schema return fals clear annot return fals list oper sub plan get sourc boolean find fals oper op op instanceof load set long uid set long op get annot logic schema load op get schema set integ requir get column uid requir size size op annot requir find true find clear annot return find privat void clear annot iter oper iter current plan get oper iter next oper op iter next op remov annot op remov annot op remov annot get set column index set uid protect set integ get column logic schema schema set long uid throw frontend except schema null throw new schema defin except schema defin set integ col new hash set integ iter long iter uid iter iter next long uid iter next int index schema find field uid index throw new frontend except uid find schema schema col add index return col public oper plan report chang return sub plan visitor calcul input output uid oper n chang plan put calcul info annot input output uid necessarili top level uid schema may uid low level field complex field schema static privat class column depend visitor extend logic relat node visitor public column depend visitor oper plan plan throw frontend except super plan new revers depend order walker plan overrid public void visit load load throw frontend except set long output set output uid load load input uid output uid load annot output overrid public void visit filter filter throw frontend except set long output set output uid filter input uid contain output uid project filter condit set long input new hash set long output logic express plan exp filter get filter plan collect uid filter exp input filter annot input overrid public void visit store store throw frontend except set long output set output uid store output empti deal load store load store case logic schema store get schema null throw new schema defin except schema store get name defin int size output add get field uid store input uid output uid store annot output overrid public void visit join join throw frontend except set long output set output uid join input uid contain output uid project join express set long input new hash set long output collect logic express plan exp join get express plan valu iter logic express plan iter exp iter iter next logic express plan exp iter next collect uid join exp input join annot input overrid public void visit cogroup cg throw frontend except set long output set output uid cg input uid contain output uid project join express set long input new hash set long add uid requir cogroup key cogroup do logic express plan plan cg get express plan valu collect uid cg plan input check case output uid gener one case need add uid gener input long first uid map integ long gener input uid cg get gener input uid map entri integ long entri gener input uid entri set long uid entri get valu logic relat oper pred logic relat oper cg get plan get predecessor cg get entri get key output contain uid henc need full schema bag input add get uid pred get schema pred get schema null first uid pred get schema get field uid input empti first uid input add first uid cg annot input overrid public void visit limit limit throw frontend except set long output set output uid limit input uid contain output uid project limit express set long input new hash set long output logic express plan exp limit get limit plan exp null collect uid limit exp input limit annot input overrid public void visit stream stream throw frontend except output use set output uid use check output schema set long output set output uid stream everi field requir logic relat oper pred logic relat oper plan get predecessor stream get set long input get uid pred get schema stream annot input overrid public void visit distinct distinct throw frontend except set output uid distinct set long input new hash set long everi field requir logic schema distinct get schema null throw new schema defin except schema distinct get name defin int size input add get field uid distinct annot input overrid public void visit cross cross throw frontend except set long output set output uid cross sinc chang topolog plan keep least one input predecessor list oper pred plan get predecessor cross oper pred pred logic schema schema logic relat oper pred get schema set long uid get uid schema boolean prune true long uid uid output contain uid prune fals prune output add schema get field uid cross annot output overrid public void visit union union throw frontend except set long output set output uid union set long input new hash set long long uid output input add union get input uid uid union annot input overrid public void visit split split throw frontend except set long output set output uid split split annot output overrid public void visit split output split output throw frontend except set long output set output uid split output input uid contain output uid project split output condit set long input new hash set long long uid output input add split output get input uid uid logic express plan exp split output get filter plan collect uid split output exp input split output annot input overrid public void visit sort sort throw frontend except set long output set output uid sort set long input new hash set long output logic express plan exp sort get sort col plan collect uid sort exp input sort annot input overrid public void visit rank rank throw frontend except set long output set output uid rank set long input new hash set long output logic express plan exp rank get rank col plan collect uid rank exp input rank annot input function return uid present give schema privat set long get uid logic schema schema set long uid new hash set long schema null return uid logic field schema field schema get field field type data type field type data type field schema null uid add get uid field schema uid add field uid return uid suppress warn uncheck overrid public void visit foreach throw frontend except set long output set output uid foreach gener gen optim util find gener foreach gen annot output visit gen set long input set long gen get annot make sure least one column retain input empti logic relat oper pred logic relat oper plan get predecessor foreach get pred get schema null input add pred get schema get field uid foreach annot input overrid suppress warn uncheck public void visit gener gen throw frontend except set long output set long gen get annot set long input new hash set long list logic express plan gen get output plan iter long iter output iter iter next long uid iter next int size logic express plan exp get boolean find fals logic schema plan schema gen get output plan schema get logic field schema fs plan schema get field fs uid uid find true break find list oper src exp get sink oper src src src instanceof project express list inner load inner load find reacheabl inner load boundari project project express src first inner load inner load inner load project express prj inner load get project prj project star prj find refer get schema null logic schema logic field schema f prj find refer get schema get field input add fs uid els prj find refer get schema null logic schema logic field schema f prj find refer get schema get field prj get col num input add f uid flatten bag need make sure least one field input int size gen get flatten flag continu logic express plan exp get logic express sink logic express exp get sourc get sink get field schema type data type sink get field schema type data type continu list oper src exp get sink oper src src src instanceof project express continu list inner load inner load find reacheabl inner load boundari project project express src first inner load inner load inner load project express prj inner load get project prj project star prj find refer get schema null logic schema logic field schema f prj find refer get schema get field input add fs uid els prj find refer get schema null logic schema logic field schema f prj find refer get schema get field prj get col num input add fs uid gen annot input overrid public void visit inner load load throw frontend except set long output set output uid load load annot output privat void collect uid logic relat oper current op logic express plan exp set long uid throw frontend except list oper exp get sink oper op op instanceof project express project express op rang star project long uid project express op get field schema uid uid add uid els logic relat oper ref project express op find refer logic schema ref get schema null throw new schema defin except schema defin ref get alia logic field schema f get field uid add f uid suppress warn uncheck get output uid output schema output schema exist throw except privat set long set output uid logic relat oper op throw frontend except list oper plan get successor op set long uid new hash set long logic schema op get schema null throw new schema defin except schema op get name defin null sink output uid union input uid successor oper succ set long input uid set long succ get annot input uid null iter long iter input uid iter iter next long uid iter next find field uid uid add uid els leaf set schema int size uid add get field uid op annot uid return uid 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic rule import java util array list import java util hash map import java util hash set import java util list import java util map import java util set import org apach common log log import org apach common log log factori import org apach load func import org apach load push import org apach load push requir field import org apach load push requir field list import org apach datum data type import org apach impl logic layer frontend except import org apach impl util pair import org apach newplan oper import org apach newplan oper plan import org apach newplan revers depend order walker import org apach newplan logic util import org apach newplan logic express logic express plan import org apach newplan logic express project express import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat split output import org apach newplan logic relat store import org apach newplan logic relat union import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat node visitor import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema public class column prune visitor extend logic relat node visitor protect static final log log log factori get log column prune visitor class privat map load pair map integ set string set integ requir item new hash map load pair map integ set string set integ privat boolean column prune public column prune visitor oper plan plan map load pair map integ set string set integ requir item boolean column prune throw frontend except super plan new revers depend order walker plan column prune column prune requir item requir item public void add requir item load load pair map integ set string set integ requir item requir item put load requir item overrid public void visit load load throw frontend except requir item contain key load return pair map integ set string set integ requir requir item get load requir field list requir field new requir field list logic schema load get schema int size requir field requir field null do process ahead assum column present column pruner map pruner requir first null requir first contain key requir field new requir field requir field set index requir field set alia get field alia requir field set type get field type list requir field sub field new array list requir field string key requir first get requir field sub field new requir field key null data type sub field add sub field requir field set sub field sub field requir field add requir field requir second null requir second contain requir field new requir field requir field set index requir field set alia get field alia requir field set type get field type requir field add requir field boolean column requir new boolean size requir field rf requir field get field column requir rf get index true list pair integ integ prune list new array list pair integ integ int column requir length column requir prune list add new pair integ integ string buffer messag new string buffer prune list size messag append column prune load get alia int prune list size messag append prune list get second prune list size messag append log info messag messag new string buffer requir field rf requir field get field list requir field sub rf get sub field sub null messag append map key requir load get alia rf get index sub n messag length log info messag load push requir field respons respons null tri load func load func load get load func load func instanceof load push respons load push load func push project requir field catch frontend except e log warn push project load throw except skip loader support column prune insert foreach column prune respons null respons get requir field respons logic plan p logic plan load get plan oper next p get successor load get alreadi load n need add anoth next instanceof return foreach new load get plan add foreach base plan p add foreach p insert load foreach next logic plan inner plan new logic plan foreach set inner plan inner plan build foreach inner plan list logic express plan exp new array list logic express plan gener gen new gener inner plan exp new boolean requir field get field size inner plan add gen int requir field get field size load push requir field rf requir field get field get inner load inner load new inner load inner plan foreach rf get index inner plan add inner load inner plan connect inner load gen logic express plan exp new logic express plan project express prj new project express exp gen exp add prj exp add exp els column prune reset schema loader list integ requir index new array list integ list load push requir field field list requir field get field int field list size requir index add field list get get index load set requir field requir index logic schema new schema new logic schema int field list size new schema add field get field field list get get index load set schema new schema overrid public void visit filter filter throw frontend except overrid public void visit limit limit throw frontend except overrid public void visit split output split output throw frontend except suppress warn uncheck overrid public void visit split split throw frontend except list oper branch output split get plan get successor split int branch output size oper branch output branch output get set long branch output uid set long branch output get annot column prune helper branch output uid null set integ column drop new hash set integ int j j split get schema size j branch output uid contain split get schema get field j uid column drop add j column drop empti foreach util add logic plan split get plan split column drop foreach get schema overrid public void visit sort sort throw frontend except overrid public void visit rank rank throw frontend except overrid public void visit store store throw frontend except overrid public void visit cogroup cg throw frontend except logic plan p logic plan cg get plan list oper successor p get successor cg alreadi oper skip add anoth foreach sinc conflict accumul optim util add accumul successor size successor get instanceof return add necessari cg overrid public void visit join join throw frontend except overrid public void visit cross cross throw frontend except overrid suppress warn uncheck public void visit foreach throw frontend except column prune return get column number input uid set long input uid set long foreach get annot column prune helper get top level project logic plan inner plan foreach get inner plan list inner load inner load new array list inner load list oper sourc inner plan get sourc oper sourc instanceof inner load inner load add inner load project inner load remov inner load set inner load inner load remov new hash set inner load inner load inner load inner load project express project inner load get project project project star logic schema logic field schema tupl project get field schema check first compon star project long uid tupl schema get field uid input uid contain uid inner load remov add inner load els input uid contain project get field schema uid inner load remov add inner load find logic oper immedi preced gener remov whole branch set logic relat oper branch head remov new hash set logic relat oper inner load inner load inner load remov oper op inner load inner plan get successor op get instanceof gener op inner plan get successor op get branch head remov add logic relat oper op find express plan remov gener gen gener inner plan get sink get list logic express plan gen plan remov new array list logic express plan list logic express plan gen plan gen get output plan int gen plan size logic express plan exp plan gen plan get list oper exp sourc exp plan get sink oper exp src exp sourc exp src instanceof project express logic relat oper refer project express exp src find refer branch head remov contain refer gen plan remov add exp plan build temporari structur base gen plan remov includ flatten list output plan schema uid schema input remov first construct input need input remov input input need figur input remov directli sinc input may use output plan get input remov visit output plan list boolean flatten list new array list boolean set integ input need new hash set integ set integ input remov new hash set integ list logic schema output plan schema new array list logic schema list logic schema uid schema new array list logic schema list logic schema user defin schema null gen get user defin schema null user defin schema new array list logic schema int gen plan size logic express plan gen plan gen plan get gen plan remov contain gen plan flatten list add gen get flatten flag output plan schema add gen get output plan schema get uid schema add gen get uid schema get gen get user defin schema null user defin schema add gen get user defin schema get list oper sink gen plan get sink oper sink instanceof project express input need add project express get input num list oper pred inner plan get predecessor gen pred null otherwis gen plan base constant need adjust int pred size input need contain input remov add chang gener remov unneed output express plan chang flatten flag output plan schema uid schema boolean flatten new boolean flatten list size int flatten list size flatten flatten list get gen set flatten flag flatten gen set output plan schema output plan schema gen set uid schema uid schema gen set user defin schema user defin schema logic express plan gen plan remov gen plan remov gen plan remov gen plan remov shift project input input remov empti logic express plan gen plan gen plan list oper sink gen plan get sink oper sink instanceof project express int input project express get input num int num shift int input remov input num shift project express set input num input num shift prune unne inner load list logic relat oper pred remov new array list logic relat oper int input remov pred remov add logic relat oper pred get logic relat oper pred pred remov remov sub tree pred overrid public void visit union union throw frontend except add union necessari list oper pred new array list oper pred add plan get predecessor union oper pred pred add necessari logic relat oper pred remov oper start oper privat void remov sub tree logic relat oper op throw frontend except logic plan p logic plan op get plan list oper p get predecessor op null oper pred array new oper size remov sub tree logic relat oper pred p get successor op null oper succ p get successor op array new oper oper succ p disconnect op p remov op add op prune unnecessari column suppress warn uncheck privat void add necessari logic relat oper op throw frontend except set long output uid set long op get annot column prune helper output uid null logic schema schema op get schema set integ column drop new hash set integ int schema size output uid contain schema get field uid column drop add column drop empti foreach util add logic plan op get plan op column drop foreach get schema 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin spark optim import java util hash map import java util link list import java util list import java util map import org apach common log log import org apach common log log factori import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper project import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper combin packag import org apach backend hadoop executionengin physic layer relat oper distinct import org apach backend hadoop executionengin physic layer relat oper import org apach backend hadoop executionengin physic layer relat oper global rearrang import org apach backend hadoop executionengin physic layer relat oper limit import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper pre combin local rearrang import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer util plan helper import org apach backend hadoop executionengin spark oper global rearrang spark import org apach backend hadoop executionengin spark oper reduc spark import org apach backend hadoop executionengin spark plan spark op plan visitor import org apach backend hadoop executionengin spark plan spark oper plan import org apach backend hadoop executionengin spark plan spark oper import org apach backend hadoop executionengin util combin optim util import org apach datum data type import org apach impl plan depth first walker import org apach impl plan plan except import org apach impl plan visitor except import org apach impl plan optim optim except import org apach impl util pair import com googl common collect map class go physic plan replac global rearrang reduc algebra oper public class combin optim extend spark op plan visitor privat static log log factori get log combin optim class public combin optim spark oper plan plan super plan new depth first walker plan overrid public void visit spark op spark oper spark op throw visitor except tri add combin spark op physic plan catch except e throw new visitor except e check algebra oper exist replac global rearrang cogroup reduc follow input foreach use algebra op packag global rearrang local rearrang output foreach use algebra op final reduc use algebra op intermedi foreach use algebra op initi combin rearrang privat void add combin physic plan phi plan throw visitor except plan except clone support except list physic oper leav phi plan get leav leav null leaf size return ensur group list global rearrang glr plan helper get physic oper phi plan global rearrang class glr null glr size return global rearrang glr glr list physic oper glr successor phi plan get successor glr glr successor null glr successor empti continu glr successor get instanceof packag continu packag po packag packag glr successor get list physic oper po packag successor phi plan get successor po packag po packag successor null po packag successor size continu physic oper successor po packag successor get retain origin successor use later modifi plan physic oper packag successor successor successor instanceof limit limit accept long singl foreach successor list physic oper limit suc phi plan get successor successor limit suc null limit suc size limit suc get instanceof code examin foreach successor limit suc get successor instanceof foreach successor list physic oper foreach successor phi plan get successor foreach multi queri foreach successor null foreach successor size continu clone foreach modifi post reduc foreach post reduc foreach clone list physic plan fe inner post reduc get input plan find algebra oper also check foreach statement suitabl combin use list pair physic oper physic plan algebra op combin optim util find algebra op fe inner algebra op null algebra op size plan combin noth combin do continu tri list physic oper glr predecessor phi plan get predecessor glr exclud co group optim glr predecessor null glr predecessor size continu glr predecessor get instanceof local rearrang continu local rearrang rearrang local rearrang glr predecessor get info algebra oper find optim plan use combin trim global rearrang prece packag convert map side phi plan po packag replac distinct project distinct udf algebra pair physic oper physic plan op plan algebra op op plan first instanceof distinct continu combin optim util distinct patcher distinct patcher new combin optim util distinct patcher op plan second distinct patcher visit distinct patcher get distinct null int err code string msg problem replac distinct oper distinct build function throw new plan except msg err code except op plan first distinct patcher get distinct creat new map foreach mfe combin optim util creat grp proj post reduc po packag get pkgr get key type map physic oper integ op newpo map new hash map integ po creat plan algebra udf add inner plan map foreach pair physic oper physic plan op plan algebra op physic plan udf plan combin optim util creat plan predecessor op plan first op plan second mfe add input plan udf plan fals op newpo put op plan first po combin optim util chang func mfe user func sinc creat singl tupl bag input map foreach flag project map foreach inner plan also use singl tupl bag physic plan mpl mfe get input plan tri new combin optim util fix map project mpl visit catch visitor except e int err code string msg unabl flag project oper use singl tupl bag throw new plan except msg err code except e creat new combin foreach cfe combin optim util creat grp proj post reduc po packag get pkgr get key type add algebra function appropri project combin optim util add algebra func combin cfe op newpo modifi foreach inner plan set foreach foreach initi around mfe set input plan mfe get input plan cfe set input plan cfe get input plan tell combin packag field need project place bag first field simpl project rest need go bag int num field algebra op size algebra func group key boolean bag new boolean num field bag fals int num field bag true use combin packag combin plan need act differ regular packag oper combin packag pkgr new combin packag po packag get pkgr bag packag combin pack po packag clone combin pack set pkgr pkgr special local rearrang oper replac normal local rearrang map plan local rearrang new rearrang combin optim util get new rearrang rearrang pre combin local rearrang combin local rearrang combin optim util get pre combin rearrang phi plan replac rearrang combin local rearrang creat reduc oper reduc spark reduc oper new reduc spark cfe get oper key combin local rearrang get request parallel cfe get input plan cfe get flatten combin pack new rearrang reduc oper set custom partition glr get custom partition fix reduc side post reduc algebra op combin optim util chang func reduc oper user func updat packag reduc oper new rearrang add new oper phi plan add reduc oper phi plan add mfe connect new oper follow reduc use algebra op intermedi foreach use algebra op initi phi plan connect mfe reduc oper insert reduc stage combin rearrang successor phi plan disconnect combin local rearrang packag successor phi plan connect reduc oper packag successor phi plan connect combin local rearrang mfe replac foreach post reduc foreach phi plan add post reduc phi plan replac foreach post reduc catch except e int err code string msg intern error unabl introduc combin optim throw new optim except msg err code except e modifi input plan post reduc foreach match output reduc stage privat void fix reduc side post reduc list pair physic oper physic plan algebra op throw exec except plan except int pair physic oper physic plan algebra op algebra op user func combin udf user func algebra op first physic plan pplan algebra op second combin udf set algebra function user func project new proj new project combin optim util creat oper key post reduc get oper key get scope new proj set result type data type physic oper origin udf input pplan get predecessor combin udf array new physic oper pplan get predecessor origin udf input null pplan trim origin udf input pplan remov origin udf input pplan add new proj pplan connect new proj combin udf post reduc set result type data type modifi map side foreach reduc privat void convert map side physic plan physic plan packag po packag throw plan except link list physic oper oper remov new link list physic oper physic oper physic plan get predecessor po packag physic oper instanceof global rearrang spark oper remov add physic oper break remov global rearrang prece packag physic oper po oper remov physic plan remov reconnect po remov packag physic plan remov reconnect po packag updat reduc oper packag use local rearrang privat void updat packag reduc spark reduc oper local rearrang lrearrang throw optim except packag pkgr reduc oper get op get pkgr annot packag inform rearrang updat key info inform alreadi present packag map integ pair boolean map integ integ key info pkgr get key info key info null key info new hash map key info get integ valu lrearrang get index null someth wrong get key info index two differ local rearrang int err code string msg unexpect problem optim find index lrearrang get index multipl local rearrang oper throw new optim except msg err code except key info put integ valu lrearrang get index new pair boolean map integ integ lrearrang project star lrearrang get project col map pkgr set key info key info pkgr set key tupl lrearrang key tupl pkgr set key compound lrearrang key compound look algebra user func leaf input plan param pplan physic plan return null oper project non algebra user func find go plan otherwis algebra user func return privat static user func get algebra successor physic plan pplan check end list physic oper leav pplan get leav leav null leaf size return null physic oper succ leaf get succ instanceof user func user func succ combin return user func succ oper can n combin return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin util import java util array list import java util list import java util map import org apach common log log import org apach common log log factori import org apach func spec import org apach except import org apach warn import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper constant express import org apach backend hadoop executionengin physic layer express oper project import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper combin packag import org apach backend hadoop executionengin physic layer relat oper distinct import org apach backend hadoop executionengin physic layer relat oper filter import org apach backend hadoop executionengin physic layer relat oper import org apach backend hadoop executionengin physic layer relat oper limit import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper partial agg import org apach backend hadoop executionengin physic layer relat oper pre combin local rearrang import org apach backend hadoop executionengin physic layer relat oper sort import org apach classif interfac audienc import org apach datum data type import org apach impl plan compil messag collector import org apach impl plan compil messag collector messag type import org apach impl plan depend order walker import org apach impl plan depth first walker import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan plan except import org apach impl plan plan walker import org apach impl plan visitor except import org apach impl plan optim optim except import org apach impl util pair import com googl common collect list import com googl common collect map interfac audienc privat public class combin optim util privat static final string org apach builtin distinct class get name privat static final log log factori get log combin optim util class privat combin optim util algebra function distinct nest plan foreach partial comput map combin phase new foreach statement initi intermedi form algebra function add map combin plan respect bag portion group result project non algebra express udf bag input combin use use combin case like degrad perform much reduct datum size combin stage offset cost addit number time de serial do major area enhanc use combin cogroup queri order limit sort nest foreach group case group follow filter algebra express public static void add combin physic plan map plan physic plan reduc plan physic plan combin plan compil messag collector messag collector boolean map agg throw visitor except part one check job repres group foreach find local rearrang map need later list physic oper map leav map plan get leav map leav null map leav size messag collector collect expect map singl leaf messag type warn warn return physic oper map leaf map leav get map leaf instanceof local rearrang return local rearrang rearrang local rearrang map leaf list physic oper reduc root reduc plan get root reduc root size messag collector collect expect reduc singl root messag type warn warn return expect first root alway packag n know go physic oper root reduc root get root instanceof packag messag collector collect expect reduc root packag messag type warn warn return packag pack packag root list physic oper pack successor reduc plan get successor root pack successor null pack successor size return physic oper successor pack successor get successor instanceof limit limit accept long singl foreach successor list physic oper limit suc reduc plan get successor successor limit suc null limit suc size limit suc get instanceof code examin foreach successor limit suc get successor instanceof foreach successor list physic plan fe inner foreach get input plan find algebra oper also check foreach statement suitabl combin use list pair physic oper physic plan algebra op find algebra op fe inner algebra op null algebra op size plan combin noth combin do return combin plan null combin plan get root size messag collector collect n expect find anyth alreadi combin messag type warn warn return info choos move algebra foreach combin tri replac distinct project distinct udf algebra pair physic oper physic plan op plan algebra op op plan first instanceof distinct continu distinct patcher distinct patcher new distinct patcher op plan second distinct patcher visit distinct patcher get distinct null int err code string msg problem replac distinct oper distinct build function throw new plan except msg err code except op plan first distinct patcher get distinct creat new map foreach mfe creat grp proj foreach rearrang get key type map physic oper integ op newpo map new hash map integ po creat plan algebra udf add inner plan map foreach pair physic oper physic plan op plan algebra op physic plan udf plan creat plan predecessor op plan first op plan second mfe add input plan udf plan fals op newpo put op plan first po chang func mfe user func sinc creat singl tupl bag input map foreach flag project map foreach inner plan also use singl tupl bag physic plan mpl mfe get input plan tri new fix map project mpl visit catch visitor except e int err code string msg unabl flag project oper use singl tupl bag throw new plan except msg err code except e creat new combin foreach cfe creat grp proj foreach rearrang get key type add algebra function appropri project add algebra func combin cfe op newpo chang func cfe user func fix project function time algebra function reduc foreach pair physic oper physic plan op plan algebra op set project input op plan first op plan second op newpo get op plan first byte result type op plan first get result type user func op plan first set algebra function user func op plan first set result type result type modifi foreach inner plan set foreach foreach initi around necessari evil right leaf explicitli store foreach list rather comput time run time plan optim want foreach comput leaf time java optim java optim mfe set input plan mfe get input plan cfe set input plan cfe get input plan foreach set input plan foreach get input plan tell combin packag field need project place bag first field simpl project rest need go bag int num field algebra op size algebra func group key boolean bag new boolean num field bag fals int num field bag true use combin packag combin plan need act differ regular packag oper combin packag pkgr new combin packag pack get pkgr bag packag combin pack pack clone combin pack set pkgr pkgr combin pack set parent plan null combin plan add combin pack combin plan add cfe combin plan connect combin pack cfe need connect project cfe cp combin directli attach output packag root remain plan local rearrang mlr get new rearrang rearrang partial agg map agg null map agg map agg creat partial agg cfe group rearrang special local rearrang oper replac normal local rearrang map plan behav like regular local rearrang get next far get input construct key input return tupl two field key first posit valu insid bag second posit output format resembl format packag output feed map foreach expect format key field n project combin map foreach add end requir set inner plan new local rearrang leaf map combin plan contain project key patch map map plan get pre combin rearrang mfe map agg mlr local rearrang clr get new rearrang rearrang clr set parent plan null combin plan add clr combin plan connect cfe clr chang packag oper reduc plan combin packag need act differ regular packag oper pack set pkgr pkgr clone catch except e int err code string msg intern error unabl introduc combin optim throw new optim except msg err code except e privat static boolean group local rearrang lr local rearrang tupl chararray fals scope scope constant scope boolean group fals lr get plan size physic plan plan lr get plan get plan get key size plan get root get instanceof constant express constant express const expr constant express plan get root get group equal const expr get valu return group translat combin partial agg param combin return partial aggreg oper throw clone support except privat static partial agg creat partial agg combin boolean group throw clone support except string scope combin get oper key scope partial agg po agg new partial agg new oper key scope node id gener get gener get next node id scope group po agg add origin locat combin get alia combin get origin locat po agg set result type combin get result type first plan combin foreach group key po agg set key plan combin get input plan get clone list physic plan valu plan list new array list int combin get input plan size valu plan add combin get input plan get clone po agg set valu plan valu plan return po agg find algebra oper also check foreach statement suitabl combin use param fe inner inner plan foreach return null plan combin otherwis list combin oper throw visitor except public static list pair physic oper physic plan find algebra op list physic plan fe inner throw visitor except list pair physic oper physic plan algebra op list new array list check foreach inner plan physic plan pplan fe inner check presenc non combin oper algebra plan checker alg checker new algebra plan checker pplan alg checker visit alg checker see non algebra return null find combin distinct add list alg checker see distinct agg algebra op add new pair physic oper physic plan alg checker get distinct pplan continu list physic oper root pplan get root combin oper attach project root root successor combin project project group column otherwis job consid combin n want use combin case foreach statement project bag like bad perform addit de serial cost physic oper root root root instanceof constant express continu root instanceof project happen expect root inner plan constant project combin return null project proj project root user func combin udf get algebra successor proj pplan combin udf null proj project end project star project end combin return null check see project group column project col list integ col proj get column col null col size col get project group column plan still combin continu els combin return null algebra udf one input add udf boolean exist fals pair physic oper physic plan pair algebra op pair first equal combin udf exist true break exist algebra op add new pair physic oper physic plan combin udf pplan return algebra op look algebra user func successor project call recurs skip project see way param proj project param pplan physic plan return null oper project algebra user func find go plan otherwis algebra user func return privat static user func get algebra successor project proj physic plan pplan check root follow combin oper list physic oper succ pplan get successor proj succ null succ size return null succ size project share one oper happen plan gener today will not tri combin return null physic oper succ succ get succ instanceof project return get algebra successor project succ pplan succ instanceof user func user func succ combin return user func succ oper can n combin return null creat new foreach scope alia give foreach add inner plan project group column go first input param foreach sourc foreach param key type type group key return new foreach public static creat grp proj foreach byte key type string scope foreach get oper key scope new new creat oper key scope new array list physic plan new add origin locat foreach get alia foreach get origin locat new set result type foreach get result type creat plan project group column physic plan grp proj plan new physic plan group column first column project proj new project creat oper key scope proj set result type key type grp proj plan add proj new add input plan grp proj plan fals return new creat new plan add clone oper alg op predecessor physic plan pplan param alg op algebra oper param pplan physic plan alg op return new plan throw clone support except throw plan except public static physic plan creat plan predecessor physic oper alg op physic plan pplan throw clone support except plan except physic plan newplan new physic plan add predecessor plan alg op pplan newplan return newplan recurs clone op predecessor pplan add newplan param op param pplan param newplan return throw clone support except throw plan except privat static physic oper add predecessor plan physic oper op physic plan pplan physic plan newplan throw clone support except plan except physic oper new op op clone newplan add new op pplan get predecessor op null pplan get predecessor op size return new op physic oper pred pplan get predecessor op physic oper new pred add predecessor plan pred pplan newplan newplan connect new pred new op return new op add algebra function appropri project new foreach combin param cfe new foreach combin param op newpo map physic oper posit input throw clone support except throw plan except public static void add algebra func combin cfe map physic oper integ op newpo throw clone support except plan except array first popul physic oper order posit input use add plan combin foreach output combin foreach posit input mean oper posit map use reduc well physic oper op order new physic oper op newpo size map entri physic oper integ op po op newpo entri set op order op po get valu op po get key first posit use group column plan add start int op order length creat new inner plan foreach add clone copi give physic oper new project even udf queri take multipl input one project need add input udf version udf evalu map physic plan new plan new physic plan physic oper new op op order clone new plan add new op project proj new project creat oper key cfe get oper key get scope proj set result type data type new plan add proj new plan connect proj new op cfe add input plan new plan fals replac old local rearrang new pre combin add new map foreach new map local rearrang connect param map plan param pre combin param mfe param map agg param mlr throw plan except privat static void patch map physic plan map plan pre combin local rearrang pre combin mfe partial agg map agg local rearrang mlr throw plan except local rearrang old local rearrang map plan get leav get map plan replac old pre combin map plan add mfe map plan connect pre combin mfe oper local rearrang physic oper op mfe map agg null map plan add map agg map plan connect mfe map agg op map agg map plan add mlr map plan connect op mlr param rearrang return public static pre combin local rearrang get pre combin local rearrang rearrang string scope rearrang get oper key scope pre combin local rearrang pclr new pre combin local rearrang creat oper key scope rearrang get request parallel rearrang get input pclr set plan rearrang get plan return pclr public static oper key creat oper key string scope return new oper key scope node id gener get gener get next node id scope param op param index param plan throw plan except privat static void set project input physic oper op physic plan plan int index throw plan except string scope op get oper key scope project proj new project new oper key scope node id gener get gener get next node id scope op get request parallel index proj set result type data type remov old connect element plan plan trim op plan add proj plan connect proj op list physic oper input list new array list input add proj op set input input chang algebriac function type algebra function map combin map combin algebra function leaf plan param fe param type throw plan except public static void chang func fe byte type throw plan except physic plan plan fe get input plan list physic oper leav plan get leav leav null leaf size int err code string msg expect find plan singl leaf find leaf size leav throw new plan except msg err code except physic oper leaf leav get leaf instanceof project continu leaf instanceof user func int err code string msg expect find plan project leaf find leaf get class get simpl name throw new plan except msg err code except user func func user func leaf tri func set algebra function type catch exec except e int err code string msg could set algebra function type throw new plan except msg err code except e creat new local rearrang clone exist rearrang add plan project key param rearrang return throw plan except throw clone support except public static local rearrang get new rearrang local rearrang rearrang throw plan except clone support except local rearrang new rearrang rearrang clone set project key physic plan new plan new physic plan string scope new rearrang get oper key scope project proj new project new oper key scope node id gener get gener get next node id scope proj set result type new rearrang get key type new plan add proj list physic plan plan new array list physic plan plan add new plan new rearrang set plan combin plan return new rearrang check someth prevent use algebra interfac look distinct use algebra privat static class algebra plan checker extend phi plan visitor boolean saw non algebra fals boolean saw distinct agg fals privat boolean saw foreach fals privat distinct distinct null algebra plan checker physic plan plan super plan new depend order walker physic oper physic plan plan overrid public void visit throw visitor except super visit see foreach distinct agg ok els see foreach mark non algebra see foreach see distinct agg see non algebra true overrid public void visit distinct distinct distinct throw visitor except distinct distinct saw distinct agg want combin case one distinct input agg appar see distinct let combin saw non algebra true return check distinct input agg could follow two case script b group c foreach b x distinct gener x script lead follow plan x user func org apach builtin long project bag distinct bag project tupl script b group c foreach b x distinct gener x script lead follow plan x user func org apach builtin int sum long project bag project bag distinct bag project tupl trace distinct successor upto leaf see project bag immedi successor option project bag next successor till see leaf physic oper leaf plan get leav get leaf user func need algebra leaf instanceof user func want combin case one distinct input agg combin addit input list physic oper pred plan get predecessor leaf pred size see non algebra true return list physic oper immedi succ plan get successor distinct immedi succ size immedi succ get instanceof project check successor leaf leaf immedi succ get script see distinct agg true return els check script scenario list physic oper next succ plan get successor immedi succ get next succ size physic oper op next succ get op instanceof project check successor leaf leaf op see distinct agg true return return mean see pattern expect see non algebra true return distinct public distinct get distinct saw non algebra return null return distinct overrid public void visit limit limit limit throw visitor except see non algebra true privat boolean check successor leaf physic oper leaf physic oper op check list physic oper succ plan get successor op check succ size physic oper op succ get op leaf return true return fals overrid public void visit filter filter filter throw visitor except see non algebra true overrid public void visit fe throw visitor except need allow foreach input distinct n want thing let flag presenc foreach present distinct agg allow see foreach true overrid public void visit sort sort sort throw visitor except see non algebra true visitor replac project bag distinct bag user func org apach builtin distinct datum bag public static class distinct patcher extend phi plan visitor privat user func distinct null param plan param walker public distinct patcher physic plan plan plan walker physic oper physic plan walker super plan walker param physic plan public distinct patcher physic plan physic plan physic plan new depend order walker physic oper physic plan physic plan overrid public void visit project project proj throw visitor except check project preced distinct return type bag list physic oper pred plan get predecessor proj pred null return leaf project interest patch physic oper pred pred get pred size pred instanceof distinct distinct null alreadi patch sinc project distinct pair occur int err code string msg unexpect project distinct pair tri set plan use combin throw new optim except msg err code except stick userfunc org apach builtin distinct datum bag place project distinct pair physic oper distinct predecessor plan get predecessor pred get user func func null tri string scope proj get oper key scope list physic oper func input new array list physic oper func spec f spec new func spec func input add distinct predecessor explicitli set distinct predecessor result type tupl relev distinct predecessor origin foreach return type need set tupl get stream tupl distinct predecessor set result type data type func new user func new oper key scope node id gener get gener get next node id scope func input f spec func set result type data type plan replac proj func plan remov pred connect newli add func predecessor earli distinct plan connect distinct predecessor func catch plan except e int err code string msg problem reconfigur plan add distinct build function throw new optim except msg err code except e distinct func public user func get distinct return distinct public static class fix map project extend phi plan visitor public fix map project physic plan plan plan new depth first walker physic oper physic plan plan param plan param walker public fix map project physic plan plan plan walker physic oper physic plan walker super plan walker overrid public void visit project project proj throw visitor except proj get result type data type call visitor fix project map foreach inner plan map side deal singl tupl bag set flag project use singl tupl bag futur n singl tupl bag input map foreach proj set result singl tupl bag true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl util import java util array list import java util list import org apach eval func import org apach func spec import org apach backend hadoop executionengin physic layer express oper constant express import org apach backend hadoop executionengin physic layer express oper express oper import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper bin cond import org apach backend hadoop executionengin physic layer express oper project import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer plan physic plan import org apach builtin empti import org apach datum datum bag import org apach datum data type import org apach datum non spillabl data bag import org apach datum tupl import org apach datum tupl factori import org apach impl context import org apach impl logic layer schema schema import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan plan except class add util function get use log phi translat compil public class compil util public static void add empti bag outer join physic plan fe plan schema input schema boolean skew right outer join string first reduc key class name throw plan except current project bag oper plan bag empti bag replac bag one tupl null field flatten drop record flatten drop record bag leav empti bag actual project null field empti bag need get follow state project bag user func empti const bag bag null field project bag bin cond skew right outer join first reduc key gener tupl null field see project key project bag first reduc key user func empti const bag bag null field project bag bin cond project relat project project fe plan get root get tri condit bincond project relat project empti relat project clone fe plan add relat project empti string scope relat project get oper key scope func spec empti spec new func spec empti class get name object f context instanti func spec empti spec user func empti new user func new oper key scope node id gener get gener get next node id scope null empti spec eval func f empti set result type data type fe plan add empti fe plan connect relat project empti empti express oper cond skew right outer join project project key new project new oper key scope node id gener get gener get next node id scope project key set column project key set overload fals project key set result type input schema get field type new new oper key scope node id gener get gener get next node id scope func spec first reduc key spec new func spec first reduc key class name object f context instanti func spec first reduc key spec user func first reduc key new user func new oper key scope node id gener get gener get next node id scope null first reduc key spec eval func f fe plan add project key fe plan add first reduc key fe plan add fe plan connect project key first reduc key fe plan connect first reduc key fe plan connect empti set lh first reduc key set rh empti cond els cond empti lh bincond const bag null field constant express ce new constant express new oper key scope node id gener get gener get next node id scope follow give tupl requir number null tupl tupl factori get instanc new tupl input schema size int input schema size set null list tupl bag content new array list tupl bag content add data bag bg new non spillabl data bag bag content ce set valu bg ce set result type data type oper n predecessor fe plan add ce rh bincond origin project let set bincond bin cond bincond new bin cond new oper key scope node id gener get gener get next node id scope bincond set cond cond bincond set lh ce bincond set rh relat project bincond set result type data type fe plan add bincond fe plan connect cond bincond fe plan connect ce bincond fe plan connect relat project bincond catch except e throw new plan except error set outerjoin e 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util array list import java util list import org apach eval func import org apach func spec import org apach except import org apach backend executionengin exec except import org apach data data byte array import org apach datum data type import org apach datum tupl import org apach impl logic layer frontend except import org apach impl logic layer schema schema gener concaten two argument use two bytearray two chararray mixtur two public class extend eval func data byte array overrid public datum byte array exec tupl input throw except tri input null input size return null datum byte array db new datum byte array int input size input get null return null db append datum byte array input get return db catch exec except exp throw exp catch except e int err code string msg error comput concat get class get simpl name throw new exec except msg err code except e overrid public schema output schema schema input return new schema new schema field schema null datum type non javadoc see org apach eval func get arg func map overrid public list func spec get arg func map throw frontend except list func spec func list new array list func spec schema new schema add new schema field schema null datum type add new schema field schema null datum type func list add new func spec get class get name new schema add new schema field schema null datum type add new schema field schema null datum type func list add new func spec string concat class get name return func list overrid public schema type get schema type return schema type overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop datastorag import java util enumer import java util iter import java util map import java util map entri import java util properti import org apach hadoop conf configur import org apach exec type import org apach constant import org apach backend hadoop executionengin map reduc layer configur import org apach backend hadoop executionengin map reduc layer map reduc import org apach backend hadoop executionengin util map red util public class configur util public static configur configur properti properti return configur properti fals public static configur configur properti properti boolean load default assert properti null final configur config new configur load default final enumer object iter properti key iter element final string key string iter next element final string val properti get properti key config set key val return config public static properti properti configur configur properti properti new properti assert configur null iter map entri string string iter configur iter iter next map entri string string entri iter next properti put entri get key entri get valu return properti param orig conf param replac conf public static void merg conf configur orig conf configur replac conf entri string string entri replac conf orig conf set entri get key entri get valu public static properti get local properti configur local conf map reduc job context null map reduc job context get configur get exectyp equal exec type string local conf new configur fals local conf add resourc core default xml els map reduc job context null local conf new configur map reduc job context get configur els local conf new configur true realli hacki tri get unit test work hadoop hadoop mini cluster current need setup distribut cach start build class hadoop site xml contain entri prevent test success expect file hdf need unset hadoop go away mini cluster fix distribut cach issu local conf unset configur local conf set map red util file properti prop configur util properti local conf return prop public static void replac config local mode configur configur entri string string entri configur string key entri get key string valu entri get valu key start constant string real conf key key substr constant length configur set real conf key valu return properti contain altern name give properti valu use solv deprec return public static properti expand altern name string name string valu final configur config new configur fals config set name valu return configur util properti config 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic rule import java io except import java util array list import java util hash map import java util iter import java util list import java util map import org apach backend executionengin exec except import org apach backend hadoop datastorag configur util import org apach backend hadoop executionengin map reduc layer hadoop logger import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer plan physic plan import org apach impl context import org apach impl logic layer frontend except import org apach impl util context import org apach newplan base oper plan import org apach newplan depend order walker import org apach newplan oper import org apach newplan oper plan import org apach newplan plan walker import org apach newplan revers depend order walker see chk import org apach newplan logic express express visitor import org apach newplan logic express constant express import org apach newplan logic express exp phi translat visitor import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic express logic express visitor import org apach newplan logic express user func express import org apach newplan logic optim express visitor import org apach newplan logic relat logic relat oper import org apach newplan optim rule import org apach newplan optim transform import org joda time date time zone public abstract class constant calcul extend rule privat list logic relat oper process oper new array list logic relat oper privat context pc public constant calcul string n context pc super n fals pc pc overrid public transform get new transform return new constant calcul transform process oper pc public static class constant calcul transform extend transform privat list logic relat oper process oper new array list logic relat oper privat oper plan plan privat context pc public constant calcul transform list logic relat oper process oper context pc process oper process oper pc pc overrid public boolean check oper plan match throw frontend except iter oper oper match get oper oper next logic relat oper oper logic relat oper oper next oper alreadi process quit process oper contain oper continu process oper add oper return true return fals public static class constant calcul logic plan visitor extend express visitor privat context pc public constant calcul logic plan visitor oper plan plan context pc throw frontend except super plan new depend order walker plan pc pc overrid protect logic express visitor get visitor logic express plan expr throw frontend except return new constant calcul express visitor expr current op pc public static class constant calcul express visitor extend express visitor privat logic relat oper current op privat context pc privat date time zone current null public constant calcul express visitor oper plan exp plan logic relat oper current op context pc throw frontend except super exp plan new revers depend order walker see chk exp plan current op current op pc pc overrid protect void execut logic express op throw frontend except op instanceof user func express user func express udf user func express op udf get eval func allow compil time calcul return boolean val set fals object val null current walker get plan get successor op null successor successor constant calcul constant oper succ current walker get plan get successor op succ instanceof constant express return successor constant calcul valu oper plan exp logic plan new logic express plan base oper plan current walker get plan move tree op base oper plan exp logic plan physic plan exp physic plan new physic plan map oper physic oper log phi map new hash map oper physic oper plan walker child walker new revers depend order walker see chk exp logic plan save old walker use child walker current walker push walker child walker exp phi translat visitor exp translat visitor new exp phi translat visitor exp logic plan child walker current op exp physic plan log phi map exp translat visitor visit pop walker physic oper root exp physic plan get leav get tri context get context add job conf configur util configur pc get properti true hadoop logger hadoop logger hadoop logger get instanc physic oper set logger hadoop logger set default time zone val root get next root get result type result restor default time zone context get context add job conf null catch exec except e throw new frontend except e val set true els op instanceof user func express solo calcul user func express udf user func express op tri context get context add job conf configur util configur pc get properti true set default time zone val udf get eval func exec null restor default time zone context get context add job conf null catch except e throw new frontend except e val set true val set constant express constant expr constant expr new constant express current walker get plan val constant expr inherit schema op current walker get plan replac op constant expr privat void set default time zone string dtz str pc get properti get properti datetim default tz dtz str null dtz str length current date time zone get default date time zone set default date time zone dtz str privat void restor default time zone current null date time zone set default current current null overrid public void transform oper plan match throw frontend except express visitor express visitor new constant calcul logic plan visitor match pc express visitor visit overrid public oper plan report chang return plan 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach except import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic util import org apach newplan logic relat logic schema logic field schema import org apach parser sourc locat constant public class constant express extend column express stupid java need union object val rememb datum type valu null byte type data type add express plan param plan logic express plan constant part param val valu constant public constant express oper plan plan object val super constant plan val val plan add link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit get valu constant return valu constant public object get valu return val public void set valu object val val val overrid public boolean equal oper throw frontend except null instanceof constant express constant express co constant express return co get field schema equal get field schema co val null val null co null co val equal val els return fals overrid public logic field schema get field schema throw frontend except field schema null return field schema tri field schema util translat field schema data type determin field schema val catch except e throw new frontend except error determin field schema object constant express except e uid field schema field schema merg uid uid field schema type data type field schema type data type val null field schema type type return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except constant express copi new constant express lg exp plan get valu copi type type copi set locat new sourc locat locat return copi public void inherit schema logic express expr throw frontend except field schema expr get field schema uid field schema field schema merg uid uid field schema field schema type data type type field schema type 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util array list import java util iter import java util list import org apach accumul import org apach algebra import org apach eval func import org apach func spec import org apach except import org apach backend executionengin exec except import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl logic layer frontend except import org apach impl logic layer schema schema gener count number valu bag count includ null valu thu match semant field indic p class implement link org apach algebra possibl execut perform distribut fashion p restrict datum type insid bag count p implement link org apach accumul interfac well never prefer method usag avail case combin use give calcul public class extend eval func long implement algebra accumul long privat static tupl factori tupl factori tupl factori get instanc overrid public long exec tupl input throw except tri datum bag bag datum bag input get bag null return null iter bag iter long cnt next tupl tupl next null size get null cnt return cnt catch exec except ee throw ee catch except e int err code string msg error comput count get class get simpl name throw new exec except msg err code except e public string get initi return initi class get name public string get interm return intermedi class get name public string get final return final class get name static public class initi extend eval func tupl overrid public tupl exec tupl input throw except sinc initi guarante call map call input bag singl tupl count alway bag non empti datum bag bag datum bag input get iter bag iter next tupl tupl next null size get null return tupl factori new tupl long valu return tupl factori new tupl long valu static public class intermedi extend eval func tupl overrid public tupl exec tupl input throw except tri return tupl factori new tupl sum input catch exec except ee throw ee catch except e int err code string msg error comput count get class get simpl name throw new exec except msg err code except e static public class final extend eval func long overrid public long exec tupl input throw except tri return sum input catch except ee int err code string msg error comput count get class get simpl name throw new exec except msg err code except ee static protect long sum tupl input throw exec except number format except data bag valu datum bag input get long sum iter tupl valu iter next tupl next faith check valu cast much sum long get return sum overrid public schema output schema schema input return new schema new schema field schema null datum type non javadoc see org apach eval func get arg func map overrid public list func spec get arg func map throw frontend except list func spec func list new array list func spec schema new schema add new schema field schema null datum type func list add new func spec get class get name return func list accumul interfac implement privat long intermedi count overrid public void accumul tupl b throw except tri datum bag bag datum bag b get iter bag iter next tupl tupl next null size get null intermedi count catch exec except ee throw ee catch except e int err code string msg error comput min get class get simpl name throw new exec except msg err code except e overrid public void cleanup intermedi count overrid public long get valu return intermedi count 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util list import org apach eval func import org apach backend executionengin exec except import org apach datum bag factori import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl logic layer schema schema field schema import com googl common collect list produc datum bag combin argument tupl member datum cube mean b c produc follow bag pre b c null null null b null null c null null null b c null null c null b null pre p marker null default set arbitrari string invok constructor via constructor take singl argument string want repres p usag go someth like pre code event load log event use event loader lang event app id cube foreach x gener piggybank cube dimens lang event app id lang event app id measur cube foreach group cube lang event app id parallel gener flatten group lang event app id cube measur store cube event cube pre p b note b non algebra aggreg larg datum result slow reduc sinc one group go get record relat public class cube dimens extend eval func data bag privat static bag factori bf bag factori get instanc privat static tupl factori tf tupl factori get instanc privat final string marker privat static final string unknown unknown public cube dimens null public cube dimens string marker super marker marker overrid public datum bag exec tupl tupl throw except list tupl result list new array list capac int math pow tupl size convert null unknown tupl tupl newt tf new tupl tupl size recurs cube result tupl newt return bf new default bag result dimens valu contain null replac unknown valu sinc null use rollup public static void convert null unknown tupl tupl throw exec except int idx object obj tupl get obj null tupl set idx unknown idx privat void recurs cube list tupl result tupl input int index tupl newt throw exec except newt set index input get index index input size result add newt els recurs cube result input index newt tf new tupl make copi tf new tupl copi n tupl newnewt tf new tupl newt get newnewt set index marker index input size result add newnewt els recurs cube result input index newnewt overrid public schema output schema schema input tri return new schema new field schema dimens input data type catch frontend except e specifi explicitli happen throw new runtim except e overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java lang reflect parameter type import java lang reflect type import java math big decim import java math big integ import java util array list import java util array import java util hash map import java util iter import java util map import java util tree map import org apach hadoop io writabl compar import org apach except import org apach resourc schema import org apach backend executionengin exec except import org apach builtin date import org apach classif interfac audienc import org apach classif interfac stabil import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl logic layer schema schema merg except import org joda time date time class static final valu use encod datum type number static helper function manipul datum object datum type valu could do enumer do byte code instead save creat object interfac audienc public interfac stabil stabl public class data type list use record valu datum disk chang valu may strand user data order matter compar use order order unlik datatyp n chang order space unevenli leav room new entri without chang valu creat order issu public static final byte public static final byte public static final byte public static final byte intern use public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte intern use public static final byte intern use store load chararray big charact bin storag public static final byte public static final byte public static final byte intern use use store writeabl compar object creat order index merg join expect object implement writabl interfac default constructor public static final byte intern use public static final byte intern use map object object use find quantil public static final byte determin datatyp object param object test return byte code type n know public static byte find type object null return tri put common first instanceof datum byte array return els instanceof string return els instanceof tupl return els instanceof datum bag return els instanceof integ return els instanceof long return els instanceof intern map return els instanceof map return els instanceof float return els instanceof doubl return els instanceof boolean return els instanceof date time return els instanceof byte return els instanceof big integ return els instanceof big decim return els instanceof writabl compar return els return give type object determin datum type repres n cheap use reflect use sparingli param type examin return byte code type n know public static byte find type type null return tri put common first datum byte array class return els string class return els integ class return els long class return els float class return els doubl class return els boolean class return els byte class return els big integ class return els big decim class return els date time class return els intern map class return els might tupl bag need check interfac implement instanceof class return extract type class els instanceof parameter type parameter type impl parameter type class c class impl get raw type return extract type class c return privat static byte extract type class type class c class class ioe interfac c get interfac class interfac null c interfac interfac new class ioe interfac length interfac c int interfac length interfac ioe interfac els interfac ioe interfac boolean match writabl compar fals int interfac length interfac get name equal org apach datum tupl return els interfac get name equal org apach datum datum bag return els interfac get name equal java util map return els interfac get name equal org apach hadoop io writabl compar use type last resort match writabl compar true match writabl compar return return return number type know return number type public static int num type byte type gen type return type length get array type valu return byte array entri type public static byte gen type byte type datum type data type data type data type data type data type data type data type data type data type data type data type data type data type data type data type data type return type privat static string gen type name string name return name get map type valu type name return map public static map byte string gen type name map byte type gen type string name gen type name map byte string ret new hash map byte string int type length ret put type name return ret get map type name type valu return map public static map string byte gen name type map byte type gen type string name gen type name map string byte ret new hash map string byte int type length ret put name type return ret get type name param object test return type name string public static string find type name object return find type name find type get type name type byte code param dt type byte code return type name string public static string find type name byte dt switch dt case return case return boolean case return byte case return int case return biginteg case return bigdecim case return long case return float case return doubl case return datetim case return bytearray case return bigchararray case return chararray case return map case return internalmap case return tupl case return bag case return gener writablecompar default return unknown public static class find type class byte dt switch dt case return void case return boolean case return byte case return integ case return big integ class case return big decim class case return long case return float case return doubl case return date time class case return datum byte array class case return string class case return string class case return map class case return intern map class case return tupl class case return datum bag class case return writabl compar class default throw new runtim except invalid type correspond class dt get type code type name param name type name return type code public static byte find type name string name name null return els boolean equal ignor case name return els byte equal ignor case name return els int equal ignor case name return els biginteg equal ignor case name return els bigdecim equal ignor case name return els long equal ignor case name return els float equal ignor case name return els doubl equal ignor case name return els datetim equal ignor case name return els bytearray equal ignor case name return els bigchararray equal ignor case name return els chararray equal ignor case name return els map equal ignor case name return els internalmap equal ignor case name return els tupl equal ignor case name return els bag equal ignor case name return els gener writablecompar equal ignor case name return els return determin whether datum type complex param datum type data type code test return true datum type bag tupl map public static boolean complex byte datum type return datum type datum type data type datum type determin whether object complex atom param object determin type return true datum type bag tupl map public static boolean complex object return complex find type determin whether datum type atom param datum type data type code test return true datum type bytearray bigchararray chararray integ long float boolean public static boolean atom byte datum type return datum type data type datum type data type datum type data type datum type data type datum type data type datum type data type datum type determin whether datum type atom param object determin type return true datum type bytearray chararray integ long float boolean public static boolean atom object return atom find type determin whether object schema param object determin schema return true type valid schema e bag tupl public static boolean schema type object return schema type find type determin whether datum type schema param datum type data type determin schema return true type valid schema e bag tupl public static boolean schema type byte data type return datum type datum type data type compar two object function necessari super class implement compar function provid arbitrari order object differ type follow lt lt lt lt lt lt lt lt lt lt lt lt function implement cross object logic call function instead param first object param second object return less equal less public static int compar object object byte dt find type byte dt find type return compar dt dt link compar object object use reflect determin type pass object reli instead caller provid appropri valu determin link data type find type object use version case multipl object type repeatedli compar param first object param second object param dt type byte valu param dt type byte valu return lt equal gt suppress warn uncheck public static int compar object object byte dt byte dt dt dt null null return els return els null return switch dt case return case return boolean compar boolean case return byte compar byte case return integ compar integ case return long compar long case return float compar float case return doubl compar doubl case return date time compar date time case return datum byte array compar case return string compar string case return big integ compar big integ case return big decim compar big decim case map string object map string object map string object map string object int sz size int sz size sz sz return els sz sz return els bad sort key map order commut tree map string object tm new tree map string object tree map string object tm new tree map string object iter map entri string object tm entri set iter iter map entri string object tm entri set iter next map entri string object entri next map entri string object entri next int c entri get key compar entri get key c return c els c compar entri get valu entri get valu c return c return case return compar compar case return n think anyway want case return tupl compar case return datum bag compar default throw new runtim except unkown type dt compar els dt dt return els return public static byte byte object throw exec except return byte find type suppress warn uncheck public static byte byte object byte type throw exec except switch type case return boolean boolean valu new byte new byte return boolean string get byte case return new byte byte case case case case case case return number string get byte case return date time string get byte case return string get byte case return map string map string object get byte case return tupl string get byte case return datum byte array get case return datum bag string get byte case return null default int err code string msg convert find type name byte array throw new exec except msg err code except forc data object boolean possibl numer type forc boolean well char array byte array complex type forc boolean n particularli effici alreadi b know b object boolean cast param object cast param type object cast return object boolean throw exec except type can not forc boolean public static boolean boolean object byte type throw exec except tri switch type case return null case return boolean case return boolean valu byte byte valu case return boolean valu integ int valu case return boolean valu long long valu case return boolean valu big integ equal big integ case return boolean valu big decim equal big decim case return boolean valu float float valu case return boolean valu doubl doubl valu case string str data byte array string str equal ignor case true return boolean els str equal ignor case fals return boolean els return null case string equal ignor case true return boolean els string equal ignor case fals return boolean els return null case case case case case case default int err code string msg convert find type name boolean throw new exec except msg err code except catch class cast except cce throw cce catch exec except ee throw ee catch number format except nfe int err code string msg problem format could convert float throw new exec except msg err code except nfe catch except e int err code string msg intern error could convert float throw new exec except msg err code except public static boolean boolean object throw exec except return boolean find type forc data object integ possibl numer type forc integ though precis may lose well char array byte array boolean complex type forc integ n particularli effici alreadi b know b object integ cast param object cast param type object cast return object integ throw exec except type can not forc integ public static integ integ object byte type throw exec except tri switch type case boolean true return integ valu els return integ valu case return integ valu byte int valu case return integ case return integ valu long int valu case return integ valu float int valu case return integ valu doubl int valu case return integ valu datum byte array string case return integ valu string case return integ valu big integ int valu case return integ valu big decim int valu case return null case return integ valu long valu date time get milli int valu case case case case case default int err code string msg convert find type name integ throw new exec except msg err code except catch class cast except cce throw cce catch exec except ee throw ee catch number format except nfe int err code string msg problem format could convert integ throw new exec except msg err code except nfe catch except e int err code string msg intern error could convert integ throw new exec except msg err code except forc data object integ possibl numer type forc integ though precis may lose well char array byte array boolean complex type forc integ n particularli effici alreadi b know b object integ cast unlik link integ object byte method first determin type cast use link integ object byte alreadi know type param object cast return object integ throw exec except type can not forc integ public static integ integ object throw exec except return integ find type forc data object long possibl numer type forc long though precis may lose well char array byte array boolean complex type forc long n particularli effici alreadi b know b object long cast param object cast param type object cast return object long throw exec except type can not forc long public static long long object byte type throw exec except tri switch type case boolean true return long valu els return long valu case return long valu byte long valu case return long valu integ long valu case return long case return long valu float long valu case return long valu doubl long valu case return long valu datum byte array string case return long valu string case return long valu big integ long valu case return long valu big decim long valu case return null case return long valu date time get milli case case case case case default int err code string msg convert find type name long throw new exec except msg err code except catch class cast except cce throw cce catch exec except ee throw ee catch number format except nfe int err code string msg problem format could convert long throw new exec except msg err code except nfe catch except e int err code string msg intern error could convert long throw new exec except msg err code except forc data object long possibl numer type forc long though precis may lose well char array byte array boolean complex type forc long n particularli effici alreadi b know b object long cast unlik link long object byte method first determin type cast use link long object byte alreadi know type param object cast return object long throw exec except type can not forc long public static long long object throw exec except return long find type forc data object float possibl numer type forc float though precis may lose well char array byte array complex type forc float n particularli effici alreadi b know b object float cast param object cast param type object cast return object float throw exec except type can not forc float public static float float object byte type throw exec except tri switch type case return boolean float valu float valu case return new float integ float valu case return new float long float valu case return float case return new float doubl float valu case return new float long valu date time get milli float valu case return float valu datum byte array string case return float valu string case return float valu big integ float valu case return float valu big decim float valu case return null case case case case case case default int err code string msg convert find type name float throw new exec except msg err code except catch class cast except cce throw cce catch exec except ee throw ee catch number format except nfe int err code string msg problem format could convert float throw new exec except msg err code except nfe catch except e int err code string msg intern error could convert float throw new exec except msg err code except forc data object float possibl numer type forc float though precis may lose well char array byte array boolean complex type forc float n particularli effici alreadi b know b object float cast unlik link float object byte method first determin type cast use link float object byte alreadi know type param object cast return object float throw exec except type can not forc float public static float float object throw exec except return float find type forc data object doubl possibl numer type forc doubl well char array byte array complex type forc doubl n particularli effici alreadi b know b object doubl cast param object cast param type object cast return object doubl throw exec except type can not forc doubl public static doubl doubl object byte type throw exec except tri switch type case return boolean doubl valu doubl valu case return new doubl integ doubl valu case return new doubl long doubl valu case return new doubl float doubl valu case return doubl case return new doubl long valu date time get milli doubl valu case return doubl valu datum byte array string case return doubl valu string case return doubl valu big integ doubl valu case return doubl valu big decim doubl valu case return null case case case case case case default int err code string msg convert find type name doubl throw new exec except msg err code except catch class cast except cce throw cce catch exec except ee throw ee catch number format except nfe int err code string msg problem format could convert doubl throw new exec except msg err code except nfe catch except e int err code string msg intern error could convert doubl throw new exec except msg err code except forc data object date time possibl char array byte array forc date time numer type complex type forc date time n particularli effici alreadi b know b object date time cast param object cast param type object cast return object boolean throw exec except type can not forc boolean public static date time date time object byte type throw exec except tri switch type case return null case return new date time data byte array string case string contain date part date part plu time part return date extract date time string case return new date time integ long valu case return new date time long long valu case return new date time float long valu case return new date time doubl long valu case return new date time big integ long valu case return new date time big decim long valu case return date time case case case case case case case default int err code string msg convert find type name date time throw new exec except msg err code except catch class cast except cce throw cce catch exec except ee throw ee catch number format except nfe int err code string msg problem format could convert date time throw new exec except msg err code except nfe catch except e int err code string msg intern error could convert date time throw new exec except msg err code except public static date time date time object throw exec except return date time find type forc data object doubl possibl numer type forc doubl well char array byte array boolean complex type forc doubl n particularli effici alreadi b know b object doubl cast unlik link doubl object byte method first determin type cast use link doubl object byte alreadi know type param object cast return object doubl throw exec except type can not forc doubl public static doubl doubl object throw exec except return doubl find type public static big integ big integ object throw exec except return big integ find type public static big integ big integ object byte type throw exec except tri switch type case return boolean big integ big integ case return big integ valu integ long valu case return big integ valu long long valu case return big integ valu float long valu case return big integ valu doubl long valu case return new big integ data byte array string case return new big integ string case return big integ case return big decim big integ case return big integ valu date time get milli case return null case case case case case case default int err code string msg convert find type name big integ throw new exec except msg err code except catch class cast except cce throw cce catch exec except ee throw ee catch number format except nfe int err code string msg problem format could convert big integ throw new exec except msg err code except nfe catch except e int err code string msg intern error could convert big integ throw new exec except msg err code except public static big decim big decim object throw exec except return big decim find type public static big decim big decim object byte type throw exec except tri switch type case return boolean big decim big decim case return big decim valu integ long valu case return big decim valu long long valu case return big decim valu float doubl valu case return big decim valu doubl doubl valu case return new big decim datum byte array string case return new big decim string case return new big decim big integ case return big decim case return big decim valu date time get milli case return null case case case case case case default int err code string msg convert find type name big decim throw new exec except msg err code except catch class cast except cce throw cce catch exec except ee throw ee catch number format except nfe int err code string msg problem format could convert big decim throw new exec except msg err code except nfe catch except e int err code string msg intern error could convert big decim throw new exec except msg err code except forc data object string possibl simpl atom type forc string includ byte array complex type forc string n particularli effici alreadi b know b object string cast param object cast param type object cast return object string throw exec except type can not forc string public static string string object byte type throw exec except tri switch type case return integ string case return long string case return float string case return doubl string case return date time string case return datum byte array string case return string case return big integ string case return big decim string case return null case return boolean string case return byte string case case case case case default int err code string msg convert find type name string throw new exec except msg err code except catch class cast except cce throw cce catch exec except ee throw ee catch except e int err code string msg intern error could convert string throw new exec except msg err code except forc data object string possibl simpl atom type forc string includ byte array complex type forc string n particularli effici alreadi b know b object string cast unlik link string object byte method first determin type cast use link string object byte alreadi know type param object cast return object string throw exec except type can not forc string public static string string object throw exec except return string find type object map return map n particularli effici alreadi b know b object map cast param object cast return object map throw exec except type can not forc doubl suppress warn uncheck public static map string object map object throw exec except null return null instanceof map instanceof intern map tri return map string object catch except e int err code string msg intern error could convert map throw new exec except msg err code except els int err code string msg convert find type name map throw new exec except msg err code except object tupl return tupl n particularli effici alreadi b know b object tupl cast param object cast return object doubl throw exec except type can not forc doubl public static tupl tupl object throw exec except null return null instanceof tupl tri return tupl catch except e int err code string msg intern error could convert tupl throw new exec except msg err code except els int err code string msg convert find type name tupl throw new exec except msg err code except object bag return bag n particularli effici alreadi b know b object bag cast param object cast return object doubl throw exec except type can not forc doubl public static datum bag bag object throw exec except null return null instanceof datum bag tri return datum bag catch except e int err code string msg intern error could convert bag throw new exec except msg err code except els int err code string msg convert find type name data bag throw new exec except msg err code except pure debug public static void spill tupl content tupl string label system print tupl label iter object get iter int j next j system print j next get class get name system println string determin type numer type param type byte valu test return true numer type fals otherwis public static boolean number type byte switch case return true case return true case return true case return true case return true case return true default return fals determin type work do param type byte valu test return fals type unknown null error true otherwis public static boolean usabl type byte switch case return fals case return fals case return fals default return true test one type cast param cast type datum type cast type param input type datum type input return true fals public static boolean castabl byte cast type byte input type legal type cast data type usabl type cast type data type usabl type input type return fals type castabl cast type input type return true numer type castabl data type number type cast type data type number type input type return true databyt cast anyth input type data type return true cast numer type string vice versa valid data type number type input type cast type data type data type number type cast type input type data type return true els return fals return fals merg type possibl merg type mean find type one type upcast param type param type return merg type datum type success public static byte merg type byte type byte type legal type merg data type usabl type type data type usabl type type return data type type type type return type number return big type data type number type type data type number type type return type type type type one bytearray number chararray type data type return type type data type return type els return return data type give map turn string param map return string represent map public static string map string map string object boolean next fals string builder sb new string builder sb append map entri string object e entri set next sb append els next true sb append e get key sb append object val e get valu val null sb append val string sb append return sb string test whether two byte array java byte array byte array equal idea function param lh byte array param rh byte array return true null two length byte public static boolean equal byte array byte lh byte rh lh null rh null return true lh null rh null return fals lh length rh length return fals int lh length lh rh return fals return true util method determin schema pass datum type data type bag tupl need determin schema insid datum type iter field insid field method work raw object resourc schema resourc field schema field descript specif behavior determin klass paramet param datum type data type data type param field iter iter field tupl bag param field num number field insid field tupl param klass object resourc schema resourc field schema return throw exec except throw frontend except throw schema merg except suppress warn deprec privat static schema field schema determin field schema byte datum type iter field iter long field num class klass throw exec except frontend except schema merg except switch data type case return new schema field schema null case case case case case case case case case case case return new schema field schema null datum type case schema schema null field num schema new schema int field num schema add determin field schema klass cast field iter next return new schema field schema null schema case schema schema null schema bag schema null field num array list schema schema new array list schema field iter next schema add determin field schema klass cast field iter next schema schema schema get null schema schema field schema tupl fs new schema field schema null null bag schema new schema tupl fs bag schema set two level access requir true return new schema field schema null bag schema int schema size schema size int schema size schema curr schema schema get null curr schema curr schema size schema size schema field schema tupl fs new schema field schema null null bag schema new schema tupl fs bag schema set two level access requir true return new schema field schema null bag schema schema schema merg schema schema curr schema fals fals fals schema field schema tupl fs new schema field schema null schema bag schema new schema tupl fs sinc schema tupl field schema intern list field schema actual item bag access field bag two level access bag schema set two level access requir true return new schema field schema null bag schema default int err code string msg determin field schema throw new exec except msg err code except determin field schema resourc field schema param rc field schema rc field schema want translat return field schema correspond object throw exec except frontend except schema merg except public static schema field schema determin field schema resourc schema resourc field schema rc field schema throw exec except frontend except schema merg except byte dt rc field schema get type iter resourc schema resourc field schema field iter null long field num dt dt field iter array list rc field schema get schema get field iter field num rc field schema get schema get field length return determin field schema dt field iter field num resourc schema resourc field schema class determin field schema object param object whose field schema determin return field schema correspond object throw exec except frontend except schema merg except public static schema field schema determin field schema object throw exec except frontend except schema merg except byte dt find type iter field iter null long field num dt field iter tupl get iter field num tupl size els dt field num data bag size field iter data bag iter return determin field schema dt field iter field num object class 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java io buffer input stream import java io data input stream import java io data output stream import java io except import java io file input stream import java io file find except import java io except import java util array list import java util iter import java util list import org apach common log log import org apach common log log factori import org apach counter import org apach warn unord collect tupl possibl multipl tupl store list sinc concern order distinct public class default datum bag extend default abstract bag privat static final long serial version privat static final log log log factori get log default datum bag class privat static final inter sede inter sede factori get inter sede instanc public default datum bag content new array list tupl constructor creat bag exist list tupl take ownership list copi content list param list tupl list tupl contain tupl public default data bag list tupl list tupl content list tupl size list tupl size mark spillabl necessari overrid public boolean sort return fals overrid public boolean distinct return fals overrid public iter tupl iter return new default datum bag iter overrid public long spill make sure someth spill n creat empti file make mess content size return lock contain spill iter n tri read muck contain long spill synchron content datum output stream null tri get spill file catch except ioe remov last file spill array add file creat tmp file throw except warn unabl creat tmp file spill disk warn ioe return tri iter tupl content iter next write datum next data type spill spill everi record spill x fff report progress flush close null content clear catch throwabl e remov last file spill array sinc fail write spill file remov spill file size warn unabl spill content disk warn e return final null tri close catch except e warn error close spill warn e increment spill count inc spill count counter return spill iter handl get next tupl bag iter coupl issu deal first datum store combin memori disk second bag may ask spill iter read mean point someplac memori suddenli need switch disk file privat class default datum bag iter implement iter tupl buffer tupl easi way next tell whether anoth tupl avail read privat tupl buf null privat int memori ptr privat int file ptr privat datum input stream null privat int cntr privat boolean cach tupl fals default datum bag iter overrid public boolean next call next set flag call next repeat without fetch next tupl cach tupl return buf null buf next cach tupl true return buf null overrid public tupl next report progress everi time next much fast use mod cntr x ff report progress one buffer use one cach tupl tupl buf cach tupl fals return see read memori memori ptr still datum memori keep read lock check size obtain reader lock point forward can n spill we synchron content content size return read memori contain spill sinc last read n need hold lock alreadi spill we file pointer alreadi point new spill file either alreadi increment past end old spill file size need open new file fast forward past tupl alreadi read need reset memori ptr know read file next time come tri new datum input stream new buffer input stream new file input stream spill file get file ptr catch file find except fnfe can n find spill file never happen string msg unabl find spill file log fatal msg fnfe throw new runtim except msg fnfe int memori ptr tri read datum catch except eof never happen mean n dump tupl disk string msg ran tupl read prematur log fatal msg eof throw new runtim except msg eof catch except ioe string msg unabl read spill file log fatal msg ioe throw new runtim except msg ioe memori ptr return read file n read memori yet keep tri read file return read file implement overrid public void remov privat tupl read file null alreadi file open tupl tri tupl read datum return catch except eof fall next case find next file go memori tri close catch except e log warn fail close spill file e catch except ioe string msg unabl read spill file log fatal msg ioe throw new runtim except msg ioe need open next file one lock otherwis could decid file time decid start tri read memori contain could spill stuck anoth file read unlock immedi n need hold lock go read memori synchron content spill file null file ptr spill file size read everyth read file go look memori return read memori open next file call enter tri new datum input stream new buffer input stream new file input stream spill file get file ptr catch file find except fnfe can n find spill file never happen string msg unabl find spill file log fatal msg fnfe throw new runtim except msg fnfe return read file call know n spill assum content lock alreadi hold enter function privat tupl read memori content size return null memori ptr content size return list tupl content get memori ptr els return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java io byte array input stream import java io data input import java io data input stream import java io data output import java io except import java io unsupport encod except import java math big decim import java math big integ import java nio byte buffer import java util array list import java util iter import java util list import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop io writabl compar import org apach hadoop mapr job conf import org apach except import org apach backend executionengin exec except import org apach impl io nullabl tupl import org apach impl util object serial default implement tupl class creat default tupl factori public class default tupl extend abstract tupl privat static final long serial version protect list object field default constructor constructor public hadoop call directli howev insid never call function use tupl factori instead br time complex alloc public default tupl field new array list object construct tupl know number field packag level caller directli invok br result tupl fill pre fill null element time complex alloc param size number field alloc tupl default tupl int size field new array list object size int size field add null construct tupl exist list object packag level caller directli invok br time complex plu run time input object iter alloc param c list object turn tupl default tupl list object c field new array list object c construct tupl exist list object packag level caller directli invok br time complex param c list object turn tupl list keep part tupl param junk use differenti constructor copi list default tupl list object c int junk field c find size tupl use call ariti return number field tupl overrid public int size return field size get valu give field param field num number field get valu return valu object throw exec except field number great equal number field tupl overrid public object get int field num throw exec except return field get field num get field tupl list return list lt object gt contain field tupl order overrid public list object get return field set valu give field param field num number field set valu param val object put indic field throw exec except field number great equal number field tupl overrid public void set int field num object val throw exec except field set field num val append field tupl method effici may forc copi exist datum order grow datum structur whenev possibl construct tupl new tupl int method fill valu set rather construct new tupl append valu param val object append tupl overrid public void append object val field add val determin size tupl memori use datum bag determin memori size need exact decent estim return estim memori size overrid public long get memori size iter object field iter rest fix portion mfield size account within empti tupl size long mfield var size size util round eight field size java hotspot bit vm seem minimum tupl size probabl minimum size array list mfield var size math max mfield var size fix overhead byte tupl object header field refer field array list fix size long sum mfield var size next sum size util get obj mem size next return sum overrid public int compar object instanceof tupl tupl tupl int sz field size int sz size sz sz return els sz sz return els int sz tri int c data type compar field get get c return c catch exec except e throw new runtim except unabl compar tupl e return els return data type compar public static class default tupl raw compar extend writabl compar implement tupl raw compar privat final log log log factori get log get class privat boolean asc privat boolean whole tupl privat boolean null field privat tupl factori fact public default tupl raw compar super default tupl class overrid public configur get conf return null overrid public void set conf configur conf tri asc boolean object serial deseri conf get sort order catch except ioe log error unabl deseri sort order ioe get messag throw new runtim except ioe asc null asc new boolean asc true one entri asc mean whole tupl can not look column whole tupl asc length fact tupl factori get instanc overrid public boolean compar tupl null return null field compar two default tupl raw byte assum tupl nullabl writabl client class need deal null index overrid public int compar byte b int int l byte b int int l byte buffer bb byte buffer wrap b l byte buffer bb byte buffer wrap b l int rc compar default tupl bb bb true adjust secondari sort asc return rc compar two default tupl raw byte privat int compar default tupl byte buffer bb byte buffer bb boolean top level null field fals store posit case deseri int bb posit int bb posit int rc byte tupl type bb get byte tupl type bb get assert tupl type tupl type tupl type data type first compar size int sz bb get int int sz bb get int sz sz return els sz sz return els size compar field field int sz rc byte dt bb get byte dt bb get dt dt switch dt case data type top level scan top level tupl origin call null field true rc break case data type case data type byte bv bb get byte bv bb get rc bv bv bv bv break case data type int iv bb get int int iv bb get int rc iv iv iv iv break case data type long lv bb get long long lv bb get long rc lv lv lv lv break case data type float fv bb get float float fv bb get float rc float compar fv fv break case data type doubl dv bb get doubl doubl dv bb get doubl rc doubl compar dv dv break case data type bb get data type bb get data type throw new runtim except issu compar raw byte default tupl serial int basz bb get int int basz bb get int byte ba new byte basz byte ba new byte basz bb get ba bb get ba rc new big integ ba compar new big integ ba break case data type byte catyp bb get byte catyp bb get int casz catyp data type bb get short bb get int int casz catyp data type bb get short bb get int byte can new byte casz byte can new byte casz bb get can bb get can string str null str null tri str new string can data reader writer str new string can data reader writer catch unsupport encod except uee log warn unsupport string encod uee uee print stack trace str null str null rc new big decim str compar new big decim str break case data type long dtv bb get long bb posit bb posit move cursor forward without read timezon byte long dtv bb get long bb posit bb posit rc dtv dtv dtv dtv break case data type int basz bb get int int basz bb get int byte ba new byte basz byte ba new byte basz bb get ba bb get ba rc data byte array compar ba ba break case data type case data type int casz dt data type bb get short bb get int int casz dt data type bb get short bb get int byte can new byte casz byte can new byte casz bb get can bb get can string str null str null tri str new string can data reader writer str new string can data reader writer catch unsupport encod except uee log warn unsupport string encod uee uee print stack trace str null str null rc str compar str break case data type put back cursor data type bb posit bb posit bb posit bb posit rc compar default tupl bb bb fals break default log info unsupport data type binari comparison switch object deseri data type gen type name map get dt dt tupl fact new tupl tupl fact new tupl tri read field new datum input stream new byte array input stream bb array bb limit read field new datum input stream new byte array input stream bb array bb limit catch except ioe log error unabl instanti tupl comparison ioe get messag throw new runtim except ioe get messag ioe deleg compar tupl return compar tupl els compar datum type dt dt rc els rc flip order descend rc whole tupl asc rc els whole tupl asc rc return rc overrid public int compar object object nullabl tupl not nullabl tupl nullabl tupl not nullabl tupl int rc either null handl differ not null not null rc compar tupl tupl not get valu type tupl not get valu type els sort purpos two null equal not null not null rc els not null rc els rc whole tupl asc rc return rc privat int compar tupl tupl tupl int sz size int sz size sz sz return els sz sz return els int sz tri int c data type compar get get c whole tupl asc c els whole tupl asc c return c catch exec except e throw new runtim except unabl compar tupl e return overrid public int hash code int hash iter object field iter next object next null hash hash hash code return hash overrid public void write datum output throw except write byte data type int sz size write int sz int sz data reader writer write datum field get overrid public void read field data input throw except clear field case reus field clear make sure tupl byte b read byte b data type int err code string msg unexpect datum read tupl binari file throw new exec except msg err code except read number field int sz read int int sz tri append data reader writer read datum catch exec except ee throw ee public static class extend tupl raw compar get compar class return default tupl raw compar class 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import java util array list import java util list import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema import org apach parser sourc locat get one element tupl bag case tupl int b bag b int b b float c int number repres uid derefer int derefer singl column tupl give field derefer tupl int c int derefer one column give tupl derefer derefer b bag b b float derefer bag give bag public class derefer express extend column express privat list object raw column new array list object privat list integ column new array list integ column input bag project refer count zero base public derefer express oper plan plan super derefer plan plan add public derefer express oper plan plan int col num plan column add col num public derefer express oper plan plan list integ column num plan column add column num public void set raw column list object col raw column add col link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit public list integ get bag column return column public void set bag column list integ column column column raw column clear n need overrid public boolean equal oper throw frontend except null instanceof derefer express derefer express po derefer express po column size column size return fals return po column contain column get refer express equal po get refer express els return fals public logic express get refer express throw frontend except plan get successor size throw new frontend except could find relat project express derefer return logic express plan get successor get public string string string builder msg new string builder msg append name name type field schema null msg append data type find type name field schema type els msg append null msg append uid field schema null msg append field schema uid els msg append null msg append column column msg append return msg string overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema logic express successor logic express plan get successor get logic field schema pred successor get field schema pred null pred type data type logic schema inner schema null pred schema null inner schema new logic schema get tupl inner schema logic schema orig schema pred schema get field schema slice tupl inner schema raw column empti column translat alia po orig schema raw column int column column orig schema null orig schema size inner schema add field orig schema get field column els inner schema add field new logic field schema null null datum type logic schema bag schema new logic schema bag schema add field new logic schema logic field schema null inner schema data type logic express get next uid field schema new logic schema logic field schema null bag schema data type logic express get next uid uid field schema field schema merg uid uid field schema els derefer field tupl pred schema null raw column empti column translat alia po pred schema raw column pred schema null pred schema size column size field schema pred schema get field column get els logic schema inner schema new logic schema string alia pred alia int column column inner schema add field pred schema get field column string sub alia pred schema get field column alia sub alia null sub alia alia alia sub alia field schema new logic schema logic field schema alia inner schema data type logic express get next uid els field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema els field schema new logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema privat list integ translat alia po logic schema schema list object raw column throw frontend except list integ column new array list integ object raw column raw column raw column instanceof integ schema null integ raw column schema size integ raw column throw new frontend except index raw column rang schema schema string fals column add integ raw column els schema null int po schema get field posit string raw column po column add po continu els throw new frontend except find field raw column schema string fals return column overrid public logic express deep copi logic express plan lg exp plan throw frontend except list integ column copi new array list integ get bag column derefer express copi new derefer express lg exp plan column copi list object raw column copi new array list object raw column copi set raw column raw column copi one input expect logic express input logic express plan get successor get logic express input copi input deep copi lg exp plan lg exp plan add input copi lg exp plan connect copi input copi copi set locat new sourc locat locat return copi public list object get raw column return raw column 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util hash set import java util iter import java util set import org apach eval func import org apach except import org apach backend executionengin exec except import org apach datum bag factori import org apach datum datum bag import org apach datum tupl import org apach datum tupl factori take two bag argument compar tupl one bag return field bag return match empti bag return two record match p implement assum bag pass function fit entir memori simultan case still function strong strong slow public class extend eval func data bag tupl factori tupl factori tupl factori get instanc bag factori bag factori bag factori get instanc compar tupl two field emit differ param input tupl exactli two field throw except exactli two field tupl overrid public datum bag exec tupl input throw except input size int err code string msg expect two input receiv input size input throw new exec except msg err code except tri datum bag output bag factori new default bag object input get instanceof datum bag data bag bag datum bag data bag bag datum bag input get comput diff bag bag output els object input get object input get equal output add tupl factori new tupl output add tupl factori new tupl return output catch exec except ee throw ee privat void comput diff data bag bag datum bag bag datum bag emit build two hash tabl probe first one make assumpt distinct set key bag fit memori set tupl new hash set tupl iter tupl bag iter next add next set tupl new hash set tupl iter tupl bag iter next add next tupl contain emit add tupl contain emit add overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java io buffer input stream import java io data input stream import java io data output stream import java io except import java io file import java io file input stream import java io file find except import java io except import java util array list import java util array import java util collect import java util hash set import java util iter import java util link list import java util list iter import java util tree set import org apach common log log import org apach common log log factori import org apach counter import org apach warn unord collect tupl multipl datum store without duplic come time spill datum sort write disk must also sort upon first read otherwis spill happen iter would way find place new file datum store hash set time sort place array list sort dispit machin find fast store tree set public class distinct datum bag extend default abstract bag privat static final long serial version privat static final log log log factori get log distinct datum bag class privat static final inter sede inter sede factori get inter sede instanc public distinct datum bag content new hash set tupl overrid public boolean sort return fals overrid public boolean distinct return true overrid public long size spill file null spill file size need racalcul size guarante count uniqu entri includ disk iter tupl iter iter int new size iter next new size iter next synchron content n want add chang number lock may need cover method size new size return size overrid public iter tupl iter return new distinct datum bag iter overrid public void add tupl synchron content content add size mark spillabl necessari overrid public long spill make sure someth spill n creat empti file make mess content size return lock contain spill iter n tri read muck contain long spill synchron content datum output stream null tri get spill file catch except ioe remov last file spill array add file creat tmp file throw except warn unabl creat tmp file spill disk warn ioe return tri alreadi start read alreadi sort array list need sort write content instanceof array list iter tupl content iter next write datum next data type spill spill everi record spill x fff report progress els tupl array new tupl content size content array array array sort array int array length array write spill spill everi record spill x fff report progress flush close null content clear catch throwabl e remov last file spill array sinc fail write spill file remov spill file size warn unabl spill content disk warn e return final null tri close catch except e warn error close spill warn e increment spill count inc spill count counter return spill iter handl get next tupl bag iter coupl issu deal first datum store combin memori disk second bag may ask spill iter read mean point someplac memori suddenli need switch disk file privat class distinct datum bag iter implement iter tupl privat class contain implement compar contain public tupl tupl public int file num overrid suppress warn uncheck public int compar contain return tupl compar tupl overrid public boolean equal object obj obj instanceof contain return tupl equal contain obj tupl els return fals overrid public int hash code return tupl hash code buffer tupl easi way next tell whether anoth tupl avail read privat tupl buf null privat int memori ptr privat tree set contain merg tree null privat array list data input stream stream null privat int cntr suppress warn uncheck distinct datum bag iter first read need sort datum synchron content content instanceof hash set pre merg first reader need sort datum case get dump we array list tupl l new array list tupl content collect sort l content l overrid public boolean next see find tupl buffer buf next return buf null overrid public tupl next report progress everi time next much fast use mod cntr x ff report progress one buffer use one buf null tupl buf buf null return check see need read memori boolean spill fals synchron content spill file null spill file size return read memori memori ptr content size spill true check see read memori spill spill data input stream need open new file fast forward past tupl alreadi read need place first tupl file prioriti queue whatev tupl memori alreadi queue fine guarante ahead point fast foward guarante file want read fast forward last element spill file n support call add call iter spill will not creat empti file tri new datum input stream new buffer input stream new file input stream spill file get spill file size stream null merg tree new tree set contain n file spill stream new array list data input stream stream add catch file find except fnfe can n find spill file never happen string msg unabl find spill file log fatal msg fnfe throw new runtim except msg fnfe fast forward past tupl alreadi put queue int memori ptr tri read datum catch except eof never happen mean n dump tupl disk throw new runtim except ran tupl read prematur eof catch except ioe string msg unabl find spill file log fatal msg ioe throw new runtim except msg ioe memori ptr add next tupl file queue add queue null spill file size fall read next entri prioriti queue spill file need read next tupl one file memori return read tree implement overrid public void remov privat tupl read tree merg tree null first read need set queue array file stream merg tree new tree set contain add one size case spill later stream new array list data input stream spill file size iter file spill file iter next tri datum input stream new datum input stream new buffer input stream new file input stream next stream add add first tupl file merg queue add queue null stream size catch file find except fnfe can n find spill file never happen string msg unabl find spill file log fatal msg fnfe throw new runtim except msg fnfe prime one memori content size add queue null merg tree size return null pop top one queue contain c merg tree first merg tree remov c add next tupl whereev read queue buffer tupl return reus c tupl c tupl add queue c c file num return privat void add queue contain c int file num c null c new contain c file num file num file num need read memori may spill sinc tupl put queue henc memori might empti n care will n add memori synchron content c tupl read memori c tupl null find uniqu entri add queue otherwis ignor keep read merg tree add c return c tupl null return read next tupl indic file datum input stream stream get file num null still datum file tri c tupl tupl read datum find uniqu entri add queue otherwis ignor keep read run tupl read fine wo n add new one file merg tree add c return catch except eof tupl file set slot array null n keep tri read file tri close catch except e log warn fail close spill file e stream set file num null return catch except ioe string msg unabl find spill file log fatal msg ioe throw new runtim except msg ioe true function assum reader lock alreadi hold enter function privat tupl read memori content size return null memori ptr content size return array list tupl content get memori ptr els return null pre merg mani spill file avoid issu larg fan merg experiment hadoop team show optim number spill file function modifi spill file array assum write lock alreadi hold unlock tupl reconstitut tupl evalu rewrit tupl expens n know read tupl file otherwis function slightli differ one sort data bag use tree set instead prioriti privat void pre merg spill file null spill file size return max spill file gather max spill file togeth merg one file remov other spill file new spill file attach end list keep go get small enough number without much concern uneven size merg convert spill file link list sinc remov piec middl want effici tri link list file new link list file spill file link list file file delet new link list file size list iter file list iter stream new array list data input stream merg tree new tree set contain int j j j tri file f next datum input stream new datum input stream new buffer input stream new file input stream f stream add add queue null stream size remov file delet add f catch file find except fnfe can n find spill file neer happen string msg unabl find spill file log fatal msg fnfe throw new runtim except msg fnfe get new spill file add one end spill file list need append link list well still move link list back spill file datum output stream null tri get spill file add spill file get spill file size tupl read tree null write flush catch except ioe string msg unabl find spill file log fatal msg ioe throw new runtim except msg ioe final null tri close catch except e warn error close spill warn e delet file merg new file file f file delet f delet fals log warn fail delet spill file f get path clear list final delet file spill file assign new valu spill file clear move new list back spill file array spill file new file list final reset stream merg alloc properli regular merg stream null merg tree null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java math big decim import java math big integ import java math round mode import org apach common log log import org apach common log log factori import org apach warn import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except public class divid extend binari express oper privat static final long serial version public static final short privat static final log log factori get log divid class public divid oper key k super k public divid oper key k int rp super k rp overrid public void visit phi plan visitor v throw visitor except v visit divid overrid public string name return divid data type find type name result type key string method use invok appropri method java provid gener dispatch protect number divid number number b byte datum type throw exec except switch datum type case data type return doubl valu doubl doubl b case data type return integ valu integ integ b case data type return long valu long long b case data type return float valu float float b case data type return big integ divid big integ b case data type return big decim divid scale b default throw new exec except call unsupport number class data type find type name data type privat number big decim divid scale number number b use result scale hive see arithmet rule http cwiki apach org confluenc download attach hive decim precis scale support pdf int result scale math max big decim scale big decim b precis debug enabl debug bigdecim divid use result scale result scale return big decim divid big decim b result scale round mode method use invok appropri method java provid gener dispatch protect boolean equal zero number byte datum type throw exec except switch datum type case data type return doubl equal case data type return integ equal case data type return long equal case data type return float equal f case data type return big integ equal big integ case data type return big decim equal big decim default throw new exec except call unsupport number class data type find type name datum type protect result gener get next byte datum type throw exec except result be accum child null datum type r null return be byte statu result re re lh get next datum type statu re return statu statu statu re result null return re number leav number re result re rh get next datum type statu re return statu statu statu re result null return re number right number re result equal zero right datum type logger null logger warn divid zero convert warn re result null els re result divid leav right datum type return re overrid public result get next doubl throw exec except return gener get next data type overrid public result get next float throw exec except return gener get next data type overrid public result get next integ throw exec except return gener get next data type overrid public result get next long throw exec except return gener get next data type overrid public result get next big integ throw exec except return gener get next data type overrid public result get next big decim throw exec except return gener get next data type overrid public divid clone throw clone support except divid clone new divid new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat divid oper public class divid express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public divid express oper plan plan logic express lh logic express rh super divid plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof divid express divid express ao divid express return ao get lh equal get lh ao get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null get lh get type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new divid express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util iter import org apach accumul import org apach algebra import org apach eval func import org apach except import org apach backend executionengin exec except import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl logic layer schema schema method never use directli use link public class doubl avg extend eval func doubl implement algebra accumul doubl privat static tupl factori tupl factori tupl factori get instanc overrid public doubl exec tupl input throw except tri doubl sum sum input sum null either hand empti bag bag fill null return null case return null doubl count count input doubl avg null count avg new doubl sum count return avg catch exec except ee throw ee overrid public string get initi return initi class get name overrid public string get interm return intermedi class get name overrid public string get final return final class get name static public class initi extend eval func tupl overrid public tupl exec tupl input throw except tri tupl tupl factori new tupl input bag one tupl contain column tri avg data bag bg data bag input get doubl null bg iter next tupl tp bg iter next doubl tp get set null set els set return catch exec except ee throw ee catch except e int err code string msg error comput averag get class get simpl name throw new exec except msg err code except e static public class intermedi extend eval func tupl overrid public tupl exec tupl input throw except tri datum bag b datum bag input get return combin b catch exec except ee throw ee catch except e int err code string msg error comput averag get class get simpl name throw new exec except msg err code except e static public class final extend eval func doubl overrid public doubl exec tupl input throw except tri datum bag b datum bag input get tupl combin combin b doubl sum doubl combin get sum null return null doubl count long combin get doubl avg null count avg new doubl sum count return avg catch exec except ee throw ee catch except e int err code string msg error comput averag get class get simpl name throw new exec except msg err code except e static protect tupl combin datum bag valu throw exec except doubl sum long count combin call intermedi final either case initi would call would send valid tupl henc n need check incom bag empti tupl output tupl factori new tupl boolean saw non null fals iter tupl valu iter next tupl next doubl doubl get count null avg contribut departur perform implement inspect size bag null els see non null true sum count long get see non null output set new doubl sum els output set null output set long valu count return output static protect long count tupl input throw exec except data bag valu datum bag input get iter valu iter long cnt next tupl tupl next null size get null cnt return cnt static protect doubl sum tupl input throw exec except except data bag valu datum bag input get hand empti bag return valu null valu size return null doubl sum boolean saw non null fals iter tupl valu iter next tupl next tri doubl doubl get null continu saw non null true sum catch runtim except exp int err code string msg problem comput sum doubl throw new exec except msg err code except exp see non null return new doubl sum els return null overrid public schema output schema schema input return new schema new schema field schema null datum type accumul interfac privat doubl intermedi sum null privat doubl intermedi count null overrid public void accumul tupl b throw except tri doubl sum sum b sum null return set default valu intermedi sum null intermedi count null intermedi sum intermedi count doubl count long count b count intermedi count count intermedi sum sum catch exec except ee throw ee catch except e int err code string msg error comput averag get class get simpl name throw new exec except msg err code except e overrid public void cleanup intermedi sum null intermedi count null overrid public doubl get valu doubl avg null intermedi count null intermedi count avg new doubl intermedi sum intermedi count return avg 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin method never use directli use link public class doubl sum extend algebra doubl math base public doubl sum set op public static class intermedi extend algebra doubl math base intermedi overrid public get op return public static class final extend algebra doubl math base final overrid public get op return 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach parser import java io except import java io reader import java util abstract list import java util array list import java util array import java util hash map import java util list import org antlr runtim common token stream import org antlr runtim recognit except import org antlr runtim tree common tree import org antlr runtim tree common tree node stream import org antlr runtim tree tree import org apach load func import org apach impl context import org apach tool pigscript parser pars except import org apach tool pigscript parser script parser public class dri run grunt parser extend script parser privat string builder sb new string builder privat context context privat tree parser tree privat string sourc privat int skip privat boolean do fals privat boolean macro fals public dri run grunt parser reader stream string sourc context context super stream sourc sourc context context public string get result return sb string public boolean pars stop error throw except do fals do tri pars catch pars except e throw new parser except dri run pars fail e return macro overrid public void prompt overrid protect void quit do true overrid protect void print alia throw except overrid protect void process fs command string cmd token throw except string cmd load func join abstract list string array list cmd token sb append f append cmd append n overrid protect void process sh command string cmd token throw except string cmd load func join abstract list string array list cmd token sb append sh append cmd append n overrid protect void process command string cmd throw except sb append sql append cmd append n overrid protect void process describ string alia throw except sb append describ append alia append n overrid protect void process explain string alia string script boolean verbos string format string target list string param list string file throw except pars except sb append explain script null sb append script append script append target null sb append append target append verbos sb append brief format null format equal dot sb append dot format null format equal xml sb append xml param null string param param sb append param append param append file null string file file sb append param file append file append alia null sb append alia sb append n overrid protect void process regist string jar throw except sb append regist append jar append n overrid protect void process regist string path string script engin string namespac throw except pars except sb append regist append path append script engin null sb append use append script engin namespac null sb append append namespac sb append n overrid protect void process set string key string valu throw except pars except sb append set append key append append valu append n overrid protect void process set throw except sb append set n overrid protect void process cat string path throw except sb append cat append path append n overrid protect void process string path throw except sb append cd append path append n overrid protect void process dump string alia throw except sb append dump append alia append n overrid protect void process kill string jobid throw except sb append kill append jobid append n overrid protect void process string path throw except sb append l path null sb append append path sb append n overrid protect void process throw except sb append pwd n overrid protect void print help overrid protect void process histori boolean number overrid protect void process move string src string dst throw except sb append mv append src append append dst append n overrid protect void process copi string src string dst throw except sb append cp append src append append dst append n overrid protect void process copi local string src string dst throw except sb append copi local append src append append dst append n overrid protect void process copi local string src string dst throw except sb append copi local append src append append dst append n overrid protect void process mkdir string dir throw except sb append mkdir append dir append n overrid protect void process string cmd throw except int start get line number string builder blder new string builder int start bld append n cmd char cmd length cmd blder append cmd cmd blder string common token stream token stream queri parser driver token cmd sourc tree ast null tri ast queri parser driver pars token stream catch runtim except ex throw new parser except ex get messag macro list common tree import node new array list common tree list common tree macro node new array list common tree list common tree inlin node new array list common tree queri parser driver travers import ast import node queri parser driver travers ast macro node inlin node import node empti macro node empti inlin node empti macro true parser tree null parser tree ast els int n ast get child count int n parser tree add child ast get child common tree dup common tree parser tree dup node dup add child common tree parser tree get child queri parser driver driver new queri parser driver context new hash map string string tree new ast driver expand macro dup common tree node stream node new common tree node stream new ast ast printer walker new ast printer node tri walker queri catch recognit except e throw new parser except fail print command cmd e string result walker get result trim result empti string line result split n int skip line length sb append line append n skip overrid protect void process remov string path string opt throw except opt null opt equal ignor case forc sb append rm els sb append rmf sb append path append n overrid protect void process illustr string alia string script string target list string param list string file throw except pars except sb append illustr script null sb append script append script append target null sb append append target append param null string param param sb append param append param append file null string file file sb append param file append file append alia null sb append alia sb append n overrid protect void process script string script boolean batch list string param list string file throw except pars except batch sb append exec els sb append run param null string param param sb append param append param append file null string file file sb append param file append file append sb append script append n overrid protect void print clear overrid protect void process default string key string valu throw except overrid protect void process declar string key string valu throw except 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer plan import org apach backend hadoop executionengin map reduc layer map reduc oper import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper collect group import org apach backend hadoop executionengin physic layer relat oper import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach backend hadoop executionengin physic layer relat oper merg cogroup import org apach backend hadoop executionengin physic layer relat oper merg join import org apach backend hadoop executionengin physic layer relat oper partial agg import org apach backend hadoop executionengin physic layer relat oper poisson sampl import org apach backend hadoop executionengin physic layer relat oper reservoir sampl import org apach backend hadoop executionengin physic layer relat oper stream import org apach backend hadoop executionengin tez plan oper build bloom rearrang tez import org apach impl plan depth first walker import org apach impl plan visitor except visitor visit plan follow oper map plan reduc plan oper end input flag present mark oper whether map end input flag set reduc end input flag set public class end input setter extend op plan visitor param plan plan visit public end input setter oper plan plan super plan new depth first walker map reduc oper oper plan plan overrid public void visit op map reduc oper mr throw visitor except end input checker checker new end input checker mr map plan checker visit checker end input present mr set end input map true checker new end input checker mr reduc plan checker visit checker end input present mr set end input reduc true public static class end input checker extend phi plan visitor privat boolean end input flag fals public end input checker physic plan plan super plan new depth first walker physic oper physic plan plan overrid public void visit stream stream stream throw visitor except stream present end input flag true overrid public void visit merg join merg join join throw visitor except merg join present end input flag true overrid public void visit collect group collect group mg throw visitor except map side group present end input flag true overrid public void visit merg co group merg cogroup merg co grp throw visitor except end input flag true overrid public void visit partial agg partial agg part agg throw visitor except end input flag true overrid public void visit reservoir sampl reservoir sampl reservoir sampl throw visitor except end input flag true overrid public void visit poisson sampl poisson sampl poisson sampl throw visitor except end input flag true overrid public void visit foreach throw visitor except tri foreach need end input process end input flag true catch except e throw new visitor except e overrid public void visit local rearrang local rearrang lr throw visitor except lr instanceof build bloom rearrang tez end input flag true super visit local rearrang lr return end input present public boolean end input present return end input flag 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat equal test express public class equal express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public equal express oper plan plan logic express lh logic express rh super equal plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof equal express equal express eo equal express return eo get lh equal get lh eo get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new equal express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java util hash map import org apach common log log import org apach common log log factori import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except public class equal expr extend binari comparison oper privat static final long serial version transient privat final log log log factori get log get class public equal expr oper key k k public equal expr oper key k int rp super k rp result type data type overrid public string name return equal data type find type name result type key string overrid public void visit phi plan visitor v throw visitor except v visit equal overrid public result get next boolean throw exec except tri result leav right switch operand type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type result be accum child null operand type r null return be leav lh get next operand type right rh get next operand type return comparison leav right default int err code string msg get class get simpl name know handl type data type find type name operand type throw new exec except msg err code except catch runtim except e throw new exec except except execut string e string except e suppress warn uncheck privat result comparison result leav result right throw exec except leav return statu statu return left right return statu statu return right either operand null result null left result null right result null left result null left return statu statu return left left result instanceof compar right result instanceof compar compar left result compar right result leav result boolean els leav result boolean els leav result instanceof hash map right result instanceof hash map hash map leav map hash map leav result hash map right map hash map right result leav map equal right map leav result boolean els leav result boolean els throw new exec except leav side right side differ type illustr markup null left result boolean leav result return leav overrid public equal expr clone throw clone support except equal expr clone new equal expr new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import org apach common log log import org apach common log log factori import org apach backend hadoop executionengin physic layer logger import org apach backend hadoop executionengin physic layer progress import org apach builtin output schema import org apach classif interfac audienc import org apach classif interfac stabil import org apach datum tupl import org apach impl context import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl util context import org apach impl util util import org apach parser parser except import java io except import java lang reflect import java util hash map import java util list import java util map class use implement function appli field dataset function appli tupl set programm make assumpt state maintain invoc exec method sinc runtim schedul local invoc base inform provid runtim programm also make assumpt mani time class instanti sinc may instanti multipl time front back end interfac audienc public interfac stabil stabl public abstract class eval func report send heartbeat hadoop exec take second link progress progress call occasion avoid timeout default hadoop timeout second protect progress report log object log call make front end send log client log call make backend send stdout see hadoop log protect log log log factori get log get class logger aggreg warn warn send user log via link logger warn protect logger logger privat static int next schema id assign uniqu id column protect string get schema name string name schema input string alia name input null input get alias size alia input get alias iter next alia next schema id return alia return type instanc eval func protect type return type eval func schema type see link eval func get schema type public static enum schema type default field type last field udf schema type vararg public eval func resolv concret type eval func build map type param type class hierarchi current class eval func map type variabl type type type variabl new hash map type variabl type class cl get class type type cl get gener superclass cl cl get superclass eval func class assign cl type variabl extend class type param cl get type paramet type instanceof parameter type parameter type p type parameter type type type type arg p type get actual type argument int type param length type type variabl put type param type arg type cl get gener superclass cl cl get superclass use type param type map determin concret type eval func type target type eval func class get type paramet target type null target type instanceof type variabl target type type type variabl get target type target type null target type instanceof gener array type target type instanceof wildcard type throw new runtim except string format fail determin concret type type paramet eval func deriv class get class get name return type target type type check initi intermedi final function instanceof algebra algebra algebra string err msg function get class get name expect type get return type spec new func spec get initi tupl class throw new runtim except initi err msg get return type spec new func spec get interm tupl class throw new runtim except intermedi err msg get return type spec new func spec get final equal return type throw new runtim except final err msg privat type get return type spec func spec func spec tri return eval func context instanti func spec func spec get return type catch class cast except e throw new runtim except func spec specifi eval func e get type eval func return return type public type get return type return return type report progress make otherwis hadoop time second work one outer tupl util method allow report progress exec take second link progress progress call occasion avoid timeout default hadoop timeout second public final void progress report null report progress els warn report object provid warn issu warn warn messag aggreg report user param msg string messag warn param warn enum type warn public final void warn string msg enum warn enum logger null logger warn msg warn enum els log warn logger object provid get class get name msg placehold cleanup perform end user defin function overrid default implement op public void finish callback method must implement subclass method invok everi tupl give dataset sinc dataset may divid varieti way programm make assumpt state maintain invoc method param input tupl process return result type throw except abstract public exec tupl input throw except report schema output make use error check optim plan schema input datum provid p default implement interpret link output schema annot one present otherwis return code null code know output schema param input schema input return schema output public schema output schema schema input output schema schema get class get annot output schema class tri return schema null null util get schema string schema valu catch parser except e throw new runtim except e function overriden return true function return valu asynchron current never attempt execut function asynchron return true function execut asynchron deprec public boolean asynchron return fals public progress get report return report set report call provid refer report param report hadoop report public final void set report progress report report report allow specifi type specif implement exampl implement arithmet sum might int float implement sinc integ arithmet perform much good float point arithmet typecheck call method use return list plu schema function input datum decid implement use return list contain func spec object repres eval func class handl input correspond schema object func spec construct schema describ input implement exampl sum function would return two element list ol li func spec get class get name new schema new schema field schema null datum type li func spec int sum get class get name new schema new schema field schema null datum type ol would indic main implement use doubl special implement int sum use int public list func spec get arg func map throw frontend except return null allow specifi list hdf file would like place distribut cach file put cach everi job use default implement return null return list file public list string get cach file return null allow specifi list local file would like place distribut cach file put cach everi job use check link func util util function facilit default implement return null return list file public list string get ship file return null public logger get logger return logger set logger object call provid refer param logger logger object public final void set logger logger logger logger logger public log get logger return log privat schema input schema intern null method call front end back end pass uniqu signatur link eval func signatur use store link context inform link eval func need store variou method invoc front end back end param signatur uniqu signatur identifi eval func public void set context signatur string signatur method intern use call core front end back end setup right input schema eval func public void set input schema schema input input schema intern input method intend call user link eval func get input schema eval func public schema get input schema return input schema intern return link schema type eval func user defin function overrid method return link schema type case last field schema add schema link get arg func map consid vararg field return schema type public schema type get schema type return schema type whether evalu compil time input constant applic howev access hdf file avail compil time fals return whether compil time calcul allow default fals ensur legaci get right behavior public boolean allow compil time calcul return fals public boolean need end input process return fals public void set end input boolean end input call front end back end execut return link load caster associ eval return null indic cast bytearray pick one associ paramet come loadcast type throw except except load caster public load caster get load caster throw except return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach pen import java io except import java util collect import java util hash map import java util iter import java util link list import java util list import java util map import org apach common log log import org apach common log log factori import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer execut engin import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper load import org apach datum datum bag import org apach datum tupl import org apach impl context import org apach impl io file local import org apach impl logic layer frontend except import org apach impl util ident hash set import org apach newplan oper import org apach newplan logic relat import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat sort import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach pen util display exampl import org apach pen util lineag tracer class use gener exampl tupl purpos public class exampl gener logic plan plan logic plan new plan map load datum bag base datum null context context physic plan phi plan physic plan resett phi plan reset privat execut engin exec engin privat local map reduc simul local runner log log log factori get log get class privat int privat map oper physic oper log phi map privat map physic oper oper po load log map privat map physic oper oper po log map privat hash map physic oper collect ident hash set tupl po eqclass map privat lineag tracer lineag privat map oper data bag log data map null privat map map logic relat oper data bag inner log data map map map logic relat oper physic oper inner log phi map map limit long ori limit map null map load logic schema po load schema map public exampl gener logic plan plan context hadoop context plan plan context new context exec type hadoop context get properti context hadoop context context set exec type exec type file local set initi fals tri context connect catch exec except e log error error connect cluster e get local messag exec engin new execut engin context local runner new local map reduc simul po load schema map new hash map load logic schema public lineag tracer get lineag return lineag public map oper physic oper get log phi map return log phi map public void set max record int max max public map oper data bag get exampl throw except interrupt except context get properti get properti usenewlogicalplan true equal fals throw new exec except must use new logic plan context illustr true phi plan compil plan plan phi plan reset new physic plan resett phi plan list oper load new plan get sourc list physic oper p root phi plan get root load size p root size throw new exec except logic physic plan differ number root log phi map exec engin get log phi map inner log phi map exec engin get inner log phi map plan po load log map new hash map physic oper oper log data map new hash map oper data bag po log map new hash map physic oper oper set foreach inner datum map inner log data map new hash map map logic relat oper data bag map entri map logic relat oper physic oper entri inner log phi map entri set map logic relat oper data bag inner map new hash map logic relat oper data bag inner log data map put entri get key inner map oper load load po load log map put log phi map get load load boolean limit fals oper lo log phi map key set po log map put log phi map get lo lo limit lo instanceof limit limit true tri read base data load catch exec except e log error error read datum e get messag throw e catch frontend except e log error error read datum e get messag throw new runtim except e map oper data bag deriv datum null creat deriv datum trim base datum lineag trim visitor trimmer new lineag trim visitor new plan base data log phi map phi plan context trimmer visit base datum trimmer get base data system println obtain first level deriv trim datum creat new deriv datum trim basedata deriv datum get datum phi plan system println get new deriv datum trim base datum augment base datum augment base data visitor augment new augment base data visitor new plan log phi map base datum deriv datum augment visit base datum augment get new base data system println obtain augment base datum creat new deriv datum trim base datum augment base datum synthet tupl trimmer new lineag trim visitor new plan base data log phi map phi plan context trimmer visit base datum trimmer get base data system println final trim creat final version deriv datum give output deriv datum get datum phi plan system println obtain final deriv datum output limit augment set limit augment visit base datum augment get new base data ori limit map augment get ori limit map deriv datum get datum display exampl print simpl plan get leav get deriv datum deriv data system println display exampl print tabular new plan deriv data inner log data map context illustr fals return deriv datum privat void read base data list oper load throw except interrupt except frontend except exec except physic plan phi plan new physic plan oper op load logic schema schema load op get schema schema null throw new exec except exampl gener requir schema pleas provid schema load datum po load schema map put load log phi map get op schema phi plan add log phi map get op base data null map oper data bag result get datum phi plan base datum new hash map load datum bag oper lo result key set lo instanceof load base datum put load lo result get lo physic plan compil plan logic plan plan throw exec except frontend except new plan new logic plan plan plan optim context physic plan result exec engin compil plan null return result public map oper data bag get datum throw except interrupt except return get datum phi plan privat map oper data bag get data physic plan plan throw except except interrupt except get datum physic plan possibl trim one branch lineag new lineag tracer illustr attach attach new illustr attach plan lineag po load schema map context attach visit ori limit map null map entri limit long entri ori limit map entri set log phi map get entri get key get illustr set origin limit entri get valu get log data map attach get datum map base datum null set load data map phi plan reset visit local runner launch plan base datum lineag attach context base datum null po eqclass map attach po eqclass map els map entri physic oper collect ident hash set tupl entri attach po eqclass map entri set entri get key instanceof load po eqclass map put entri get key entri get valu base datum null non deriv datum gener phi transform plan attach get data map return log data map public map oper data bag get datum map load datum bag new base data throw except base datum new base data return get datum phi plan privat void phi transform physic plan plan map physic oper data bag phi data map remap result compil may chang plan map physic oper physic oper phi map local runner get phi map map entri physic oper oper entri po log map entri set phi map get entri get key null physic oper po phi map get entri get key log data map put entri get valu phi data map get po po eqclass map put entri get key po eqclass map get po privat void get log data map map physic oper data bag phi data map log data map clear oper lo log phi map key set log phi map get lo null log data map put lo phi data map get log phi map get lo set datum map inner plan map entri map logic relat oper data bag entri inner log data map entri set entri get valu clear map entri logic relat oper physic oper inner entri inner log phi map get entri get key entri set entri get valu put inner entri get key phi data map get inner entri get valu privat void set load data map function set datum map eq class lineag base datum use come runner must call log data map properli set runner start base datum null po eqclass map null po eqclass map new hash map physic oper collect ident hash set tupl els po eqclass map clear load lo base datum key set log data map get lo add base datum get lo link list ident hash set tupl equival class new link list ident hash set tupl ident hash set tupl equival class new ident hash set tupl equival class add equival class tupl base datum get lo lineag insert equival class add po eqclass map put log phi map get lo equival class public collect ident hash set tupl get eq class map logic relat oper collect ident hash set tupl log eqclass map get lo eq class map link list ident hash set tupl ret new link list ident hash set tupl map entri logic relat oper collect ident hash set tupl entri log eqclass map entri set entri get valu null ret add entri get valu return ret public map logic relat oper collect ident hash set tupl get lo eq class map map logic relat oper collect ident hash set tupl ret equival class get lo eq class map phi plan new plan log phi map log data map inner log phi map po eqclass map eq class adjust base upon logic oper map entri logic relat oper collect ident hash set tupl entri ret entri set entri get key instanceof sort collect ident hash set tupl eq class entri get valu iter ident hash set tupl eq class iter next object null ident hash set tupl eq class next eq class size eq class clear continu boolean first true ident true iter tupl eq class iter next first first fals next els next equal ident fals break ident eq class clear return ret 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach pen util import java io data input import java io data output import java io except import java util list import org apach backend executionengin exec except import org apach datum tupl import org apach datum abstract tupl exampl tupl add boolean tupl synthet say whether tupl gener synthet omitt futur use case want attach weight tupl display earli public class exampl tupl extend abstract tupl privat static final long serial version public boolean synthet fals public boolean omitt true object expr null tupl null public exampl tupl public exampl tupl object expr expr expr public exampl tupl tupl like tupl interfac n access intern structur overrid public string string return string writabl method overrid public void write datum output throw except write write boolean synthet write boolean omitt overrid public void read field data input throw except read field synthet read boolean omitt read boolean public tupl tupl return overrid public void append object val append val overrid public object get int field num throw exec except return get field num overrid public list object get return get overrid public long get memori size return get memori size overrid public byte get type int field num throw exec except return get type field num overrid public boolean null int field num throw exec except return null field num overrid public void refer tupl refer overrid public void set int field num object val throw exec except set field num val overrid public int size return size overrid suppress warn uncheck public int compar object return compar 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend executionengin import java util iter import java util properti import java io output stream import org apach backend hadoop executionengin physic layer relat oper store import org apach datum tupl import org apach tool pigstat stat abstract job execut engin run allow front end retriev inform job statu manag run job public interfac exec job public enum public static final string job progress public get statu true physic plan execut success result readi retriev return true execut complet fals otherwis throw exec except public boolean complet throw exec except queri execut success want retriev result via iter return iter result tupl throw exec except public iter tupl get result throw exec except return alia relat gener job public string get alia throw exec except get configur inform return configur inform execut engin public properti get configur inform state submit e g execut method call yet run e g execut issu job wait run complet abort progress inform return statist relev execut engin public stat get statist return link store object associ store public store get store hook asynchron notif job complet push back end public void complet notif object cooki kill current job throw exec except public void kill throw exec except collect variou form output public void get log output stream log throw exec except public void get output stream throw exec except public void get error output stream error throw exec except get except happen execut public except get except 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import java io serializ import java util properti import org apach backend executionengin execut engin import org apach backend hadoop executionengin map reduc layer local exec type import org apach backend hadoop executionengin map reduc layer exec type import org apach classif interfac audienc import org apach classif interfac stabil import org apach impl context type queri execut cycl implement exec type choos first one match properti pass exec type dictat execut engin use process behaviour throughout implement class note servic folder titl org apach exec type per java servic loader specif interfac audienc public interfac stabil evolv public interfac exec type extend serializ public static final exec type new local exec type public static final exec type new exec type exec type select base properti give script may multipl set trigger select give exec type exampl distribut mode current trigger user specifi mapr mapreduc desir overrid string method give exec type uniqu identifi exec type initi method return true accept properti fals java servic loader framework use iter select correct exec type public boolean accept properti properti return execut engin exec type associ exec type script run determin server call method get instanc execut engin associ exec type deleg execut backend public execut engin get execut engin context context return execut engin class exec type associ method simpli return class execut engin associ exec type instanc public class extend execut engin get execut engin class exec type classifi local run process local filesystem execut engin may nuanc notion local mode qualif requir execut engin extend exec type interfac addit differenti exec type necessari public boolean local return canon name exec type return public string name 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import java util properti import java util servic loader import org apach common log log import org apach common log log factori import org apach backend hadoop executionengin map reduc layer local exec type import org apach backend hadoop executionengin map reduc layer exec type import org apach impl util properti util public class exec type provid privat static final log log log factori get log exec type provid class public static exec type select exec type properti properti throw except servic loader exec type framework loader servic loader load exec type class exec type exec type framework loader log info tri exec type exec type exec type accept properti log info pick exec type exec type return get singleton exec type els log debug pick exec type exec type throw new except unknown exec type properti get properti exectyp method attempt return singleton instanc give exec type work exec type exec type constant codebas param exec type return privat static exec type get singleton exec type exec type exec type instanceof exec type return exec type exec type instanceof local exec type return exec type specif rather differ execut engin n access constant act singleton use give instanc return exec type public static exec type string string exec type throw except properti properti properti util load default properti properti set properti exectyp exec type return select exec type properti 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl stream import java io buffer input stream import java io buffer output stream import java io buffer reader import java io data input stream import java io data output stream import java io except import java io input stream import java io input stream reader import java util concurr block queue import org apach common log log import org apach common log log factori import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer relat oper stream import org apach datum tupl import org apach impl io buffer posit input stream import org apach impl stream input handler input type import org apach impl stream output handler output type import org apach impl util context link execut manag manag extern execut process datum queri code execut manag code respons startup teardown extern process also manag feed input record execut via code stdin code collect output record code stdout code also diagnost inform code stdout code public class execut manag privat static final log log factori get log execut manag class privat static final int privat static final result new result statu null protect stream command command stream command run process process handl process protect int exit code exit code process protect data output stream stdin stdin process process input thread stdin thread thread send input process process output thread stdout thread thread get process stdout input stream stdout stdout process process error thread stderr thread thread get process stderr input stream stderr stderr process input output handler input handler input handler output handler output handler statist protect long input record protect long input byte protect long output record protect long output byte protect volatil throwabl outerr thread error privat stream po stream privat process input thread file input thread creat new link execut manag public execut manag configur initi link execut manag param stream stream oper throw except throw exec except public void configur stream stream throw except exec except po stream stream command stream get command creat input output handler input handler handler factori creat input handler command output handler handler factori creat output handler command close cleanup link execut manag throw except public void close throw except close input handler case let process termin input handler close process check need start process input handler get input type input type exec wait process exit tri exit code process wait catch interrupt except ie error unexpect except wait stream binari complet ie kill process process wait stdout thread complet tri stdout thread null stdout thread join stdout thread null catch interrupt except ie error unexpect except wait output thread stream binari complet ie kill process process wait stderr thread complet tri stderr thread null stderr thread join stderr thread null catch interrupt except ie error unexpect except wait input thread stream binari complet ie kill process process debug process exit exit code exit code string err msg command string fail exit statu exit code error err msg result re new result statu err msg send output po stream get binari output queue re exit code output handler get output type output type trigger output handler output handler bind null start thread process output execut stdout stdout thread new process output thread output handler po stream stdout thread start check problem manag process outerr thread error null error output error thread fail outerr thread error helper function close input output stream process kill param process process kill throw except privat void kill process process process process null tri input handler close process catch except e info except kill process close input handler ignor e get messag tri output handler close catch except e info except kill process close output handler ignor e get messag process destroy start execut extern process take care set environ process also start process error thread process code stderr code manag process throw except protect void exec throw except process builder process builder stream util creat process command process process builder start debug start process command command pick process stderr stream start thread process stderr stream stderr new datum input stream new buffer input stream process get error stream stderr thread new process error thread stderr thread start check need handl process stdout directli output handler get output type output type get hold stdout process stdout new datum input stream new buffer input stream process get input stream bind stdout output handler output handler bind new buffer posit input stream stdout long start thread process output execut stdout stdout thread new process output thread output handler po stream stdout thread start start execut link execut manag throw except public void run throw except check need exec process input handler get input type input type start thread handl input pass context file input thread input type asynchron exec call file input thread need access context file input thread new process input thread input handler po stream context get context file input thread start input type mean input stream binari file mean exec process till input file complet write do close return return start execut exec set input execut stdin new datum output stream new buffer output stream process get output stream input handler bind stdin start thread send input execut stdin stdin thread new process input thread input handler po stream null stdin thread start thread consum input stream binari input queue feed process class process input thread extend thread input handler input handler privat stream po stream privat context udf context privat block queue result binari input queue process input thread input handler input handler stream po stream context udf context set daemon true input handler input handler po stream po stream copi context pass execut manag thread udf context udf context input queue thread read input tupl binari input queue po stream get binari input queue overrid public void run input type asynchron set udf context current thread copi execut manag thread udf context necessari exec method call current thread file input thread instead execut manag thread input handler get input type input type udf context null context set udf context udf context tri read tupl previou oper pipelin pass execut true result inp null inp binari input queue take synchron po stream notifi wait produc check keep findbug happi inp null po stream notifi receiv input process alreadi send input expect inp null inp return statu statu signal cleanup execut manag close return inp null inp return statu statu check problem manag process outerr thread error null throw new except output error thread fail outerr thread error pass serial tupl execut via input handler tupl null tri tupl inp result input handler put next catch except e input type synchron could relat process termin input handler get input type input type warn except tri write stream binari input e could process die close input stream call close worri deduc whether process die normal abnorm real issu see non zero exit code process send statu back get except issu write input binari hmm hope mean process die abnorm close return els asynchron case real except throw e input byte get memori size input record catch throwabl note error occur outerr thread error result re new result statu error read stream pass stream process get messag error error read stream pass stream process send output po stream get binari output queue re kill process process privat void send output block queue result binari output queue result re tri binari output queue put re catch interrupt except e error error send binari output stream e synchron po stream notifi wait consum satisfi findbug re null po stream notifi thread get output stream binari put onto binari output queue stream class process output thread extend thread output handler output handler privat block queue result binari output queue process output thread output handler output handler stream po stream set daemon true output handler output handler output queue thread put output tupl stream binari output queue po stream get binari output queue overrid public void run tri read tupl execut send queue stream tupl tupl null tupl output handler get next null process output tupl output byte tupl get memori size output binari do process output null output handler close catch throwabl note error occur outerr thread error error catch except output handler stream binari send error signal pipelin send stream tri result re new result re result error read output stream binari command string get messag re return statu statu send output binari output queue re kill process process catch except e error error tri signal error statu pipelin e void process output tupl result re new result null valid tupl pass back re result re return statu statu output record els null mean end output binari wait process exit harvest exit code tri exit code process wait catch interrupt except ie kill process process signal error string err msg failur wait process command string ie get messag error err msg ie re result err msg re return statu statu send output binari output queue re return exit code signal end stream output re els signal error string err msg command string fail exit statu exit code error err msg re result err msg re return statu statu send output binari output queue re workhors process stderr stream manag process default code execuatbl manag code send receiv error messag code stderr code param error error messag manag process protect void process error string error send stderr system err print error class process error thread extend thread public process error thread set daemon true overrid public void run tri string error buffer reader reader new buffer reader new input stream reader stderr error reader read line null process error error n stderr null stderr close debug process error thread do catch throwabl note error occur outerr thread error error tri stderr null stderr close catch except ioe warn ioe throw new runtim except 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java util list import org apach common log log import org apach common log log factori import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach impl plan oper key import org apach impl plan visitor except import org apach pen illustr base class type express express oper must extend class public abstract class express oper extend physic oper privat static final log log log factori get log express oper class privat static final long serial version public express oper oper key k k public express oper oper key k int rp super k rp overrid public void set illustr illustr illustr illustr illustr overrid public boolean support multipl output return fals overrid public result get next data bag throw exec except return new result overrid public abstract void visit phi plan visitor v throw visitor except make deep copi oper declar make possibl call clone express oper throw clone support except overrid public express oper clone throw clone support except string express oper implement clone log error throw new clone support except get sub express express call reduc run accumul mode child express must call drive accumul protect abstract list express oper get child express check whether express contain call reduc run accumul mode case fs must call public boolean contain instanceof user func return true list express oper l get child express l null express oper e l e contain return true return fals drive fs accumul mode protect result accum child list express oper child byte datum type throw exec except tri accum start child null child get child express result re null child null express oper e child e contain re e get next datum type re return statu statu return re re new result re return statu statu return re return null catch runtim except e throw new exec except except execut string e string e overrid public string string return get class get simpl name super string child get child express get origin locat 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import java io except import java util array list import java util dequ import java util link list import java util list import java util map import org apach comparison func import org apach eval func import org apach func spec import org apach except import org apach resourc schema import org apach backend hadoop executionengin physic layer logic physic translat except import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper add import org apach backend hadoop executionengin physic layer express oper binari comparison oper import org apach backend hadoop executionengin physic layer express oper binari express oper import org apach backend hadoop executionengin physic layer express oper constant express import org apach backend hadoop executionengin physic layer express oper divid import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper express oper import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper greater expr import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper less expr import org apach backend hadoop executionengin physic layer express oper mod import org apach backend hadoop executionengin physic layer express oper multipli import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper bin cond import org apach backend hadoop executionengin physic layer express oper cast import org apach backend hadoop executionengin physic layer express oper null import org apach backend hadoop executionengin physic layer express oper map look import org apach backend hadoop executionengin physic layer express oper neg import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper project import org apach backend hadoop executionengin physic layer express oper regexp import org apach backend hadoop executionengin physic layer express oper relat expr project import org apach backend hadoop executionengin physic layer express oper user comparison func import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer express oper subtract import org apach backend hadoop executionengin physic layer plan physic plan import org apach datum data type import org apach impl context import org apach impl logic layer frontend except import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan plan except import org apach newplan depend order walker import org apach newplan oper import org apach newplan oper plan import org apach newplan plan walker import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat logic relat oper public class exp phi translat visitor extend logic express visitor valu point current logic relat oper work protect logic relat oper current op public exp phi translat visitor oper plan plan logic relat oper op physic plan phi plan map oper physic oper map throw frontend except plan new depend order walker plan op phi plan map public exp phi translat visitor oper plan plan plan walker walker logic relat oper op physic plan phi plan map oper physic oper map throw frontend except super plan walker current op op log phi map map current plan phi plan current plan new link list physic plan protect map oper physic oper log phi map protect dequ physic plan current plan protect physic plan current plan protect node id gener node gen node id gener get gener protect context pc public void set context context pc pc pc public physic plan get physic plan return current plan privat void attach binari comparison oper binari express op binari comparison oper expr op throw frontend except do not alias express oper expr op set alia op get alia expr op set operand type op get lh get type expr op set lh express oper log phi map get op get lh expr op set rh express oper log phi map get op get rh oper plan plan op get plan current plan add expr op log phi map put op expr op list oper successor plan get successor op successor null return oper lo successor physic oper log phi map get lo tri current plan connect expr op catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e privat void attach binari express oper binari express op binari express oper expr op throw frontend except do not alias express oper expr op set alia op get alia expr op set result type op get lh get type expr op set lh express oper log phi map get op get lh expr op set rh express oper log phi map get op get rh oper plan plan op get plan current plan add expr op log phi map put op expr op list oper successor plan get successor op successor null return oper lo successor physic oper log phi map get lo tri current plan connect expr op catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit express op throw frontend except system err println enter binari comparison oper expr op new new oper key node gen get next node id attach binari comparison oper op expr op overrid public void visit express op throw frontend except system err println enter binari comparison oper expr op new new oper key node gen get next node id attach binari comparison oper op expr op overrid public void visit equal express op throw frontend except binari comparison oper expr op new equal expr new oper key node gen get next node id attach binari comparison oper op expr op overrid public void visit equal express op throw frontend except binari comparison oper expr op new equal expr new oper key node gen get next node id attach binari comparison oper op expr op overrid public void visit greater express op throw frontend except binari comparison oper expr op new greater expr new oper key node gen get next node id attach binari comparison oper op expr op overrid public void visit greater equal express op throw frontend except binari comparison oper expr op new equal expr new oper key node gen get next node id attach binari comparison oper op expr op overrid public void visit less express op throw frontend except binari comparison oper expr op new less expr new oper key node gen get next node id attach binari comparison oper op expr op overrid public void visit less equal express op throw frontend except binari comparison oper expr op new equal expr new oper key node gen get next node id attach binari comparison oper op expr op overrid public void visit project express op throw frontend except project expr op op get attach relat op instanceof gener op get plan get successor op null op find refer instanceof inner load expr op new relat expr project new oper key node gen get next node id els expr op new project new oper key node gen get next node id op get field schema null op rang star project expr op set result type data type els expr op set result type op get type op project star expr op set star op project star els op rang project op get end col project rang expand project star expand throw new assert error project rang project end see translat physic plan expr op set project end op get start col els expr op set column op get col num implement expr op set overload op get overload log phi map put op expr op current plan add expr op overrid public void visit map lookup express op throw frontend except express oper phi op new map look new oper key node gen get next node id map look phi op set look key op get lookup key phi op set result type op get type phi op add origin locat op get field schema alia op get locat current plan add phi op log phi map put op phi op express oper express oper log phi map get op get map tri current plan connect phi op catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit org apach newplan logic express constant express op throw frontend except system err println enter constant constant express ce new constant express new oper key node gen get next node id do not alias express oper ce set alia op get alia ce set valu op get valu ce set result type op get type oper n predecessor current plan add ce log phi map put op ce system err println exit constant overrid public void visit cast express op throw frontend except cast p cast new cast new oper key node gen get next node id p cast add origin locat op get field schema alia op get locat phi op set alia op get alia current plan add p cast log phi map put op p cast express oper express oper log phi map get op get express p cast set result type op get type p cast set field schema new resourc schema resourc field schema op get field schema func spec lf spec op get func spec null lf spec tri p cast set func spec lf spec catch except e int err code string msg resolv load function use cast data type find type name op get express get type data type find type name op get type throw new logic physic translat except msg err code except e tri current plan connect p cast catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit express op throw frontend except p new new oper key node gen get next node id phi op set alia op get alia current plan add p log phi map put op p express oper express oper log phi map get op get express p set expr p set result type op get type p set operand type op get type tri current plan connect p catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit null express op throw frontend except null p null new null new oper key node gen get next node id phi op set alia op get alia current plan add p null log phi map put op p null express oper express oper log phi map get op get express p null set expr p null set result type op get type p null set operand type op get express get type tri current plan connect p null catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit neg express op throw frontend except neg p neg new neg new oper key node gen get next node id phi op set alia op get alia current plan add p neg log phi map put op p neg express oper express oper log phi map get op get express p neg set expr p neg set result type op get type tri current plan connect p neg catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit add express op throw frontend except binari express oper expr op new add new oper key node gen get next node id attach binari express oper op expr op overrid public void visit regex express op throw frontend except binari express oper expr op new regexp new oper key node gen get next node id attach binari express oper op expr op list oper successor op get plan get successor op successor get instanceof org apach newplan logic express constant express regexp expr op set const expr true overrid public void visit subtract express op throw frontend except binari express oper expr op new subtract new oper key node gen get next node id attach binari express oper op expr op overrid public void visit multipli express op throw frontend except binari express oper expr op new multipli new oper key node gen get next node id attach binari express oper op expr op overrid public void visit divid express op throw frontend except binari express oper expr op new divid new oper key node gen get next node id attach binari express oper op expr op overrid public void visit mod express op throw frontend except binari express oper expr op new mod new oper key node gen get next node id attach binari express oper op expr op overrid public void visit bin cond express op throw frontend except bin cond expr op new bin cond new oper key node gen get next node id expr op set result type op get type expr op set cond express oper log phi map get op get condit expr op set lh express oper log phi map get op get lh expr op set rh express oper log phi map get op get rh oper plan plan op get plan current plan add expr op log phi map put op expr op list oper successor plan get successor op successor null return oper lo successor physic oper log phi map get lo tri current plan connect expr op catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e suppress warn uncheck overrid public void visit user func express op throw frontend except object f context instanti func spec op get func spec physic oper p f instanceof eval func p new user func new oper key node gen get next node id null op get func spec eval func f user func p set signatur op get signatur reiniti input schema signatur user func p get func get input schema null user func p set func input schema op get signatur eval func f set input schema user func p get func get input schema list string cach file eval func f get cach file cach file null user func p set cach file cach file list string ship file eval func f get ship file ship file null user func p set ship file ship file els p new user comparison func new oper key node gen get next node id null op get func spec comparison func f p set result type op get type current plan add p list logic express list op get argument list null logic express input oper list physic oper log phi map get input oper tri current plan connect p catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e log phi map put op p need track scalar op instanceof scalar express oper ref op scalar express op get implicit referenc oper user func p set referenc oper log phi map get ref op overrid public void visit derefer express op throw frontend except project expr op new project new oper key node gen get next node id expr op set result type op get type expr op set column array list integ op get bag column expr op set star fals log phi map put op expr op current plan add expr op physic oper log phi map get op get refer express null current plan connect expr op 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl io import java io buffer output stream import java io buffer reader import java io file import java io file find except import java io file output stream import java io except import java io input stream import java io input stream reader import java io output stream import java net import java util array list import java util list import java util map import java util properti import java util random import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f file statu import org apach hadoop f file system import org apach hadoop f path import org apach hadoop f permiss fs action import org apach hadoop f permiss fs permiss import org apach hadoop util shell import org apach exec type import org apach configur import org apach except import org apach backend datastorag contain descriptor import org apach backend datastorag data storag import org apach backend datastorag data storag except import org apach backend datastorag element descriptor import org apach backend datastorag seekabl input stream import org apach backend datastorag seekabl input stream import org apach backend executionengin exec except import org apach backend hadoop datastorag configur util import org apach backend hadoop datastorag data storag import org apach backend hadoop datastorag directori import org apach backend hadoop datastorag path import org apach backend hadoop executionengin map reduc layer map reduc import org apach impl context import org apach impl util util import com googl common annot visibl test public class file local privat static final log log log factori get log file local class static public final string file static public final int static public final int public static fs permiss new fs permiss fs action fs action fs action rwx public static class data storag input stream iter extend input stream input stream current element descriptor element int current element public data storag input stream iter element descriptor element element element privat boolean throw except current null current element element length return true current element current element open return fals privat void next throw except current close current null overrid public int read throw except int rc current read rc return rc next return overrid public int avail throw except return return current avail overrid public void close throw except current null current close current null current element element length overrid public int read byte b int int len throw except int count len int rc current read b len rc next continu rc len rc count rc return count count overrid public int read byte b throw except return read b b length overrid public long skip long n throw except n n current skip n return n static string check default prefix exec type exec type string file spec file spec start return file spec return exec type exec type file spec function mean use mapper reduc want access file param file name return input stream open file throw except public static input stream open file string file name throw except configur conf map reduc job conf intern get conf null throw new runtim except can not open file execut local return open file file name configur util properti conf public static input stream open file string file name properti properti throw except data storag dd new data storag properti element descriptor elem dd element file name return open file elem public static long get size string file name throw except configur conf map reduc job conf intern get conf null throw new runtim except can not open file execut local return get size file name configur util properti conf public static long get size string file name properti properti throw except data storag dd new data storag properti element descriptor elem dd element file name recurs get file path element descriptor elem get file element descriptor elem long size add size file find int elem length map string object stat elem get statist size long stat get element descriptor return size privat static input stream open file element descriptor elem throw except element descriptor element null elem exist tri elem get data storag contain elem string elem system element throw new except attempt make open system file elem string return elem open catch data storag except e throw new except fail determin elem elem contain e elem directori recurs get file element get file element descriptor elem els might glob glob match file elem elem get data storag throw new except elem string exist els element get file element descriptor elem return new data storag input stream iter element return new data storag input stream iter element recurs get file element descriptor present input element descriptor param elem input element descriptor return array element descriptor file present find travers level dir input element descriptor throw data storag except privat static element descriptor get file element descriptor element descriptor elem throw data storag except data storag store elem get data storag element descriptor elem store collect elem string elem could directori get file contain file list element descriptor path new array list element descriptor list element descriptor file path new array list element descriptor int elem length path add elem int j j path size j element descriptor full path store element store get activ contain path get j skip hadoop privat meta file full path system element continu full path instanceof contain descriptor element descriptor child contain descriptor full path path add child continu els file add file path file path add full path elem new element descriptor file path size file path array elem return elem privat static input stream open file element descriptor elem throw except current use class repres file dir local mode deleg call open file elem true local mode file dir return open file elem function return input stream local file system file file resid hadoop param file name filenam open param exec type exec type indic whether execut local mode map reduc mode hadoop param storag data storag object use open file spec return input stream file spec throw except deprec use link open string context instead deprec static public input stream open string file name exec type exec type data storag storag throw except file name check default prefix exec type file name file name start element descriptor elem storag element full path file name storag return open file elem els file name file name substr length element descriptor elem storag element full path file name storag return open file elem deprec use link full path string context instead deprec public static string full path string file name data storag storag string full path tri file name char element descriptor current dir storag get activ contain element descriptor elem storag element current dir string file name full path elem string els full path file name catch data storag except e full path file name return full path static public input stream open string file spec context context throw except file spec check default prefix context get exec type file spec file spec start element descriptor elem context get df element full path file spec context return open file elem els file spec file spec substr length buffer want buffer stream pass load function return new buffer input stream new file input stream file spec element descriptor elem context get lf element full path file spec context return open file elem param file spec param offset param context return seekabl input stream throw except overload version open need seek stream current seek support file directori glob static public seekabl input stream open string file spec long offset context context throw except file spec check default prefix context get exec type file spec element descriptor elem file spec start elem context get df element full path file spec context els file spec file spec substr length elem context get lf element full path file spec context elem exist elem get data storag contain elem string tri elem system element throw new except attempt make open system file elem string seekabl input stream si elem sopen si seek offset return si catch data storag except e throw new except fail determin elem elem contain e either directori glob els throw new except current seek support file glob directori static public output stream creat string file spec context context throw except return creat file spec fals context static public output stream creat string file spec boolean append context context throw except file spec check default prefix context get exec type file spec file spec start element descriptor elem context get df element file spec return elem creat els file spec file spec substr length probabl replac local file system file f new file file spec get parent file f null boolean re f mkdir re log warn file local creat fail creat f return new file output stream file spec append static public boolean delet string file spec context context throw except file spec check default prefix context get exec type file spec element descriptor elem null file spec start elem context get df element file spec els elem context get lf element file spec elem delet return true static random be new random thread local rel root contain descriptor access object directli sinc lazi initi rel root context method use instead privat static thread local contain descriptor rel root new thread local contain descriptor privat static contain descriptor resourc path method use test code reset state param initi public static void set initi boolean initi initi rel root set null accessor method get root contain descriptor use temporari file bind thread call method lazi initi rel root object param context return throw data storag except privat static synchron contain descriptor rel root final context context throw data storag except rel root get null contain descriptor rel get temp contain context rel root set rel return rel root get accessor method get resourc contain descriptor use tez resourc path bind thread call method lazi initi resourc path object path differ rel root call server shutdown remov rel root resourth path sinc resourth path avail entir session param context return temporari resourc path throw data storag except public static synchron path get temporari resourc path final context context throw data storag except resourc path null resourc path get temp contain context return path resourc path get path privat static synchron contain descriptor get temp contain final context context throw data storag except contain descriptor temp contain null string tdir util substitut var context get properti get properti configur tmp tri temp contain context get df contain tdir temp r next int temp contain exist creat contain temp contain catch except e tri one last time case due except caus dir oper directori creat anoth instant temp contain context get df contain tdir temp r next int tri creat contain temp contain catch except e throw new data storag except e return temp contain privat static void creat contain contain descriptor contain throw except contain creat contain instanceof directori directori contain set permiss public static void delet temp file rel root get null tri rel root get delet catch except e log error e set initi fals public static void delet temp resourc file resourc path null tri resourc path delet catch except e log error e public static path get temporari path context context throw except return get temporari path context public static path get temporari path context context string suffix throw except element descriptor rel rel root context element descriptor elem context get df element rel string tmp r next int suffix return path elem get path public static string hadoopifi string filenam context context throw except shell filenam filenam replac filenam start filenam filenam substr length element descriptor local elem context get lf element filenam local elem exist throw new file find except filenam element descriptor distrib elem context get df element get temporari path context string int suffix start filenam last index suffix start distrib elem context get df element distrib elem string filenam substr suffix start current copi method data storag allow specifi overwrit work around delet dst file first exist distrib elem exist distrib elem delet local elem copi distrib elem null fals return distrib elem string public static string full path string filenam context context throw except tri filenam char element descriptor current dir context get df get activ contain element descriptor elem context get df element current dir string filenam return elem string return filenam catch data storag except e return filenam public static boolean file exist string filenam context context throw except return file exist filenam context get fs deprec use link file exist string context instead deprec public static boolean file exist string filenam data storag store throw except element descriptor elem store element filenam return elem exist glob match file elem store public static boolean file string filenam context context throw except return directori filenam context get df deprec use link file string context instead deprec public static boolean file string filenam data storag store throw except return directori filenam store public static boolean directori string filenam context context throw except return directori filenam context get df deprec use link directori string context instead deprec public static boolean directori string filenam data storag store throw except element descriptor elem store element filenam return elem instanceof contain descriptor privat static boolean glob match file element descriptor elem data storag fs throw except tri current give glob non special glob charact hadoop return array file name check element descriptor elem fs collect elem string switch elem length case return fals case return elem equal elem default return true catch data storag except e throw e visibl test public static void set random be file local be r convert path window convent unix convent invok cygwin param path path window convent return path unix convent null fail static public string pars cyg path string path int style string command style command new string cygpath w path els command new string cygpath u path process p null tri p runtim get runtim exec command catch except e return null int exit val tri exit val p wait catch interrupt except e return null exit val return null string line null buffer reader br null tri input stream reader isr new input stream reader p get input stream br new buffer reader isr line br read line isr close catch except e return null final br null tri br close catch except e return line static file local temp dir null static file f boolean success true tri f file creat temp file tmp success f delet success f mkdir local temp dir f local temp dir delet exit catch except e success throw new runtim except error creat file local temp directori public static class fetch file ret public fetch file ret file file boolean fetch file file fetch fetch public file file public boolean fetch ensur pass path local file system fetch java io tmpdir necessari jar rel df true df null rel path assum rel pass df activ directori els assum rel local work directori public static fetch file ret fetch file properti properti string file path throw except return fetch file intern properti file path fals ensur pass file point path local file system fetch java io tmpdir necessari jar rel df true df null rel path assum rel pass df activ directori els assum rel local work directori public static fetch file ret fetch file properti properti string file path throw except return fetch file intern properti file path true copi file remot local filesystem multipl file set path could point multipl file glob directori case return array contain multipl file otherwis singl file return jar rel df true rel path assum rel default filesystem activ directori els assum rel local work directori param properti param file path param multipl file return privat static fetch file ret fetch file intern properti properti string file path boolean multipl file throw except path path new path file path path get name empti return new fetch file ret uri path uri configur conf new configur configur util merg conf conf configur util configur properti schema schema local expect local path file system local fs file system get local conf file system src fs true equal properti get properti jar rel df uri get scheme null window local file uri get scheme null uru get path match za z uru get scheme null uru get scheme equal local src fs local fs els src fs path get file system conf file statu file multipl file file src fs glob statu path els file new file statu src fs get file statu path file null file length throw new exec except file file path exist except fetch file ret fetch file new fetch file ret file length int idx file statu file file throw except file string pathnam file get path uri get path string filenam file get path get name src fs local fs fetch file idx new fetch file ret new file pathnam fals els fetch remot file d new file local temp dir filenam d delet exit tri src fs copi local file file get path new path dest get absolut path catch except e throw new exec except could copi file path local destin d except e fetch file idx new fetch file ret dest true return fetch file ensur pass resourc avail local file system fetch temporari directori throw resourc find except public static fetch file ret fetch resourc string name throw except resourc find except fetch file ret local file ret null input stream resourc stream context get class loader get resourc stream name resourc stream null file d new file local temp dir name dest get parent file mkdir dest delet exit output stream output stream null tri output stream new buffer output stream new file output stream dest byte buffer new byte int len len resourc stream read buffer output stream write buffer len final resourc stream close output stream null output stream close local file ret new fetch file ret dest fals els throw new resourc find except name return local file ret 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic rule import java util array list import java util iter import java util list import org apach impl logic layer frontend except import org apach impl util pair import org apach newplan oper import org apach newplan oper plan import org apach newplan oper sub plan import org apach newplan logic express logic express plan import org apach newplan logic express project express import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach newplan optim rule import org apach newplan optim transform rule move filter foreach check uid filter work present predecessor foreach transform public class filter foreach extend rule public filter foreach string n super n fals overrid protect oper plan build pattern pattern rule look foreach filter logic plan plan new logic plan logic relat oper foreach new plan logic relat oper filter new filter plan plan add foreach plan add filter plan connect foreach filter return plan overrid public transform get new transform return new filter transform public class filter transform extend transform filter filter null foreach null logic relat oper pred null oper sub plan sub plan null overrid public boolean check oper plan match throw frontend except iter oper iter match get oper iter next oper op iter next op instanceof foreach op break would strang case foreach null return fals iter match get oper iter next oper op iter next op instanceof filter filter filter op break cheat look one filter plan filter null get uid filter pair list long list byte uid type get filter project uid filter see previou oper uid project list oper pred current plan get predecessor foreach int j j pred size j logic relat oper log rel op logic relat oper pred get j log rel op uid type pred logic relat oper pred get j filter nondeterminist n push return optim util plan non determinist udf filter get filter plan chanc filter filter move search filter list oper successor current plan get successor filter successor null successor size successor get instanceof filter filter filter successor get els filter null return fals get uid project filter oper param filter return set uid privat pair list long list byte get filter project uid filter filter throw frontend except list long uid new array list long list byte type new array list byte filter null logic express plan filter plan filter get filter plan iter oper iter filter plan get oper oper op null iter next op iter next op instanceof project express project express proj project express op proj project star project rang alway expand schema avail noth logic relat oper pred logic relat oper filter get plan get predecessor filter get logic schema pred schema pred get schema pred schema null int pred schema size uid add pred schema get field uid type add pred schema get field type els uid add proj get field schema uid type add proj get field schema type pair list long list byte result new pair list long list byte uid type return result check relat oper contain specifi uid param op logic relat oper contain uid param uid uid check return true give logic relat oper give uid privat boolean logic relat oper op pair list long list byte uid type throw frontend except logic schema schema op get schema schema null return fals list long uid uid type first list byte type uid type second int uid size boolean find fals logic schema logic field schema f schema get field fs uid uid get f type type get find true find return fals return true overrid public oper plan report chang return sub plan overrid public void transform oper plan match throw frontend except list oper op set current plan get predecessor filter op set null op set size return oper filter pred op set get op set current plan get successor filter op set null op set size return oper filter suc op set get sub plan new oper sub plan current plan step follow pred filter filter move filter pred filter filter move filter suc transform pred filter move filter filter move filter pred filter filter suc plan assum modifi filter middl modifi first filter kleen star becom zero filter pred pair integ integ pred place current plan disconnect pred foreach pair integ integ filter pred place current plan disconnect filter pred filter pair integ integ filter suc place current plan disconnect filter filter suc current plan connect pred pred place first filter filter pred place second current plan connect filter filter suc place first foreach pred place second current plan connect filter pred filter pred place first filter suc filter suc place second sub plan add pred sub plan add foreach sub plan add filter pred sub plan add filter sub plan add filter suc 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic rule import org apach impl context import org apach newplan oper plan import org apach newplan logic relat filter import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat oper public class filter constant calcul extend constant calcul public filter constant calcul string n context pc super n pc overrid protect oper plan build pattern logic plan plan new logic plan logic relat oper op new filter plan plan add op return plan 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic rule import org apach impl context import org apach newplan oper plan import org apach newplan logic relat import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat oper public class constant calcul extend constant calcul public constant calcul string n context pc super n pc overrid protect oper plan build pattern logic plan plan new logic plan logic relat oper op new plan plan add op return plan 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import org apach except function import org apach primit eval func import org apach impl context import java io except import java lang reflect parameter type import java lang reflect type import java util hash map eval func wrap implement function interfac pass string constructor resolv function class packag import list use function must default arg constructor use function take arg constructor initi function subclass one call code super function code exampl code udf function wrapper eval func function code public class function wrapper eval func extend primit eval func object object cach type resolv limit reflect privat static hash map class type resolv type new hash map class type privat except function function privat string counter group take class name function initi use default constructor pass function wrapper eval func except function function function must implement either com googl common base function except function param function class name function class initi public function wrapper eval func string function class name throw class find except method except illeg access except instanti except except initi function function class name determin input output type function initi superclass subclass call constructor function non default constructor requir param function function use protect function wrapper eval func com googl common base function function throw except class find except method except except function new googl function bridg function determin input output type function initi superclass subclass call constructor function non default constructor requir param function function use protect function wrapper eval func except function function throw except class find except method except super get function class function get function class function function function string function name function instanceof googl function bridg googl function bridg function get wrap function get class get simpl name function get class get simpl name counter group get class get name function name overrid suppress warn uncheck public object exec object input throw except tri return function appli input catch except e safe incr counter get counter group e get class get canon name throw new except e overrid protect string get counter group return counter group privat static class get function class except function function class name throw class find except method except except return get function type class function class name privat static class get function class except function function class name throw class find except method except except return get function type class function class name give class implement parameter interfac code except function code return type class code index code posit function class code googl function bridg code return type class wrap function privat static class get function type class except function function int index throw class find except method except except class clazz class expect interfac function instanceof googl function bridg clazz googl function bridg function get wrap function get class expect interfac com googl common base function class els clazz function get class expect interfac except function class check cach resolv type contain key clazz return class resolv type get clazz index type interfac type clazz get gener interfac type interfac type interfac type parameter type parameter type parameter type interfac type expect interfac assign class parameter type get raw type type type parameter type get actual type argument resolv type put clazz type return class type index throw new method except unrecogn function class pass clazz get class function must implement either com googl common base function class get name except function class get name suppress warn uncheck privat static except function initi function string function class name throw except illeg access except instanti except object function object context resolv class name function class name new instanc function object instanceof except function return except function function object els function object instanceof com googl common base function return new googl function bridg com googl common base function function object throw new instanti except unrecogn function class pass function object get class function must implement either com googl common base function class get name except function class get name use handl googl function well except function privat static class googl function bridg implement org apach function privat com googl common base function function privat googl function bridg com googl common base function function function function public com googl common base function get wrap function return function overrid suppress warn uncheck public appli object item return function appli item 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java util array list import java util array import java util list import org apach impl util jar manag public class func util util function get list contain jar via class param class identifi jar class use identifi contain jar return list contain jar public static list string get ship file class class identifi jar return get ship file array list class identifi jar public static list string get ship file list class class identifi jar list string cach file new array list string class clz class identifi jar string jar jar manag find contain jar clz cach file add jar return cach file 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import org apach eval func import org apach backend executionengin exec except import org apach datum data type import org apach datum tupl import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl logic layer schema schema field schema gener invok class common grunt work set invok class specif non gener extens class need know type return expect exec find appropri class reflect implement constructor call super note paramet constructor b requir b seemingli nonsens work p invok famili udf understand follow class name case independ li string li long li float li doubl li int p invok also work array argument repres datum bag singl tupl element simpli refer code string code exampl p allow one dynam invok java method return code code p usag invok famili fs adjust appropri p pre code invok static method string long invok long java lang long valu string long string string long chararray invok method object string concat invok string java lang string concat string string fals concaten string string concat str str pre p first argument constructor full path desir method br second argument list class method paramet br method static first element list object invok method br second argument option argument static method assum suppli br third argument keyword static true signifi method static br third argument option true default br p param public abstract class gener invok extend eval func privat invok invok public gener invok public gener invok string full name throw class find except frontend except secur except method except invok new invok full name public gener invok string full name string param spec str throw class find except frontend except secur except method except invok new invok full name param spec str public gener invok string full name string param spec str string static throw class find except frontend except secur except method except invok new invok full name param spec str static overrid public exec tupl input throw except invok null throw new exec except exec attempt uniti invok invok must construct method invok paramet signatur return invok invok input overrid public schema output schema schema input invok null return null field schema fs new field schema null datum type find type invok get return type return new schema fs 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat public class greater equal express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public greater equal express oper plan plan logic express lh logic express rh super greater equal plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof greater equal express greater equal express eo greater equal express return eo get lh equal get lh eo get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new greater equal express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except public class greater expr extend binari comparison oper privat static final long serial version public greater expr oper key k k public greater expr oper key k int rp super k rp result type data type overrid public string name return greater data type find type name result type key string overrid public void visit phi plan visitor v throw visitor except v visit greater overrid public result get next boolean throw exec except result leav right switch operand type case data type case data type case data type case data type case data type case data type case data type case data type case data type result be accum child null operand type r null return be leav lh get next operand type right rh get next operand type return comparison leav right default int err code string msg get class get simpl name know handl type data type find type name operand type throw new exec except msg err code except suppress warn uncheck privat result comparison result leav result right leav return statu statu return left right return statu statu return right either operand null result null left result null right result null left result null left return statu statu return left assert left result instanceof compar assert right result instanceof compar compar left result compar right result leav result boolean els leav result boolean illustr markup null left result boolean leav result return leav overrid public greater expr clone throw clone support except greater expr clone new greater expr new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat public class greater express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public greater express oper plan plan logic express lh logic express rh super greater plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof greater express greater express eo greater express return eo get lh equal get lh eo get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new greater express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool grunt import java io buffer reader import java util array list import jline consol consol reader import org apach common log log import org apach common log log factori import org apach server import org apach impl context import org apach tool grunt grunt parser import org apach tool grunt completor import org apach tool grunt completor alias import org apach tool pigstat stat util import org apach backend executionengin exec except import org apach impl util log util public class grunt privat final log log log factori get log get class buffer reader server grunt parser parser public grunt buffer reader context context throw exec except new server context null parser new grunt parser public void set consol reader consol reader c c add complet new completor alias c add complet new completor parser set consol reader c public void run boolean verbos true equal ignor case get context get properti get properti verbos true tri stat util get empti stat parser set interact true parser pars stop error break catch throwabl log util write log get context get properti get properti logfil log verbos stack trace parser init public int exec throw throwabl boolean verbos true equal ignor case get context get properti get properti verbos tri stat util get empti stat parser set interact fals return parser pars stop error catch throwabl log util write log get context get properti get properti logfil log verbos stack trace throw public void check script string script file throw throwabl boolean verbos true equal ignor case get context get properti get properti verbos tri parser set interact fals parser set valid statement true boolean do not print output true parser process explain null script file fals text null new array list string new array list string do not print output catch throwabl log util write log get context get properti get properti logfil log verbos stack trace throw 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool grunt import java io buffer reader import java io byte array input stream import java io file import java io file find except import java io file output stream import java io file reader import java io except import java io input stream import java io input stream reader import java io print stream import java io reader import java io string reader import java util abstract list import java util array list import java util array import java util collect import java util date import java util hash set import java util iter import java util list import java util map import java util properti import java util set import jline consol consol reader import org apach common io output null output stream import org apach common lang string util import org apach common log log import org apach common log log factori import org apach hadoop f file system import org apach hadoop f fs shell import org apach hadoop f path import org apach load func import org apach server import org apach backend datastorag contain descriptor import org apach backend datastorag data storag import org apach backend datastorag data storag except import org apach backend datastorag element descriptor import org apach backend executionengin exec except import org apach backend hadoop datastorag configur util import org apach backend hadoop datastorag data storag import org apach datum tupl import org apach impl context import org apach impl io file local import org apach impl io file local fetch file ret import org apach impl util log util import org apach impl util tupl format import org apach parser regist resolv import org apach tool pigscript parser pars except import org apach tool pigscript parser script parser import org apach tool pigscript parser script parser token manag import org apach tool pigscript parser token mgr error import org apach tool pigstat job stat import org apach tool pigstat stat import org apach tool pigstat stat job graph import org apach valid black whitelist filter import org apach valid command filter import org fusesourc jansi ansi import org fusesourc jansi ansi consol import com googl common collect list public class grunt parser extend script parser privat static final log log log factori get log grunt parser class privat command filter filter public grunt parser reader reader reader null init public grunt parser reader reader server server super reader server server init public grunt parser input stream stream string encod stream encod null public grunt parser input stream stream string encod server server super stream encod server server init public grunt parser input stream stream super stream init public grunt parser input stream stream server server super stream server server init public grunt parser script parser token manag tm tm null public grunt parser script parser token manag tm server server super tm server server init privat void init do fals load fals explain null script illustr fals set prop filter new black whitelist filter server privat void set prop df server get context get df lf server get context get lf conf server get context get properti shell new fs shell configur util configur conf overrid public void set interact boolean interact super set interact interact interact set valid statement true public void set valid statement boolean b server set valid statement b privat void set batch server set batch privat void execut batch throw except server batch explain null explain current batch load server execut batch stat stat stat get job graph jg stat get job graph iter job stat iter jg iter iter next job stat js iter next j success num fail job except exp j get except null j get except new exec except job j get job id null j get job id fail hadoop return error messag log util write log exp server get context get properti get properti logfil log true equal ignor case server get context get properti get properti verbos stack trace els num succeed job privat void discard batch throw except server batch server discard batch public int pars stop error throw except pars except return pars stop error fals pars command either interact mode batch mode interact mode execut plan right away whenev command encount throw except pars except public int pars stop error boolean batch throw except pars except server null throw new illeg state except interact batch set batch server set skip pars regist batch true tri prompt done fals do pars batch execut batch catch token mgr error tme error script parser token manag intuit alway refer last line read whole queri without pars line line batch execut batch get error queri parser interact batch execut batch throw tme final batch discard batch int re num succeed job num fail job return re public void set load boolean load load load public void set script illustr script illustr true overrid public void prompt interact consol reader set prompt grunt overrid protect void quit done true public boolean do return do pars method add support penni public void pars throw except pars except server null throw new illeg state except done fals do pars overrid protect void process describ string alia throw except string nest alia null explain null process explain mode server batch server pars build alia null alia server get context get last alia describ use immedi launch grunt shell last defin alia null alia null throw new except previous defin alia find pleas defin alia use describ oper alia contain nest alia alia substr alia index alia alia substr alia index server dump schema nest alia nest alia els equal alia alia server get last rel server dump schema alia els log warn describ statement ignor process explain script check overrid protect void process explain string alia string script boolean verbos string format string target list string param list string file throw except pars except server batch server pars build alia null script null interact alia server get context get last alia explain use immedi launch grunt shell last defin alia null alia null throw new pars except explain statement must alia script equal alia alia server get last rel process explain alia script verbos format target param file fals protect void process explain string alia string script boolean verbos string format string target list string param list string file boolean do not print output throw except pars except filter valid command filter command null explain return tri explain new explain state alia target script verbos format script null set batch tri load script script true true fals param file catch except e discard batch throw e catch pars except e discard batch throw e explain last true explain current batch do not print output final script null discard batch explain null protect void explain current batch throw except explain current batch fals protect void explain current batch boolean do not print output throw except print stream lp do not print output new print stream new null output stream system print stream ep do not print output new print stream new null output stream system explain last explain count server batch empti return explain count boolean mark execut explain script null explain target null file file new file explain target file directori string count explain last explain count explain count string suffix explain time count explain format lp new print stream new file file logic plan suffix server explain explain alia explain format explain verbos mark execut lp null file suffix lp close ep close els boolean append explain count lp ep new print stream new file output stream explain target append server explain explain alia explain format explain verbos mark execut lp ep null null lp close els server explain explain alia explain format explain verbos mark execut lp ep null null overrid protect void print alia throw except explain null process explain mode server print alia els log warn alia statement ignor process explain script check overrid protect void print clear ansi consol system instal ansi ansi ansi ansi system println ansi eras screen system println ansi cursor ansi consol system uninstal overrid protect void process regist string jar throw except filter valid command filter command jar paramet substitut grunt jar server regist jar jar overrid protect void process regist string path string script lang string namespac throw except pars except filter valid command filter command path paramet substitut grunt path script lang paramet substitut grunt script lang namespac paramet substitut grunt namespac new regist resolv server pars regist path script lang namespac privat string run preprocessor string script path list string param list string param file throw except pars except context context server get context buffer reader reader new buffer reader new file reader script path string result context param substitut reader param param file reader close return result overrid protect void process script string script boolean batch list string param list string file throw except pars except batch filter valid command filter command els filter valid command filter command explain null process explain mode script null execut batch return batch set batch server set job name script tri load script script true fals load param file execut batch final discard batch els load script script fals fals load param file els log warn run exec statement ignor process explain script check privat void load script string script boolean batch boolean load boolean illustr list string param list string file throw except pars except reader input reader consol reader reader boolean interact context pc server get context load pc get preprocessor context param scope push pc set param param pc set param file file tri fetch file ret fetch file file local fetch file conf script string cmd run preprocessor fetch file file get absolut path param file interact batch write prompt echo command consol reader treat tab special way cmd cmd replac reader new consol reader new byte array input stream cmd get byte system reader set histori consol reader get histori input stream new consol reader input stream reader input reader new buffer reader new input stream reader interact true els quietli pars statement input reader new string reader cmd reader null interact fals catch file find except fnfe throw new pars except file find script catch secur except se throw new pars except access file script grunt parser parser new grunt parser input reader server parser set consol reader reader parser set interact interact parser set load load illustr parser set script illustr parser explain explain parser prompt parser do parser pars interact system println load pc get preprocessor context param scope pop overrid protect void process set string key string valu throw except pars except filter valid command filter command key paramet substitut grunt key valu paramet substitut grunt valu key equal debug valu null valu equal server debug els valu equal server debug els throw new pars except invalid valu valu provid key els system println key server debug els key equal job name valu null server set job name valu els system println key server get job name els key equal job prioriti valu null server set job prioriti valu els system println key server get job prioriti els key equal stream skippath valu null valid file file new file valu file exist file directori throw new except invalid valu stream skippath valu server add path skip valu els system println key string util join server get context get path skip els key equal default parallel valu null valid tri server set default parallel integ pars int valu catch number format except e throw new pars except invalid valu default parallel els system println key server get context get default parallel els valu null server get context get execut engin set properti key valu els server get context get properti contain key key system println key server get context get properti get properti key els system println key defin overrid protect void process set throw except pars except filter valid command filter command properti job prop server get context get properti properti sy prop system get properti list string job prop list list new array list list string sy prop list list new array list object key job prop key set string prop str key job prop get properti string key sy prop contain key key sy prop list add system prop str els job prop list add prop str collect sort job prop list collect sort sy prop list job prop list add sy prop list string prop job prop list system println prop overrid protect void process cat string path throw except filter valid command filter command path paramet substitut grunt path explain null process explain mode execut batch tri byte buffer new byte element descriptor df path df element path int rc df path exist throw new except directori path exist df contain path contain descriptor df dir contain descriptor df path iter element descriptor path df dir iter path next element descriptor cur elem path next df contain cur elem string continu input stream cur elem open rc read buffer system write buffer rc close els input stream df path open rc read buffer system write buffer rc close catch data storag except e throw new except fail cat path e els log warn cat statement ignor process explain script check overrid protect void process string path throw except filter valid command filter command path paramet substitut grunt path contain descriptor contain explain null process explain mode execut batch tri path null contain df contain data storag df get get home directori string df set activ contain contain els contain df contain path contain exist throw new except directori path exist df contain path throw new except path directori df set activ contain contain catch data storag except e throw new except fail chang work directori path null datum storag df get get home directori string path e els log warn cd statement ignor process explain script check overrid protect void process dump string alia throw except filter valid command filter command alia null server batch server pars build alia server get context get last alia dump use immedi launch grunt shell last defin alia null alia null throw new except previous defin alia find pleas defin alia use dump oper explain null process explain mode execut batch equal alia alia server get last rel iter tupl result server open iter alia result next tupl result next system println tupl format format els log warn dump statement ignor process explain script check overrid protect void process illustr string alia string script string target list string param list string file throw except pars except filter valid command filter command script illustr throw new pars except illustr statement appear script illustr opon alia null script null throw new pars except illustr statement alia work script effect els explain null log warn illustr statement ignor process explain script check els tri script null true equal ignor case server get context get properti get properti opt multiqueri true throw new pars except explain script multiqueri disabl set batch tri load script script true true true param file catch except e discard batch throw e catch pars except e discard batch throw e els alia null server batch server pars build alia server get context get last alia illustr use immedi launch grunt shell last defin alia null alia null throw new pars except illustr statement must alia script equal alia server batch server pars build alia server get last rel server get exampl alia final script null discard batch overrid protect void process kill string jobid throw except filter valid command filter command server get context get execut engin kill job jobid overrid protect void process string path throw except filter valid command filter command path paramet substitut grunt path explain null process explain mode execut batch tri element descriptor path descriptor path null path descriptor df get activ contain els path descriptor df element path path descriptor exist throw new except file directori path exist df contain path descriptor string contain descriptor contain contain descriptor path descriptor iter element descriptor elem contain iter elem next element descriptor cur elem elem next df contain cur elem string system println cur elem string dir els print length replic cur elem els print length replic path descriptor catch data storag except e throw new except fail path e els log warn l statement ignor process explain script check privat void print length replic element descriptor elem throw except map string object stat elem get statist long replic short stat get element descriptor long len long stat get element descriptor system println elem string r replic len overrid protect void process throw except filter valid command filter command explain null process explain mode execut batch system println df get activ contain string els log warn pwd statement ignor process explain script check overrid protect void process histori boolean number server print histori number overrid protect void print help system println command system println latin statement see latin manual detail http hadoop apach org system println file system command system println fs fs argument equival hadoop df command http hadoop apach org common doc current hdf shell html system println diagnost command system println describ alia alia show schema alia inner alia describ system println explain script pigscript path brief dot xml param param name param valu system println param file file name alia show execut plan comput alia entir script system println script explain entir script system println store output directori rather print stdout system println brief n expand nest plan present small graph overview system println dot gener output dot format default text format system println xml gener output xml format default text format system println param param name see paramet substitut detail system println param file file name see paramet substitut detail system println alia alia explain system println dump alia comput alia write result stdout system println util command system println exec param param name param valu param file file name script system println execut script access grunt environ includ alia system println param param name see paramet substitut detail system println param file file name see paramet substitut detail system println script script execut system println run param param name param valu param file file name script system println execut script access grunt environ system println param param name see paramet substitut detail system println param file file name see paramet substitut detail system println script script execut system println sh shell command invok shell command system println kill job id kill hadoop job specifi hadoop job id system println set key valu provid execut paramet key valu case sensit system println follow key support system println default parallel script level reduc parallel basic input size heurist use default system println debug set debug default system println job name singl quot name job default latin script name system println job prioriti prioriti job valu low low normal high high default normal system println stream skippath string contain path use stream system println hadoop properti system println help display messag system println histori n display list statement cach system println n hide line number system println quit quit grunt shell overrid protect void process move string src string dst throw except filter valid command filter command src paramet substitut grunt src dst paramet substitut grunt dst explain null process explain mode execut batch tri element descriptor src path df element src element descriptor dst path df element dst src path exist throw new except file directori src exist src path renam dst path catch data storag except e throw new except fail move src dst e els log warn mv statement ignor process explain script check overrid protect void process copi string src string dst throw except filter valid command filter command src paramet substitut grunt src dst paramet substitut grunt dst explain null process explain mode execut batch tri element descriptor src path df element src element descriptor dst path df element dst src path copi dst path conf fals catch data storag except e throw new except fail copi src dst e els log warn cp statement ignor process explain script check overrid protect void process copi local string src string dst throw except filter valid command filter command src paramet substitut grunt src dst paramet substitut grunt dst explain null process explain mode execut batch tri element descriptor src path df element src element descriptor dst path lf element dst src path copi dst path fals catch data storag except e throw new except fail copi src local dst e els log warn copi local statement ignor process explain script check overrid protect void process copi local string src string dst throw except filter valid command filter command src paramet substitut grunt src dst paramet substitut grunt dst explain null process explain mode execut batch tri element descriptor src path lf element src element descriptor dst path df element dst src path copi dst path fals catch data storag except e throw new except fail copi loalli src dst e els log warn copi local statement ignor process explain script check overrid protect void process mkdir string dir throw except filter valid command filter command dir paramet substitut grunt dir explain null process explain mode execut batch contain descriptor dir descriptor df contain dir dir descriptor creat els log warn mkdir statement ignor process explain script check overrid protect void process string cmd throw except int start cmd paramet substitut grunt cmd interact start get line number cmd char cmd length server regist queri cmd start els server regist queri cmd start overrid protect void process remov string path string option throw except filter valid command filter command filter valid command filter command path paramet substitut grunt path int int explain null process explain mode path file path new path path element descriptor df path null file system f file path get file system configur util configur conf execut batch f exist file path option null option equal ignor case forc throw new except file directori path exist els boolean delet success f delet file path true delet success log warn unabl delet path return long start time system current time milli long durat f exist file path durat system current time milli start time durat throw new except time wait delet file df path els tri thread sleep catch interrupt except e throw new except error wait file delet e log info wait durat ms delet file els log warn rm rmf statement ignor process explain script check overrid protect void process fs command string cmd token throw except filter valid command filter command int cmd token length cmd token paramet substitut grunt cmd token explain null process explain mode execut batch int ret code tri ret code shell run cmd token catch except e throw new except e ret code interact string load func join abstract list string array list cmd token throw new except fs command fail pleas check output log detail els log warn f statement ignor process explain script check overrid protect void process sh command string cmd token throw except filter valid command filter command int cmd token length cmd token paramet substitut grunt cmd token explain null process explain mode tri execut batch sh command creat process follow syntax shell exe invok arg command string string shell name sh string shell invok arg c insert cmd front array list execut support build shell command like mkdir window system get properti os name start window shell name cmd shell invok arg list string string list new array list string string list add shell name string list add shell invok arg string buffer command string new string buffer string curr token cmd token command string append command string append curr token string list add command string string string new cmd token string list array new string process executor runtim get runtim exec new cmd token stream printer printer new stream printer executor get input stream null system stream printer err printer new stream printer executor get error stream null system err printer start err printer start int ret executor wait printer join err printer join ret interact string load func join abstract list string array list cmd token throw new except sh command fail pleas check output log detail catch except e throw new except e els log warn sh statement ignor process explain script check public static int run command string hcat bin string cmd boolean interact throw except list string token list new array list string hcat bin end py token list add python token list add hcat bin els token list add hcat bin cmd cmd trim cmd substr lower case equal sql never happen throw new except sql command start sql keyword cmd cmd substr trim token list add e token list add cmd replac n string token token list array new string creat new environ environ antlr version conflict hive map string string env system getenv set string env set new hash set string map entri string string entri env entri set entri get key equal env set add entri get key entri get valu log info go run hcat command token token length process executor runtim get runtim exec token env set array new string stream printer printer new stream printer executor get input stream null system stream printer err printer new stream printer executor get error stream null system err printer start err printer start int ret tri ret executor wait printer join err printer join ret interact throw new except sql command cmd fail catch interrupt except e log warn except rais sql command e get local messag return overrid protect void process command string cmd throw except cmd paramet substitut grunt cmd explain null process explain mode server get context get properti get sql type equal hcat throw new except sql command support hcat current string hcat bin string server get context get properti get hcat bin hcat bin null throw new except hcat bin defin defin hcat script usual bin hcat new file hcat bin exist throw new except hcat bin exist pleas check hcat bin set properti execut batch run command hcat bin cmd interact els log warn sql statement ignor process explain script check overrid protect void process default string key string valu throw except paramet substitut grunt default key valu overrid protect void process declar string key string valu throw except paramet substitut grunt declar key valu privat string paramet substitut grunt string input throw except interact input null return server get context param substitut new buffer reader new string reader input trim return input stream printer public static class stream printer extend thread input stream string type print stream os public stream printer input stream string type print stream os type type os os overrid public void run tri input stream reader isr new input stream reader buffer reader br new buffer reader isr string line null type null line br read line null os println type line els line br read line null os println line catch except ioe ioe print stack trace protect static class explain state public long time public int count public string alia public string target public string script public boolean verbos public string format public boolean last public explain state string alia string target string script boolean verbos string format time new date get time count alia alia target target script script verbos verbos format format last fals privat server server privat data storag df privat data storag lf privat properti conf privat boolean do privat boolean load privat explain state explain privat int num fail job privat int num succeed job privat fs shell shell privat boolean script illustr test protect void set explain state explain state explain state explain explain state 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import org apach common log log import org apach common log log factori import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except public class equal expr extend binari comparison oper privat static final long serial version transient privat final log log log factori get log get class public equal expr oper key k k public equal expr oper key k int rp super k rp result type data type overrid public string name return greater equal data type find type name result type key string overrid public void visit phi plan visitor v throw visitor except v visit equal overrid public result get next boolean throw exec except result leav right switch operand type case data type case data type case data type case data type case data type case data type case data type case data type case data type result be accum child null operand type r null return be leav lh get next operand type right rh get next operand type return comparison leav right default int err code string msg get class get simpl name know handl type data type find type name operand type throw new exec except msg err code except suppress warn uncheck privat result comparison result leav result right leav return statu statu return left right return statu statu return right either operand null result null left result null right result null left result null left return statu statu return left assert left result instanceof compar assert right result instanceof compar compar left result compar right result leav result boolean els leav result boolean illustr markup null left result boolean leav result return leav overrid public equal expr clone throw clone support except equal expr clone new equal expr new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin shim import java io except import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f file system import org apach hadoop f path import org apach hadoop mapr job conf import org apach hadoop mapreduc context factori import org apach hadoop mapreduc job context import org apach hadoop mapreduc job import org apach hadoop mapreduc task attempt context import org apach hadoop mapreduc task attempt import org apach hadoop mapreduc task type import org apach hadoop mapreduc task job context impl import org apach hadoop mapreduc task task attempt context impl public class hadoop shim privat static log log factori get log hadoop shim class static public job context clone job context job context origin throw except interrupt except job context new context context factori clone context origin new job conf origin get configur return new context static public task attempt context creat task attempt context configur conf task attempt task id conf instanceof job conf return new task attempt context impl new job conf conf task id els return new task attempt context impl conf task id static public job context creat job context configur conf job job id conf instanceof job conf return new job context impl new job conf conf job id els return new job context impl conf job id static public boolean map task attempt task attempt task type type task attempt get task type type task type return true return fals static public task attempt get new task attempt task attempt task attempt new task attempt task type return task attempt static public task attempt creat task attempt string jt identifi int job id boolean map int task id int id map return new task attempt jt identifi job id task type task id id els return new task attempt jt identifi job id task type task id id return whether give path file system implement param path path param conf configur return true give path scheme file system implement fals otherwis public static boolean file system impl path path configur conf string scheme path uri get scheme scheme null hadoop conf get f file impl null string f impl conf get f scheme impl f impl null return fals els tri object f file system get file system class scheme conf return fs null fals true catch except e return fals return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop hbase import java io except import java lang reflect invoc target except import java lang reflect undeclar throwabl except import java math big decim import java math big integ import java net malform except import java net import java util array list import java util array import java util hash map import java util list import java util map import java util map entri import java util navig map import java util properti import org apach common cli command line import org apach common cli command line parser import org apach common cli gnu parser import org apach common cli help formatt import org apach common cli option import org apach common cli option builder import org apach common cli option import org apach common cli pars except import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f path import org apach hadoop hbase base configur import org apach hadoop hbase client delet import org apach hadoop hbase client put import org apach hadoop hbase client result import org apach hadoop hbase client scan import org apach hadoop hbase filter binari compar import org apach hadoop hbase filter column prefix filter import org apach hadoop hbase filter compar filter compar op import org apach hadoop hbase filter famili filter import org apach hadoop hbase filter filter import org apach hadoop hbase filter filter list import org apach hadoop hbase filter qualifi filter import org apach hadoop hbase filter regex string compar import org apach hadoop hbase filter row filter import org apach hadoop hbase filter match filter import org apach hadoop hbase io immut byte writabl import org apach hadoop hbase mapreduc tabl input format import org apach hadoop hbase mapreduc tabl map reduc util import org apach hadoop hbase mapreduc tabl output format import org apach hadoop hbase mapreduc tabl split import org apach hadoop hbase secur token token util import org apach hadoop hbase util byte import org apach hadoop io writabl compar import org apach hadoop mapr job conf import org apach hadoop mapreduc input format import org apach hadoop mapreduc input split import org apach hadoop mapreduc job import org apach hadoop mapreduc output format import org apach hadoop mapreduc record reader import org apach hadoop mapreduc record writer import org apach hadoop secur user group inform import org apach collect load func import org apach load caster import org apach load func import org apach load push import org apach load store caster import org apach order load func import org apach resourc schema import org apach resourc schema resourc field schema import org apach store func interfac import org apach store resourc import org apach backend hadoop executionengin map reduc layer split import org apach backend hadoop hbase base tabl input format base tabl builder import org apach builtin func util import org apach builtin utf storag convert import org apach datum datum bag import org apach data data byte array import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl context import org apach impl logic layer frontend except import org apach impl util object serial import org apach impl util context import org apach impl util util import org joda time date time import com googl common collect list base implement load func store func exampl show load datum base pre code raw hbase sampl tabl org apach backend hadoop hbase base storag info first name info last name friend info load key true limit id bytearray first name chararray last name chararray friend map map info map map pre exampl load datum redundantli info column famili illustr usag note row key insert first result schema load column name start give prefix specifi column name trail exampl pass code friend bob code constructor exampl would caus column start bob load note use prefix like code friend bob code explicit base filter set column prefix specifi queri base mani filter caus perform degred typic see mix one prefix descriptor larg list column case good perfom see either load entir famili via code friend code specifi explicit column descriptor name exampl show store datum base pre code copi raw hbase sampl tabl copi org apach backend hadoop hbase base storag info first name info last name friend info pre note expect first valu tupl row key scalar valu need map explicit column descriptor map need map column famili name exampl code friend code column famili datum code sampl tabl code write code buddi code column famili code sampl tabl copi code tabl public class base storag extend load func implement store func interfac load push order load func store resourc collect load func privat static final log log factori get log base storag class privat final static string storag convert privat final static string base binari convert privat final static string hbase caster privat final static string privat final static string privat final static string hbase secur authent privat final static string hbase config set privat final static string hbase token set privat list column info column info list new array list use job conf store hbase deleg token privat job conf conf privat record reader reader privat record writer writer privat tabl output format output format null privat scan scan privat string context signatur null privat final command line configur option privat final static option valid option new option privat final static command line parser parser new gnu parser privat boolean load row key privat string delimit privat boolean ignor whitespac privat final long limit privat final boolean cach block privat final int cach privat boolean privat final long min timestamp privat final long max timestamp privat final long timestamp privat boolean includ timestamp privat boolean includ tombston protect transient byte gt protect transient byte gte protect transient byte lt protect transient byte lte privat string regex privat load caster caster privat resourc schema schema privat requir field list requir field list privat static void popul valid option option load key option builder option arg arg name load key long opt load key descript load key creat valid option add option load key valid option add option gt true record must great valu binari doubl slash escap valid option add option lt true record must less valu binari doubl slash escap valid option add option gte true record must great equal valu valid option add option lte true record must less equal valu valid option add option regex true record must match regular express valid option add option cach block true set whether block cach scan valid option add option cach true number row scanner cach valid option add option limit true per region limit valid option add option max result per column famili true limit maximum number valu return per row per column famili valid option add option delim true column delimit valid option add option ignor whitespac true ignor space pars column valid option add option caster true caster use convert valu class name base binari convert utf storag convert storag caster must implement load store caster option wal option builder option arg arg name long opt descript set write ahead fals fast load use extrem caution sinc could result datum loss see http hbase apach org book html perf hbase client putwal creat valid option add option wal valid option add option min timestamp true record must timestamp great equal valu valid option add option max timestamp true record must timestamp less valu valid option add option timestamp true record must timestamp equal valu valid option add option includ timestamp fals record includ timestamp rowkey store rowkey timestamp valid option add option includ tombston fals record includ tombston marker store row key timestamp includ rowkey timestamp tombston constructor construct base tabl load func store func load store cell provid column param column list columnlist present string delimit space comma retreiv column column famili code foo code specifi column either code foo code code foo code fetch column start bar specifi code foo bar code result tupl alway size number token code column list code item tupl scalar valu full column descriptor specifi map column descriptor valu column famili specifi throw pars except unabl pars argument throw except public base storag string column list throw pars except except column list constructor construct base tabl load func store func load store param column list param opt string loader option known option ul li load key true fals load row key first column li gt min key val li lt max key val li gte min key val li lte max key val li regex match regex key val li limit num row per region max number row retriev per region li max result per column famili limit maximum number valu return per row per column famili li delim char delimit use pars column name default space comma li ignor whitespac true fals ignor space pars column name default true li cach block true fals set whether block cach scan default fals li cach num row number row cach fast scan memori li true fals set write ahead fals fast load li min timestamp scan timestamp min time rang li max timestamp scan timestamp max time rang li timestamp scan specifi timestamp li includ timestamp record includ timestamp rowkey store rowkey timestamp li includ tombston record includ tombston marker store row key timestamp includ rowkey timestamp tombston li caster base binari convert utf storag convert utf storag convert default use extrem caution sinc could result datum loss see http hbase apach org book html perf hbase client putwal ul throw pars except throw except public base storag string column list string opt string throw pars except except popul valid option string opt arr opt string split tri configur option parser pars valid option opt arr catch pars except e help formatt formatt new help formatt formatt print help load key gt gte lt lte regex cach block cach caster limit max result per column famili delim ignor whitespac min timestamp max timestamp timestamp includ timestamp includ tombston valid option throw e load row key fals configur option option load key string valu configur option get option valu load key true equal ignor case valu equal ignor case valu valu null empti string null check backward compat load row key true delimit configur option get option valu delim null delimit configur option get option valu delim ignor whitespac true configur option option ignor whitespac string valu configur option get option valu ignor whitespac true equal ignor case valu ignor whitespac fals column info pars column list column list delimit ignor whitespac mr context deseri first call context get context get client system prop call valu null spark mode spark executor first initi object context get context get client system prop null context deseri call need check whether context get context get client system prop null null default caster otherwis context get context get client system prop get properti detail see string default caster context get context get client system prop null context get context get client system prop get properti string caster option configur option get option valu caster default caster equal ignor case caster option caster new utf storag convert els equal ignor case caster option caster new base binari convert els tri caster load caster context instanti func spec caster option catch class cast except e error configur caster implement load caster interfac throw new except e catch runtim except e error configur caster class find e throw new except e debug use caster caster get class cach integ valu configur option get option valu cach cach block boolean valu configur option get option valu cach block fals limit long valu configur option get option valu limit fals configur option option string valu configur option get option valu true equal ignor case valu equal ignor case valu valu null empti string null check backward compat true configur option option min timestamp min timestamp long pars long configur option get option valu min timestamp els min timestamp configur option option max timestamp max timestamp long pars long configur option get option valu max timestamp els max timestamp long configur option option timestamp timestamp long pars long configur option get option valu timestamp els timestamp includ timestamp fals configur option option includ timestamp string valu configur option get option valu includ timestamp true equal ignor case valu equal ignor case valu valu null empti string null check backward compat includ timestamp true includ tombston fals configur option option includ tombston string valu configur option get option valu includ tombston true equal ignor case valu equal ignor case valu valu null includ tombston true init scan return properti base code context signatur code privat properti get properti return context get context get properti get class new string context signatur return code context signatur project field code privat string project field name return context signatur project field param column list param delimit param ignor whitespac return privat list column info pars column list string column list string delimit boolean ignor whitespac list column info column info new array list column info default behavior allow combin space delimit default comma set ignor whitespac includ whitespac column name string col name column list split delimit ignor whitespac list string column new array list string string col name col name string sub col name col name split string sub col name sub col name sub col name sub col name trim sub col name length column add sub col name col name column array new string column size string col name col name column info add new column info col name return column info privat void init scan throw except scan new scan scan set cach block cach block scan set cach cach set filter configur option option gt gt byte byte binari util slashis configur option get option valu gt add row filter compar op gt scan set start row gt configur option option lt lt byte byte binari util slashis configur option get option valu lt add row filter compar op lt scan set stop row lt configur option option gte gte byte byte binari util slashis configur option get option valu gte scan set start row gte configur option option lte lte byte byte binari util slashis configur option get option valu lte byte lt increment lte debug enabl debug string format increment lte valu byte set stop row byte string lte string lte string lt lt null scan set stop row increment lte match filter short circuit scan long match set stop row call limit number region need scan add filter new match filter new row filter compar op new binari compar lte configur option option regex regex util slashis configur option get option valu regex add filter new row filter compar op new regex string compar regex configur option option min timestamp configur option option max timestamp scan set time rang min timestamp max timestamp configur option option timestamp scan set time stamp timestamp configur option option max result per column famili int max result per column famili integ valu configur option get option valu max result per column famili scan set max result per column famili max result per column famili group column info famili n contain prefix n need set filter call add column add famili see javadoc boolean column prefix exist fals column info column info column info column info get column prefix null column prefix exist true break column prefix exist add filter without column prefix column info els add filter column prefix column info column prefix n need filter call add column add famili scan privat void add filter without column prefix list column info column info need check mix type famili n call add column add famili famili map string list column info group map group famili column info entri string list column info entri set group map entri set boolean column true column info column info entri set get valu column info column map column fals break column column info column info entri set get valu debug enabl debug add column scan via add column cf name byte string column info get column famili byte string column info get column name scan add column column info get column famili column info get column name els string famili entri set get key debug enabl debug add column famili scan via add famili cf name famili scan add famili byte byte famili qualifi prefix wildcard e cf foo need filter everi possibl column return show becom innefici long list column mix prefix wildcard filter list must pass famili filter must pass filter list either qualifi column prefix filter column famili filter e cf explicit column descriptor e cf foo mix n need filter sinc scan take care privat void add filter column prefix list column info column info need appli column list filter famili filter list column filter null map string list column info group map group famili column info string cf string group map key set list column info column info list group map get cf string byte cf byte byte cf string filter roll one parent filter column filter null column filter new filter list filter list oper group contain column famili filter one column filter filter list column group filter new filter list filter list oper column group filter add filter new famili filter compar op new binari compar cf filter list column filter new filter list filter list oper column info col info column info list col info column map debug enabl debug add famili prefix filter valu byte string col info get column famili byte string col info get column prefix add prefix filter list column filter col info get column prefix null column filter add filter new column prefix filter col info get column prefix els debug enabl debug add famili descriptor filter valu byte string col info get column famili byte string col info get column name add qualifi filter list column filter column filter add filter new qualifi filter compar op new binari compar col info get column name column filter get filter size column group filter add filter column filter column filter add filter column group filter column filter null add filter column filter privat void add row filter compar op op byte val debug enabl debug add filter op string valu byte string binari val add filter new row filter op new binari compar val privat void add filter filter filter filter list scan filter filter list scan get filter scan filter null scan filter new filter list filter list oper scan filter add filter filter scan set filter scan filter return column info list extern object inspect return list column info object public list column info get column info list return column info updat column info list use need implement custom project protect void set column info list list column info column info list column info column info list store requir field list serial object fetch cluster plan overwrit push project need call requir field list access cluster protect void store project field name requir field list requir field list throw frontend except tri get properti set properti project field name object serial serial requir field list catch except e throw new frontend except e overrid public tupl get next throw except tri reader next key valu immut byte writabl row key immut byte writabl reader get current key result result result reader get current valu int tupl size column info size use map famili qualifi recent version cell fetch multipl vesion could use featur navig map byte navig map byte byte result map result get version map load row key tupl size tupl tupl tupl factori get instanc new tupl tupl size int start index load row key tupl set new datum byte array row key get start index int column info size int current index start index column info column info column info get column info column map column famili need iter set valu find navig map byte byte cf result result map get column info get column famili map string data byte array cf map new hash map string data byte array cf result null byte quantifi cf result key set need check prefix filter see valu includ can n reli server side filter sinc user could specifi multipl filter column info get column prefix null column info prefix match quantifi byte cell cf result get quantifi datum byte array valu cell null null new datum byte array cell cf map put byte string quantifi valu tupl set current index cf map els column set valu byte cell result get valu column info get column famili column info get column name data byte array valu cell null null new datum byte array cell tupl set current index valu debug enabl int tupl size debug tupl valu tupl get return tupl catch interrupt except e throw new except e return null overrid public input format get input format tabl input format input format new base tabl builder limit limit gt gt gte gte lt lt lte lte conf conf build input format set scan scan return input format overrid public void prepar read record reader reader split split reader reader overrid public void set context signatur string signatur context signatur signatur overrid public void set locat string locat job job throw except properti udf prop get properti job get configur set boolean split combin true conf initi local job config job string deleg token set udf prop get properti deleg token set null add base deleg token conf job udf prop set properti true string tablenam locat locat start hbase tablenam locat substr conf set tabl input format tablenam string project field udf prop get properti project field name project field null updat column info push project requir field list object serial deseri project field add filter without column prefix column info requir field list null properti p context get context get properti get class new string context signatur p set properti context signatur project field object serial serial requir field list overrid public list string get ship file depend base right thing avail tri configur conf new configur tabl map reduc util add base depend jar conf conf get tmpjar null string tmpjar conf get string tmpjar list string ship file new array list string tmpjar length string tmpjar tmpjar ship file add new tmpjar get path return ship file catch except e e instanceof malform except debug tabl map reduc util add base depend jar tmpjar malform url fall back previou logic e els debug tabl map reduc util add base depend jar invoc fail fall back previou logic e list class class list new array list class class list add org apach hadoop hbase client tabl class main hbase jar hbase client class list add org apach hadoop hbase mapreduc tabl split class main hbase jar hbase server class list add org apach zookeep zoo keeper class zookeep addit jar specif v add class list org cloudera htrace trace class list htrace add class list org apach hadoop hbase protobuf gener base proto class list hbase protocol add class list org apach hadoop hbase tabl name class list hbase common add class list org apach hadoop hbase compat factori class list hbase hadoop compat add class list org jboss netti channel channel factori class list netti return func util get ship file class list privat void add class list string class name list class class list tri class klass class name class name class list add klass catch class find except e debug skip add jar class class name privat job conf initi local job config job job properti udf prop get properti configur job conf job get configur job conf local conf new job conf job conf udf prop contain key entri object object entri udf prop entri set local conf set string entri get key string entri get valu els configur hbase conf base configur creat entri string string entri hbase conf job conf may conf overrid one hbase site xml copi hbase config job config context also avoid copi core default xml core site xml prop hbase conf context would redund job conf get entri get key null udf prop set properti entri get key entri get valu local conf set entri get key entri get valu udf prop set properti true return local conf get deleg token hbase add job suppress warn rawtyp uncheck privat void add base deleg token configur hbase conf job job context get context frontend return kerbero equal ignor case hbase conf get tri user group inform current user user group inform get current user current user kerbero credenti token util obtain token job hbase conf current user job els info fetch hbase deleg token kerbero avail catch runtim except throw catch except e throw new undeclar throwabl except e unexpect error call token util obtain token job overrid public string rel absolut path string locat path cur dir throw except return locat set caster use read valu write base overrid public load caster get load caster throw except return caster store func method see org apach store func interfac get output format overrid public output format get output format throw except output format null conf null throw new illeg state except set store locat call els output format new tabl output format output format set conf conf return output format overrid public void check schema resourc schema throw except caster instanceof load store caster error caster must implement load store caster write base throw new except bad caster caster get class schema get properti set properti context signatur schema object serial serial schema suppress uncheck warn record writer parameter store func interfac overrid public void prepar write suppress warn rawtyp record writer writer throw except writer writer suppress uncheck warn record writer parameter store func interfac suppress warn uncheck overrid public void put next tupl throw except resourc field schema field schema schema null null schema get field byte type field schema null datum type find type get field schema get type long t int start index includ timestamp byte timestamp type field schema null datum type find type get start index field schema start index get type load store caster caster load store caster caster switch timestamp type case data type t caster byte long data byte array get start index get break case data type t long get start index long valu break case data type t date time get start index get milli break default throw new except unabl find convert timestamp field get start index start index els ts system current time milli check delet includ tombston boolean get start index boolean valu delet delet creat delet get type t tri delet put do writer write null delet return catch interrupt except e throw new except e start index put put creat put get type debug enabl debug put next disabl column info column info column info debug put next col column info int start index size column info column info column info get start index debug enabl debug put next tupl valu get cf column column info column info column map put add column info get column famili column info get column name t obj byte get field schema null datum type find type get field schema get type els map string object cf map map string object get cf map null string col name cf map key set debug enabl debug put next col name col name class col name get class deal fact map type current detect type runtim case store cf suboptim put add column info get column famili byte byte col name string t obj byte cf map get col name data type find type cf map get col name tri put empti writer write null put catch interrupt except e throw new except e public method initi delet param key param type param timestamp return new delet throw except public delet creat delet object key byte type long timestamp throw except delet delet new delet obj byte key type delet set timestamp timestamp delet set write fals return delet public method initi put use allow assert put initi unit test param key param type return new put throw except public put creat put object key byte type throw except put put new put obj byte key type put set write fals return put suppress warn uncheck privat byte obj byte object byte type throw except load store caster caster load store caster caster null return null switch type case data type return datum byte array get case data type return caster byte data bag case data type return caster byte string case data type return caster byte doubl case data type return caster byte float case data type return caster byte integ case data type return caster byte long case data type return caster byte big integ case data type return caster byte big decim case data type return caster byte boolean case data type return caster byte date time type convers uncheck reli data type find type right thing case data type return caster byte map string object case data type return null case data type return caster byte tupl case data type throw new except unabl determin type get class default throw new except unabl find convert tupl field overrid public string rel ab path store locat string locat path cur dir throw except return locat overrid public void set store func context signatur string signatur context signatur signatur overrid public void set store locat string locat job job throw except locat start hbase job get configur set tabl output format locat substr els job get configur set tabl output format locat string serial schema get properti get properti context signatur schema serial schema null schema resourc schema object serial deseri serial schema conf initi local job config job set udf properti get hbase deleg token like set locat set store locat get differ job object call last job pass one launch end get multipl hbase deleg token add base deleg token conf job overrid public void cleanup failur string locat job job throw except overrid public void cleanup success string locat job job throw except load push method overrid public list oper set get featur return array list load push oper set overrid public requir field respons push project requir field list requir field list throw frontend except list requir field requir field requir field list get field list column info new column list new array list expect size requir field size requir field list null addit also call set locat debug project alreadi set skip return new requir field respons true project handl push project invok front end push project store serial project context adjust column info set locat invok backend read project context set locat invok method column info adject col offset offset column list need appli index get requir field row key real column int col offset load row key proj offset offset requir field list need appli figur column prune key prune skip row key element list trim col list int proj offset col offset requir field list requir field list requir field list null requir field size column info size col offset throw new frontend except list column project base requir field size larg base storag configur load column info size col offset rememb project store project field name requir field list load row key requir field size requir field get get index load row key fals proj offset int proj offset requir field size int field index requir field get get index new column add column info get field index col offset debug enabl debug push project project load row key load row key column info col info new column debug push project col col info set column info list new column return new requir field respons true overrid public void ensur key instanc split throw except op hbase key uniqu also work thing like delimit key prefix region split polici need partial key match includ split debug ensur key instanc split overrid public writabl compar tabl split get split compar input split split throw except split instanceof tabl split return new tabl split compar tabl split split els throw new runtim except load func expect split type tabl split split get class get name class encapsul logic around column name specifi posit column list user specifi column name one way foo foo foo bar foo bar first result map add tupl last result scalar rd form result prefix filter map public class column info final string origin column name alway set final byte column famili alway set final byte column name set exist n contain final byte column prefix set contain prefix follow public column info string col name origin column name col name string cf column col name split fs byte column byte column famili byte byte cf column cf column length cf column length equal cf column cf column end column prefix byte byte cf column substr cf column length column name null els column name byte byte cf column column prefix null els column prefix null column name null public byte get column famili return column famili public byte get column name return column name public byte get column prefix return column prefix public boolean column map return column name null public boolean prefix match byte qualifi return byte start qualifi column prefix overrid public string string return origin column name group list column info object column famili return map list column info object use string key sinc implement compar param column info column info list group return map list key column famili static map string list column info group famili list column info column info map string list column info group map new hash map string list column info column info column info column info string cf byte string column info get column famili list column info column info list group map get cf column info list null column info list new array list column info column info list add column info group map put cf column info list return group map static string string byte byte byte null return null string buffer sb new string buffer int byte length sb append sb append byte return sb string increment byte array one use set stop row byte array set maximum byte valu origin array return byte append base compar byte leav right byte array equal byte array extra byte append exampl code byte code increment code byte code code code param byte array increment byte return copi byte array increment static byte increment byte byte boolean max true int byte length byte byte length x ff max fals break max return array copi byte byte length byte increment byte clone int byte length boolean carri fals int val byte x ff int total val total carri true total els total carri true increment byte total carri return increment return increment 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin import java io file import java io except import java io print stream import java net import java util iter import java util map import java util map entri import java util properti import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f file system import org apach hadoop hdf distribut file system import org apach hadoop mapr job conf import org apach except import org apach backend backend except import org apach backend datastorag data storag import org apach backend executionengin exec except import org apach backend executionengin execut engin import org apach backend hadoop kerbero import org apach backend hadoop datastorag configur util import org apach backend hadoop datastorag data storag import org apach backend hadoop executionengin fetch fetch launcher import org apach backend hadoop executionengin fetch fetch optim import org apach backend hadoop executionengin map reduc layer configur import org apach backend hadoop executionengin map reduc layer phi plan setter import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin util map red util import org apach backend hadoop stream hadoop execut manag import org apach impl context import org apach impl impl constant import org apach impl logic layer frontend except import org apach impl plan oper key import org apach impl plan plan except import org apach impl plan visitor except import org apach impl stream execut manag import org apach impl util util import org apach newplan oper import org apach newplan logic relat import org apach newplan logic relat log phi translat visitor import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat oper import org apach tool pigstat stat import com googl common collect map public abstract class execut engin implement execut engin privat static final log log factori get log execut engin class public static final string hadoop site xml public static final string core site xml public static final string yarn site xml public static final string core default xml public static final string mapr default xml public static final string yarn default xml public static final string local protect context context protect data storag d protect launcher launcher key oper key logic plan origin physic plan val oper key root phyisic plan protect map oper key oper key logic physic key protect map oper physic oper new log phi map public execut engin context context context context ds null logic physic key map new hash map deprec public job conf get job conf job conf jc new job conf fals util recomput properti jc context get properti return jc overrid public data storag get data storag return d overrid public void init throw exec except init context get properti load properti core site xml includ aw key need local non local mode public job conf get conf throw exec except job conf jc new job conf jc add resourc job conf jc new job conf fals iter entri string string jc iter next entri string string e next string key e get key string valu e get valu key start f key start f n jc set key valu return jc public job conf get local conf job conf jc new job conf fals jc add resourc jc add resourc jc add resourc return jc public job conf get exec conf properti properti throw exec except job conf jc null check exist user provid config string hadoop config overriden properti get properti use overriden hadoop config hadoop config overriden null hadoop config overriden equal true jc new job conf configur util configur properti els check exist hadoop site xml core site xml classpath user provid conf use configur test conf new configur class loader cl test conf get class loader hadoop site cl get resourc core site cl get resourc hadoop site null core site null throw new exec except find hadoop configur classpath neither hadoop site xml core site xml find classpath plan use local mode pleas put x local option command line jc new job conf jc add resourc cluster hadoop site xml jc add resourc return jc suppress warn resourc privat void init properti properti throw exec except string cluster null string name node null need build configur object first manner describ get back properti object inspect reason look exist properti object may get right set want read configur order specifi look hadoop default specifi two resourc load order classpath hadoop default xml read default hadoop hadoop site xml site specif configur give hadoop instal add set properti object overrid exist properti accomplish method call job conf jc context get exec type local jc get exec conf properti trick invok static initi distribut file system add hdf default xml configur new distribut file system els run local mode do not read hadoop conf file properti get properti configur null properti set properti configur properti set properti configur properti remov f default name deprec hadoop x properti set properti file system file jc get local conf job conf jc get conf configur util merg conf jc jc method alter properti object overrid hadoop properti valu properti recomput properti util recomput properti jc properti ensur log use kerbero keytab provid continu kerbero tri kerbero keytab login jc cluster jc get configur name node jc get file system info connect hadoop file system name node null name node constructor set d new data storag properti cluster null cluster equal ignor case info connect map reduc job tracker jc get configur public physic plan compil logic plan plan properti properti throw frontend except plan null int err code string msg plan compil throw new frontend except msg err code except translat new logic plan physic plan log phi translat visitor translat new log phi translat visitor plan translat set context context translat visit new log phi map translat get log phi map return translat get physic plan public map oper physic oper get log phi map return new log phi map public map map logic relat oper physic oper get inner log phi map logic plan plan map map logic relat oper physic oper result map new hash map iter oper outer iter plan get oper outer iter next oper oper outer iter next oper instanceof logic plan inner plan oper get inner plan map logic relat oper physic oper inner op map map new hash map iter oper inner iter inner plan get oper inner iter next oper inner oper inner iter next inner op map put logic relat oper inner oper new log phi map get inner oper result put oper inner op map return result overrid public stat launch logic plan lp string grp name context pc throw frontend except exec except tri physic plan pp compil lp pc get properti compil physic plan fulfil requir fetch optim transform job creation skip simpl fetch stat return result directli fetch underli storag fetch optim plan fetchabl pc pp new phi plan setter pp visit return new fetch launcher pc launch pp return launcher launch pp grp name context catch exec except e throw exec except e catch frontend except e throw frontend except e catch except e throw new exec except e final launcher reset overrid public void explain logic plan lp context pc print stream ps string format boolean verbos file file string suffix throw plan except visitor except except frontend except print stream pp ps print stream ep ps boolean fetchabl fals tri file null pp new print stream new file file physic plan suffix ep new print stream new file file exec plan suffix physic plan pp compil lp pc get properti pp explain pp format verbos map red util check leaf store pp context fetchabl fetch optim plan fetchabl pc pp fetchabl new fetch launcher context explain pp pc ep format return launcher explain pp context ep format verbos final launcher reset fetchabl context get properti remov impl constant close stream open file null pp close ep close overrid public properti get configur properti properti new properti properti put context get properti return properti overrid public void set configur properti new configur throw exec except init new configur overrid public void set properti string properti string valu properti properti context get properti configur deprec properti properti put configur util expand altern name properti valu els properti put properti valu overrid public execut manag get execut manag return new hadoop execut manag overrid public void kill throw backend except launcher null launcher kill overrid public void kill job string job throw backend except launcher null launcher kill job job get job conf overrid public void destroy launcher null launcher destroy 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util list import org apach hadoop conf configur import org apach hadoop hive conf hive conf import org apach hadoop hive conf hive conf conf var import org apach hadoop hive ql exec function info import org apach hadoop hive ql exec function registri import org apach hadoop hive ql exec mapr context import org apach hadoop hive ql exec import org apach hadoop hive ql exec import org apach hadoop hive ql pars semant except import org apach hadoop hive ql udf gener collector import org apach hadoop hive ql udf gener gener resolv import org apach hadoop hive ql udf gener gener import org apach hadoop hive ql udf gener gener import org apach hadoop hive serd objectinspector constant object inspector import org apach hadoop hive serd objectinspector primit object inspector import org apach hadoop hive serd objectinspector struct field import org apach hadoop hive serd objectinspector struct object inspector import org apach hadoop hive shim hadoop shim import org apach hadoop hive shim hadoop shim secur import org apach hadoop hive shim shim loader import org apach hadoop mapr counter import org apach hadoop mapr counter counter import org apach hadoop mapr input split import org apach hadoop mapr job conf import org apach hadoop mapr report import org apach eval func import org apach backend hadoop executionengin map reduc layer configur import org apach datum data type import org apach datum tupl import org apach impl context import org apach impl util context import org apach impl util util import org apach impl util hive hive util import org apach tool pigstat statu report import com esotericsoftwar kryo serial abstract class hive base extend eval func object static protect class constant object inspect info constant object inspector constant static constant object inspect info pars string param throw except constant object inspect info info new constant object inspect info param param replac object constant util pars constant param datum type find type constant data type tupl tupl constant info constant new constant object inspector size int size get null info constant hive util get constant object inspector get els info constant new constant object inspector info constant hive util get constant object inspector constant return info boolean empti return constant null int size return constant length constant object inspector get int return constant void inject constant object inspector struct object inspector input object inspector empti int size get null struct field orig field input object inspector get struct field ref get struct field newfield new hive util field orig field get field name get list hive util field input object inspector get struct field ref set hive util field newfield static protect class resolv func string func name throw except string class name func name class udf class function registri get function name contain func name function info func tri func function registri get function info func name catch semant except e throw new except e udf class func get function class els udf class context resolv class name class name udf class null throw new except find hive func name return udf class constant report type noth static protect class hive report implement report statu report rep hive report statu report rep rep rep public void set statu string rep set statu public void progress rep progress public counter get counter enum name tri counter counter new counter counter incr counter name rep get counter name get valu return counter find counter name catch except e throw new runtim except e public counter get counter string group string name tri counter counter new counter counter incr counter group name rep get counter group name get valu return counter find counter group name catch except e throw new runtim except e public void incr counter enum key long amount rep incr counter key amount public void incr counter string group string counter long amount rep incr counter group counter amount public input split get input split throw unsupport oper except throw new unsupport oper except report input public float get progress return protect static mapr context instanti mapr context configur conf context get context get job conf boolean map conf get boolean configur fals conf get exectyp start map true hive conf set var conf conf var tez mapr context context mapr context init map new job conf context get context get job conf context set report new hive report statu report get instanc return context overrid public list string get ship file list string file func util get ship file new class gener class primit object inspector class hive conf class serial class shim loader class hadoop shim class hadoop shim secur class collector class return file static protect string get error messag class c string buffer messag new string buffer pleas declar c get name class assign c gener class assign c messag append hive class get name els gener class assign c messag append hive class get name els class assign c gener resolv class assign c messag append hive class get name els messag new string buffer c get name hive return messag string 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import org apach hadoop hive ql metadata hive except import org apach hadoop hive ql udf gener collector import org apach hadoop hive ql udf gener gener import org apach hadoop hive serd objectinspector object inspector import org apach hadoop hive serd objectinspector struct object inspector import org apach hadoop hive serd typeinfo type info import org apach hadoop hive serd typeinfo type info util import org apach resourc schema import org apach resourc schema resourc field schema import org apach datum bag factori import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach impl logic layer schema schema import org apach impl util hive hive util use hive gener exampl defin explod hive explod load mydata b chararray foreach gener flatten explod public class hive extend hive base privat boolean init fals privat gener udtf privat boolean end input fals static class schema info struct object inspector input object inspector object inspector output object inspector privat void init schema input schema gener udtf constant object inspect info constant info throw except resourc schema rs new resourc schema input schema resourc field schema wrap tupl field schema new resourc field schema wrap tupl field schema set type data type wrap tupl field schema set schema rs type info ti hive util get type info wrap tupl field schema input object inspector struct object inspector hive util creat object inspector ti constant info null constant info inject constant object inspector input object inspector tri output object inspector udtf initi input object inspector catch except e throw new except e schema info schema info new schema info constant object inspect info constant info privat static bag factori bf bag factori get instanc privat hive collector collector null public hive string func name throw instanti except illeg access except except class hive class resolv func func name gener class assign hive class udtf gener hive class new instanc els throw new except get error messag hive class public hive string func name string param throw instanti except illeg access except except func name constant info constant object inspect info pars param overrid public object exec tupl input throw except init udtf configur instanti mapr context schema info init get input schema udtf constant info init true collector null collector new hive collector udtf set collector collector els collector init tri end input udtf process input get array els udtf close catch except e throw new except e return collector get bag overrid public schema output schema schema input tri init schema info init get input schema udtf constant info init true resourc field schema rf hive util get resourc field schema type info util get type info object inspector schema info output object inspector resourc schema tupl schema new resourc schema tupl schema set field new resourc field schema rf resourc field schema bag field schema new resourc field schema bag field schema set type data type bag field schema set schema tupl schema resourc schema bag schema new resourc schema bag schema set field new resourc field schema bag field schema return schema get schema bag schema catch except e throw new runtim except e class hive collector implement collector data bag bag bf new default bag public void init bag clear overrid public void collect object input throw hive except tri tupl output tupl tupl hive util convert hive input schema info output object inspector null output tupl size output tupl get instanceof tupl bag add tupl output tupl get els bag add output tupl catch except e throw new hive except e public datum bag get bag return bag overrid public boolean need end input process return true overrid public void set end input boolean end input end input end input 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl util hive import java io except import java math big decim import java math big integ import java sql timestamp import java util array list import java util hash map import java util iter import java util list import java util map import org apach hadoop hive common type hive char import org apach hadoop hive common type hive decim import org apach hadoop hive common type hive varchar import org apach hadoop hive serd io hive decim writabl import org apach hadoop hive serd io timestamp writabl import org apach hadoop hive serd objectinspector constant object inspector import org apach hadoop hive serd objectinspector list object inspector import org apach hadoop hive serd objectinspector map object inspector import org apach hadoop hive serd objectinspector object inspector import org apach hadoop hive serd objectinspector primit object inspector import org apach hadoop hive serd objectinspector struct field import org apach hadoop hive serd objectinspector struct object inspector import org apach hadoop hive serd objectinspector primit abstract primit java object inspector import org apach hadoop hive serd objectinspector primit binari object inspector import org apach hadoop hive serd objectinspector primit hive decim object inspector import org apach hadoop hive serd objectinspector primit primit object inspector factori import org apach hadoop hive serd objectinspector primit java constant boolean object inspector import org apach hadoop hive serd objectinspector primit java constant doubl object inspector import org apach hadoop hive serd objectinspector primit java constant float object inspector import org apach hadoop hive serd objectinspector primit java constant int object inspector import org apach hadoop hive serd objectinspector primit java constant long object inspector import org apach hadoop hive serd objectinspector primit java constant string object inspector import org apach hadoop hive serd objectinspector primit timestamp object inspector import org apach hadoop hive serd objectinspector primit writabl constant float object inspector import org apach hadoop hive serd typeinfo list type info import org apach hadoop hive serd typeinfo map type info import org apach hadoop hive serd typeinfo primit type info import org apach hadoop hive serd typeinfo struct type info import org apach hadoop hive serd typeinfo type info import org apach hadoop hive serd typeinfo type info factori import org apach hadoop io byte writabl import org apach hadoop io float writabl import org apach warn import org apach resourc schema import org apach resourc schema resourc field schema import org apach backend executionengin exec except import org apach datum bag factori import org apach datum datum bag import org apach data data byte array import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach tool pigstat statu report import org joda time date time public class hive util static tupl factori tf tupl factori get instanc public static object convert hive object obj object inspector oi boolean includ column object result null obj null return result switch oi get categori case primit object inspector poi primit object inspector oi result get primari hive obj poi break case struct object inspector soi struct object inspector oi list struct field element field list struct field soi get struct field ref list object item soi get struct field data list obj tupl tf new tupl int item size includ column null includ column object convert item convert hive item get element field get get field object inspector null append convert item result break case map object inspector moi map object inspector oi object inspector key object inspector moi get map key object inspector object inspector valu object inspector moi get map valu object inspector map object object map object object obj result new hash map map entri object object entri entri set object convert key convert hive entri get key key object inspector null object convert valu convert hive entri get valu valu object inspector null convert key null map result put convert key string convert valu els statu report report statu report get instanc report null report incr counter warn break case list object inspector loi list object inspector oi result bag factori get instanc new default bag object inspector item object inspector loi get list element object inspector object item loi get list obj object convert item convert hive item item object inspector null tupl inner tupl hive array contain singl item type tupl need wrap tupl convert item instanceof tupl inner tupl tupl convert item els inner tupl tf new tupl tri inner tupl set convert item catch except e throw new runtim except e data bag result add inner tupl break default throw new illeg argument except unknown type oi get categori return result public static object get primari hive object obj primit object inspector poi object result null obj null return result switch pou get primit categori case case case case case case result pou get primit java object obj break case result hive char poi get primit java object obj get valu break case result hive varchar poi get primit java object obj get valu break case result int byte pou get primit java object obj break case result int short pou get primit java object obj break case byte b byte poi get primit java object obj make copi result new datum byte array b b length break case java sql timestamp orig time stamp java sql timestamp poi get primit java object obj result new date time orig time stamp get time break case java sql date orig date java sql date pou get primit java object obj result new date time orig date get time break case org apach hadoop hive common type hive decim orig decim org apach hadoop hive common type hive decim poi get primit java object obj result orig decim big decim valu break default throw new illeg argument except unknown primit type pou get primit categori return result public static resourc field schema get resourc field schema type info ti throw except resourc field schema field schema new resourc field schema resourc field schema inner fs resourc schema inner schema switch ti get categori case struct type info sti struct type info ti field schema set type data type list type info type info sti get struct field type info list string name sti get struct field name inner fs new resourc field schema type info size int type info size inner fs get resourc field schema type info get inner fs set name name get inner schema new resourc schema inner schema set field inner fs field schema set schema inner schema break case list type info lti list type info ti field schema set type data type inner fs new resourc field schema resourc field schema item schema get resourc field schema lti get list element type info item schema get type data type inner fs item schema els item tupl wrap tupl resourc field schema tupl field schema new resourc field schema tupl field schema set type data type resourc schema tupl schema new resourc schema tupl schema set field new resourc field schema item schema inner fs tupl field schema inner schema new resourc schema inner schema set field inner fs field schema set schema inner schema break case map type info mti map type info ti field schema set type data type inner fs new resourc field schema inner fs get resourc field schema mti get map valu type info inner schema new resourc schema inner schema set field inner fs field schema set schema inner schema break case switch primit type info ti get primit categori case field schema set type data type break case field schema set type data type break case field schema set type data type break case field schema set type data type break case field schema set type data type break case field schema set type data type break case field schema set type data type break case field schema set type data type break case field schema set type data type break case field schema set type data type break case field schema set type data type break case field schema set type data type break case field schema set type data type break case field schema set type data type break default throw new illeg argument except unknown primit type primit type info ti get primit categori break return field schema public static type info get type info resourc field schema fs throw except type info ti switch f get type case data type ti new struct type info array list string name new array list string array list type info type info new array list type info resourc field schema sub fs f get schema get field type info info get type info sub fs name add sub fs get name type info add info struct type info ti set struct field name name struct type info ti set struct field type info type info break case datum type ti new list type info f get schema null f get schema get field length throw new except wrong bag inner schema resourc field schema tupl schema f get schema get field resourc field schema item schema tupl schema singl item tupl remov tupl put inner item list directli tupl schema get schema get field length item schema tupl schema get schema get field type info element field get type info item schema list type info ti set list element type info element field break case data type ti new map type info type info valu field f get schema null f get schema get field length valu field type info factori binari type info els valu field get type info f get schema get field map type info ti set map key type info type info factori string type info map type info ti set map valu type info valu field break case data type ti type info factori boolean type info break case data type ti type info factori int type info break case data type ti type info factori long type info break case data type ti type info factori float type info break case data type ti type info factori doubl type info break case data type ti type info factori string type info break case data type ti type info factori timestamp type info break case data type ti type info factori decim type info break case data type ti type info factori decim type info break case data type ti type info factori binari type info break default throw new illeg argument except unknown datum type data type find type name f get type return ti static public class field implement struct field privat final string name privat final object inspector inspector privat final int offset public field string name object inspector inspector int offset name name inspector inspector offset offset overrid public string get field name return name overrid public object inspector get field object inspector return inspector overrid public int get field return offset overrid public string get field comment return null static class struct inspector extend struct object inspector privat list struct field field struct inspector struct type info info array list string field name info get struct field name array list type info field type info get struct field type info field new array list struct field field name size int field name size field add new field field name get creat object inspector field type get struct inspector list struct field field field field overrid public list struct field get struct field ref return field overrid public struct field get struct field ref string struct field field field field get field name equal return field return null overrid public object get struct field data object object struct field field object result null tri result tupl object get field field offset catch exec except e throw new runtim except e return result overrid public list object get struct field data list object object return tupl object get overrid public string get type name string builder buffer new string builder buffer append struct int field size struct field field field get buffer append buffer append field get field name buffer append buffer append field get field object inspector get type name buffer append return buffer string overrid public categori get categori return categori overrid public boolean equal object null get class get class return fals els return true els list struct field struct inspector field size field size return fals int field size struct field leav get struct field right field get leav get field name equal right get field name left get field object inspector equal right get field object inspector return fals return true static class map object inspector implement map object inspector privat object inspector key privat object inspector valu map object inspector map type info info key primit object inspector factori java string object inspector valu creat object inspector info get map valu type info overrid public object inspector get map key object inspector return key overrid public object inspector get map valu object inspector return valu overrid public object get map valu element object map object key return map map get key overrid public map object object get map object map return map map overrid public int get map size object map return map map size overrid public string get type name return map key get type name valu get type name overrid public categori get categori return categori overrid public boolean equal object null get class get class return fals els return true els map object inspector map object inspector return key equal key valu equal valu static class list object inspector implement list object inspector privat object inspector child privat object cach object privat int index privat iter tupl iter list object inspector list type info info child creat object inspector info get list element type info overrid public object inspector get list element object inspector return child overrid public object get list element object list int list cach object cach object list index datum bag db datum bag list iter db iter index index tri tupl iter next singl item tupl take item directli list size return get els return catch except e throw new runtim except e els throw new runtim except sequenti read support overrid public int get list length object list return int datum bag list size overrid suppress warn uncheck public list get list object list list object result new array list object datum bag bag datum bag list tupl bag size tri result add get catch exec except e throw new runtim except e els result add return result overrid public string get type name return array child get type name overrid public categori get categori return categori overrid public boolean equal object null get class get class return fals els return true els object inspector list object inspector child return equal child static class datum byte array object inspector extend abstract primit java object inspector implement binari object inspector data byte array object inspector super type info factori binari type info overrid public byte writabl get primit writabl object object return null null instanceof datum byte array new byte writabl data byte array get new byte writabl byte overrid public byte get primit java object object return datum byte array get static class joda time stamp object inspector extend abstract primit java object inspector implement timestamp object inspector protect joda time stamp object inspector super type info factori timestamp type info overrid public timestamp writabl get primit writabl object object return null null new timestamp writabl new timestamp date time get milli overrid public timestamp get primit java object object return null null new timestamp date time get milli static class decim object inspector extend abstract primit java object inspector implement hive decim object inspector protect decim object inspector super type info factori decim type info overrid public hive decim writabl get primit writabl object object instanceof big decim return null null new hive decim writabl hive decim creat big decim els big integ return null null new hive decim writabl hive decim creat big integ overrid public hive decim get primit java object object instanceof big decim return null null hive decim creat big decim els big integ return null null hive decim creat big integ public static object inspector creat object inspector type info info switch info get categori case switch primit type info info get primit categori case return primit object inspector factori java float object inspector case return primit object inspector factori java doubl object inspector case return primit object inspector factori java boolean object inspector case return primit object inspector factori java int object inspector case return primit object inspector factori java long object inspector case return primit object inspector factori java string object inspector case return new joda time stamp object inspector case return new decim object inspector case return new datum byte array object inspector case case case case throw new illeg argument except never happen primit type info info get primit categori valid primit datum type default throw new illeg argument except unknown primit type primit type info info get primit categori case return new struct inspector struct type info info case return new map object inspector map type info info case return new list object inspector list type info info default throw new illeg argument except unknown type info get categori public static constant object inspector get constant object inspector object obj switch data type find type obj case data type return new java constant float object inspector float obj case data type return new java constant doubl object inspector doubl obj case data type return new java constant boolean object inspector boolean obj case data type return new java constant int object inspector integ obj case data type return new java constant long object inspector long obj case data type return new java constant string object inspector string obj default throw new illeg argument except implement obj get class get name 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin import java io output stream import java util iter import java util properti import org apach common log log import org apach common log log factori import org apach load func import org apach except import org apach backend executionengin exec except import org apach backend executionengin exec job import org apach backend hadoop datastorag configur util import org apach backend hadoop executionengin physic layer relat oper store import org apach datum tupl import org apach impl context import org apach impl io file spec import org apach impl io read end loader import org apach tool pigstat stat public class job implement exec job privat final log log log factori get log get class protect statu protect context context protect file spec file spec protect except backend except protect string alia protect store po store privat stat stat public job statu context context store store string alia statu statu context context po store store file spec po store get file alia alia public job statu context context store store string alia stat stat statu statu context context po store store file spec po store get file alia alia stat stat overrid public get statu return statu overrid public boolean complet throw exec except return true overrid public iter tupl get result throw exec except final load func p tri load func origin load func load func context instanti func spec file spec get func spec p load func new read end loader origin load func configur util configur context get properti file spec get file name catch except e int err code string msg unabl get result file spec throw new exec except msg err code except e return new iter tupl tupl boolean end overrid public boolean next end return fals tri null p get next null end true catch except e log error e null end true throw new error e return end overrid public tupl next tupl next next null null return next tri next p get next catch except e log error e next null end true return next overrid public void remov throw new runtim except remov support overrid public properti get configur return context get properti overrid public stat get statist throw new unsupport oper except return stat overrid public void complet notif object cooki throw new unsupport oper except overrid public void kill throw exec except throw new unsupport oper except overrid public void get log output stream log throw exec except throw new unsupport oper except overrid public void get output stream throw exec except throw new unsupport oper except overrid public void get error output stream error throw exec except throw new unsupport oper except public void set except except e backend except e overrid public except get except return backend except overrid public string get alia throw exec except return alia return po store overrid public store get store return po store 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop secur user group inform import java io except support log use kerbero keytab file br kerbero authent system use ticket limit valit time br consequ run script kerbero secur hadoop cluster limit run time remain valid time kerbero ticket realli complex analyt may becom problem job may need run long time ticket time allow br kerbero keytab file essenti kerbero specif form password user br possibl enabl hadoop job request new ticket expir creat keytab file make part job run cluster extend maximum job durat beyond maximum renew time kerbero ticket br br usag ol li creat keytab file requir princip br p use ktutil tool creat keytab use roughli command br addent password p niel k e rc hmac br addent password p niel k e ae ct br wkt niel keytab p li li set follow properti either via pigrc file command line via file br ul li java secur krb conf br path local krb conf file br usual etc krb conf li li hadoop secur krb princip br pricip want login br usual would look like niel li li hadoop secur krb keytab br path local keytab file must use authent br usual would look like home niel krb niel keytab li ul li ol path variabl local client system start actual script run without special access cluster node public class kerbero privat static final log log factori get log kerbero class public static void tri kerbero keytab login configur conf actual connect may need login use provid credenti user group inform secur enabl user group inform login user tri login user user group inform get login user catch except e error unabl start attempt login use kerbero keytab e get messag return log kerbero keytab skip avoid needless login login user kerbero credenti login user keytab string krb conf conf get java secur krb conf string krb princip conf get hadoop secur krb princip string krb keytab conf get hadoop secur krb keytab attempt login requir set krb conf null krb princip null krb keytab null info tri login use kerbero keytab info krb conf krb conf info krb princip krb princip info krb keytab krb keytab system set properti java secur krb conf krb conf tri user group inform login user keytab krb princip krb keytab catch except e error unabl perform keytab base kerbero authent e get messag 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach pen import java util array list import java util collect import java util hash map import java util link list import java util list import java util map import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper greater expr import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper less expr import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper bin cond import org apach backend hadoop executionengin physic layer express oper cast import org apach backend hadoop executionengin physic layer express oper null import org apach backend hadoop executionengin physic layer express oper map look import org apach backend hadoop executionengin physic layer express oper neg import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper project import org apach backend hadoop executionengin physic layer express oper regexp import org apach backend hadoop executionengin physic layer express oper user comparison func import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper lite packag import org apach backend hadoop executionengin physic layer relat oper counter import org apach backend hadoop executionengin physic layer relat oper demux import org apach backend hadoop executionengin physic layer relat oper distinct import org apach backend hadoop executionengin physic layer relat oper filter import org apach backend hadoop executionengin physic layer relat oper import org apach backend hadoop executionengin physic layer relat oper limit import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach backend hadoop executionengin physic layer relat oper optim import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper rank import org apach backend hadoop executionengin physic layer relat oper sort import org apach backend hadoop executionengin physic layer relat oper split import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer relat oper stream import org apach backend hadoop executionengin physic layer relat oper union import org apach datum datum bag import org apach datum tupl import org apach impl context import org apach impl plan depth first walker import org apach impl plan plan walker import org apach impl plan visitor except import org apach impl util ident hash set import org apach newplan logic relat logic schema import org apach pen util lineag tracer class use attach illustr physic oper public class illustr attach extend phi plan visitor context context lineag tracer lineag hash map physic oper collect ident hash set tupl po eqclass map privat hash map physic oper data bag po data map privat int max record privat boolean revisit fals privat array list boolean sub exp result null privat final map load logic schema poload schema map public illustr attach physic plan plan lineag tracer lineag int max record map load logic schema po load schema map context hadoop context throw visitor except super plan new depth first walker physic oper physic plan plan context hadoop context lineag lineag po eqclass map new hash map physic oper collect ident hash set tupl po data map new hash map physic oper data bag max record max record poload schema map po load schema map revisit enhanc physic plan compil param plan physic plan travers public void revisit physic plan plan throw visitor except push walker new depth first walker physic oper physic plan plan revisit true physic plan ori plan plan plan plan visit plan ori plan pop walker privat void set illustr physic oper po int n eq class revisit po get illustr null return link list ident hash set tupl eq class new link list ident hash set tupl po eqclass map put po eq class int n eq class ident hash set tupl eq class new ident hash set tupl eq class add eq class illustr illustr new illustr lineag eq class context po set illustr illustr po data map put po illustr get datum privat void set illustr physic oper po link list ident hash set tupl eq class revisit po get illustr null return illustr illustr new illustr lineag eq class context po set illustr illustr eq class null po eqclass map put po eq class po data map put po illustr get datum void set illustr physic oper po revisit po get illustr null return link list ident hash set tupl eq class new link list ident hash set tupl ident hash set tupl eq class new ident hash set tupl eq class add eq class illustr illustr new illustr lineag eq class context po set illustr illustr po eqclass map put po eq class po data map put po illustr get datum public map physic oper data bag get data map return po data map overrid public void visit load load ld throw visitor except temporari file need illustr revisit return link list ident hash set tupl eq class new link list ident hash set tupl po eqclass map put ld eq class ident hash set tupl eq class new ident hash set tupl eq class add eq class illustr illustr illustr new illustr lineag eq class max record poload schema map get ld context ld set illustr illustr po data map put ld illustr get datum overrid public void visit store store st throw visitor except set illustr st overrid public void visit filter filter fl throw visitor except set illustr fl sub exp result fl get illustr get sub exp result inner plan attach fl fl get plan sub exp result null overrid public void visit local rearrang local rearrang lr throw visitor except super visit local rearrang lr set illustr lr overrid public void visit packag packag pkg throw visitor except set illustr pkg pkg number equival class overrid public void visit nfe throw visitor except revisit nfe get illustr null return list physic plan inner plan nfe get input plan physic plan inner plan inner plan inner plan attach nfe inner plan list physic oper pred plan get predecessor nfe pred null pred size pred get instanceof packag packag pred get get pkgr distinct equival class packag need use instead succeed equival class set illustr nfe pred get get illustr get equival class nfe get illustr set eq class share els set illustr nfe overrid public void visit union union un throw visitor except revisit un get illustr null return set illustr un null overrid public void visit split split spl throw visitor except revisit spl get illustr null return physic plan po plan spl get plan inner plan attach spl po plan set illustr spl overrid public void visit demux demux demux throw visitor except revisit demux get illustr null return list physic plan inner plan demux get plan physic plan inner plan inner plan inner plan attach demux inner plan set illustr demux overrid public void visit distinct distinct distinct throw visitor except set illustr distinct overrid public void visit sort sort sort throw visitor except set illustr sort overrid public void visit rank rank rank throw visitor except set illustr rank overrid public void visit counter counter counter throw visitor except set illustr counter overrid public void visit project project proj throw visitor except overrid public void visit greater greater expr grt throw visitor except set illustr grt revisit sub exp result null sub exp result add grt get illustr get sub exp result overrid public void visit less less expr lt throw visitor except set illustr lt revisit sub exp result null sub exp result add lt get illustr get sub exp result overrid public void visit equal equal expr gte throw visitor except set illustr gte revisit sub exp result null sub exp result add gte get illustr get sub exp result overrid public void visit equal equal expr lte throw visitor except set illustr lte revisit sub exp result null sub exp result add lte get illustr get sub exp result overrid public void visit equal equal expr eq throw visitor except set illustr eq revisit sub exp result null sub exp result add eq get illustr get sub exp result overrid public void visit equal equal expr eq throw visitor except set illustr eq revisit sub exp result null sub exp result add eq get illustr get sub exp result overrid public void visit regexp regexp throw visitor except set illustr revisit sub exp result null sub exp result add get illustr get sub exp result overrid public void visit null null null throw visitor except set illustr null revisit sub exp result null sub exp result add null get illustr get sub exp result overrid public void visit throw visitor except set illustr overrid public void visit throw visitor except set illustr overrid public void visit throw visitor except set illustr revisit sub exp result null sub exp result add get illustr get sub exp result overrid public void visit bin cond bin cond bin cond overrid public void visit neg neg neg set illustr neg overrid public void visit user func user func user func throw visitor except overrid public void visit comparison func user comparison func comp func throw visitor except one set illustr comp func overrid public void visit map look map look map look set illustr map look overrid public void visit cast cast cast overrid public void visit limit limit lim throw visitor except set illustr lim overrid public void visit stream stream stream throw visitor except set illustr stream param optim overrid public void visit optim optim optim throw visitor except visit optim privat void inner plan attach physic oper po physic plan plan throw visitor except plan walker physic oper physic plan child walker current walker spawn child walker plan push walker child walker child walker walk pop walker link list ident hash set tupl eq class new link list ident hash set tupl sub exp result null revisit int size sub exp result size int size eq class add new ident hash set tupl po get illustr set equival class eq class po 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool pigstat import org apach hadoop conf configur import org apach hadoop f path import org apach classif interfac audienc import org apach classif interfac stabil class encapsul runtim statist user specifi input interfac audienc public interfac stabil evolv public final class input stat privat string name privat string locat privat long byte privat long record privat boolean success public static enum regular sampler index side privat type regular privat configur conf public input stat string locat long byte long record boolean success locat locat byte byte record record success success tri name new path locat get name catch except e locat mal format name locat public string get name return name public string get locat return locat public long get byte return byte public long get number record return record public boolean success return success public configur get conf return conf public get input type return type public string get display string string builder sb new string builder success sb append success type sampler sb append sampl els type index sb append index els sb append read record sb append record append record els sb append record byte sb append append byte append byte sb append append locat append type side sb append side file sb append n els sb append fail read datum append locat append n return sb string public void set conf configur conf conf conf public void mark sampl input type sampler public void mark index input type index public void mark side file input type side 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util iter import org apach accumul import org apach algebra import org apach eval func import org apach except import org apach backend executionengin exec except import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl logic layer schema schema method never use directli use link public class int avg extend eval func doubl implement algebra accumul doubl privat static tupl factori tupl factori tupl factori get instanc overrid public doubl exec tupl input throw except tri long sum sum input sum null either hand empti bag bag fill null return null case return null doubl count count input doubl avg null count avg new doubl sum count return avg catch exec except ee throw ee overrid public string get initi return initi class get name overrid public string get interm return intermedi class get name overrid public string get final return final class get name static public class initi extend eval func tupl overrid public tupl exec tupl input throw except tri tupl tupl factori new tupl input bag one tupl contain column tri avg data bag bg data bag input get integ null bg iter next tupl tp bg iter next integ tp get set null long valu null null set els set return catch exec except ee throw ee catch except e int err code string msg error comput averag get class get simpl name throw new exec except msg err code except e static public class intermedi extend eval func tupl overrid public tupl exec tupl input throw except tri datum bag b datum bag input get return combin b catch exec except ee throw ee catch except e int err code string msg error comput averag get class get simpl name throw new exec except msg err code except e static public class final extend eval func doubl overrid public doubl exec tupl input throw except tri datum bag b datum bag input get tupl combin combin b long sum long combin get sum null return null doubl count long combin get doubl avg null count avg new doubl sum count return avg catch exec except ee throw ee catch except e int err code string msg error comput averag get class get simpl name throw new exec except msg err code except e static protect tupl combin datum bag valu throw exec except long sum long count combin call intermedi final either case initi would call would send valid tupl henc n need check incom bag empti tupl output tupl factori new tupl boolean saw non null fals iter tupl valu iter next tupl next long l long get count null avg contribut departur perform implement inspect size bag l null l els see non null true sum l count long get see non null output set long valu sum els output set null output set long valu count return output static protect long count tupl input throw exec except data bag valu datum bag input get iter valu iter long cnt next tupl tupl next null size get null cnt return cnt static protect long sum tupl input throw exec except except data bag valu datum bag input get hand empti bag return valu null valu size return null long sum boolean saw non null fals iter tupl valu iter next tupl next tri integ integ get count null avg contribut departur perform implement inspect size bag null continu saw non null true sum catch runtim except exp int err code string msg problem comput sum int throw new exec except msg err code except exp see non null return long valu sum els return null overrid public schema output schema schema input return new schema new schema field schema null datum type accumul interfac privat long intermedi sum null privat doubl intermedi count null overrid public void accumul tupl b throw except tri long sum sum b sum null return set default valu intermedi sum null intermedi count null intermedi sum intermedi count doubl count long count b count intermedi count count intermedi sum sum catch exec except ee throw ee catch except e int err code string msg error comput averag get class get simpl name throw new exec except msg err code except e overrid public void cleanup intermedi sum null intermedi count null overrid public doubl get valu doubl avg null intermedi count null intermedi count avg new doubl intermedi sum intermedi count return avg 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java io buffer input stream import java io data input stream import java io data output stream import java io except import java io file import java io file input stream import java io file find except import java io except import java util array list import java util iter import java util element except import org apach common log log import org apach common log log factori import org apach counter import org apach classif interfac audienc import org apach classif interfac stabil interfac audienc privat interfac stabil evolv public class intern cach bag extend self spill bag privat static final long serial version privat static final log log log factori get log intern cach bag class privat transient datum output stream privat transient boolean add do privat transient tupl factori factori use store number tupl spill counter increment privat transient int num tupl spill privat static final inter sede inter sede factori get inter sede instanc public intern cach bag f public intern cach bag int bag count bag count f public intern cach bag int bag count float percent super bag count percent init privat void init factori tupl factori get instanc content new array list tupl add done fals overrid public void add tupl add done throw new illeg state except intern cach bag close add new tupl content size mem limit get cach limit content add content size mem limit add new obj size get memori size els cach limit spill disk tri null log debug enabl log debug memori hold content size record put rest spill file get spill file inc spill count counter write datum data type period updat number tupl spill num tupl spill num tupl spill updat spill rec counter catch except e throw new runtim except e size privat void updat spill rec counter inc spill count counter num tupl spill num tupl spill privat void add do null tri flush close catch except e ignor num tupl spill updat spill rec counter add do true overrid public void clear add done add do super clear add do fals null overrid public boolean distinct return fals overrid public boolean sort return fals overrid public iter tupl iter add do close spill file mark add do add disallow add do return new cach bag iter overrid public long spill throw new runtim except intern cach bag spill call privat class cach bag iter implement iter tupl iter tupl iter data input stream tupl next long num tupl read public cach bag iter iter content iter spill file null spill file size file file spill file get tri new datum input stream new buffer input stream new file input stream file catch file find except fnfe string msg unabl find spill file throw new runtim except msg fnfe overrid public boolean next next null return true iter next next iter next return true null return fals tri tupl tupl read datum next return true catch except eof tri close catch except e null return fals catch except e string msg unabl read spill file throw new runtim except msg e overrid public tupl next next null next throw new element except element iter tupl next next null num tupl read report progress everi record num tupl read x fff report progress return overrid public void remov throw new unsupport oper except remov support cach bag iter 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java io buffer input stream import java io data input stream import java io data output stream import java io except import java io file import java io file input stream import java io file find except import java io except import java util array list import java util collect import java util compar import java util iter import java util link list import java util list iter import java util prioriti queue import org apach common log log import org apach common log log factori import org apach warn order collect tupl possibl multipl datum store unsort come sort time dump file first iter request experement find fast store sort begin allow user defin compar provid default compar case user n specifi one bag regist spillabl memori manag calcul number tupl hold memori spill pro activ file public class intern sort bag extend sort spill bag privat static final long serial version privat static tupl factori g tupl factori tupl factori get instanc privat static final log log log factori get log intern sort bag class privat transient compar tupl comp privat transient boolean read start fals static privat class default compar implement compar tupl overrid suppress warn uncheck public int compar tupl tupl return compar overrid public boolean equal object return overrid public int hash code return public intern sort bag null public intern sort bag compar tupl comp comp public intern sort bag int bag count compar tupl comp bag count f comp public intern sort bag int bag count float percent compar tupl comp super bag count percent init bag count percent comp param comp compar use sort null default compar use privat void init int bag count doubl percent compar tupl comp comp comp null new default compar comp content new array list tupl overrid public void add tupl synchron content read start throw new illeg state except intern sort bag close add new tupl content size mem limit get cach limit proactiv spill comp content add check mani tupl memori hold get averag size first tupl size spill file null spill file empti null mem limit add new obj size get memori size size mark spillabl necessari overrid public boolean sort return true overrid public boolean distinct return fals overrid public iter tupl iter return new sort data bag iter iter handl get next tupl bag datum store combin memori disk privat class sort data bag iter implement iter tupl contain hold tupl prioriti queue store file number tupl come tupl read queue know file read replac tupl privat class contain implement compar contain public tupl tupl public int file num overrid public int compar contain return comp compar tupl tupl overrid public boolean equal object obj obj instanceof contain return compar contain obj return fals overrid public int hash code return tupl hash code buffer tupl easi way next tell whether anoth tupl avail read privat tupl buf null privat int memori ptr privat prioriti queue contain merg null privat array list data input stream stream null privat int cntr sort data bag iter first read need sort datum synchron content read start pre merg collect sort array list tupl content comp read start true overrid public boolean next see find tupl buffer buf next return buf null overrid public tupl next report progress everi time next much fast use mod cntr x ff report progress one buffer use one buf null tupl buf buf null return spill file null spill file size return read memori spill file need read next tupl one file memori return read prioriti implement overrid public void remov privat tupl read prioriti merg null first read need set queue array file stream add one size list memori merg new prioriti queue contain spill file size add one size case spill later stream new array list data input stream spill file size iter file spill file iter next tri datum input stream new datum input stream new buffer input stream new file input stream next stream add add first tupl file merg queue add queue null stream size catch file find except fnfe can n find spill file never happen string msg unabl find spill file log fatal msg fnfe throw new runtim except msg fnfe prime one memori content size add queue null pop top one queue contain c merg poll c null return null add next tupl whereev read queue buffer tupl return reus c tupl c tupl add queue c c file num return privat void add queue contain c int file num c null c new contain c file num file num file num need read memori c tupl read memori c tupl null merg add c return read next tupl indic file datum input stream stream get file num null still datum file c tupl g tupl factori new tupl tri c tupl read field merg add c catch except eof tupl file set slot array null n keep tri read file tri close catch except e log warn fail close spill file e stream set file num null catch except ioe string msg unabl find spill file log fatal msg ioe throw new runtim except msg ioe function assum reader lock alreadi hold enter function privat tupl read memori content size return null memori ptr content size return array list tupl content get memori ptr els return null pre merg mani spill file avoid issu larg fan merg experiment hadoop team show optim number spill file function modifi spill file array assum write lock alreadi hold unlock tupl reconstitut tupl evalu rewrit tupl expens need order use sort spec provid privat void pre merg spill file null spill file size return max spill file gather max spill file togeth merg one file remov other spill file new spill file attach end list keep go get small enough number without much concern uneven size merg convert spill file link list sinc remov piec middl want effici tri link list file new link list file spill file link list file file delet new link list file size list iter file list iter stream new array list data input stream merg new prioriti queue contain int j j j tri file f next datum input stream new datum input stream new buffer input stream new file input stream f stream add add queue null stream size remov file delet add f catch file find except fnfe can n find spill file neer happen string msg unabl find spill file log fatal msg fnfe throw new runtim except msg fnfe get new spill file add one end spill file list need append link list well still move link list back spill file datum output stream null tri get spill file add spill file get spill file size tupl read prioriti null write flush catch except ioe string msg unabl find spill file log fatal msg ioe throw new runtim except msg ioe final null tri close catch except e warn error close spill warn e delet file merg new file file f file delet f delet fals log warn fail delet spill file f get path clear list final delet file spill file assign new valu spill file clear move new list back spill file array spill file new file list final reset stream merg alloc properli regular merg stream null merg null overrid public long spill return proactiv spill comp overrid public long proactiv spill compar tupl comp synchron content read start return return super proactiv spill comp 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl io import java io except import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop fs data output stream import org apach hadoop f file system import org apach hadoop f path import org apach hadoop io text import org apach hadoop io writabl compar import org apach hadoop mapreduc input format import org apach hadoop mapreduc input split import org apach hadoop mapreduc job import org apach hadoop mapreduc output format import org apach hadoop mapreduc record reader import org apach hadoop mapreduc record writer import org apach hadoop mapreduc task attempt context import org apach hadoop mapreduc lib input file input format import org apach hadoop mapreduc lib output file output format import org apach express import org apach file input load func import org apach load func import org apach load metadata import org apach resourc schema import org apach resourc statist import org apach store func import org apach store func interfac import org apach backend hadoop executionengin map reduc layer file input format import org apach backend hadoop executionengin map reduc layer split import org apach classif interfac audienc import org apach datum tupl import org apach impl util util load function use store intermedi datum job queri serial format load function chang new version use store persist datum interfac audienc privat public class inter storag extend file input load func implement store func interfac load metadata privat static final log log log factori get log inter storag class public static final string use log intern storag use privat inter record reader rec reader null privat inter record writer rec writer null simpl binari nest reader format public inter storag log debug use log overrid public tupl get next throw except rec reader next key valu return rec reader get current valu els return null overrid public void put next tupl throw except tri rec writer write null catch interrupt except e throw new except e public static class inter input format extend file input format text tupl non javadoc see org apach hadoop mapreduc input format creat record reader org apach hadoop mapreduc input split org apach hadoop mapreduc task attempt context overrid public record reader text tupl creat record reader input split split task attempt context context throw except interrupt except return new inter record reader overrid public input format get input format return new inter input format overrid public int hash code return overrid public void prepar read record reader reader split split rec reader inter record reader reader overrid public void set locat string locat job job throw except file input format set input path job locat public static class inter output format extend file output format org apach hadoop io writabl compar tupl non javadoc see org apach hadoop mapreduc lib output file output format get record writer org apach hadoop mapreduc task attempt context overrid public record writer writabl compar tupl get record writer task attempt context job throw except interrupt except configur conf job get configur path file get default work file job file system f file get file system conf data output stream file f creat file fals return new inter record writer file overrid public output format get output format return new inter output format overrid public void prepar write record writer writer rec writer inter record writer writer overrid public void set store locat string locat job job throw except file output format set output path job new path locat overrid public void check schema resourc schema throw except overrid public string rel ab path store locat string locat path cur dir throw except return load func get absolut path locat cur dir overrid public string get partit key string locat job job throw except return null overrid public resourc schema get schema string locat job job throw except return util get schema locat true job overrid public resourc statist get statist string locat job job throw except return null overrid public void set partit filter express plan throw except throw new unsupport oper except overrid public void set store func context signatur string signatur overrid public void cleanup failur string locat job job throw except store func cleanup failur impl locat job overrid public void cleanup success string locat job job throw except noth 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin method never use directli use link public class int min extend algebra int math base public int min set op public static class intermedi extend algebra int math base intermedi overrid public get op return public static class final extend algebra int math base final overrid public get op return 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import org apach impl logic layer frontend except see gener invok public class invok doubl extend gener invok doubl public invok doubl public invok doubl string full name throw frontend except secur except class find except method except super full name public invok doubl string full name string param spec str throw frontend except secur except class find except method except super full name param spec str public invok doubl string full name string param spec str string static throw class find except frontend except secur except method except super full name param spec str static 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import org apach impl logic layer frontend except see gener invok public class invok float extend gener invok float public invok float public invok float string full name throw frontend except secur except class find except method except super full name public invok float string full name string param spec str throw frontend except secur except class find except method except super full name param spec str public invok float string full name string param spec str string static throw class find except frontend except secur except method except super full name param spec str static 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import org apach impl logic layer frontend except see gener invok public class invok int extend gener invok integ public invok int public invok int string full name string param spec str throw frontend except secur except class find except method except super full name param spec str public invok int string full name throw frontend except secur except class find except method except super full name public invok int string full name string param spec str string static throw class find except frontend except secur except method except super full name param spec str static 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import org apach impl logic layer frontend except see gener invok public class invok long extend gener invok long public invok long public invok long string full name throw frontend except secur except class find except method except super full name public invok long string full name string param spec str throw frontend except secur except class find except method except super full name param spec str public invok long string full name string param spec str string static throw class find except frontend except secur except method except super full name param spec str static 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import org apach impl logic layer frontend except see gener invok public class invok string extend gener invok string public invok string public invok string string full name string param spec str throw frontend except secur except class find except method except super full name param spec str public invok string string full name throw frontend except secur except class find except method except super full name public invok string string full name string param spec str string static throw class find except frontend except secur except method except super full name param spec str static 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java lang reflect invoc target except import java lang reflect method import java lang reflect type import java util array import java util list import java util set import org apach common log log import org apach common log log factori import org apach backend executionengin exec except import org apach datum datum bag import org apach datum tupl import org apach impl context import org apach impl logic layer frontend except import com googl common collect list import com googl common collect set public class invok privat static final log log factori get log invok class privat static final class new doubl get class privat static final class new int get class privat static final class new float get class privat static final class new string get class privat static final class new long get class suppress warn uncheck privat static final set class set new hash set privat method method privat class param class privat boolean static privat class self class privat type return type public invok string full name string param spec str throw class find except frontend except secur except method except full name param spec str true public invok string full name string param spec str string static throw class find except frontend except secur except method except string class name full name substr full name last index string method name full name substr full name last index class klazz tri klazz context resolv class name class name catch except e amus part context throw wrap one except declar throw new frontend except e string param spec equal param spec str new string param spec str split static static equal ignor case static true equal static param class new class param spec length int param spec length param class string class param spec static self class param class method klazz get method method name static param class drop first class param class return type method get gener return type suppress warn rawtyp public type get return type return un primitiv class return type privat static class drop first class class origin origin length return new class els return array copi rang origin origin length privat static object drop first object object origin origin length return new object els return array copi rang origin origin length privat static class string class string klass throw frontend except string equal ignor case klass return string class els int equal ignor case klass return integ els doubl equal ignor case klass return doubl els float equal ignor case klass return float els long equal ignor case klass return long els doubl equal ignor case klass return els int equal ignor case klass return els long equal ignor case klass return els float equal ignor case klass return els string equal ignor case klass return els throw new frontend except unabl find match class klass privat static class un primitiv class klass klass equal integ return integ class klass equal long return long class els klass equal float return float class els klass equal doubl return doubl class els return klass privat static convert expect arg class klass object obj throw exec except contain klass data bag dbag data bag obj equal klass list string datum list list new array list tupl dbag datum list add string get string datum array new string datum list size int datum list size datum array datum list get obj datum array els list number datum list bag number list dbag equal klass doubl datum array new doubl datum list size int datum list size datum array datum list get doubl valu obj datum array els equal klass int data array new int datum list size int datum list size datum array datum list get int valu obj datum array els equal klass float datum array new float datum list size int datum list size datum array datum list get float valu obj datum array els equal klass long data array new long datum list size int datum list size datum array datum list get long valu obj datum array tri return klass cast obj catch class cast except e error error dynam argument process cast klass obj get class e throw new exec except e privat static list number bag number list data bag dbag throw exec except list number datum list list new array list tupl dbag datum list add number get return datum list privat object tupl arg tupl throw exec except null param class null param class length null size param class length throw new exec except unabl match function argument declar signatur null return null object arg new object param class length int param class length arg convert expect arg un primitiv param class get return arg suppress warn uncheck public invok tupl input throw except object arg tupl arg input tri static return method invok self class cast arg drop first object arg els return method invok null arg catch illeg argument except e throw new exec except e catch illeg access except e throw new exec except e catch invoc target except e throw new exec except e 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util map import org apach filter func import org apach except import org apach backend executionengin exec except import org apach datum datum bag import org apach datum data type import org apach datum tupl determin whether bag map empti public class empti extend filter func overrid public boolean exec tupl input throw except tri object valu input get valu instanceof datum bag return datum bag valu size els valu instanceof map return map valu size els int err code string msg test data type find type name valu empti throw new exec except msg err code except catch exec except ee throw ee overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat public class null express extend unari express public null express oper plan plan logic express exp super null plan exp overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof null express null express null express return get express equal get express els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new null express lg exp plan get express deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl util import java io file import java io file input stream import java io file output stream import java io except import java io input stream import java io output stream import java net malform except import java net import java net import java net class loader import java net decod import java util array list import java util enumer import java util hash map import java util hash set import java util list import java util map import java util set import java util jar jar entri import java util jar jar output stream import org antlr runtim common token stream import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f file system import org apach hadoop f path import org apach hadoop mapreduc job import org apach hadoop util string util import org apach backend hadoop executionengin map reduc layer map reduc import org apach impl context import org apach tool bzip r zip constant import org joda time date time import com googl common collect multimap import dk bric automaton automaton public class jar manag privat static log log log factori get log jar manag class privat static enum default packag map reduc class zip constant class automaton class common token stream class date time class privat final class pkg class default packag class pkg class pkg class pkg class public class get pkg class return pkg class public static file creat script jar context context throw except file script jar file file creat temp file script jar ensur script jar file delet exit script jar file delet exit file output stream fo new file output stream script jar file hash map string string content new hash map string string creat script jar fo context content content empti file input stream fi null string md null tri fi new file input stream script jar file md org apach common codec digest digest util md hex fi final fi null fi close file new script jar file new file script jar file get parent script md jar script jar file renam new script jar file return new script jar file return null privat static void creat script jar output stream os context context hash map string string content throw except jar output stream jar output stream new jar output stream os string path context script file log debug add entri path job jar input stream stream null file input file new file path input file exist stream new file input stream input file els stream context get class loader get resourc stream path stream null throw new except find path tri add stream jar output stream path stream content input file last modifi final stream close map entri string file entri context get script file entri set log debug add entri entri get key job jar input stream stream null entri get valu exist stream new file input stream entri get valu els stream context get class loader get resourc stream entri get valu get path stream null throw new except find entri get valu get path tri add stream jar output stream entri get key stream content entri get valu last modifi final stream close content empti jar output stream close els os close creat classload base pass jar file extra jar file param jar file jar file part newli creat classload jar file plu jar extra jar list constitut classpath return new classload throw malform except static class loader creat cl string jar file context context throw malform except int len context extra jar size int pass jar jar file null url new len pass jar jar file null url new file jar file int context extra jar size url pass jar new file context extra jar get return new class loader url map reduc class get class loader add stream jar file param os output stream jar file stream add param name name stream param stream add param content current content jar file use avoid add two stream name param timestamp timestamp entri throw except privat static void add stream jar output stream os string name input stream map string string content long timestamp throw except content get name null return content put name jar entri entri new jar entri name entri set time timestamp os put next entri entri byte buffer new byte int rc rc read buffer os write buffer rc public static list string get default jar list string default jar new array list string default packag pkg send default packag valu string jar find contain jar pkg send get pkg class jar null default jar contain jar default jar add jar return default jar find jar contain class name return jar file even first thing class path class name param class class find return jar file contain class null throw except public static string find contain jar class class class loader loader context get class loader string class file class get name replac class tri enumer itr null tri find class regist jar loader instanceof class loader itr class loader loader find resourc class file tri system classload class loader resourc find class loader itr null itr element itr loader get resourc class file itr element url itr next element jar equal url get protocol string return url get path return start file return return substr file length decod misnam class sinc actual decod x www form urlencod type rather actual encod file path therefor would decod incorrect space actual either unencod encod replac first keep sacr decod process return return replac return decod decod return return return replac catch except e throw new runtim except e return null add jar contain give class job configur job client ship cluster add distribut cach param job job object param class class find throw except public static void add depend jar job job class class throw except configur conf job get configur file system f file system get local conf set string jar new hash set string jar add conf get string collect tmpjar add qualifi jar name f jar class jar empti return conf set tmpjar string util array string jar array new string add qualifi path name jar contain give class param f file system object param jar resolv path name add set param class class find privat static void add qualifi jar name file system f set string jar class class f uri fs get uri path work dir f get work directori class clazz class string jar name find contain jar clazz jar name null log warn could find jar class clazz continu jar add new path jar name make qualifi f uri work dir string 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import static org apach configur import static org apach configur import java io file import java io except import java io input stream import java io output stream import java net import java net syntax except import java net import java util array list import java util collect import java util collect import java util hash map import java util iter import java util link list import java util list import java util map import java util map entri import java util properti import java util tree map import java util regex matcher import java util regex pattern import org apach common codec digest digest util import org apach common io filenam util import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop filecach distribut cach import org apach hadoop f file statu import org apach hadoop f file system import org apach hadoop f path import org apach hadoop io util import org apach hadoop io writabl compar import org apach hadoop io writabl compar import org apach hadoop mapr counter import org apach hadoop mapr counter counter import org apach hadoop mapr counter group import org apach hadoop mapr job conf import org apach hadoop mapr job prioriti import org apach hadoop mapr jobcontrol job import org apach hadoop mapr jobcontrol job control import org apach hadoop mapreduc lib output lazi output format import org apach comparison func import org apach exec type import org apach func spec import org apach load func import org apach overwrit store func import org apach configur import org apach except import org apach store func interfac import org apach backend executionengin exec except import org apach backend hadoop date time writabl import org apach backend hadoop data type import org apach backend hadoop job control import org apach backend hadoop datastorag configur util import org apach backend hadoop executionengin job creation except import org apach backend hadoop executionengin map reduc layer partition secondari key partition import org apach backend hadoop executionengin map reduc layer partition skew partition import org apach backend hadoop executionengin map reduc layer partition weight rang partition import org apach backend hadoop executionengin map reduc layer plan oper plan import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper constant express import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer plan udf cach ship file visitor import org apach backend hadoop executionengin physic layer relat oper join import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper merg cogroup import org apach backend hadoop executionengin physic layer relat oper merg join import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer util plan helper import org apach backend hadoop executionengin util map red util import org apach datum bag factori import org apach datum data type import org apach datum schema tupl frontend import org apach datum tupl import org apach datum tupl factori import org apach impl context import org apach impl impl constant import org apach impl builtin cross import org apach impl io file local import org apach impl io file spec import org apach impl io nullabl big decim writabl import org apach impl io nullabl big integ writabl import org apach impl io nullabl boolean writabl import org apach impl io nullabl byte writabl import org apach impl io nullabl date time writabl import org apach impl io nullabl doubl writabl import org apach impl io nullabl float writabl import org apach impl io nullabl int writabl import org apach impl io nullabl long writabl import org apach impl io nullabl partit writabl import org apach impl io nullabl text import org apach impl io nullabl tupl import org apach impl io nullabl writabl import org apach impl plan depth first walker import org apach impl plan oper key import org apach impl plan visitor except import org apach impl util jar manag import org apach impl util object serial import org apach impl util pair import org apach impl util context import org apach impl util util import org apach tool pigstat mapreduc job stat import org apach tool pigstat mapreduc stat util import org apach tool pigstat mapreduc script state compil class take oper plan convert job control object relev depend info maintain job control object make job job conf map reduc oper correspond job get job cong method return job conf configur per map reduc oper h compar design h p word compar choos almost case use raw compar one except user provid comparison function order order queri raw compar function use int long etc compar null awar asc desc awar first byte nullabl writabl class contain info whether valu null asc desc write array job conf key sort order read compar part set conf call p non order queri writabl compar class use type specif instanc writabl compar suppress warn deprec public class job control compil oper plan plan configur conf configur default conf context context privat static final matcher pattern compil zip tgz tar gz tar matcher privat static final log log log factori get log job control compil class public static final string log public static final string invok close map public static final string counter counter public static final string rank public static final string public hash map string array list pair string long global counter new hash map string array list pair string long public static final string job detect small job run process instead public static final string job convert run process serial store present map reduc list hadoop conf case multi store could deduc map plan reduc plan case singl store remov store plan either case serial store output format output commit get store way irrespect whether multi store singl store public static final string map store public static final string reduc store map job pair store locat tmp locat job privat map job pair list store path job store map privat map job map reduc oper job mro map public job control compil context context configur conf context conf null public job control compil context context configur conf configur default conf context context conf conf default conf default conf job store map new hash map job pair list store path job mro map new hash map job map reduc oper return store locat previous compil job public list store get store job job pair list store path pair job store map get job pair null pair first null return pair first els return new array list store reset state public void reset job store map new hash map job pair list store path job mro map new hash map job map reduc oper context get context reset get map job oper public map job map reduc oper get job mro map return collect unmodifi map job mro map move result collect job final output directori result may put temp locat work around restrict multipl output singl map reduc job method alway call job execut complet public void move result list job complet job throw except job job complet job pair list store path pair job store map get job pair null pair second null path tmp pair second path ab new path tmp ab path rel new path tmp rel file system f tmp get file system conf fs exist ab move result ab ab uri get path f f exist rel move result rel rel uri get path f walk temporari directori structur move renam file final locat privat void move result path p string rem file system fs throw except file statu fstat f list statu p path src fstat get path fstat dir log info mkdir src f mkdir remov part src rem move result fstat get path rem f els path dst remov part src rem log info mv src dst f renam src dst privat path remov part path src string part uri src uri string path str uri get path replac part return new path path str compil job depend remov plan return call plan exhaust param plan oper plan compil param grp name name give job control return job control object null job plan throw job creation except public job control compil oper plan plan string grp name throw job creation except assert plan size plan plan int time sleep string default job control sleep context get exec type local string job control sleep conf get jobcontrol sleep default job control sleep job control sleep equal default job control sleep log info overrid default job control sleep default job control sleep job control sleep tri time sleep integ pars int job control sleep catch number format except e throw new runtim except invalid configur jobcontrol sleep job control sleep time ms default default job control sleep e job control job ctrl new job control grp name time sleep tri list map reduc oper root new link list map reduc oper root add plan get root map reduc oper mro root mro instanceof nativ map reduc oper return null print plan launch need conf get boolean configur fals log info mro string job job get job plan mro conf context job mro map put job mro job ctrl add job job catch job creation except jce throw jce catch except e int err code string msg intern error creat job configur throw new job creation except msg err code except e return job ctrl updat map reduc plan execut statu job one job complet fail job one store job fail remov depend job method return number map reduc oper remov map reduc plan public int updat op plan list job complet fail job int size plan size job job complet fail job remov subsequ job map reduc oper mr oper job mro map get job plan trim mr oper plan remov mr oper remov success job job mro map job job job mro map key set complet fail job contain job map reduc oper mro job mro map get job context illustr mro counter oper save counter job mro get oper mro row number plan remov mro job mro map clear int size plan size return size size read global counter produc job group label calcul cumul sum consist sum previou cumul sum plu previou global counter valu param job global counter collect param oper collect global counter counter valu pass via configur file rank use uniqu oper identifi privat void save counter job job string oper boolean row number counter counter group group counter int counter size long previou valu long previou sum array list pair string long counter pair tri counter job stat get counter job string group name get group name counter get group name case counter group find need find accept state relat empti group name null counter output record counter get group stat util get counter name stat util output record get counter global counter put oper new array list pair string long return els throw new runtim except find counter group oper id oper group counter counter get group group name tree map integ long counter list new tree map integ long iter counter group counter iter next tri counter c next counter list put integ valu c get display name c get valu catch except ex ex print stack trace counter size counter list size counter pair new array list pair string long could empti task counter issu need calcul offset non empti task id access rank entri integ long entri counter list entri set previou sum previou valu previou valu entri get valu counter pair add new pair string long job control compil oper job control compil entri get key previou sum global counter put oper counter pair catch except e string msg error read counter rank oper counter size counter size throw new runtim except msg e privat string get group name collect string collect string name collect name contain return name return null privat boolean ok run local org apach hadoop mapreduc job job map reduc oper mro list load ld throw except configur conf job get configur conf get boolean configur fals return fals long input byte max conf get long configur l long total input file size input size reduc estim get total input file size conf ld job input byte max log info size input total input file size byte small job threshold input byte max total input file size total input file size input byte max return fals int reduc conf get int configur log info reduc reduc reduc return fals return true method creat job correspond map reduc oper assumpt everi map reduc oper load store job conf remov load oper serial input filespec input format take creation split also remov store oper serial output filespec output format take record write remain portion map plan reduc plan serial store map reduc map object take actual run plan mapper amp reduc class requir key valu format set check map job use map class mapper use map reduc otherwis map reduc job bind packag oper remov reduc plan serial map reduc class use packag index tupl receiv reduc param mro map reduc oper job conf requir param config configur object job conf build param context context pass execut engin return job correspond mro throw job creation except suppress warn uncheck privat job get job oper plan plan map reduc oper mro configur config context context throw job creation except org apach hadoop mapreduc job nw job null tri nw job new org apach hadoop mapreduc job config catch except e throw new job creation except e configur conf nw job get configur array list file spec inp new array list file spec array list list oper key inp target new array list list oper key array list string inp signatur list new array list string array list long inp limit new array list long array list store store locat new array list store path tmp locat null add set statist string set script prop conf get configur true set script prop equal ignor case true script state ss script state get ss add set conf mro conf conf set configur true conf set configur true string buff percent conf get configur buff percent null doubl pars doubl buff percent log info configur set set default conf set configur els log info configur set conf get configur date time writabl setup avail zone id configur compress conf tri process load list load ld plan helper get physic oper mro map plan load class ld null ld size load ld ld load func lf ld get load func lf set locat ld get file get file name nw job store inp filespec inp add ld get file mro reduc plan empti log info reduc phase detect estim requir reduc adjust num reduc plan mro nw job els nw job set num reduc task context illustr context get exec type local ok run local nw job mro ld log info overrid default conf run local mode entri string string entri default conf string key entri get key key equal configur key equal configur must set back default case set exampl continu key start f n want chang fs set back continu key start io n want chang io set back continu string valu entri get valu conf get key null conf get key equal valu conf set key valu conf set boolean impl constant true els log info search see load func store func need pack thing distribut cach list string cach file new array list string list string ship file new array list string udf cach ship file visitor map udf cach file visitor new udf cach ship file visitor mro map plan map udf cach file visitor visit cach file add map udf cach file visitor get cach file ship file add map udf cach file visitor get ship file udf cach ship file visitor reduc udf cach file visitor new udf cach ship file visitor mro reduc plan reduc udf cach file visitor visit cach file add reduc udf cach file visitor get cach file ship file add reduc udf cach file visitor get ship file setup distribut cach context conf cach file array new string fals setup distribut cach job list jar new array list extra jar context extra jar jar contain extra jar jar add extra jar string udf mro fs class clazz context get class alia udf clazz null string jar jar manag find contain jar clazz jar null jar new file jar jar contain jar jar add jar string script jar context script jar jar new file script jar jar contain jar jar add jar string ship file ship file jar new file ship file jar contain jar jar add jar string default jar jar manag get default jar jar new file default jar jar contain jar jar add jar jar jar boolean predeploy fals string predeploy jar context predeploy jar predeploy jar contain new file jar get name predeploy true predeploy jar get file lower case end jar put jar class path distribut cach context conf jar els setup distribut cach context conf new string jar get path true file script jar file jar manag creat script jar context script jar file null put jar class path distribut cach context conf script jar file string udf mro fs udf contain cross object func context instanti func spec new func spec udf func instanceof cross string cross key cross func get cross key conf set impl constant cross key integ string mro get request parallel ld null ld size load ld ld store target oper tupl read input list physic oper ld suc mro map plan get successor ld list oper key ld suc key new array list oper key ld suc null physic oper oper ld suc ld suc key add oper get oper key inp target add ld suc key inp signatur list add ld get signatur inp limit add ld get limit remov load plan context illustr mro map plan remov ld util local context conf configur util replac config local mode conf conf set input format object serial serial inp conf set input format object serial serial inp target conf set input format object serial serial inp signatur list conf set input format object serial serial inp limit remov job credenti entri serial pigcontext jobconf sinc path would invalid new job creat context get properti remov mapreduc job credenti binari conf set boolean impl constant context get exec type local conf set impl constant object serial serial context get log j properti conf set udf import list object serial serial context get packag import list unit test sinc n creat server user specifi job name use switch will n reset name system get properti configur null context get properti get properti context null nw job set job name context get properti get properti context context get properti get properti context null job prioriti set attempt get correspond enum valu set hadoop job prioriti string job prioriti context get properti get properti context upper case tri allow arbitrari case hadoop job prioriti upper case conf set configur job prioriti valu job prioriti string catch illeg argument except e string buffer sb new string buffer job prioriti must one job prioriti prioriti job prioriti valu int prioriti length sb append sb append prioriti sb append specifi job prioriti throw new job creation except sb string setup distribut cach context conf context get properti stream ship file true setup distribut cach context conf context get properti stream cach file fals nw job set input format class input format class tmp file compress setup must do set store locat store util set tmp file compress conf context conf process store remov plan link list store map store plan helper get physic oper mro map plan store class link list store reduc store plan helper get physic oper mro reduc plan store class store st map store store locat add st store func interfac func st get store func func set store locat st get file get file name nw job func instanceof overwrit store func overwrit store func osf overwrit store func func osf overwrit osf cleanup output st nw job store st reduc store store locat add st store func interfac func st get store func func set store locat st get file get file name nw job func instanceof overwrit store func overwrit store func osf overwrit store func func osf overwrit osf cleanup output st nw job set output format nw job map store size reduc store size singl store case log info set singl store job store st reduc store empti st map store get context illustr mro map plan remov st els st reduc store get context illustr mro reduc plan remov st map red util setup stream dir conf singl st context conf els map store size reduc store size multi store case log info set multi store job map red util setup stream dir conf multi context conf boolean disabl counter conf get boolean disabl counter fals disabl counter log info disabl custom output counter int idx store sto store locat sto set disabl counter disabl counter sto set multi store true sto set index idx store map key type need key null creat appropri nullabl writabl object conf set map keytyp object serial serial new byte mro map key type set parent plan oper map reduc plan current parent plan realli use stream present plan new phi plan setter mro map plan visit new phi plan setter mro combin plan visit new phi plan setter mro reduc plan visit call modifi repl file name join oper within plan must call plan serial setup distribut cach join mro context conf schema tupl frontend copi gener distribut cach context conf packag pack null mro reduc plan empti map job nw job set mapper class map map class context illustr conf set map plan object serial serial mro map plan mro end input set map use map close decid whether pipelin need rerun one time close pipelin rerun either stream merg join conf set true els map reduc job process packag oper remov reduc plan mro combin plan empti packag comb pack packag mro combin plan get root get mro combin plan remov comb pack nw job set combin class combin combin class conf set combin plan object serial serial mro combin plan conf set combin packag object serial serial comb pack els mro need distinct combin nw job set combin class distinct combin combin class log info set ident combin class pack packag mro reduc plan get root get context illustr mro reduc plan remov pack nw job set mapper class map reduc map class nw job set reduc class map reduc reduc class mro custom partition null nw job set partition class context resolv class name mro custom partition context illustr conf set map plan object serial serial mro map plan mro end input set map use map close decid whether pipelin need rerun one time close pipelin rerun stream merg join conf set true context illustr conf set reduc plan object serial serial mro reduc plan mro end input set reduc use map close decid whether pipelin need rerun one time close pipelin rerun stream conf set stream reduc true context illustr conf set reduc packag object serial serial pack conf set reduc key type byte string pack get pkgr get key type mro get use secondari key nw job set group compar class secondari key group compar class nw job set partition class secondari key partition class nw job set sort compar class secondari key compar class nw job set output key class nullabl tupl class conf set secondari sort order object serial serial mro get secondari sort order els class extend writabl compar key class data type get writabl compar type pack get pkgr get key type get class nw job set output key class key class select compar mro pack get pkgr get key type nw job nw job set output valu class nullabl tupl class mro global sort mro limit sort mro global sort string symlink add singl file distribut cach context conf mro get quant file pigsampl conf set quantil file symlink nw job set partition class weight rang partition class mro compar use boolean usercompar fals string comp func spec mro fs class compar context resolv class name comp func spec comparison func class assign compar nw job set mapper class map reduc map compar class nw job set reduc class map reduc reduc compar class conf set reduc packag object serial serial pack conf set usercompar true nw job set output key class nullabl tupl class nw job set sort compar class compar usercompar true break usercompar string msg intern error ca n find compar throw new except msg els conf set sort order object serial serial mro get sort order mro skew join string symlink add singl file distribut cach context conf mro get skew join partit file pigdistkey conf set key dist file symlink nw job set partition class skew partition class nw job set mapper class map reduc map partit index class nw job set map output key class nullabl partit writabl class nw job set group compar class group partit writabl compar class mro counter oper mro row number nw job set mapper class map reduc counter map counter class els nw job set reduc class map reduc counter reduc counter class mro rank oper iter string oper d mro get rank oper id iter oper d next string oper oper d next iter pair string long pair global counter get oper iter pair string long pair null pair next pair pair next conf set long pair first pair second context illustr unset input store otherwis map reduc plan unnecessarili deseri store st map store st set input null st set parent plan null store st reduc store st set input null st set parent plan null conf set object serial serial map store conf set object serial serial reduc store string tmp long max combin split size mro combin small split context get properti get properti split combin true equal fals conf set boolean split combin true els tmp context get properti get properti max combin split size null null tri max combin split size long pars long tmp catch number format except e log warn invalid numer format max combin split size use default maximum combin split size max combin split size conf set long max combin split size max combin split size hack set distribut cach file hadoop mini cluster requir local jar fix locat remov context get exec type exec type string newfil conf get altern mapreduc job cach file newfil null string file conf get configur conf set configur file null newfil string file newfil serial specif context info context get context serial conf job cjob new job new job conf conf new array list job job store map put cjob new pair list store path store locat tmp locat return cjob catch job creation except jce throw jce catch except e int err code string msg intern error creat job configur throw new job creation except msg err code except e public static void configur compress configur conf convert mapr output output compress see true equal conf get configur conf set output compress enabl true string codec conf get configur codec null throw new illeg argument except configur set valu specifi configur els conf set output compress codec codec adjust number reduc base default parallel request parallel estim parallel sampler job also adjust next job advanc get runtim parallel number partit use sampler param plan plan param mro oper param nw job current job throw except public void adjust num reduc oper plan plan map reduc oper mro org apach hadoop mapreduc job nw job throw except int job parallel calcul runtim reduc mro nw job mro sampler plan get successor mro null need calcul final number reduc next job order skew join gener quantfil map reduc oper next mro plan get successor mro get use conf job calcul runtim reduc next job fine statist come next mro load int n partit calcul runtim reduc next mro nw job set runtim reduc next job partit parallel constant visitor visitor new parallel constant visitor mro reduc plan n partit visitor visit log info set parallel job parallel configur conf nw job get configur set variou parallel job conf later analysi conf set int impl constant context default parallel conf set int impl constant mro request parallel conf set int impl constant mro estim parallel backward compat encourag use runtim parallel runtim mro request parallel job parallel final set number reduc conf set int configur job parallel calcul runtim reduc base default parallel request parallel estim parallel save map reduc oper runtim parallel return runtim parallel throw except privat int calcul runtim reduc map reduc oper mro org apach hadoop mapreduc job nw job throw except n recalcul job mro runtim parallel return mro runtim parallel int job parallel mro request parallel job parallel mro request parallel els context default parallel job parallel context default parallel els mro estim parallel estim number reduc nw job mro mro estim parallel job parallel mro estim parallel els reduc estim could return could n estim log info could estim number reduc request default parallel set default reduc job parallel save mro runtim parallel job parallel return job parallel look estim invok find number reduc use n set default input size reduc estim param job param map reduc oper throw except public static int estim number reduc org apach hadoop mapreduc job job map reduc oper map reduc oper throw except configur conf job get configur reduc estim estim conf get null new input size reduc estim context instanti object param conf reduc estim class log info use reduc estim estim get class get name int number reduc estim estim number reduc job map reduc oper return number reduc public static class secondari key group compar extend writabl compar public secondari key group compar super nullabl tupl class true suppress warn uncheck overrid public int compar writabl compar writabl compar b nullabl writabl wa nullabl writabl nullabl writabl wb nullabl writabl b wa get index nullabl writabl mq flag multi queri index wa get index nullabl writabl idx space wb get index nullabl writabl idx space return els wa get index nullabl writabl idx space wb get index nullabl writabl idx space return equal fall wa wb guarante null local rearrang creat tupl anyway even main key secondari key null howev main key null need check use logic nullabl writabl object valuea null object valueb null tri get main key compound key valuea tupl wa get valu type get valueb tupl wb get valu type get catch exec except e throw new runtim except unabl access tupl field e wa null wb null int result data type compar valuea valueb field insid tupl null merg key see result valuea instanceof tupl valueb instanceof tupl tri int tupl valuea size tupl valueb get null return wa get index nullabl writabl idx space wb get index nullabl writabl idx space catch exec except e throw new runtim except unabl access tupl field e return result els valuea null valueb null null compar indici wa get index nullabl writabl idx space wb get index nullabl writabl idx space return els wa get index nullabl writabl idx space wb get index nullabl writabl idx space return els return els valuea null return els return public static class writabl compar extend writabl compar suppress warn uncheck protect writabl compar class c super c overrid public int compar byte b int int l byte b int int l return writabl compar compar byte b l b l public static class boolean writabl compar extend writabl compar public boolean writabl compar super nullabl boolean writabl class public static class int writabl compar extend writabl compar public int writabl compar super nullabl int writabl class public static class long writabl compar extend writabl compar public long writabl compar super nullabl long writabl class public static class float writabl compar extend writabl compar public float writabl compar super nullabl float writabl class public static class doubl writabl compar extend writabl compar public doubl writabl compar super nullabl doubl writabl class public static class big integ writabl compar extend writabl compar public big integ writabl compar super nullabl big integ writabl class public static class big decim writabl compar extend writabl compar public big decim writabl compar super nullabl big decim writabl class public static class date time writabl compar extend writabl compar public date time writabl compar super nullabl date time writabl class public static class char array writabl compar extend writabl compar public char array writabl compar super nullabl text class public static class writabl compar extend writabl compar public writabl compar super nullabl byte writabl class public static class tupl writabl compar extend writabl compar public tupl writabl compar super tupl factori get instanc tupl class public static class bag writabl compar extend writabl compar public bag writabl compar super bag factori get instanc new default bag get class hadoop new integr need explicitli set group compar public static class group boolean writabl compar extend writabl compar public group boolean writabl compar super nullabl boolean writabl class true public static class group int writabl compar extend writabl compar public group int writabl compar super nullabl int writabl class true public static class group long writabl compar extend writabl compar public group long writabl compar super nullabl long writabl class true public static class group float writabl compar extend writabl compar public group float writabl compar super nullabl float writabl class true public static class group doubl writabl compar extend writabl compar public group doubl writabl compar super nullabl doubl writabl class true public static class group date time writabl compar extend writabl compar public group date time writabl compar super nullabl date time writabl class true public static class group char array writabl compar extend writabl compar public group char array writabl compar super nullabl text class true public static class group writabl compar extend writabl compar public group writabl compar super nullabl byte writabl class true public static class group tupl writabl compar extend writabl compar public group tupl writabl compar super nullabl tupl class true public static class group partit writabl compar extend writabl compar public group partit writabl compar super nullabl partit writabl class true public static class group bag writabl compar extend writabl compar public group bag writabl compar super bag factori get instanc new default bag get class true public static class group big integ writabl compar extend writabl compar public group big integ writabl compar super nullabl big integ writabl class true public static class group big decim writabl compar extend writabl compar public group big decim writabl compar super nullabl big decim writabl class true privat void select compar map reduc oper mro byte key type org apach hadoop mapreduc job job throw job creation except oper involv order use specif raw compar cogroup need set compar class raw compar group compar class specif raw compar skip index otherwis use hadoop provid raw compar oper order global sort set successor global sort set case sampl job limit sort boolean order fals mro global sort mro limit sort mro use type compar order true els list map reduc oper succ plan get successor mro succ null map reduc oper succ succ get succ global sort order true order switch key type case data type job set sort compar class boolean raw compar class break case data type job set sort compar class int raw compar class break case data type job set sort compar class long raw compar class break case data type job set sort compar class float raw compar class break case data type job set sort compar class doubl raw compar class break case data type job set sort compar class date time raw compar class break case data type job set sort compar class text raw compar class break case data type job set sort compar class byte raw compar class break case data type job set sort compar class big integ raw compar class break case data type job set sort compar class big decim raw compar class break case data type int err code string msg use map key support throw new job creation except msg err code except case data type job set sort compar class tupl sort compar class break case data type err code msg use bag key support throw new job creation except msg err code except default break return switch key type case data type job set sort compar class boolean writabl compar class job set group compar class group boolean writabl compar class break case data type job set sort compar class int writabl compar class job set group compar class group int writabl compar class break case data type job set sort compar class big integ writabl compar class job set group compar class group big integ writabl compar class break case data type job set sort compar class big decim writabl compar class job set group compar class group big decim writabl compar class break case data type job set sort compar class long writabl compar class job set group compar class group long writabl compar class break case data type job set sort compar class float writabl compar class job set group compar class group float writabl compar class break case data type job set sort compar class doubl writabl compar class job set group compar class group doubl writabl compar class break case data type job set sort compar class date time writabl compar class job set group compar class group date time writabl compar class break case data type job set sort compar class char array writabl compar class job set group compar class group char array writabl compar class break case data type job set sort compar class writabl compar class job set group compar class group writabl compar class break case data type int err code string msg use map key support throw new job creation except msg err code except case data type job set sort compar class tupl writabl compar class job set group compar class group tupl writabl compar class break case data type err code msg use bag key support throw new job creation except msg err code except default err code msg unhandl key type data type find type name key type throw new job creation except msg err code except privat void setup distribut cach join map reduc oper mro context context configur conf throw except new join distribut cach visitor mro map plan context conf visit new join distribut cach visitor mro reduc plan context conf visit privat static void setup distribut cach context context configur conf properti properti string key boolean ship cluster throw except set distribut cach job string file name properti get properti key file name null string path file name split setup distribut cach context conf path ship cluster privat static void add distribut cach uri configur conf reset uri string find distribut cach add cach archiv uri conf els distribut cach add cach file uri conf privat static void setup distribut cach context context configur conf string path boolean ship cluster throw except turn symlink featur distribut cach creat symlink conf string path path path path trim path length path src new path path ensur src valid src src ship cluster necessari add distribut cach ship cluster path dst new path file local get temporari path context string file system f dst get file system conf f copi local file src dst f set replic dst short conf get int configur construct dst src name uri distribut cach dst null tri dst new dst string src get name catch syntax except ue byte err src context get error sourc int err code switch err src case except err code break case except err code break default err code break string msg invalid ship specif file n exist dst throw new exec except msg err code err src add distribut cach dst conf els add distribut cach src conf privat static string add singl file distribut cach context context configur conf string filenam string prefix throw except context illustr file local file exist filenam context throw new except intern error skew join partit file filenam exist string symlink filenam hadoop current n support distribut cach local mode line remov support add hadoop team util local context conf symlink prefix integ string system ident hash code filenam long string system current time milli filenam filenam symlink setup distribut cach context conf new string filenam fals return symlink ensur src valid param src sourc path return path throw exec except privat static path src throw exec except string path string src string string fragment null path string contain fragment path string substr path string index path string path string substr path string index encod path uri new path path string uri string uri encod uri string fragment null uri encod uri encod fragment tri return new uri encod catch syntax except ue int err code string msg invalid cach specif file n exist src throw new exec except msg err code except url copi path local add distribut cach param context context param conf job conf param url url add distribut cach return path see distribut cach throw except suppress warn deprec privat static void put jar class path distribut cach context context configur conf url throw except turn symlink featur distribut cach creat symlink conf path dist cach path get exist dist cach file path conf url dist cach path null log info jar file url alreadi distribut cach dist cach path copi hdf add els alway copi local jar file see server regist jar path path ship context conf url distribut cach add file class path path conf file system get conf log info add jar url distribut cach path privat static path get exist dist cach file path configur conf url throw except cach file uri distribut cach get cach file conf cach file uri null string file name url get ref null filenam util get name url get path url get ref cach file uri cach file uri path path new path cach file uri string cach file name cach file uri get fragment null path get name cach file uri get fragment match filenam symlink symlink symlink exist cach file name new file add would case hbase jar hbase jar configur via oozi regist hbase jar do script two differ file symlink name conflict hadoop guarante file symlink name good file name equal cach file name return path return null public static path get cach stage dir configur conf throw except string temp dir conf get configur conf get configur tmp string current user system get properti user name path stage dir new path temp dir current user pigcach file system f file system get conf f mkdir stage dir f set permiss stage dir file local return stage dir public static path get cach context context configur conf url throw except input stream null input stream null output stream os null tri path stage dir get cach stage dir conf string filenam filenam util get name url get path url open stream string checksum digest util sha hex file system f file system get conf path cach dir new path stage dir checksum path cach file new path cach dir filenam fs exist cach file log debug find url jar cach cach dir long cur time system current time milli fs set time cach file cur time return cach file log info url url find jarcach cach dir attempt copi cach els return null f mkdir cach dir file local url open stream short replic short conf get int configur conf get int mapr submit replic os f creat cach file replic f set permiss cach file file local util copi byte os true return cach file catch except ioe log info unabl retriev jar jar cach ioe return null final org apach common io util close quietli org apach common io util close quietli util close stream quietli os null os close copi file hdf temporari path param context context param conf job conf param url url ship hdf return locat ship throw except privat static path ship context context configur conf url throw except short replic short conf get int configur boolean cach enabl conf get boolean configur fals cach enabl path path df get cach context conf url path df null return path df string suffix filenam util get name url get path path dst new path file local get temporari path context uri get path suffix file system f dst get file system conf output stream os null input stream null tri url open stream os f creat dst util copi byte os true final org apach common io util close quietli util close stream quietli os null os close f set replic dst replic return dst privat static class join distribut cach visitor extend phi plan visitor privat context context null privat configur conf null public join distribut cach visitor physic plan plan context context configur conf super plan new depth first walker physic oper physic plan plan context context conf conf overrid public void visit join join join throw visitor except hadoop current n support distribut cach local mode line remov support add util local context conf return set distribut cach replic file file spec repl file join get repl file array list string replic path new array list string file spec new repl file new file spec repl file length long max size long valu context get properti get properti configur first input replic long size replic input tri int repl file length ignor fragment file string symlink join get fragment symlink pigrepl join get oper key string integ string system ident hash code repl file get file name long string system current time milli replic path add repl file get file name symlink path path new path repl file get fil e name file system f path get file system conf size replic input map red util get path length f f get file statu path max size new repl file new file spec symlink repl file null null repl file get func spec join set repl file new repl file size replic input max size throw new visitor except replic input file size size replic input exceed configur max size setup distribut cach context conf replic path array new string fals catch except e string msg intern error distribut cach could set replic file throw new visitor except msg e overrid public void visit merg join merg join join throw visitor except hadoop current n support distribut cach local mode line remov support add util local context conf return string index file join get index file merg join may use index file index file null return tri string symlink add singl file distribut cach context conf index file indexfil join set index file symlink catch except e string msg intern error distribut cach could set merg join index file throw new visitor except msg e overrid public void visit merg co group merg cogroup merg co grp throw visitor except hadoop current n support distribut cach local mode line remov support add util local context conf return string index file merg co grp get index file name index file null throw new visitor except index file tri string symlink add singl file distribut cach context conf index file indexfil mergecogrp merg co grp set index file name symlink catch except e string msg intern error distribut cach could set merg cogrp index file throw new visitor except msg e privat static class parallel constant visitor extend phi plan visitor privat int rp privat boolean replac fals public parallel constant visitor physic plan plan int rp super plan new depth first walker physic oper physic plan plan rp rp overrid public void visit constant constant express cnst throw visitor except cnst get request parallel object obj cnst get valu obj instanceof integ replac sampl job one constant express throw new visitor except invalid reduc plan one constant express find sampl job cnst set valu rp cnst set request parallel rp replac true public static void set output format org apach hadoop mapreduc job job output format report hadoop alway output format wrap lazi output format provid configur set true equal ignor case job get configur get configur lazi output format set output format class job output format class els job set output format class output format class 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool pigstat import java io file find except import java io except import java util array list import java util collect import java util list import java util map import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop mapr counter import org apach backend hadoop executionengin map reduc layer file base output size reader import org apach backend hadoop executionengin map reduc layer stat output size reader import org apach backend hadoop executionengin physic layer relat oper store import org apach classif interfac audienc import org apach classif interfac stabil import org apach impl context import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan plan visitor import org apach tool pigstat stat job graph class encapsul runtim statist map reduc job job statist collect job complet interfac audienc public interfac stabil evolv public abstract class job stat extend oper privat static final log log factori get log job stat class public static final string job statist alia public static final string job statist alia locat public static final string job statist featur public static final string null public static final string null public static enum job state protect job state state job state protect array list output stat output protect array list input stat input protect configur conf protect long hdf byte read protect long hdf byte write privat string error msg privat except except null protect job stat string name job graph plan super name plan output new array list output stat input new array list input stat public abstract string get job id public void set conf configur conf conf null return conf conf public job state get state return state public boolean success return state job state public void set success boolean success state success job state job state public string get error messag return error msg public except get except return except public list output stat get output return collect unmodifi list output public list input stat get input return collect unmodifi list input public string get alia return string get annot public string get alia locat return string get annot public string get featur return string get annot public long get hdf byte read return hdf byte read public long get hdf byte written return hdf byte write return total byte write user specifi locat job public long get byte write long count output stat output long n get byte n count n return count return total number record user specifi output locat job public long get record writtern long count output stat output long rec get number record rec count rec return count overrid public abstract void accept plan visitor v throw frontend except overrid public boolean equal oper oper oper instanceof job stat return fals return name equal ignor case oper get name public void set error msg string error msg error msg error msg public void set backend except except e except e public abstract string get display string calcul median valu give array param durat return median valu protect long calcul median valu list long durat long median figur median collect sort durat int mid point durat size durat size odd median durat get mid point els even median durat get mid point durat get mid point return median public boolean sampler return get featur contain script state name public boolean index return get featur contain script state name deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get number map instead deprec abstract public int get number map deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get number reduc instead deprec abstract public int get number reduc deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get max map time instead deprec abstract public long get max map time deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get min map time instead deprec abstract public long get min map time deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get avg map time instead deprec abstract public long get avg map time deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get max reduc time instead deprec abstract public long get max reduc time deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get min reduc time instead deprec abstract public long get min reduc time deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get avg educ time instead deprec abstract public long get avg educ time deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get map input record instead deprec abstract public long get map input record deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get map output record instead deprec abstract public long get map output record deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get reduc input record instead deprec abstract public long get reduc input record deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get reduc output record instead deprec abstract public long get reduc output record deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get spill count instead deprec abstract public long get spill count deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get proactiv spill count object instead deprec abstract public long get proactiv spill count object deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get proactiv spill count rec instead deprec abstract public long get proactiv spill count rec deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get hadoop counter instead deprec abstract public counter get hadoop counter deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get multi store counter instead deprec abstract public map string long get multi store counter deprec use mapreduc pleas cast job stat org apach tool pigstat mapreduc job stat use link org apach tool pigstat mapreduc job stat get multi input counter instead deprec abstract public map string long get multi input counter look output size reader invok get size output set default file base output size reader param sto store param conf configur public static long get output size store sto configur conf stat output size reader reader null string reader name conf get stat output size reader file base output size reader class get canon name string class name reader name split reader stat output size reader context instanti func spec class name reader support sto conf info use output size reader class name tri return reader get output size sto conf catch file find except e warn unabl find output file e return catch except e warn unabl get byte write job e return warn unabl find output size reader return 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io byte array input stream import java io except import java math big decim import java util array list import java util hash map import java util list import java util map import java util properti import org apach hadoop io text import org apach hadoop mapreduc input format import org apach hadoop mapreduc job import org apach hadoop mapreduc record reader import org apach hadoop mapreduc lib input file input format import org apach hadoop mapreduc lib input text input format import org apach express import org apach load caster import org apach load func import org apach load metadata import org apach warn import org apach resourc schema import org apach resourc schema resourc field schema import org apach resourc statist import org apach backend hadoop executionengin map reduc layer split import org apach datum bag factori import org apach datum datum bag import org apach data data byte array import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl util context import org apach impl util util import org codehau jackson json factori import org codehau jackson json parser import org codehau jackson json token import org joda time format date time formatt import org joda time format date time format loader datum store use link json storag gener loader depend schema store datum conceiv could write loader determin schema public class json loader extend load func implement load metadata protect record reader reader null protect resourc schema schema null privat string udfc signatur null privat json factori json factori null privat tupl factori tupl factori tupl factori get instanc privat bag factori bag factori bag factori get instanc privat static final string jsonload schema public json loader public json loader string schema string throw except schema new resourc schema util pars schema schema string overrid public void set locat string locat job job throw except tell input format read file input format set input path job locat overrid suppress warn uncheck public input format get input format throw except use text input format default hadoop input format text long writabl key ignor valu text string writabl datum return new text input format overrid public load caster get load caster throw except expect cast byte array return type datum return null overrid suppress warn uncheck public void prepar read record reader reader split split throw except reader reader get schema string context object context udfc context get context properti p udfc get properti get class new string udfc signatur string str schema p get properti str schema null throw new except could find schema context pars schema string store properti object schema new resourc schema util get schema string str schema json factori new json factori overrid public tupl get next throw except text val null tri read next key valu pair record reader finish return null reader next key valu return null get current valu n use key val text reader get current valu catch interrupt except ie throw new except ie creat parser specif input line may effici approach byte new byte new byte val get length system arraycopi val get byte new byte val get length byte array input stream bai new byte array input stream new byte json parser p json factori creat json parser bai creat tupl return creat right number field tupl object optim case resourc field schema field schema get field tupl tupl factori new tupl field length read start object marker throughout file pars n expect return tupl null field rather throw except way mangl line n fail job tri p next token json token warn bad record could find start record val string warn return read field record int field length set read field p field p next token json token warn bad record could find end record val string warn return catch except jpe throwabl ex jpe get caus null jpe jpe get caus warn encount except ex get class get name ex get messag bad record return null val warn final p close return privat object read primit json parser p json token tok resourc field schema field throw except tok json token return null switch field get type read base expect type case data type return p get boolean valu case data type return p get int valu case data type return p get long valu case data type return p get float valu case data type return p get doubl valu case data type date time formatt formatt date time format date time parser return formatt offset pars pars date time p get text case data type byte b p get text get byte use constructor copi byte memori return new datum byte array b b length case data type return p get text case data type return p get big integ valu case data type return new big decim p get text default throw new except unknown type input schema field get type privat object read field json parser p resourc field schema field int fieldnum throw except read next token json token tok p next token tok null warn earli termin record expect schema get field length field bug find fieldnum warn return null check see valu null tok json token return null tok p next token read base expect type switch field get type case data type start map object tok json token warn bad map field could find start object field fieldnum warn return null map string string new hash map string string p next token json token string k p get current name string v p get current token json token null p get text put k v return case data type tok json token warn bad tupl field could find start object field fieldnum warn return null resourc schema field get schema resourc field schema f get field tupl tupl factori new tupl fs length int j j f length j set j read field p f j j p next token json token warn bad tupl field could find end object field fieldnum warn return null return case data type tok json token warn bad bag field could find start array field fieldnum warn return null field get schema f get field drill next level tupl schema f get schema f get field data bag bag bag factori new default bag json token inner tok inner tok p next token json token tupl factori new tupl fs length inner tok json token int j j f length j set j read field p f j j p next token json token warn bad bag tupl field could find end object field fieldnum warn return null bag add els handl array kind primit primit set read primit p inner tok f bag add return bag default return read primit p tok field overrid public void set context signatur string signatur udfc signatur signatur overrid public resourc schema get schema string locat job job throw except resourc schema schema null schema els pars schema new json metadata get schema locat job true null throw new except unabl pars schema find file locat determin schema store context properti object need backend context udfc context get context properti p udfc get properti get class new string udfc signatur p set properti string return overrid public resourc statist get statist string locat job job throw except n implement one return null overrid public string get partit key string locat job job throw except n partit return null overrid public void set partit filter express partit filter throw except n partit overrid public list string get ship file list string cach file new array list string class class list new class json factori class return func util get ship file class list 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java io output stream import java util hash set import java util set import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f path import org apach hadoop mapreduc job import org apach express import org apach load func import org apach load metadata import org apach except import org apach resourc schema import org apach resourc statist import org apach store metadata import org apach backend datastorag contain descriptor import org apach backend datastorag data storag import org apach backend datastorag element descriptor import org apach backend hadoop datastorag configur util import org apach backend hadoop datastorag data storag import org apach backend hadoop datastorag directori import org apach backend hadoop datastorag file import org apach backend hadoop datastorag path import org apach impl io file local import org apach impl logic layer frontend except import org codehau jackson json gener except import org codehau jackson json pars except import org codehau jackson map json map except import org codehau jackson map object mapper import org codehau jackson map util map read write metadata use metafil next datum public class json metadata implement load metadata store metadata privat static final log log log factori get log json metadata class privat final string schema file name privat final string header file name privat final string stat file name privat boolean print header true privat byte field del privat byte record del privat transient map element descriptor boolean lookup cach new map element descriptor boolean public json metadata schema header stat public json metadata string schema file name string header file name string stat file name schema file name schema file name header file name header file name stat file name stat file name give path may repres glob pattern directori comma separ file glob pattern file method find set relev metadata file storag system algorithm find metadata file follow p object repres path either directli via glob object directori path metanam exist use metadata file els parent path metanam exist use metadata file p resolv conflict merg metadata etc handl method take care downstream code p param path path pass load func may hadoop glob param metanam metadata file design schema stat param conf configur object return set element descriptor metadata file associ file path protect set element descriptor find meta file string path string metanam configur conf throw except set element descriptor meta file set new hash set element descriptor string locat load func get path string path string loc locat data storag storag storag new data storag new path loc uri configur util properti conf string full path file local full path loc storag storag contain full path element descriptor meta file path storag element full path metanam exist meta file path meta file set add meta file path els element descriptor descriptor storag collect loc element descriptor descriptor descriptor contain descriptor contain null descriptor instanceof file path descriptor path path descriptor get path path parent descriptor path get parent contain new directori data storag storag parent els descriptor instanceof directori contain directori descriptor custom schema tri parent directori element descriptor meta file path storag element contain metanam exist meta file path meta file set add meta file path return meta file set privat boolean exist element descriptor e throw except lookup cach contain key e return lookup cach get e els boolean re e exist lookup cach put e re return re implement load meta data interfac overrid public string get partit key string locat job job return null overrid public void set partit filter express partit filter throw except json metadata schema consid option method suppress log error encount overrid public resourc schema get schema string locat job job throw except return get schema locat job fals read schema json metadata file schema paramet fals error suppress log param locat param job param schema return schema throw except public resourc schema get schema string locat job job boolean schema throw except configur conf job get configur set element descriptor schema file set null tri schema file set find meta file locat schema file name conf catch except e string msg could find schema file locat return null except schema msg e assum schema question merg schema leav open element descriptor schema file null schema file set empti schema file schema file set iter next els string msg could find schema file locat return null except schema msg null log debug find schema file schema file string resourc schema resourc schema null tri resourc schema new object mapper read valu schema file open resourc schema class catch json pars except e string msg unabl load resourc schema locat return null except schema msg e catch json map except e string msg unabl load resourc schema locat return null except schema msg e catch except e string msg unabl load resourc schema locat return null except schema msg e return resourc schema privat resourc schema null except boolean schema string msg except e throw frontend except schema throw new frontend except msg except e valid schema file probabl expect log debug messag return null log debug msg return null json metadata stat consid option method suppress log error encount see org apach load metadata get statist string job overrid public resourc statist get statist string locat job job throw except configur conf job get configur set element descriptor stat file set null tri stat file set find meta file locat stat file name conf catch except e log warn could fine stat file locat return null element descriptor stat file null stat file set empti stat file stat file set iter next els log warn could find stat file locat return null log debug find stat file stat file string resourc statist resourc stat null tri resourc stat new object mapper read valu stat file open resourc statist class catch json pars except e log warn unabl load resourc statist locat e print stack trace catch json map except e log warn unabl load resourc statist locat e print stack trace catch except e log warn unabl load resourc statist locat e print stack trace return resourc stat implement store meta data interfac overrid public void store statist resourc statist stat string locat job job throw except configur conf job get configur data storag storag new data storag new path locat uri configur util properti conf element descriptor stat file path storag element locat stat file name stat file path exist stat null tri new object mapper write valu stat file path creat stat catch json gener except e log warn unabl write resourc statist locat e print stack trace catch json map except e log warn unabl write resourc statist locat e print stack trace overrid public void store schema resourc schema schema string locat job job throw except configur conf job get configur data storag storag new data storag new path locat uri configur util properti conf element descriptor schema file path storag element locat schema file name schema file path exist schema null tri new object mapper write valu schema file path creat schema catch json gener except e log warn unabl write resourc statist locat e print stack trace catch json map except e log warn unabl write resourc statist locat e print stack trace print header element descriptor header file path storag element locat header file name header file path exist output stream os header file path creat tri string name schema field name string fn int name length fn name null name os write fn get byte name length os write field del els os write record del final os close public void set field del byte field del field del field del public void set record del byte record del record del record del 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io byte array output stream import java io except import java util list import java util map import java util properti import java math big decim import java math big integ import org codehau jackson json encod import org codehau jackson json factori import org codehau jackson json gener import org apach hadoop f path import org apach hadoop io long writabl import org apach hadoop io text import org apach hadoop mapreduc job import org apach hadoop mapreduc output format import org apach hadoop mapreduc record writer import org apach hadoop mapreduc lib output file output format import org apach hadoop mapreduc lib output text output format import org apach resourc schema import org apach resourc schema resourc field schema import org apach resourc statist import org apach store metadata import org apach store func import org apach store resourc import org apach datum data type import org apach datum tupl import org apach datum datum bag import org apach impl util context import org apach impl util util store function tupl store one line one valu text output format read easili use text input format tupl map object bag map array map also map object map assum string string schema store side file deal map type schema file share format one use storag public class json storag extend store func implement store metadata store resourc protect record writer writer null protect resourc schema schema null privat string udfc signatur null privat json factori json factori null default size byte buffer fit tupl privat static final int privat static final string jsonstorag schema method call front end overrid public output format get output format throw except use text output format default hadoop output format text key unus valu text string writabl type store datum return new text output format long writabl text overrid public void set store locat string locat job job throw except file output format util method set output locat file output format set output path job new path locat overrid public void set store func context signatur string signatur store signatur use later udfc signatur signatur overrid public void check schema resourc schema throw except will n realli check schema store context properti object need backend context udfc context get context properti p udfc get properti get class new string udfc signatur p set properti fix schema string method call back end overrid public void prepar write record writer writer throw except store record writer refer use time write tupl writer writer get schema string context object context udfc context get context properti p udfc get properti get class new string udfc signatur string str schema p get properti str schema null throw new except could find schema context pars schema string store properti object schema new resourc schema util get schema string str schema build json factori json factori new json factori suppress warn uncheck public void put next tupl throw except build byte array output stream write byte array output stream bao new byte array output stream build gener json gener json json factori creat json gener bao json encod write begin top level tupl object json write start object resourc field schema field schema get field int field length int tupl length size write col exist tupl null otherwis tupl length write field json field get els write field json field null json write end object json close hand null key string hadoop tri writer write null new text bao byte array catch interrupt except ie throw new except ie suppress warn uncheck privat void write field json gener json resourc field schema field object throw except field miss valu null write null null json write null field field get name return base field type write switch field get type case data type json write boolean field field get name boolean return case data type json write number field field get name integ return case data type json write number field field get name long return case data type json write number field field get name float return case data type json write number field field get name doubl return case data type json write string field field get name string return case data type json write string field field get name string return case data type json write string field field get name string return case data type sinc jackson do not write number field big integ manual json write field name field get name json write number big integ return case data type json write number field field get name big decim return case data type json write field name field get name json write start object map entri string object e map string object entri set json write string field e get key e get valu null null e get valu string json write end object return case data type json write field name field get name json write start object resourc schema field get schema null throw new except schema must fulli specifi use storag function schema find field field get name resourc field schema f get field int j j f length j write field json f j tupl get j json write end object return case data type json write field name field get name json write start array field get schema null throw new except schema must fulli specifi use storag function schema find field field get name f get field fs length f get type data type throw new except find bag without tupl insid drill next level tupl schema f get schema null throw new except schema must fulli specifi use storag function schema find field field get name f get field tupl data bag json write start object int j j f length j write field json f j get j json write end object json write end array return public void store statist resourc statist stat string locat job job throw except n implement method public void store schema resourc schema schema string locat job job throw except store schema side file directori map reduc includ file start read datum job json metadata metadata writer new json metadata byte record del n byte field del metadata writer set field del field del metadata writer set record del record del metadata writer store schema schema locat job public resourc schema fix schema resourc schema resourc field schema file get field file get type data type file set type data type return overrid public list string get ship file class class list new class json factori class return func util get ship file class list overrid public list string get cach file return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java util hash map import java util list import java util map import org apach except import org apach backend hadoop executionengin map reduc layer plan op plan visitor import org apach backend hadoop executionengin map reduc layer plan oper plan import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach datum data type import org apach impl plan depth first walker import org apach impl plan visitor except visitor figur type key map plan need key null creat appropri nullabl writabl object public class key type discoveri visitor extend op plan visitor non javadoc see org apach backend hadoop executionengin physic layer plan phi plan visitor visit local rearrang org apach backend hadoop executionengin physic layer relat oper local rearrang param plan oper plan visit discov key type public key type discoveri visitor oper plan plan super plan new depth first walker map reduc oper oper plan plan overrid public void visit op map reduc oper mr throw visitor except mr instanceof nativ map reduc oper return mr use secondari key mr map key type data type return boolean find key type fals phi plan key type visitor kvisitor new phi plan key type visitor mr map plan mr kvisitor visit kvisitor find key type look key type local rearrang previou reduc list map reduc oper pred plan get predecessor mr predecessor probabl simpl load store script way figur key type case probabl mean n need figur pred null map byte integ see new hash map byte integ map reduc oper pred pred phi plan key type visitor visitor new phi plan key type visitor pred reduc plan mr visitor visit find key type visitor find key type byte type mr map key type see put type see size throw except sinc get key type predecessor int error code string messag intern error find multipl datum type map key throw new visitor except messag error code except abl find key map reduc phase map would need send valid key object issu key null error reduc phase empti map job need key object map collect null collect find key type mr reduc plan empti throw except sinc abl determin key type int error code string messag intern error unabl determin datum type map key throw new visitor except messag error code except static class phi plan key type visitor extend phi plan visitor privat map reduc oper mro privat boolean find key type fals public phi plan key type visitor physic plan plan map reduc oper mro super plan new depth first walker physic oper physic plan plan mro mro overrid public void visit local rearrang local rearrang lr throw visitor except mro map key type lr get key type find key type true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin import java io except import java io print stream import java util array list import java util array import java util hash set import java util iter import java util list import java util map import java util set import java util regex matcher import java util regex pattern import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop mapr statu import org apach hadoop mapreduc task report import org apach hadoop mapr jobcontrol job import org apach hadoop mapr jobcontrol job control import org apach func spec import org apach except import org apach backend backend except import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer plan physic plan import org apach impl context import org apach impl io file spec import org apach impl plan plan except import org apach impl plan visitor except import org apach impl util log util import org apach impl util util import org apach tool pigstat stat import com googl common collect list import com googl common collect map provid core process implement backend execut engin choos decid deleg work class also contain set util method includ one center around hadoop public abstract class launcher privat static final log log log factori get log launcher class privat static final string memori error privat boolean except fals privat boolean memori fals privat string new line n use track except throw job control run separ thread protect string job control except stack trace null protect except job control except null protect long total hadoop time spend protect map file spec except failur map protect job control jc null protect class hang job killer extend thread public hang job killer overrid public void run tri kill catch except e log warn error kill execut engin e protect launcher handl window portion be system get properti os name upper case start new line r n reset reset state launch public void reset failur map map new hash map total hadoop time spend method launch hadoop either cluster job tracker local job runner differ two job client depend context job client initi one two launcher framework overid method give input physic plan compil get map reduc plan map reduc plan multipl map reduc oper one run map reduc job depend inform store plan compil oper plan job control object map reduc oper convert job add job control object job also set depend job creat use oper plan job control object obtain job control compil new thread spawn submit job respect depend inform parent thread monitor submit job progress complet stop job control thread param php param grp name param pc throw except public abstract stat launch physic plan php string grp name context pc throw except explain job execut underli infrastructur param pp physic plan explain param pc context use configur param ps print stream write output param format format write param verbos amount inform print throw visitor except throw except public abstract void explain physic plan pp context pc print stream ps string format boolean verbos throw plan except visitor except except public abstract void kill throw backend except public abstract void kill job string job configur conf throw backend except protect boolean complet doubl prog return int math ceil prog protect long comput time spend iter task report task report long time spend task report next task report be task report next time spend r get finish time be get start time return time spend protect void get error messag iter task report report string type boolean err dbg context context throw except report next task report report report next string msg report get diagnost array list except except new array list except string except creat fail msg null boolean job fail fals msg length report get current statu statu job fail true set string error messag set new hash set string int j j msg length j error messag set contain msg j error messag set add msg j err dbg err dbg use fail job keep track uniqu except tri log util write log backend error messag msg j context get properti get properti logfil log except e get except string msg j except add e catch except e except creat fail msg msg j els log debug error messag task type report get task msg j valid except could creat report job fail except size except creat fail msg null int err code string msg unabl recreat except back error except creat fail msg throw new exec except msg err code except fail job check one except one except impli possibl differ kind failur log differ failur throw except correspond first failur job fail except size int j j except size j string header messag error messag task type report get task log util write log except get j context get properti get properti logfil log fals header messag fals fals throw except get els except size throw except get els int err code string msg intern error expect throw except backend find except throw throw new exec except msg err code except comput progress current job submit job control object jc job client job client param jc job control object submit param job client job client submit return progress precentag doubl format throw except protect doubl calcul progress job control jc throw except doubl prog prog jc get success job size list job runn job jc get run job job j runn job prog progress run job j return prog return progress job j part submit job control object progress job scale num job present job control param j job progress requir return return percentag progress job throw except privat static doubl progress run job job j throw except org apach hadoop mapreduc job mr job j get job tri return mr job map progress mr job reduc progress catch except ir return public long get total hadoop time spend return total hadoop time spend except handler class handl except throw job control thread local class mechan catch unhandl thread except unhandl except thread handl handler regist explicitli default handler null public class job control thread except handler implement thread uncaught except handler overrid public void uncaught except thread thread throwabl throwabl set job except throwabl protect void set job except throwabl throwabl job control except stack trace util get stack strace str throwabl tri job control except get except string job control except stack trace catch except e string err msg could resolv error occur launch job job control except stack trace job control except new runtim except err msg throwabl param stack trace string represent link throwabl print stack trace print stack trace handl intern except subclass overrid link throwabl string string method return except object whose string represent print stack trace input stack trace throw except public except get except string string stack trace throw except string line stack trace split new line throwabl get except string line except int err code string msg execut encount hadoop error exec except ee new exec except msg err code except ee set stack trace get stack trace return ee els except fals memori memori fals int err code string msg memori exec except ee new exec except msg err code except ee set stack trace get stack trace return ee return except param stack trace line array string repres link throwabl print stack trace print stack trace output split newlin return except object whose string represent print stack trace input stack trace throw except privat throwabl get except string string stack trace line int start line num throw except pars array string throw appropri except first line start line num extract except name extract messag fourth creat appropri except return exampl stack trace org apach backend executionengin exec except receiv bytearray determin convert bytearray int org apach backend hadoop executionengin physic layer express oper cast get next cast java org apach backend hadoop executionengin physic layer express oper less expr get next less expr java org apach backend hadoop executionengin physic layer relat oper filter get next filter java org apach backend hadoop executionengin map reduc layer map base run pipelin map base java org apach backend hadoop executionengin map reduc layer map base map map base java org apach backend hadoop executionengin map reduc layer map map map map java org apach hadoop mapr map runner run map runner java org apach hadoop mapr map task run map task java org apach hadoop mapr task tracker child main task tracker java stack trace line length start line num stack trace line length regex match except class name note use match nest class string except name delimit w w w pattern except name pattern pattern compil except name delimit first line extract except name except messag matcher except name matcher except name pattern matcher stack trace line start line num string except name null string except messag null except name matcher find except name except name matcher group note substr end regex matcher end one posit beyond match case end colon except messag preced space colon except name contain memori true stack trace line start line num length except name matcher end except messag stack trace line start line num substr except name matcher end start line num except name null except name null array list stack trace element stack trace element list new array list creat stack trace element remain line string stack element regex w w w pattern stack element pattern pattern compil stack element regex string except regex org apach pattern except pattern pattern compil except regex string element regex pattern element pattern pattern compil element regex int line num start line num line num stack trace line length line num matcher stack element matcher stack element pattern matcher stack trace line line num stack element matcher find stack trace element ste get stack trace element stack trace line line num stack trace element add ste string class name ste get class name matcher except matcher except pattern matcher class name except matcher find except true els matcher element matcher element pattern matcher stack trace line line num element matcher find line num break start line num line num creat appropri except setup stack trace messag object object context instanti func spec except name object instanceof except extract error code messag regex match custom format string err messag regex pattern err messag pattern pattern compil err messag regex matcher err messag matcher err messag pattern matcher except messag err messag matcher find string err messag stub err messag matcher group extract actual except messag san note matcher end space follow colon except messag appear space henc end except messag except messag substr err messag matcher end regex match error code wich string numer string err code regex pattern err code pattern pattern compil err code regex matcher err code matcher err code pattern matcher err messag stub string code null err code matcher find code err code matcher group could receiv number format except propag stack int err code code null err code integ pars int code els err code creat except messag set error code error sourc func spec func spec new func spec except name except messag object context instanti func spec func spec except object set error code err code except object set error sourc except determin error sourc err code els els err messag matcher find find error code mean except subclass return error code highli unlik never func spec func spec new func spec except name except messag object context instanti func spec func spec except object set error code gener error code except object set error sourc except els els object instanceof except except creat except messag object context instanti func spec new func spec except name except messag stack trace element ste arr new stack trace element stack trace element size throwabl object set stack trace stack trace element array ste arr start line num stack trace line length throwabl e get except string stack trace line start line num throwabl object init caus e return throwabl object els els except name null int err code string msg find except name creat except string array string stack trace line throw new exec except msg err code except els els line length int err code string msg creat except empti string throw new exec except msg err code except param line string represent stack trace return link throwabl print stack trace print stack trace return stack trace element object repres stack trace throw except public stack trace element get stack trace element string line throw except format line someth like org apach backend hadoop executionengin map reduc layer map map map map java note white space much import note poster string item regex match fulli qualifi method name note use match nest class use constructor string qualifi method name regex w w w pattern qualifi method name pattern pattern compil qualifi method name regex matcher content matcher qualifi method name pattern matcher line org apach backend hadoop executionengin map reduc layer map map map map java string content null content matcher find content line substr content matcher start els int err code string msg find fulli qualifi method name reconstruct stack trace line throw new exec except msg err code except matcher qualifi method name matcher qualifi method name pattern matcher content org apach backend hadoop executionengin map reduc layer map map map string qualifi method name null map java string file detail null qualifi method name matcher find qualifi method name qualifi method name matcher group file detail content substr qualifi method name matcher end els int err code string msg find fulli qualifi method name reconstruct stack trace line throw new exec except msg err code except fulli qualifi method name extract declar class method name item qualifi method name split initi declar class org case string declar class item last member alway method name string method name item item length string builder sb new string builder concaten name add dot member till penultim member int item length sb append sb append item declar class sb string file detail extract file name line number map java file detail file detail substr file detail length item file detail split map java string file name null int line number item length file name item item length line number integ pars int item return new stack trace element declar class method name file name line number public void destroy 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat public class less equal express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public less equal express oper plan plan logic express lh logic express rh super less equal plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof less equal express less equal express eo less equal express return eo get lh equal get lh eo get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new less equal express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import org apach common log log import org apach common log log factori import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except public class less expr extend binari comparison oper privat static final long serial version transient privat final log log log factori get log get class public less expr oper key k k public less expr oper key k int rp super k rp result type data type overrid public string name return less data type find type name result type key string overrid public void visit phi plan visitor v throw visitor except v visit less overrid public result get next boolean throw exec except result leav right switch operand type case data type case data type case data type case data type case data type case data type case data type case data type case data type result be accum child null operand type r null return be leav lh get next operand type right rh get next operand type return comparison leav right default int err code string msg get class get simpl name know handl type data type find type name operand type throw new exec except msg err code except suppress warn uncheck privat result comparison result leav result right leav return statu statu return left right return statu statu return right either operand null result null left result null right result null left result null left return statu statu return left assert left result instanceof compar assert right result instanceof compar compar left result compar right result leav result boolean els leav result boolean illustr markup null left result boolean leav result return leav overrid public less expr clone throw clone support except less expr clone new less expr new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat public class less express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public less express oper plan plan logic express lh logic express rh super less plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof less express less express eo less express return eo get lh equal get lh eo get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new less express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io except import java util array list import java util list import org apach func spec import org apach except import org apach backend hadoop executionengin map reduc layer plan op plan visitor import org apach backend hadoop executionengin map reduc layer plan oper plan import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer relat oper limit import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper store import org apach impl context import org apach impl io file local import org apach impl io file spec import org apach impl plan depth first walker import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan plan except import org apach impl plan visitor except import org apach impl util util public class limit adjust extend op plan visitor array list map reduc oper op adjust new array list map reduc oper context context node id gener nig privat string scope public limit adjust oper plan plan context context super plan new depth first walker map reduc oper oper plan plan context context nig node id gener get gener list map reduc oper root plan get root scope root get get oper key get scope overrid public void visit op map reduc oper mr throw visitor except look map reduc oper contain limit oper add one addit map reduc oper reduc origin plan new job skip runtim discov parent singl reduc mr request parallel check happen runtim sinc reduc estim happen mr limit mr limit plan null op adjust add mr public void adjust throw except plan except map reduc oper mr op adjust mr reduc plan empti continu list physic oper mp leav mr reduc plan get leav mp leav size int err code string msg expect reduc singl leaf find mp leav size leav throw new compil except msg err code except physic oper mp leaf mp leav get context illustr mp leaf instanceof store int err code string msg expect leaf reduc plan alway store find mp leaf get class get simpl name throw new compil except msg err code except file spec old spec store mp leaf get file boolean old tmp store store mp leaf tmp store file spec f spec new file spec file local get temporari path context string new func spec util get tmp file compressor name context store store op store mp leaf store op set file f spec store op set tmp store true mr set reduc do true map reduc oper limit adjust op new map reduc oper new oper key scope nig get next node id scope load ld new load new oper key scope nig get next node id scope ld set pc context ld set file f spec ld set tmp load true limit adjust op map plan add ld mr global sort connect map reduc limit sort limit adjust op mr els util simpl connect map reduc limit adjust op scope nig need split origin reduc plan two mapreduc job st root packag limit nd limit leav store duplic limit reason need two map reduc job otherwis end record number reduc limit constant need one extra mapreduc job reduc n want move oper limit first mapreduc job foreach shift key type second mapreduc job see foreach flatten may gener record get cut limit see split reduc limit limit adjust op mr mr global sort limit adjust op set limit sort true limit adjust op set sort order mr get sort order store st new store new oper key scope nig get next node id scope st set file old spec st set tmp store old tmp store st set schema store mp leaf get schema st set signatur store mp leaf get signatur st copi alia mp leaf limit adjust op reduc plan add leaf st limit adjust op request parallel limit adjust op set limit true list map reduc oper successor list plan get successor mr map reduc oper successor null save snapshot successor sinc modifi plan use list directli problemat successor list null successor list size successor new map reduc oper successor list size int map reduc oper op successor list successor op process fs string udf mr fs limit adjust op fs contain udf limit adjust op fs add udf plan add limit adjust op plan connect mr limit adjust op successor null int successor length map reduc oper next mr successor next mr null plan disconnect mr next mr next mr null plan connect limit adjust op next mr move oper limit store reduc plan first op second op privat void split reduc limit map reduc oper second op map reduc oper first op throw plan except visitor except physic oper op first op reduc plan get root get assert op instanceof packag true list physic oper succ first op reduc plan get successor op succ null break op succ get op instanceof limit find oper limit op first op reduc plan get successor op get break limit p limit new limit new oper key scope nig get next node id scope p limit set limit first op limit p limit set limit plan first op limit plan second op reduc plan add leaf p limit true op instanceof store break physic oper op move op list physic oper succ first op reduc plan get successor op op succ get first op reduc plan remov reconnect op move second op reduc plan add leaf op move privat void connect map reduc limit sort map reduc oper mro map reduc oper sort op throw plan except visitor except local rearrang slr local rearrang sort op map plan get leav get local rearrang lr null tri lr slr clone catch clone support except e int err code string msg error clone local rearrang limit sort throw new compil except msg err code except e mro map plan add leaf lr packag spkg packag sort op reduc plan get root get packag pkg null tri pkg spkg clone catch except e int err code string msg error clone packag lite limit sort throw new compil except msg err code except e mro reduc plan add pkg mro reduc plan add leaf util get plain scope nig 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic visitor import java io except import java util array list import java util hash map import java util list import java util map import java util set import org apach eval func import org apach func spec import org apach load caster import org apach load func import org apach except import org apach datum data type import org apach impl context import org apach stream import org apach impl builtin ident column import org apach impl logic layer frontend except import org apach impl plan visitor except import org apach impl stream stream command import org apach impl stream stream command handl spec import org apach impl util multi map import org apach newplan depend order walker import org apach newplan oper import org apach newplan oper plan import org apach newplan plan walker import org apach newplan revers depend order walker import org apach newplan logic express bin cond express import org apach newplan logic express cast express import org apach newplan logic express constant express import org apach newplan logic express derefer express import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic express logic express visitor import org apach newplan logic express map lookup express import org apach newplan logic express project express import org apach newplan logic express scalar express import org apach newplan logic express user func express import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat split output import org apach newplan logic relat store import org apach newplan logic relat stream import org apach newplan logic relat union import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat node visitor import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema creat map uid load func spec logic express associ know hold unmodifi element datum return load function inform use find load caster use cast bytearray type public class lineag find rel visitor extend logic relat node visitor map long func spec uid load func map new hash map long func spec logic relat oper associ singl load func spec map store map logic relat oper func spec rel input func map new hash map logic relat oper func spec map func spec class func caster map new hash map func spec class public lineag find rel visitor oper plan plan throw frontend except super plan new depend order walker plan public map long func spec get uid load func map return uid load func map overrid public void visit load load throw frontend except logic schema schema load get schema set load func uid schema load get file spec get func spec rel input func map put load load get file spec get func spec overrid public void visit stream stream throw frontend except map pred load func stream stream command command stream stream get stream command handl spec stream output spec command get output spec func spec stream loader spec new func spec stream output spec get spec set load func uid stream get schema stream loader spec rel input func map put stream stream loader spec overrid public void visit inner load inner load throw frontend except foreach inner load get logic relat oper pred logic relat oper foreach get plan get predecessor foreach get logic schema pred schema pred get schema schema lineag track use uid input schema inner load get schema null inner load get schema size inner load get schema get field type data type uid load func map get inner load get schema get field uid null pred schema null long inp uid pred schema get field inner load get project get col num uid uid load func map get inp uid null add uid load func map inner load get schema get field uid uid load func map get inp uid return associ load func could find use uid use singl load func associ input relat get associ load func pred null map rel pred load func inner load pred map uid schema func spec param schema param func spec throw visitor except privat void set load func uid logic schema schema func spec func spec throw visitor except schema null return logic field schema fs schema get field add uid load func map long f uid func spec set load func uid f schema func spec overrid public void visit filter filter throw frontend except map pred load func filter visit express filter get filter plan predecessor rel op associ load func map op param rel op throw frontend except privat void map pred load func logic relat oper rel op throw frontend except oper plan lp rel op get plan list oper pred lp get predecessor rel op lp get predecessor rel op null lp get predecessor rel op size predecessor noth return func spec load func spec get associ load func logic relat oper pred get load func spec null return ensur predecessor map load func spec int pred size ident caster load func spec get associ load func logic relat oper pred get return rel input func map put rel op load func spec find singl load func spec associ relat relat schema uid schema associ load func spec schema check exist map param rel op return throw frontend except privat func spec get associ load func logic relat oper rel op throw frontend except logic schema schema rel op get schema func spec func spec null schema null schema size return null func spec uid load func map get schema get field uid func spec null int schema size logic field schema fs schema get field ident caster func spec uid load func map get fs uid uid associ func spec singl func spec repres field func spec null break func spec null rel op contain byte field could come n assum share load caster predecessor rel op instanceof finder udf finder new finder rel op get inner plan udf finder visit udf finder get list size return null func spec rel input func map get rel op return func spec privat void map rel pred load func logic relat oper rel op oper pred rel input func map get pred null rel input func map put rel op rel input func map get pred privat void visit express logic express plan exp plan throw frontend except lineag find exp visitor find lineag exp new lineag find exp visitor exp plan uid load func map find lineag exp visit overrid public void visit cogroup group throw frontend except map pred load func group list oper input group get input logic plan plan list field schema group plan list logic field schema group plan schema new array list logic field schema multi map integ logic express plan plan group get express plan logic express plan exp plan plan valu visit express exp plan exp plan get sourc size throw new assert error group plan one output group plan schema add logic express exp plan get sourc get get field schema logic schema sch group get schema group plan associ load function associ load fucntion group column schema get associ load func group null add uid load func map sch get field uid rel input func map get group sch get field schema null set load func uid sch get field schema rel input func map get group els map match load func uid sch get field group plan schema set load func spec bag schema help input schema set group schema group column follow bag correspond input sch size input size throw new assert error cogroup schema size number input int sch size long uid sch get field uid logic relat oper input logic relat oper input get get associ load func input null add uid load func map uid rel input func map get input overrid public void visit join join throw frontend except map pred load func join multi map integ logic express plan plan join get express plan logic express plan exp plan plan valu visit express exp plan overrid public void visit fe throw frontend except map pred load func fe logic plan inner plan fe get inner plan plan walker new walker current walker spawn child walker inner plan push walker new walker current walker walk pop walker overrid public void visit gener gen throw frontend except map pred load func gen list logic express plan exp plan gen get output plan logic express plan exp plan exp plan visit express exp plan associ flatten output load func associ input express flatten boolean flatten gen get flatten flag int flatten length flatten true get output schema correspond exp plan gen get schema gen get output plan schema null gen get output plan schema size return logic schema sch gen get output plan schema get sch null continu get output exp ith plan logic express exp logic express gen get output plan get get sourc get get funcspec associ uid field schema func spec func spec uid load func map get exp get field schema uid logic field schema fs sch get field add uid load func map f uid func spec overrid public void visit sort sort throw frontend except map pred load func sort list logic express plan exp plan sort get sort col plan logic express plan exp plan exp plan visit express exp plan overrid public void visit rank rank throw frontend except map pred load func rank list logic express plan exp plan rank get rank col plan logic express plan exp plan exp plan visit express exp plan overrid public void visit distinct rel op throw frontend except map pred load func rel op overrid public void visit limit lo limit throw frontend except map pred load func lo limit lo limit get limit plan null visit express lo limit get limit plan overrid public void visit split rel op throw frontend except map pred load func rel op overrid public void visit store rel op throw frontend except map pred load func rel op overrid public void visit cross rel op throw frontend except map pred load func rel op overrid public void visit union rel op throw frontend except map pred load func rel op sinc uid chang union add map new uid funcspec logic schema schema rel op get schema schema null output field check field union ed bundl togeth set funcspec come caster j j check caster j j j may come differ caster logic field schema logic field schema schema get field set long input rel op get input uid logic field schema uid input size uid chang funcspec alreadi set skip continu func spec prev load func spec null cur load func spec null boolean loader true long input uid input cur load func spec uid load func map get input uid prev load func spec null ident caster prev load func spec cur load func spec loader fals break prev load func spec cur load func spec loader add uid load func map logic field schema uid cur load func spec overrid public void visit split output split throw frontend except map pred load func split visit express split get filter plan uid chang across input output split visitor uid field output map one input base posit uid load func map updat output schema uid load func map correspond uid inputschema logic schema input sch logic relat oper split get plan get predecessor split get get schema logic schema schema split get schema input sch null schema null return input sch null schema null string msg bug split one input output schema null split throw new visitor except split msg except input sch size schema size string msg bug input output schema size split differ split throw new visitor except split msg except int input sch size logic field schema field input sch get field logic field schema field schema get field uid load func map get field uid null add uid load func map field uid uid load func map get field uid add give uid load func spec map param uid param load func spec throw visitor except privat void add uid load func map long uid func spec load func spec throw visitor except load func spec null return ensur uid alway match load func func spec cur func spec uid load func map get uid cur func spec null uid load func map put uid load func spec els ident caster cur func spec load func spec string msg bug uid map two differ load function cur func spec load func spec throw new visitor except msg except uid input field schema inner schema map load function map new uid bincond also load function uid load func map param param input field schema throw visitor except void map match load func uid logic field schema list logic field schema input field schema throw visitor except input field schema size return schema input null skip output schema logic field schema f input field schema fs null return non null load func associ fieldschema asssoci uid logic field schema inp input field schema get func spec func spec uid load func map get inp uid boolean inner schema match fals func spec null boolean match true inner schema match true logic field schema f input field schema check func spec match ident caster func spec uid load func map get fs uid match fals check inner schema match use later schema null schema equal f schema inner schema match fals match add uid load func map uid func spec recurs call function correspond file inner schema inner schema match list logic field schema field schema get field int field size list logic field schema fs list new array list logic field schema logic field schema f input field schema fs list add f schema get field map match load func uid field get fs list input derefer map lookup associ load function load function associ derefer map lookup class lineag find exp visitor extend logic express visitor privat map long func spec uid load func map public lineag find exp visitor logic express plan plan map long func spec uid load func map throw frontend except super plan new revers depend order walker plan uid load func map uid load func map overrid public void visit project express proj throw frontend except proj uid input input schema uid associ func spec input relat null schema inner load use load func associ relat logic relat oper input rel proj find refer proj get field schema null return long uid proj get field schema uid uid load func map get uid null input rel get schema null input rel instanceof inner load func spec func spec rel input func map get input rel func spec null add uid load func map uid func spec overrid public void visit derefer express deref throw frontend except updat uid map deref deref get refer express overrid public void visit map lookup express map lookup throw frontend except updat uid map map lookup map lookup get map privat void updat uid map logic express exp logic express inp throw frontend except find input uid correspond load func spec long inp uid inp get field schema uid func spec inp load func spec uid load func map get inp uid add uid load func map exp get field schema uid inp load func spec overrid public void visit bin cond express bin cond throw frontend except either side null constant safe associ bincond load func spec side logic express lh bin cond get lh logic express rh bin cond get rh get constant cast lh null func spec func spec uid load func map get rh get field schema uid uid load func map put bin cond get field schema uid func spec els get constant cast rh null func spec func spec uid load func map get lh get field schema uid uid load func map put bin cond get field schema uid func spec els list logic field schema field schema new array list logic field schema field schema add lh get field schema field schema add rh get field schema map match load func uid bin cond get field schema field schema overrid public void visit scalar express scalar exp throw frontend except track lineag input load function logic relat oper input rel logic relat oper scalar exp get attach logic oper logic plan rel plan logic plan input rel get plan list oper soft pred rel plan get soft link predecessor input rel st argument column number input nd arg input file name integ input col num integ constant express scalar exp get argument get get valu string input file string constant express scalar exp get argument get get valu long output uid scalar exp get field schema uid boolean find input fals variabl saniti check num input relat find input relat use get lineag oper soft pred soft pred store input store store soft pred input store get file spec get file name equal input file find input true throw new frontend except one input find scalar express except find input true find store correspond scalar express logic schema sch input store get schema sch null see load function associ store func spec func spec rel input func map get input store add uid load func map output uid func spec els find input uid correspond load func logic field schema fs sch get field input col num func spec func spec uid load func map get fs uid add uid load func map output uid func spec find input fals throw new frontend except input find scalar express except overrid public void visit user func express op throw frontend except op get field schema null return func spec func spec null class loader instanti caster op get func spec list logic express argument op get argument loader null eval func get load caster return simpli use func spec op get func spec els argument size func spec base func spec null logic field schema fs argument get get field schema fs null base func spec uid load func map get fs uid base func spec null func spec base func spec int argument size fs argument get get field schema fs null ident caster base func spec uid load func map get fs uid func spec null break func spec null add uid load func map op get field schema uid func spec case schema nest set func spec set load func uid op get field schema schema func spec null constant cast return param rel return throw frontend except privat object get constant cast logic express rel throw frontend except rel instanceof cast express cast express rel get express instanceof cast express return get constant cast cast express rel get express els cast express rel get express instanceof constant express constant express const exp constant express cast express rel get express const exp get valu null return const exp els return null return null copi cast instanti func privat class instanti caster func spec func spec throw visitor except func spec null return null func caster map contain key func spec return func caster map get func spec load caster caster null object obj context instanti func spec func spec tri obj instanceof load func caster load func obj get load caster els obj instanceof stream caster stream obj get load caster els obj instanceof eval func caster eval func obj get load caster els throw new visitor except invalid class type func spec get class name except catch except e throw new visitor except invalid class type func spec get class name e class retval caster null null caster get class func caster map put func spec retval return retval privat boolean ident caster func spec f func spec f throw visitor except f null f null return fals f equal f return true class caster instanti caster f class caster instanti caster f caster null caster null return fals class name load caster load caster default constructor two load caster consid equal caster get canon name equal caster get canon name caster get constructor length caster get constructor get gener paramet type length caster get constructor length caster get constructor get gener paramet type length return true return fals 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import java io except import java net import java util abstract collect import java util array list import java util iter import java util list import org apach hadoop f path import org apach hadoop mapreduc counter import org apach hadoop mapreduc input format import org apach hadoop mapreduc job import org apach hadoop mapreduc record reader import org apach classif interfac audienc import org apach classif interfac stabil import org apach load push requir field list import org apach backend hadoop executionengin map reduc layer hadoop logger import org apach backend hadoop executionengin map reduc layer split import org apach builtin utf storag convert import org apach datum tupl import org apach impl logic layer frontend except import org apach impl util context import org apach tool pigstat statu report load func load datum read file sourc load func tightli coupl hadoop link org apach hadoop mapreduc input format load func sit atop input format translat key valu hadoop tupl p load func contain basic featur need major load function advanc function separ interfac load function implement see link load caster link load metadata link load push link order load func link collect load func link index load func interfac audienc public interfac stabil stabl public abstract class load func method call runtim front end convert input locat absolut path locat rel load func implement free choos convert rel locat absolut locat sinc may depend locat string repres hdf path datum sourc param locat locat provid load statement script param cur dir current work direct base cd statement script load statement cd statement script would home directori pre user usernam pre return absolut locat base argument pass throw except convers possibl public string rel absolut path string locat path cur dir throw except return get absolut path locat cur dir commun loader locat object load locat string pass load func return valu link load func rel absolut path string path implement use method commun locat inform underli input format job object method call frontend backend multipl time implement bear mind method call multipl time ensur inconsist side effect due multipl call param locat locat return link load func rel absolut path string path param job link job object store retriev earli store inform link context throw except locat valid public abstract void set locat string locat job job throw except call plan front end instanc input format rather class name load function may need instanti input format order control construct return input format associ loader throw except except input format construct suppress warn uncheck public abstract input format get input format throw except call front end back end execut return link load caster associ loader return null indic cast byte array support loader construct throw except except load caster public load caster get load caster throw except return new utf storag convert initi load func read datum call execut call get next record reader need pass instanti particular input split param reader link record reader use instanc load func param split input link split process throw except except initi suppress warn uncheck public abstract void prepar read record reader reader split split throw except retriev next tupl process implement reus tupl object inner member object return across call return differ tupl object call return next tupl process null tupl process throw except except retriev next tupl public abstract tupl get next throw except join multipl string string delimit give delimit param collect string param delimit delimit return delimit separ string public static string join abstract collect string string delimit empti return iter string iter iter string buffer buffer new string buffer iter next iter next buffer append delimit buffer append iter next return buffer string pars comma separ path string string array method escap comma hadoop glob pattern give path method borrow link org apach hadoop mapreduc lib input file input format jira open make name method access use method directli jira fix param comma separ path comma separ string return array path string public static string get path string string comma separ path int length comma separ path length int curli open int path start boolean glob pattern fals list string path string new array list string int length char ch comma separ path char switch ch case curli open glob pattern glob pattern true break case curli open curli open glob pattern glob pattern fals break case glob pattern path string add comma separ path substr path start path start break path string add comma separ path substr path start length return path string array new string construct absolut path file locat current directori current directori either form code hdf nodenam nodeport directori code hadoop map reduc mode form code file directori code hadoop local mode param locat locat string specifi load statement param cur dir current file system directori return absolut path file file system throw frontend except scheme locat incompat scheme file system public static string get absolut path string locat path cur dir throw frontend except locat null cur dir null throw new frontend except locat locat cur dir cur dir f uri cur dir uri string f scheme fs uri get scheme fs scheme null throw new frontend except cur dir cur dir f scheme fs scheme lower case string author f uri get author author null author path root dir new path f scheme author array list string path string new array list string string fname get path string locat string fname fname remov lead trail whitespac fname fname trim path p new path fname uri p uri suppli locat scheme e uri absolut absolut path use uri absolut p absolut string scheme uri get scheme scheme null scheme scheme lower case scheme null scheme equal fs scheme throw new frontend except incompat file scheme scheme f scheme string path uri get path fname p absolut new path root dir path string new path cur dir path string fname fname replac first file file remov trail fname fname replac first path string add fname return join path string method call front end back end pass uniqu signatur link load func signatur use store link context inform link load func need store variou method invoc front end back end use case store link requir field list pass link load push push project requir field list use back end return tupl link load func get next method call method link load func param signatur uniqu signatur identifi load func public void set context signatur string signatur default implement op issu warn warn messag aggreg report user param msg string messag warn param warn enum type warn public final void warn string msg enum warn enum hadoop logger get instanc warn msg warn enum allow load func specifi list file would like place distribut cach default implement return null return list file public list string get cach file return null allow load func specifi list file locat local would like ship backend distribut cach check link func util util function facilit default implement return null return list file public list string get ship file return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java util properti import org apach exec type import org apach backend executionengin execut engin import org apach impl context local exec type exec type local mode hadoop mapreduc public class local exec type implement exec type privat static final string mode overrid public boolean accept properti properti string exec type specifi properti get properti exectyp upper case string mode mode exec type specifi equal mode return true return fals overrid public execut engin get execut engin context context return new execut engin context overrid public class get execut engin class return execut engin class overrid public boolean local return true overrid public string name return public string string return name 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach pen import java io except import java util array list import java util hash map import java util link list import java util list import java util map import org apach hadoop conf configur import org apach hadoop io text import org apach hadoop io writabl import org apach hadoop mapr task import org apach hadoop mapr jobcontrol job import org apach hadoop mapr jobcontrol job control import org apach hadoop mapreduc mapper import org apach hadoop mapreduc reduc import org apach except import org apach backend executionengin exec except import org apach backend hadoop datastorag configur util import org apach backend hadoop executionengin map reduc layer job control compil import org apach backend hadoop executionengin map reduc layer configur import org apach backend hadoop executionengin map reduc layer map reduc launcher import org apach backend hadoop executionengin map reduc layer map reduc oper import org apach backend hadoop executionengin map reduc layer map base import org apach backend hadoop executionengin map reduc layer map import org apach backend hadoop executionengin map reduc layer map reduc import org apach backend hadoop executionengin map reduc layer map reduc counter import org apach backend hadoop executionengin map reduc layer split import org apach backend hadoop executionengin map reduc layer plan oper plan import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer util plan helper import org apach datum datum bag import org apach datum tupl import org apach impl context import org apach impl builtin read scalar import org apach impl io file local import org apach impl io nullabl tupl import org apach impl io nullabl writabl import org apach impl plan depth first walker import org apach impl plan oper key import org apach impl plan visitor except import org apach impl util configur valid import org apach impl util object serial import org apach impl util pair import org apach newplan logic relat load import org apach newplan logic relat logic relat oper import org apach pen util lineag tracer main class launch map reduc public class local map reduc simul privat map reduc launcher launcher new map reduc launcher privat map physic oper physic oper phi map new hash map physic oper physic oper suppress warn uncheck public void launch physic plan php map load datum bag base datum lineag tracer lineag illustr attach attach exampl gener eg context pc throw except except interrupt except phi map clear oper plan mrp launcher compil php pc configur valid valid properti pc get properti configur conf configur util configur pc get properti job control compil jcc new job control compil pc conf job control jc int num job compl data bag input list pair nullabl writabl writabl intermedi datum new array list pair nullabl writabl writabl map job map reduc oper job mro map jcc get job mro map hash map string data bag output new hash map string data bag configur job conf jc null mrp size boolean need file input final array list oper key empti inp target new array list oper key pc get properti set properti illustr true string jt identifi system current time milli int job id mrp size jc jcc compil mrp illustr jc null throw new exec except nativ execut support list job job jc get wait job job job job job id job conf job get job conf file local set initi fals array list array list oper key inp target array list array list oper key object serial deseri job conf get inp target intermedi datum clear map reduc oper mro job mro map get job split split null list store store null physic oper pack null revisit new physic oper compil mro map plan empti attach revisit mro map plan mro reduc plan empti attach revisit mro reduc plan pack mro reduc plan get root get list load ld plan helper get physic oper mro map plan load class mro map plan empti store plan helper get physic oper mro map plan store class mro reduc plan empti store null store plan helper get physic oper mro reduc plan store class els store add plan helper get physic oper mro reduc plan store class store store store output put store get file get file name attach get data map get store output attach oa new output attach mro map plan output oa visit mro reduc plan empti oa new output attach mro reduc plan output oa visit int index load ld ld input output get ld get file get file name input null base datum null logic relat oper lo base datum key set load lo get schema file equal ld get file get file name input base datum get lo break input null mro map plan remov ld int map task id load ld ld check newli gener datum first input output get ld get file get file name input null base datum null input null base datum null logic relat oper lo base datum key set load lo get schema file equal ld get file get file name input base datum get lo break need file input input null split new split null index need file input empti inp target inp target get index index mapper text tupl nullabl writabl writabl map mro reduc plan empti map map new map map mapper text tupl nullabl writabl writabl context context map map map get illustr context job conf input intermedi datum split mro counter oper mro row number map new map reduc counter map counter context map reduc counter map counter map get illustr context job conf input intermedi datum split map base map set map plan mro map plan context get configur set configur new task jt identifi job id true map task id string map run context els true equal job conf get usercompar map new map reduc map compar els equal job conf get key dist file map new map reduc map partit index els map new map reduc map mapper text tupl nullabl writabl writabl context context map base map get illustr context job conf input intermedi datum split map base map set map plan mro map plan context get configur set configur new task jt identifi job id true map task id string map run context mro reduc plan empti pack instanceof packag mro reduc plan remov pack reduc run map reduc reduc reduc true equal job conf get usercompar reduc new map reduc reduc compar els reduc new map reduc reduc reduc nullabl writabl nullabl tupl nullabl writabl writabl context context reduc get illustr context job intermedi data packag pack mro counter oper reduc new map reduc counter reduc counter context map reduc counter reduc counter reduc get illustr context job intermedi data packag pack map reduc reduc reduc set reduc plan mro reduc plan context get configur set configur new task jt identifi job id fals string reduc run context physic oper key mro phi map key set physic oper valu mro phi map get key phi map put key valu int remov op jcc updat op plan new link list job num job compl remov op jcc reset privat class output attach extend phi plan visitor privat map string data bag output buffer output attach physic plan plan map string data bag output super plan new depth first walker physic oper physic plan plan output buffer output overrid public void visit user func user func user func throw visitor except user func get func null user func get func instanceof read scalar read scalar user func get func set output buffer output buffer public map physic oper physic oper get phi map return phi map 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util array list import java util array import java util collect import java util collect import java util hash map import java util list import java util map import org apach datum data type import org apach impl logic layer frontend except import org apach impl util multi map import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic relat logic schema logic field schema public class cogroup extend logic relat oper list boolean specifi cogroup inner privat boolean inner list express plan accord input privat multi map integ logic express plan express plan enum type group public static enum regular co group collect group map side co group sort datum privat group type privat logic field schema group key uid schema map store uid gener input map requir make uid persist call reset schema get schema privat map integ long gener input uid new hash map integ long final static string group static constant refer option select group type public final static integ constructor use defin rule pattern param plan public cogroup logic plan plan super cogroup plan public cogroup oper plan plan multi map integ logic express plan express plan boolean inner plan express plan inner public cogroup oper plan plan multi map integ logic express plan express plan group type boolean inner super cogroup plan express plan express plan inner null inner array copi inner inner length group type group type give express plan function return logic field schema gener use express plan param expr plan express plan gener field return privat logic field schema get plan schema logic express plan expr plan throw frontend except logic express sourc exp logic express expr plan get sourc get logic field schema plan schema null sourc exp get field schema null plan schema sourc exp get field schema deep copi return plan schema overrid public logic schema get schema throw frontend except schema calcul return schema null return schema list oper input null input plan get predecessor input null throw new frontend except get predecessor list logic field schema field schema list new array list logic field schema see one express plan schema group column tupl boolean multipl key fals integ key express plan key set express plan get key size multipl key true break logic field schema group key schema null gener group field schema multipl key logic schema key schema new logic schema sort maintain correct order input integ key express plan key set collect logic express plan plan express plan get key logic express plan plan plan logic field schema field schema get plan schema plan plan schema null mean can not calcul schema bail field schema null schema null return schema field schema new logic field schema field schema key schema add field field schema need field one input break group key schema new logic field schema key schema data type els sort maintain correct order input integ key express plan key set collect logic express plan plan express plan get key logic express plan plan plan group key schema get plan schema plan plan schema null mean figur ariti key give empti tupl group key schema null group key schema new logic schema logic field schema group null data type break group key schema new logic schema logic field schema group key schema chang uid field group key schema alia break break express plan size reset uid group column associ one input group key schema reset uid group key schema null throw new frontend except get group key schema group key uid schema group key schema merg uid group key uid schema field schema list add group key schema gener bag schema int counter oper op input logic schema input schema logic relat oper op get schema check alreadi calcul uid bag give input oper long bag uid gener input uid get counter null bag uid gener input uid get counter els bag uid logic express get next uid gener input uid put counter bag uid logic field schema new tupl field schema new logic field schema null input schema data type logic express get next uid logic schema bag schema new logic schema bag schema add field new tupl field schema logic field schema new bag field schema new logic field schema logic relat oper op get alia bag schema data type bag uid field schema list add new bag field schema counter schema new logic schema logic field schema field schema field schema list schema add field field schema return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper throw frontend except null instanceof cogroup cogroup oc cogroup group type oc group type inner length oc inner length express plan size oc express plan size int inner length inner oc inner return fals integ key express plan key set oc express plan contain key key return fals collect logic express plan exp express plan get key collect logic express plan exp oc express plan get key exp instanceof array list exp instanceof array list throw new frontend except expect array list express plan array list logic express plan exp list array list logic express plan exp array list logic express plan exp list array list logic express plan exp int exp list size exp list get equal exp list get return fals return check equal logic relat oper return fals public get group type return group type public void reset group type group type return unmodifi map input number uid return unmodifi map integ long public map integ long get gener input uid return collect unmodifi map gener input uid public multi map integ logic express plan get express plan return express plan public void set express plan multi map integ logic express plan plan express plan plan public void set group type gt group type gt public void set inner flag boolean flag flag null inner array copi flag flag length public boolean get inner return inner overrid public void reset uid group key uid schema null gener input uid new hash map integ long public list oper get input logic plan plan return plan get predecessor 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util array list import java util list import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan plan visitor public class cross extend logic relat oper privat static final long serial version privat static log log log factori get log filter class protect boolean nest fals public cross logic plan plan super cross plan public boolean nest return nest public void set nest boolean nest nest nest overrid public logic schema get schema throw frontend except schema calcul return schema null return schema list oper input null input plan get predecessor input null return null list logic schema logic field schema fss new array list logic schema logic field schema oper op input logic schema input schema logic relat oper op get schema schema one input unknown join schema unknown return input schema null schema null return schema int input schema size logic schema logic field schema f input schema get field logic schema logic field schema new null f alia null new new logic schema logic field schema logic relat oper op get alia fs alia f schema f type fs uid els new new logic schema logic field schema fs alia f schema f type fs uid fss add new nest logic relat oper fix duplic uid fss schema new logic schema logic schema logic field schema field schema fss schema add field field schema return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper throw frontend except null instanceof cross return check equal logic relat oper els return fals public list oper get input return plan get predecessor 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan plan visitor public class distinct extend logic relat oper privat static final long serial version privat static log log log factori get log filter class public distinct logic plan plan super distinct plan overrid public logic schema get schema throw frontend except schema null return schema logic relat oper input null input logic relat oper plan get predecessor get schema input get schema return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper throw frontend except null instanceof distinct return check equal logic relat oper els return fals public oper get input logic plan plan return plan get predecessor get 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan plan visitor import org apach newplan logic express logic express plan public class filter extend logic relat oper privat static final long serial version privat logic express plan filter plan privat boolean sampl public filter logic plan plan super filter plan public filter logic plan plan logic express plan filter plan super filter plan filter plan filter plan public filter logic plan plan boolean sampl plan sampl sampl public filter logic plan plan logic express plan filter plan boolean sampl plan filter plan sampl sampl public logic express plan get filter plan return filter plan public void set filter plan logic express plan filter plan filter plan filter plan public boolean sampl return sampl overrid public logic schema get schema throw frontend except schema null return schema logic relat oper input null input logic relat oper plan get predecessor get schema input get schema return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper throw frontend except null instanceof filter filter filter return filter plan equal filter plan check equal els return fals public oper get input logic plan plan return plan get predecessor get 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util array list import java util dequ import java util link list import java util list import org apach impl logic layer frontend except import org apach impl util pair import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan revers depend order walker import org apach newplan logic express project express import org apach newplan logic optim ralat node visitor public class extend logic relat oper privat static final long serial version privat logic plan inner plan public oper plan plan super plan public logic plan get inner plan return inner plan public void set inner plan logic plan p inner plan p overrid public boolean equal oper throw frontend except instanceof return fals return inner plan equal inner plan overrid public logic schema get schema throw frontend except list oper inner plan get sink logic relat oper gener null assum gener sink inner plan dangl nest node remov get schema run dangl nest node remov need make sure get gener oper op op instanceof gener gener logic relat oper op break gener null schema gener get schema return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit find inner load inner plan correspond project also find whether relat oper inner plan along way public static pair list inner load boolean find reacheabl inner load boundari project project express project throw frontend except boolean need new uid fals list inner load inner load new array list inner load logic relat oper refer project find refer dequ oper stack new link list oper stack add refer stack empti oper op stack pop op instanceof inner load inner load add inner load op els op instanceof gener need new uid true list oper op refer get plan get predecessor op op null oper op stack push return new pair list inner load boolean inner load need new uid public logic schema dump nest schema string alia string nest alia throw frontend except nest relat oper finder op finder new nest relat oper finder inner plan nest alia op finder visit op finder get match oper null logic schema nest sc op finder get match oper get schema return nest sc return null privat static class nest relat oper finder extend ralat node visitor string alia oper logic relat oper op find null public nest relat oper finder logic plan plan string alia throw frontend except super plan new revers depend order walker plan alia oper alia public logic relat oper get match oper return op find overrid public void execut logic relat oper op throw frontend except op get alia null op get alia equal alia oper op find op 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util array list import java util list import java util map import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic relat logic schema logic field schema public class gener extend logic relat oper privat list logic express plan output plan privat boolean flatten flag user defin schema origin input user n suppos store uid user defin schema privat list logic schema user defin schema null privat list logic schema output plan schema null privat list logic schema exp schema null gener gener new uid cach happen express plan complet schema howev user give complet schema statement script privat list logic schema uid schema null public gener oper plan plan list logic express plan ps boolean flatten plan output plan ps flatten flag flatten public void set output plan list logic express plan plan output plan plan public gener oper plan plan super gener plan overrid public logic schema get schema throw frontend except schema null return schema uid schema null uid schema new array list logic schema int output plan size uid schema add null schema new logic schema output plan schema new array list logic schema exp schema new array list logic schema int output plan size logic express exp logic express output plan get get sourc get logic schema user defin schema copi null user defin schema null user defin schema get null user defin schema copi new logic schema logic schema logic field schema f user defin schema get get field user defin schema copi add field f deep copi logic field schema field schema null schema express flatten logic schema exp schema null exp get field schema null field schema exp get field schema deep copi exp schema new logic schema field schema type data type field schema type data type field schema type data type flatten flag type primit add schema field schema null exp schema add field field schema els bag tupl map n inner schema flatten n schema entir oper field schema schema null exp schema null els come get tupl map flatten extract inner schema tupl exp schema list logic schema logic field schema inner field schema new array list logic schema logic field schema flatten flag field schema type data type bag get schema tupl field schema schema null field schema schema get field schema null inner field schema field schema schema get field schema get field logic schema logic field schema fs inner field schema fs alia f alia null null field schema alia f alia els field schema type data type contain schemafield map valu inner field schema field schema schema get field logic schema logic field schema fs valu inner field schema get fs valu alia field schema alia valu logic schema logic field schema fs key new logic field schema field schema alia key null data type field schema uid exp schema add field f key els data type inner field schema field schema schema get field logic schema logic field schema fs inner field schema fs alia f alia null null field schema alia f alia logic schema logic field schema fs inner field schema exp schema add field fs els exp schema add field field schema merg user defin schema exp schema null exp schema size exp schema null logic schema plan schema new logic schema exp schema add exp schema user defin schema copi null logic schema merg schema new logic schema merg user defin schema exp schema null use user defin schema logic field schema fs user defin schema copi get field f stamp field schema merg schema add field new logic field schema fs els merg uid exp field schema merg schema logic schema merg user defin schema copi exp schema logic schema merg mode load merg schema null throw new frontend except merg exp schema string fals user defin schema user defin schema copi string fals merg schema merg uid exp schema set null type byte array type merg schema logic field schema fs merg schema get field plan schema add field fs els plan schema whole gener schema exp schema null plan schema null els merg schema plan logic field schema fs exp schema get field plan schema add field f plan schema null schema null break logic field schema fs plan schema get field schema add field fs schema gener user defin schema keep uid exp schema null logic schema uid schema plan schema merg uid uid schema get uid schema set uid schema output plan schema add plan schema schema null schema size schema null output plan schema null return schema public list logic express plan get output plan return output plan public boolean get flatten flag return flatten flag public void set flatten flag boolean flatten flatten flag flatten overrid public boolean equal oper throw frontend except instanceof gener return fals list logic express plan plan gener get output plan boolean f gener get flatten flag output plan size plan size return fals int output plan size flatten flag f return fals output plan get equal plan get return fals return true overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public string string string builder msg new string builder alia null msg append alia msg append name name int flatten flag length msg append flatten flag flatten flag length msg append msg append schema schema null msg append schema els msg append null msg append annot null map entri string object entri annot entri set msg append entri return msg string public list logic schema get user defin schema return user defin schema public void set user defin schema list logic schema user defin schema user defin schema user defin schema get output schema correspond input express plan return list output schema public list logic schema get output plan schema return output plan schema public void set output plan schema list logic schema output plan schema output plan schema output plan schema public list logic schema get uid schema return uid schema public void set uid schema list logic schema uid schema uid schema uid schema overrid public void reset uid uid schema null overrid public void reset schema super reset schema output plan schema null public list logic schema get exp schema return exp schema privat void set null type byte array type logic schema null logic field schema f get field data type schema type f type set null type byte array type f schema els f type data type f type data type 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema logic represent express oper express oper datum type uid uid uniqu id express public abstract class logic express extend oper static long next uid protect logic schema logic field schema field schema protect logic schema logic field schema uid field schema static public long get next uid return next uid use junit test call elsewher static public void reset next uid next uid param name oper param plan logic express plan part public logic express string name oper plan plan super name plan conveni method avoid side effect natur get field schema simpli return whether field schema current null public boolean field schema return field schema null get field schema output express oper mere return field schema variabl schema yet set attempt construct therefor abstract sinc oper need construct field schema differ return field schema throw frontend except abstract public logic schema logic field schema get field schema throw frontend except public void reset field schema field schema null get datum type express return datum type one static byte data type public byte get type throw frontend except get field schema null get field schema type data type return get field schema type return data type public string string string builder msg new string builder msg append name name type field schema null msg append data type find type name field schema type els msg append null msg append uid field schema null msg append field schema uid els msg append null msg append return msg string public void never use real set field schema logic field schema fs throw frontend except field schema fs uid field schema field schema merg uid uid field schema creat deep copi express add pass logic express plan return copi express updat logic express plan param lg exp plan logic express plan express add return logic express logic express plan throw except abstract public logic express deep copi logic express plan lg exp plan throw frontend except eras cach uid regener uid regener schema process current use implicit split insert insert split invalid uid plan public void reset uid uid field schema null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java io except import java io print stream import java util array list import java util hash set import java util iter import java util list import org apach constant import org apach except import org apach backend hadoop datastorag configur util import org apach datum schema tupl backend import org apach impl context import org apach impl impl constant import org apach impl logic layer frontend except import org apach impl plan compil messag collector import org apach impl plan compil messag collector messag type import org apach impl util hash output stream import org apach impl util object serial import org apach newplan base oper plan import org apach newplan oper import org apach newplan oper plan import org apach newplan logic dot printer import org apach newplan logic optim logic plan optim import org apach newplan logic optim logic plan printer import org apach newplan logic optim schema resett import org apach newplan logic optim uid resett import org apach newplan logic visitor cast lineag setter import org apach newplan logic visitor column alia convers visitor import org apach newplan logic visitor dangl nest node remov import org apach newplan logic visitor duplic column rewrit visitor import org apach newplan logic visitor user schema visitor import org apach newplan logic visitor implicit split insert visitor import org apach newplan logic visitor input output file valid visitor import org apach newplan logic visitor scalar variabl valid import org apach newplan logic visitor scalar visitor import org apach newplan logic visitor schema alia visitor import org apach newplan logic visitor sort info setter import org apach newplan logic visitor store alia setter import org apach newplan logic visitor type check rel visitor import org apach newplan logic visitor union schema setter import org apach pen optim disabl import org apach valid black whitelist valid import com googl common base splitter import com googl common collect list import com googl common hash hash function import com googl common hash hash logic plan logic view relat oper execut give script note contain relat oper express contain logic express plan insid relat oper public class logic plan extend base oper plan public logic plan logic plan shallow copi constructor super public logic plan super equal check call equal everi leaf plan assum plan alway connect graph somewhat ineffici sinc everi leaf test equal way everi root intend use test ok check predecessor oppos successor choos split multipl successor depend order output correct wherea join multipl predecessor revers output split graph correct implic wherea revers input join method equal detect predecessor differ order successor differ order return fals either plan non determinist eval func overrid public boolean equal oper plan throw frontend except null instanceof logic plan return fals return super equal overrid public void explain print stream ps string format boolean verbos throw frontend except format equal xml ps println logic plan support logic plan return ps println ps println new logic plan ps println size ps println logic plan empti els format equal dot dot printer lpp new dot printer ps lpp dump els logic plan printer npp new logic plan printer ps npp visit public oper find alia string alia iter oper get oper list oper op new array list oper next logic relat oper op logic relat oper next op get alia null continu op get alia equal alia op add op op empti return null els return op get op size last one return signatur logic plan signatur uniqu identifi give plan gener script script run multipl time version guarante produc signatur even input output locat differ return uniqu identifi logic plan throw frontend except signatur can n comput public string get signatur throw frontend except use stream hash function use murmur function constant seed hash function hf hash murmur hash output stream ho new hash output stream hf print stream ps new print stream ho logic plan printer printer new logic plan printer ps printer visit return integ string ho get hash code int public void valid context context string scope boolean skip input output valid throw frontend except new dangl nest node remov visit new column alia convers visitor visit new schema alia visitor visit new scalar visitor context scope visit new user schema visitor visit implicit split insert visitor call duplic column rewrit visitor detail new implicit split insert visitor visit duplic column rewrit visitor type check rel visitor reset schema get schema heavili new duplic column rewrit visitor visit compil messag collector collector new compil messag collector new type check rel visitor collector visit new union schema setter visit new cast lineag setter collector visit new scalar variabl valid visit new store alia setter visit comput whether output datum sort new sort info setter visit boolean aggreg warn true equal ignor case context get properti get properti aggreg warn aggreg warn compil messag collector log messag collector messag type warn aggreg warn log els enum type messag type valu compil messag collector log messag collector log skip input output valid context explain context dump schema valid input output file new input output file valid visitor context visit black whitelist valid valid new black whitelist valid context valid valid make sure plan consist uid resett uid resett new uid resett uid resett visit schema resett schema resett new schema resett true skip duplic uid check schema resett visit public void optim context context throw frontend except context illustr disabl specif optim optim disabl pod new optim disabl pod visit hash set string disabl optim rule tri disabl optim rule hash set string object serial deseri context get properti get properti impl constant catch except ioe int err code string msg unabl deseri optim rule throw new frontend except msg err code except ioe disabl optim rule null disabl optim rule new hash set string string optim rule disabl context get properti get properti constant optim rule disabl null disabl optim rule add list new array list splitter split optim rule disabl context illustr disabl optim rule add merg disabl optim rule add partit filter optim disabl optim rule add limit optim disabl optim rule add nest limit optim disabl optim rule add split filter disabl optim rule add push filter disabl optim rule add merg filter disabl optim rule add push flatten disabl optim rule add column map key prune disabl optim rule add add disabl optim rule add group const parallel setter tri schema tupl backend initi configur util configur context get properti true context catch except e throw new frontend except e run optim logic plan optim optim new logic plan optim disabl optim rule context optim optim 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach parser import java io except import java math big decim import java math big integ import java net malform except import java util array list import java util hash map import java util iter import java util list import java util map import java util properti import org antlr runtim int stream import org antlr runtim recognit except import org apach exec type import org apach func spec import org apach load func import org apach non load func import org apach configur import org apach store func interfac import org apach backend executionengin exec except import org apach backend hadoop datastorag configur util import org apach builtin assert import org apach builtin cube dimens import org apach builtin invok gener import org apach builtin storag import org apach builtin import org apach builtin rollup dimens import org apach datum bag factori import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl context import org apach impl io file spec import org apach impl logic layer frontend except import org apach impl plan node id gener import org apach impl plan oper key import org apach impl stream stream command import org apach impl stream stream command handl import org apach impl stream stream command handl spec import org apach impl util multi map import org apach impl util string util import org apach newplan oper import org apach newplan oper plan import org apach newplan logic express bin cond express import org apach newplan logic express constant express import org apach newplan logic express null express import org apach newplan logic express less express import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic express express import org apach newplan logic express express import org apach newplan logic express project express import org apach newplan logic express user func express import org apach newplan logic optim schema resett import org apach newplan logic relat cogroup import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat cube import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat join import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat nativ import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat split output import org apach newplan logic relat store import org apach newplan logic relat stream import org apach newplan logic relat union import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema import org apach newplan logic rule optim util import org apach newplan logic visitor proj star udf expand import org apach newplan logic visitor project star expand import org apach newplan logic visitor reset project attach relat op visitor import org apach valid black whitelist filter import org apach valid command filter public class logic plan builder privat logic plan plan new logic plan privat string last rel null privat map string oper oper new hash map string oper overrid public oper put string k oper v last rel k return super put k v map string string file name map privat context context null privat string scope null privat int stream int stream privat int store index privat int load index privat final black whitelist filter filter privat static node id gener node id gen node id gener get gener public static long get next id string scope return node id gen get next node id scope logic plan builder context context string scope map string string file name map int stream input context context scope scope file name map file name map int stream input filter new black whitelist filter context logic plan builder int stream input throw exec except context new context exec type new properti context connect scope test file name map new hash map string string int stream input filter new black whitelist filter context oper lookup oper string alia return oper get alia func spec lookup function string alia return context get func spec alia alia stream command lookup command string alia return context get command alia alia void defin command string alia stream command command tri filter valid command filter command catch frontend except e throw new runtim except e get messag context regist stream cmd alia command void defin function string alia func spec fs tri filter valid command filter command catch frontend except e throw new runtim except e context regist function alia f logic plan get plan return plan map string oper get oper return oper filter creat filter op return new filter plan limit creat limit op return new limit plan filter creat sampl op return new filter plan true string build filter op sourc locat loc filter op string alia string input alia logic express plan expr throw parser valid except op set filter plan expr alia build op loc op alia input alia null actual return alia tri new proj star udf expand op get plan visit op new schema resett op get plan true visit op catch frontend except e throw new parser valid except int stream loc e return alia string build distinct op sourc locat loc string alia string input alia string partition throw parser valid except distinct op new distinct plan return build op loc op alia input alia partition string build limit op sourc locat loc string alia string input alia long limit throw parser valid except limit op new limit plan limit return build op loc op alia input alia null string build limit op sourc locat loc limit op string alia string input alia logic express plan expr throw parser valid except op set limit plan expr return build op loc op alia input alia null string build sampl op sourc locat loc string alia string input alia doubl valu sourc locat val loc throw parser valid except logic express plan filter plan new logic express plan gener filter condit logic express konst new constant express filter plan valu konst set locat val loc user func express udf new user func express filter plan new func spec class get name new less express filter plan udf konst filter filter new filter plan true return build filter op loc filter alia input alia filter plan string build sampl op sourc locat loc filter filter string alia string input alia logic express plan sampl plan logic express expr throw parser valid except user func express udf new user func express sampl plan new func spec class get name new less express sampl plan udf expr return build filter op loc filter alia input alia sampl plan string build union op sourc locat loc string alia list string input alia boolean schema throw parser valid except check duplic alia input alias loc union op new union plan schema return build op loc op alia input alias null string build split op sourc locat loc string input alia throw parser valid except split op new split plan return build op loc op null input alia null split output creat split output op return new split output plan string build split output op sourc locat loc split output op string alia string input alia logic express plan filter plan throw parser valid except op set filter plan filter plan return build op loc op alia input alia null string build split otherwis op sourc locat loc split output op string alia string input alia boolean allow null throw parser valid except plan gener failur except logic express plan split plan new logic express plan oper losplit lookup oper input alia logic express current expr null oper losplitoutput plan get successor losplit take split output negat filter plan logic express plan fragment split output losplitoutput get filter plan tri optim util plan non determinist udf fragment throw new parser valid except int stream loc new frontend except op use otherwis split express contain nondeterminist catch frontend except e e print stack trace throw new plan gener failur except int stream loc e logic express root null tri get root express filter plan split output copi root logic express fragment get sourc get deep copi split plan catch frontend except e e print stack trace throw new plan gener failur except int stream loc e root null throw new plan gener failur except int stream loc new frontend except op could retriev logic express split output losplitoutput current expr null current expr root els current expr new express split plan current expr root use de morgan law current expr new express split plan current expr allow null add null express condit e need catch null valu otherwis branch logic express null new null express split plan current expr current expr new express split plan null current expr tri go project express clone updat attach oper origin split output otherwis split output new reset project attach relat op visitor split plan op visit catch frontend except e e print stack trace throw new plan gener failur except int stream loc e op set filter plan split plan return build op loc op alia input alia null string build cross op sourc locat loc string alia list string input alias string partition throw parser valid except cross op new cross plan return build op loc op alia input alia partition sort creat sort op return new sort plan string build sort op sourc locat loc sort sort string alia string input alia list logic express plan plan list boolean asc flag func spec fs throw parser valid except sort set sort col plan plan sort set user func f asc flag empti int plan size asc flag add true sort set ascend col asc flag alia build op loc sort alia input alia null tri new project star expand sort get plan visit sort new proj star udf expand sort get plan visit sort new schema resett sort get plan true visit sort catch frontend except e throw new parser valid except int stream loc e return alia rank creat rank op return new rank plan string build rank op sourc locat loc rank rank string alia string input alia list logic express plan plan list boolean asc flag throw parser valid except rank rank set rank col plan plan asc flag empti int plan size asc flag add true rank set ascend col asc flag build op loc rank alia input alia null tri new project star expand rank get plan visit rank new proj star udf expand rank get plan visit rank new schema resett rank get plan true visit rank catch frontend except e throw new parser valid except int stream loc e return alia join creat join op return new join plan string build join op sourc locat loc join op string alia list string input alias multi map integ logic express plan join plan jt list boolean inner flag string partition throw parser valid except check duplic alias input alia loc jt null jt els op pin option join int input count input alia size jt partition null throw new parser valid except int stream loc custom partition support skew join input count throw new parser valid except int stream loc skew join appli way join els jt jt input count throw new parser valid except int stream loc merg join appli way join els jt inner flag size inner flag get fals throw new parser valid except int stream loc replic join support right full outer join boolean flag new boolean join plan size inner flag size int join plan size flag inner flag get els int join plan size flag true op set join type jt op set inner flag flag op set join plan join plan alia build op loc op alia input alias partition tri new project star expand op get plan visit op new proj star udf expand op get plan visit op new schema resett op get plan true visit op catch frontend except e throw new parser valid except int stream loc e return alia cube creat cube op return new cube plan string build cube op sourc locat loc cube op string alia string input alia list string oper multi map integ logic express plan express plan throw parser valid except check continu occur cube oper combin combin cube oper array list string oper express plan set express plan cube oper build cube oper op set express plan express plan op set oper oper build op loc op alia input alia null tri new project star expand op get plan visit op new proj star udf expand op get plan visit op new schema resett op get plan true visit op catch frontend except e throw new parser valid except int stream loc e tri alia convert cube plan loc op input alia oper express plan catch frontend except e throw new parser valid except int stream loc e return alia multipl oper occur continu combin togeth rel b c rel b c privat void combin cube oper array list string oper multi map integ logic express plan express plan int start idx int end idx int boolean merg fals scan perform merg column project oper size start idx oper get equal true start idx els oper get equal true end idx els end idx start idx merg mark delet oper express plan start idx end idx merg true start idx end idx els start idx end idx check requir case sequenc oper occur end like case end idx great start idx end idx start idx merg true merg mark delet oper express plan start idx end idx merg remov column project mark delet merg perform delet express plan oper privat void perform delet multi map integ logic express plan express plan array list string oper multi map integ logic express plan ep new multi map integ logic express plan list string op new array list string int idx rearrang index int oper size oper get null op add idx oper get express plan get null ep put idx express plan get idx perform delet oper clear oper add op express plan clear integ ep key set express plan put ep get perform merg dimens merg cube oper ex b c b c exampl oper dimens merg privat void merg mark delet array list string oper multi map integ logic express plan express plan int start idx int end idx mark delet int start idx end idx express plan put start idx express plan get express plan remov key oper remov oper add null function creat logic plan foreach groupbi oper connect predecessor cube oper foreach plan disconnect cube oper logic plan also connect foreach plan groupbi plan privat string convert cube plan sourc locat loc cube op string input alia list string oper multi map integ logic express plan express plan throw frontend except foreach new plan cogroup groupbi new cogroup plan logic plan inner plan new logic plan logic relat oper gen new gener inner plan inject foreach oper loc op foreach get column attribut input relat creat project express column base dimens specifi user specifi column attach cube dimens rollup dimens rest push list oper inp oper foreach get plan get predecessor foreach list logic express plan expr plan new array list logic express plan oper oper inp oper logic schema schema new logic schema schema logic relat oper oper get schema schema null array list logic field schema field array list logic field schema schema get field int field size logic express plan l eplan new logic express plan new project express l eplan field get alia null gen expr plan add l eplan iter oper gener correspond fs int oper idx oper idx oper size oper idx list logic express plan lexp plan list new array list logic express plan list logic express lexp list new array list logic express lexp plan list add express plan get oper idx duplic exist dimens list except throw check duplic project lexp plan list construct project express logic express plan lexp list get project exp list lexp plan list gen int lexp list size retain column need push remov dimens column input column list attach cube dimens int j j expr plan size j logic express lexp logic express expr plan get j get sourc get string col alia project express lexp list get get col alia col alia null col alia project express lexp list get get field schema alia string proj exp alia null tri proj exp alia project express lexp get col alia catch class cast except e project user func expr ignor continu till next proj expr encount continu col alia equal proj exp alia true expr plan remov j els project exp alia namespac alia proj exp alia last index proj exp alia proj exp alia substr proj exp alia last index proj exp alia length col alia equal proj exp alia true expr plan remov j creat user specifi dimens logic express plan uexp plan new logic express plan oper get oper idx equal new user func express uexp plan new func spec cube dimens class get name lexp list els new user func express uexp plan new func spec rollup dimens class get name lexp list logic express plan lexp lexp plan list iter oper lexp get oper next uexp plan add next add logic express plan contain depend attribut push input column expr plan add oper idx uexp plan oper user func express set flatten flag list boolean flatten flag new array list boolean int idx idx expr plan size idx list oper oper expr plan get idx get sourc oper oper oper oper instanceof project express flatten flag add fals els oper instanceof user func express flatten flag add true gener foreach oper creation string falia null tri build gener op loc foreach gener gen expr plan flatten flag get user defin schema expr plan falia build foreach op loc foreach cube input alia inner plan catch parser valid except pve throw new frontend except pve list boolean inner flag new array list boolean list string inp alias new array list string inp alias add falia inner flag add fals get output schema foreach oper reconstruct logic express plan dimension attribut multi map integ logic express plan expr plan copi new multi map integ logic express plan logic express plan exp express plan valu logic express lexp logic express exp get sourc get logic express plan ep grp new logic express plan new project express ep grp lexp get field schema alia null groupbi expr plan copi put ep grp build group oper tri return build group op loc cogroup groupbi op get alia inp alias expr plan copi inner flag null catch parser valid except pve throw new frontend except pve user defin schema gener oper specifi output schema use prefix dimens namespac field privat list logic schema get user defin schema list logic express plan expr plan throw frontend except list logic schema gen output schema new array list logic schema int expr plan size list oper oper expr plan get get sourc oper oper oper add logic schema dimens push predecessor cube rollup oper instanceof project express logic schema output new logic schema output add field new logic field schema project express oper get col alia null data type gen output schema add output els oper instanceof user func express add logic schema dimens specifi cube rollup oper logic schema output new logic schema oper op user func express oper get plan get sink output add field new logic field schema project express op get field schema gen output schema add output return gen output schema privat list logic express get project exp list list logic express plan lexp plan list logic relat oper lro throw frontend except list logic express le list new array list logic express int lexp plan list size logic express plan lexp lexp plan list get logic express lex logic express lexp get sourc get iter oper oper lexp get oper proj expr initi attach cube op attach specifi oper oper next oper oper oper next tri project express oper set attach relat op lro catch class cast except cce throw new frontend except column project expect cce le list add lex return le list method connect predecessor cube oper foreach oper disconnect cube oper predecessor privat void inject foreach oper sourc locat loc cube op foreach throw frontend except connect foreach oper predecessor cube oper list oper oper op get plan get predecessor op oper oper oper oper plan foreach plan foreach get plan foreach plan connect oper oper foreach disconnect cube oper plan oper foreach get plan get predecessor foreach oper lop oper list oper succ lop get plan get successor lop oper succ succ succ instanceof cube succ get plan disconnect lop succ succ get plan remov succ method dimens specifi user duplic privat void check duplic project list logic express plan l expr plan throw frontend except int l expr plan size int j j l expr plan size j logic express outer logic express l expr plan get get sourc get logic express inner logic express l expr plan get j get sourc get string col alia project express outer get col alia string col alia project express inner get col alia col alia null col alia outer get field schema alia col alia null col alia inner get field schema alia col alia equal col alia true l expr plan remov j throw new frontend except duplic dimens detect dimens name col alia cogroup creat group op return new cogroup plan string build group op sourc locat loc cogroup op string alia list string input alias multi map integ logic express plan express plan gt list boolean inner flag string partition throw parser valid except gt input alia size throw new parser valid except int stream loc collect group support singl input list logic express plan expr plan express plan get logic express plan expr plan expr plan iter oper expr plan get oper next next instanceof project express throw new parser valid except int stream loc collect group support column star project boolean flag new boolean inner flag size int inner flag size flag inner flag get op set express plan express plan op set group type gt op set inner flag flag alia build op loc op alia input alias partition tri new project star expand op get plan visit op new proj star udf expand op get plan visit op new schema resett op get plan true visit op catch frontend except e throw new parser valid except int stream loc e return alia string build load op sourc locat loc string alia string filenam func spec func spec logic schema schema throw parser valid except string absolut path load func lo func tri load load func class default properti func spec null fallback storag load func specifi properti func spec func spec null new func spec context get properti get properti configur storag class get name func spec lo func load func context instanti func spec func spec string file name key queri parser util construct file name signatur filenam func spec load index absolut path file name map get file name key absolut path null absolut path lo func rel absolut path filenam queri parser util get current dir context absolut path null lo func instanceof non load func queri parser util set hdf server absolut path context file name map put file name key absolut path catch except ex throw new parser valid except int stream loc ex file spec loader new file spec absolut path func spec load op new load loader schema plan configur util configur context get properti lo func alia new oper key op set tmp load fals check store plan alreadi load depend add input alia list string input alias new array list string get list store store sink plan alreadi get successor iter oper itr plan get oper list store store new array list store itr next oper lop itr next lop instanceof store store add store lop store store store string ifil op get file spec get file name string ofil store get file spec get file name ofil equal ifil input alia add store get alia return build op loc op alia input alias null privat string build op sourc locat loc logic relat oper op string alia string input alia string partition throw parser valid except list string input alias new array list string input alia null input alia add input alia return build op loc op alia input alia partition privat void check duplic alia list string input alias sourc locat loc string op name throw parser valid except keep count number time alia use map oper integ input alias map new hash map oper integ string input alias oper pred oper get pred null throw new parser valid except int stream loc unrecogn alia input alia map contain key pred throw new parser valid except int stream loc accept alia input op name oper els input alias map put pred privat string build op sourc locat loc logic relat oper op string alia list string input alias string partition throw parser valid except set alia op alia set partition op partition op set locat loc plan add op string input alias oper pred oper get pred null throw new parser valid except int stream loc unrecogn alia plan connect pred op oper put op get alia op context set last alia op get alia return op get alia string build store op sourc locat loc string alia string input alia string filenam func spec func spec throw parser valid except tri load store func class default properti func spec null fallback storag store func specifi properti func spec func spec null new func spec context get properti get properti configur storag class get name func spec store func interfac sto func store func interfac context instanti func spec func spec string file name key input alia store index string signatur input alia new oper key sto func set store func context signatur signatur string absolut path file name map get file name key absolut path null absolut path sto func rel ab path store locat filenam queri parser util get current dir context absolut path null queri parser util set hdf server absolut path context file name map put file name key absolut path file spec file spec new file spec absolut path func spec boolean disambigu enabl boolean pars boolean context get properti get properti configur configur store op new store plan file spec sto func signatur disambigu enabl return build op loc op alia input alia null catch except ex throw new parser valid except int stream loc ex string build assert op sourc locat loc filter filter op string alia string input alia logic express expr string comment logic express plan expr plan throw parser valid except tri filter op set alia input alia list logic express arg new array list logic express constant express lh new constant express expr plan new boolean true constant express rh new constant express expr plan new boolean fals bin cond express bin cond new bin cond express expr plan expr lh rh arg add bin cond constant express const expr new constant express expr plan comment null comment arg add const expr user func express udf new user func express expr plan new func spec assert class get name arg expr plan add udf filter op set filter plan expr plan pass input alia alia return build filter op loc filter op input alia input alia expr plan catch except ex throw new parser valid except int stream loc ex privat string new oper key return new oper key scope get next id string public static string new oper key string scope return new oper key scope get next id scope string creat foreach op return new plan string build foreach op sourc locat loc op string alia string input alia logic plan inner plan throw parser valid except op set inner plan inner plan alia build op loc op alia input alia null tri new project star expand op get plan visit op new proj star udf expand op get plan visit op new schema resett op get plan true visit op catch frontend except e throw new parser valid except int stream loc e return alia gener creat gener op logic plan plan return new gener plan void build gener op sourc locat loc foreach gener gen list logic express plan expr plan list boolean flatten flag list logic schema schema throw parser valid except boolean flag new boolean flatten flag size int flatten flag size flag flatten flag get logic plan inner plan logic plan gen get plan array list oper input new array list oper int idx logic express plan expr plan expr plan logic express expr logic express expr plan get sourc get logic schema user schema schema get idx user schema null expr field schema logic schema ls new logic schema tri l add field expr get field schema schema set idx l catch frontend except e get except schema set idx tri process express plan foreach inner plan expr plan input catch frontend except e throw new parser valid except int stream loc e gen set output plan expr plan gen set flatten flag flag gen set user defin schema schema inner plan add gen gen set locat loc oper input input inner plan connect input gen process express plan gener set input relat project express param foreach param lp logic plan gener param plan one output express gener param input input gener throw frontend except privat static void process express plan foreach logic plan lp logic express plan plan array list oper input throw frontend except iter oper plan get oper next oper sink next check project express sink instanceof project express project express proj expr project express sink string col alia proj expr get col alia proj expr rang project inner load inner load new inner load lp foreach new project express proj expr new logic express plan setup inner load proj inner load proj expr lp input els col alia null project use column alia oper op proj expr get project oper op null mean project express refer relat nest foreach add relat input gener set project input int index input index op index index input size input add op proj expr set input num index proj expr set col num els mean project express refer column input foreach add inner load use input inner load inner load new inner load lp foreach col alia setup inner load proj inner load proj expr lp input els project express refer column input use posit eg inner load inner load new inner load lp foreach proj expr get col num setup inner load proj inner load proj expr lp input privat static void setup inner load proj inner load inner load project express proj expr logic plan lp array list oper input inner load set locat proj expr get locat proj expr set input num input size proj expr set col num project express inner load alway lp add inner load input add inner load oper build nest oper input sourc locat loc logic plan inner plan foreach map string oper oper logic express expr throw non project express except parser valid except oper plan plan expr get plan iter oper plan get oper next instanceof project express next throw new non project express except int stream loc expr oper op null project express proj expr project express expr string col alia proj expr get col alia col alia null op oper get col alia op null op creat inner load loc inner plan foreach col alia op set locat proj expr get locat inner plan add op els op new inner load inner plan foreach proj expr get col num op set locat proj expr get locat inner plan add op return op privat inner load creat inner load sourc locat loc logic plan inner plan foreach string col alia throw parser valid except tri return new inner load inner plan foreach col alia catch frontend except e throw new parser valid except int stream loc e stream command build command sourc locat loc string cmd list string ship path list string cach path list handl spec input handl spec list handl spec output handl spec string log dir integ limit throw recognit except stream command command null tri command build command loc cmd process ship path ship path null ship path size command set ship file fals els string path ship path command add path ship path process cach path cach path null string path cach path command add path cach path process input handl spec input handl spec null handl spec spec input handl spec command add handl spec handl spec process output handl spec output handl spec null handl spec spec output handl spec command add handl spec handl spec error handl log dir null command set log dir log dir limit null command set log file limit limit catch except e throw new plan gener failur except int stream loc e return command stream command build command sourc locat loc string cmd throw recognit except tri string arg stream command util split arg cmd stream command command new stream command context arg stream command util valid new stream command util context valid check auto ship spec command arg return command catch parser except e throw new invalid command except int stream loc cmd string build stream op sourc locat loc string alia string input alia stream command command logic schema schema int stream input throw recognit except tri stream op new stream plan context creat execut manag command schema return build op loc op alia input alia null catch exec except ex throw new plan gener failur except input loc ex string build nativ op sourc locat loc string input jar string cmd list string path string store alia string load alia int stream input throw recognit except nativ op tri op new nativ plan input jar stream command util split arg cmd context add jar input jar string path path context add jar path build op loc op null new array list string null store oper get store alia set tmp store true plan connect oper get store alia op load load load oper get load alia plan connect op load return load get alia catch parser except e throw new invalid command except input loc cmd catch malform except e throw new invalid path except input loc e void set alia logic relat oper op string alia alia null alia new oper key op set alia alia void set parallel logic relat oper op integ parallel parallel null op set request parallel parallel static void set partition logic relat oper op string partition partition null op set custom partition partition func spec build func spec sourc locat loc string func name list string arg byte ft throw recognit except string arg array new string arg size func spec func spec new func spec func name arg size null arg array arg array valid func spec loc func spec ft return func spec privat void valid func spec sourc locat loc func spec func spec byte ft throw recognit except switch ft case function type case function type case function type case function type case function type tri class func context resolv class name func spec get class name function type tri cast func ft catch except ex throw new parser valid except int stream loc ex static string unquot string return string util unescap input string substr length static int undollar string return integ pars int substr length pars long give string static long pars long string string num substr length return long pars long num pars big integ format string e g big integ object static big integ pars big integ string string num substr length return new big integ num pars big decim format string e g big decim object static big decim pars big decim string string num substr length return new big decim num static tupl build tupl list object obj list tupl factori tf tupl factori get instanc return tf new tupl obj list static datum bag creat datum bag bag factori bag factori bag factori get instanc return bag factori new default bag build project express foreach inner plan differ project express alia return whatev express alia repres throw recognit except logic express build project expr sourc locat loc logic express plan plan logic relat oper op map string oper oper map string logic express plan expr plan string col alia int col throw recognit except project express result null col alia null logic express plan expr plan expr plan get col alia expr plan null logic express plan plan copi null tri plan copi expr plan deep copi plan merg plan copi catch frontend except ex throw new plan gener failur except int stream loc ex project alia actual express alia project repres express n oper associ need set substitut express alia express op null iter oper plan get oper next oper next instanceof project express project express proj expr project express proj expr set attach relat op op logic express root logic express plan copi get sourc get get root plan logic field schema schema tri schema root get field schema schema alia null schema alia col alia catch frontend except e sometim throw except schema get return root els result new project express plan col alia oper get col alia op result set locat loc return result result new project express plan col op result set locat loc return result build project express project present global plan nest foreach plan throw parser valid except logic express build project expr sourc locat loc logic express plan plan logic relat oper rel op int input string col alia int col throw parser valid except project express result null result col alia null new project express plan input col alia null rel op new project express plan input col rel op result set locat loc return result build project express project rang column param loc param plan param rel op param input param start expr first express project null everyth first project param end expr last express project null everyth end project return project express throw parser valid except logic express build rang project expr sourc locat loc logic express plan plan logic relat oper rel op int input logic express start expr logic express end expr throw parser valid except start expr null end expr null reach parser enforc condit string msg rang project least one start end specifi use project star instead throw new parser valid except int stream loc msg project express proj new project express plan input rel op set first column project start expr null check rang project expr loc start expr project express start proj project express start expr start proj get col alia null tri proj set start alia start proj get col alia catch frontend except e throw new parser valid except int stream loc e els proj set start col start proj get col num els proj set start col project first column set last column project end expr null check rang project expr loc end expr project express end proj project express end expr end proj get col alia null tri proj set end alia end proj get col alia catch frontend except e throw new parser valid except int stream loc e els proj set end col end proj get col num els proj set end col project last column tri start expr null plan remov reconnect start expr end expr null plan remov reconnect end expr catch frontend except e throw new parser valid except int stream loc e return proj privat void check rang project expr sourc locat loc logic express start expr throw parser valid except start expr instanceof project express reach parser enforc condit string msg rang project simpl column find start expr throw new parser valid except int stream loc msg logic express build invok sourc locat loc logic express plan plan string packag name string func name boolean static list logic express arg throw recognit except logic express le new user func express plan new func spec invok gener class get name arg fals true static packag name func name le set locat loc return le public static class type class class clazz clazz integ return integ class els clazz long return long class els clazz float return long class els clazz doubl return long class els clazz boolean return long class els clazz short return short class els clazz byte return byte class els clazz charact return charact class els throw new runtim except give primit class clazz logic express build sourc locat loc logic express plan plan string func name list logic express arg throw recognit except class func tri func context get class alia func name function type tri cast func function type catch except e throw new plan gener failur except int stream loc e func spec func spec context get func spec alia func name logic express le func spec null func name func get name func spec new func spec func name point reach statement func name case pass inform along le new user func express plan func spec arg fals els le new user func express plan func spec arg true le set locat loc return le privat long get next id return get next id scope static filter creat nest filter op logic plan plan return new filter plan static limit creat nest limit op logic plan plan return new limit plan build oper foreach inner plan oper build nest filter op sourc locat loc filter op logic plan plan string alia oper input op logic express plan expr op set filter plan expr build nest op loc plan op alia input op return op oper build nest distinct op sourc locat loc logic plan plan string alia oper input op distinct op new distinct plan build nest op loc plan op alia input op return op oper build nest limit op sourc locat loc logic plan plan string alia oper input op long limit limit op new limit plan limit build nest op loc plan op alia input op return op oper build nest limit op sourc locat loc limit op logic plan plan string alia oper input op logic express plan expr op set limit plan expr build nest op loc plan op alia input op return op oper build nest cross op sourc locat loc logic plan plan string alia list oper input op list cross op new cross plan op set nest true build nest op loc plan op alia input op list return op privat void build nest op sourc locat loc logic plan plan logic relat oper op string alia oper input op op set locat loc set alia op alia plan add op plan connect input op op privat void build nest op sourc locat loc logic plan plan logic relat oper op string alia list oper input op list op set locat loc set alia op alia plan add op oper input op input op list plan connect input op op static sort creat nest sort op logic plan plan return new sort plan type schema field set type param sch static void set bytearray type logic schema sch logic field schema f sch get field fs type data type f type data type f schema null set bytearray type f schema static creat nest foreach op logic plan plan return new plan oper build nest sort op sourc locat loc sort op logic plan plan string alia oper input op list logic express plan plan list boolean asc flag func spec f op set sort col plan plan asc flag empti int plan size asc flag add true op set ascend col asc flag op set user func f build nest op loc plan op alia input op return op oper build nest foreach op sourc locat loc op logic plan plan string alia oper input op logic plan inner plan throw parser valid except op set inner plan inner plan build nest op loc plan op alia input op return op oper build nest project op sourc locat loc logic plan inner plan foreach map string oper oper string alia project express proj expr list logic express plan expr plan throw parser valid except oper input null string col alia proj expr get col alia col alia null proj expr refer name alia anoth oper col name oper op oper get col alia op null proj expr refer oper alia input op els assum proj expr refer column name creat inner load input creat inner load loc inner plan foreach col alia input set locat proj expr get locat els proj expr refer column number input new inner load inner plan foreach proj expr get col num input set locat proj expr get locat logic plan lp new logic plan f inner plan f new inner plan f set inner plan lp f set locat loc gener gen new gener lp boolean flatten new boolean expr plan size list oper inner load new array list oper expr plan size logic express plan plan expr plan project express pe project express plan get sink get string al pe get col alia inner load iload al null new inner load lp f pe get col num creat inner load loc lp f al iload set locat pe get locat pe set col num pe set input num inner load size pe set attach relat op gen inner load add iload gen set output plan expr plan gen set flatten flag flatten lp add gen oper il inner load lp add il lp connect il gen connect inner load oper gen set alia f alia inner plan add input inner plan add f inner plan connect input f return f pars group type string hint sourc locat loc throw parser valid except string modifi unquot hint modifi equal ignor case collect return els modifi equal ignor case regular return els modifi equal ignor case merg return els throw new parser valid except int stream loc valid modifi pars join type string hint sourc locat loc throw parser valid except string modifi unquot hint modifi equal ignor case repl modifi equal ignor case replic return els modifi equal ignor case hash modifi equal ignor case default return join els modifi equal ignor case bloom return join els modifi equal ignor case skew ed return els modifi equal ignor case merg return els modifi equal ignor case merg spars return els throw new parser valid except int stream loc vaild modifi void put oper string alia oper op oper put alia op public string get last rel sourc locat loc throw parser valid except last rel null throw new parser valid except int stream loc ask last relat relat defin return last rel public string get last rel return last rel 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic optim import java util array list import java util hash set import java util list import java util set import com googl common base precondit import com googl common collect set multimap import com googl common collect tree multimap import org apach common log log import org apach common log log factori import org apach impl context import org apach newplan oper plan import org apach newplan logic rule add import org apach newplan logic rule column map key prune import org apach newplan logic rule filter foreach import org apach newplan logic rule filter constant calcul import org apach newplan logic rule constant calcul import org apach newplan logic rule group const parallel setter import org apach newplan logic rule limit optim import org apach newplan logic rule load type cast insert import org apach newplan logic rule merg filter import org apach newplan logic rule merg import org apach newplan logic rule nest limit optim import org apach newplan logic rule partit filter optim import org apach newplan logic rule predic pushdown optim import org apach newplan logic rule push flatten import org apach newplan logic rule push filter import org apach newplan logic rule split filter import org apach newplan logic rule stream type cast insert import org apach newplan optim plan optim import org apach newplan optim rule public class logic plan optim extend plan optim privat static final log log factori get log logic plan optim class privat static enum rule report key privat set string rule null privat boolean rule disabl fals privat set multimap rule report key string rule report tree multimap creat privat context pc null public logic plan optim oper plan p int iter set string turn rule p iter turn rule null creat new logic plan optim param p plan optim param iter maximum number optim iter param turn rule optim rule disabl disabl non mandatori rule null enabl rule param pc context object public logic plan optim oper plan p int iter set string turn rule context pc super p null iter pc pc rule turn rule null new hash set string turn rule rule contain rule disabl true rule set build rule set info rule report add listen protect list set rule build rule set list set rule ls new array list set rule logic express simplifi set rule new hash set rule add constant calcul rule rule be new filter constant calcul constant calcul pc check add rule r l add be new constant calcul constant calcul pc check add rule r l add type cast insert set set rule insert foreach dedic cast load new hash set rule add split filter rule be new load type cast insert load type cast insert check add rule r be new stream type cast insert stream type cast insert check add rule r empti l add split set set rule split oper move oper new hash set rule add split filter rule be new split filter split filter check add rule r empti l add push set set move oper new hash set rule be new push filter push filter check add rule r be new filter foreach push filter check add rule r empti l add merg set set merg oper move new hash set rule check add rule r add merg filter rule be new merg filter merg filter check add rule r empti l add partit filter set set rule push partit filter load func new hash set rule optim partit filter be new partit filter optim partit filter optim check add rule r empti l add predic pushdown set set rule push filter condit load func new hash set rule optim partit filter be new predic pushdown optim predic pushdown optim check add rule r empti l add push flatten set new hash set rule add push flatten be new push flatten push flatten check add rule r empti l add prune set set use prune column map new hash set rule add prune map filter be new column map key prune column map key prune check add rule r empti l add add set new hash set rule add add be new add add check add rule r empti l add add merg set new hash set rule add add be new merg merg check add rule r empti l add set paral cogroup group constant new hash set rule be new group const parallel setter group const parallel setter check add rule r empti l add limit set set rule push limit new hash set rule optim limit be new limit optim limit optim check add rule r empti l add nest limit set set rule push nest limit new hash set rule optim limit be new nest limit optim nest limit optim check add rule r empti l add return l add rule rule set mandatori disabl param rule set set rule add disabl param rule rule potenti add privat void check add rule set rule rule set rule rule precondit check argument rule set null precondit check argument rule null rule get name null rule mandatori rule set add rule rule report put rule report key rule get name els rule disabl rule contain rule get name rule set add rule rule report put rule report key rule get name els rule report put rule report key rule get name privat void add listen add plan transform listen new schema patcher add plan transform listen new project patcher 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic optim import java io except import java io print stream import java util array list import java util list import org apach impl logic layer frontend except import org apach impl plan visitor except import org apach impl util multi map import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic express logic express plan import org apach newplan logic relat cogroup import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split output import org apach newplan logic relat logic plan visitor mechan print logic plan public class logic plan printer extend plan visitor privat print stream stream null privat byte get byte privat byte get byte privat byte bar n get byte privat byte sep get byte privat byte sep n get byte static public string protect array list byte tab protect boolean revers fals param ps print stream output plan inform param plan logic plan print public logic plan printer oper plan plan print stream ps throw frontend except plan ps new array list byte privat logic plan printer oper plan plan print stream ps array list byte tab throw frontend except super plan null stream ps tab tab plan instanceof logic plan revers fals els revers true overrid public void visit throw frontend except tri depth first catch except e throw new frontend except e protect void depth first throw frontend except except list oper leav revers leaf plan get sourc els leav plan get sink oper leaf leaf write tab leaf string n get byte depth first leaf privat void write tab byte datum throw except byte tab tab stream write tab stream write datum privat void depth first oper node throw frontend except except print node plan node list oper oper revers oper plan get successor node els oper plan get predecessor node oper null return list oper predecessor new array list oper oper int oper pred predecessor write tab bar write tab sep stream write pred string n get byte predecessor size tab add els tab add depth first pred tab remov tab size privat void print plan oper plan lp throw visitor except except write tab sep tab add lp null logic plan printer printer new logic plan printer lp stream tab printer visit tab remov tab size privat void print node plan oper node throw frontend except except node instanceof filter print plan filter node get filter plan els node instanceof limit print plan limit node get limit plan els node instanceof print plan node get inner plan els node instanceof cogroup multi map integ logic express plan plan cogroup node get express plan int plan key set visit associ plan oper plan plan plan get print plan plan els node instanceof join multi map integ logic express plan plan join node get express plan int plan key set visit associ plan oper plan plan plan get print plan plan els node instanceof rank visit field rank oper plan plan rank node get rank col plan print plan plan els node instanceof sort oper plan plan sort node get sort col plan print plan plan els node instanceof split output print plan split output node get filter plan els node instanceof gener oper plan plan gener node get output plan print plan plan 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util iter import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan plan walker visitor logic plan public abstract class logic relat node visitor extend plan visitor protect logic relat node visitor oper plan plan plan walker walker throw frontend except super plan walker iter oper iter plan get oper iter next iter next instanceof logic relat oper throw new frontend except logic plan visitor visit logic plan public void visit load load throw frontend except public void visit filter filter throw frontend except public void visit store store throw frontend except public void visit join join throw frontend except public void visit foreach throw frontend except public void visit gener gen throw frontend except public void visit inner load load throw frontend except public void visit cube cube throw frontend except public void visit cogroup lo cogroup throw frontend except public void visit split lo split throw frontend except public void visit split output lo split output throw frontend except public void visit union lo union throw frontend except public void visit sort lo sort throw frontend except public void visit rank lo rank throw frontend except public void visit distinct lo distinct throw frontend except public void visit limit lo limit throw frontend except public void visit cross lo cross throw frontend except public void visit stream lo stream throw frontend except public void visit nativ nativ throw frontend except 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util hash set import java util list import java util map import java util set import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan logic express logic express import org apach newplan logic relat logic schema logic field schema import com googl common collect set logic represent relat oper relat oper schema abstract public class logic relat oper extend oper protect logic schema schema protect int request parallel protect string alia protect int line num name custom partition one use set null otherwis protect string custom partition null hash set indic whether option join type pin user choos runtim optim protect hash set integ pin option new hash set integ param name oper param plan oper public logic relat oper string name oper plan plan name plan param name oper param plan oper param rp request parallel public logic relat oper string name oper plan plan int rp super name plan request parallel rp get schema output relat oper mere return schema variabl schema yet set attempt construct therefor abstract sinc oper need construct schema differ return schema throw frontend except abstract public logic schema get schema throw frontend except public void set schema logic schema schema schema schema reset schema null next time get schema call schema regener scratch public void reset schema schema null eras cach uid regener uid regener schema process current use implicit split insert insert split invalid uid plan public void reset uid get request parallel oper return request parallelsim public int get request parallel return request parallel get alia oper latin oper sort alia store split alia store split note alia guarante uniqu singl oper return alia public string get alia return alia public void set alia string alia alia alia public void set request parallel int parallel request parallel parallel get line number submit latin script oper occur return line number public int get line number return line num use unit test back door cheat set schema without calcul never call product code test param schema set public void never use real set schema logic schema schema schema schema basic equal check two relat oper equal defin equal schema predecessor equal intend use oper equal method param logic relat oper compar predecessor return true equal method node predecessor return true invok predecessor throw frontend except protect boolean check equal logic relat oper throw frontend except null return fals logic schema get schema logic schema os get schema null os null intent blank els null os null one null one n return fals els equal os return fals return true public string string string builder msg new string builder alia null msg append alia msg append name get name schema schema null msg append schema els msg append null msg append annot null map entri string object entri annot entri set msg append entri return msg string public string get custom partition return custom partition public void set custom partition string custom partition custom partition custom partition public void pin option integ opt pin option add opt public boolean pin option integ opt return pin option contain opt privat static void add field schema uid set set long uid logic field schema lf uid add lf uid lf uid logic express get next uid logic schema ls lf schema l null logic field schema lf l get field add field schema uid set uid lf case oper manipualt column foreach join possibl multipl column deriv column thu duplic detect case reset uid see inform param fss list logic field schema check uid public static void fix duplic uid list logic field schema fss set long uid set new hash set logic field schema lf fss logic relat oper add field schema uid set uid lf 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util array list import java util hash set import java util iter import java util list import org apach except import org apach datum data type import org apach impl logic layer frontend except import org apach newplan logic express logic express schema logic perspect public class logic schema public static class logic field schema public string alia public byte type public long uid public logic schema schema public logic field schema string alia logic schema schema byte type alia schema type public logic field schema logic field schema fs fs alia f schema f type f uid public logic field schema string alia logic schema schema byte type long uid alia alia type type schema schema uid uid equal defin type either schema null schema alia uid check public boolean equal object return equal fals equal defin type either schema null schema compar alia argument set true alia also compar param param compar alia return true equal public boolean equal object boolean compar alia instanceof logic field schema logic field schema of logic field schema compar alia alia null alia equal of alia return fals type of type return fals schema null of schema null return true schema null return fals els return schema equal of schema compar alia els return fals public string string boolean verbos string uid string verbos uid string uid string alia print alia null alia print alia type data type schema null return alia print uid string bag return alia print uid string bag schema string verbos els type data type schema null return alia print uid string tupl return alia print uid string tupl schema string verbos els type data type schema null return alia print uid string map els return alia print uid string map schema string verbos return alia print uid string data type find type name type public string string return string true give new valu uid uid field schema field schema inner schema public void stamp field schema uid uid logic express get next uid schema null logic field schema fs schema get field f stamp field schema privat boolean compat logic field schema uid field schema uid field schema null return fals schema null uid field schema schema null schema null uid field schema schema null return fals schema null schema size uid field schema schema size return fals int schema size boolean comp schema get field compat uid field schema schema get field comp return fals return true check fs equal fs regard type public static boolean type match logic field schema fs logic field schema fs fs null fs null return true fs null fs null return fals f type fs type return fals data type complex fs type logic schema f schema logic schema fs schema null null return true null null return fals size size return fals int size type match get field get field return fals return true add uid field schema argument field schema argument null stamp field schema uid param uid field schema return field schema throw frontend except public logic schema logic field schema merg uid logic field schema uid field schema throw frontend except uid field schema null compat uid field schema uid uid field schema uid schema null int schema size schema get field merg uid uid field schema schema get field return uid field schema els uid field schema null stamp field schema els uid uid field schema uid schema null int schema size schema get field stamp field schema logic field schema clone uid copi clone uid return clone uid copi rest uid fieldschema inner schema public void reset uid uid schema null schema reset uid public logic field schema clone uid logic field schema result fs null schema null result fs new logic field schema null null type uid els logic schema new schema new logic schema result fs new logic field schema null new schema type uid int schema size logic field schema fs schema get field clone uid new schema add field fs return result fs public logic field schema deep copi logic field schema new fs new logic field schema alia null alia null schema null schema deep copi null type uid return new fs compar two field schema equal param relax inner true n check inner tupl schema param relax alia true n check alias return true field schema equal fals otherwis public static boolean equal logic field schema fschema logic field schema fother boolean relax inner boolean relax alia fschema null fother null return fals fschema type fother type return fals relax alia fschema alia null fother alia null good els fschema alia null return fals els fschema alia equal foth alia return fals relax inner data type schema type fschema type n comparison emb schema null caus schema equal return fals even though want view true fschema schema null fother schema null compar recurs use schema logic schema equal fschema schema fother schema fals relax alia return fals return true check field schema fs castabl fs param fs param fs return true castabl public static boolean castabl logic field schema fs logic field schema fs fs null fs null return fals fs null return fals fs null return fals byte type fs type byte type fs type data type schema type fs type type data type good els type type n comparison either input inner schema null empti inner schema null caus schema equal return fals even though want view true fs schema null fs schema size fs schema null fs schema null compar recurs use schema logic schema castabl fs schema fs schema return fals els return fals els type type good els type data type type data type type data type data type number type type good els data type number type type type data type type data type data type number type type type data type good els type data type type data type data type number type type type data type good els type data type good els return fals return true merg two logic field schema behavior merg depend mode mode merg type load merg type load inner take left side compat otherwis throw except mode merg type union inner type throw except end null inner schema mode merg type union take specif type param f load foreach fs user declar schema union fs leav side param f load foreach f infer schema union fs leav side param mode merg mode public static logic field schema merg logic field schema fs logic field schema fs merg mode mode throw frontend except deal null schema mode merg mode load fs null throw new frontend except cast null fs null return f deep copi els mode merg mode load inner fs null return null fs null return f deep copi els union union inner fs null fs null return null string merg alia byte merg type data type logic schema merg sub schema null infer merg datum type mode merg mode union inner fs type fs type n merg inner schema differ type union throw except throw new frontend except incompat field schema leav fs string fals right fs string fals els merg type f type els mode merg mode load mode merg mode load inner f type data type f type data type declar schema type part merg type f type els data type castabl f type fs type throw new frontend except incompat field schema declar fs string fals infer fs string fals els merg type f type compat type take declar type els union schema f type data type merg type f type els f type data type merg type f type els take specif type merg type data type merg type f type fs type merg type data type true incompat set bytearray merg type data type f alia null merg alia fs alia els f alia null merg alia fs alia els merg alia merg name space alia f alia f alia merg alia null merg alia fs alia data type schema type merg type mode merg mode union tri f type data type f schema null merg sub schema fs schema deep copi els fs type datum type f schema null merg sub schema fs schema deep copi els merg sub schema logic schema merg f schema f schema merg mode union inner catch frontend except e f type data type f type data type creat empti tupl subschema merg sub schema new logic schema merg sub schema add field new logic field schema null new logic schema data type els f type data type f type data type merg sub schema new logic schema inner schema compat merg sub schema set null els mode merg mode union inner merg sub schema logic schema merg f schema f schema merg mode union inner els load load inner f type data type merg sub schema fs schema els tri check compat merg sub schema logic schema merg f schema f schema merg mode load inner catch frontend except e throw new frontend except incompat field schema leav fs string fals right fs string fals logic field schema merg new logic field schema merg alia merg sub schema merg type return merg public static boolean equal unless unknown logic field schema fs logic field schema fs throw frontend except f type data type return true els f type data type return true els f type fs type data type complex fs type return logic schema equal unless unknown f schema f schema els return true els return fals old field schema requir tupl schema insid bag requir method fill gap public void normal type datum type schema null check tupl field schema size schema get field type data type logic schema tupl schema new logic schema logic field schema inner fs schema get field tupl schema add field inner fs schema new logic schema schema add field new logic field schema null tupl schema data type schema null logic field schema fs schema get field fs normal privat list logic field schema field public logic schema field new array list logic field schema reset uid fieldschema schema contain public void reset uid logic field schema f field f reset uid recurs compar two schema check input schema cast cast schema param sch schema cast input param sch schema cast oper return true castabl public static boolean castabl logic schema sch logic schema sch null castabl sch null sch null return fals otherwis sch null return fals cast specif type good sch null return true sch size sch size return fals iter logic field schema sch field iter iter logic field schema j sch field iter next iter number field cast logic field schema fs next logic field schema fs j next compar recurs use field schema logic field schema castabl fs fs return fals return true add field schema param field add schema public void add field logic field schema field field add field fetch field alia param alia return field associ alia null field throw frontend except public logic field schema get field string alia throw frontend except logic field schema result null first look exact match logic field schema fs field f alia null f alia equal alia result null result f els string builder sb new string builder find one match result alia f alia throw new frontend except sb string result null return result exact match find look match scop alia logic field schema fs field f alia null f alia match alia result null result f els string builder sb new string builder find one match result alia f alia throw new frontend except sb string return result give alia name find associ logic field schema exact name find see field match part namespac alia eg give alia nm schema b return field schema give alia nm schema nm b return null param alia alia look return logic field schema null alia tupl public logic field schema get field sub name match string alia throw frontend except alia null return null logic field schema fs get field alia fs null return fs fs null final string sep array list logic field schema match field schema new array list logic field schema alia contain sep logic field schema field field alia end sep field alia match field schema add field match field schema size boolean next fals string builder sb new string builder find one sub alia name match logic field schema match fs match field schema next sb append els next true sb append match fs alia int err code throw new frontend except sb string err code except els match field schema size fs match field schema get return fs public int get field posit string alia logic field schema fs null tri f get field alia catch frontend except e fs null return return field index f fetch field field number param field num field number fetch return field public logic field schema get field int field num return field get field num get field return list field public list logic field schema get field return field get size schema return size public int size return field size two schema equal equal size field schema consid order equal function compar alia field public boolean equal object return equal fals two schema equal equal size field schema consid order equal compar alia argument set true alia field also compar param param compar alia return true equal public boolean equal object boolean compar alia null instanceof logic schema logic schema os logic schema size os size return fals int size get field equal os get field compar alia return fals return true els return fals look index field contain specifi uid param uid uid look return index field find public int find field long uid int size logic field schema f get field field uid return field f uid uid return field schema check schema f schema null f schema find field uid return return public static enum merg mode load load inner union union inner merg two schema param load user declar schema union leav side param load infer schema union right side param mode merg schema load foreach union load foreach alway take compat set user defin schema union take specif type numer string take string case type mismatch expect type check visitor fill gap later return merg schema null merg fail public static logic schema merg logic schema logic schema merg mode mode throw frontend except schema null take parti null null mode merg mode load mode merg mode load inner null return deep copi els null return deep copi els return null els union union inner return null return null size size mode merg mode union union incompat type result null schema return null els throw new frontend except incompat schema leav string fals right string fals logic schema merg schema new logic schema int size logic field schema fs get field logic field schema fs get field logic field schema merg logic field schema merg f f mode merg schema add field merg return merg schema public static boolean equal unless unknown logic schema logic schema throw frontend except null return true els null return true els size size return fals els int size logic field schema equal unless unknown get field get field return fals return true public string string boolean verbos string builder str new string builder logic field schema field field str append field string verbos field size str delet char str length return str string public string string return string true public logic schema merg uid logic schema uid schema throw frontend except uid schema null size uid schema size throw new frontend except structur schema chang origin uid schema int size get field merg uid uid schema get field return uid schema els logic schema clone uid copi new logic schema int size get field stamp field schema clone uid copi add field get field clone uid return clone uid copi public logic schema deep copi logic schema new schema new logic schema int size new schema add field get field deep copi return new schema merg collect schema use column alia unlik merg schema function merg use posit schema merg type incompat per data type merg type tupl bag sub schema equal consid compat param schema list schema merg use column alia return merg schema public static logic schema merg schema alia list logic schema schema throw frontend except logic schema merg schema null list schema current merg use error messag array list logic schema merg schema new array list logic schema schema size logic schema sch schema merg schema null merg schema sch deep copi merg schema add sch continu tri merg schema merg schema alia merg schema sch merg schema add sch catch frontend except e string msg error merg schema sch merg schema merg schema schema merg schema throw new frontend except msg e return merg schema merg two schema use column alia unlik merg schema function merg use posit schema merg type incompat per data type merg type tupl bag sub schema equal consid compat public static logic schema merg schema alia logic schema schema logic schema schema throw frontend except logic schema merg schema new logic schema hash set logic field schema schema col add new hash set logic field schema add merg field present first schema logic field schema fs schema get field check null alia fs schema logic field schema fs schema get field sub name match fs alia fs null schema col add contain f alia correspond multipl field schema lookup schema throw appropri error schema get field sub name match fs alia schema col add add f logic field schema merg fs logic field schema merg f f merg mode union merg fs alia merg name space alia fs alia f alia merg fs alia null merg fs alia f alia merg schema add field merg fs els merg schema add field new logic field schema fs add schema nd schema alreadi present merg schema logic field schema fs schema get field check null alia fs schema schema col add contain f merg schema add field new logic field schema fs return merg schema privat static void check null alia logic field schema f logic schema schema throw frontend except fs alia null throw new frontend except schema field null alia merg use alia schema schema one alias form nm str form str return str privat static string merg name space alia string alia string alia throw frontend except alia equal alia return alia alia end alia return alia alia end alia return alia alias differ alia merg return null recurs compar two schema equal param schema param param relax inner true inner schema check param relax alia true alia check return true schema equal fals otherwis public static boolean equal logic schema schema logic schema boolean relax inner boolean relax alia null equal schema null null return true otherwis schema null null return fals schema size size return fals iter logic field schema schema field iter iter logic field schema j field iter next logic field schema fs next logic field schema fs j next relax alia fs alia null fs alia null good els fs alia null return fals els fs alia equal fs alia return fals fs type fs type return fals relax inner logic field schema equal fs fs fals relax alia compar recurs use field schema return fals return true old schema requir tupl schema insid bag requir method fill gap public void normal logic field schema fs get field fs normal 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java io except import java util array list import java util array import java util dequ import java util hash map import java util iter import java util link list import java util list import java util map import java util random import org apach common log log import org apach common log log factori import org apach func spec import org apach except import org apach resourc schema import org apach store resourc import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer logic physic translat except import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper constant express import org apach backend hadoop executionengin physic layer express oper project import org apach backend hadoop executionengin physic layer express oper user comparison func import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper collect group import org apach backend hadoop executionengin physic layer relat oper counter import org apach backend hadoop executionengin physic layer relat oper cross import org apach backend hadoop executionengin physic layer relat oper distinct import org apach backend hadoop executionengin physic layer relat oper join import org apach backend hadoop executionengin physic layer relat oper filter import org apach backend hadoop executionengin physic layer relat oper import org apach backend hadoop executionengin physic layer relat oper global rearrang import org apach backend hadoop executionengin physic layer relat oper limit import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach backend hadoop executionengin physic layer relat oper merg cogroup import org apach backend hadoop executionengin physic layer relat oper merg join import org apach backend hadoop executionengin physic layer relat oper nativ import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper rank import org apach backend hadoop executionengin physic layer relat oper skew join import org apach backend hadoop executionengin physic layer relat oper sort import org apach backend hadoop executionengin physic layer relat oper split import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer relat oper stream import org apach backend hadoop executionengin physic layer relat oper union import org apach backend hadoop executionengin physic layer relat oper packag packag type import org apach datum data type import org apach datum schema tupl class gener gen context import org apach datum schema tupl frontend import org apach datum tupl import org apach datum tupl factori import org apach impl context import org apach impl builtin cross import org apach impl io file local import org apach impl io file spec import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl logic layer schema schema field schema import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan plan except import org apach impl plan visitor except import org apach impl util compil util import org apach impl util link multi map import org apach impl util multi map import org apach impl util util import org apach newplan depend order walker import org apach newplan oper import org apach newplan oper plan import org apach newplan plan walker import org apach newplan revers depend order walker see chk import org apach newplan subtre depend order walker import org apach newplan logic util import org apach newplan logic express exp phi translat visitor import org apach newplan logic express logic express plan import org apach newplan logic express project express import org apach parser sourc locat public class log phi translat visitor extend logic relat node visitor privat static final log log factori get log log phi translat visitor class public log phi translat visitor oper plan plan throw frontend except super plan new depend order walker plan current plan new physic plan log phi map new hash map oper physic oper current plan new link list physic plan protect map oper physic oper log phi map protect dequ physic plan current plan protect physic plan current plan protect node id gener node gen node id gener get gener protect context pc public void set context context pc pc pc public map oper physic oper get log phi map return log phi map public physic plan get physic plan return current plan overrid public void visit load lo load throw frontend except string scope last paramet set true assum file splittabl due load store refactor load load new load new oper key scope node gen get next node id scope lo load get load func load add origin locat lo load get alia lo load get locat load set file lo load get file spec load set pc pc load set result type data type load set signatur lo load get signatur load set limit lo load get limit load set tmp load lo load tmp load load set cach file lo load get load func get cach file load set ship file lo load get load func get ship file current plan add load log phi map put lo load load load typic root oper multiqueri case might store predecessor list oper op lo load get plan get predecessor lo load physic oper op null log phi map get op get tri current plan connect load catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit nativ lo nativ throw frontend except string scope nativ po nativ new nativ new oper key scope node gen get next node id scope po nativ add origin locat lo nativ get alia lo nativ get locat po nativ set nativ rjar lo nativ get nativ jar po nativ set param lo nativ get param po nativ set result type data type log phi map put lo nativ po nativ current plan add po nativ list oper op lo nativ get plan get predecessor lo nativ physic oper op null log phi map get op get els int err code string msg find predecessor nativ throw new logic physic translat except msg err code except tri current plan connect po nativ catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit filter filter throw frontend except string scope system err println enter filter filter po filter new filter new oper key scope node gen get next node id scope filter get request parallel po filter add origin locat filter get alia filter get locat po filter set result type data type current plan add po filter log phi map put filter po filter current plan push current plan current plan new physic plan plan walker child walker current walker spawn child walker filter get filter plan plan walker child walker new revers depend order walker see chk filter get filter plan push walker child walker current walker walk current walker walk new exp phi translat visitor current walker get plan child walker filter current plan log phi map pop walker po filter set plan current plan current plan current plan pop list oper op filter get plan get predecessor filter physic oper op null log phi map get op get els int err code string msg find predecessor filter throw new logic physic translat except msg err code except tri current plan connect po filter catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e translat soft link filter system err println exit filter overrid public void visit sort sort throw frontend except string scope list logic express plan log plan sort get sort col plan list physic plan sort plan new array list physic plan log plan size convert logic express plan physic express plan current plan push current plan logic express plan plan log plan current plan new physic plan plan walker child walker new revers depend order walker see chk plan push walker child walker child walker walk new exp phi translat visitor current walker get plan child walker sort current plan log phi map sort plan add current plan pop walker current plan current plan pop get physic oper sort sort po sort sort get user func null po sort new sort new oper key scope node gen get next node id scope sort get request parallel null sort plan sort get ascend col null els user comparison func compar new user comparison func new oper key scope node gen get next node id scope sort get request parallel null sort get user func po sort new sort new oper key scope node gen get next node id scope sort get request parallel null sort plan sort get ascend col compar po sort add origin locat sort get alia sort get locat po sort set limit sort get limit sort set request parallel get type log phi map put sort po sort current plan add po sort list oper op sort get plan get predecessor sort physic oper op null log phi map get op get els int err code string msg find predecessor sort throw new logic physic translat except msg err code except tri current plan connect po sort catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e po sort set result type data type transform logic physic plan involv follow step first gener random number link counter within rank way avoid possibl collis parallel rank oper row number mode pre case oper row number mode use two step tupl count sequenti mapper produc global counter global counter gather sum tupl call respect counter valu order calcul correspond rank valu pre pre case oper necessari five step group field involv rank oper packag case multi field key group field flatten sort oper field avail flatten sort group sequenti count mapper global counter counter global counter sum pass rank oper rank pre param lo rank describ rank oper row number mode rank dens overrid public void visit rank lo rank throw frontend except string scope rank po rank counter po counter random random gener new random long oper math ab random gener next long tri physic oper oper case oper necessari five step group field involv rank oper packag case multi field key group field flatten sort oper field avail flatten sort group sequenti count mapper global counter counter global counter sum pass rank oper rank lo rank row number boolean flag fals multi map integ logic express plan express plan new multi map integ logic express plan int lo rank get rank col plan size express plan put lo rank get rank col plan packag po packag compil pack trio lo rank null flag express plan po packag get pkgr set packag type packag type translat soft link lo rank list boolean flatten lst array list true fals physic plan fep new physic plan project feproj new project new oper key scope node gen get next node id scope feproj add origin locat lo rank get alia lo rank get locat feproj set column feproj set result type po packag get pkgr get key type feproj set star fals feproj set overload fals fep add feproj physic plan fep new physic plan project feproj new project new oper key scope node gen get next node id scope feproj add origin locat lo rank get alia lo rank get locat feproj set column feproj set result type data type feproj set star fals feproj set overload fals fep add feproj list physic plan fe plan array list fep fep po new new oper key scope node gen get next node id scope fe plan flatten lst list logic express plan rank plan lo rank get rank col plan byte new type new byte rank plan size int rank plan size logic express plan loep rank plan get iter oper inp oper loep get oper inp oper next oper oper inp oper next new type project express oper get type list physic plan new physic plan new array list physic plan list boolean new order plan new array list boolean int lo rank get rank col plan size physic plan fep new physic plan project feproj new project new oper key scope node gen get next node id scope feproj add origin locat lo rank get alia lo rank get locat feproj set column feproj set result type new type feproj set star fals feproj set overload fals fep add feproj new physic plan add fep new order plan add lo rank get ascend col get sort po sort po sort new sort new oper key scope node gen get next node id scope null new physic plan new order plan null po sort set request parallel lo rank get request parallel po sort add origin locat lo rank get alia lo rank get locat po counter new counter new oper key scope node gen get next node id scope null new physic plan new order plan po counter add origin locat lo rank get alia lo rank get locat po counter set result type data type po counter set row number lo rank row number po counter set dens rank lo rank dens rank po counter set oper string valu oper po rank new rank new oper key scope node gen get next node id scope null new physic plan new order plan po rank add origin locat lo rank get alia lo rank get locat po rank set result type data type po rank set oper string valu oper list boolean flatten lst array list fals true physic plan fep new physic plan project feproj new project new oper key scope node gen get next node id scope feproj add origin locat lo rank get alia lo rank get locat feproj set column feproj set result type data type feproj set star fals feproj set overload fals fep add feproj physic plan fep new physic plan project feproj new project new oper key scope node gen get next node id scope feproj add origin locat lo rank get alia lo rank get locat feproj set column lo rank get rank col plan size feproj set result type data type feproj set star fals feproj set overload fals fep add feproj list physic plan fe plan array list fep fep po new new oper key scope node gen get next node id scope fe plan flatten lst current plan add po current plan add po sort current plan add po counter current plan add po rank current plan add po tri current plan connect po packag po current plan connect po po sort current plan connect po sort po counter current plan connect po counter po rank current plan connect po rank po catch plan except e throw new logic physic translat except e get messag e get error code e get error sourc e log phi map put lo rank po case oper use two step tupl count sequenti mapper produc global counter global counter gather sum tupl call respect counter valu order calcul correspond rank valu els list logic express plan log plan lo rank get rank col plan list physic plan rank plan new array list physic plan log plan size convert logic express plan physic express plan current plan push current plan logic express plan plan log plan current plan new physic plan plan walker child walker new revers depend order walker see chk plan push walker child walker child walker walk new exp phi translat visitor current walker get plan child walker lo rank current plan log phi map rank plan add current plan pop walker current plan current plan pop po counter new counter new oper key scope node gen get next node id scope null rank plan lo rank get ascend col po counter add origin locat lo rank get alia lo rank get locat po counter set result type data type po counter set row number lo rank row number po counter set dens rank lo rank dens rank po counter set oper string valu oper po rank new rank new oper key scope node gen get next node id scope null rank plan lo rank get ascend col po rank add origin locat lo rank get alia lo rank get locat po rank set result type data type po rank set oper string valu oper current plan add po counter current plan add po rank list oper op lo rank get plan get predecessor lo rank physic oper op null log phi map get op get els int err code string msg find predecessor rank throw new logic physic translat except msg err code except current plan connect po counter current plan connect po counter po rank log phi map put lo rank po rank catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit cross cross throw frontend except string scope list oper input cross get plan get predecessor cross cross nest cross phi op new cross new oper key scope node gen get next node id scope cross get request parallel phi op add origin locat phi op get alia phi op get origin locat current plan add phi op phi op set result type data type log phi map put cross phi op oper op cross get plan get predecessor cross physic oper log phi map get op tri current plan connect phi op catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e els global rearrang po global new global rearrang new oper key scope node gen get next node id scope cross get request parallel po global add origin locat cross get alia cross get locat packag po packag new packag new oper key scope node gen get next node id scope cross get request parallel po global add origin locat cross get alia cross get locat po global set cross true current plan add po global current plan add po packag int count tri current plan connect po global po packag list boolean flatten lst array list true true oper op input physic plan fep new physic plan constant express ce new constant express new oper key scope node gen get next node id scope cross get request parallel ce set valu input size ce set result type data type fep add ce constant express ce new constant express new oper key scope node gen get next node id scope cross get request parallel ce set valu count ce set result type data type fep add ce tupl ce val tupl factori get instanc new tupl ce val set input size ce val set count ce set valu ce val ce set result type data type user func gfc new user func new oper key scope node gen get next node id scope cross get request parallel array list physic oper ce physic oper ce new func spec cross class get name po global get oper key string gfc add origin locat cross get alia cross get locat gfc set result type data type fep add leaf gfc gfc set input array list physic oper ce physic oper ce fep add gfc fep connect ce gfc fep connect ce gfc physic plan fep new physic plan project feproj new project new oper key scope node gen get next node id scope cross get request parallel feproj add origin locat cross get alia cross get locat feproj set result type data type feproj set star true feproj set overload fals fep add feproj list physic plan fe plan array list fep fep fe new new oper key scope node gen get next node id scope cross get request parallel fe plan flatten lst fe set map side true fe add origin locat cross get alia cross get locat current plan add fe current plan connect log phi map get op fe local rearrang phi op new local rearrang new oper key scope node gen get next node id scope cross get request parallel phi op add origin locat cross get alia cross get locat list physic plan lr plan new array list physic plan int input size physic plan lrp new physic plan project lrproj new project new oper key scope node gen get next node id scope cross get request parallel lrproj add origin locat cross get alia cross get locat lrproj set overload fals lrproj set result type data type lrp add lrproj lr plan add lrp phi op set cross true phi op set index count phi op set key type data type phi op set plan lr plan phi op set result type data type current plan add phi op current plan connect fe phi op current plan connect phi op po global catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e catch exec except e int err code string msg unabl set index newli creat local rearrang throw new visitor except msg err code except e po packag get pkgr set key type data type po packag set result type data type po packag set num inp count boolean inner new boolean count int count inner true po packag get pkgr set inner inner list physic plan fe plan new array list physic plan list boolean flatten lst new array list boolean int count physic plan fep new physic plan project feproj new project new oper key scope node gen get next node id scope cross get request parallel feproj add origin locat cross get alia cross get locat feproj set result type data type feproj set overload fals fep add feproj fe plan add fep flatten lst add true fe new new oper key scope node gen get next node id scope cross get request parallel fe plan flatten lst fe add origin locat cross get alia cross get locat current plan add fe tri current plan connect po packag fe catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e log phi map put cross fe overrid public void visit stream stream throw frontend except string scope stream po stream new stream new oper key scope node gen get next node id scope stream get execut manag stream get stream command pc get properti po stream add origin locat stream get alia stream get locat current plan add po stream log phi map put stream po stream list oper op stream get plan get predecessor stream physic oper op null log phi map get op get els int err code string msg find predecessor stream throw new logic physic translat except msg err code except tri current plan connect po stream catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit inner load load throw frontend except string scope project expr op new project new oper key scope node gen get next node id scope logic schema load get schema load sourc bag expr op set result type data type expr op set overload true els null expr op set result type get field type els expr op set result type data type project express proj load get project proj project star expr op set star proj project star els proj rang project proj get end col project rang expand project star expand throw new assert error project rang project end see translat physic plan expr op set project end proj get start col els expr op set column load get col num set input project predecessor foreach log phi map put load expr op current plan add expr op overrid public void visit foreach throw frontend except string scope list physic plan inner plan new array list physic plan org apach newplan logic relat logic plan inner foreach get inner plan gener gen gener inner get sink get list logic express plan exp gen get output plan list oper pred inner get predecessor gen current plan push current plan need translat predecessor gener physic plan physic plan contain express plan predecessor plu subtre start predecessor int exp size current plan new physic plan translat express plan plan walker child walker new revers depend order walker see chk exp get push walker child walker child walker walk new exp phi translat visitor exp get child walker gen current plan log phi map pop walker list oper leav exp get get sink oper l leav physic oper op log phi map get l l instanceof project express int input project express l get input num sink project get input logic plan translat oper pred pred get input child walker new subtre depend order walker inner pred push walker child walker child walker walk pop walker get physic oper leaf input logic plan physic oper leaf log phi map get pred pred instanceof inner load predecessor inner load remov project come inner load chang column project come express plan current plan remov leaf log phi map remov pred project leaf proj project leaf tri leaf proj star project op set star true els leaf proj project end project op set project end leaf proj get start col els project op set column leaf proj get column catch exec except e throw new frontend except foreach get column leaf e els current plan connect leaf op inner plan add current plan current plan current plan pop physic oper po gen new gener new oper key be next long input flatten boolean flatten gen get flatten flag list boolean flatten list new array list boolean boolean fl flatten flatten list add fl logic schema log schema foreach get schema schema schema null log schema null tri schema schema get schema new resourc schema log schema catch frontend except e throw new runtim except logic schema foreach unabl convert schema log schema e schema null schema tupl frontend regist gener possibl schema fals gen context may need append po new new oper key scope node gen get next node id scope foreach get request parallel inner plan flatten list schema po add origin locat foreach get alia foreach get locat po set result type data type log phi map put foreach po current plan add po gener multipl input list oper op foreach get plan get predecessor foreach gener may predecessor op null return physic oper log phi map get op get tri current plan connect po catch except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e translat soft link foreach function take list logic express plan convert list physic plan param plan return throw frontend except privat list physic plan translat express plan logic relat oper loj list logic express plan plan throw frontend except list physic plan expr plan new array list physic plan plan null plan size return expr plan save current plan onto stack current plan push current plan logic express plan lp plan current plan new physic plan spawn new depend walker use plan walker child walker current walker spawn child walker lp plan walker child walker new revers depend order walker see chk lp save old walker use child walker current walker push walker child walker creat new exp phi translat visitor walk express plan current walker walk new exp phi translat visitor current walker get plan child walker loj current plan log phi map expr plan add current plan pop walker pop current plan back current plan current plan pop return expr plan overrid public void visit store lo store throw frontend except string scope system err println enter store store store new store new oper key scope node gen get next node id scope store add origin locat lo store get alia lo store get locat store set file lo store get output spec store set input spec lo store get input spec store set signatur lo store get signatur store set sort info lo store get sort info store set tmp store lo store tmp store store set store func lo store get store func store set schema util translat schema lo store get schema lo store get store func instanceof store resourc store set cach file store resourc lo store get store func get cach file store set ship file store resourc lo store get store func get ship file current plan add store list oper op lo store get plan get predecessor lo store physic oper null op null log phi map get op get implement sort sort new limit new oper readi sort info sort info null store predecessor limit check limit predecessor op get instanceof limit op lo store get plan get predecessor op get physic oper sort phi op log phi map get op get predecessor sort get sort info op get instanceof sort sort info sort sort phi op get sort info store set sort info sort info els int err code string msg find predecessor store throw new logic physic translat except msg err code except tri current plan connect store catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e log phi map put lo store store system err println exit store overrid public void visit cogroup cg throw frontend except switch cg get group type case translat collect cogroup cg break case packag po packag compil pack trio cg cg get custom partition cg get inner cg get express plan po packag get pkgr set packag type packag type log phi map put cg po packag break case translat merg cogroup cg break default throw new logic physic translat except unknown co group modifi except translat soft link cg privat void translat collect cogroup cogroup cg throw frontend except one input logic relat oper pred logic relat oper plan get predecessor cg get list logic express plan expr plan cg get express plan get collect group phi op new collect group new oper key node gen get next node id phi op add origin locat cg get alia cg get locat list physic plan p expr plan translat express plan cg expr plan tri phi op set plan p expr plan catch plan except pe int err code string msg problem set map group plan throw new logic physic translat except msg err code except pe byte type null expr plan size type data type phi op set key type type els type p expr plan get get leav get get result type phi op set key type type phi op set result type data type current plan add phi op tri current plan connect log phi map get pred phi op catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e log phi map put cg phi op privat merg cogroup compil merg cogrp logic relat oper relat op multi map integ logic express plan inner plan throw frontend except list oper input relat op get plan get predecessor relat op local rearrang correspond input need extract key tupl local rearrang inner r new local rearrang input size int count list physic oper inp os new array list physic oper input size int input size oper op input get physic oper phi op log phi map get op inp os add phi op list logic express plan plan inner plan get local rearrang po inner new local rearrang new oper key node gen get next node id po inner add origin locat relat op get alia relat op get locat contain list physic plan could multipl key key express list physic plan expr plan translat express plan relat op plan tri po inner set plan expr plan catch plan except pe int err code string msg problem set local rearrang plan throw new logic physic translat except msg err code except pe inner r count po inner tri po inner set index count catch exec except e int err code string msg unabl set index newli creat local rearrang throw new visitor except msg err code except e po inner set key type plan size data type expr plan get get leav get get result type po inner set result type data type merg cogroup po cogrp new merg cogroup new oper key node gen get next node id inp os inner r relat op get request parallel return po cogrp privat void translat merg cogroup cogroup cg throw frontend except valid merg cogrp cg get inner throw new logic physic translat except inner support relat merg cogroup list oper input cg get plan get predecessor cg map side merg valid valid new map side merg valid valid valid map side merg input cg get plan merg cogroup po cogrp compil merg cogrp cg cg get express plan po cogrp set result type data type po cogrp add origin locat cg get alia cg get locat current plan add po cogrp oper op input tri current plan connect log phi map get op po cogrp catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e log phi map put cg po cogrp privat boolean valid merg cogrp boolean inner flag boolean flag inner flag flag return fals return true overrid public void visit join loj throw frontend except string scope list join predic list oper input loj get plan get predecessor loj map inner join physic plan correspond inner physic oper multi map physic oper physic plan join plan new link multi map physic oper physic plan outer list correspond join predic inner list inner physic plan predic list list physic plan pp list new array list list physic plan list physic oper correspond join predic list physic oper inp new array list physic oper outer list correspond join predic inner list correspond type key predic list list byte key type new array list list byte boolean inner flag loj get inner flag string alia loj get alia sourc locat locat loj get locat int parallel loj get request parallel int input size oper op input get physic oper phi op log phi map get op inp add phi op list logic express plan plan list logic express plan loj get join plan list physic plan expr plan translat express plan loj plan pp list add expr plan join plan put phi op expr plan key could potenti tupl visit expr plan get type member tupl list byte tupl key member type new array list byte physic plan expr plan expr plan tupl key member type add expr plan get leav get get result type key type add tupl key member type loj get join type join skew join skj tri skj new skew join new oper key scope node gen get next node id scope parallel inp inner flag skj add origin locat alia locat skj set join plan join plan catch except e int err code string msg skew join creation fail throw new logic physic translat except msg err code except e skj set result type data type int input size oper op input get inner flag tri logic schema logic relat oper op get schema schema determin null throw new frontend except loj determin skew join schema skj add schema util translat schema catch frontend except e int err code string msg could not set schema outer join throw new logic physic translat except msg err code except e els never retriev guarante index valid compil tri read schema skj add schema null current plan add skj oper op input tri current plan connect log phi map get op skj catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e log phi map put loj skj els loj get join type join schema input schema new schema input size schema key schema new schema input size outer int input size logic schema logic schema logic relat oper input get get schema logic schema null continu schema gen schema get schema new resourc schema logic schema regist valu piec schema tupl frontend regist gener possibl gen fals gen context input schema gen schema key gen new schema byte byt key type get gener nest code inform throw away byt null datum type complex byt byte valu continu outer key gen add new field schema null byt schema tupl frontend regist gener possibl key gen fals gen context key schema key gen int fragment join pfrj tri boolean left outer fals do not check bound issu assum join involv atleast two input leav outer inner flag tupl null tupl null left outer tri know leav outer join two way join assum index right input logic schema input schema logic relat oper input get get schema check schema join input schema null int err code string msg input logic relat oper input get get alia outer join desir valid schema throw new logic physic translat except msg err code except use schema decid number column field null tupl null tupl tupl factori get instanc new tupl input schema size int j j input schema size j null tupl set j null catch frontend except e int err code string msg error determin schema input throw new logic physic translat except msg err code except e pfrj new join new oper key scope node gen get next node id scope parallel inp pp list key type null fragment leav outer null tupl input schema key schema pfrj add origin locat alia locat catch exec except e int err code string msg unabl set index newli creat local rearrang throw new visitor except msg err code except e pfrj set result type data type current plan add pfrj oper op input tri current plan connect log phi map get op pfrj catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e log phi map put loj pfrj els loj get join type join loj get join type join new map side merg valid valid map side merg input loj get plan physic oper smj boolean use merg join input size inner flag inner flag use merg join regist merg join schema inform code gener logic schema logic schema logic relat oper input get get schema schema leav schema null logic schema null left schema schema get schema new resourc schema logic schema logic schema logic relat oper input get get schema schema right schema null logic schema null right schema schema get schema new resourc schema logic schema logic schema loj get schema schema merg schema null logic schema null merg schema schema get schema new resourc schema logic schema leav schema null schema tupl frontend regist gener possibl left schema fals gen context right schema null schema tupl frontend regist gener possibl right schema fals gen context merg schema null schema tupl frontend regist gener possibl merg schema fals gen context inner join two sort input less restrict implement form merg join n requir loader implement collect interfac tri smj new merg join new oper key scope node gen get next node id scope parallel inp join plan key type loj get join type leav schema right schema merg schema catch plan except e int err code string msg merg join creation fail throw new logic physic translat except msg err code except e log phi map put loj smj els case fall back merg cogroup flatten es smj compil merg cogrp loj loj get express plan smj set result type data type current plan add smj smj add origin locat alia locat oper op input tri current plan connect log phi map get op smj catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e use merg join creat configur foreach flatten output cogroup fe compil flatten inner flag scope parallel alia locat input current plan add fe tri current plan connect smj fe catch plan except e throw new logic physic translat except e get messag e get error code e get error sourc e log phi map put loj fe return els loj get join type join loj get join type join packag po packag compil pack trio loj loj get custom partition inner flag loj get express plan fe compil flatten inner flag scope parallel alia locat input current plan add fe tri current plan connect po packag fe catch plan except e throw new logic physic translat except e get detail messag e get error code e get error sourc e log phi map put loj fe loj get join type join inner flag length inner flag fals inner flag fals throw new logic physic translat except error loj get locat alia loj get alia bloom join use join except po packag get pkgr set packag type packag type els po packag get pkgr set packag type packag type translat soft link loj privat packag compil pack trio logic relat oper relat op string custom partition boolean inner flag multi map integ logic express plan inner plan throw frontend except global rearrang po global new global rearrang new oper key node gen get next node id relat op get request parallel po global add origin locat relat op get alia relat op get locat po global set custom partition custom partition packag po packag new packag new oper key node gen get next node id relat op get request parallel po packag add origin locat relat op get alia relat op get locat current plan add po global current plan add po packag tri current plan connect po global po packag catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e int count byte type null list oper input relat op get plan get predecessor relat op int input size oper op input get list logic express plan plan inner plan get local rearrang phi op new local rearrang new oper key node gen get next node id relat op get request parallel phi op add origin locat relat op get alia relat op get locat list physic plan expr plan translat express plan relat op plan tri phi op set plan expr plan catch plan except pe int err code string msg problem set local rearrang plan throw new logic physic translat except msg err code except pe tri phi op set index count catch exec except e int err code string msg unabl set index newli creat local rearrang throw new visitor except msg err code except e plan size type data type phi op set key type type els type expr plan get get leav get get result type phi op set key type type phi op set result type data type current plan add phi op tri current plan connect log phi map get op phi op current plan connect phi op po global catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e po packag get pkgr set key type type po packag set result type data type po packag set num inp count po packag get pkgr set inner inner flag return po packag privat compil flatten boolean inner flag string scope int parallel string alia sourc locat locat list oper input throw frontend except list physic plan fe plan new array list physic plan list boolean flatten lst new array list boolean fe tri int input size physic plan fep new physic plan project feproj new project new oper key scope node gen get next node id scope parallel sinc first column group field feproj add origin locat alia locat feproj set result type data type feproj set overload fals fep add feproj fe plan add fep parser would mark side need keep empti bag non match outer inner flag would fals inner flag oper join input input get outer join add bincond project null bag empti updat empti bag check fep join input flatten lst add true fe new new oper key scope node gen get next node id scope parallel fe plan flatten lst fe add origin locat alia locat catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e return fe overrid public void visit union lo union throw frontend except string scope union phi op new union new oper key scope node gen get next node id scope lo union get request parallel phi op add origin locat lo union get alia lo union get locat current plan add phi op phi op set result type data type log phi map put lo union phi op list oper op lo union get plan get predecessor lo union oper l op physic oper log phi map get l tri current plan connect phi op catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit distinct lo distinct throw frontend except string scope distinct phi op new distinct new oper key scope node gen get next node id scope lo distinct get request parallel phi op set custom partition lo distinct get custom partition phi op add origin locat lo distinct get alia lo distinct get locat current plan add phi op phi op set result type data type log phi map put lo distinct phi op oper op lo distinct get plan get predecessor lo distinct get physic oper log phi map get op tri current plan connect phi op catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit limit lo limit throw frontend except string scope limit po limit new limit new oper key scope node gen get next node id scope lo limit get request parallel po limit set limit lo limit get limit po limit add origin locat lo limit get alia lo limit get locat po limit set result type data type current plan add po limit log phi map put lo limit po limit lo limit get limit plan null add express plan limit current plan push current plan current plan new physic plan plan walker child walker new revers depend order walker see chk lo limit get limit plan push walker child walker current walker walk new exp phi translat visitor current walker get plan child walker lo limit current plan log phi map po limit set limit plan current plan pop walker current plan current plan pop oper op lo limit get plan get predecessor lo limit get physic oper log phi map get op tri current plan connect po limit catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e translat soft link lo limit overrid public void visit split lo split throw frontend except string scope split phi op new split new oper key scope node gen get next node id scope lo split get request parallel phi op add origin locat lo split get alia lo split get locat file spec spl str file tri spl str file new file spec file local get temporari path pc string new func spec util get tmp file compressor name pc catch except e byte err src pc get error sourc int err code switch err src case except err code break case except err code break case except err code break string msg unabl obtain temporari path throw new logic physic translat except msg err code err src e phi op set split store spl str file log phi map put lo split phi op current plan add phi op list oper op lo split get plan get predecessor lo split physic oper op nu will log phi map get op get els int err code string msg find predecessor split throw new logic physic translat except msg err code except tri current plan connect phi op catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e overrid public void visit split output lo split output throw frontend except string scope system err println enter filter filter po filter new filter new oper key scope node gen get next node id scope lo split output get request parallel po filter add origin locat lo split output get alia lo split output get locat po filter set result type data type current plan add po filter log phi map put lo split output po filter current plan push current plan current plan new physic plan plan walker child walker current walker spawn child walker filter get filter plan plan walker child walker new revers depend order walker see chk lo split output get filter plan push walker child walker current walker walk current walker walk new exp phi translat visitor current walker get plan child walker lo split output current plan log phi map pop walker po filter set plan current plan current plan current plan pop list oper op lo split output get plan get predecessor lo split output physic oper op null log phi map get op get els int err code string msg find predecessor filter throw new logic physic translat except msg err code except tri current plan connect po filter catch plan except e int err code string msg invalid physic oper physic plan throw new logic physic translat except msg err code except e translat soft link lo split output system err println exit filter updat plan check empti bag bag empti flatten bag mani null dictat schema param fe plan plan updat param join input relat correspond bag check throw frontend except public static void updat empti bag check physic plan fe plan oper join input throw frontend except logic schema input schema null tri input schema logic relat oper join input get schema input schema null int err code string msg input logic relat oper join input get alia outer join desir valid schema throw new logic physic translat except msg err code except catch frontend except e int err code string msg error determin schema input throw new logic physic translat except msg err code except e compil util add empti bag outer join fe plan util translat schema input schema fals null privat void translat soft link oper op throw frontend except list oper pred op get plan get soft link predecessor op pred null return oper pred pred physic oper log phi map get pred current plan creat soft link log phi map get op 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util map import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic express logic express plan import org apach newplan logic express project express import org apach newplan logic relat logic schema logic field schema import org apach parser sourc locat oper map datum inner plan use inner plan public class inner load extend logic relat oper privat project express prj privat foreach privat boolean sourc bag fals public inner load oper plan plan foreach int col num super inner load plan store column number project express plan abl dynam adjust column number optim logic express plan exp new logic express plan n care type set prj new project express exp col num foreach foreach foreach public inner load oper plan plan foreach string col alia throw frontend except super inner load plan store column number project express plan abl dynam adjust column number optim logic express plan exp new logic express plan prj new project express exp col alia null foreach foreach foreach public inner load logic plan plan foreach project express project express super inner load plan prj project express prj set input num prj set attach relat op foreach foreach foreach overrid public logic schema get schema throw frontend except schema null return schema prj find refer get schema null prj get field schema null prj get field schema type data type sourc bag true alia prj get field schema alia prj get field schema schema null logic field schema tupl schema prj get field schema schema get field tupl schema null tupl schema schema null schema new logic schema int tupl schema schema size schema add field tupl schema schema get field els schema new logic schema schema add field prj get field schema els prj rang star project schema new logic schema schema add field new logic field schema null null datum type return schema overrid public void reset schema super reset schema prj reset field schema public project express get project return prj overrid public boolean equal oper throw frontend except instanceof inner load return fals return get col num inner load get col num overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit public int get col num return prj get col num get oper contain oper part inner plan return oper public get return foreach public boolean sourc bag return sourc bag public string string string builder msg new string builder alia null msg append alia msg append name name msg append get project get col alia null msg append get project get col alia els get project project star msg append els get project rang project msg append get project get start col append append get project get end col els msg append get project get col num msg append msg append schema schema null msg append schema els msg append null msg append annot null map entri string object entri annot entri set msg append entri return msg string overrid public void set locat sourc locat loc super set locat loc prj set locat loc 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util array list import java util collect import java util iter import java util list import org apach impl logic layer frontend except import org apach impl util multi map import org apach newplan oper import org apach newplan plan visitor import org apach newplan logic express logic express plan public class join extend logic relat oper privat static final long serial version enum type join public static enum hash join bloom join fragment replic join skew join sort merg join sort merg index join join contain list logic oper correspond relat oper list gener relat oper gener oper turn contain list express column project privat static log log log factori get log join class express plan input privat multi map integ logic express plan join plan indic input whether inner privat boolean inner flag privat join type retain type join static constant refer option select join type public final static integ public join logic plan plan super join plan public join logic plan plan multi map integ logic express plan join plan jt boolean inner super join plan join plan join plan join type jt inner flag inner public void set join plan multi map integ logic express plan join plan join plan join plan public void set inner flag boolean inner inner flag inner public void set join type jt join type jt public boolean inner int input index return inner flag input index public boolean get inner flag return inner flag public get join type return join type public void reset join type join type public collect logic express plan get join plan int input index return join plan get input index get express plan join return collect express plan public multi map integ logic express plan get express plan return join plan public collect logic express plan get express plan valu return join plan valu overrid public logic schema get schema throw frontend except schema calcul return schema null return schema list oper input null input plan get predecessor input null return null list logic schema logic field schema fss new array list logic schema logic field schema oper op input logic schema input schema logic relat oper op get schema schema one input unknown join schema unknown return input schema null schema null return schema int input schema size logic schema logic field schema f input schema get field logic schema logic field schema new null f alia null new new logic schema logic field schema logic relat oper op get alia fs alia f schema f type fs uid els new new logic schema logic field schema fs alia f schema f type fs uid fss add new schema new logic schema logic schema logic field schema field schema fss schema add field field schema return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper throw frontend except null instanceof join join oj join join type oj join type return fals inner flag length oj inner flag length return fals int inner flag length inner flag oj inner flag return fals check equal oj return fals join plan size oj join plan size return fals need make sure input project column slightli complic sinc multi map n return particular order find match input case integ p join plan key set iter integ iter oj join plan key set iter int op iter next op iter next p equal op break op collect logic express plan c join plan get p collect logic express plan oc oj join plan get op c size oc size return fals c instanceof list oc instanceof list throw new frontend except expect list express plan list logic express plan elist list logic express plan c list logic express plan oelist list logic express plan oc int elist size elist get equal oelist get return fals els return fals return true els return fals overrid public string get name return name join type string public list oper get input logic plan plan return plan get predecessor 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan plan visitor import org apach newplan logic express logic express plan public class limit extend logic relat oper privat static final long serial version privat static final long privat long limit privat logic express plan mlimit plan public limit logic plan plan super limit plan public limit logic plan plan long limit super limit plan set limit limit public limit logic plan plan logic express plan limit plan super limit plan set limit plan limit plan public long get limit return limit public void set limit long limit limit limit public logic express plan get limit plan return mlimit plan public void set limit plan logic express plan mlimit plan mlimit plan mlimit plan overrid public logic schema get schema throw frontend except schema null return schema logic relat oper input null input logic relat oper plan get predecessor get schema input get schema return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper throw frontend except null instanceof limit limit limit limit get limit get limit limit get limit get limit plan null get limit plan equal limit get limit plan return check equal limit return fals public oper get input logic plan plan return plan get predecessor get 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java io except import java util list import org apach hadoop conf configur import org apach hadoop mapreduc job import org apach load func import org apach load metadata import org apach except import org apach resourc schema import org apach datum data type import org apach impl context import org apach impl io file spec import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl util object serial import org apach impl util util import org apach newplan oper import org apach newplan plan visitor import org apach newplan logic util public class load extend logic relat oper public enum cast state privat logic schema script schema privat final file spec fs privat transient load func load func transient privat configur conf privat final logic schema determin schema privat list integ requir field null privat cast state cast state cast state privat logic schema uid schema privat final string schema file privat final string signatur privat long limit privat boolean tmp load use pattern match param schema schema user specifi script null specifi param plan logic plan load part public load logic schema schema logic plan plan null schema plan null null null use logic plan builder param loader func spec load function use load param schema schema user specifi script null specifi param plan logic plan load part param conf param load func load func instanti loader param signatur signatur pass load func public load file spec loader logic schema schema logic plan plan configur conf load func load func string signatur super load plan script schema schema f loader schema file loader null null loader get file name conf conf load func load func signatur signatur store script schema conf script schema signatur load func null load func set context signatur signatur tri determin schema get schema meta data catch frontend except e throw new runtim except retriev schema loader load func e els determin schema null public string get schema file return schema file public load func get load func throw frontend except tri load func null fs null load func load func context instanti func spec f get func spec load func set context signatur signatur return load func catch class cast except cce throw new frontend except f get func spec implement load func interfac public void set script schema logic schema schema script schema schema public void set requir field list integ requir field requir field requir field get schema load schema either give user script load function get schema call return otherwis null return indic schema unknown return schema null unknown overrid public logic schema get schema throw frontend except schema null return schema logic schema origin schema null script schema null determin schema null origin schema logic schema merg script schema determin schema logic schema merg mode load els script schema null origin schema script schema els determin schema null origin schema determin schema cast adjust int origin schema size logic schema logic field schema f origin schema get field determin schema null reset load field schema byte array reflect realiti f type data type els reset type determin schema say f type determin schema get field type origin schema null uid schema origin schema merg uid uid schema requir field null schema new logic schema int origin schema size requir field contain schema add field origin schema get field els schema origin schema return schema privat logic schema get schema meta data throw frontend except get load func null get load func instanceof load metadata tri resourc schema resourc schema load metadata load func get schema get file spec get file name new job conf schema old schema schema get schema resourc schema return util translat schema old schema catch except e throw new frontend except get schema load func load func get class get name e return null method store script schema schema use object serial current configur br schema retriev load function fs know schema user enter claus br name format br pre signatur script schema object serial serial script schema pre p note schema load function return alway claus schema br input chararray b chararray br schema wil lbe chararray b chararray br p find good solut make script schema avail load func see http issu apach org jira brows privat void store script schema configur conf logic schema script schema string signatur conf null script schema null signatur null tri conf set util get script schema key signatur object serial serial util translat schema script schema catch except ioe int err code string msg problem serial script schema frontend except fee new frontend except msg err code except fals null ioe throw new runtim except fee public file spec get file spec return f overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit public logic schema get determin schema return determin schema overrid public boolean equal oper throw frontend except null instanceof load load ol load check equal ol return fals fs null ol fs null return true els return fals return fs equal ol fs els return fals public void set cast state cast state state cast state state public cast state get cast state return cast state public boolean cast adjust return cast state cast state public configur get configur return conf overrid public void reset uid uid schema null overrid public string string string str super string return str requir field requir field public string get signatur return signatur public boolean tmp load return tmp load public void set tmp load boolean tmp load tmp load tmp load public logic schema get script schema return script schema public long get limit return limit public void set limit long limit limit limit 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util array import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor public class nativ extend logic relat oper privat string nativ jar privat string param null privat load load privat store store public nativ oper plan plan string nativ jar string paramet super nativ plan store lo store load lo load nativ jar nativ jar param paramet overrid public logic schema get schema throw frontend except return load get schema return null overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper obj throw frontend except obj return true obj null return fals get class obj get class return fals nativ nativ obj load null load null return fals els load equal load return fals nativ jar null nativ jar null return fals els nativ jar equal nativ jar return fals array equal param param return fals store null store null return fals els store equal store return fals check predecessor schema check equal return fals return true return nativ jar public string get nativ jar return nativ jar param nativ jar nativ jar set public void set nativ jar string nativ jar nativ jar nativ jar return param public string get param return param param param param set public void set param string param param param return load public load get load return load param load load set public void set load load load load load return store public store get store return store param store store set public void set store store store store store 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin method never use directli use link public class long sum extend algebra long math base public long sum set op public static class intermedi extend algebra long math base intermedi overrid public get op return public static class final extend algebra long math base final overrid public get op return 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util array list import java util list import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic express logic express import org apach newplan logic express logic express plan oper implement oper syntax pre code alia rel col ref alia output alia oper rel input relat oper col ref column refer rang schema rel dens rank mean sequenti valu without gasp among differ tupl valu pre public class rank extend logic relat oper privat final static string rank privat final static string list within logic express plan case privat list logic express plan rank col plan list within ascend column privat list boolean asc col case could dens dens rank mean assign consecut rank differ tupl privat boolean dens rank fals case simpl name row number mode consecut number assign tupl privat boolean row number fals uid gener rank column import keep uid persist call reset schema get schema privat long rank column uid public rank oper plan plan super rank plan rank column uid public rank oper plan plan list logic express plan rank col plan list boolean asc col plan rank col plan rank col plan asc col asc col rank column uid public list logic express plan get rank col plan return rank col plan public void set rank col plan list logic express plan rank col plan rank col plan rank col plan public list boolean get ascend col return asc col public void set ascend col list boolean asc col asc col asc col get schema output rank compos long valu prepend rest input schema return schema throw frontend except overrid public logic schema get schema throw frontend except schema calcul return schema null return schema logic relat oper input null schema previou predecessor input logic relat oper plan get predecessor get input null return null logic schema input schema input get schema schema one input unknown rank schema unknown return input schema null schema null return schema complet copi previou schema logic field schema list logic schema logic field schema fss new array list logic schema logic field schema int input schema size logic schema logic field schema f input schema get field logic schema logic field schema new null new new logic schema logic field schema fs alia f schema f type fs uid fss add new schema new logic schema rank column uid rank column uid logic express get next uid rank column uid schema add field new logic schema logic field schema input get alia null datum type rank column uid logic schema logic field schema field schema fss schema add field field schema return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper throw frontend except null instanceof rank rank rank rank col plan equal rank col plan return fals els return fals return check equal logic relat oper get dens return boolean public boolean dens rank return dens rank set dens param dens rank dens rank public void set dens rank boolean dens rank dens rank dens rank get simpl oper mean row number attach tupl return boolean public boolean row number return row number set simpl oper param row number row number oper public void set row number boolean row number row number row number 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util array list import java util iter import java util list import org apach func spec import org apach sort col info import org apach sort col info order import org apach sort info import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan revers depend order walker import org apach newplan logic express logic express plan import org apach newplan logic express project express import org apach newplan logic visitor reset project attach relat op visitor public class sort extend logic relat oper privat list boolean asc col privat func spec sort func privat boolean star fals privat long limit privat list logic express plan sort col plan public sort oper plan plan super sort plan public sort oper plan plan list logic express plan sort col plan list boolean asc col func spec sort func plan sort col plan sort col plan asc col asc col sort func sort func public list logic express plan get sort col plan return sort col plan public void set sort col plan list logic express plan sort plan sort col plan sort plan public list boolean get ascend col return asc col public void set ascend col list boolean asc col asc col asc col public func spec get user func return sort func public void set user func func spec func sort func func public boolean star return star public void set star boolean b star b public void set limit long l limit l public long get limit return limit public boolean limit return limit overrid public logic schema get schema throw frontend except schema null return schema logic relat oper input null input logic relat oper plan get predecessor get schema input get schema return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit public sort info get sort info throw frontend except logic schema schema get schema list sort col info sort col info list new array list sort col info int sort col plan size get singl project sort plan logic express plan lp sort col plan get iter oper op iter lp get oper list oper op list new array list oper op iter next op list add op iter next op list size op list get instanceof project express throw new frontend except unsupport oper inner plan op list get project express project project express op list get creat sort col info project project project star input schema project star still n know mani column repres n add column sort list return new sort info sort col info list project rang project project get end col stop reason project star condit unkown number column repres return new sort info sort col info list expand project rang multipl sort col info int cnum project get start col cnum project get end col cnum sort col info list add new sort col info null cnum get order asc col els int sort col index project get col num string sort col name schema null null schema get field sort col index alia sort col info list add new sort col info sort col name sort col index get order asc col return new sort info sort col info list privat order get order list boolean asc col int return asc col get sort col info order sort col info order overrid public boolean equal oper throw frontend except null instanceof sort sort sort sort asc col equal sort get ascend col return fals sort func equal sort get user func return fals star sort star return fals limit sort get limit return fals sort col plan equal sort get sort col plan return fals return check equal logic relat oper public oper get input logic plan plan return plan get predecessor get public static sort creat copi sort sort throw frontend except sort new sort new sort sort get plan null sort get ascend col sort get user func list logic express plan new sort col plan new array list logic express plan sort get sort col plan size logic express plan lep sort get sort col plan logic express plan new lep lep deep copi reset attach sort oper project express new sort new reset project attach relat op visitor new lep new sort visit new sort col plan add new lep new sort set sort col plan new sort col plan return new sort 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor public class split extend logic relat oper public split oper plan plan super split plan overrid public logic schema get schema throw frontend except schema null return schema logic relat oper input null input logic relat oper plan get predecessor get schema input get schema return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper throw frontend except null instanceof split return check equal split els return fals 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util hash map import java util hash set import java util map import java util set import org apach datum data type import org apach impl logic layer frontend except import org apach impl util pair import org apach newplan oper import org apach newplan plan visitor import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic relat logic schema logic field schema public class split output extend logic relat oper privat logic express plan filter plan privat map long long uid map new hash map long long public split output logic plan plan super split output plan public split output logic plan plan logic express plan filter plan super split output plan filter plan filter plan public logic express plan get filter plan return filter plan public void set filter plan logic express plan filter plan filter plan filter plan privat void reassign uid rec logic schema schema logic field schema fs schema get field one field contain nest schema need reassign uid nest field f schema null f type data type f type data type f type data type reassign uid rec f schema uid map contain key f uid fs uid uid map get fs uid els long pred uid fs uid fs uid logic express get next uid uid map put pred uid fs uid overrid public logic schema get schema throw frontend except schema null return schema logic relat oper input null input logic relat oper plan get predecessor get input get schema null schema input get schema deep copi reassign uid rec schema return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper throw frontend except null instanceof split output split output os split output return filter plan equal os filter plan check equal os els return fals overrid public void reset uid uid map new hash map long long public long get input uid long uid map entri long long pair uid map entri set pair get valu uid return pair get key return 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import org apach sort info import org apach store func interfac import org apach impl io file spec import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan plan visitor public class store extend logic relat oper privat final file spec output know reload store l file file spec set server post process use reload store optim need privat file spec input spec privat final string signatur privat boolean tmp store privat sort info sort info privat final store func interfac store func privat boolean disambigu enabl true public store logic plan plan file spec output file spec store func interfac store func string signatur super store plan output output file spec store func store func signatur signatur public store logic plan plan file spec output file spec store func interfac store func string signatur boolean disambigu enabl plan output file spec store func signatur disambigu enabl disambigu enabl public file spec get output spec return output public store func interfac get store func return store func overrid public logic schema get schema throw frontend except schema logic relat oper plan get predecessor get get schema disambigu enabl schema null schema get field null request tri remov parent alia substr includ colon logic schema logic field schema field schema get field field alia null field alia contain continu field alia field alia substr field alia last index return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper throw frontend except null instanceof store store os store check equal os return fals need test store func equal sinc instanti output output null os output null return true els output null os output null return fals els return output equal os output els return fals public sort info get sort info return sort info public void set sort info sort info sort info sort info sort info public boolean tmp store return tmp store public void set tmp store boolean tmp store tmp store tmp store public void set input spec file spec input spec public file spec get input spec return input spec public string get signatur return signatur public file spec get file spec return output 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import org apach datum data type import org apach impl logic layer frontend except import org apach impl stream execut manag import org apach impl stream stream command import org apach newplan oper import org apach newplan plan visitor import org apach newplan logic relat load cast state public class stream extend logic relat oper public enum cast state privat logic schema script schema privat static final long serial version privat static log log log factori get log filter class stream command object stream oper oper repres privat stream command command transient privat execut manag execut manag privat logic schema uid schema privat cast state cast state cast state public stream logic plan plan execut manag exe manag stream command cmd logic schema schema super stream plan command cmd execut manag exe manag script schema schema get stream command object associ oper return stream command object public stream command get stream command return command return execut manag public execut manag get execut manag return execut manag overrid public logic schema get schema throw frontend except schema null return schema cast adjust schema new logic schema int script schema size logic schema logic field schema f script schema get field deep copi f type data type schema add field f els script schema null schema script schema deep copi schema null uid schema schema merg uid uid schema return schema overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper throw frontend except null instanceof stream return check equal logic relat oper els return fals public void set cast state cast state state cast state state public cast state get cast state return cast state public boolean cast adjust return cast state cast state overrid public void reset uid uid schema null public logic schema get script schema return script schema 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util array list import java util hash set import java util list import java util set import org apach except import org apach impl logic layer frontend except import org apach impl util pair import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic express logic express import org apach newplan logic relat logic schema logic field schema public class union extend logic relat oper privat boolean schema uid map output uid input uid privat list pair long long uid map new array list pair long long public union oper plan plan super union plan public union oper plan plan boolean schema plan schema schema public boolean schema return schema overrid public logic schema get schema throw frontend except schema null return schema list oper input plan get predecessor predecessor schema null schema union null oper input input logic relat oper op logic relat oper input op get schema null schema string msg schema relat op get alia null use relat null schema throw new frontend except msg except els return null logic schema merg schema null input size return schema logic relat oper input get get schema list string input alias new array list string input size list logic schema input schema new array list logic schema input size oper input input logic relat oper lop logic relat oper input input alia add lop get alia input schema add lop get schema schema merg schema creat merg schema alia input schema input alias els logic schema input schema get logic schema input schema get merg schema logic schema merg logic schema merg mode union merg schema null return null merg schema int input schema size logic schema schema input schema get merg schema null schema null return null merg schema logic schema merg merg schema schema logic schema merg mode union merg schema null return null bring back cach uid otherwis cach uid gener int merg schema size logic schema logic field schema output field schema merg schema get field long uid search cach uid map input field see cach output uid output field logic schema input schema input schema logic schema logic field schema input field schema schema input field schema input schema get field sub name match output field schema alia els input field schema input schema get field input field schema null uid get cach ouput uid input field schema uid uid break cach uid alloc one locat cach input uid uid logic express get next uid logic schema input schema input schema long input uid logic field schema match input field schema schema match input field schema input schema get field sub name match merg schema get field alia match input field schema null input uid match input field schema uid uid map add new pair long long uid input uid els match input field schema merg schema get field input uid input schema get field uid uid map add new pair long long uid input uid output field schema uid uid return schema merg schema creat schema union onschema privat logic schema creat merg schema alia list logic schema input schema list string input alia throw frontend except array list logic schema schema new array list logic schema int input schema size logic schema sch input schema get logic field schema fs sch get field fs alia null string msg schema relat input alia get null fieldschema column schema sch string fals throw new frontend except msg except schema add sch creat merg schema logic schema merg schema null tri merg schema logic schema merg schema alia schema catch frontend except e string msg error merg schema union oper e get messag throw new frontend except msg except e return merg schema privat long get cach ouput uid long input uid long uid pair long long pair uid map pair second input uid uid pair first break return uid overrid public void accept plan visitor v throw frontend except v instanceof logic relat node visitor throw new frontend except expect logic plan visitor logic relat node visitor v visit overrid public boolean equal oper throw frontend except null instanceof union return check equal union els return fals get input uid map output uid public set long get input uid long uid set long result new hash set long pair long long pair uid map pair first uid result add pair second return result overrid public void reset uid uid map new array list pair long long public list oper get input return plan get predecessor public list oper get input logic plan plan return plan get predecessor public void set union schema boolean flag schema flag 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import org apach common log log import org apach common log log factori import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except public class equal expr extend binari comparison oper privat static final long serial version transient privat final log log log factori get log get class public equal expr oper key k k public equal expr oper key k int rp super k rp result type data type overrid public string name return less equal data type find type name result type key string overrid public void visit phi plan visitor v throw visitor except v visit equal overrid public result get next boolean throw exec except result leav right switch operand type case data type case data type case data type case data type case data type case data type case data type case data type case data type result be accum child null operand type r null return be leav lh get next operand type right rh get next operand type return comparison leav right default int err code string msg get class get simpl name know handl type data type find type name operand type throw new exec except msg err code except suppress warn uncheck privat result comparison result leav result right leav return statu statu return left right return statu statu return right either operand null result null left result null right result null left result null left return statu statu return left assert left result instanceof compar assert right result instanceof compar compar left result compar right result leav result boolean els leav result boolean illustr markup null left result boolean leav result return leav overrid public equal expr clone throw clone support except equal expr clone new equal expr new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import java io buffer input stream import java io buffer reader import java io buffer writer import java io file import java io file input stream import java io file reader import java io file writer import java io except import java io input stream import java io input stream reader import java io reader import java io string reader import java net import java nio charset charset import java text pars except import java util abstract list import java util array list import java util array import java util date import java util hash set import java util list import java util map import java util properti import java util jar attribut import java util jar jar file import java util jar manif import jline consol consol reader import jline consol histori file histori import org antlr runtim recognit except import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop secur user group inform import org apach hadoop util gener option parser import org apach log j level import org apach log j logger import org apach log j properti configur import org apach runner return code import org apach backend backend except import org apach backend executionengin exec except import org apach backend hadoop datastorag configur util import org apach classif interfac audienc import org apach classif interfac stabil import org apach impl context import org apach impl impl constant import org apach impl io file local import org apach impl util jar manag import org apach impl util log util import org apach impl util object serial import org apach impl util properti util import org apach impl util context import org apach impl util util import org apach parser dri run grunt parser import org apach script script engin import org apach script script engin support script lang import org apach tool cmdline cmd line parser import org apach tool grunt consol reader input stream import org apach tool grunt grunt import org apach tool pigstat progress notif listen import org apach tool pigstat stat import org apach tool pigstat stat util import org apach tool pigstat script state import org apach tool timer perform timer factori import org joda time date time import org joda time durat import org joda time period import org joda time period type import org joda time format period format import com googl common annot visibl test import com googl common base string import com googl common io closeabl main class engin interfac audienc limit privat oozi interfac stabil stabl public class main static util add shutdown hook prioriti new runnabl overrid public void run file local delet temp resourc file impl constant privat final static log log log factori get log main class privat static final string log jconf privat static final string brief privat static final string debug privat static final string verbos privat static final string version privat static final string major version privat static final string minor version privat static final string patch version privat static final string svn revis privat static final string build time privat enum exec mode protect static final string notif listen protect static final string notif listen arg static attribut attr null tri string find contain jar jar manag find contain jar main class find contain jar null jar file jar new jar file find contain jar final manif manifest jar get manif final map string attribut attr manifest get entri attr attr get org apach els log info unabl read pig manifest file run jar version inform unavail catch except e log warn unabl read pig manifest file version inform unavail e attr null version attr get valu implement version svn revis attr get valu svn revis build time attr get valu build time stamp string split version split major version split minor version split patch version split els version null major version null minor version null patch version null svn revis null build time null main class jar provid shell setup classpath appropri execut jar file warn method call system exit param arg jar use add addit jar file colon separ start shell e execut rest command line input shell throw except public static void main string arg system exit run arg null static int run string arg progress notif listen listen date time start time new date time int rc boolean verbos fals boolean grunt call fals boolean delet temp file true string log file name null boolean print script run time true context context null tri configur conf new configur fals gener option parser parser new gener option parser conf arg conf parser get configur properti properti new properti properti util load default properti properti properti put configur util properti conf listen null listen make listen properti string arg parser get remain arg boolean user specifi log fals boolean check script fals buffer reader pin null boolean debug fals boolean dryrun fals boolean emb fals list string param new array list string list string param file new array list string hash set string disabl optim rule new hash set string cmd line parser opt new cmd line parser arg opt regist opt log jconf cmd line parser valu expect opt regist opt b brief cmd line parser valu expect opt regist opt c check cmd line parser valu expect opt regist opt debug cmd line parser valu expect opt regist opt e execut cmd line parser valu expect opt regist opt f file cmd line parser valu expect opt regist opt g emb cmd line parser valu expect opt regist opt h help cmd line parser valu expect opt regist opt version cmd line parser valu expect opt regist opt l logfil cmd line parser valu expect opt regist opt param file cmd line parser valu expect opt regist opt p param cmd line parser valu expect opt regist opt r dryrun cmd line parser valu expect opt regist opt optim cmd line parser valu expect opt regist opt v verbos cmd line parser valu expect opt regist opt w warn cmd line parser valu expect opt regist opt x exectyp cmd line parser valu expect opt regist opt stop failur cmd line parser valu expect opt regist opt multiqueri cmd line parser valu expect opt regist opt fetch cmd line parser valu expect opt regist opt properti file cmd line parser valu expect exec mode mode exec mode string file null string engin null set client side system properti context context get context set client system prop properti char opt opt opt get next opt cmd line parser end opt switch opt case string log jconf opt get val str log jconf null properti set properti log jconf break case b properti set properti true break case c check script true break case string log level opt get val str log level null properti set properti log level debug true break case e mode exec mode break case f mode exec mode file opt get val str break case g emb true engin opt get val str break case properti set properti stop failur true break case h string topic opt get val str topic null topic equal ignor case properti print properti els system println invalid help topic topic usag els usag return return code case print script run time fals system println get version string return return code case l call method valid path log file set file store client side log file string log file paramet opt get val str log file paramet null log file paramet length log file name valid log file log file paramet null els log file name valid log file log file name null user specifi log true properti set properti logfil log file name null log file name break case param file add opt get val str break case turn multiqueri optim properti set properti configur fals break case properti set properti configur fals break case p param add opt get val str break case be current use paramet substitut extend futur dryrun true break case disabl optim rule add opt get val str break case v properti set properti true verbos true break case w properti set properti aggreg warn fals break case x properti set properti exectyp opt get val str opt get val str lower case contain local user group inform set configur new configur fals break case input stream input stream null tri file local fetch file ret local file ret file local fetch file properti opt get val str input stream new buffer input stream new file input stream local file ret file properti load input stream catch except e throw new runtim except unabl pars properti file opt get val str final input stream null tri input stream close catch except e break default charact cc charact valu opt throw new assert error unhandl option cc string creat context paramet context new context properti creat static script state object script state script state context get execut engin instanti script state string command line load func join abstract list string array list arg script state set command line command line listen null script state regist listen listen script state start script state context get properti set properti cmd arg command line log file name null user specifi log log file name valid log file properti get properti logfil null context get properti set properti logfil log file name null log file name configur log configur log properti context log info get version string replac n log file name null log info log error messag log file name delet temp file boolean valu properti get properti configur true context get properti set properti impl constant object serial serial disabl optim rule context set class loader context creat cl null construct paramet substitut preprocessor grunt grunt null buffer reader string subst file null param file fetch remot param file param file properti context set param param context set param file param file switch mode case string remaind opt get remain arg remaind null context get properti set properti context object serial serial remaind file local fetch file ret local file ret file local fetch file properti file local file ret fetch properti set properti jar rel df true script state set file name file emb return run emb script context local file ret file get path engin els support script lang type determin script type local file ret file get path type null return run emb script context local file ret file get path type name lower case reader creat first load load default statement pigbootup file avail new buffer reader new input stream reader util get composit stream new file input stream local file ret file properti run paramet substitut preprocessor first subst file file substitut pin run param preprocessor context subst file debug dryrun check script dryrun dryrun subst file context log info dri run complet substitut script subst file expand script file expand els log info dri run complet substitut script subst file return return code log file name valid log file log file name local file ret file context get properti set properti logfil log file name null log file name set job name base name script context get properti set properti context latin new file file get name debug new file subst file delet exit script state set script local file ret file grunt new grunt pin context grunt call true check script grunt check script subst file system err println file syntax rc return code els int result grunt exec rc get return code stat result return rc case check script system err println c check option valid execut script file return return code gather remain argument string pass grunt string buffer sb new string buffer string remaind opt get remain arg int remaind length sb append sb append remaind sb append n script state set script sb string new buffer reader new string reader sb string grunt new grunt context grunt call true int result grunt exec return get return code stat result default break n know yet want may give we jar execut might give we script execut might give we dash noth mean run grunt interact string remaind opt get remain arg remaind null check script system err println c check option valid execut script file return return code interact mode exec mode reader creat first load load default statement pigbootup file avail consol reader reader new consol reader util get composit stream system properti system reader set expand event fals reader set prompt grunt final string histori string histori file system get properti user home file separ reader set histori new file histori new file histori file consol reader input stream input stream new consol reader input stream reader grunt new grunt new buffer reader new input stream reader input stream context grunt set consol reader reader grunt call true grunt run return return code els context get properti set properti context object serial serial remaind script want we run mode exec mode file local fetch file ret local file ret file local fetch file properti remaind local file ret fetch properti set properti jar rel df true script state set file name remaind emb return run emb script context local file ret file get path engin els support script lang type determin script type local file ret file get path type null return run emb script context local file ret file get path type name lower case reader creat first load load default statement pigbootup file avail input stream seq input stream util get composit stream new file input stream local file ret file properti new buffer reader new input stream reader seq input stream run paramet substitut preprocessor first subst file remaind substitut pin run param preprocessor context subst file debug dryrun check script dryrun dryrun subst file context log info dri run complet substitut script subst file expand script remaind expand els log info dri run complet substitut script subst file return return code log file name valid log file log file name local file ret file context get properti set properti logfil log file name null log file name debug new file subst file delet exit set job name base name script context get properti set properti context latin new file remaind get name script state set script local file ret file grunt new grunt pin context grunt call true check script grunt check script subst file system err println remaind syntax rc return code els int result grunt exec rc get return code stat result return rc per utkarsh chri invoc jar file via depric catch pars except e usag rc return code stat util set error messag e get messag stat util set error throwabl e catch org apach tool paramet pars except e usag rc return code stat util set error messag e get messag stat util set error throwabl e catch except e e instanceof except except pe except e rc pe retriabl return code return code stat util set error messag pe get messag stat util set error code pe get error code els rc return code stat util set error messag e get messag stat util set error throwabl e grunt call log util write log e log file name log verbos error launch kill run job interrupt e context catch throwabl e rc return code stat util set error messag e get messag stat util set error throwabl e grunt call log util write log e log file name log verbos error launch kill run job interrupt e context final print script run time print script run time start time delet temp file clear temp file file local delet temp file context null context get execut engin destroy perform timer factori get perf timer factori dump timer return rc privat static void print script run time date time start time date time end time new date time durat durat new durat start time end time period period durat period normal standard period type time log info script complet period format get default print period durat get milli m privat static void kill run job interrupt throwabl e context context throwabl caus e get caus kill run job get interrupt except thread interrupt mapreduc oozi launcher job kill shutdown hook kill run job sometim node manag issu unregist shutdown hook get execut caus orphan job continu run e instanceof interrupt except caus null caus instanceof interrupt except tri context get execut engin kill catch backend except log error error kill run job protect static progress notif listen make listen properti properti tri return context instanti object param configur util configur properti progress notif listen class catch exec except e throw new runtim except e privat static int get return code stat int stat return stat return code fail job stat return code succeed job return code job fail public static boolean dryrun string script file context context throw recognit except except buffer reader rd new buffer reader new file reader script file dri run grunt parser dryrun new dri run grunt parser rd script file context boolean macro dryrun pars stop error macro string expand file script file replac substitut expand buffer writer fw new buffer writer new file writer expand file fw append dryrun get result fw close return macro jz log j properti use instead privat static void configur log properti properti context context add file append log need creat properti properti file sgroschupf feb method obsolet string log jconf properti get properti string true string true boolean brief true string equal ignor case properti get properti level log level level string log level string properti get properti log level string null log level level level log level string level final properti prop log j conf properti log jconf prop size prop set properti log j logger org apach log level string log level string system get properti logfil level null prop set properti log j root logger els log level level level log level string level prop set properti log j logger org apach log level string prop set properti log j root logger prop set properti log j append org apach log j roll file append prop set properti log j append file properti get properti logfil prop set properti log j append layout org apach log j pattern layout prop set properti log j append layout convers pattern brief n p c n prop set properti log j append org apach log j consol append prop set properti log j append target system err prop set properti log j append layout org apach log j pattern layout prop set properti log j append layout convers pattern brief n p c n properti configur configur prop log level logger get logger org apach get level log level null log level logger get logger org apach get effect level properti backend prop context get log j properti backend prop set properti log j logger org apach log level string context set log j properti backend prop context set default log level log level visibl test static properti log j conf properti string log jconf final properti properti new properti string null empti log jconf reader properti reader null tri final file file new file log jconf file exist properti reader new file reader file properti load properti reader log info load log j properti file file els final resourc main class get class loader get resourc log jconf resourc null properti reader new input stream reader resourc open stream charset name properti load properti reader log info load log j properti resourc resourc els log warn file resourc find name log jconf catch except e log warn open log j properti file log jconf use default final closeabl close quietli properti reader return properti privat static list string fetch remot param file list string param file properti properti throw except list string param file new array list string string param param file file local fetch file ret local file ret file local fetch file properti param param file add local file ret file get absolut path return param file return stream final script pass grunt privat static buffer reader run param preprocessor context context buffer reader orig script string script file boolean creat file throw org apach tool paramet pars except except creat file return context param substitut output file orig script script file els string substitut context param substitut orig script return new buffer reader new string reader substitut return major version run public static string get major version return major version return major version build run public static string get minor version return minor version return patch version build run public static string get patch version return patch version return svn revis number build run public static string get svn revis return svn revis return build time build run public static string get build time return build time return version string format similarli svn pre apach version r compil nov pre public static string get version string return apach version version be svn revis ncompil build time print usag string public static void usag system println n get version string n system println option run interact grunt shell system println option e xecut cmd cmd run cmd system println option f ile file run cmd find file system println option includ system println log jconf log j configur file overrid log conf system println b brief brief log timestamp system println c check syntax check system println debug debug level default system println e execut command execut within quot system println f file path script execut system println g emb script engin classnam keyword script engin system println h help display messag specifi topic get help topic system println properti topic current support h properti system println version display version inform system println l logfil path client side log file default current work directori system println param file path paramet file system println p param key valu pair form param val system println r dryrun produc script substitut paramet script execut system println optim turn optim follow valu support system println constant calcul calcul constant compil time system println split filter split filter condit system println push filter filter earli possibl system println merg filter merg filter condit system println push foreach flatten join explod late possibl system println limit optim limit earli possibl system println column map key prune remov unus datum system println add add remov unneed column system println merg merg adjac system println group const parallel setter forc parallel group statement system println partit filter optim pushdown partit filter condit loader implement load meta data system println predic pushdown optim pushdown filter predic loader implement load predic push system println disabl optim system println optim list enabl default optim valu case insensit system println v verbos print error messag screen system println w warn turn warn log also turn warn aggreg system println x exectyp set execut mode local mapreduc tez default mapreduc system println stop failur abort execut first fail job default system println multiqueri turn multiqueri optim default system println fetch turn fetch optim default system println properti file path properti file system println print cmd debug overrid anyth els print actual command use run includ system println environ variabl set command public static void print properti system println follow properti support system println log system println verbos true fals default fals properti v switch system println brief true fals default fals properti b switch system println debug default properti switch system println aggreg warn true fals default true true print count warn system println type rather log warn system println perform tune system println cachedbag memusag mem fraction default memori system println note memori share across larg bag use applic system println skewedjoin reduc memusagea mem fraction default memori system println specifi fraction heap avail reduc perform join system println exec nocombin true fals default fals system println disabl combin temporari workaround problem system println opt multiqueri true fals multiqueri default system println disabl multiqueri temporari workaround problem system println opt fetch true fals fetch default system println script contain filter foreach limit stream union dump without job system println tmpfilecompress true fals compress default system println determin whether output intermedi job compress system println tmpfilecompress codec lzo gzip default gzip system println use conjunct tmpfilecompress defin compress type system println split combin true fals split combin default system println determin multipl small file combin singl map system println exec map part agg true fals default fals system println determin partial aggreg do within map phase system println record send combin system println exec map part agg min reduct min aggreg factor default system println map partial aggreg reduc output num record system println factor get disabl system println miscellan system println exectyp mapreduc tez local default mapreduc properti x switch system println addit jar uri comma seper list jar use place regist command system println udf import list colon seper list import use avoid packag name system println stop failur true fals default fals set true termin first error system println datetim default tz time offset e g default default timezon host system println determin timezon use handl datetim datatyp fs system println artifact download locat path download artifact default groovi grape system println determin locat download artifact regist jar use ivi coordin system println addit hadoop properti specifi privat static string valid log file string log file name file script file string strip script name null script file null script file directori string script file ab path tri script file ab path script file get canon path strip script name get file canon path script file ab path catch except ioe log warn could comput canon path script file ioe get messag strip script name null string default log file name strip script name null strip script name new date get time log file log file log file name null log file new file log file name check file name directori append default file name file log file directori log file write tri log file name log file get canon path file separ default log file name catch except ioe log warn could comput canon path log file ioe get messag return null return log file name els log warn need write permiss directori log file name creat log file return null els rel path absolut path log file check write directori file store log file exist log file write tri log file name new file log file name get canon path catch except ioe log warn could comput canon path log file ioe get messag return null return log file name els write permiss log file bail error messag log warn write file log file name need write permiss return log file name els log file log file get parent file log file null directori writabl good go log file write tri log file name new file log file name get canon path catch except ioe log warn could comput canon path log file ioe get messag return null return log file name els log warn need write permiss directori log file creat log file return log file name end log file null els default fall end els part log file exist end els part log file directori end log file name null file name null current work directori revert current work directori string curr dir system get properti user dir log file new file curr dir log file name curr dir file separ log file name null default log file name log file name log file write return log file name log warn write log file log file name return null privat static string get file canon path string canon path return canon path substr canon path last index file separ privat static support script lang determin script type string file throw except return script engin get support script lang file privat static int run emb script context context string file string engin throw except log info run emb script engin context connect script engin script engin script engin get instanc engin map string list stat stat map script engin run context file stat util set stat map stat map int fail count int total count list stat lst stat map valu lst null lst empti stat stat lst stat success fail count total count return total count fail count total count return code fail count return code return code 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import java util list import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema import org apach parser sourc locat public class map lookup express extend column express key lookup along type schema correspond type schema valu link key privat string map key public map lookup express oper plan plan string map key super map plan map key map key plan add link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof map lookup express map lookup express po map lookup express po map key compar map key return fals els check nest map equal plan get successor null get plan get successor null return fals els return plan get successor get equal get plan get successor get els get plan get successor null return fals els return true els return fals public logic express get map throw frontend except list oper pred plan get successor pred null return null return logic express pred get public string get lookup key return map key public logic field schema get field schema throw frontend except field schema null return field schema logic express successor logic express plan get successor get logic field schema pred successor get field schema pred null pred type data type pred schema null field schema pred schema get field return field schema els field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema return null public string string string builder msg new string builder msg append name name type field schema null msg append data type find type name field schema type els msg append null msg append uid field schema null msg append field schema uid els msg append null msg append key map key msg append return msg string overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi null copi new map lookup express lg exp plan get lookup key one input expect logic express input logic express plan get successor get logic express input copi input deep copi lg exp plan lg exp plan add input copi lg exp plan connect copi input copi copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io except import java io print stream import java text simpl date format import java util array list import java util calendar import java util hash map import java util iter import java util link list import java util list import java util map import java util properti import javax xml parser parser configur except import javax xml transform transform except import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f file system import org apach hadoop f path import org apach hadoop mapr counter import org apach hadoop mapr job client import org apach hadoop mapr job conf import org apach hadoop mapr job import org apach hadoop mapr run job import org apach hadoop mapreduc cluster import org apach hadoop mapreduc task report import org apach hadoop mapr jobcontrol job import org apach hadoop mapreduc task type import org apach hadoop mapreduc lib jobcontrol control job import org apach configur import org apach except import org apach runner return code import org apach warn import org apach backend backend except import org apach backend executionengin exec except import org apach backend hadoop datastorag configur util import org apach backend hadoop executionengin job creation except import org apach backend hadoop executionengin launcher import org apach backend hadoop executionengin map reduc layer compil last input stream optim import org apach backend hadoop executionengin map reduc layer plan dot printer import org apach backend hadoop executionengin map reduc layer plan end input setter import org apach backend hadoop executionengin map reduc layer plan intermedi data visitor import org apach backend hadoop executionengin map reduc layer plan oper plan import org apach backend hadoop executionengin map reduc layer plan printer import org apach backend hadoop executionengin map reduc layer plan packag annot import org apach backend hadoop executionengin map reduc layer plan printer import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper join packag import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin shim hadoop shim import org apach impl context import org apach impl impl constant import org apach impl io file local import org apach impl io file spec import org apach impl plan compil messag collector import org apach impl plan compil messag collector messag type import org apach impl plan plan except import org apach impl plan visitor except import org apach impl util configur valid import org apach impl util log util import org apach impl util context import org apach impl util util import org apach tool pigstat output stat import org apach tool pigstat stat import org apach tool pigstat stat util import org apach tool pigstat mapreduc job stat import org apach tool pigstat mapreduc stat util import org apach tool pigstat mapreduc script state import org python googl common collect list main class launch map reduc public class map reduc launcher extend launcher public static final string privat static final log log log factori get log map reduc launcher class privat boolean aggreg warn fals public map reduc launcher super util add shutdown hook prioriti new hang job killer impl constant overrid public void kill tri jc null jc get run job size log info receiv kill signal job job jc get run job org apach hadoop mapreduc job mr job job get job tri mr job null mr job kill job catch except ir throw new except ir log info job job get assign job kill string time stamp new simpl date format yyyi dd mm ss format calendar get instanc get time system err println time stamp job job get assign job kill catch except e log warn encount except cleanup e overrid public void kill job string job configur conf throw backend except tri conf null job conf job conf new job conf conf job client jc new job client job conf job id job name job run job job jc get job id job null system println job id job activ els job kill job log info kill id submit catch except e throw new backend except e get except caus failur backend store locat public except get error file spec spec return failur map get spec overrid public stat launch physic plan php string grp name context pc throw plan except visitor except except exec except job creation except except long sleep time aggreg warn boolean valu pc get properti get properti aggreg warn oper plan mrp compil php pc configur valid valid properti pc get properti configur conf configur util configur pc get properti execut engin exe execut engin pc get execut engin properti default properti new properti job conf default job conf exe get local conf util recomput properti default job conf default properti gener job client check progress job job client stat job client new job client exe get job conf job control compil jcc new job control compil pc conf configur util configur default properti script state get add workflow adjac conf mrp conf start collect statist stat start pc get execut engin instanti stat stat util start collect pc stat job client jcc mrp find intermedi datum store plan destroy compil execut need do intermedi data visitor intermedi visitor new intermedi data visitor mrp intermedi visitor visit list job fail job new link list job list nativ map reduc oper fail nativ new link list nativ map reduc oper list job complet fail job run new link list job list job succ job new link list job int total job mrp size int num job compl doubl last prog long script submit timestamp system current time milli creat except handler job control thread regist handler job control thread job control thread except handler jct except handler new job control thread except handler boolean stop failur boolean valu pc get properti get properti stop failur fals boolean stop failur fals jc null mrp size mrp size stop failur jc jcc compil mrp grp name jc null list map reduc oper root new link list map reduc oper root add mrp get root run nativ mapreduc root first run rest root map reduc oper mro root mro instanceof nativ map reduc oper nativ map reduc oper nat op nativ map reduc oper mro tri script state get emit job submit notif nat op run job num job compl catch except e mrp trim nat op fail nativ add nat op string msg error run nativ mapreduc oper job nat op get job id e get messag string stack trace util get stack strace str e log util write log msg stack trace pc get properti get properti logfil log log info msg stop failur int err code throw new exec except msg err code except doubl prog doubl num job compl total job notifi progress prog last prog last prog prog mrp remov nat op continu initi job wait state list job job without id jc get wait job log info job without id size map reduc job wait submiss notifi listen job submit script state get emit job submit notif job without id size updat stat job compil job stat util updat job mro map jcc get job mro map determin job tracker url string job tracker loc job conf job conf job without id get get job conf tri string port job conf get configur string job tracker add job conf get configur job tracker loc job tracker add substr job tracker add index port substr port index catch except e could get job tracker locat probabl run local mode case n print job tracker locat meaningless local mode job tracker loc null log debug fail get job tracker locat complet fail job run clear set thread context regist class avail final context udf context context get context thread jc thread new thread jc job control overrid public void run context set udf context udf context clone super run jc thread set uncaught except handler jct except handler jc thread set context class loader context get class loader mark time job submit reflect job histori prop job job jc get wait job job conf job conf copi job get job conf job conf copi set script submit timestamp long string script submit timestamp job conf copi set job submit timestamp long string system current time milli job set job conf job conf copi setup do let launch job jc thread start tri flag whether warn failur loop user notic failur earli boolean warn failur true wait till finish jc finish jc thread join sleep time list job job assign id run new array list job job job job without id job get assign job null job assign id run add job log info hadoop job id job get assign job display alia process map reduc oper mro jcc get job mro map get job mro null string alia script state get get alia mro log info process alias alia string alia locat script state get get alia locat mro log info detail locat alia locat updat statist job job id set stat util add job stat job script state get emit job start notif job get assign job string els job assign id yet job without id remov job assign id run doubl prog num job compl calcul progress jc total job notifi progress prog last prog list job runn job jc get run job runn job null string builder msg new string builder object object runn job job j job object j null msg append j get assign job append msg length msg set char msg length log info run job msg last prog prog collect job stat frequent poll complet job stat util accumul stat jc stop failur enabl need stop immedi job fail stop failur stop job failur stop failur otherwis display warn messag failur stop failur warn failur jc get fail job empti n warn group job warn failur fals log warn ooop job fail specifi stop failur want stop immedi failur check job control except first job control fail launch job job check failur job control except null job control except instanceof except job control except stack trace null log util write log error messag job control job control except stack trace pc get properti get properti logfil log throw job control except els int err code string msg unexpect error launch map reduc job throw new exec except msg err code except job control except jc get fail job empti stop stop failur enabl stop failur stop job failur stop failur stop failur one store job fail sure job complet fail shall stop depend job job job jc get fail job complet fail job run add job log info job job get assign job fail stop run depend job fail job add jc get fail job int remov op jcc updat op plan complet fail job run num job compl remov op list job job jc get success job jcc move result job succ job add job collect final statist stat util accumul stat jc catch except e throw e final jc stop script state get emit progress updat notif log info complet boolean fail fals fail nativ size fail true boolean valu pc get properti get properti configur true clean intermedi datum string path intermedi visitor get intermedi skip non file system path hbase see hadoop shim file system impl new path path conf file local delet path pc look see job fail need report fail job null fail job size except backend except null job fj fail job tri get stat fj true pc catch except e backend except e list store st jcc get store fj store st st failur map put st get file backend except stat util set backend except fj backend except fail true stat collect done log result stat util stop collect true stat util stop collect also comput return code base total job run job success job fail fail fail stat get success map enum long warn agg map new hash map enum long succ job null job job succ job list store st jcc get store job store st st st tmp store creat file output locat output locat filesystem dir creat success file job st els log debug success store result st get file get file name get stat job fals pc aggreg warn comput warn aggreg job warn agg map aggreg warn compil messag collector log aggreg warn agg map messag type warn log fail log info success els succ job null succ job size log info job fail stop run depend job els log info fail jcc reset int ret fail succ job null succ job size return code return code return code stat stat stat util get stat ret run cleanup store output stat output stat get output stat store store output get store tri output success store get store func cleanup failur store get file get file name new org apach hadoop mapreduc job output get conf els store get store func cleanup success store get file get file name new org apach hadoop mapreduc job output get conf catch except e throw new exec except e catch abstract method error nsme swallow mean run old instanc store func n implement method stop failur throw new exec except stop execut job failur stop failur option except return stat stop failur enabl job fail stop job param stop failur whether enabl return true fail job stop failur enabl privat boolean stop job failur boolean stop failur throw except interrupt except jc get fail job empti return fals stop failur list control job readi job list jc get readi job list list control job run job list jc get run job list readi job list size run job list size log info job fail fail readi run job stop failur control job job readi job list job fail job fail readi job stop failur job get mapr job id control job job run job list job fail job fail run job stop failur job get mapr job id return true return fals log progress notifi listen suffici progress param prog current progress param last prog progress last time privat boolean notifi progress doubl prog doubl last prog prog last prog int per com int prog per com log info per com complet script state get emit progress updat notif per com return true return fals overrid public void explain physic plan php context pc print stream ps string format boolean verbos throw plan except visitor except except log trace enter map reduc launcher explain oper plan mrp compil php pc format equal text printer printer new printer ps mrp printer set verbos verbos printer visit els format equal xml tri printer printer new printer ps mrp printer visit printer close plan catch parser configur except e e print stack trace catch transform except e e print stack trace els ps println ps println map reduc plan ps println dot printer printer new dot printer mrp ps printer set verbos verbos printer dump ps println public oper plan compil physic plan php context pc throw plan except except visitor except compil comp new compil php pc comp compil comp aggreg scalar file comp connect soft link oper plan plan comp get plan display warn messag compil comp get messag collector log messag messag type warn aggreg warn log string last input chunk size pc get properti get properti last input chunksiz join packag string prop pc get properti get properti configur pc illustr true equal prop boolean map agg boolean valu pc get properti get properti configur fals combin optim co new combin optim plan map agg co visit display warn messag combin optim co get messag collector log messag messag type warn aggreg warn log optim job load store first job follow sampl job sampl optim new sampl optim plan pc visit must ensur reduc limit add singl reduc job pc illustr limit adjust la new limit adjust plan pc la visit la adjust optim use secondari sort key possibl prop pc get properti get properti configur pc illustr true equal prop secondari key optim sk optim new secondari key optim plan sk optim visit optim key valu handl packag packag annot pkg annot new packag annot plan pkg annot visit optim join last input stream optim liso new compil last input stream optim plan last input chunk size liso visit figur type key map plan need key null creat appropri nullabl writabl object key type discoveri visitor kdv new key type discoveri visitor plan kdv visit remov filter constant true oper introduc split noop filter remov f rem new noop filter remov plan f rem visit boolean multi queri boolean valu pc get properti get properti configur true multi queri reduc number oper plan gener multi queri multi store script multi queri optim mq optim new multi queri optim plan pc illustr mq optim visit remov unnecessari store happen split case run multi queri noop filter remov noop store remov rem new noop store remov plan rem visit check whether stream oper present multi queri optim shift stream map reduc etc end input setter checker new end input setter plan checker visit boolean accum boolean valu pc get properti get properti opt accumul true accum accumul optim accum new accumul optim plan accum visit return plan privat boolean mark output dir job job return job get job conf get boolean configur fals privat void creat success file job job store store throw except mark output dir job path output path new path store get file get file name string scheme output path uri get scheme hadoop shim file system impl output path job get job conf file system f output path get file system job get job conf f exist output path creat file folder mark path file path new path output path f exist file path f creat file path close els log warn file system scheme scheme creat success file suppress warn deprec void comput warn aggreg job job map enum long agg map tri counter counter job stat get counter job counter null long null counter count agg map get warn null agg map get warn null counter count agg map put warn null counter count enum e warn valu e warn long current count agg map get e current count current count null current count code check counter null need report user number warn aggreg may correct fact counter null hadoop bug bug fix hadoop null handl code never hit see counter null current count counter get counter e agg map put e current count catch except e string msg unabl retriev job comput warn aggreg log warn msg privat void get stat job job boolean err dbg context context throw exec except job job job get assign job string job messag job get messag except backend except null job null tri log util write log backend error messag job submiss job messag context get properti get properti logfil log backend except get except string job messag catch except e int err code string msg unabl recreat except backend error job messag throw new exec except msg err code except throw new exec except backend except tri iter task report map rep job stat get task report job task type map rep null get error messag map rep map err dbg context total hadoop time spend comput time spend map rep map rep null iter task report red rep job stat get task report job task type red rep null get error messag red rep reduc err dbg context total hadoop time spend comput time spend red rep red rep null catch except e job get state job job succeed let user know unabl get statist log warn unabl get job relat diagnost els throw new exec except e catch except e throw new exec except e 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io byte array output stream import java util array list import java util hash set import java util iter import java util list import java util set import org apach backend hadoop executionengin map reduc layer plan op plan visitor import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper counter import org apach backend hadoop executionengin physic layer relat oper rank import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer relat oper union import org apach impl plan node id gener import org apach impl plan oper import org apach impl plan oper key import org apach impl plan plan except import org apach impl plan visitor except import org apach impl util multi map oper model map reduc job act host plan execut map reduc option combin phase emb oper plan order captur depend amongst job public class map reduc oper extend oper op plan visitor privat static final long serial version physic plan execut map phase public physic plan map plan physic plan execut reduc phase public physic plan reduc plan physic plan execut combin phase one exist use optim public physic plan combin plan key map plan need key null creat appropri nullabl writabl object public byte map key type record map key type splitte public byte map key type splitte indic map plan creation complet boolean map do fals indic reduc plan creation complet boolean reduc do fals indic oper use end input flag map plan boolean end input map fals indic oper use end input flag reduc plan boolean end input reduc fals indic job order job boolean global sort fals indic limit sort boolean limit sort fals indic entir purpos map reduc job limit chang anyth els help packag annot find right packag annot boolean limit fals featur true put ident combin mapreduc job speed thing boolean need distinct combin fals true use secondari key map reduc job boolean use secondari key fals quantil file name global sort true string quant file sort order column asc true desc fals boolean sort order sort order secondari key boolean secondari sort order public set string fs public set physic oper scalar indic compar use boolean compar use fals transient node id gener nig privat string scope int request parallel estim runtim int estim parallel calcul runtim int runtim parallel name custom partition use string custom partition null last limit valu map reduc oper need limit adjust add addit map reduc oper reduc long limit limit also express see physic plan limit plan null indic oper splitter oper oper end due plit oper privat boolean splitter fals set true skew join privat boolean skew join fals name partit file gener sampl process use skew join privat string skew join partit file flag commun compil job control compil kind compar use hadoop sort oper default set fals make provid raw compar set true index job gener map side cogroup merg join privat boolean use type compar fals flag indic small input split need combin form larg one order reduc number mapper merg join tabl combin correct privat boolean combin small split true map physic oper physic plan one plan need physic oper chang replac compil due e g optim public multi map physic oper physic oper phi map privat static enum indic job sampl job indic job merg index indic job group job indic job cogroup job indic job regular join job public map reduc oper oper key k super k map plan new physic plan combin plan new physic plan reduc plan new physic plan fs new hash set string scalar new hash set physic oper nig node id gener get gener scope k get scope phi map new multi map physic oper physic oper overrid public string name return map reduc key string privat string shift string tab string str string tab string builder sb new string builder string spl str split n int spl length sb append tab sb append spl sb append n sb delet sb length n length sb length return sb string use string represent compon plan identifi overrid public string name string udf str get fs str string builder sb new string builder map reduc request parallel udf str equal udf str key string n int index sb length byte array output stream bao new byte array output stream map plan empti map plan explain bao string mp new string bao byte array sb append shift string tab mp els sb append map plan empti reduc plan empti bao reset reduc plan explain bao string rp new string bao byte array sb insert index shift string tab rp n els sb insert index reduc plan empti n return sb string privat string get fs str string builder sb new string builder fs null fs size string str fs sb append str substr str last index sb append sb delet char sb length return sb string overrid public boolean support multipl input return true overrid public boolean support multipl output return true overrid public void visit op plan visitor v throw visitor except v visit op public boolean map do return map do public void set map do boolean map do map do map do public void set map do singl boolean map do throw plan except map do map do map do map plan get leav size map plan add leaf get union public void set map do multipl boolean map do throw plan except map do map do map do map plan get leav size map plan add leaf get union privat union get union return new union new oper key scope nig get next node id scope public boolean reduc do return reduc do public void set reduc do boolean reduc do reduc do reduc do public boolean global sort return global sort public boolean skew join return skew join partit file null public void set skew join partit file string file skew join partit file file public string get skew join partit file return skew join partit file public void set skew join boolean sk join skew join sk join public boolean get skew join return skew join public void set global sort boolean global sort global sort global sort public boolean limit sort return limit sort public void set limit sort boolean la limit sort la public boolean limit return limit public void set limit boolean limit limit limit public boolean index return featur public void mark index featur public boolean sampler return featur public void mark sampler featur public boolean group return featur public void mark group featur public boolean cogroup return featur public void mark cogroup featur public boolean regular join return featur public void mark regular join featur public boolean need distinct combin return need distinct combin public void set need distinct combin boolean nic need distinct combin nic public string get quant file return quant file public void set quant file string quant file quant file quant file public void set sort order boolean sort order null sort order return sort order new boolean sort order length int sort order length sort order sort order public void set secondari sort order boolean secondari sort order null secondari sort order return secondari sort order new boolean secondari sort order length int secondari sort order length secondari sort order secondari sort order public boolean get sort order return sort order public boolean get secondari sort order return secondari sort order return whether end input set map plan public boolean end input set map return end input map param end input map stream map set public void set end input map boolean end input map end input map end input map return whether end input set reduc plan public boolean end input set reduc return end input reduc param end input reduc stream reduc set public void set end input reduc boolean end input reduc end input reduc end input reduc public int get request parallel return request parallel public string get custom partition return custom partition public void set splitter boolean spl splitter spl public boolean splitter return splitter public boolean get use secondari key return use secondari key public void set use secondari key boolean use secondari key use secondari key use secondari key protect boolean use type compar return use type compar protect void use type compar boolean use type compar use type compar use type compar protect void combin small split combin small split fals public boolean combin small split return combin small split public boolean rank oper return get rank oper id size public array list string get rank oper id array list string oper d new array list string iter physic oper map root map plan get root iter map root next physic oper oper map root next oper instanceof rank oper d add rank oper get oper return oper d public boolean counter oper return get counter oper null public boolean row number counter counter get counter oper return counter null counter row number fals public string get oper counter counter get counter oper return counter null counter get oper null privat counter get counter oper counter counter get counter oper map plan counter null counter get counter oper reduc plan return counter privat counter get counter oper physic plan plan physic oper oper iter physic oper plan get leav iter next oper next oper instanceof counter return counter oper els oper instanceof store list physic oper pred plan get predecessor oper pred null physic oper pred pred pred instanceof counter return counter pred return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io except import org apach hadoop conf configur import org apach hadoop mapreduc output format import org apach hadoop mapreduc record writer import org apach hadoop mapreduc task attempt context import org apach hadoop mapreduc task input output context import org apach store func interfac import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer relat oper store impl import org apach backend hadoop executionengin shim hadoop shim import org apach tool pigstat stat util import org apach tool pigstat statu report class use store write via output collector record writer set modifi job configur forc write specif subdirectori main output directori do multipl output directori use job public class map reduc store impl extend store impl privat task attempt context context privat statu report report privat record writer writer public map reduc store impl task input output context context get copi configur chang configur like set output locat affect caller copi configur output conf new configur context get configur report statu report get instanc report set context new task context context make copi context use sinc task map reduc could multipl store make copi context get write differ store context hadoop shim creat task attempt context output conf context get task attempt overrid public store func interfac creat store func store store throw except store func interfac store func store get store func call set store locat store func give job typic result output format store func store output locat configur job format set locat method merg modifi configur configur context output format set locat context store output format output format store func get output format creat new record writer tri writer output format get record writer context catch interrupt except e throw new except e store func prepar write writer return store func overrid public void tear throw except writer null tri writer close context catch interrupt except e throw new except e writer null overrid public void clean throw except writer null tri writer close context catch interrupt except e throw new except e writer null public void incr record counter string name long incr report incr counter stat util name incr 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic relat import java util list import org apach sort col info import org apach sort col info order import org apach backend hadoop executionengin physic layer logic physic translat except import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan logic visitor finder public class map side merg valid public boolean valid map side merg list oper pred oper plan lp throw logic physic translat except int err code string err msg merg join cogroup support filter foreach ascend sort load predecessor find pred null oper lo pred lo instanceof filter lo instanceof gener lo instanceof inner load lo instanceof load lo instanceof split output lo instanceof split lo instanceof join join lo get join type join accept sort op lo accept op lo throw new logic physic translat except err msg err code repeat sort top tree reach lo instanceof sort valid map side merg lp get predecessor lo lp visit everyth good return true privat boolean accept op oper lo throw logic physic translat except lo instanceof oper plan inner plan lo get inner plan return valid map side merg inner plan get sink inner plan els return fals privat boolean accept sort op oper op throw logic physic translat except op instanceof sort return fals sort sort sort op tri sort col info col info sort get sort info get sort col info list realli check sort join key order col info get sort order order return fals catch frontend except e throw new logic physic translat except e return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java util array list import java util list import org apach func spec import org apach datum data type import org apach impl logic layer frontend except import org apach impl logic layer schema schema gener maximum set valu class implement link org apach algebra possibl execut perform distribut fashion p oper numer type chararray also oper bytearray cast doubl expect bag tupl one record know schema function pass bag integ long use special adapt version use integ arithmet compar datum return type match input type p implement link org apach accumul interfac well never prefer method usag avail case combin use give calcul public class extend algebra byte array math base public set op public static class intermedi extend algebra byte array math base intermedi overrid public get op return public static class final extend algebra byte array math base final overrid public get op return non javadoc see org apach eval func get arg func map overrid public list func spec get arg func map throw frontend except list func spec func list new array list func spec func list add new func spec get class get name schema gener nest schema data type data type func list add new func spec doubl max class get name schema gener nest schema data type data type func list add new func spec float max class get name schema gener nest schema data type data type func list add new func spec int max class get name schema gener nest schema data type data type func list add new func spec long max class get name schema gener nest schema data type data type func list add new func spec string max class get name schema gener nest schema data type data type func list add new func spec date time max class get name schema gener nest schema data type data type func list add new func spec big decim max class get name schema gener nest schema data type data type func list add new func spec big integ max class get name schema gener nest schema data type data type return func list 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic rule import java util array list import java util collect import java util hash set import java util iter import java util list import java util set import org apach newplan oper import org apach newplan oper plan import org apach newplan oper sub plan import org apach newplan logic express logic express plan import org apach newplan logic express project express import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach newplan optim rule import org apach newplan optim transform import org apach impl logic layer frontend except import org apach impl util pair import org apach impl util util public class merg extend rule privat oper sub plan sub plan public merg string name super name fals overrid protect oper plan build pattern match foreach logic plan plan new logic plan logic relat oper foreach new plan plan add foreach return plan overrid public transform get new transform return new merg transform public class merg transform extend transform overrid public boolean check oper plan match throw frontend except foreach match get sourc get list oper succ current plan get successor foreach succ null succ size succ get instanceof return fals foreach succ get check second foreach gener inner load iter oper foreach get inner plan get oper next oper op next op instanceof gener op instanceof inner load return fals check first foreach flatten gener statement gener gen gener foreach get inner plan get sink get boolean flatten gen get flatten flag flatten return fals gen get user defin schema null logic schema gen get user defin schema null return fals check non st foreach output refer second foreach otherwis may express calcul defeat benefit optim set integ input new hash set integ boolean duplic input fals oper op foreach get inner plan get sourc sourc inner load must gener happen st reli input nd op instanceof inner load inner load inner load inner load op int input inner load get project get col num input contain input duplic input true break els input add input inner load get project rang star project return fals duplic input case first foreach contain inner load gener allow output plan simpl project duplic input iter oper foreach get inner plan get oper next oper op next op instanceof gener op instanceof inner load return fals op instanceof gener list logic express plan output plan gener op get output plan logic express plan output plan output plan iter oper iter output plan get oper iter next iter next instanceof project express return fals return true overrid public oper plan report chang return sub plan op inner load get copi otherwis return op privat oper get oper merg oper op oper plan new plan new oper op merg op op instanceof inner load op merg new inner load new plan new inner load op get col num els op merg set plan new plan return op merg privat oper add branch plan gener gen int branch oper plan new plan new oper op next gen oper op gen get plan get predecessor gen get branch oper op merg get oper merg op new plan new new plan add op merg op next gen op merg oper pred gen get plan get predecessor op null pred gen get plan get predecessor op get els pred null pred null oper pred merg get oper merg pred new plan new new plan add pred merg new plan connect pred merg op op pred gen get plan get predecessor pred null pred gen get plan get predecessor pred get els pred null return op next gen overrid public void transform oper plan match throw frontend except sub plan new oper sub plan current plan foreach match get sourc get gener gen gener foreach get inner plan get sink get foreach current plan get successor foreach get gener gen gener foreach get inner plan get sink get new new current plan logic plan new inner plan new logic plan new set inner plan new inner plan new set alia foreach get alia new set request parallel foreach get request parallel list logic express plan new exp list new array list logic express plan gener new gen new gener new inner plan new exp list gen get flatten flag new gen set user defin schema gen get user defin schema new inner plan add new gen logic express plan exp gen get output plan logic express plan new exp plan new logic express plan logic express plan exp copi exp deep copi new exp plan merg exp copi add express plan nd list oper exp sink new array list oper exp sink add new exp plan get sink oper exp sink exp sink exp sink instanceof project express find refer express plan st project express proj project express exp sink inner load inner load inner load foreach get inner plan get predecessor gen get proj get input num int exp po inner load get project get col num logic express plan exp gen get output plan get exp po logic express plan exp copi exp deep copi list oper exp sourc new exp plan merg exp copi copi express plan new connect express plan nd oper exp sourc exp sourc get new exp plan get predecessor exp sink null oper exp next sink new exp plan get predecessor exp sink get pair integ integ po new exp plan disconnect exp next sink exp sink new exp plan remov exp sink new exp plan connect exp next sink po first exp sourc els new exp plan remov exp sink copi refer inner plan new list oper exp sink new exp plan get sink oper exp sink exp sink exp sink instanceof project express oper op next gen add branch plan gen project express exp sink get input num new inner plan new new inner plan connect op next gen new gen int input new inner plan get predecessor new gen index op next gen project express exp sink set input num input new exp list add new exp plan adjust attach op logic express plan p new gen get output plan iter oper iter p get oper iter next oper op iter next op instanceof project express project express op set attach relat op new gen iter oper iter new get inner plan get oper iter next oper op iter next op instanceof inner load inner load op get project set attach relat op new remov foreach foreach add new foreach rebuild soft link collect oper new soft link pred util merg collect current plan get soft link predecessor foreach current plan get soft link predecessor foreach collect oper foreach soft link pred null current plan get soft link predecessor foreach null foreach soft link pred new array list oper foreach soft link pred add current plan get soft link predecessor foreach foreach soft link pred null oper soft pred foreach soft link pred current plan remov soft link soft pred foreach collect oper foreach soft link pred null current plan get soft link predecessor foreach null foreach soft link pred new array list oper foreach soft link pred add current plan get soft link predecessor foreach foreach soft link pred null oper soft pred foreach soft link pred current plan remov soft link soft pred foreach current plan remov reconnect foreach current plan replac foreach new new soft link pred null oper soft pred new soft link pred current plan creat soft link soft pred new sub plan add new 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io except import java util list import org apach hadoop io writabl compar import org apach hadoop mapreduc input format import org apach hadoop mapreduc job import org apach hadoop mapreduc record reader import org apach load caster import org apach load func import org apach order load func import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach datum tupl import org apach datum tupl factori import org apach impl context import org apach impl plan node id gener import org apach impl plan oper key import org apach impl util object serial merg join index use gener fli index merg join effici sampl first record everi block right side input return tupl follow format key key posit split index tupl sort write index file public class merg join index extend load func privat boolean first rec true privat transient tupl factori tupl factori privat local rearrang lr privat physic plan preced phi plan privat int key cnt privat physic oper right pipelin leaf privat physic oper right pipelin root privat load func loader privat split split null privat boolean ignor null key param func spec loader specif param inner plan serial version plan want keep key index file whole tupl need thu plan get key sampl tupl param serial phi plan serial physic plan right side throw exec except suppress warn uncheck public merg join index string func spec string inner plan string serial phi plan string udf cntxt signatur string scope string ignor null throw exec except loader load func context instanti func spec func spec loader set context signatur udf cntxt signatur ignor null key boolean pars boolean ignor null tri list physic plan inner plan list physic plan object serial deseri inner plan lr new local rearrang new oper key scope node id gener get gener get next node id scope lr set plan inner plan key cnt inner plan size preced phi plan physic plan object serial deseri serial phi plan preced phi plan null preced phi plan get leav size preced phi plan get root size int err code string err msg expect physic plan exactli one root one leaf throw new exec except err msg err code except right pipelin leaf preced phi plan get leav get right pipelin root preced phi plan get root get right pipelin root set input null catch except e int err code string msg unabl deseri plan index throw new exec except msg err code e tupl factori tupl factori get instanc overrid public tupl get next throw except first rec sampl one record per block return null writabl compar posit order load func loader get split compar split get wrap split object key null tupl wrapper tupl tupl factori new tupl key cnt true tupl read tupl loader get next null read tupl hit end int key cnt wrapper tupl set null wrapper tupl set key cnt posit first rec fals return wrapper tupl null preced phi plan lr attach input read tupl key tupl lr get next tupl result get lr detach input null key ignor null key tupl null key drop continu break physic plan right pipelin root attach input read tupl boolean fetch new tup true result re right pipelin leaf get next tupl switch re return statu case statu lr attach input tupl re result key tupl lr get next tupl result get lr detach input null key ignor null key tupl null key drop continu fetch new tup fals break case statu fetch new tup true break default int err code string err msg expect return statu find re return statu throw new exec except err msg err code break fetch new tup break key instanceof tupl tupl tup key tupl key int tup key size wrapper tupl set tup key get els wrapper tupl set key wrapper tupl set key cnt posit wrapper tupl set key cnt split get split index first rec fals return wrapper tupl non javadoc see org apach load func get input format overrid public input format get input format throw except return loader get input format non javadoc see org apach load func get load caster overrid public load caster get load caster throw except return loader get load caster non javadoc see org apach load func prepar read org apach hadoop mapreduc record reader org apach hadoop mapreduc input split overrid public void prepar read record reader reader split split throw except loader prepar read reader split split split non javadoc see org apach load func set locat java lang string org apach hadoop mapreduc job overrid public void set locat string locat job job throw except loader set locat locat job 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java util array list import java util list import org apach func spec import org apach datum data type import org apach impl logic layer frontend except import org apach impl logic layer schema schema gener minimum set valu class implement link org apach algebra possibl execut perform distribut fashion p oper numer type chararray also oper bytearray cast doubl expect bag tupl one record know schema function pass bag integ long use special adapt version use integ arithmet compar datum return type match input type p implement link org apach accumul interfac well never prefer method usag avail case combin use give calcul public class extend algebra byte array math base public set op public static class intermedi extend algebra byte array math base intermedi overrid public get op return public static class final extend algebra byte array math base final overrid public get op return non javadoc see org apach eval func get arg func map overrid public list func spec get arg func map throw frontend except list func spec func list new array list func spec func list add new func spec get class get name schema gener nest schema data type data type func list add new func spec doubl min class get name schema gener nest schema data type data type func list add new func spec float min class get name schema gener nest schema data type data type func list add new func spec int min class get name schema gener nest schema data type data type func list add new func spec long min class get name schema gener nest schema data type data type func list add new func spec string min class get name schema gener nest schema data type data type func list add new func spec date time min class get name schema gener nest schema data type data type func list add new func spec big decim min class get name schema gener nest schema data type data type func list add new func spec big integ min class get name schema gener nest schema data type data type return func list 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java math big integ import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except public class mod extend binari express oper privat static final long serial version public mod oper key k super k public mod oper key k int rp super k rp overrid public void visit phi plan visitor v throw visitor except v visit mod overrid public string name return mod data type find type name result type key string protect number mod number number b byte datum type throw exec except switch datum type case data type return integ valu integ integ b case data type return long valu long long b case data type return big integ mod big integ b default throw new exec except call unsupport number class data type find type name datum type protect result gener get next byte datum type throw exec except result be accum child null datum type r null return be byte statu result re re lh get next datum type statu re return statu statu statu re result null return re number leav number re result re rh get next datum type statu re return statu statu statu re result null return re number right number re result re result mod leav right datum type return re overrid public result get next integ throw exec except return gener get next data type overrid public result get next long throw exec except return gener get next data type overrid public result get next big integ throw exec except return gener get next data type overrid public mod clone throw clone support except mod clone new mod new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat mod oper public class mod express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public mod express oper plan plan logic express lh logic express rh super mod plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof mod express mod express ao mod express return ao get lh equal get lh ao get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null get lh get type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new mod express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io except import java io serializ import java util array list import java util collect import java util hash map import java util hash set import java util iter import java util list import java util map import java util set import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f file system import org apach hadoop f path import org apach hadoop mapreduc input format import org apach hadoop mapreduc input split import org apach hadoop mapreduc job import org apach collect load func import org apach exec type import org apach func spec import org apach index load func import org apach load func import org apach order load func import org apach configur import org apach except import org apach warn import org apach backend executionengin exec except import org apach backend hadoop datastorag configur util import org apach backend hadoop executionengin map reduc layer plan op plan visitor import org apach backend hadoop executionengin map reduc layer plan oper plan import org apach backend hadoop executionengin map reduc layer plan scalar phi finder import org apach backend hadoop executionengin map reduc layer plan finder import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper constant express import org apach backend hadoop executionengin physic layer express oper project import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper join packag import org apach backend hadoop executionengin physic layer relat oper lite packag import org apach backend hadoop executionengin physic layer relat oper collect group import org apach backend hadoop executionengin physic layer relat oper counter import org apach backend hadoop executionengin physic layer relat oper cross import org apach backend hadoop executionengin physic layer relat oper distinct import org apach backend hadoop executionengin physic layer relat oper join import org apach backend hadoop executionengin physic layer relat oper filter import org apach backend hadoop executionengin physic layer relat oper import org apach backend hadoop executionengin physic layer relat oper global rearrang import org apach backend hadoop executionengin physic layer relat oper limit import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach backend hadoop executionengin physic layer relat oper merg cogroup import org apach backend hadoop executionengin physic layer relat oper merg join import org apach backend hadoop executionengin physic layer relat oper nativ import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper partit rearrang import org apach backend hadoop executionengin physic layer relat oper rank import org apach backend hadoop executionengin physic layer relat oper skew join import org apach backend hadoop executionengin physic layer relat oper sort import org apach backend hadoop executionengin physic layer relat oper split import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer relat oper stream import org apach backend hadoop executionengin physic layer relat oper union import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper packag packag type import org apach backend hadoop executionengin physic layer util plan helper import org apach backend hadoop executionengin shim hadoop shim import org apach backend hadoop executionengin util map red util import org apach datum data type import org apach impl context import org apach impl builtin default index loader import org apach impl builtin find quantil import org apach impl builtin get mem num row import org apach impl builtin first reduc key import org apach impl builtin partit skew key import org apach impl builtin poisson sampl loader import org apach impl builtin random sampl loader import org apach impl io file local import org apach impl io file spec import org apach impl plan compil messag collector import org apach impl plan compil messag collector messag type import org apach impl plan depth first walker import org apach impl plan node id gener import org apach impl plan oper import org apach impl plan oper key import org apach impl plan oper plan import org apach impl plan plan except import org apach impl plan visitor except import org apach impl util compil util import org apach impl util multi map import org apach impl util object serial import org apach impl util pair import org apach impl util uri util import org apach impl util util import org apach newplan logic relat join compil compil give physic plan map reduc oper convert job control structur implement visitor physic plan compil current support oper except sort oper use predecessor base depth first travers compil oper first compil predecessor map reduc oper tri merg current oper one goal keep number oper minimum also merg multipl map job creat compil input individu singl job new map job creat content previou map plan add howev state previou map plan manual move add someth new take care ex request parallel case block oper split new map reduc oper start use store load combin connect two oper whenev happen care take add oper plan connect appropri public class compil extend phi plan visitor context context plan compil physic plan plan plan map reduc oper oper plan plan current map reduc oper compil map reduc oper cur op output compil input map reduc oper compil input null split oper see till maintain haunt travers split oper revisit differ path map store split job whenev hit split creat new oper connect split job use load store also plan map oper key map reduc oper split see node id gener nig privat string scope privat finder udf finder privat compil messag collector messag collector null privat map physic oper map reduc oper phi op map public static final string user compar func privat static final log log factori get log compil class public static final string file concaten threshold public static final string optimist file concaten privat int file concaten threshold privat boolean optimist file concaten fals public compil physic plan plan throw compil except plan null public compil physic plan plan context context throw compil except super plan new depth first walker physic oper physic plan plan plan plan context context split see new hash map oper key map reduc oper plan new oper plan nig node id gener get gener udf finder new finder list physic oper root plan get root root null root size int err code string msg intern error find root physic plan throw new compil except msg err code except scope root get get oper key get scope messag collector new compil messag collector phi op map new hash map physic oper map reduc oper file concaten threshold integ pars int context get properti get properti optimist file concaten context get properti get properti fals equal true info file concaten threshold file concaten threshold optimist optimist file concaten public void aggreg scalar file throw plan except except list map reduc oper mr op list new array list map reduc oper map reduc oper mr op plan mr op list add mr op configur conf configur util configur context get properti boolean combin conf get boolean split combin fals set file spec see new hash set file spec map reduc oper mro scalar consum mr op list physic oper scalar mro scalar consum scalar map reduc oper mro scalar produc phi op map get scalar scalar instanceof store file spec old spec store scalar get file see contain old spec continu see add old spec combin mro scalar produc reduc plan empti mani input file mro scalar produc conf mro scalar produc request parallel file concaten threshold physic plan pl mro scalar produc reduc plan empti mro scalar produc map plan mro scalar produc reduc plan file spec new spec get temp file spec replac old spec mro new spec new find store name visitor pl new spec old spec visit see add new spec store new sto get store new sto set file old spec map reduc oper cat op get concaten job new spec mro scalar produc new sto plan connect mro scalar produc cat op need add physic plan phi op map softlink creat phi op map put new sto cat op plan add new sto physic oper succ plan get soft link successor scalar array new physic oper plan creat soft link new sto succ plan remov soft link scalar succ use get compil plan return map reduc plan build compil public oper plan get plan return plan use get plan compil return physic plan overrid public physic plan get plan return plan public compil messag collector get messag collector return messag collector front end method user call compil plan assum submit plan store oper leaf return map reduc plan throw except throw plan except throw visitor except public oper plan compil throw except plan except visitor except list physic oper leav plan get leav context illustr physic oper op leav op instanceof store int err code string msg expect leaf reduc plan alway store find op get class get simpl name throw new compil except msg err code except get store nativ oper sort order oper id compil plan list store store plan helper get physic oper plan store class list nativ nativ r plan helper get physic oper plan nativ class list physic oper op context illustr op new array list physic oper store size nativ r size op add store els op new array list physic oper leav size nativ r size op add leaf op add nativ r collect sort op physic oper op op compil op return plan public void connect soft link throw plan except except physic oper op plan plan get soft link predecessor op null physic oper pred plan get soft link predecessor op map reduc oper phi op map get pred map reduc oper phi op map get op continu plan get predecessor null plan get predecessor contain plan connect compil plan op map reduc oper store cur op param op throw except throw plan except throw visitor except privat void compil physic oper op throw except plan except visitor except artifact visitor need save overwritten map reduc oper prev comp inp compil input compil predecessor oper store away use compil op list physic oper predecessor plan get predecessor op op instanceof nativ predecessor store alreadi process n process els predecessor null predecessor size process entir script multiqueri get situat load predecessor mean depend store earli plan need take depend connect respect oper time remov connect physic oper way job run right order op instanceof load predecessor size int err code string msg expect one predecessor load get predecessor size throw new plan except msg err code except physic oper p predecessor get map reduc oper oper null p instanceof store p instanceof nativ oper phi op map get p els int err code string msg predecessor load store mapreduc oper get p get class throw new plan except msg err code except need new oper cur op get op cur op map plan add op plan add cur op plan disconnect op p plan connect oper cur op phi op map put op cur op return collect sort predecessor compil input new map reduc oper predecessor size int physic oper pred predecessor pred instanceof split split see contain key pred get oper key compil input start new split pred get split store split see get pred get oper key continu compil pred compil input cur op els predecessor mostli load start creat new op add first oper op also add plan cur op get op cur op map plan add op op null op instanceof load load op get file null load op get file get func spec null cur op fs add load op get file get func spec string plan add cur op phi op map put op cur op return input compil someth input oper op op visit op get request parallel cur op request parallel n want chang prallel skew join due sampl pre alloc reduc skew key cur op skew join cur op request parallel op get request parallel compil input prev comp inp privat map reduc oper get op return new map reduc oper new oper key scope nig get next node id scope privat nativ map reduc oper get nativ op string mr jar string paramet return new nativ map reduc oper new oper key scope nig get next node id scope mr jar paramet privat load get load load ld new load new oper key scope nig get next node id scope ld set pc context ld set tmp load true return ld privat store get store store st new store new oper key scope nig get next node id scope mark store tmp store could remov optim n user request st set tmp store true return st map oper oper whose map plan still open take non block oper reduc oper oper whose map plan do reduc plan open take non block oper use compil non block oper logic simpl singl input push oper whichev phase open otherwis merg compil input list oper first oper merg oper consist map oper rest reduc oper reduc plan can n merg add input oper op merg map oper map plan leaf connect reduc oper use store load combin input oper leaf also care take connect oper accord depend param op throw plan except throw except privat void non block physic oper op throw plan except except compil input length speed map reduc oper mro compil input mro map do mro map plan add leaf op els mro map do mro reduc do mro reduc plan add leaf op els int err code string msg map reduc phase do unexpect compil throw new plan except msg err code except cur op mro els list map reduc oper merg plan merg compil input first oper alway merg map oper map reduc oper mro merg plan remov push input oper merg map oper mro map plan add leaf op connect reduc oper merg plan size conn red oper merg plan mro return compil oper cur op mro privat void add map physic oper op throw plan except except compil input length speed map reduc oper mro compil input mro map do mro map plan add leaf op els mro map do mro reduc do file spec f spec get temp file spec store st get store st set file f spec mro reduc plan add leaf st mro set reduc do true mro start new f spec mro mro map plan add leaf op compil input mro els int err code string msg map reduc phase do unexpect compil throw new plan except msg err code except cur op mro els list map reduc oper merg plan merg compil input first oper alway merg map oper map reduc oper mro merg plan remov push input oper merg map oper mro map plan add leaf op connect reduc oper merg plan size conn red oper merg plan mro return compil oper cur op mro use compil block oper singl input map phase still open close oper compil reduc phase reduc phase open add store close start new map oper oper compil multipl input logic merg map oper one map oper retain reduc oper sinc oper block global rerrang least oper need insert plan implement hadoop creat map reduc boundari merg map oper close reduc phase start depend number reduc oper number pipelin map roper union oper insert whenev necessari also lead possibl empti map plan care handl map reduc class map plan new one creat side effect merg process reduc oper singl pipelin map union oper add otherwis union oper add merg map oper reduc oper connect store load combin care take connect oper plan param op throw except throw plan except privat void block physic oper op throw except plan except compil input length map reduc oper mro compil input mro map do mro set map do singl true cur op mro els mro map do mro reduc do file spec f spec get temp file spec store st get store st set file f spec mro reduc plan add leaf st mro set reduc do true cur op start new f spec mro cur op set map do true els list map reduc oper merg plan merg compil input map reduc oper mro merg plan remov merg plan size mro set map do multipl true els mro set map do singl true connect reduc oper merg plan size conn red oper merg plan mro cur op mro connect reduc oper leaf node map oper mro add appropri load param merg plan list reduc oper param mro map oper throw plan except throw except privat void conn red oper list map reduc oper merg plan map reduc oper mro throw plan except except physic oper leaf null list physic oper leav mro map plan get leav leav null leaf size leaf leav get map reduc oper mmro merg plan mmro set reduc do true file spec file spec get temp file spec load ld get load ld set file file spec store str get store str set file file spec mmro reduc plan add leaf str mro map plan add ld leaf null mro map plan connect ld leaf plan connect mmro mro forc end current map reduc job store temporari file param f spec temp file forc store return oper finish store throw plan except privat map reduc oper end singl input plan str file spec f spec throw plan except compil input length int err code string msg receiv multi input plan expect singl input one throw new plan except msg err code except map reduc oper mro compil input store str get store str set file f spec mro map do mro map plan add leaf str mro set map do singl true els mro map do mro reduc do mro reduc plan add leaf str mro set reduc do true els int err code string msg map reduc phase do unexpect compil throw new plan except msg err code except return mro start new roper connect old one load store assumpt store alreadi insert old oper param f spec param old return throw except throw plan except privat map reduc oper start new file spec f spec map reduc oper old throw plan except load ld get load ld set file f spec map reduc oper ret get op ret map plan add ld plan add ret plan connect old ret return ret return temporari path return throw except privat file spec get temp file spec throw except return new file spec file local get temporari path context string new func spec util get tmp file compressor name context merg map oper compil input singl merg map roper return list merg map oper first oper rest reduc oper care take remov map oper merg plan connect move merg map oper merg implement sequenc binari merg merg phi plan fin plan list phi plan lst fin plan merg p foreach p lst param compil input return throw plan except throw except privat list map reduc oper merg map reduc oper compil input throw plan except list map reduc oper ret new array list map reduc oper map reduc oper merg map get op ret add merg map plan add merg map set map reduc oper connect new hash set map reduc oper list map reduc oper rem lst new array list map reduc oper list physic plan mp lst new array list physic plan map reduc oper mro compil input mro map do rem lst add mro mp lst add mro map plan list map reduc oper pmro plan get predecessor mro pmro null map reduc oper pmro pmro connect add pmro els mro map do mro reduc do ret add mro els int err code string msg map reduc phase do unexpect merg throw new plan except msg err code except merg ret get map plan mp lst iter map reduc oper connect iter next plan connect next merg map map reduc oper rmro rem lst rmro request parallel merg map request parallel merg map request parallel rmro request parallel string udf rmro fs merg map fs contain udf merg map fs add udf also need chang scalar mark physic oper phi op rmro scalar merg map scalar contain phi op merg map scalar add phi op set physic oper op chang new hash set physic oper map entri physic oper map reduc oper entri phi op map entri set entri get valu rmro op chang add entri get key physic oper op op chang phi op map put op merg map plan remov rmro return ret merg list map plan param param param fin plan final plan list plan merg param plan list map plan merg throw plan except privat extend oper extend oper plan void merg fin plan list plan throw plan except e plan fin plan merg e privat void process fs physic plan plan throw visitor except plan null process scalar refer oper scalar phi finder scalar phi finder new scalar phi finder plan scalar phi finder visit cur op scalar add scalar phi finder get scalar process fs udf finder set plan plan udf finder visit cur op fs add udf finder get fs visit op method decid current oper compil split oper logic close split job replac split oper store creat new map roper return current oper oper would compil new oper would connect split job load store also add split oper split see map param op split oper throw visitor except overrid public void visit split split op throw visitor except tri file spec f spec op get split store map reduc oper mro end singl input plan str f spec mro set splitter true split see put op get oper key mro cur op start new f spec mro phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit load load op throw visitor except tri non block op phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit nativ nativ op throw visitor except explod nativ oper add new oper nativ mapreduc job tri add map reduc boundari map reduc oper nativ oper get nativ op op get nativ rjar op get param plan add nativ oper plan connect cur op nativ oper phi op map put op nativ oper cur op nativ oper catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit store store op throw visitor except tri non block op phi op map put op cur op op get file null op get file get func spec null cur op fs add op get file get func spec string catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit filter filter op throw visitor except tri non block op process fs op get plan phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit cross cross op throw visitor except tri non block op phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit stream stream op throw visitor except tri non block op phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit limit limit op throw visitor except tri map reduc oper mro compil input mro limit op get limit op get limit plan null process fs op get limit plan mro limit plan op get limit plan mro map do map plan open add limit optim eventu add anoth limit reduc plan context illustr mro map plan add leaf op mro set map do true mro reduc plan empti util simpl connect map reduc mro scope nig mro request parallel context illustr limit p limit new limit new oper key scope nig get next node id scope p limit set limit op get limit p limit set limit plan op get limit plan mro reduc plan add leaf p limit els mro reduc plan add leaf op els messag collector collect someth reduc plan map plan do someth wrong messag type warn warn els mro map do mro reduc do limit add reduc plan mro reduc plan add leaf op els messag collector collect map reduc phase do unexpect compil messag type warn warn phi op map put op mro catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit local rearrang local rearrang op throw visitor except tri add map op list physic plan plan op get plan plan null physic plan ep plan process fs ep phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit collect group collect group op throw visitor except cur op map do list physic oper root cur op map plan get root root size int err code string err msg expect one find one root physic oper physic plan throw new compil except err msg err code except physic oper phi op root get phi op instanceof load int err code string err msg expect physic oper root load find phi op get class get canon name throw new compil except err msg err code except load func load func load phi op get load func tri collect load func class assign load func get class int err code throw new compil except use collect group datum must load via loader implement collect load func err code collect load func load func ensur key instanc split catch compil except e throw e catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e tri non block op list physic plan plan op get plan plan null physic plan ep plan process fs ep phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e els cur op reduc do int err code string msg block oper allow collect group consid drop use collect throw new compil except msg err code except els int err code string msg map reduc phase do unexpect compil throw new compil except msg err code except overrid public void visit op throw visitor except tri op map side cur op map do file spec f spec get temp file spec map reduc oper prev oper end singl input plan str f spec cur op start new f spec prev oper cur op map plan add leaf op els non block op list physic plan plan op get input plan plan null physic plan plan plan process fs plan phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit global rearrang global rearrang op throw visitor except tri block op cur op custom partition op get custom partition phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit packag packag op throw visitor except tri non block op phi op map put op cur op op get pkgr get packag type packag type op get pkgr get packag type packag type bloom join implement mapreduc mode fall back regular join cur op mark regular join els op get pkgr get packag type packag type op get num inp cur op mark group els op get num inp cur op mark cogroup catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit union union op throw visitor except tri non block op phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e oper multipl input number join input prune input fragment input creat separ job replic input use replic file configur join oper also set join job paramet associ overrid public void visit join join op throw visitor except tri file spec repl file new file spec op get input size int repl file length op get fragment continu repl file get temp file spec op set repl file repl file cur op phi op map get op get input get op get fragment int compil input length map reduc oper mro compil input cur op equal mro continu store str get store str set file repl file configur conf configur util configur context get properti boolean combin conf get boolean split combin fals mro map do combin mani input file mro conf store tmp sto get store file spec f spec get temp file spec tmp sto set file f spec mro map plan add leaf tmp sto mro set map do singl true map reduc oper cat op get concaten job f spec mro str plan connect cat op cur op els mro map plan add leaf str mro set map do singl true plan connect mro cur op els mro map do mro reduc do combin mro request parallel file concaten threshold store tmp sto get store file spec f spec get temp file spec tmp sto set file f spec mro reduc plan add leaf tmp sto mro set reduc do true map reduc oper cat op get concaten job f spec mro str plan connect cat op cur op els mro reduc plan add leaf str mro set reduc do true plan connect mro cur op els int err code string msg map reduc phase do unexpect compil throw new plan except msg err code except cur op map do cur op map plan add leaf op els cur op map do cur op reduc do cur op reduc plan add leaf op els int err code string msg map reduc phase do unexpect compil throw new plan except msg err code except list list physic plan join plan op get join plan join plan null list physic plan join plan join plan join plan null physic plan plan join plan process fs plan phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e suppress warn uncheck privat boolean mani input file map reduc oper mro configur conf context null context get exec type exec type return fals mro instanceof nativ map reduc oper return optimist file concaten fals true physic plan map plan mro map plan list physic oper root map plan get root root null root size return fals int num file boolean ret fals tri physic oper root root load ld load root string file name ld get file get file name uri util file file name input hdf file optim use reduc load namenod separ locat separ comma string locat load func get path string file name string locat locat uri util file locat continu path path new path locat file system f path get file system conf fs exist path load func loader load func context instanti func spec ld get file get func spec job job new job conf loader set context signatur ld get signatur loader set locat locat job input format inf loader get input format list input split split inf get split hadoop shim clone job context job list list input split result map red util get combin split split f get default block size path conf num file result size els list map reduc oper pred plan get predecessor mro pred null pred size map reduc oper pred pred get pred reduc plan empti num file pred request parallel els map job ret mani input file pred conf break els optimist file concaten can n determin number input file treat manyfil num file file concaten threshold break catch except e warn fail get number input file e catch interrupt except e warn fail get number input file e info number input file num file return ret true num file file concaten threshold use mult file combin concaten small input file privat map reduc oper get concaten job file spec f spec map reduc oper old store str throw plan except exec except map reduc oper mro start new f spec old mro map plan add leaf str mro set map do true info insert file concaten job return mro leftmost relat refer base relat one feed mapper first close oper except first one refer base per creat oper index job idx oper connect idx oper map oper plan overrid public void visit merg co group merg cogroup po co grp throw visitor except compil input length int err code string err msg merg cogroup work two relat use map side group singl relat use collect qualifi throw new compil except err msg err code list func spec func spec new array list func spec compil input length list string file spec new array list string compil input length list string loader sign new array list string compil input length tri iter oper disconnect side per per plan collect inform need differ list int compil input length map reduc oper mr oper compil input physic plan map plan mr oper map plan map plan get root size int err code string err msg expect one find one root physic oper physic plan throw new compil except err msg err code except physic oper root op map plan get root get root op instanceof load int err code string err msg expect physic oper root load find root op get class get canon name throw new compil except err msg err code load side loader load root op file spec load file spec side loader get file func spec func spec load file spec get func spec load func loadfunc side loader get load func collect load func class assign loadfunc get class int err code throw new compil except base loader cogroup must implement collect load func err code collect load func loadfunc ensur key instanc split continu index load func class assign loadfunc get class int err code throw new compil except side loader cogroup must implement index load func err code func spec add func spec file spec add load file spec get file name loader sign add side loader get signatur plan remov mr oper po co grp set side load func func spec po co grp set side file spec file spec po co grp set loader signatur loader sign use map reduc oper base relat cogroup oper map reduc oper base op phi op map get po co grp get input get base op map do base op reduc plan empti int err code throw new compil except current merg cogroup support block oper err code creat new map reduc oper index job configur map reduc oper index op get op file spec idx file spec get index job index op base op po co grp get inner plan po co grp set idx func spec idx file spec get func spec po co grp set index file name idx file spec get file name base op map plan add leaf po co grp func spec func spec func spec base op fs add func spec string plan add index op plan connect index op base op phi op map put po co grp base op go forward new oper add base rop make sure reset cur op cur op base op catch exec except e throw new compil except e get detail messag e get error code e get error sourc e catch compil except mrce throw mrce catch clone support except e throw new compil except e catch plan except e int err code string msg error compil oper po co grp get class get canon name throw new compil except msg err code except e catch except e int err code string err msg except catch compil merg co group throw new compil except err msg err code e set index job map side cogroup privat file spec get index job map reduc oper index op final map reduc oper base op final list physic plan mapper inner plan throw compil except plan except exec except except clone support except first replac loader merg join index physic plan base map plan base op map plan load base loader load base map plan get root get file spec orig loader file spec base loader get file func spec func spec orig loader file spec get func spec load func load func base loader get load func order load func class assign load func get class int err code string err msg base relat merg co group must implement order load func interfac specifi loader func spec n implement throw new compil except err msg err code string index arg new string index arg func spec string index arg object serial serial serializ mapper inner plan index arg base loader get signatur index arg base loader get oper key scope index arg boolean string fals care null physic plan phi plan base map plan get successor base loader null base map plan get successor base loader empti load load cogroup case phi plan null els get someth yank set inner plan phi plan base map plan clone physic oper root phi plan get root get phi plan disconnect root phi plan get successor root get phi plan remov root index arg object serial serial phi plan load idx job loader get load idx job loader set file new file spec orig loader file spec get file name new func spec merg join index class get name index arg index op map plan add idx job loader index op fs add base loader get file get func spec string loader mro return tupl form key key writabl compar split index see merg join index detail get index entri mapper send one reduc sort way hadoop util simpl connect map reduc index op scope nig index op request parallel need exactli one reduc index job want use type tupl compar job instead default raw binari compar use make sure index entri sort correctli hadoop index op use type compar true store st get store file spec str file get temp file spec st set file str file index op reduc plan add leaf st index op set reduc do true return str file sinc merg join work two input exactli two oper predecessor identifi left right instead merg two oper use gener job first oper run gener fli index right side second use actual join first oper identifi right oper second cur oper right oper map phase preced load anyth els physic plan yank set inner plan join op reduc phase close oper start new oper left oper map phase add join oper reduc phase close start new oper overrid public void visit merg join merg join join op throw visitor except tri compil input length join op get input size int err code throw new compil except merg join must exactli two input find compil input length err code cur op phi op map get join op get input get map reduc oper right opr null cur op equal compil input right opr compil input els right opr compil input first oper right side index job first yank plan compil right input set inner plan right oper physic plan right pipelin plan right opr map do physic plan right map plan right opr map plan right map plan get root size int err code string err msg expect one find one root physic oper physic plan throw new compil except err msg err code except physic oper right loader right map plan get root get right loader instanceof load int err code string err msg expect physic oper root load find right loader get class get canon name throw new compil except err msg err code right map plan get successor right loader null right map plan get successor right loader empti load join case right pipelin plan null els get someth right side yank set inner plan right input right pipelin plan right map plan clone physic oper root right pipelin plan get root get right pipelin plan disconnect root right pipelin plan get successor root get right pipelin plan remov root right map plan trim right loader els right opr reduc do index must run map reduc close start new oper need yank case sinc start brand new oper contain noth store right store get store file spec right str file get temp file spec right store set file right str file right opr reduc plan add leaf right store right opr set reduc do true right opr start new right str file right opr right pipelin plan null els int err code string msg map reduc phase do unexpect compil throw new plan except msg err code except join op setup right pipelin right pipelin plan right opr request parallel need exactli one reduc index job point must oper map plan right input would contain noth els load load right loader load right opr map plan get root get join op set signatur right loader get signatur load func right load func right loader get load func list string udf new array list string index load func class assign right load func get class join op set right loader func spec right loader get file get func spec join op set right input file name right loader get file get file name udf add right loader get file get func spec string n need right oper sinc right loader index load func handl index plan remov right opr right opr compil input compil input null els right opr compil input compil input null right opr null valid join key merg join simpl column project express express handl index build storag layer sort datum sort datum correspond index write merg join restrict express join key int num input plan get predecessor join op size int num input list physic plan key plan join op get inner plan physic plan key plan key plan physic oper op key plan op instanceof project int err code string err msg merg join possibl simpl column join key use right loader get file get func spec loader throw new compil except err msg err code except els load func load func right loader get load func replac load index disabl merg spars join featur would use current implement default index loader design handl multipl call seek near specif reread entir index call refactor class requir check could remov join op get join type join int err code string err msg right input merg join must implement index load func specifi loader load func n implement throw new compil except err msg err code replac load index order load func class assign load func get class int err code string err msg right input merg join must implement order load func interfac specifi loader load func n implement throw new compil except err msg err code string index arg new string list physic plan right inp plan join op get inner plan file spec orig right loader file spec right loader get file index arg orig right loader file spec get func spec string index arg object serial serial serializ right inp plan index arg object serial serial right pipelin plan index arg right loader get signatur index arg right loader get oper key scope index arg boolean string true file spec l file new file spec right loader get file get file name new func spec merg join index class get name index arg right loader set file l file loader mro return tupl form key first key first posit split index see merg join index util simpl connect map reduc right opr scope nig right opr use type compar true store st get store file spec str file get temp file spec st set file str file right opr reduc plan add leaf st right opr set reduc do true set default index loader join oper string default index loader arg new string default index loader arg orig right loader file spec get func spec string default index loader arg str file get file name default index loader arg str file get func spec string default index loader arg join op get oper key scope default index loader arg orig right loader file spec get file name join op set right loader func spec new func spec default index loader class get name default index loader arg join op set right input file name orig right loader file spec get file name join op set index file str file get file name udf add orig right loader file spec get func spec string do right side let work left join materi left oper cur op map do life easi cur op map plan add leaf join op els cur op reduc do map side join close oper start afresh store leav store get store file spec leav str file get temp file spec leav store set file leav str file cur op reduc plan add leaf leav store cur op set reduc do true cur op start new left str file cur op cur op map plan add leaf join op els int err code string msg map reduc phase do unexpect compil throw new plan except msg err code except right opr null right opr mark index want ensur index job run prior actual join job connect order plan connect right opr cur op phi op map put join op cur op combin small split current way guarante sort combin split cur op combin small split cur op fs add udf catch plan except e int err code string msg error compil oper join op get class get canon name throw new compil except msg err code except e catch except e int err code string err msg except catch compil merg join throw new compil except err msg err code e catch clone support except e int err code string err msg clone except catch compil merg join throw new compil except err msg err code except e overrid public void visit distinct distinct op throw visitor except tri physic plan ep new physic plan project prj star new project new oper key scope nig get next node id scope prj star set result type data type prj star set star true ep add prj star list physic plan ep new array list physic plan ep add ep local rearrang lr new local rearrang new oper key scope nig get next node id scope lr set index lr set key type data type lr set plan ep lr set result type data type lr set distinct true add map lr block op cur op custom partition op get custom partition packag pkg new packag new oper key scope nig get next node id scope packag pkgr pkg get pkgr pkgr set key type data type pkgr set distinct true pkg set num inp boolean inner fals pkgr set inner inner cur op reduc plan add pkg list physic plan ep new array list physic plan list boolean flat new array list boolean physic plan ep new physic plan project prj new project new oper key scope nig get next node id scope prj set result type data type prj set star fals prj set column prj set overload fals ep add prj ep add ep flat add true nfe new new oper key scope nig get next node id scope op get request parallel ep flat nfe set result type data type cur op reduc plan add leaf nfe cur op set need distinct combin true phi op map put op cur op cur op phi map put op nfe catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public voi d visit skew join skew join op throw visitor except tri compil input length int err code throw new visitor except skew join oper compil input length input err code chang plan store first join input temp file file spec f spec get temp file spec map reduc oper mro compil input store str get store str set file f spec mro map do mro map plan add leaf str mro set map do singl true els mro map do mro reduc do mro reduc plan add leaf str mro set reduc do true els int err code string msg map reduc phase do unexpect compil throw new plan except msg err code except file spec partit file get temp file spec int rp op get request parallel pair map reduc oper integ sampl job pair get skew join sampl job op mro f spec partit file rp rp sampl job pair second set parallel skew join valu calcul sampl job parallel specifi join statement rp equal number specifi use valu sampl process calcul base default op set request parallel rp load temp file first tabl input join map reduc oper join input new map reduc oper start new f spec sampl job pair first compil input map reduc oper rearrang output new map reduc oper compil input new map reduc oper join input run local rearrang first join tabl local rearrang lr new local rearrang new oper key scope nig get next node id scope rp tri lr set index catch exec except e int err code string msg unabl set index newli creat local rearrang throw new plan except msg err code except e list physic oper l plan get predecessor op multi map physic oper physic plan join plan op get join plan list physic plan group join plan get l get check type group key one field key byte type data type group size type group get get leav get get result type lr set key type type lr set plan group lr set result type data type lr visit lr get request parallel cur op request parallel cur op request parallel lr get request parallel rearrang output cur op compil input new map reduc oper join input map current input alreadi close start new job compil input map do compil input reduc do file spec f get temp file spec store get store set file f compil input reduc plan add leaf compil input set reduc do true compil input start new f compil input run partit rearrang second join tabl partit rearrang pr new partit rearrang new oper key scope nig get next node id scope rp pr set context context lr pr tri lr set index catch exec except e int err code string msg unabl set index newli creat local rearrang throw new plan except msg err code except e group join plan get l get lr set plan group lr set key type type lr set result type data type lr visit lr get request parallel cur op request parallel cur op request parallel lr get request parallel rearrang output cur op compil input rearrang output creat global rearrang global rearrang gr new global rearrang new oper key scope nig get next node id scope rp skew join special partition gr set result type data type gr visit gr get request parallel cur op request parallel cur op request parallel gr get request parallel compil input new map reduc oper cur op creat pakcag packag pkg new packag new oper key scope nig get next node id scope rp packag pkgr pkg get pkgr pkgr set key type type pkg set result type data type pkg set num inp boolean inner op get inner flag pkgr set inner inner pkg visit compil input new map reduc oper cur op creat list physic plan ep new array list physic plan list boolean flat new array list boolean physic plan ep add correspond project int ep new physic plan project prj new project new oper key scope nig get next node id scope prj set column prj set overload fals prj set result type data type ep add prj ep add ep inner add empti bag outer join right outer add first reduc key well compil util add empti bag outer join ep op get schema true first reduc key class get name els compil util add empti bag outer join ep op get schema fals first reduc key class get name flat add true fe new new oper key scope nig get next node id scope ep flat fe set result type data type fe visit cur op set skew join partit file partit file get file name phi op map put op cur op catch plan except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e overrid public void visit sort sort op throw visitor except tri file spec f spec get temp file spec map reduc oper mro end singl input plan str f spec file spec quant file get temp file spec int rp op get request parallel pair project byte field get sort col op get sort plan pair map reduc oper integ quant job parallel pair get quantil job op mro f spec quant file rp cur op get sort job op quant job parallel pair first f spec quant file quant job parallel pair second field op compar use cur op fs add op get sort func get func spec string cur op compar use true phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e counter job depend row number case row number previou job save counter add leaf map task counter add leaf reduc task last sort phase overrid public void visit counter counter op throw visitor except tri op row number list physic oper mp leav cur op map plan get leav physic oper leaf mp leav get cur op map do cur op rank oper cur op map plan add leaf op els file spec f spec get temp file spec map reduc oper prev oper end singl input plan str f spec map reduc oper mr counter start new f spec prev oper mr counter map plan add leaf op cur op mr counter els cur op reduc plan add leaf op phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e case rank close previou job contain counter leaf rank add map phase overrid public void visit rank rank op throw visitor except tri file spec f spec get temp file spec map reduc oper prev oper end singl input plan str f spec cur op start new f spec prev oper cur op map plan add leaf op phi op map put op cur op catch except e int err code string msg error compil oper op get class get simpl name throw new compil except msg err code except e privat pair project byte get sort col list physic plan plan throw plan except exec except plan null suppress warn uncheck pair project byte ret new pair plan size int physic plan plan plan physic oper op plan get leav get project proj op instanceof project project op star return null proj project op els proj null byte type op get result type ret new pair project byte proj type return ret int err code string msg express plan find sort throw new plan except msg err code except privat map reduc oper get sort job sort sort map reduc oper quant job file spec l file file spec quant file int rp pair project byte field throw plan except map reduc oper mro start new l file quant job mro set quant file quant file get file name mro set global sort true mro request parallel rp long limit sort get limit mro limit limit list physic plan ep new array list physic plan byte key type data type boolean sort order list boolean sort order list sort get asc col sort order list null sort order new boolean sort order list size int sort order list size sort order sort order list get mro set sort order sort order field null project physic plan ep new physic plan project prj new project new oper key scope nig get next node id scope prj set star true prj set overload fals prj set result type data type ep add prj ep add ep els int field physic plan ep new physic plan project prj new project new oper key scope nig get next node id scope prj set column prj set overload fals prj set result type data type ep add prj ep add ep attach sort plan local rearrang get project ep add sort get sort plan visit first sort plan figur key type visit first one plan key type tupl tri find key type visitor fktv new find key type visitor sort get sort plan get fktv visit key type fktv key type catch visitor except int err code string msg intern error could comput key type sort oper throw new plan except msg err code except local rearrang lr new local rearrang new oper key scope nig get next node id scope tri lr set index catch exec except e int err code string msg unabl set index newli creat local rearrang throw new plan except msg err code except e lr set key type field null field length data type key type lr set plan ep lr set result type data type lr add origin locat sort get alia sort get origin locat mro map plan add leaf lr mro set map do true limit packag pkg c new packag new oper key scope nig get next node id scope lite packag pkgr new lite packag pkgr set key type field length data type key type pkg c set pkgr pkgr pkg c set num inp mro combin plan add pkg c list physic plan ep c new array list physic plan list boolean flat c new array list boolean physic plan ep c new physic plan project prj c new project new oper key scope nig get next node id scope prj c set column prj c set overload fals prj c set result type data type ep c add prj c ep c add ep c flat c add true fe c new new oper key scope nig get next node id scope ep c flat c fe c set result type data type mro combin plan add leaf fe c limit p limit new limit new oper key scope nig get next node id scope p limit set limit limit mro combin plan add leaf p limit list physic plan ep c new array list physic plan ep c add sort get sort plan local rearrang lr c new local rearrang new oper key scope nig get next node id scope tri lr c set index catch exec except e int err code string msg unabl set index newli creat local rearrang throw new plan except msg err code except e lr c set key type field length data type key type lr c set plan ep c lr c set result type data type mro combin plan add leaf lr c packag pkg new packag new oper key scope nig get next node id scope lite packag pkgr new lite packag pkgr set key type field null field length data type key type pkg set pkgr pkgr pkg set num inp mro reduc plan add pkg physic plan ep new physic plan project prj new project new oper key scope nig get next node id scope prj set column prj set overload fals prj set result type data type ep add prj list physic plan ep new array list physic plan ep add ep list boolean flatten new array list boolean flatten add true nfe new new oper key scope nig get next node id scope ep flatten mro reduc plan add nfe mro reduc plan connect pkg nfe mro phi map put sort nfe limit limit p limit new limit new oper key scope nig get next node id scope p limit set limit limit mro reduc plan add leaf p limit mro phi map put sort p limit return mro privat pair map reduc oper integ get quantil job sort inp sort map reduc oper prev job file spec l file file spec quant file int rp throw plan except visitor except sort sort new sort inp sort get oper key inp sort get request parallel null inp sort get sort plan inp sort get asc col inp sort get sort func sort add origin locat inp sort get alia inp sort get origin locat turn asc desc array array string pass find quantil function list boolean asc col inp sort get asc col string asc new string asc col size int asc col size asc asc col get string check user defin compar use sort prepend name compar first field constructor arg array find quantil udf string ctor arg asc sort compar use string user compar func spec sort get sort func get func spec string ctor arg new string asc length ctor arg user compar func spec int j j asc length j ctor arg j asc j return get sampl job sort prev job null l file quant file rp null find quantil class get name ctor arg random sampl loader class get name creat sampl job skew join privat pair map reduc oper integ get skew join sampl job skew join op map reduc oper prev job file spec l file file spec sampl file int rp throw plan except visitor except multi map physic oper physic plan join plan op get join plan list physic oper l plan get predecessor op list physic plan group join plan get l get list boolean asc col new array list boolean int group size asc col add fals sort sort new sort op get oper key op get request parallel null group asc col null set transform plan get key memori size input tupl first add plan get key column list physic plan transform plan new array list physic plan transform plan add group add column memori size project prj star new project new oper key scope nig get next node id scope prj star set result type data type prj star set star true list physic oper uf inp new array list physic oper uf inp add prj star physic plan ep new physic plan user func uf new user func new oper key scope nig get next node id scope uf inp new func spec get mem num row class get name string null uf set result type data type ep add uf ep add prj star ep connect prj star uf transform plan add ep tri pass configur user function string per context get properti get properti skewedjoin reduc memusag string valu partit skew key string mc context get properti get properti skewedjoin reduc maxtupl string input file l file get file name return get sampl job sort prev job transform plan l file sampl file rp null partit skew key class get name new string per mc input file poisson sampl loader class get name catch except e throw new plan except e creat sampl job collect statist sampl input file sequenc oper follow li transform input sampl tupl anoth tupl li li add extra field quot quot tupl li li packag tupl one bag li li add constant field number reduc li li sort bag li li invok number reduc sort bag li li data gener store file li param sort sort oper use sort bag param prev job previou job current sampl job param transform plan physic plan transform input sampl param l file path input file param sampl file path output file param rp configur parallem param sort key plan physic plan set sort oper get sort key param udf class name class name param udf arg argument param sampl ldr class name class name sampl loader return pair mapreduceop integ throw plan except throw visitor except suppress warn deprec privat pair map reduc oper integ get sampl job sort sort map reduc oper prev job list physic plan transform plan file spec l file file spec sampl file int rp list physic plan sort key plan string udf class name string udf arg string sampl ldr class name throw plan except visitor except string rslarg new string sampl loader expect string version func spec first constructor argument rslarg new func spec util get tmp file compressor name context string valu use order skew join calcul base file size rslarg context get properti get properti configur file spec quant ld fil name new file spec l file get file name new func spec sampl ldr class name rslarg map reduc oper mro start new quant ld fil name prev job sort compar use mro fs add sort get sort func get func spec string cur op compar use true list boolean flat new array list boolean list physic plan ep new array list physic plan transform plan specifi project column sort key transform plan null pair project byte sort proj null tri sort proj get sort col sort get sort plan catch except e throw new runtim except e set project key column sort proj null physic plan ep new physic plan project prj new project new oper key scope nig get next node id scope prj set star true prj set overload fals prj set result type data type ep add prj ep add ep flat add fals els pair project byte sort proj sort proj check proj null null use get sort col non project oper sinc order allow express oper never set null sort proj null int err code string msg intern except could creat sampler job throw new compil except msg err code except physic plan ep new physic plan project prj tri prj sort proj first clone catch clone support except e get throw new assert error error clone project catch except e ep add prj ep add ep flat add fals els int transform plan size ep add transform plan get flat add transform plan size true fals foreach pick sort key column random sampl loader output nfe new new oper key scope nig get next node id scope ep flat mro map plan add leaf nfe set local rearrang key output foreach valu local rearrang physic plan ep new physic plan constant express ce new constant express new oper key scope nig get next node id scope ce set valu ce set result type data type ep add ce list physic plan ep new array list physic plan ep add ep local rearrang lr new local rearrang new oper key scope nig get next node id scope tri lr set index catch exec except e int err code string msg unabl set index newli creat local rearrang throw new plan except msg err code except e lr set key type data type lr set plan ep lr set result type data type lr add origin locat sort get alia sort get origin locat mro map plan add lr mro map plan connect nfe lr mro set map do true packag pkg new packag new oper key scope nig get next node id scope packag pkgr new packag pkg set pkgr pkgr pkgr set key type data type pkg set num inp boolean inner fals pkgr set inner inner mro reduc plan add pkg let start build plan sort foreach physic plan fe plan new physic plan top level project project tupl come foreach packag project top prj new project new oper key scope nig get next node id scope top prj set column top prj set result type data type top prj set overload true fe plan add top prj project form sort plan list physic plan ne sort plan lst new array list physic plan sort key plan null int sort key plan size ne sort plan lst add sort key plan get els pair project byte sort proj null tri sort proj get sort col sort get sort plan catch except e throw new runtim except e set project key column sort proj null physic plan ep new physic plan project prj new project new oper key scope nig get next node id scope prj set star true prj set overload fals prj set result type data type ep add prj ne sort plan lst add ep els int sort proj length project prj new project new oper key scope nig get next node id scope prj set result type sort proj second sort proj first null sort proj first project end sort proj length project end last sort column throw new assert error project rang end x support order last sort column prj set project end break els prj set column prj set overload fals physic plan ep new physic plan ep add prj ne sort plan lst add ep sort set sort plan ne sort plan lst sort set result type data type fe plan add sort fe plan connect top prj sort plan constant repres degre parallel final order map reduc job either come order parallel x script default number reduc cluster parallel x use script physic plan rpep new physic plan constant express rpce new constant express new oper key scope nig get next node id scope rpce set request parallel rp temporarili set rp adjust runtim final degre parallel unknown readi submit see rpce set valu rp rpce set result type data type rpep add rpce list physic plan gen ep new array list physic plan gen ep add rpep gen ep add fe plan list boolean flatten new array list boolean flatten add fals flatten add fals nfe new new oper key scope nig get next node id scope gen ep flatten mro reduc plan add nfe mro reduc plan connect pkg nfe let connect output foreach contain number quantil sort bag sampl anoth foreach find quantil udf input find quantil udf project take foreach input give udf physic plan ep new physic plan project prj star new project new oper key scope nig get next node id scope prj star set result type data type prj star set star true ep add prj star list physic oper uf inp new array list physic oper uf inp add prj star user func uf new user func new oper key scope nig get next node id scope uf inp new func spec udf class name udf arg ep add uf ep connect prj star uf list physic plan ep new array list physic plan ep add ep list boolean flatten new array list boolean flatten add fals nfe new new oper key scope nig get next node id scope ep flatten mro reduc plan add nfe mro reduc plan connect nfe nfe store str get store str set file sampl file mro reduc plan add str mro reduc plan connect nfe str mro set reduc do true mro request parallel mro mark sampler return new pair map reduc oper integ mro rp static class last input stream optim extend op plan visitor string chunk size last input stream optim oper plan plan string chunk size super plan new depth first walker map reduc oper oper plan plan chunk size chunk size ind tup iter look pattern packag flatten chang join packag avoid materi input construct result join fli param mr map reduc plan optim overrid public void visit op map reduc oper mr throw visitor except optim packag root reduc plan union leaf map plan exclud distinct sort combin plan nest plan contain project depth insid occurr last input flatten mr map plan empti return mr reduc plan empti return check combin plan mr combin plan empti return check map plan list physic oper mp leav mr map plan get leav mp leav size return physic oper op mp leav get op instanceof union return check reduc plan list physic oper mr root mr reduc plan get root mr root size return op mr root get op instanceof packag return packag pack packag op list physic oper suc mr reduc plan get successor pack suc null suc size return op suc get boolean last input flatten true boolean simpl true op instanceof op list physic plan plan list get input plan list boolean flatten get flatten project proj last input null int check nest foreach plan simpl project last input flatten physic plan p plan list physic oper op proj p get root get op proj instanceof project simpl fals break project proj project op proj project one column input proj project end proj get column size simpl fals break tri input project last input proj get column pack get num inp alreadi see anoth project also last input might tri flatten twice last input case can n optim stream tupl project proj last input null simpl fals break proj last input proj make sure project bag need flatten flatten get proj get result type data type last input flatten fals break catch exec except e int err code string msg error map reduc compil problem access column project oper throw new compil except msg err code except e deep oper project physic oper succ p get successor proj null p get successor proj get null succ null succ instanceof project simpl fals break make sure successor last project also project bag chang project tupl proj proj last input project succ get result type data type simpl fals break succ p get successor succ null p get successor succ get null simpl fals break last input flatten simpl proj last input null optim map reduc plan replac packag foreach join packag replac join packag mr reduc plan mr pack chunk size public static void replac join packag physic plan plan map reduc oper mr packag pack string chunk size throw visitor except join packag pkgr new join packag pack get pkgr pkgr set chunk size long pars long chunk size pack set pkgr pkgr list physic oper succ plan get successor succ null succ size int err code string msg one successor find succ size successor throw new compil except msg err code except plan remov pack tri plan replac pack catch plan except e int err code string msg error rewrit join packag throw new compil except msg err code except e mr phi map put pack log factori get log last input stream optim class info rewrit packag packag join packag privat static class find key type visitor extend phi plan visitor byte key type data type find key type visitor physic plan plan super plan new depth first walker physic oper physic plan plan overrid public void visit project project p throw visitor except key type p get result type privat static class find store name visitor extend phi plan visitor file spec new spec file spec old spec find store name visitor physic plan plan file spec new spec file spec old spec super plan new depth first walker physic oper physic plan plan new spec new spec old spec old spec overrid public void visit store store sto throw visitor except file spec spec sto get file old spec equal spec sto set file new spec 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java util properti import org apach exec type import org apach backend executionengin execut engin import org apach impl context exec type exec type distribut mode hadoop mapreduc public class exec type implement exec type privat static final long serial version privat static final string mode overrid public boolean accept properti properti string exec type specifi properti get properti exectyp upper case string mode mode exec type specifi equal mode return true return fals overrid public execut engin get execut engin context context return new execut engin context overrid public class extend execut engin get execut engin class return execut engin class overrid public boolean local return fals overrid public string name return public string string return name 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java util import org apach backend hadoop executionengin execut engin import org apach impl context import org apach tool pigstat stat import org apach tool pigstat script state import org apach tool pigstat mapreduc script state import org apach tool pigstat mapreduc simpl stat public class execut engin extend execut engin public execut engin context context super context launcher new map reduc launcher overrid public script state instanti script state script state ss new script state random string ss set context context return ss overrid public stat instanti stat return new simpl stat 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool pigstat mapreduc import java io except import java util array list import java util collect import java util hash map import java util iter import java util list import java util map import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop mapr counter import org apach hadoop mapr counter counter import org apach hadoop mapr job import org apach hadoop mapreduc cluster import org apach hadoop mapreduc task report import org apach hadoop mapr jobcontrol job import org apach hadoop mapreduc task type import org apach configur import org apach counter import org apach backend hadoop executionengin map reduc layer job control compil import org apach backend hadoop executionengin map reduc layer configur import org apach backend hadoop executionengin map reduc layer map reduc oper import org apach backend hadoop executionengin physic layer relat oper store import org apach classif interfac audienc import org apach classif interfac stabil import org apach impl io file spec import org apach impl logic layer frontend except import org apach impl util object serial import org apach newplan plan visitor import org apach tool pigstat input stat import org apach tool pigstat job stat import org apach tool pigstat output stat import org apach tool pigstat stat job graph import org apach tool pigstat stat job graph printer import org python googl common collect list class encapsul runtim statist map reduc job job statist collect job complet interfac audienc public interfac stabil evolv public final class job stat extend job stat job stat string name job graph plan super name plan public static final string job id map reduc max map time min map time avg map time median map time max reduc time min reduc time avg reduc time median reducetim alia featur output public static final string job id alia featur messag output privat static final log log factori get log job stat class privat list store map store null privat list store reduc store null privat list file spec load null privat boolean disabl counter fals privat job job id privat long max map time privat long min map time privat long avg map time privat long median map time privat long max reduc time privat long min reduc time privat long avg reduc time privat long median reduc time privat int number map privat int number reduc privat long map input record privat long map output record privat long reduc input record privat long reduc output record privat long spill count privat long activ spill count obj privat long activ spill count rec privat hash map string long multi store counter new hash map string long privat hash map string long multi input counter new hash map string long privat counter counter null overrid public string get job id return job id null null job id string overrid public int get number map return number map overrid public int get number reduc return number reduc overrid public long get max map time return max map time overrid public long get min map time return min map time overrid public long get avg map time return avg map time overrid public long get max reduc time return max reduc time overrid public long get min reduc time return min reduc time overrid public long get avg educ time return avg reduc time overrid public long get map input record return map input record overrid public long get map output record return map output record overrid public long get reduc input record return reduc input record overrid public long get reduc output record return reduc output record overrid public long get spill count return spill count overrid public long get proactiv spill count object return activ spill count obj overrid public long get proactiv spill count rec return activ spill count rec overrid public counter get hadoop counter return counter overrid public map string long get multi store counter return collect unmodifi map multi store counter overrid public map string long get multi input counter return collect unmodifi map multi input counter overrid public string get alia return string get annot overrid public string get alia locat return string get annot overrid public string get featur return string get annot overrid public void accept plan visitor v throw frontend except v instanceof job graph printer job graph printer jpp job graph printer v jpp visit void set id job job id job id job id overrid suppress warn uncheck public void set conf configur conf super set conf conf tri map store list store object serial deseri conf get job control compil reduc store list store object serial deseri conf get job control compil load array list file spec object serial deseri conf get input disabl counter conf get boolean disabl counter fals catch except e warn fail deseri store list e void set map stat int size long max long min long avg long median number map size max map time max min map time min avg map time avg median map time median void set reduc stat int size long max long min long avg long median number reduc size max reduc time max min reduc time min avg reduc time avg median reduc time median privat static void append stat long stat string builder sb stat sb append stat els sb append n sb append overrid public string get display string string builder sb new string builder string id job id null job id string state job state sb append id append append get alia append append get featur append state job state sb append messag append get error messag append els state job state sb append id append append number map append append number reduc append append stat max map time sb append stat min map time sb append stat avg map time sb append stat median map time sb append stat max reduc time sb append stat min reduc time sb append stat avg reduc time sb append stat median reduc time sb sb append get alia append append get featur append output stat os output sb append os get locat append sb append n return sb string void add counter job job tri counter get counter job catch except e warn unabl get job counter e counter null counter group taskgroup counter get group stat util counter group hdfsgroup counter get group stat util counter group multistoregroup counter get group stat util counter group multiloadgroup counter get group stat util map input record taskgroup get counter name stat util get counter map output record taskgroup get counter name stat util get counter reduc input record taskgroup get counter name stat util get counter reduc output record taskgroup get counter name stat util get counter hdf byte read hdfsgroup get counter name stat util get counter hdf byte write hdfsgroup get counter name stat util get counter spill count counter find counter counter get counter activ spill count obj counter find counter counter get counter activ spill count rec counter find counter counter get counter iter counter iter multistoregroup iter iter next counter cter iter next multi store counter put cter get name cter get valu iter counter iter multiloadgroup iter iter next counter cter iter next multi input counter put cter get name cter get valu privat class task stat int size long max long min long avg long median public task stat int size long max long min long avg long median size size max max min min avg avg median median void add map reduc statist job job iter task report map null tri map get task report job task type catch except e warn fail get map task report e iter task report reduc null tri reduc get task report job task type catch except e warn fail get reduc task report e add map reduc statist map reduc privat task stat get task stat iter task report task int size long max long min long long median long total list long durat new array list long task next task report rpt task next long durat rpt get finish time rpt get start time durat add durat max durat max durat max min durat min durat min total durat size long avg total size median calcul median valu durat return new task stat size max min avg median privat void add map reduc statist iter task report map iter task report reduc map null map next task stat st get task stat map set map stat st size st max st min st avg st median els int conf get int configur set map stat reduc null reduc next task stat st get task stat reduc set reduc stat st size st max st min st avg st median els int conf get int configur set reduc stat void set alia map reduc oper mro script state ss script state get annot ss get alia mro annot ss get alia locat mro annot ss get featur mro void add output statist map store null reduc store null warn unabl get store job return map store size reduc store size store sto map store size map store get reduc store get sto tmp store long record map store size map output record reduc output record output stat ds new output stat sto get file get file name hdf byte write record state job state d set store sto d set conf conf output add d state job state script state get emit output complet notif d els store sto map store sto tmp store continu add one output stat sto store sto reduc store sto tmp store continu add one output stat sto privat void add one output stat store sto long record sto multi store long n multi store counter get stat util get multi store counter name sto n null record n els record map output record long byte get output size sto conf string locat sto get file get file name output stat d new output stat locat byte record state job state d set store sto d set conf conf output add d state job state script state get emit output complet notif d void add input statist load null warn unabl get input job return load size file spec fsp load get stat util temp file fsp get file name long record map input record input stat new input stat fsp get file name hdf byte read record state job state set conf conf sampler mark sampl input index mark index input input add els int load size file spec fsp load get stat util temp file fsp get file name continu add one input stat fsp get file name privat void add one input stat string file name int index long record long n multi input counter get stat util get multi input counter name file name index n null record n els file could empti disabl counter record els warn unabl get input counter file name input stat new input stat file name record state job state set conf conf input add public static iter task report get task report job job task type type throw except job get job conf get boolean configur fals info task report disabl job job get assign job return null cluster cluster new cluster job get job conf tri org apach hadoop mapreduc job mr job cluster get job job get assign job mr job null local mode mr job null mr job job get job org apach hadoop mapreduc task report report mr job get task report type return list new array list report iter catch interrupt except ir throw new except ir public static counter get counter job job throw except tri cluster cluster new cluster job get job conf org apach hadoop mapreduc job mr job cluster get job job get assign job mr job null local mode mr job null mr job job get job return new counter mr job get counter catch except ir throw new except ir 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool pigstat mapreduc import java io except import java util map import org apach common log log import org apach common log log factori import org apach hadoop mapr counter import org apach hadoop mapr job client import org apach hadoop mapr run job import org apach hadoop mapr jobcontrol job import org apach hadoop mapr jobcontrol job control import org apach hadoop mapreduc job import org apach backend hadoop executionengin map reduc layer job control compil import org apach backend hadoop executionengin map reduc layer map reduc oper import org apach backend hadoop executionengin map reduc layer nativ map reduc oper import org apach backend hadoop executionengin map reduc layer plan oper plan import org apach classif interfac audienc privat import org apach impl context import org apach tool pigstat job stat import org apach tool pigstat stat import org apach tool pigstat stat job graph import org apach tool pigstat stat util util class statist public class stat util extend stat util public static final string org apach hadoop mapr task counter public static final string org apach hadoop mapreduc file system counter privat static final log log factori get log stat util class return count give counter name counter group multi store counter param job job param job client hadoop job client param counter name counter name return count give counter name public static long get multi store count job job job client job client string counter name long valu tri run job rj job client get job job get assign job rj null counter counter counter rj get counter get group get counter name counter name valu counter get valu catch except e warn fail get counter counter name e return valu start collect statist give plan param pc context param client hadoop job client param jcc job compil param plan plan public static void start collect context pc job client client job control compil jcc oper plan plan simpl stat ps simpl stat stat get ps initi pc client jcc plan script state get emit initi plan notif plan script state get emit launch start notif plan size stop collect statist plan param display true log collect statist log file level public static void stop collect boolean display simpl stat ps simpl stat stat get ps finish ps success error ps get number fail job map reduc job fail string err msg ps get error messag err msg null error error messag err msg script state get emit launch complet notif ps get number success job display ps display add stat new job n yet need complet param job job run return job stat job public static job stat add job stat job job simpl stat ps simpl stat stat get return ps add job stat job log statist log file level public static void display statist simpl stat stat get display updat link job graph link stat initi link job graph creat without job id use link oper plan job submit execut link job graph updat job id job execut param job mro map map map link job link map reduc oper public static void updat job mro map map job map reduc oper job mro map simpl stat ps simpl stat stat get map entri job map reduc oper entri job mro map entri set map reduc oper mro entri get valu ps map oper job mro entri get key updat statist patch job do param jc job control public static void accumul stat job control jc simpl stat ps simpl stat stat get script state ss script state get job job jc get success job job stat js add success job stat ps job js null ss emitjob finish notif js job job jc get fail job job stat js add fail job stat ps job js null j set error msg job get messag ss emit job fail notif j privat public static void set backend except job job except e job job id job get assign job job id null return stat get set backend except job id string e privat static job stat add fail job stat simpl stat ps job job ps job see job return null job stat j ps add job stat job js null warn unabl add fail job stat els j set success fals j add output statist j add input statist return j public static job stat add nativ job stat stat ps nativ map reduc oper mr boolean success return add nativ job stat ps mr success null public static job stat add nativ job stat stat ps nativ map reduc oper mr boolean success except e ps emb throw new illeg argument except job stat j simpl stat ps add job stat nativ mr js null warn unabl add nativ job stat els j set success success e null j set backend except e return j privat static job stat add success job stat simpl stat ps job job ps job see job return null job stat j ps add job stat job j null warn unabl add job stat els js set success true j add map reduc statist job j add counter job j add output statist j add input statist return j 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer plan import java util array list import java util iter import java util list import java io print stream import org apach backend hadoop executionengin map reduc layer map reduc oper import org apach backend hadoop executionengin map reduc layer nativ map reduc oper import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer plan plan printer import org apach impl plan depend order walker import org apach impl plan visitor except visitor mechan print logic plan public class printer extend op plan visitor privat print stream stream null privat boolean verbos true param ps print stream output plan inform param plan plan print public printer print stream ps oper plan plan super plan new depend order walker map reduc oper oper plan plan true stream ps stream println stream println map reduc plan stream println public void set verbos boolean verbos verbos verbos overrid public void visit op map reduc oper mr throw visitor except stream println map reduc node mr get oper key string mr instanceof nativ map reduc oper stream println nativ map reduc oper mr get command string stream println stream println return mr map plan null mr map plan size stream println map plan plan printer physic oper physic plan printer new plan printer physic oper physic plan mr map plan stream printer set verbos verbos printer visit stream println mr combin plan null mr combin plan size stream println combin plan plan printer physic oper physic plan printer new plan printer physic oper physic plan mr combin plan stream printer set verbos verbos printer visit stream println mr reduc plan null mr reduc plan size stream println reduc plan plan printer physic oper physic plan printer new plan printer physic oper physic plan mr reduc plan stream printer set verbos verbos printer visit stream println stream println global sort mr global sort mr get quant file null stream println quantil file mr get quant file mr get use secondari key stream println secondari sort mr get use secondari key stream println stream println 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool pigstat mapreduc import java util array list import java util bit set import java util collect import java util hash map import java util iter import java util link list import java util list import java util map import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach load func import org apach backend hadoop executionengin map reduc layer map reduc oper import org apach backend hadoop executionengin map reduc layer nativ map reduc oper import org apach backend hadoop executionengin map reduc layer plan oper plan import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer util plan helper import org apach impl plan visitor except import org apach newplan oper import org apach tool pigstat stat job graph import org apach tool pigstat script state import org apach tool pigstat job stat import org apach tool pigstat stat import com googl common collect map script state encapsul set script run hadoop cluster set add job spawn script turn persist hadoop job xml properti alreadi job xml user want know relat script job deriv job xml public class script state extend script state privat static final log log factori get log script state class privat map map reduc oper string featur map null privat map map reduc oper string alia map map new hash map privat map map reduc oper string alia locat map map new hash map public script state string id super id public static script state get return script state script state get public void add set conf map reduc oper mro configur conf info script set add job conf set string get hadoop version conf set string get version conf set string id conf set string get serial script conf set string get command line tri link list store store plan helper get physic oper mro map plan store class array list string output dir new array list string store st store output dir add st get file get file name conf set string load func join output dir catch visitor except e warn unabl get map store e mro reduc plan empti tri link list store store plan helper get physic oper mro reduc plan store class array list string output dir new array list string store st store output dir add st get file get file name conf set string load func join output dir catch visitor except e warn unabl get reduc store e tri list load ld plan helper get physic oper mro map plan load class array list string input dir new array list string ld null ld size load ld ld input dir add ld get file get file name conf set string load func join input dir catch visitor except e warn unabl get map load e set featur mro conf set job parent mro conf conf set mapreduc workflow id id conf set mapreduc workflow name get file name empti default get file name conf set mapreduc workflow node name mro get oper key string public void add workflow adjac conf oper plan mrop configur conf map reduc oper sourc mrop list string target new array list string mrop get successor sourc null map reduc oper target mrop get successor sourc target add target get oper key string string new string target size conf set string mapreduc workflow adjac sourc get oper key string target array privat void set featur map reduc oper mro configur conf conf set string get featur mro script featur conf set string string valu script featur conf set string get alia mro conf set string get alia locat mro privat void set job parent map reduc oper mro configur conf stat maintain job job id updat upon avail therefor job submit id parent job alreadi avail job graph jg stat get get job graph job stat js null iter job stat iter jg iter iter next job stat job iter next job get name equal mro get oper key string js job break js null list oper pred jg get predecessor js pred null string builder sb new string builder oper op pred job stat job job stat op sb length sb append sb append job get job id conf set string sb string public string get alia map reduc oper mro alia map contain key mro set alia mro return alia map get mro privat void set alia map reduc oper mro array list string alia new array list string string alia locat str tri array list string alia locat new array list string new alia visitor mro map plan alia alia locat visit alia locat str load func join alia locat mro combin plan null alia locat new array list string new alia visitor mro combin plan alia alia locat visit alia locat str load func join alia locat alia locat new array list string new alia visitor mro reduc plan alia alia locat visit alia locat str load func join alia locat alia empti collect sort alia catch visitor except e warn unabl get alia e alia map put mro load func join alia alia locat map put mro alia locat str public string get alia locat map reduc oper mro alia locat map contain key mro set alia mro return alia locat map get mro public string get featur map reduc oper mro featur map null featur map new hash map map reduc oper string string ret str featur map get mro ret str null bit set featur new bit set featur clear mro skew join featur set ordin mro global sort featur set ordin mro sampler featur set ordin mro index featur set ordin mro cogroup featur set ordin mro group featur set ordin mro regular join featur set ordin mro need distinct combin featur set ordin mro combin plan empti featur set ordin mro instanceof nativ map reduc oper featur set ordin els n explor plan tri new featur visitor mro map plan featur visit mro reduc plan empti featur set ordin els new featur visitor mro reduc plan featur visit catch visitor except e warn featur visitor fail e string builder sb new string builder int featur next set bit featur next set bit sb length sb append sb append valu name ret str sb string featur map put mro ret str return ret str 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java math big decim import java math big integ import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except public class multipli extend binari express oper privat static final long serial version public multipli oper key k super k public multipli oper key k int rp super k rp overrid public void visit phi plan visitor v throw visitor except v visit multipli overrid public string name return multipli data type find type name result type key string protect number multipli number number b byte datum type throw exec except switch datum type case data type return doubl valu doubl doubl b case data type return integ valu integ integ b case data type return long valu long long b case data type return float valu float float b case data type return big integ multipli big integ b case data type return big decim multipli big decim b default throw new exec except call unsupport number class data type find type name datum type protect result gener get next byte datum type throw exec except result be accum child null datum type r null return be byte statu result re re lh get next datum type statu re return statu statu statu re result null return re number leav number re result re rh get next datum type statu re return statu statu statu re result null return re number right number re result re result multipli leav right datum type return re overrid public result get next doubl throw exec except return gener get next data type overrid public result get next float throw exec except return gener get next data type overrid public result get next integ throw exec except return gener get next data type overrid public result get next long throw exec except return gener get next data type overrid public result get next big integ throw exec except return gener get next data type overrid public result get next big decim throw exec except return gener get next data type overrid public multipli clone throw clone support except multipli clone new multipli new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat multipli oper public class multipli express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public multipli express oper plan plan logic express lh logic express rh super multipli plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof multipli express multipli express ao multipli express return ao get lh equal get lh ao get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null get lh get type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new multipli express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat public class neg express extend unari express public neg express oper plan plan logic express exp super neg plan exp overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof neg express neg express neg express return get express equal get express els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema logic express exp logic express plan get successor get field schema new logic schema logic field schema null null exp get type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new neg express lg exp plan get express deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat equal test express public class equal express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public equal express oper plan plan logic express lh logic express rh super equal plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof equal express equal express eo equal express return eo get lh equal get lh eo get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new equal express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java util hash map import org apach common log log import org apach common log log factori import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except public class equal expr extend binari comparison oper privat static final long serial version transient privat final log log log factori get log get class public equal expr oper key k k public equal expr oper key k int rp super k rp result type data type overrid public string name return equal data type find type name result type key string overrid public void visit phi plan visitor v throw visitor except v visit equal overrid public result get next boolean throw exec except result leav right switch operand type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type result be accum child null operand type r null return be leav lh get next operand type right rh get next operand type return comparison leav right default int err code string msg get class get simpl name know handl type data type find type name operand type throw new exec except msg err code except suppress warn uncheck privat result comparison result leav result right throw exec except leav return statu statu return left right return statu statu return right either operand null result null left result null right result null left result null left return statu statu return left left result instanceof compar right result instanceof compar compar left result compar right result leav result boolean els leav result boolean els leav result instanceof hash map right result instanceof hash map hash map leav map hash map leav result hash map right map hash map right result leav map equal right map leav result boolean els leav result boolean els throw new exec except leav side right side differ type illustr markup null left result boolean leav result return leav overrid public equal expr clone throw clone support except equal expr clone new equal expr new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat public class express extend unari express public express oper plan plan logic express exp super plan exp overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof express express express return get express equal get express els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new express lg exp plan get express deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan import java util iter import java util list import org apach classif interfac audienc import org apach classif interfac stabil import org apach impl logic layer frontend except import org apach impl util pair import org apach newplan logic relat load import org apach newplan logic relat store interfac defin graph oper plan plan model graph restrict type connect oper allow interfac audienc privat interfac stabil unstabl public interfac oper plan get number node plan return number node plan public int size get oper plan predecessor return oper plan predecessor empti list plan empti public list oper get sourc get oper plan successor return oper plan successor empti list plan empti public list oper get sink give oper get oper immedi plan param op oper fetch predecessor return list oper immedi op empti list op root public list oper get predecessor oper op give oper get oper immedi param op oper fetch successor return list oper immedi op empti list op leaf public list oper get successor oper op give oper get oper softli immedi plan param op oper fetch predecessor return list oper immedi op empti list op root public list oper get soft link predecessor oper op give oper get oper softli immedi param op oper fetch successor return list oper immedi op empti list op leaf public list oper get soft link successor oper op add new oper plan connect exist oper param op oper add public void add oper op remov oper plan param op oper remov throw frontend except remov oper attempt remov oper still connect oper public void remov oper op throw frontend except connect two oper plan control posit edg list edg place param oper edg come param po posit array edg param oper edg go param po posit array edg public void connect oper int po oper int po connect two oper plan param oper edg come param oper edg go public void connect oper oper creat soft edg two node param oper depend upon param oper depend public void creat soft link oper oper remov soft edg param oper depend upon param oper depend public void remov soft link oper oper disconnect two oper plan param oper edg come param oper edg go return pair posit indic posit array throw frontend except two oper n connect public pair integ integ disconnect oper oper throw frontend except get iter oper plan return iter oper plan public iter oper get oper like shallow comparison two plan equal equival oper equival structur param object compar return boolean plan equival throw frontend except public boolean equal oper plan throw frontend except method replac old oper new oper make connect new oper place old oper param old oper oper replac param new oper oper replac throw frontend except public void replac oper old oper oper new oper throw frontend except method remov node oper remov also connect successor predecessor connect predecessor successor param oper remov oper remov throw frontend except public void remov reconnect oper oper remov throw frontend except method insert node oper insert pred succ pred succ null param pred predecessor insert node method param oper insert operato insert param succ successor insert node method throw frontend except public void insert oper pred oper oper insert oper succ throw frontend except check path plan graph load oper store oper param load load oper param store store oper return true ye otherwis public boolean path exist oper load oper store 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java math big decim import java math big integ import java sql timestamp import java util array list import java util array import java util list import java util properti import org apach common cli command line import org apach common cli command line parser import org apach common cli gnu parser import org apach common cli help formatt import org apach common cli option import org apach common cli pars except import org apach common log log import org apach common log log factori import org apach hadoop f file statu import org apach hadoop f file system import org apach hadoop f path import org apach hadoop f path filter import org apach hadoop hive conf hive conf import org apach hadoop hive ql io orc compress kind import org apach hadoop hive ql io orc orc file import org apach hadoop hive ql io orc orc new input format import org apach hadoop hive ql io orc orc new output format import org apach hadoop hive ql io orc orc serd import org apach hadoop hive ql io orc orc struct import org apach hadoop hive ql io orc reader import org apach hadoop hive ql io orc orc file version import org apach hadoop hive ql io sarg search argument import org apach hadoop hive ql io sarg search argument builder import org apach hadoop hive ql io sarg search argument factori import org apach hadoop hive serd abstract ser de import org apach hadoop hive serd column project util import org apach hadoop hive serd objectinspector object inspector import org apach hadoop hive serd typeinfo struct type info import org apach hadoop hive serd typeinfo type info import org apach hadoop hive serd typeinfo type info util import org apach hadoop hive shim hadoop shim import org apach hadoop hive shim hadoop shim secur import org apach hadoop mapreduc input format import org apach hadoop mapreduc job import org apach hadoop mapreduc output format import org apach hadoop mapreduc record reader import org apach hadoop mapreduc record writer import org apach hadoop mapreduc lib input file input format import org apach hadoop mapreduc lib output file output format import org apach express import org apach express express import org apach express column import org apach express const import org apach express express import org apach express op type import org apach express unari express import org apach load func import org apach load metadata import org apach load predic pushdown import org apach load push import org apach except import org apach warn import org apach resourc schema import org apach store func import org apach express binari express import org apach resourc schema resourc field schema import org apach resourc statist import org apach store func interfac import org apach store resourc import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer split import org apach datum data type import org apach datum tupl import org apach impl logic layer frontend except import org apach impl util object serial import org apach impl util context import org apach impl util util import org apach impl util hive hive util import org joda time date time import com esotericsoftwar kryo io input import com googl common annot visibl test load function store function file option constructor argument provid allow one custom advanc behavior list avail option ul li code stripe size code set stripe size file li code r row index stride code set distanc entri row index li code b buffer size code size memori buffer use compress store stripe memori li code p block pad code set whether block pad prevent stripe straddl block li code c compress code set gener compress use compress datum valid codec li code v version code set version file write ul public class orc storag extend load func implement store func interfac load metadata load push load predic pushdown store resourc make orc input format visibl privat static final string sarg pushdown protect record reader null protect record writer writer null privat type info type info null privat object inspector oi null privat orc serd serd new orc serd privat string signatur privat long stripe size privat integ row index stride privat integ buffer size privat boolean block pad privat compress kind compress privat version version privat static final option valid option privat final command line parser parser new gnu parser protect final static log log log factori get log orc storag class protect boolean requir column null privat static final string schema signatur suffix schema privat static final string requir column suffix column privat static final string search arg suffix sarg static valid option new option valid option add option stripe size true set stripe size file valid option add option be row index stride true set distanc entri row index valid option add option b buffer size true size memori buffer use compress store stripe memori valid option add option p block pad fals set whether block pad prevent stripe straddl block valid option add option c compress true set gener compress use compress datum valid option add option v version true set version file write public orc storag public orc storag string option string opt arr option split tri command line configur option parser pars valid option opt arr configur option option stripe size long pars long configur option get option valu configur option option be row index stride integ pars int configur option get option valu r configur option option b buffer size integ pars int configur option get option valu b block pad configur option option p configur option option c compress compress kind valu configur option get option valu c configur option option v version version name configur option get option valu v catch pars except e log error except orc storag e log error orc storag call argument option warn pars except orc storag warn help formatt formatt new help formatt formatt print help orc storag option valid option throw new runtim except e overrid public string rel ab path store locat string locat path cur dir throw except return load func get absolut path locat cur dir overrid public output format get output format throw except return new orc new output format overrid public void set store locat string locat job job throw except context get context frontend stripe size null job get configur set long hive conf conf var varnam stripe size row index stride null job get configur set int hive conf conf var varnam row index stride buffer size null job get configur set int hive conf conf var varnam buffer size block pad null job get configur set boolean hive conf conf var varnam block pad compress null job get configur set hive conf conf var varnam compress string version null job get configur set hive conf conf var varnam version get name file output format set output path job new path locat type info null properti p context get context get properti get class type info type info object serial deseri p get properti signatur schema signatur suffix oi null oi hive util creat object inspector type info overrid public void check schema resourc schema rs throw except resourc field schema fs new resourc field schema fs set type data type fs set schema rs type info hive util get type info fs properti p context get context get properti get class p set properti signatur schema signatur suffix object serial serial type info overrid public void prepar write record writer writer throw except writer writer overrid public void put next tupl throw except tri writer write null serd serial oi catch interrupt except e throw new except e overrid public void set store func context signatur string signatur signatur signatur overrid public void set context signatur string signatur signatur signatur overrid public void cleanup failur string locat job job throw except store func cleanup failur impl locat job overrid public void cleanup success string locat job job throw except overrid public void set locat string locat job job throw except properti p context get context get properti get class context get context frontend type info type info object serial deseri p get properti signatur schema signatur suffix els type info null type info get type info locat job type info null oi null oi orc struct creat object inspector type info context get context frontend p get properti signatur requir column suffix null requir column boolean object serial deseri p get properti signatur requir column suffix job get configur set boolean column project util fals job get configur set column project util get reqir column id string requir column p get properti signatur search arg suffix null bug set search argument alway expect set job get configur set column project util get reqir column name string get schema locat job requir column els p get properti signatur search arg suffix null bug set search argument alway expect set job get configur set column project util get reqir column name string get schema locat job p get properti signatur search arg suffix null job get configur set p get properti signatur search arg suffix file input format set input path job locat privat string get reqir column id string boolean requir column string builder sb new string builder int requir column length requir column sb append append sb char sb length sb delet char sb length return sb string privat string get reqir column name string resourc schema schema string builder sb new string builder resourc field schema field schema get field sb append field get name append sb char sb length sb delet char sb length return sb string privat string get reqir column name string resourc schema schema boolean requir column string builder sb new string builder resourc field schema field schema get field int requir column length requir column sb append field append sb char sb length sb delet char sb length return sb string overrid public input format get input format throw except return new orc new input format overrid public void prepar read record reader reader split split throw except reader overrid public tupl get next throw except tri boolean done next key valu do return null object valu get current valu tupl tupl hive util convert hive valu oi requir column return catch interrupt except e int err code string err msg error read input throw new exec except err msg err code except e overrid public list string get ship file class class list new class orc file class hive conf class abstract ser de class org apach hadoop hive shim hadoop shim class hadoop shim secur class hadoop shim class input class return func util get ship file class list privat static path get first file string locat file system f path filter filter throw except string locat get path string locat path path new path locat length int path length path new path locat list file statu statu list new array list file statu int path length file statu file f glob statu path file null file statu tempf file statu list add tempf file statu statu array file statu statu list array new file statu statu list size path p util depth first search file statu array f filter return p overrid public resourc schema get schema string locat job job throw except type info null type info get type info locat job still null mean case multipl load store type info null return null resourc field schema f hive util get resourc field schema type info return f get schema privat type info get type info string locat job job throw except properti p context get context get properti get class type info type info type info object serial deseri p get properti signatur schema signatur suffix type info null type info get type info locat locat job type info null p set properti signatur schema signatur suffix object serial serial type info return type info privat type info get type info locat string locat job job throw except file system f file system get new path locat uri job get configur path path get first file locat f new non empti orc file filter fs path null log info find file locat probabl multipl load store script return null reader reader orc file creat reader f path object inspector oip object inspector reader get object inspector return type info util get type info object inspector oip public static class non empti orc file filter implement path filter privat file system f public non empti orc file filter file system fs fs fs overrid public boolean accept path path reader reader tri reader orc file creat reader f path object inspector oip object inspector reader get object inspector resourc field schema rs hive util get resourc field schema type info util get type info object inspector oip rs get schema get field length return true catch except e throw new runtim except e return fals overrid public resourc statist get statist string locat job job throw except return null overrid public string get partit key string locat job job throw except return null overrid public void set partit filter express partit filter throw except overrid public list oper set get featur return array list load push oper set overrid public requir field respons push project requir field list requir field list throw frontend except requir field list null return null requir field list get field null int schema size struct type info type info get struct field type info size requir column new boolean schema size requir field rf requir field list get field rf get index requir column rf get index true properti p context get context get properti get class tri p set properti signatur requir column suffix object serial serial requir column catch except e throw new runtim except serial requir column return new requir field respons true overrid public list string get predic field string locat job job throw except resourc schema schema get schema locat job list string predic field new array list string resourc field schema field schema get field switch field get type case data type case data type case data type case data type case data type case data type case data type case data type case data type predic field add field get name break default skip datum type data type data type data type break return predic field overrid public list op type get support express type list op type type new array list op type type add op type type add op type type add op type type add op type type add op type type add op type type add op type type add op type type add op type type add op type type add op type type add op type return type overrid public void set pushdown predic express expr throw except search argument arg get search argument expr arg null log info pushdown predic express expr log info pushdown predic search argument n arg properti p context get context get properti get class tri p set properti signatur search arg suffix arg kryo catch except e throw new except serial search argument arg visibl test search argument get search argument express expr expr null return null builder builder search argument factori new builder boolean begin expr get op type equal op type expr get op type equal op type expr get op type equal op type begin builder start build search argument expr builder begin builder end search argument arg builder build return arg privat void build search argument express expr builder builder expr instanceof binari express express lh binari express expr get lh express rh binari express expr get rh switch expr get op type case builder start build search argument lh builder build search argument rh builder builder end break case builder start build search argument lh builder build search argument rh builder builder end break case builder equal get column name lh get express valu rh break case builder start builder equal get column name lh get express valu rh builder end break case builder less get column name lh get express valu rh break case builder less equal get column name lh get express valu rh break case builder start builder less equal get column name lh get express valu rh builder end break case builder start builder less get column name lh get express valu rh builder end break case express express rh builder get column name lh get search arg obj valu get low get search arg obj valu get upper case express express rh builder get column name lh get search arg obj valu get valu array default throw new runtim except unsupport binari express type expr get op type expr els expr instanceof unari express express unari expr unari express expr get express switch expr get op type case builder null get column name unari expr break case builder start build search argument unari expr builder builder end break default throw new runtim except unsupport unari express type expr get op type expr els throw new runtim except unsupport express type expr get op type expr privat string get column name express expr tri return column expr get name catch class cast except e throw new runtim except expect column find expr get class get name express expr e privat object get express valu express expr switch expr get op type case return column expr get name case return get search arg obj valu const expr get valu default throw new runtim except unsupport express type expr get op type expr privat list object get search arg obj valu list object valu valu get instanceof big integ valu get instanceof big decim valu get instanceof date time return valu list object new valu new array list object valu size object valu valu new valu add get search arg obj valu valu return valu privat object get search arg obj valu object valu valu instanceof big integ return new big decim big integ valu els valu instanceof big decim return valu els valu instanceof date time return new timestamp date time valu get milli els return valu 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat boolean express public class express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public express oper plan plan logic express lh logic express rh super plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof express express ao express return ao get lh equal get lh ao get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool pigstat import java io except import java util iter import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f path import org apach load func import org apach except import org apach backend executionengin exec except import org apach backend hadoop datastorag configur util import org apach backend hadoop executionengin physic layer relat oper store import org apach classif interfac audienc import org apach classif interfac stabil import org apach datum tupl import org apach impl context import org apach impl io read end loader class encapsul runtim statist user specifi output interfac audienc public interfac stabil evolv public final class output stat privat string name privat string locat privat long byte privat long record privat boolean success privat store store null privat configur conf privat static final log log factori get log output stat class public output stat string locat long byte long record boolean success locat locat byte byte record record success success tri name new path locat get name catch except e locat mal format name locat public string get name return name public string get locat return locat public long get byte return byte public void set byte long byte byte byte public long get record return record public void set record long record record record public long get number record return record public string get function name return store null null store get file get func spec get class name public boolean success return success public void set success boolean success success success public string get alia return store null null store get alia public store get store return store public configur get conf return conf public string get display string string builder sb new string builder success sb append success store record sb append record append record els sb append record byte sb append append byte append byte sb append append locat append n els sb append fail produc result append locat append n return sb string public void set store store store store store public void set conf configur conf conf conf public iter tupl iter throw except final load func p context context script state get get context context null store null throw new illeg argument except tri load func origin load func load func context instanti func spec store get file get func spec p load func new read end loader origin load func configur util configur context get properti store get file get file name catch except e int err code string msg unabl get result store get file throw new exec except msg err code except e return new iter tupl tupl boolean end overrid public boolean next end return fals tri null p get next null end true catch except e error e null end true throw new error e return end overrid public tupl next tupl next next null null return next tri next p get next catch except e error e next null end true return next overrid public void remov throw new runtim except remov support 
gener java edit line pars except java version java option null packag org apach tool paramet except throw pars error encount explicitli creat object except type call method gener pars except gener parser modifi class custom error report mechan long retain public field public class pars except extend except version identifi serializ class increment serial form class chang privat static final long serial version constructor use method gener pars except gener parser call constructor gener new object type field current token expect token sequenc token imag set public pars except token current token val int expect token sequenc val string token imag val super initialis current token val expect token sequenc val token imag val current token current token val expect token sequenc expect token sequenc val token imag token imag val follow constructor use whatev purpos think construct except manner make except behav normal way e document class throwabl field error token expect token sequenc token imag contain relev inform java gener code use constructor public pars except super constructor messag public pars except string messag super messag last token consum success object creat due pars error token followng token therefor first error token public token current token entri array array integ array integ repres sequenc token ordin valu expect point pars public int expect token sequenc refer token imag array gener parser within pars error occur array defin gener constant interfac public string token imag use current token expect token sequenc gener pars error messag return object creat due pars error catch get throw parser correct error messag get display privat static string initialis token current token int expect token sequenc string token imag string eol system get properti line separ n string buffer expect new string buffer int max size int expect token sequenc length max size expect token sequenc length max size expect token sequenc length int j j expect token sequenc length j expect append token imag expect token sequenc j append expect token sequenc expect token sequenc length expect append expect append eol append string retval encount token tok current token next int max size retval tok kind retval token imag break retval token imag tok kind retval retval add escap tok imag retval tok tok next retval line current token next begin line column current token next begin column retval eol expect token sequenc length retval expect eol els retval expect one eol retval expect string return retval end line string machin protect string eol system get properti line separ n use convert raw charact escap version raw version use part string liter static string add escap string str string buffer retval new string buffer char ch int str length switch str char case continu case b retval append b continu case retval append continu case n retval append n continu case f retval append f continu case be retval append r continu case retval append continu case retval append continu case retval append continu default ch str char x ch x e string integ string ch retval append u substr length length els retval append ch continu return retval string java origin checksum e c cb ba fa edit line 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach parser import org antlr runtim recognit except import org apach impl logic layer frontend except public class parser except extend frontend except privat static final long serial version privat static final int error code public parser except recognit except reco except super script fail pars reco except error code reco except public parser except string msg super msg error code public parser except string msg sourc locat locat super msg error code locat public parser except string msg throwabl caus super msg error code caus overrid public string string return fail pars get messag 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic rule import java io except import java util array list import java util array import java util hash map import java util list import java util map import org apach common log log import org apach common log log factori import org apach hadoop mapreduc job import org apach express import org apach express binari express import org apach express column import org apach load func import org apach load metadata import org apach impl logic layer frontend except import org apach newplan filter extractor import org apach newplan oper import org apach newplan oper plan import org apach newplan oper sub plan import org apach newplan partit filter extractor import org apach newplan logic relat filter import org apach newplan logic relat load import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach newplan optim rule import org apach newplan optim transform public class partit filter optim extend rule privat static final log log factori get log partit filter optim class privat string partit key refer load metada implement privat load metadata load metadata refer load func implement privat load func load func privat load lo load privat filter lo filter map column name report link load metadata get schema string org apach hadoop conf configur present link load get schema two differ user provid schema load statement privat map string string col name map new hash map string string map column namea present link load get schema report link load metadata get schema string org apach hadoop conf configur two differ user provid schema load statement privat map string string revers col name map new hash map string string public partit filter optim string name super name fals overrid protect oper plan build pattern match foreach logic plan plan new logic plan logic relat oper load new load null plan plan add load logic relat oper filter new filter plan plan add filter plan connect load filter return plan overrid public transform get new transform return new partit filter push transform public class partit filter push transform extend transform protect oper sub plan sub plan privat boolean plan chang overrid public boolean check oper plan match throw frontend except lo load load match get sourc get match filter list oper suc current plan get successor lo load suc null suc size suc get instanceof filter return fals lo filter filter suc get filter depend load skip optim current plan get soft link predecessor lo filter null return fals check load func implement load metada load func lo load get load func load func instanceof load metadata return fals load metadata load metadata load func tri partit key load metadata get partit key lo load get file spec get file name new job lo load get configur catch except e throw new frontend except e partit key null partit key length return fals return true overrid public oper plan report chang return null case partit filter extract mean plan n chang return modifi plan filter remov return plan chang sub plan null overrid public void transform oper plan match throw frontend except sub plan new oper sub plan current plan setup col name map filter extractor filter finder new partit filter extractor lo filter get filter plan get map key partit key filter finder visit info partit key array list partit key express partit filter filter finder get push express partit filter null column name filter may one provid user schema load statement may need replac partit column name give load func get schema updat map col name partit filter tri info set partit filter partit filter loader load metadata load metadata set partit filter partit filter plan chang true catch except e throw new frontend except e filter finder filter remov current plan remov reconnect lo filter els lo filter set filter plan filter finder get filter plan protect void updat map col name express expr expr instanceof binari express updat map col name binari express expr get lh updat map col name binari express expr get rh els expr instanceof column column col column expr col set name revers col name map get col get name partit key argument report link load metadata get partit key string org apach hadoop conf configur user may renam provid schema differ name load statement method replac former name latter name param partit key return protect list string get map key string partit key list string map key new array list string partit key length int partit key length map key add col name map get partit key return map key protect void setup col name map throw frontend except logic schema lo load schema lo load get schema logic schema load func schema lo load get determin schema int load func schema size col name map put load func schema get field alia lo load schema size lo load schema get field alia load func schema get field alia revers col name map put lo load schema size lo load schema get field alia load func schema get field alia load func schema get field alia 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java util list import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper add import org apach backend hadoop executionengin physic layer express oper constant express import org apach backend hadoop executionengin physic layer express oper divid import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper greater expr import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper less expr import org apach backend hadoop executionengin physic layer express oper mod import org apach backend hadoop executionengin physic layer express oper multipli import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper bin cond import org apach backend hadoop executionengin physic layer express oper cast import org apach backend hadoop executionengin physic layer express oper null import org apach backend hadoop executionengin physic layer express oper map look import org apach backend hadoop executionengin physic layer express oper neg import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper project import org apach backend hadoop executionengin physic layer express oper regexp import org apach backend hadoop executionengin physic layer express oper user comparison func import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer express oper subtract import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper collect group import org apach backend hadoop executionengin physic layer relat oper demux import org apach backend hadoop executionengin physic layer relat oper distinct import org apach backend hadoop executionengin physic layer relat oper join import org apach backend hadoop executionengin physic layer relat oper filter import org apach backend hadoop executionengin physic layer relat oper import org apach backend hadoop executionengin physic layer relat oper global rearrang import org apach backend hadoop executionengin physic layer relat oper limit import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach backend hadoop executionengin physic layer relat oper merg cogroup import org apach backend hadoop executionengin physic layer relat oper merg join import org apach backend hadoop executionengin physic layer relat oper nativ import org apach backend hadoop executionengin physic layer relat oper optim import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper partial agg import org apach backend hadoop executionengin physic layer relat oper poisson sampl import org apach backend hadoop executionengin physic layer relat oper pre combin local rearrang import org apach backend hadoop executionengin physic layer relat oper rank import org apach backend hadoop executionengin physic layer relat oper reservoir sampl import org apach backend hadoop executionengin physic layer relat oper skew join import org apach backend hadoop executionengin physic layer relat oper sort import org apach backend hadoop executionengin physic layer relat oper split import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer relat oper stream import org apach backend hadoop executionengin physic layer relat oper union import org apach impl plan depend order walker import org apach impl plan visitor except set parent plan physic oper note parent plan bit misnom actual want oper point plan necessarili one member public class phi plan setter extend phi plan visitor physic plan parent public phi plan setter physic plan plan super plan new depend order walker physic oper physic plan plan parent plan overrid public void visit physic oper op op set parent plan parent overrid public void visit load load ld throw visitor except ld set parent plan parent overrid public void visit nativ nativ nt throw visitor except not set parent plan parent overrid public void visit store store st throw visitor except st set parent plan parent overrid public void visit filter filter fl throw visitor except super visit filter fl fl set parent plan parent overrid public void visit local rearrang local rearrang lr throw visitor except super visit local rearrang lr lr set parent plan parent overrid public void visit collect group collect group mg throw visitor except super visit collect group mg mg set parent plan parent overrid public void visit global rearrang global rearrang gr throw visitor except gr set parent plan parent overrid public void visit packag packag pkg throw visitor except pkg set parent plan parent overrid public void visit nfe throw visitor except super visit nfe nfe set parent plan parent overrid public void visit union union un throw visitor except un set parent plan parent overrid public void visit split split spl throw visitor except physic plan old plan parent list physic plan plan spl get plan physic plan plan plan parent plan push walker current walker spawn child walker plan visit pop walker parent old plan spl set parent plan parent overrid public void visit demux demux demux throw visitor except super visit demux demux demux set parent plan parent overrid public void visit distinct distinct distinct throw visitor except distinct set parent plan parent overrid public void visit sort sort sort throw visitor except super visit sort sort sort set parent plan parent overrid public void visit rank rank rank throw visitor except rank set parent plan parent overrid public void visit constant constant express cnst throw visitor except cnst set parent plan parent overrid public void visit project project proj throw visitor except proj set parent plan parent overrid public void visit greater greater expr grt throw visitor except grt set parent plan parent overrid public void visit less less expr lt throw visitor except lt set parent plan parent overrid public void visit equal equal expr gte throw visitor except gte set parent plan parent overrid public void visit equal equal expr lte throw visitor except lte set parent plan parent overrid public void visit equal equal expr eq throw visitor except eq set parent plan parent overrid public void visit equal equal expr eq throw visitor except eq set parent plan parent overrid public void visit regexp regexp throw visitor except set parent plan parent overrid public void visit null null null throw visitor except null set parent plan parent overrid public void visit add add add throw visitor except add set parent plan parent overrid public void visit subtract subtract sub throw visitor except sub set parent plan parent overrid public void visit multipli multipli mul throw visitor except mul set parent plan parent overrid public void visit divid divid dv throw visitor except dv set parent plan parent overrid public void visit mod mod mod throw visitor except mod set parent plan parent overrid public void visit throw visitor except set parent plan parent overrid public void visit throw visitor except set parent plan parent overrid public void visit throw visitor except set parent plan parent overrid public void visit bin cond bin cond bin cond bin cond set parent plan parent overrid public void visit neg neg neg neg set parent plan parent overrid public void visit user func user func user func throw visitor except user func set parent plan parent overrid public void visit comparison func user comparison func comp func throw visitor except comp func set parent plan parent overrid public void visit map look map look map look map look set parent plan parent overrid public void visit cast cast cast cast set parent plan parent overrid public void visit limit limit lim throw visitor except lim set parent plan parent overrid public void visit join join join throw visitor except join set parent plan parent overrid public void visit merg join merg join join throw visitor except join set parent plan parent overrid public void visit skew join skew join join throw visitor except join set parent plan parent overrid public void visit stream stream stream throw visitor except stream set parent plan parent overrid public void visit partit rearrang partit rearrang lrfi throw visitor except super visit partit rearrang lrfi lrfi set parent plan parent overrid public void visit partial agg partial agg po partial agg throw visitor except po partial agg set parent plan parent overrid public void visit optim optim optim throw visitor except optim set parent plan parent overrid public void visit pre combin local rearrang pre combin local rearrang pre combin local rearrang throw visitor except super visit pre combin local rearrang pre combin local rearrang pre combin local rearrang set parent plan parent overrid public void visit merg co group merg cogroup merg co grp throw visitor except merg co grp set parent plan parent overrid public void visit reservoir sampl reservoir sampl reservoir sampl throw visitor except reservoir sampl set parent plan parent overrid public void visit poisson sampl poisson sampl poisson sampl throw visitor except poisson sampl set parent plan parent 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer plan import java util list import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper add import org apach backend hadoop executionengin physic layer express oper constant express import org apach backend hadoop executionengin physic layer express oper divid import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper greater expr import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper less expr import org apach backend hadoop executionengin physic layer express oper mod import org apach backend hadoop executionengin physic layer express oper multipli import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper bin cond import org apach backend hadoop executionengin physic layer express oper cast import org apach backend hadoop executionengin physic layer express oper null import org apach backend hadoop executionengin physic layer express oper map look import org apach backend hadoop executionengin physic layer express oper neg import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper project import org apach backend hadoop executionengin physic layer express oper regexp import org apach backend hadoop executionengin physic layer express oper user comparison func import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer express oper subtract import org apach backend hadoop executionengin physic layer relat oper collect group import org apach backend hadoop executionengin physic layer relat oper counter import org apach backend hadoop executionengin physic layer relat oper cross import org apach backend hadoop executionengin physic layer relat oper demux import org apach backend hadoop executionengin physic layer relat oper distinct import org apach backend hadoop executionengin physic layer relat oper join import org apach backend hadoop executionengin physic layer relat oper filter import org apach backend hadoop executionengin physic layer relat oper import org apach backend hadoop executionengin physic layer relat oper global rearrang import org apach backend hadoop executionengin physic layer relat oper limit import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach backend hadoop executionengin physic layer relat oper merg cogroup import org apach backend hadoop executionengin physic layer relat oper merg join import org apach backend hadoop executionengin physic layer relat oper nativ import org apach backend hadoop executionengin physic layer relat oper optim import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper partial agg import org apach backend hadoop executionengin physic layer relat oper partit rearrang import org apach backend hadoop executionengin physic layer relat oper poisson sampl import org apach backend hadoop executionengin physic layer relat oper pre combin local rearrang import org apach backend hadoop executionengin physic layer relat oper rank import org apach backend hadoop executionengin physic layer relat oper reservoir sampl import org apach backend hadoop executionengin physic layer relat oper skew join import org apach backend hadoop executionengin physic layer relat oper sort import org apach backend hadoop executionengin physic layer relat oper split import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer relat oper stream import org apach backend hadoop executionengin physic layer relat oper union import org apach backend hadoop executionengin physic layer relat oper broadcast spark import org apach impl plan plan visitor import org apach impl plan plan walker import org apach impl plan visitor except visitor class physic plan use creat visitor plan visit call visit method travers plan depth first fashion class also visit nest plan insid oper one extend class modifi natur visit maintain relev state inform visit two differ oper public class phi plan visitor extend plan visitor physic oper physic plan public phi plan visitor physic plan plan plan walker physic oper physic plan walker super plan walker public void visit physic oper op noth public void visit load load ld throw visitor except noth public void visit store store st throw visitor except noth public void visit nativ nativ nat throw visitor except noth public void visit filter filter fl throw visitor except push walker current walker spawn child walker fl get plan visit pop walker public void visit collect group collect group mg throw visitor except list physic plan inp plan mg get plan physic plan plan inp plan push walker current walker spawn child walker plan visit pop walker public void visit local rearrang local rearrang lr throw visitor except list physic plan inp plan lr get plan physic plan plan inp plan push walker current walker spawn child walker plan visit pop walker public void visit global rearrang global rearrang gr throw visitor except noth public void visit packag packag pkg throw visitor except noth public void visit nfe throw visitor except list physic plan inp plan nfe get input plan physic plan plan inp plan push walker current walker spawn child walker plan visit pop walker public void visit union union un throw visitor except noth public void visit split split spl throw visitor except list physic plan plan spl get plan physic plan plan plan push walker current walker spawn child walker plan visit pop walker public void visit demux demux demux throw visitor except list physic plan plan demux get plan physic plan plan plan push walker current walker spawn child walker plan visit pop walker public void visit counter counter po counter throw visitor except noth public void visit rank rank rank throw visitor except noth public void visit distinct distinct distinct throw visitor except noth public void visit sort sort sort throw visitor except list physic plan inp plan sort get sort plan physic plan plan inp plan push walker current walker spawn child walker plan visit pop walker public void visit constant constant express cnst throw visitor except noth public void visit project project proj throw visitor except noth public void visit greater greater expr grt throw visitor except noth public void visit less less expr lt throw visitor except noth public void visit equal equal expr gte throw visitor except noth public void visit equal equal expr lte throw visitor except noth public void visit equal equal expr eq throw visitor except noth public void visit equal equal expr eq throw visitor except noth public void visit regexp regexp throw visitor except noth public void visit null null null throw visitor except public void visit add add add throw visitor except noth public void visit subtract subtract sub throw visitor except noth public void visit multipli multipli mul throw visitor except noth public void visit divid divid dv throw visitor except noth public void visit mod mod mod throw visitor except noth public void visit throw visitor except noth public void visit throw visitor except noth public void visit throw visitor except noth public void visit bin cond bin cond bin cond noth public void visit neg neg neg noth public void visit user func user func user func throw visitor except noth public void visit comparison func user comparison func comp func throw visitor except noth public void visit map look map look map look auto gener method stub public void visit cast cast cast auto gener method stub public void visit limit limit lim throw visitor except physic plan inp plan lim get limit plan inp plan null push walker current walker spawn child walker inp plan visit pop walker public void visit cross cross cross throw visitor except noth public void visit join join join throw visitor except noth public void visit merg join merg join join throw visitor except noth public void visit merg co group merg cogroup merg co grp throw visitor except param stream throw visitor except public void visit stream stream stream throw visitor except auto gener method stub public void visit skew join skew join sk throw visitor except public void visit partit rearrang partit rearrang pr throw visitor except list physic plan inp plan pr get plan physic plan plan inp plan push walker current walker spawn child walker plan visit pop walker param optim public void visit optim optim optim throw visitor except auto gener method stub param pre combin local rearrang public void visit pre combin local rearrang pre combin local rearrang pre combin local rearrang throw visitor except list physic plan inp plan pre combin local rearrang get plan physic plan plan inp plan push walker current walker spawn child walker plan visit pop walker public void visit partial agg partial agg po partial agg throw visitor except public void visit reservoir sampl reservoir sampl reservoir sampl throw visitor except public void visit poisson sampl poisson sampl poisson sampl throw visitor except public void visit broadcast spark broadcast spark po broadcast spark 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer plan import java io byte array output stream import java io except import java io output stream import java io print stream import java util array list import java util collect import java util collect import java util compar import java util hash map import java util list import java util map import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper binari express oper import org apach backend hadoop executionengin physic layer express oper comparison oper import org apach backend hadoop executionengin physic layer express oper express oper import org apach backend hadoop executionengin physic layer express oper bin cond import org apach backend hadoop executionengin physic layer express oper unari express oper import org apach datum tupl import org apach impl plan oper plan import org apach impl plan plan except import org apach impl plan visitor except import org apach impl util multi map import com googl common collect hash bi map base class type physic plan extend oper plan public class physic plan extend oper plan physic oper implement cloneabl privat static final long serial version marker indic whether input plan send current use stream know map call reduc call finish input expect partial agg public boolean end input fals privat multi map physic oper physic oper opmap null public physic plan super public void attach input tupl list physic oper root get root physic oper oper root oper attach input public void detach input physic oper op get root op detach input write visual represent physic plan give output stream param output stream visual represent write public void explain output stream explain true write visual represent physic plan give output stream param output stream visual represent write param verbos amount inform print public void explain output stream boolean verbos plan printer physic oper physic plan mpp new plan printer physic oper physic plan mpp set verbos verbos tri mpp print catch visitor except e auto gener catch block e print stack trace catch except e auto gener catch block e print stack trace write visual represent physic plan give printstream param ps print stream visual represent write param format format print param verbos amount inform print public void explain print stream ps string format boolean verbos format equal xml ps println physic plan support physic plan return ps println ps println physic plan ps println format equal text explain output stream ps verbos ps println els format equal dot dot printer pp new dot printer ps pp set verbos verbos pp dump ps println overrid public void connect physic oper physic oper throw plan except super connect set input get predecessor overrid public void remov physic oper op op set input null list physic oper suc get successor op suc null suc size physic oper suc suc successor could multipl input exampl union remov op list input remov input set successor input null list physic oper succ input suc get input succ input remov op succ input size suc set input null els suc set input succ input super remov op non javadoc see org apach impl plan oper plan replac org apach impl plan oper org apach impl plan oper overrid public void replac physic oper old node physic oper new node throw plan except list physic oper old node successor get successor old node super replac old node new node old node successor null physic oper pred old node successor list physic oper input pred get input replac old node new node input list old node successor int input size input get old node input set new node non javadoc see org apach impl plan oper plan add org apach impl plan oper overrid public void add physic oper op attach plan plan oper part op set parent plan super add op public boolean empti return op size overrid public string string empti return empti plan els byte array output stream bao new byte array output stream explain bao true return bao string overrid public physic plan clone throw clone support except physic plan clone new physic plan get node plan clone make clone creat map clone origin walk connect plan creat equival connect clone map physic oper physic oper match new hash map physic oper physic oper op size sort explain output scope id jdk jdk list physic oper op clone new array list physic oper op key set collect sort op clone physic oper op op clone physic oper c op clone clone add c opmap null opmap put op c match put op c build edg physic oper op edg key set physic oper clone match get op clone null string msg unabl find clone op op name throw new clone support except msg collect physic oper op edg get op physic oper op op physic oper clone match get op clone null string msg unabl find clone op op name throw new clone support except msg tri clone connect clone clone catch plan except pe clone support except cnse new clone support except cnse init caus pe throw cnse fix input oper physic oper op op key set list physic oper input op get input input null input size continu list physic oper new input new array list physic oper input size physic oper clone op match get op clone op null string msg unabl find clone op op name throw new clone support except msg physic oper op input physic oper clone op match get op clone op null string msg unabl find clone op op name throw new clone support except msg new input add clone op clone op set input new input physic oper op op key set op instanceof comparison oper comparison oper orig comparison oper op comparison oper clone op comparison oper match get op clone op set operand type orig get operand type op instanceof unari express oper unari express oper orig unari express oper op unari express oper clone op unari express oper match get op clone op set expr express oper match get orig get expr els op instanceof binari express oper binari express oper orig binari express oper op binari express oper clone op binari express oper match get op clone op set rh express oper match get orig get rh clone op set lh express oper match get orig get lh els op instanceof bin cond bin cond orig bin cond op bin cond clone op bin cond match get op clone op set rh express oper match get orig get rh clone op set lh express oper match get orig get lh clone op set cond express oper match get orig get cond fix order edg edg list map physic oper physic oper invert match hash bi map creat match invers physic oper new op clone edg key set list physic oper new list clone edg get new op new list size list physic oper origin list edg get invert match get new op collect sort new list new edg order helper origin list invert match return clone public void set op map multi map physic oper physic oper opmap opmap opmap public void reset op map opmap null privat static class edg order helper implement compar physic oper privat final map physic oper physic oper invert match privat final list physic oper origin list public edg order helper list physic oper origin list map physic oper physic oper invert match origin list origin list invert match invert match overrid public int compar physic oper physic oper return origin list index invert match get origin list index invert match get 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io byte array output stream import java io except import java util array list import java util properti import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop io writabl import org apach hadoop mapreduc reduc import org apach log j properti configur import org apach except import org apach backend executionengin exec except import org apach backend hadoop data type import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper join packag import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin tez plan oper bloom packag import org apach backend hadoop executionengin util map red util import org apach datum tupl import org apach impl context import org apach impl impl constant import org apach impl io nullabl tupl import org apach impl io nullabl writabl import org apach impl util object serial import org apach impl util context import org apach tool pigstat statu report public class combin public static class combin extend reduc nullabl writabl nullabl tupl nullabl writabl writabl privat static final log log log factori get log combin class combin call multipl time map reduc privat static boolean first time true privat byte key type reduc plan privat physic plan cp packag oper root everi map reduc plan obtain job conf portion remain remov reduc plan privat packag pack progress report report physic oper root physic oper leaf privat volatil boolean initi fals static datum cleanup public static void static datum cleanup first time true configur reduc plan packag oper report thread suppress warn uncheck overrid protect void setup context context throw except interrupt except super setup context configur j conf context get configur tri context set packag import list array list string object serial deseri j conf get udf import list properti log j properti properti object serial deseri j conf get impl constant log j properti null properti configur configur log j properti context get context reset map red util setup context context get configur cp physic plan object serial deseri j conf get combin plan pack packag object serial deseri j conf get combin packag remov cp empti log debug combin plan empti els byte array output stream bao new byte array output stream cp explain bao log debug bao string key type byte object serial deseri j conf get map keytyp till report new progress report cp empti root cp get root array new physic oper leaf cp get leav get catch except ioe string msg problem configur combin reduc plan throw new runtim except msg ioe avoid log spam first time log info alia process per job phase alia name line offset j conf get alia locat first time fals reduc function packag key list lt tupl gt key bag lt tupl gt convert hadoop type key type packag result either collect reduc plan empti pass reduc plan overrid protect void reduc nullabl writabl key iter nullabl tupl tup iter context context throw except interrupt except initi initi true report set rep context physic oper set report report boolean aggreg warn true equal ignor case context get configur get aggreg warn statu report statu report statu report get instanc statu report set context new task context context hadoop logger hadoop logger hadoop logger get instanc hadoop logger set report statu report hadoop logger set aggreg aggreg warn physic oper set logger hadoop logger case optim combin packag foreach could get mani tupl getnext call join packag case process till see join pacakag get next pack get pkgr instanceof join packag pack get pkgr instanceof bloom packag pack attach input key tup iter iter true process one packag output context break els optim packag give one tupl key pack attach input key tup iter iter process one packag output context return fals output true end process public boolean process one packag output context oc throw except interrupt except tri result re pack get next tupl re return statu statu tupl pack re tupl re result cp empti oc write null pack re return fals int root length root attach input pack re true result red re leaf get next tupl red re return statu statu tupl tupl tupl red re result byte index byte tupl get nullabl writabl key data type get writabl compar type tupl get key type nullabl tupl val new nullabl tupl tupl tupl get key valu need index key need sort index addit key valu valu need packag properli assign tupl slot project key set index index val set index index oc write key val continu red re return statu statu break red re return statu statu continu red re return statu statu int err code string msg receiv error process combin plan red re result null msg red re result throw new exec except msg err code except re return statu statu return fals re return statu statu int err code string msg packag error process group throw new exec except msg err code except re return statu statu return true return fals catch exec except e throw e call intermedi key valu process cleanup refer physic plan overrid protect void cleanup context context throw except interrupt except super cleanup context leaf null pack null report null avoid tez physic oper set report null root null cp null return key type public byte get key type return key type param key type key type set public void set key type byte key type key type key type 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach valid import java io except import org apach classif interfac audienc import org apach classif interfac stabil import org apach impl logic layer frontend except interfac defin command link command filter valid command method oper interfac audienc privat interfac stabil evolv public interfac command filter public enum command valid command defin link command param command throw except public void valid command command throw frontend except 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl import com googl common base splitter import com googl common collect list import java io buffer reader import java io buffer writer import java io file import java io file find except import java io file reader import java io file writer import java io except import java io input stream import java io input stream reader import java io object input stream import java io object output stream import java io serializ import java io string writer import java lang reflect constructor import java net malform except import java net import java net import java net class loader import java util array list import java util array import java util hash map import java util link hash map import java util link list import java util list import java util map import java util properti import java util string token import java util vector import org antlr runtim tree tree import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach log j level import org apach exec type import org apach exec type provid import org apach func spec import org apach except import org apach backend datastorag data storag import org apach backend datastorag data storag except import org apach backend datastorag element descriptor import org apach backend executionengin exec except import org apach backend executionengin execut engin import org apach backend hadoop datastorag configur util import org apach backend hadoop datastorag data storag import org apach backend hadoop executionengin map reduc layer configur import org apach impl stream execut manag import org apach impl stream stream command import org apach tool paramet paramet substitut preprocessor import org apach tool paramet pars except import org apach tool paramet preprocessor context public class context implement serializ privat static final long serial version privat static final log log log factori get log context class privat static object instanti lock new object public static final string job name public static final string latin public static final string job prioriti public static final string cmd arg remaind serial stuff make small give need hadoop side also serializ e g configur one local mapreduc custom exec type differ execut engin privat exec type exec type main file system job shell command access transient privat data storag df local file system jar file etc resid transient privat data storag lf handl back end transient privat execut engin execut engin privat properti properti resourc job jar script udf file cach macro abstract syntax tree jar file global whole script includ regist jar jar defin dpig addit jar transient public list extra jar new link list origin path extra jar come use avoid redund import transient privat map string extra jar origin path new hash map string jar need script udf jython jar etc transient public list string script jar new array list string jar predeploy cluster thu merg even subset transient public vector string predeploy jar new vector string script file need run job deprec public list string script file new array list string privat map string file alias script file new link hash map string file record script udf file path namespac regist use avoid redund import transient public map string string script fs cach macro file path abstract syntax tree use avoid pars macro transient public map string tree macro tabl map function name function spec privat map string func spec defin function new hash map string func spec tabl map name stream command privat map string stream command defin command new hash map string stream command privat static thread local array list string packag import list new thread local array list string privat static thread local map string class class cach new thread local map string class privat properti log j properti new properti privat level default log level level public int default parallel say whether process explain right explain might skip check logic plan valid file exist check etc public boolean explain fals process dump schema right public boolean dump schema fals whether process right public boolean illustr fals privat string last alia null list path skip automat ship list string skip ship path new array list string static datum cleanup public static void static datum cleanup packag import list set null extend class loader allow add classpath new jar regist privat static class context class loader extend class loader public context class loader class loader class loader new class loader public context class loader url class loader class loader super url class loader overrid public void add url super add url static privat context class loader classload new context class loader context class get class loader paramet relat field param list string key valu command line param file list path paramet file preprocessor context manag pars param param file actual map privat list string param privat list string param file transient privat preprocessor context preprocessor context new preprocessor context public list string get param return param public void set param list string param param param public list string get param file return param file public void set param file list string param file param file param file public preprocessor context get preprocessor context return preprocessor context public map string string get param val throw except map string string param val preprocessor context get param val param val null tri preprocessor context load param val param param file catch pars except e throw new except e get messag return preprocessor context get param val els return param val public context exec type new properti public context configur conf throw except configur util properti conf public context properti properti throw except exec type provid select exec type properti properti public context exec type exec type configur conf exec type configur util properti conf public context exec type exec type properti properti exec type exec type properti properti properti set properti exectyp exec type name execut engin exec type get execut engin add default path skip auto ship command skip ship path add bin skip ship path add usr bin skip ship path add usr local bin skip ship path add sbin skip ship path add usr sbin skip ship path add usr local sbin macro new hash map string tree script fs new hash map string string init method creat aim unifi grunt server approach common initi go privat void init properti get udf import list null context initi import list string properti get udf import list public static void initi import list string import list command line properti string token token new string token import list command line properti int po leav first import array list string import list get packag import list token token string import item token next token import item end import item import list add po import item po public void connect throw exec except execut engin init df execut engin get data storag lf new data storag creat file properti public void set jobtrack locat string new locat execut engin set properti configur new locat call add script file path new file path ensur give path add jar param path public void add script file string path add script file path path method add script file must add ship jar name differ local fs path param name name jar param path path local fs public void add script file string name string path path null alias script file put name replac first replac new file path public void add script jar string path path null script jar contain path script jar add path public void add jar string path throw malform except path null resourc new file path add jar resourc path public void add jar resourc string origin path throw malform except resourc null extra jar contain resourc extra jar add resourc extra jar origin path put resourc origin path classload add resourc thread current thread set context class loader context classload public boolean jar string path url extra jar extra jar origin path get url equal path return true return fals add specifi path predeploy jar list jar never includ gener job jar p call jar pre instal hadoop cluster reduc size job jar public void mark jar predeploy string path path null predeploy jar contain path predeploy jar add path public string param substitut input stream list string param list string param file throw except return param substitut new buffer reader new input stream reader param param file public string param substitut buffer reader reader list string param list string param file throw except param param param file param file return param substitut reader public string param substitut buffer reader reader throw except tri preprocessor context set context preprocessor context load param val param param file paramet substitut preprocessor psp new paramet substitut preprocessor preprocessor context string writer writer new string writer psp gen substitut file reader writer return writer string catch pars except e log error e get local messag throw new except e public buffer reader param substitut output file buffer reader reader string output file path list string param list string param file throw except param param param file param file return param substitut output file reader output file path public buffer reader param substitut output file buffer reader reader string output file path throw except tri preprocessor context load param val param param file paramet substitut preprocessor psp new paramet substitut preprocessor preprocessor context buffer writer writer new buffer writer new file writer output file path psp gen substitut file reader writer return new buffer reader new file reader output file path catch pars except e log error e get local messag throw new except e catch file find except e throw new except could find file substitut paramet output file path script file name file pair add job jar return name file pair public map string file get script file return alias script file public void renam string old name string new name throw except old name equal new name return system println renam old name new name element descriptor dst null element descriptor src null tri dst df element new name src df element old name catch data storag except e byte err src get error sourc int err code switch err src case except err code break case except err code break default err code break string msg unabl renam old name new name throw new exec except msg err code err src e dst exist dst delet src renam dst public void copi string src string dst boolean local dst throw except data storag dst storag df local dst dst storag lf element descriptor src element null element descriptor dst element null tri src element df element src dst element dst storag element dst catch data storag except e byte err src get error sourc int err code switch err src case except err code break case except err code break default err code break string msg unabl copi src dst throw new exec except msg err code err src e src element copi dst element properti fals public execut engin get execut engin return execut engin public datum storag get df return df public data storag get lf return lf public datum storag get fs return df provid configur inform return inform configur use connect execut engin public properti get properti return properti deprec use link get properti instead deprec public properti get conf return get properti public string get last alia return last alia public void set last alia string valu last alia valu defin alia give function spec use function requir argument constructor param function new function alia defin param function spec func spec object repres name function class argument constructor public void regist function string function func spec function spec function spec null defin function remov function els defin function put function function spec defin alia give stream command use complic stream command spec param alia new command alia defin param command command public void regist stream cmd string alia stream command command command null defin command remov alia els defin command put alia command return type execut current effect return current execut type public exec type get exec type return exec type creat classload base pass jar file extra jar file param jar file jar file part newli creat classload jar file plu jar extra jar list constitut classpath return new classload throw malform except public class loader creat cl string jar file throw malform except int len extra jar size int pass jar jar file null url new len pass jar jar file null url new file jar file int extra jar size url pass jar extra jar get return new class loader url map reduc class get class loader return new context class loader url context class get class loader privat static map string class get class cach map string class c class cach get c null c new hash map string class class cach set c return c suppress warn rawtyp public static class resolv class name string name throw except map string class cach get class cach class c cach get name c null return c string prefix get packag import list tri c class name prefix name true context classload cach put name c return c catch class find except e noth catch unsupport class version error e int err code string msg problem resolv class version number class name throw new exec except msg err code except e creat class find except except attach except n need bubl interfac chang throughout code int err code string msg could resolv name use import packag import list get throw new exec except msg err code except common pattern initi object via system properti support pass someth like command line code dpig notif listen class code code dpig notif listen arg constructor string arg code method properli initi class arg exist param conf param class param key properti use identifi class param arg param key properti use identifi class arg param clazz class expect return public static instanti object param configur conf string class param key string arg param key class clazz throw exec except string class name conf get class param key class name null func spec fs conf get arg param key null f new func spec class name conf get arg param key els fs new func spec class name tri return clazz cast context instanti func spec f catch class cast except e throw new exec except class defin class param key conf type clazz get name e els return null suppress warn uncheck rawtyp public static object instanti func spec func spec func spec object ret string class name func spec get class name string arg func spec get ctor arg class obj class null tri obj class resolv class name class name catch except ioe throw new runtim except instanti class name ioe option builder thread safe base storag elephantbird sequenc file config etc use constructor lead method except unrecogn option except etc processor input output initi parallel tez synchron instanti lock tri normal instanti arg null arg length class param type new class arg length int param type length param type string class constructor c obj class get constructor param type ret c new instanc object arg els ret obj class new instanc catch method except nme second chanc tri var arg constructor tri constructor c obj class get constructor string class object wrap arg new object wrap arg arg ret c new instanc wrap arg catch throwabl e bad luck string builder sb new string builder sb append could instanti sb append class name sb append argument sb append array string arg sb append throw new runtim except sb string e catch throwabl e bad luck string builder sb new string builder sb append could instanti sb append class name sb append argument sb append array string arg sb append throw new runtim except sb string e return ret public static object instanti func spec string func spec return instanti func spec new func spec func spec suppress warn rawtyp public class get class alia string alia throw except string class name null func spec func spec null defin function null func spec defin function get alia func spec null class name func spec get class name els class name func spec get class name spec alia return resolv class name class name public object instanti func alia string alia throw except func spec func spec defin function null func spec defin function get alia null return instanti func spec func spec els return instanti func spec alia get link stream command give alia param alia alia code stream command code return code stream command code alia public stream command get command alia string alia return defin command get alia public void set exec type exec type exec type exec type exec type creat new link execut manag depend exec type return new link execut manag depend exec type throw exec except public execut manag creat execut manag throw exec except execut engin null return execut engin get execut manag return null public func spec get func spec alia string alia func spec func spec defin function null func spec defin function get alia null return func spec els return null add path skip automat ship binari stream param path path skip public void add path skip string path skip ship path add path get path skip automat ship binari stream return path skip automat ship binari stream public list string get path skip return skip ship path check execut mode return appropri error sourc return error sourc public byte get error sourc return except public static array list string get packag import list packag import list get null array list string importlist new array list string importlist add importlist add java lang importlist add org apach builtin importlist add org apach impl builtin packag import list set importlist return packag import list get public static void set packag import list array list string list packag import list set list public void set log j properti properti p log j properti p public properti get log j properti return log j properti public level get default log level return default log level public void set default log level level l default log level l public int get default parallel return default parallel public static class loader get class loader return classload public static void set class loader class loader cl cl instanceof context class loader classload context class loader cl els classload new context class loader cl 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io byte array output stream import java io except import java util array list import java util list import java util properti import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop io text import org apach hadoop io writabl import org apach hadoop mapreduc input split import org apach hadoop mapreduc mapper import org apach log j properti configur import org apach constant import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer util plan helper import org apach backend hadoop executionengin util map red util import org apach datum datum bag import org apach datum schema tupl backend import org apach datum tupl import org apach datum tupl factori import org apach impl context import org apach impl impl constant import org apach impl io nullabl writabl import org apach impl plan depend order walker import org apach impl plan oper key import org apach impl plan visitor except import org apach impl util object serial import org apach impl util pair import org apach impl util spillabl memori manag import org apach impl util util import org apach tool pigstat statu report class base class map base slightli differ among differ version hadoop map base implement locat shim public abstract class gener map base extend mapper text tupl nullabl writabl writabl privat final log log log factori get log get class protect byte key type map plan protect physic plan mp null store oper protect list store store protect tupl factori tf tupl factori get instanc boolean illustr fals context output collector report use oper transmit heartbeat progress report report protect boolean error map fals physic oper root privat physic oper leaf privat volatil boolean initi fals local map reduc simul param plan map plan public void set map plan physic plan plan mp plan call tupl input do report thread close overrid public void cleanup context context throw except interrupt except super cleanup context error map error map return return map reduc job conf intern get get job control compil fals equal true mp empti stream pipelin map job belong merg join could potenti process let set flag state map input send alreadi let run pipelin one time result noth happen case stream merg join pipelin mp end input true run pipelin leaf illustr store store store initi map reduc store impl impl new map reduc store impl context store set store impl impl store set store tear call eval func finish finish visitor finish new finish visitor mp new depend order walker physic oper physic plan mp tri finish visit catch visitor except e int err code string msg error call finish method fs throw new visitor except msg err code except e mp null physic oper set report null initi fals configur mapper map plan reprot thread suppress warn uncheck overrid public void setup context context throw except interrupt except super setup context configur job context get configur spillabl memori manag get instanc configur job context get configur set constant integ string context get task attempt get task get id map reduc job context context map reduc job conf intern set context get configur map reduc job conf context get configur illustr illustr context context set packag import list array list string object serial deseri job get udf import list attempt fetch gener code distribut cach resolv schema tupl backend initi job properti log j properti properti object serial deseri job get impl constant log j properti null properti configur configur log j properti mp null mp physic plan object serial deseri job get map plan store plan helper get physic oper mp store class remov mp empti log debug map plan empti els byte array output stream bao new byte array output stream mp explain bao log debug bao string key type byte object serial deseri job get map keytyp till report new progress report get specif context map red util setup context job mp empti split split split context get input split list oper key target op key split get target op array list physic oper target op list new array list physic oper oper key target key target op key target op list add mp get oper target key root target op list array new physic oper leaf mp get leav get statu report statu report statu report get instanc statu report set context new task context context log info alia process per job phase alia name line offset job get alia locat util set default time zone map reduc job conf intern get map function attach inp tupl appropri execut map plan empti collect result execut oc input directli oc map plan empti collect leav abstract map map reduc job implement map collect tupl wherea map reduc collect extract key index tupl overrid protect void map text key tupl inp tupl context context throw except interrupt except initi initi true cach collector use run pipelin call close output collector context report set rep context physic oper set report report boolean aggreg warn true equal ignor case context get configur get aggreg warn statu report statu report statu report get instanc statu report set context new task context context hadoop logger hadoop logger hadoop logger get instanc hadoop logger set report statu report hadoop logger set aggreg aggreg warn physic oper set logger hadoop logger illustr store store store map reduc store impl impl new map reduc store impl context store set store impl impl store set mp empti collect context inp tupl return physic oper root root illustr root null root attach input inp tupl els root attach input tf new tupl copi inp tupl get run pipelin leaf protect void run pipelin physic oper leaf throw except interrupt except true result re leaf get next tupl re return statu statu collect output collector tupl re result continu re return statu statu return re return statu statu continu re return statu statu rememb issu close right thing error map true errmessag use string err msg re result null err msg receiv error process map plan re result els err msg receiv error process map plan int err code exec except ee new exec except err msg err code except throw ee abstract public void collect context oc tupl tupl throw interrupt except except abstract public boolean illustr context context return key type public byte get key type return key type param key type key type set public void set key type byte key type key type key type abstract public context get illustr context configur conf data bag input list pair nullabl writabl writabl output input split split throw except interrupt except 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io byte array output stream import java io except import java util array list import java util iter import java util list import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop io writabl import org apach hadoop mapr jobcontrol job import org apach hadoop mapreduc job context import org apach hadoop mapreduc reduc import org apach constant import org apach except import org apach backend executionengin exec except import org apach backend hadoop data type import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper join packag import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer util plan helper import org apach backend hadoop executionengin util map red util import org apach datum datum bag import org apach datum data type import org apach datum schema tupl backend import org apach datum tupl import org apach impl context import org apach impl io nullabl partit writabl import org apach impl io nullabl tupl import org apach impl io nullabl writabl import org apach impl plan depend order walker import org apach impl plan visitor except import org apach impl util object serial import org apach impl util pair import org apach impl util spillabl memori manag import org apach impl util context import org apach impl util util import org apach tool pigstat statu report class static mapper amp reduc class use execut map reduc job sinc reduc phase leaf bind local rearrang map phase separ key tupl collect output collector shuffl sort phase sort key amp tupl creat key list lt tupl gt pass key iter list deseri packag oper use packag key list lt tupl gt key bag lt tupl gt key appropri type result packag attach reduc plan execut empti either result reduc plan packag re collect output collector index tupl bag place packag pack key do hadoop sort key order index join class base class map reduc slightli differ among differ version hadoop map reduc implement locat shim public class gener map reduc public static job context job context null deprec use link context instead follow way get job link configur pre udf context get udf context get job conf pre deprec public static configur job conf null public static thread local configur job conf intern new thread local configur static datum cleanup public static void static datum cleanup job context null job conf null job conf intern new thread local configur public static class map extend map base overrid public void collect context oc tupl tupl throw interrupt except except byte index byte tupl get nullabl writabl key datum type get writabl compar type tupl get key type nullabl tupl val new nullabl tupl tupl tupl get key valu need index key need sort index addit key valu valu need packag properli assign tupl slot project key set index index val set index index oc write key val special map class use queri order udf use comparison order expect hand tupl henc map class ensur key use order wrap tupl n alreadi tupl public static class map compar extend map base overrid public void collect context oc tupl tupl throw interrupt except except object key tupl null key type data type object k tupl get key tupl tf new tupl k els key tupl tupl get byte index byte tupl get nullabl writabl key datum type get writabl compar type key tupl data type nullabl tupl val new nullabl tupl tupl tupl get key valu need index key need sort index addit key valu valu need packag properli assign tupl slot project key set index index val set index index oc write key val use skew join public static class map partit index extend map overrid public void collect context oc tupl tupl throw interrupt except except byte tupl key idx byte tupl val idx byte index byte tupl get integ partit index partit tabl partit index n present tupl size super collect oc tupl return tupl key idx tupl val idx els partit index integ tupl get nullabl writabl key datum type get writabl compar type tupl get tupl key idx key type nullabl partit writabl wrap key new nullabl partit writabl key nullabl tupl val new nullabl tupl tupl tupl get tupl val idx key valu need index key need sort index addit key valu valu need packag properli assign tupl slot project wrap key set index index set partit wrap key set partit partit index val set index index oc write wrap key val overrid protect void run pipelin physic oper leaf throw except interrupt except true result re leaf get next tupl re return statu statu partit rearrang result bag oper use skew join re result instanceof data bag iter tupl data bag re result iter next collect output collector next els collect output collector tupl re result continu re return statu statu return re return statu statu continu re return statu statu rememb issu close right thing error map true errmessag use string err msg re result null err msg receiv error process map plan re result els err msg receiv error process map plan int err code throw new exec except err msg err code except abstract public static class reduc extend reduc nullabl writabl nullabl tupl nullabl writabl writabl protect final log log log factori get log get class reduc plan protect physic plan rp null store oper protect list store store packag oper root everi map reduc plan obtain job conf portion remain remov reduc plan protect packag pack progress report report protect context output collector protect boolean error reduc fals physic oper root privat physic oper leaf protect volatil boolean initi fals privat boolean illustr fals set reduc plan use local runner illustr param plan reduc plan public void set reduc plan physic plan plan rp plan configur reduc plan packag oper report thread suppress warn uncheck overrid protect void setup context context throw except interrupt except super setup context illustr illustr context illustr pack get pack context configur j conf context get configur spillabl memori manag get instanc configur j conf context get configur set constant integ string context get task attempt get task get id job context context job conf intern set context get configur job conf context get configur tri context set packag import list array list string object serial deseri j conf get udf import list attempt fetch gener code distribut cach resolv schema tupl backend initi j conf rp null rp physic plan object serial deseri j conf get reduc plan store plan helper get physic oper rp store class illustr pack packag object serial deseri j conf get reduc packag remov rp empti log debug reduc plan empti els byte array output stream bao new byte array output stream rp explain bao log debug bao string report new progress report rp empti root rp get root array new physic oper leaf rp get leav get get specif context map red util setup context j conf catch except ioe string msg problem configur reduc plan throw new runtim except msg ioe log info alia process per job phase alia name line offset j conf get alia locat util set default time zone map reduc job conf intern get reduc function packag key list lt tupl gt key bag lt tupl gt convert hadoop type key type packag result either collect reduc plan empti pass reduc plan overrid protect void reduc nullabl writabl key iter nullabl tupl tup iter context context throw except interrupt except initi initi true cach collector use run pipelin could addit call close output collector context report set rep context physic oper set report report boolean aggreg warn true equal ignor case context get configur get aggreg warn statu report statu report statu report get instanc statu report set context new task context context hadoop logger hadoop logger hadoop logger get instanc hadoop logger set report statu report hadoop logger set aggreg aggreg warn physic oper set logger hadoop logger illustr store store store map reduc store impl impl new map reduc store impl context store set store impl impl store set case optim join combin packag foreach could get mani tupl getnext call join packag case process till see join pacakag get next pack get pkgr instanceof join packag pack attach input key tup iter iter true process one packag output context break els join optim packag give one tupl key pack attach input key tup iter iter process one packag output context return fals output true end process public boolean process one packag output context oc throw except interrupt except result re pack get next tupl re return statu statu tupl pack re tupl re result rp empti oc write null pack re return fals int root length root attach input pack re run pipelin leaf re return statu statu return fals re return statu statu int err code string msg encount error packag oper process group throw new exec except msg err code except re return statu statu return true return fals param leaf throw interrupt except throw except protect void run pipelin physic oper leaf throw interrupt except except true result red re leaf get next tupl red re return statu statu tri output collector write null tupl red re result catch except e throw new except e continu red re return statu statu return red re return statu statu continu red re return statu statu rememb issu close right thing error reduc true errmessag use string msg red re result null msg receiv error process reduc plan red re result els msg receiv error process reduc plan int err code throw new exec except msg err code except call intermedi key valu process right place stop report thread overrid protect void cleanup context context throw except interrupt except super cleanup context error reduc error reduc return return map reduc job conf intern get get stream reduc fals equal true rp empti stream pipelin could potenti process let set flag state map input send alreadi let run pipelin one time result noth happen case stream pipelin rp end input true run pipelin leaf illustr store store store initi map reduc store impl impl new map reduc store impl context store set store impl impl store set store tear call eval func finish finish visitor finish new finish visitor rp new depend order walker physic oper physic plan rp tri finish visit catch visitor except e throw new except error tri finish fs e physic oper set report null initi fals get reduc illustr context param input input buffer output map param pkg packag return reduc illustr context throw except throw interrupt except abstract public context get illustr context job job list pair nullabl writabl writabl input packag pkg throw except interrupt except abstract public boolean illustr context context abstract public packag get pack context context special reduc class use queri order udf use comparison order expect hand tupl henc special map class map reduc map compar ensur key use order wrap tupl n alreadi tupl reduc class unwrap tupl case map wrap tupl hand unwrap key packag process public static class reduc compar extend map reduc reduc privat byte key type configur reduc plan packag oper report thread overrid protect void setup context context throw except interrupt except super setup context key type pack get pkgr get key type reduc function packag key list lt tupl gt key bag lt tupl gt convert hadoop type key type packag result either collect reduc plan empti pass reduc plan overrid protect void reduc nullabl writabl key iter nullabl tupl tup iter context context throw except interrupt except initi initi true cach collector use run pipelin could addit call close output collector context report set rep context physic oper set report report boolean aggreg warn true equal ignor case context get configur get aggreg warn statu report statu report statu report get instanc statu report set context new task context context hadoop logger hadoop logger hadoop logger get instanc hadoop logger set report statu report hadoop logger set aggreg aggreg warn physic oper set logger hadoop logger store store store map reduc store impl impl new map reduc store impl context store set store impl impl store set key type tupl map compar collect would wrap key tupl comparison use order process need unwrap key tupl hand packag process key type data type tupl tupl key get valu type tri key datum type get writabl compar type get key type catch exec except e throw e pack attach input key tup iter iter result re pack get next tupl re return statu statu tupl pack re tupl re result rp empti context write null pack re return rp attach input pack re list physic oper leav rp get leav physic oper leaf leaf get run pipelin leaf re return statu statu return re return statu statu int err code string msg encount error packag oper process group throw new exec except msg err code except 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl import org apach classif interfac audienc privat intern constant use pleas see link org apach constant look public constant interfac audienc privat public class impl constant privat impl constant throw new illeg state except valu intern properti key serial set disabl optim rule public static final string optim rule use indic current job run local mode local tez local ie exec type local true public static final string exectyp mode local use indic current job convert run local mode public static final string job convert local use indic current job convert run fetch mode public static final string job convert fetch indic split index task use merg cogroup public static final string split index parallel reduc public static final string info reduc default parallel public static final string info reduc request parallel public static final string info reduc estim parallel parallel use oper cross public static final string cross parallel context public static final string context log j properti public static final string log j properti uniqu id session use caller id underlin compon public static final string script id use carri zone list frontend backend gener frontend job creation public static final string datetim zone list kill job clean tmp file public static int public static int public static int 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io except import java util array list import java util list import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f file system import org apach hadoop f path import org apach hadoop io text import org apach hadoop mapr job conf import org apach hadoop mapreduc input format import org apach hadoop mapreduc input split import org apach hadoop mapreduc job import org apach hadoop mapreduc job context import org apach hadoop mapreduc task attempt context import org apach collect load func import org apach func spec import org apach index load func import org apach load func import org apach order load func import org apach except import org apach backend executionengin exec except import org apach backend hadoop datastorag configur util import org apach backend hadoop executionengin shim hadoop shim import org apach backend hadoop executionengin util map red util import org apach datum tupl import org apach impl context import org apach impl io file spec import org apach impl plan oper key import org apach impl util object serial import org apach impl util context import org apach impl util util public class input format extend input format text tupl public static final log log log factori get log input format class public static final string input public static final string inp target public static final string inp signatur public static final string inp limit non javadoc see org apach hadoop mapreduc input format creat record reader org apach hadoop mapreduc input split org apach hadoop mapreduc task attempt context suppress warn rawtyp uncheck overrid public org apach hadoop mapreduc record reader text tupl creat record reader org apach hadoop mapreduc input split split task attempt context context throw except interrupt except record reader factori factori new record reader factori split context return factori creat record reader helper class creat record reader protect static class record reader factori protect input format input format protect split split protect load func load func protect task attempt context context protect long limit public record reader factori org apach hadoop mapreduc input split split task attempt context context throw except need creat task attempt context base configur use get split produc split suppli let find input script produc split suppli get correspond configur setup task attempt context base call real input format creat record reader method split split split split hadoop new integr get around hadoop bug pass total split split retriev set configur object number need poisson sampl loader comput number sampl int n split get total split context get configur set int mapsplit count n configur conf context get configur context set packag import list array list string object serial deseri conf get udf import list map red util setup context conf load func load func get load func split get input index conf pass loader signatur load func input format conf pass load signatur load func split get input index conf merg entri split specif conf conf get input format merg split specif conf load func split conf input format input format load func get input format list long inp limit list array list long object serial deseri conf get input format input format split split load func load func context context limit inp limit list get split get input index public org apach hadoop mapreduc record reader text tupl creat record reader throw except interrupt except return new record reader input format split load func context limit get correspond configur input split base merg conf suppli packag level access publicli use elsewher throw except static void merg split specif conf load func load func split split configur origin conf throw except set conf entri input specif conf job job new job origin conf load func set locat get load locat split get input index origin conf job set locat call could write conf within job merg updat conf origin conf configur util merg conf origin conf job get configur param input index param conf return throw except suppress warn uncheck privat static load func get load func int input index configur conf throw except array list file spec input array list file spec object serial deseri conf get func spec load func spec input get input index get func spec return load func context instanti func spec load func spec suppress warn uncheck privat static string get load locat int input index configur conf throw except array list file spec input array list file spec object serial deseri conf get return input get input index get file name pass loader signatur load func input format conf param load func loadfunc set signatur param input index index input correspond loadfunc param conf configur object signatur set throw except failur suppress warn uncheck static void pass load signatur load func load func int input index configur conf throw except list string inp signatur list array list string object serial deseri conf get signatur null intermedi job requir pass inp signatur list get input index null load func set context signatur inp signatur list get input index conf set loader signatur inp signatur list get input index map red util setup context conf non javadoc see org apach hadoop mapreduc input format get split org apach hadoop mapreduc job context suppress warn uncheck rawtyp overrid public list input split get split job context jobcontext throw except interrupt except configur conf jobcontext get configur array list file spec input array list array list oper key inp target tri input array list file spec object serial deseri conf get inp target array list array list oper key object serial deseri conf get context set packag import list array list string object serial deseri conf get udf import list map red util setup context conf catch except e int err code string msg unabl deseri object throw new exec except msg err code except e array list input split split new array list input split int input size tri path path new path input get get file name file system f boolean fs path true tri f path get file system conf catch except e applic specif scheme use e g hbase tabl fail get file system ok use df case fs new path get file system conf fs path fals execut mapr set work dir user userid util local conf f set work directori jobcontext get work directori first pass input locat loader send clone configur loader inputformat loader decid store input locat configur exampl file input format store mapr input dir conf differ input loader n end write conf func spec load func spec input get get func spec load func load func load func context instanti func spec load func spec boolean combin load func instanceof merg join index load func instanceof index load func load func instanceof collect load func load func instanceof order load func combin combin conf get boolean split combin fals job conf conf clone new job conf conf job input specif job new job conf clone pass loader signatur load func input format conf pass load signatur load func input specif job get configur load func set locat input get get file name input specif job set locat call could write conf within input specif job use updat conf get input format ask split input format inp format load func get input format list input split one input split inp format get split hadoop shim creat job context input specif job get configur jobcontext get job list input split one input split get split one input split inp target get f get default block size fs path path f get work directori combin conf clone split add one input split catch exec except ee throw ee catch except e int err code string msg unabl creat input split input get get file name e get messag null e get messag empti throw new exec except e get messag err code except e els throw new exec except msg err code except e hadoop new integr get around hadoop bug pass total split split retriev record reader method call mapreduc framework later int n split size also pass multi input flag back end multi input record counter creat int input size boolean disabl counter conf get boolean disabl counter fals disabl counter log info disabl custom input counter input split split split split split set total split n split split set multi input true split split set disabl counter disabl counter return split protect list input split get split list input split one input split int input index array list oper key target op long block size boolean combin configur conf throw except interrupt except array list input split split new array list input split combin int split index input split input split one input split split split new split new input split input split input index target op split index split set conf conf split add split return split els long max combin split size conf get long max combin split size max combin split size default block size max combin split size block size list list input split combin split map red util get combin split one input split max combin split size conf int combin split size split add creat split combin split get input index target op conf return split privat input split creat split list input split combin split int input index array list oper key target op int split index configur conf split split new split combin split array new input split input index target op split index split set conf conf return split 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach parser import java io buffer reader import java io except import java io stream token import java io string reader import java io string writer import java util array import java util array list import java util hash set import java util list import java util map import java util set import org antlr runtim char stream import org antlr runtim common token stream import org antlr runtim recognit except import org antlr runtim tree common tree import org antlr runtim tree common tree node stream import org antlr runtim tree tree import org apach common log log import org apach common log log factori import org apach impl context import org apach parser parser node invoc point import org apach tool paramet paramet substitut preprocessor import org apach tool paramet preprocessor context class macro privat static final log log factori get log macro class privat string file name privat string name privat string bodi privat list string param privat list string ret privat map string macro see privat set string macro stack privat context context privat long idx start line number macro script privat int start line macro string name string file list string param list string return string bodi map string macro see name name param param null new array list string param ret return null new array list string return file name file bodi bodi see see macro stack new hash set string debug macro name defin string get name return name void set stack set string stack macro stack stack set string get stack return macro stack void set start line int start start line start int get start line return start line void set context context context context context privat common tree inlin string input string output common tree string file throw parser except string substitut param input output get line file set string mask new hash set string input null string input mask add string output mask add return mask alia mask file privat string substitut param string input string output int line string file throw parser except input null param empti input null input length param size string msg get error messag file line fail expand macro name expect number paramet param size actual number input input null input length throw new parser except msg boolean void return fals ret empti output null output length string msg get error messag file line expand macro name expect number return alias actual number return valu output length throw new parser except msg void return true void return output null ret empti output null output length ret size string msg get error messag file line fail expand macro name expect number return alias ret size actual number return valu output null output length throw new parser except msg string arg new string param size int param size input start input input arg param get input void return string arg new string param size ret size system arraycopi arg arg param size arg arg int ret size arg param size ret get output string writer writer new string writer buffer reader new buffer reader new string reader bodi tri preprocessor context pc new preprocessor context pc load param val array list arg null map string string param val pc get param val map entri string string e context get param val entri set overwrit fals sinc macro paramet preced commandlin paramet key overlap pc process ord line e get key e get valu fals paramet substitut preprocessor psp new paramet substitut preprocessor pc psp gen substitut file writer catch except e catch parser except runtim except string msg get error messag file line macro inlin fail macro name e get messag n macro content bodi throw new parser except msg debug substit n writer string return writer string privat common tree mask alia string set string mask common tree tree string file throw parser except node real line number macro name node int line tree get child get line char stream input null tri pars macro bodi ast input new queri parser string stream file catch except e string msg get error messag file line fail inlin macro name e get messag nmacro content throw new parser except msg queri lexer lex new queri lexer input common token stream token new common token stream lex queri parser queri return result null queri parser parser queri parser util creat parser token start line tri result parser queri catch recognit except e e line start line string msg file name null parser get error header e queri parser util gener error header e file name msg parser get error messag e parser get token name string msg get error messag file line fail pars macro name msg nmacro content throw new parser except msg common tree ast common tree result get tree debug macro name n ast string tree list common tree macro def node new array list common tree travers macro ast macro def node macro def node empti string fname parser node ast get file name string msg get error messag fname ast get line invalid macro definit macro name contain macro definit nmacro content bodi throw new parser except msg add macro invoc point expand macro tree parser node pnode parser node tree list invoc point inv stack pnode get invoc stack list invoc point new inv stack inv stack null new array list invoc point new array list invoc point inv stack invoc point pt new invoc point line file name new inv stack add pt set invoc stack ast new inv stack recurs expand inlin macro list common tree inlin node new array list common tree travers macro ast inlin node common tree inlin node common tree new tree macro inlin new array list macro see valu macro stack context queri parser util replac node node list new tree null mask alia inlin macro common tree node stream node new common tree node stream ast alia masker walker new alia masker node walker set param mask name idx alia masker queri return result null common tree common tree null tri result walker queri catch recognit except e e line start line string msg walker get error header e walker get error messag e walker get token name string msg get error messag file line fail mask macro name msg nmacro content throw new parser except msg common tree result tree debug mask macro name n common tree string tree return common tree privat static void set invoc stack tree ast list invoc point stack parser node node parser node ast node set invoc stack stack int n node get child count int n set invoc stack node get child stack valid return alia exist macro bodi void valid throw except ret empti return hash set string test set new hash set string stream token st new stream token new string reader bodi st word char st word char st word char st word char st low case mode fals st ordinari char st slash star comment true st next token stream token match word st defin fals match dollar alia st true test set add st sval substr els match dollar alia st fals string prev word st sval match word st true match word st otherwis true test set add prev word substr els match char st true match char st true test set add prev word substr els match char st true possibl mult alia inlin macro array list string mlist new array list string mlist add prev word multi valu return st mlist true string mlist test set add substr els match char st fals match char st true skip singl line comment st string ret test set contain throw new except macro name miss return alia check multi valu return pattern alia alia alia privat static boolean multi valu return stream token st list string mlist boolean comma throw except int lookahead st next token comma lookahead stream token comma match char st fals match dollar alia st fals mlist add st sval return multi valu return st mlist comma comma lookahead match char st true return true return fals privat static boolean match dollar alia stream token st boolean next throw except int type next st next token st ttype type stream token st sval char st sval length return true next st push back return fals privat static boolean match word stream token st string word boolean next throw except int type next st next token st ttype type stream token st sval equal ignor case word return true next st push back return fals privat static boolean match char stream token st int c boolean next throw except int type next st next token st ttype type c return true next st push back return fals privat static void skip singl line comment stream token st throw except int line st lineno int lookahead st next token lookahead stream token lookahead n st lineno line break lookahead st next token st push back privat static void travers macro tree list common tree node string node type get text equal node type node add common tree int n get child count int n tree get child travers macro node node type macro inlin node follow form name valu valu child node macro name list return valu list paramet static common tree macro inlin common tree list macro macro def set string macro stack context context throw parser except get name string mn get child get text get macro def macro macro null macro pm macro def pm get name equal mn macro pm break string file parser node get file name macro null string msg get error messag file get line expand macro mn macro must defin expans throw new parser except msg macro stack contain macro name string msg get error messag file get line expand macro mn macro can not defin circularli throw new parser except msg set nest macro call stack set string new stack new hash set string macro stack new stack add macro name macro set stack new stack inform macro context substitut paramet main pigscript macro set context context get return valu int n get child get child count string ret new string n int n ret get child get child get text get paramet int get child get child count string param new string int param get child get child get text return macro inlin param ret file privat static string get error messag string file int line string header string reason string builder sb new string builder sb append file null sb append file append file append sb append line append line append append header reason null sb append reason append reason return sb string 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io except import java net import java util iter import java util list import org apach hadoop conf configur import org apach hadoop conf configur integ rang import org apach hadoop f path import org apach hadoop io raw compar import org apach hadoop io text import org apach hadoop io writabl import org apach hadoop mapreduc counter import org apach hadoop mapreduc input format import org apach hadoop mapreduc input split import org apach hadoop mapreduc job import org apach hadoop mapreduc mapper import org apach hadoop mapreduc output committ import org apach hadoop mapreduc output format import org apach hadoop mapreduc partition import org apach hadoop mapreduc record reader import org apach hadoop mapreduc record writer import org apach hadoop mapreduc reduc import org apach hadoop mapreduc statu report import org apach hadoop mapreduc task attempt import org apach hadoop mapreduc reduc context import org apach hadoop mapreduc lib map wrap mapper import org apach hadoop mapreduc task map context impl import org apach hadoop secur credenti import org apach backend hadoop executionengin map reduc layer gener map base import org apach datum datum bag import org apach datum tupl import org apach impl io nullabl writabl import org apach impl util pair import org apach hadoop mapreduc lib map wrap mapper abstract public class map base extend gener map base get mapper illustr context param conf configur param input input bag serv datum sourc param output map output buffer param split split return illustr context throw except throw interrupt except overrid public context get illustr context configur conf data bag input list pair nullabl writabl writabl output input split split throw except interrupt except org apach hadoop mapreduc mapper context mapper context new wrap mapper text tupl nullabl writabl writabl get map context new illustr context conf input output split return mapper context public class illustr context extend map context impl text tupl nullabl writabl writabl privat datum bag input list pair nullabl writabl writabl output privat iter tupl null privat tupl valu null privat boolean init fals public illustr context configur conf data bag input list pair nullabl writabl writabl output input split split throw except interrupt except super conf new task attempt null null null new illustr dummi report split conf set illustr true output null throw new except null output use input input output output overrid public boolean next key valu throw except interrupt except input null init init true return true return fals null input iter next return fals valu next return true overrid public text get current key return null overrid public tupl get current valu return valu overrid public void write nullabl writabl key writabl valu throw except interrupt except output add new pair nullabl writabl writabl key valu overrid public void progress overrid public boolean illustr context context return wrap mapper context context get configur get illustr null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io byte array output stream import java io data output stream import java io except import java net import java util array list import java util collect import java util compar import java util iter import java util list import org apach hadoop classif interfac stabil import org apach hadoop conf configur import org apach hadoop conf configur integ rang import org apach hadoop f path import org apach hadoop io raw compar import org apach hadoop io text import org apach hadoop io writabl import org apach hadoop mapr jobcontrol job import org apach hadoop mapreduc counter import org apach hadoop mapreduc input format import org apach hadoop mapreduc job import org apach hadoop mapreduc mapper import org apach hadoop mapreduc output committ import org apach hadoop mapreduc output format import org apach hadoop mapreduc partition import org apach hadoop mapreduc reduc context import org apach hadoop mapreduc reduc import org apach hadoop mapreduc task attempt import org apach hadoop mapreduc reduc context import org apach hadoop mapreduc lib reduc wrap reduc import org apach hadoop mapreduc task reduc context impl import org apach hadoop secur credenti import org apach backend hadoop executionengin map reduc layer map base illustr context import org apach backend hadoop executionengin physic layer relat oper packag import org apach datum tupl import org apach impl io nullabl tupl import org apach impl io nullabl writabl import org apach impl util pair import org apach pen fake raw key valu iter public class map reduc extend gener map reduc static class illustr reduc context extend wrap reduc nullabl writabl nullabl tupl nullabl writabl writabl public illustr context get reduc context reduc context nullabl writabl nullabl tupl nullabl writabl writabl reduc context return new illustr context reduc context public class illustr context extend wrap reduc context public illustr context reduc context nullabl writabl nullabl tupl nullabl writabl writabl reduc context super reduc context public packag get pack return reduc illustr context impl reduc context pack public static class reduc extend gener map reduc reduc get reduc illustr context param input input buffer output map param pkg packag return reduc illustr context throw except throw interrupt except overrid public context get illustr context job job list pair nullabl writabl writabl input packag pkg throw except interrupt except org apach hadoop mapreduc reduc context reduc context new illustr reduc context get reduc context new illustr context impl job input pkg return reduc context suppress warn uncheck public class illustr context impl extend reduc context impl nullabl writabl nullabl tupl nullabl writabl writabl privat nullabl writabl current key null next key null privat nullabl tupl next valu null privat list nullabl tupl current valu null privat iter pair nullabl writabl writabl privat final byte array output stream bo privat final datum output stream do privat final raw compar sort compar group compar public packag pack null privat illustr valu iter iter new illustr valu iter public illustr context impl job job list pair nullabl writabl writabl input packag pkg throw except interrupt except super job get job conf new task attempt new fake raw key valu iter input iter next null null null null new illustr dummi report null nullabl writabl class nullabl tupl class bo new byte array output stream do new datum output stream bo org apach hadoop mapreduc job nw job new org apach hadoop mapreduc job job get job conf sort compar nw job get sort compar group compar nw job get group compar collect sort input new compar pair nullabl writabl writabl overrid public int compar pair nullabl writabl writabl pair nullabl writabl writabl tri first write do int l bo size first write do int l bo size byte byte bo byte array bo reset return sort compar compar byte l byte l l l catch except e throw new runtim except serial except sort e get messag current valu new array list nullabl tupl input iter next pair nullabl writabl writabl entri next next key entri first next valu nullabl tupl entri second pack pkg public class illustr valu iter implement reduc context valu iter nullabl tupl privat int po privat int mark overrid public void mark throw except mark po mark mark overrid public void reset throw except po mark overrid public void clear mark throw except mark overrid public boolean next return po current valu size overrid public nullabl tupl next po return current valu get po overrid public void remov throw new unsupport oper except remov implement overrid public void reset backup store throw except po mark protect class illustr valu iter implement iter nullabl tupl privat illustr valu iter iter new illustr valu iter overrid public iter nullabl tupl iter return iter overrid public nullabl writabl get current key return current key overrid public boolean next key next key null return fals current key next key current valu clear current valu add next valu next key null next pair nullabl writabl writabl entri next ca n raw comparison use byte byte int l l tri current key write do l bo size entri first write do l bo size byte bo byte array catch except e throw new runtim except next key except e get messag bo reset group compar compar byte l byte l l l group compar compar current key entri first current valu add nullabl tupl entri second els next key entri first next valu nullabl tupl entri second break return true overrid public iter nullabl tupl get valu return iter overrid public void write nullabl writabl k writabl overrid public void progress overrid public boolean illustr org apach hadoop mapreduc reduc context context return context instanceof map reduc illustr reduc context illustr context overrid public packag get pack org apach hadoop mapreduc reduc context context return map reduc illustr reduc context illustr context context get pack 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io except import java util array list import java util list import org apach hadoop conf configur import org apach hadoop mapreduc job import org apach hadoop mapreduc job context import org apach hadoop mapreduc job statu state import org apach hadoop mapreduc output committ import org apach hadoop mapreduc task attempt context import org apach resourc schema import org apach store func interfac import org apach store metadata import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin shim hadoop shim import org apach backend hadoop executionengin util map red util import org apach impl logic layer schema schema import org apach impl util pair import org apach configur special default file output committ allow inturn deleg call output commit store func output format public class output committ extend output committ output committ store map list pair output committ store map output committ output committ store reduc list pair output committ store reduc output committ boolean recoveri support param context param map store param reduc store throw except public output committ task attempt context context list store map store list store reduc store throw except creat store map reduc output committ map output committ get committ context map store reduc output committ get committ context reduc store recoveri support context get configur get boolean configur fals param conf param map store return throw except suppress warn uncheck privat list pair output committ store get committ task attempt context context list store store throw except list pair output committ store committ new array list pair output committ store store store store store func interfac func store get store func task attempt context updat context set context context store tri committ add new pair output committ store func get output format get output committ updat context store catch interrupt except e throw new except e return committ privat task attempt context set context task attempt context context store store throw except setup context store func make use map red util setup context context get configur make copi context action call end updat context task attempt context context copi hadoop shim creat task attempt context context get configur context get task attempt call set locat store func side effect like set map output dir configur context need output committ action do committ creat output format set locat context copi store return context copi static public job context set context job context context store store throw except make copi context action call end updat context job context context copi hadoop shim creat job context context get configur context get job map red util setup context context get configur call set locat store func side effect like set map output dir configur context need output committ action do committ creat also string version store func specif store need set context case committ need output format set locat context copi store return context copi static public void store cleanup store store configur conf throw except store func interfac store func store get store func store func instanceof store metadata schema schema store get schema schema null store metadata store func store schema new resourc schema schema store get sort info store get file get file name new job conf public boolean recoveri support recoveri support return fals boolean output committ support recoveri true call recov task map reduc committ pair output committ store map committ map output committ map committ first null tri output committ support recoveri output committ support recoveri map committ first recoveri support catch except e throw new runtim except e output committ support recoveri return fals pair output committ store reduc committ reduc output committ reduc committ first null tri output committ support recoveri output committ support recoveri reduc committ first recoveri support catch except e throw new runtim except e output committ support recoveri return fals return true public void recov task task attempt context context throw except call recov task map reduc committ pair output committ store map committ map output committ map committ first null task attempt context updat context set context context map committ second tri use reflect hadoop x line method map committ first recov task updat context catch except e throw new except e pair output committ store reduc committ reduc output committ reduc committ first null task attempt context updat context set context context reduc committ second tri reduc committ first recov task updat context catch except e throw new except e overrid public void cleanup job job context context throw except call clean map reduc committ pair output committ store map committ map output committ map committ first null job context updat context set context context map committ second store cleanup map committ second updat context get configur map committ first cleanup job updat context pair output committ store reduc committ reduc output committ reduc committ first null job context updat context set context context reduc committ second store cleanup reduc committ second updat context get configur reduc committ first cleanup job updat context method call public void commit job job context context throw except call commit job map reduc committ pair output committ store map committ map output committ map committ first null job context updat context set context context map committ second promot file call store cleanup store schema tri map committ first commit job updat context catch except e throw new except e store cleanup map committ second updat context get configur pair output committ store reduc committ reduc output committ reduc committ first null job context updat context set context context reduc committ second promot file call store cleanup store schema tri reduc committ first commit job updat context catch except e throw new except e store cleanup reduc committ second updat context get configur method call public void abort job job context context state state throw except call abort job map reduc committ pair output committ store map committ map output committ map committ first null job context updat context set context context map committ second tri map committ first abort job updat context state catch except e throw new except e store cleanup map committ second updat context get configur pair output committ store reduc committ reduc output committ reduc committ first null job context updat context set context context reduc committ second tri reduc committ first abort job updat context state catch except e throw new except e store cleanup reduc committ second updat context get configur overrid public void abort task task attempt context context throw except hadoop shim map context get task attempt pair output committ store map committ map output committ map committ first null task attempt context updat context set context context map committ second map committ first abort task updat context els pair output committ store reduc committ reduc output committ reduc committ first null task attempt context updat context set context context reduc committ second reduc committ first abort task updat context overrid public void commit task task attempt context context throw except hadoop shim map context get task attempt pair output committ store map committ map output committ map committ first null task attempt context updat context set context context map committ second map committ first commit task updat context els pair output committ store reduc committ reduc output committ reduc committ first null task attempt context updat context set context context reduc committ second reduc committ first commit task updat context overrid public boolean need task commit task attempt context context throw except boolean need commit fals hadoop shim map context get task attempt pair output committ store map committ map output committ map committ first null task attempt context updat context set context context map committ second need commit need commit map committ first need task commit updat context return need commit els pair output committ store reduc committ reduc output committ reduc committ first null task attempt context updat context set context context reduc committ second need commit need commit reduc committ first need task commit updat context return need commit overrid public void setup job job context context throw except call set map reduc committ pair output committ store map committ map output committ map committ first null job context updat context set context context map committ second map committ first setup job updat context pair output committ store reduc committ reduc output committ reduc committ first null job context updat context set context context reduc committ second reduc committ first setup job updat context overrid public void setup task task attempt context context throw except hadoop shim map context get task attempt pair output committ store map committ map output committ map committ first null task attempt context updat context set context context map committ second map committ first setup task updat context els pair output committ store reduc committ reduc output committ reduc committ first null task attempt context updat context set context context reduc committ second reduc committ first setup task updat context 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import static org apach configur import static org apach configur import static org apach constant import java io except import java util array list import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop io text import org apach hadoop mapreduc input format import org apach hadoop mapreduc input split import org apach hadoop mapreduc record reader import org apach hadoop mapreduc task attempt context import org apach load func import org apach backend hadoop datastorag configur util import org apach datum tupl import org apach impl io file spec import org apach impl util object serial import org apach tool pigstat stat util import org apach tool pigstat statu report wrapper around actual record reader loadfunc need two reason intercept initi call hadoop initi underli actual record reader right context object achiev look context correspond input split reader suppos process need give hadoop consist key valu type text tupl respect record reader call underli loader get next get tupl valu key null text sinc key use input map public class record reader extend record reader text tupl privat static final log log factori get log record reader class transient privat string counter group privat long time frequenc privat boolean time fals current tupl valu return underli link load func get next tupl cur valu null current wrap record reader use loader privat record reader cur reader loader object privat load func loadfunc hadoop counter name transient privat string counter name null wrap inputformat privat input format inputformat wrap split privat split split wrap split index use privat int idx privat long progress privat task attempt context context privat statu report report privat final long limit privat long record count configur object datum specif input underli record reader process obtain link load func set locat string org apach hadoop mapreduc job call henc contain specif properti underli link input format might put privat configur input specif conf param context public record reader input format inputformat split split load func load func task attempt context context long limit throw except interrupt except inputformat inputformat split split loadfunc load func context context report statu report get instanc input specif conf context get configur cur reader null progress idx limit limit init next record reader time input specif conf get boolean fals time counter group load func string time frequenc input specif conf get long overrid public void close throw except cur reader null cur reader close cur reader null overrid public text get current key throw except interrupt except n realli use key input map send null return null overrid public tupl get current valu throw except interrupt except increment multi input record counter counter name null cur valu null report incr counter stat util counter name return cur valu overrid public float get progress throw except interrupt except long subprogress byte process current split null cur reader idx alway one past current subsplit true index subprogress long cur reader get progress split get length idx return math min f progress subprogress float split get length overrid public void initi input split split task attempt context context throw except interrupt except initi underli actual record reader right context object achiev merg context correspond input split reader suppos process context pass split split split context context configur util merg conf context get configur input specif conf pass loader signatur load func input format conf input format pass load signatur loadfunc split get input index context get configur invok initi underli record reader adjust conf null cur reader cur reader initi split get wrap split context loadfunc prepar read cur reader split split multi input split disabl counter counter name get multi input couner name split input specif conf counter name null creat counter need incr counter may never call case empti file report incr counter stat util counter name overrid public boolean next key valu throw except interrupt except limit record count limit return fals boolean time time record count time frequenc long start nano time start nano system nano time cur reader null cur valu loadfunc get next null init next record reader return fals time report incr counter counter group math round system nano time start nano time frequenc record count return true suppress warn uncheck privat static string get multi input couner name split split configur conf throw except array list file spec input array list file spec object serial deseri conf get input format string fname input get split get input index get file name return stat util get multi input counter name fname split get input index get record reader next chunk combin file split protect boolean init next record reader throw except interrupt except cur reader null cur reader close cur reader null idx progress split get length idx do process far context progress chunk process noth idx split get num path return fals get record reader idx th chunk tri split set current idx idx cur reader inputformat creat record reader split get wrap split context info current split process split get wrap split idx initi first record reader call map task respons initi subsequ record reader cur reader initi split get wrap split context loadfunc prepar read cur reader split catch except e throw new runtim except e idx return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import java io buffer reader import java io file import java io file input stream import java io file find except import java io except import java io input stream import java io print stream import java io string reader import java lang reflect constructor import java lang reflect method import java net import java util array list import java util collect import java util dequ import java util enumer import java util hash map import java util hash set import java util iter import java util link list import java util list import java util map import java util properti import java util queue import java util set import java util concurr atom atom integ import org apach common lang string util import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop io compress zip codec import org apach log j level import org apach log j logger import org apach backend datastorag contain descriptor import org apach backend datastorag data storag import org apach backend datastorag element descriptor import org apach backend executionengin exec except import org apach backend executionengin exec job import org apach backend executionengin exec job import org apach backend hadoop client import org apach backend hadoop executionengin job import org apach builtin storag import org apach classif interfac audienc import org apach classif interfac stabil import org apach datum datum bag import org apach datum tupl import org apach impl context import org apach impl io file local import org apach impl io file local fetch file ret import org apach impl io compress zip codec extens import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl stream stream command import org apach impl util log util import org apach impl util properti util import org apach impl util context import org apach impl util uri util import org apach impl util util import org apach newplan depend order walker import org apach newplan oper import org apach newplan logic util import org apach newplan logic express logic express plan import org apach newplan logic express logic express visitor import org apach newplan logic express scalar express import org apach newplan logic optim express visitor import org apach newplan logic relat import org apach newplan logic relat load import org apach newplan logic relat store import org apach newplan logic relat logic plan import org apach newplan logic relat logic plan data import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach parser queri parser driver import org apach parser queri parser util import org apach pen exampl gener import org apach script script engin import org apach tool grunt grunt parser import org apach tool pigstat empti stat import org apach tool pigstat job stat import org apach tool pigstat output stat import org apach tool pigstat stat import org apach tool pigstat stat job graph import org apach tool pigstat script state import org apach valid black whitelist filter import org apach valid command filter import com googl common annot visibl test class java program connect typic program creat server instanc programm regist queri use regist queri retriev result use open iter store shutdown method call free resourc use current server instanc could result memori leak interfac audienc public interfac stabil stabl public class server protect final log log log factori get log get class public static final string pretti print schema privat static final string locat check strict datum structur support grunt shell oper grunt shell work one graph time script contain insid anoth script grunt shell first save current graph stack work new graph nest script do grunt shell pop save graph continu work protect final dequ graph graph new link list graph current graph grunt shell work privat graph curr protect final context context privat string job name privat string job prioriti privat final static atom integ scope counter new atom integ protect final string scope construct scope privat boolean valid statement fals privat boolean skip pars regist batch fals privat final black whitelist filter filter privat string construct scope scope server session id string user system get properti user name string date new date string scope realli use system right howev make explain statement look lengthi set usernam date let simplifi scope real scope need might need updat oper includ scope name return scope counter increment get visibl test public static void reset scope scope counter set param exec type string mapreduc local local mode use hadoop local job runner execut job local machin mapreduc mode connect cluster execut job exec type string one two deduc execut engin classpath use backend execut throw exec except throw except public server string exec type string throw exec except except add exec type properti properti util load default properti exec type string public server string exec type string properti properti throw exec except except add exec type properti properti exec type string public server properti properti throw exec except except new context properti privat static properti add exec type properti properti properti string exec type properti set properti exectyp exec type return properti param exec type execut type start engin local mode use hadoop local job runner execut job local machin mapreduc mode connect cluster execut job throw exec except public server exec type exec type throw exec except exec type properti util load default properti public server exec type exec type properti properti throw exec except new context exec type properti public server exec type exec type configur conf throw exec except new context exec type conf public server context context throw exec except context true public server context context boolean connect throw exec except context context curr new graph fals job name context get properti get properti context context default job name connect context connect filter new black whitelist filter add hadoop properti add jar properti mark predeploy jar properti script state get null start via command line script state alreadi initi main overwrit script state start context get execut engin instanti script state stat start context get execut engin instanti stat log event includ caller context string audit id client get audit id context string caller id string context get properti get configur log info script session audit id caller id null log info caller session caller id boolean pars boolean context get properti get properti configur boolean pars boolean context get properti get properti yarn timelin servic enabl fals client event event new client event audit id caller id tri client get instanc log event event catch except e log warn error post e els log warn disabl sinc yarn timelin servic enabl set fals set hdf caller context class caller context class null tri caller context class class name org apach hadoop ipc caller context catch class find except e pre hadoop skip set caller context caller context class null tri reflect follow code sinc avail sinc hadoop caller context hdf context new caller context builder audit id build caller context set current hdf context class caller context builder class class name org apach hadoop ipc caller context builder constructor caller context builder construct caller context builder class get constructor string class object builder caller context builder construct new instanc audit id method builder build method builder get class get method build object hdf context builder build method invok builder method caller context set current method caller context class get method set current hdf context get class caller context set current method invok caller context class hdf context catch except e shall happen unless chang futur hadoop common throw new exec except e privat void add hadoop properti throw exec except zip input hadoop turn text input format depend hadoop text input format handl bzip input one problem recogn bz extens bz add custom zip codec return bz extens backward compat string codec context get properti get properti io compress codec codec null codec contain zip codec class get canon name context get properti set properti io compress codec codec zip codec extens class get canon name privat void add jar properti throw exec except add jar properti extra jar string jar str context get properti get properti addit jar jar str null jar str jar str jar str replac file path separ jar str empti jar str string jar str comma context get properti get properti addit jar uri jar str comma null jar str comma empti jar str jar str jar str comma jar str null jar str empti use file path separ linux window correctli handl path aggreg repres oper system string jar jar str split tri regist jar jar catch except e int err code string msg fail regist jar jar caught except throw new exec except msg err code except e privat void mark predeploy jar properti throw exec except mark jar predeploy properti string jar str context get properti get properti predeploy jar jar str null use file path separ linux window correctli handl path aggreg repres oper system string jar jar str split file path separ jar length context mark jar predeploy jar public context get context return context current return public graph get current return curr set log level public void debug logger get logger org apach set level level context get log j properti set properti log j logger org apach level string set log level default public void debug logger get logger org apach set level context get default log level context get log j properti set properti log j logger org apach context get default log level string set default parallel job param p default number reduc use job public void set default parallel int p context default parallel p start batch execut mode public void set batch log debug creat new graph curr null graph push curr curr new graph true retriev current execut mode return true execut mode batch fals otherwis public boolean batch batch multipl graph stack give right respons even multiqueri turn return graph size return whether anyth process current batch throw frontend except return true store process current batch fals otherwis public boolean batch empti throw frontend except curr null int err code string msg set batch must call first throw new frontend except msg err code except return curr batch empti method pars script build logic plan method follow link server execut batch boolean argument fals use link server execut batch call method pars build script throw except public void pars build throw except curr null batch int err code string msg set batch must call first throw new frontend except msg err code except curr pars queri curr build plan null submit batch command execut return list job execut throw except public list exec job execut batch throw except return execut batch true submit batch command execut pars build script skip user call link server pars build pass fals argument case param pars build return throw except public list exec job execut batch boolean pars build throw except pars build pars build stat stat execut return get job stat retriev list job object stat object param stat return list exec job object protect list exec job get job stat stat link list exec job job new link list exec job stat instanceof empti stat job job new job job context stat result null get store null job add job return job job graph j graph stat get job graph iter job stat iter j graph iter iter next job stat js iter next output stat output j get output j success job add new job job context output get store output get alia stat els job hjob new job job context output get store output get alia stat hjob set except j get except job add hjob return job discard batch command throw frontend except public void discard batch throw frontend except curr null batch int err code string msg set batch must call first throw new frontend except msg err code except curr graph pop add path skip automat ship binari stream param path path skip public void add path skip string path context add path skip path defin alia give function spec use function requir argument constructor param function new function alia defin param func spec func spec object repres name function class argument constructor public void regist function string function func spec func spec context regist function function func spec defin alia give stream command param command alia new command alia defin param command stream command execut public void regist stream command string command alia stream command command context regist stream cmd command alia command privat locat jar resourc string jar name throw except enumer url class loader get system resourc jar name resourc locat null url element resourc locat url next element url element string buffer sb new string buffer find multipl resourc match sb append jar name sb append sb append resourc locat url element sb append url next element sb append log debug sb string return resourc locat regist jar file name jar file absolut rel path multipl resourc find specifi name first one regist return get system resourc warn issu inform user param name jar file regist throw except public void regist jar string name throw except check oper permit filter valid command filter command context jar name log debug ignor duplic registr jar name return first tri locat jar via system resourc fail tri use name file preserv compat case user pass absolut path path rel current work directori name null name empti log warn empti string specifi jar path return resourc locat jar resourc name resourc null fetch file ret file file local fetch file context get properti name fetch file ret file file file f file file f read int err code string msg ca n read jar file name throw new frontend except msg err code except context add jar f name els context add jar resourc name univers script languag support see param path path script file param script lang languag keyword script engin use interpret script param namespac namespac defin function script throw except public void regist code string path string script lang string namespac throw except context script fs contain key path context script fs get path equal namespac log debug ignor duplic registr script udf file path namespac namespac return els context script fs put path namespac fetch file ret ret file local fetch file context get properti path file f ret file f read int err code string msg ca n read file path throw new frontend except msg err code except string cwd new file get canon path string file path f get canon path string name jar file path use rel path jar path specifi rel ret fetch new file path absolut path index file separ case oozi local file differ directori symlink current directori canon path point cwd name jar path els file path equal cwd file separ path user specifi absolut path refer cwd name jar file path substr cwd length context add script file name jar file path script lang null script engin se script engin get instanc script lang se regist function name jar namespac context regist queri runtim queri pars regist execut need param queri latin express evalu param start line line number queri within whole script throw except public void regist queri string queri int start line throw except curr regist queri queri start line valid statement skip pars regist batch regist queri runtim queri pars regist execut need equival call link regist queri string int start line set param queri latin express evalu throw except public void regist queri string queri throw except regist queri queri regist script input stream sourc gener extens script local file use file input stream script memori build dynam use byte array input stream even script remot machin get wrap socket input stream param throw except public void regist script input stream throw except regist script null null regist script input stream sourc gener extens script local file use file input stream script memori build dynam use byte array input stream even script remot machin get wrap socket input stream paramet script substitut valu param param param param key paramet name valu paramet valu throw except public void regist script input stream map string string param throw except regist script param null regist script input stream sourc gener extens script local file use file input stream script memori build dynam use byte array input stream even script remot machin get wrap socket input stream paramet script substitut valu paramet file param param param file file paramet set throw except public void regist script input stream list string param file throw except regist script null param file regist script input stream br script local file use file input stream script memori build dynam use byte array input stream script even remot machin get wrap socket input stream br paramet script substitut valu map paramet file valu param map overrid valu paramet file paramet param param param key paramet name valu paramet valu param param file file paramet set throw except public void regist script input stream map string string param list string param file throw except tri string substitut context param substitut param map list param param file grunt parser grunt new grunt parser new string reader substitut grunt set interact fals grunt pars stop error true catch org apach tool pigscript parser pars except e log error e get local messag throw new except e protect list string param map list map string string param list string param list new array list string param null map entri string string entri param entri set param list add entri get key entri get valu return param list creat clone current return graph object clone current throw except protect graph get clone graph throw except graph graph curr duplic graph null int err code string msg clone plan fail throw new frontend except msg err code except return graph regist queri runtim queri read indic file param file name file read queri throw except public void regist script string file name throw except regist script file name null null regist script file paramet file substitut valu param param file name script file param param key paramet name valu paramet valu throw except public void regist script string file name map string string param throw except regist script file name param null regist script file paramet file substitut valu paramet file param file name script file param param file file paramet set throw except public void regist script string file name list string param file throw except regist script file name null param file regist script file paramet file substitut valu map paramet file valu param map overrid valu paramet file paramet param file name script param param key paramet name valu paramet valu param param file file paramet set throw except public void regist script string file name map string string param list string param file throw except file input stream fi null tri fi new file input stream file name regist script fi param param file catch file find except e log error e get local messag throw new except e final fi null fi close intend use unit test print list alia current latin script output write system throw frontend except public void print alia throw frontend except system println alia curr get alia op key set write schema alia system param alia alia whose schema write return schema alia dump throw except public schema dump schema string alia throw except tri context dump schema true equal alia alia get last rel logic relat oper op get oper alia alia logic schema schema op get schema boolean pretti true equal context get properti get properti schema null schema org apach newplan logic util translat schema schema system println alia pretti pretti print string return els system println schema alia unknown return null catch frontend except fee int err code string msg unabl describ schema alia alia throw new frontend except msg err code except fals null fee final context dump schema fals write schema nest alia system denot alia nest alia param alia alia whose schema nest alia param nest alia alia whose schema write return schema alia dump throw except public schema dump schema nest string alia string nest alia throw except tri context dump schema true equal alia alia get last rel oper op get oper alia alia op instanceof logic schema nest sc op dump nest schema alia nest alia nest sc null schema org apach newplan logic util translat schema nest sc system println alia nest alia string return els system println schema alia nest alia unknown return null els int err code string msg unabl describ schema alia nest alia throw new frontend except msg err code except fals null final context dump schema fals set name job name get translat mapr job name param name job public void set job name string name job name context name set hadoop job prioriti valu get translat mapr job prioriti param prioriti valid valu find link org apach hadoop mapr job prioriti public void set job prioriti string prioriti job prioriti prioriti execut latin script includ indic alia user pre server server new server server regist queri load foo server regist queri filter gt server regist queri order pre pre server open iter pre filter unsort datum return instead user pre server open iter pre filter sort datum return param id alia open iter return iter tupl return script throw except public iter tupl open iter string id throw except tri context get properti set properti context job name job prioriti null context get properti set properti context job prioriti exec job job store id file local get temporari path context string util get tmp file compressor name context invoc execut synchron job get statu return job get result els job get statu job get except null throw backend except fail case except e job get except int err code string msg unabl open iter alia id backend error e get messag throw new frontend except msg err code except e els throw new except job termin anomal statu job get statu string catch frontend except e throw e catch except e int err code string msg unabl open iter alia id throw new frontend except msg err code except e execut latin script includ indic alia store result record file user pre server server new server server regist queri load foo server regist queri filter gt server regist queri order pre pre server store bar pre filter unsort datum store file tt bar tt instead user pre server store bar pre filter sort datum store file tt bar tt equival call link store string string string tt org apach storag tt store function param id alia store param filenam file store return link exec job contain inform job throw except public exec job store string id string filenam throw except return store id filenam storag class get name default store function execut latin script includ indic alia store result record file user pre server server new server server regist queri load foo server regist queri filter gt server regist queri order pre pre server store bar mystorefunc pre filter unsort datum store file tt bar tt use tt mystorefunc tt instead user pre server store bar mystorefunc pre filter sort datum store file tt bar tt use tt mystorefunc tt p param id alia store param filenam file store param func store function use return link exec job contain inform job throw except public exec job store string id string filenam string func throw except stat stat store ex id filenam func stat get output stat size throw new except could not retriev job output stat output stat get output stat get stat success return new job context output get store output get alia stat els job job new job context output get store output get alia stat check except except ex null job stat j stat get job graph j get except null ex j get except job set except ex return job privat stat store ex string alia string filenam string func throw except equal alia alia get last rel curr pars queri curr skip store skip store alreadi process curr build plan alia tri queri parser util attach store plan scope curr lp filenam func curr get oper alia alia context curr compil return execut compil logic plan catch except e int err code string msg unabl store alia alia throw new except msg err code except e provid inform queri execut inform develop focu probabl use averag user param alia name alia explain param stream print stream write explan throw except request alia find public void explain string alia print stream stream throw except explain alia text true fals stream stream null null provid inform queri execut param alia name alia explain param format format explain print text plan print plain text otherwis execut plan print href http en wikipedia org wiki languag format param verbos control amount inform print param mark execut set treat explain like call execut respoect pend store mark complet param lp stream print logic tree param ep stream print execut engin tree null print file param dir directori print execut engin tree null use ep param suffix suffix file name throw except request alia find public void explain string alia string format boolean verbos boolean mark execut print stream lp print stream ep file dir string suffix throw except tri context explain true build store plan alia curr lp optim context add root xml node plan write stream format xml lp ep lp println plan curr lp explain lp format verbos curr lp size format xml lp ep lp println plan return context get execut engin explain curr lp context ep format verbos dir suffix format equal xml lp ep lp println plan mark execut curr mark execut catch except e int err code string msg unabl explain alia alia throw new frontend except msg err code except e final context explain fals return unus byte capac filesystem valu take account replic factor vari file file thu use determin datum set fit need divid result call specif replic set return unus byte capac file system throw except public long capac throw except context get exec type local throw new except capac support non local execut els data storag dd context get df map string object stat dd get statist string raw capac str string stat get data storag string raw use str string stat get data storag raw capac str null raw use str null throw new except fail retriev capac stat long raw capac byte new long raw capac str long valu long raw use byte new long raw use str long valu return raw capac byte raw use byte return length file byte exist account replic param filenam return length file byte throw except public long file size string filenam throw except data storag df context get df element descriptor elem df element filenam map string object stat elem get statist long length long stat get element descriptor int replic short stat get element descriptor return length replic test whether file exist param filenam test return true file exist fals otherwis throw except public boolean exist file string filenam throw except element descriptor elem context get df element filenam return elem exist delet file param filenam delet return true throw except public boolean delet file string filenam throw except check oper permit filter valid command filter command filter valid command filter command element descriptor elem context get df element filenam elem delet return true renam file param sourc file renam param target new file name return true throw except public boolean renam file string sourc string target throw except check oper permit filter valid command filter command context renam sourc target return true make directori param dir directori make return true throw except public boolean mkdir string dir throw except check oper permit filter valid command filter command contain descriptor contain context get df contain dir contain creat return true list content directori param dir name directori list return array string one file name throw except public string list path string dir throw except check oper permit filter valid command filter command collect string path new array list string contain descriptor contain context get df contain dir iter element descriptor iter contain iter iter next element descriptor elem iter next path add elem string string type new string return path array type return map contain logic plan associ alia return map public map string logic plan get alias map string logic plan alia plan new hash map string logic plan logic relat oper op curr get alias key set string alia op get alia null alia alia plan put alia curr get alia get op return alia plan reclaim resourc use instanc server method delet temporari file gener current thread execut command public void shutdown clean activ reclaim scope free resourc current implement throw except henc will n call context get execut engin reclaim scope scope file local delet temp file get set current alia return set public set string get alia key set return curr get alia op key set public map oper data bag get exampl string alia throw except tri curr batch alia null curr pars queri curr build plan null execut curr pars queri curr skip store curr build plan alia curr compil catch except e sinc origin script pars anyway error pars reason error file load load n exist anymor e print stack trace exampl gener exgen new exampl gener curr lp context tri return exgen get exampl catch exec except e e print stack trace system throw new except exec except e catch except e e print stack trace system throw new except except e public void print histori boolean number list string sc curr get script cach sc empti int sc size number system print system println sc get privat void build store plan string alia throw except curr pars queri curr build plan alia batch alia null compil need store leaf henc add store plan explain queri parser util attach store plan scope curr lp fakefil null curr get oper alia fake context curr compil compil execut current plan return throw except privat stat execut throw except context get properti set properti context job name job prioriti null context get properti set properti context job prioriti plan store plan execut ignor plan reus curr count execut store curr compil curr lp size return stat get context get properti set properti logic plan signatur curr lp get signatur stat stat execut compil logic plan return stat privat stat execut compil logic plan throw exec except frontend except discov featur use script script state get set script featur curr lp curr lp optim context return launch plan curr lp job pigexec common method launch job accord logic plan param lp logic plan param job name string contain job name use return stat object throw exec except throw frontend except protect stat launch plan logic plan lp string job name throw exec except frontend except stat stat null tri stat context get execut engin launch lp job name context catch exec except e throw e catch frontend except e throw e catch except e lot except throw launcher exec except let els wrap int err code string msg unexpect error execut throw new exec except msg err code except e return stat test n use throw except suppress warn unus privat logic plan build lp throw except curr build plan null curr compil return curr lp privat logic relat oper get oper alia string alia throw except build store plan alia logic relat oper op logic relat oper curr get oper alia op null int err code string msg plan alia describ throw new frontend except msg err code except fals null return op return datum associ logic plan make sens call method queri script regist one link regist queri string link regist script input stream method return logic plan data public logic plan datum get logic plan data return new logic plan data curr lp class hold intern state grunt shell session protect class graph privat final map logic relat oper logic plan alias new hash map logic relat oper logic plan privat map string oper oper new hash map string oper privat string last rel privat final list string script cach new array list string file name map contain filenam canon filenam map do repars cach script rememb translat current directori might correct first pars privat map string string file name map new hash map string string privat final boolean batch mode privat int process store privat logic plan lp privat int current line num public graph boolean batch mode batch mode batch mode lp new logic plan call back method count execut store privat void count execut store throw frontend except list store sink util get logic relat oper lp store class process store sink size map logic relat oper logic plan get alias return alia map string oper get alia op return oper boolean batch return batch mode boolean batch empti oper op lp get sink op instanceof store return fals return true void mark execut public logic plan get logic plan return lp get oper give alia raw plan null find oper get oper string alia throw frontend except return oper get alia public logic plan get plan string alia throw except logic plan plan lp alia null logic relat oper op logic relat oper oper get alia op null int err code string msg unabl find oper alia alia throw new frontend except msg err code except plan alia get op return plan build plan give alia extra branch child branch alia ignor depend branch e scalar keep throw except void build plan string alia throw except alia null skip store final queue oper queue new link list oper alia null oper op get oper alia op null string msg unabl find oper alia alia throw new frontend except msg except queue add op els list store store util get logic relat oper lp store class store op store boolean add sink true add successor load list oper succ lp get successor op succ null succ size oper succ succ succ instanceof load add sink fals break add sink queue add op logic plan plan new logic plan queue empti oper curr op queue poll plan add curr op list oper pred lp get predecessor curr op pred null list oper op new array list oper pred oper pred op queue contain pred queue add pred plan connect pred curr op visit express associ curr op refer oper oper also go enqueu curr op accept new express visitor plan new depend order walker plan overrid protect logic express visitor get visitor logic express plan expr plan throw frontend except return new logic express visitor expr plan new depend order walker expr plan overrid public void visit scalar express expr throw frontend except oper ref op expr get implicit referenc oper queue contain ref op queue add ref op curr op set plan plan lp plan remov store execut previous overal plan privat void skip store throw except get store specif list store sink util get logic relat oper lp store class list oper sink remov new array list oper int skip count process store skip count store sink sink sink remov add sink skip count skip count break oper op sink remov fulli possibl multiqueri case store leaf sink therefor successor need remov remov load op oper pred lp get predecessor op get lp disconnect pred op lp remov op privat void remov load oper remov throw except list oper successor lp get successor remov list oper succ remov new array list oper successor null successor size succ remov add successor oper succ succ remov lp disconnect remov succ succ instanceof load remov load succ lp remov succ accumul give statement previou queri statement gener overal raw plan void regist queri string queri int start line boolean valid statement boolean skip pars batch throw except batch mode start line current line num string line script cach remov script cach size script cach add line queri els start line current line num script cach add current line num buffer reader br new buffer reader new string reader queri string line br read line line null script cach add line current line num line br read line skip pars batch return els script cach add queri valid statement valid queri pars queri batch mode build plan null oper sink lp get sink sink instanceof store tri execut catch except e int err code string msg unabl store alia store sink get alia throw new frontend except msg err code except e break one store break privat void valid queri throw frontend except string queri build queri queri parser driver parser driver new queri parser driver context scope file name map tri logic plan plan parser driver pars queri plan valid context scope true catch frontend except ex script cach remov script cach size throw ex public list string get script cach return script cach pars accumul statement gener overal plan privat void pars queri throw frontend except context get context reset context get context set client system prop context get properti string queri build queri queri empti lp new logic plan return tri queri parser driver parser driver new queri parser driver context scope file name map lp parser driver pars queri oper parser driver get oper last rel parser driver get last rel catch except ex script cach remov script cach size remov bad script cach except pe log util get except ex int err code string msg error pars pe null ex get messag pe get messag log error except pars msg ex null pe throw new frontend except msg err code except ex els throw new frontend except msg err code except ex pe get sourc locat public string get last rel return last rel privat string build queri string builder accu queri new string builder string line script cach accu queri append line n return accu queri string privat void compil throw except lp valid context scope fals curr post process privat void post process throw except follow code deal store load combin intermedi file case replac load oper implicit split oper iff load store func revers safe skip load keep go split output load store func revers differ function connect store load rememb depend set load load op new hash set load list oper sourc lp get sourc oper sourc sourc sourc instanceof load load op add load sourc set store store op new hash set store list oper sink lp get sink oper sink sink sink instanceof store store op add store sink true equal context get properti get properti log info output locat strick check enabl check duplic store loc store op load load load op store store store op string ifil load get file spec get file name string ofil store get file spec get file name ofil equal ifil path load store connect store load creat depend store load path load store connect store load creat cycl store get plan path exist load store store get plan connect store load method check whether multipl sink use file base locat ye throw runtim except param store op privat void check duplic store loc set store store op set string uniqu store loc new hash set string store store store op string file name store get file spec get file name uniqu store loc add file name uri util file local file name new configur true throw new runtim except script contain statement write locat file name protect graph duplic two choic duplic logic plan realli clone oper connect clone oper cach away script till point need clone simpli pars script latter approach use one open issu consid follow script load file somefil filter store bla rm file somefil load file someotherfil tri clone tri repars begin current parser check file exist file load case file local one e file prefix know issu need revisit later pars line cach script int line number creat datum structur need pars graph graph new graph batch graph process store process store graph file name map new hash map string string file name map tri iter string script cach iter next line number alway regist queri irrespect batch mode need figur anyth differ need happen batch mode n valid set valid statement param fals graph regist queri next line number fals fals graph post process catch except ioe ioe print stack trace graph null return graph call indic queri pars compil mode expect statement valid enter instead whole script param valid statement public void set valid statement boolean valid statement valid statement valid statement set whether skip pars regist queri batch mode param skip pars regist batch public void set skip pars regist batch boolean skip pars regist batch skip pars regist batch skip pars regist batch public string get last rel return curr get last rel public boolean debug logger get logger org apach get level level return true els return fals public string get job name return job name public string get job prioriti return job prioriti 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool pigstat import java util array list import java util collect import java util compar import java util iter import java util list import java util map import java util properti import org apach common collect iter util import org apach common log log import org apach common log log factori import org apach hadoop f path import org apach hadoop mapr job client import org apach except import org apach runner return code import org apach classif interfac audienc import org apach classif interfac audienc privat import org apach classif interfac stabil import org apach impl context import org apach impl logic layer frontend except import org apach impl util spillabl memori manag import org apach newplan base oper plan import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach tool pigstat job stat job state import com googl common collect map stat encapsul statist collect run script includ statu execut hadoop job well inform output input script interfac audienc public interfac stabil evolv public abstract class stat privat static final log log factori get log stat class privat static thread local stat tp new thread local stat protect static final string yyyi dd mm ss protect long start time protect long end time protect string user id protect job graph job plan protect context context protect map string output stat alia ouput map protect int error code protect string error messag null protect throwabl error throwabl null protect int return code return code public static stat get return tp get public static stat start stat stat tp set stat return tp get return code defin link return code public int get return code return return code return error messag string public string get error messag return error messag return error code link except public int get error code return error code return error code link except public throwabl get error throwabl return error throwabl deprec public abstract job client get job client public abstract boolean emb public boolean success return get number job return code return code return code return code public abstract map string list stat get stat public abstract list string get error messag return properti associ script public properti get properti context null return null return context get properti return display messag grunt public abstract string get display string return job spawn script public job graph get job graph return job plan return list output locat script public list string get output locat array list string locat new array list string output stat output get output stat locat add output get locat return collect unmodifi list locat return list output name script public list string get output name array list string name new array list string output stat output get output stat name add output get name return collect unmodifi list name return number byte give output locat invalid locat name public long get number byte string locat locat null return string name new path locat get name long count output stat output get output stat name equal output get name count output get byte break return count return number record give output locat invalid locat name public long get number record string locat locat null return string name new path locat get name long count output stat output get output stat name equal output get name count output get number record break return count return alia associ output locat public string get output alia string locat locat null return null string name new path locat get name string alia null output stat output get output stat name equal output get name alia output get alia break return alia return total spill count link spillabl memori manag public abstract long get spill count return total number bag spill proactiv public abstract long get proactiv spill count object return total number record spill proactiv public abstract long get proactiv spill count record return total byte write user specifi locat script public long get byte write iter job stat job plan iter long ret next long n next get byte write n ret n return ret return total number record user specifi output locat script public long get record written iter job stat job plan iter long ret next long n next get record writtern n ret n return ret public string get hadoop version return script state get get hadoop version public string get version return script state get get version return content script run public string get script return script state get get script public string get script id return script state get get id public string get file name return script state get get file name public string get featur return script state get get script featur public long get durat return start time end time end time start time return number job script public int get number job return job plan size public list output stat get output stat list output stat output new array list output stat iter job stat iter job plan iter iter next output stat os iter next get output output add os return collect unmodifi list output public output stat result string alia alia ouput map null alia ouput map map new hash map iter job stat iter job plan iter iter next output stat os iter next get output string os get alia null length warn output alia n aval os get locat continu alia ouput map put os return alia ouput map get alia public list input stat get input stat list input stat input new array list input stat iter job stat iter job plan iter iter next input stat iter next get input input add return collect unmodifi list input public void set error messag string error messag error messag error messag public void set error code int error code error code error code public void set error throwabl throwabl error throwabl public void set return code int return code return code return code class print job graph public static class job graph printer extend plan visitor string buffer buf protect job graph printer oper plan plan super plan new org apach newplan depend order walker plan buf new string buffer public void visit job stat op throw frontend except buf append op get job id list oper succ plan get successor op succ null buf append oper p succ buf append job stat p get job id append buf append n overrid public string string buf append n return buf string job graph link oper plan whose member link job stat public static class job graph extend base oper plan implement iter job stat overrid public string string job graph printer jp new job graph printer tri jp visit catch frontend except e warn unabl print job plan e return jp string return list represent job graph return list array list return list job stat suppress warn uncheck public list job stat get job list return iter util list iter public iter job stat iter return new iter job stat privat iter oper iter get oper overrid public boolean next return iter next overrid public job stat next return job stat iter next overrid public void remov public boolean connect oper oper list oper succ null succ get successor succ null oper succ succ succ get name equal get name connect succ return true return fals public list job stat get success job array list job stat lst new array list job stat iter job stat iter iter iter next job stat js iter next j get state job state lst add j collect sort lst new job compar return lst public list job stat get fail job array list job stat lst new array list job stat iter job stat iter iter iter next job stat js iter next j get state job state lst add j return lst privat static class job compar implement compar job stat overrid public int compar job stat job stat return get job id compar get job id privat public void set backend except string job id except e e instanceof except error except e get error code e get local messag els e null error e get local messag job id null e null debug unabl set backend except return iter job stat iter job plan iter iter next job stat js iter next job id equal j get job id j set backend except e break privat public context get context return context public void start start time system current time milli user id system get properti user name public void stop end time system current time milli int fail get number fail job int succeed get number success job fail succeed succeed job plan size return code return code els succeed succeed job plan size return code return code els return code return code public int get number success job iter job stat iter job plan iter int count iter next iter next get state job state count return count public int get number fail job iter job stat iter job plan iter int count iter next iter next get state job state count return count 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool pigstat import java util list import java util map import java util regex matcher import java util regex pattern import org apach backend hadoop executionengin physic layer relat oper store import org apach tool pigstat mapreduc stat util import org apach tool pigstat mapreduc simpl stat util class statist public class stat util public static final string public static final string public static final string public static final string public static final string public static final string public static final string public static final string public static final string input record public static final string multi input counter public static final string output record public static final string multi store counter deprec use link org apach tool pigstat mapreduc stat util instead deprec public static final string org apach hadoop mapr task counter deprec use link org apach tool pigstat mapreduc stat util instead deprec public static final string stat util return empti stat object use method advis return execut engin version stat default necessarili empti depend time return empti stat object deprec public static stat get empti stat return stat start new simpl stat return stat give return code param code return code return stat give return code public static stat get stat int code stat ps stat get ps null ps stat start new empti stat ps set return code code return ps public static void set error messag string msg stat ps stat get ps null ps stat start new empti stat ps set error messag msg public static void set error code int code stat ps stat get ps null ps stat start new empti stat ps set error code code public static void set error throwabl throwabl stat ps stat get ps null ps stat start new empti stat ps set error throwabl privat static pattern pattern pattern compil tmp public static boolean temp file string file name matcher result pattern matcher file name return result find public static void set stat map map string list stat stat map stat start new emb stat stat map return counter name give input file name param fname input file name return counter name public static string get multi input counter name string fname int index string short name get short name fname return short name null null index short name return counter name give link store param store store return counter name public static string get multi store counter name store store string short name get short name store get file get file name return short name null null store get index short name restrict total string size counter name charact leav charact prefix string privat static final int privat static final string privat static final string public static string get short name string uri int scolon uri index int slash scolon slash uri last index scolon els slash uri last index string short name null scolon short name uri substr slash slash scolon short name uri substr slash scolon short name null short name length short name short name substr short name length return short name 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool pigstat import org apach hadoop mapreduc counter import org apach hadoop mapreduc statu report import org apach hadoop util progress import org apach backend hadoop executionengin task context import org apach classif interfac audienc import org apach classif interfac stabil interfac audienc public interfac stabil evolv public class statu report extend statu report implement progress warn counter privat static statu report report null privat task context context null static datum cleanup public static void static datum cleanup report null privat statu report get singleton instanc context public static statu report get instanc report null report new statu report return report public void set context task context context context context deprec use link org apach tool pigstat statu report incr counter instead method return counter compat tez mode use incr counter compat tez mode overrid deprec public counter get counter enum name return context null null context get counter name deprec use link org apach tool pigstat statu report incr counter instead method return counter compat tez mode use incr counter compat tez mode overrid deprec public counter get counter string group string name return context null null context get counter group name public boolean incr counter enum name long incr return context null fals context incr counter name incr public boolean incr counter string group string name long incr return context null fals context incr counter group name incr overrid public boolean incr warn counter enum name object incr return incr counter name long incr overrid public boolean incr warn counter string group string name object incr return incr counter group name long incr overrid public void progress context null context progress overrid public void set statu string statu context null context set statu statu public float get progress return context null f context get progress 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util array list import java util array import java util list import java util properti import org apach common cli command line import org apach common cli command line parser import org apach common cli gnu parser import org apach common cli help formatt import org apach common cli option import org apach common cli option import org apach common cli pars except import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f file system import org apach hadoop f path import org apach hadoop io text import org apach hadoop io compress zip codec import org apach hadoop io compress compress codec import org apach hadoop io compress gzip codec import org apach hadoop mapreduc input format import org apach hadoop mapreduc job import org apach hadoop mapreduc output format import org apach hadoop mapreduc record reader import org apach hadoop mapreduc record writer import org apach hadoop mapreduc lib input file input format import org apach hadoop mapreduc lib input file split import org apach hadoop mapreduc lib output file output format import org apach express import org apach file input load func import org apach load caster import org apach load func import org apach load metadata import org apach load push import org apach overwrit store func import org apach configur import org apach except import org apach resourc schema import org apach resourc schema resourc field schema import org apach resourc statist import org apach store func import org apach store func interfac import org apach store metadata import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer configur import org apach backend hadoop executionengin map reduc layer split import org apach backend hadoop executionengin map reduc layer text input format import org apach backend hadoop executionengin map reduc layer text output format import org apach backend hadoop executionengin physic layer relat oper store import org apach bzip r bzip text input format import org apach data data byte array import org apach datum tupl import org apach datum tupl factori import org apach impl logic layer frontend except import org apach impl util cast util import org apach impl util object serial import org apach impl util storag util import org apach impl util context import org apach impl util util import org apach parser parser except load function pars line input field use charact delimit default delimit tab specifi charact liter know escap charact dec hex valu u x p option second constructor argument provid allow one custom advanc behavior list avail option ul li code schema code read store schema relat use hidden file li code noschema code ignor store schema load li code tag file code append input sourc file name begin tupl li code tag path code append input sourc file path begin tupl ul p h schema h code schema code specifi hidden schema file creat output directori store datum use storag without schema load determin field name type datum without need user explicitli provid schema code code claus unless code noschema code specifi attempt merg conflict schema make load first schema encount file system scan use schema file present schema option use load result error p addit use code schema code drop header file output directori file simpli list delimit alia intend make export tool read file header line easi cat header datum p h sourc tag h code tag file code specifi storag prepend input split name tupl row usag input use storag tag file foreach gener first field th index tupl contain input file name code tag path code specifi storag prepend input split path tupl row usag input use storag tag path foreach gener first field th index tupl contain input file path p note regardless whether store schema b alway b need specifi correct delimit read datum store read delimit load use default delimit datum pars correctli h compress h store directori whose name end bz gz lzo instal support compress hadoop automat use correspond compress codec br code output compress enabl code code output compress codec code job properti also work p load directori end bz bz work automat compress format auto detect load suppress warn uncheck public class storag extend file input load func implement store func interfac load push load metadata store metadata overwrit store func protect record reader null protect record writer writer null protect final log log log factori get log get class protect string signatur privat byte field del privat array list object proto tupl null privat tupl factori tupl factori tupl factori get instanc privat string load locat boolean schema fals boolean do nt load schema fals boolean overwrit output fals protect resourc schema schema protect load caster caster protect boolean requir column null privat boolean requir column initi fals indic whether input file name path read privat boolean tag file fals privat static final string tag file privat boolean tag path fals privat static final string tag path privat path sourc path null determin whether depend bzip text input format simpli depend hadoop handl bzip input privat boolean bzipinput usehadoop privat option popul valid option option valid option new option valid option add option schema fals load store schema relat use hidden file valid option add option noschema fals disabl attempt load datum schema filesystem valid option add option fals append input sourc file name begin tupl valid option add option fals append input sourc file path begin tupl valid option add option tagsourc fals append input sourc file name begin tupl option overwrit new option overwrit overwrit destin overwrit set long opt overwrit overwrit set option arg true overwrit set arg overwrit set arg name overwrit valid option add option overwrit return valid option public storag construct loader use specifi charact field delimit param delimit singl byte charact use separ field default throw pars except public storag string delimit delimit construct loader use specifi charact field delimit p understand follow option specifi second paramt ul li code schema code load store schema relat use hidden file li code noschema code ignor store schema load li code tag file code append input sourc file name begin tupl li code tag path code append input sourc file path begin tupl ul param delimit singl byte charact use separ field param option list option use modifi storag behavior throw pars except public storag string delimit string option field del storag util pars field del delimit option valid option popul valid option string opt arr option split tri command line parser parser new gnu parser command line configur option parser pars valid option opt arr schema configur option option schema configur option option overwrit string valu configur option get option valu overwrit true equal ignor case valu overwrit output true do nt load schema configur option option noschema tag file configur option option tag path configur option option remov tagsourc backward compat need tagsourc support least configur option option tagsourc log warn tagsourc deprec use tag file instead tag file true catch pars except e help formatt formatt new help formatt formatt print help storag option valid option wrap except runtim except exist loader extend storag n break throw new runtim except e overrid public tupl get next throw except proto tupl new array list object requir column initi signatur null properti p context get context get properti get class requir column boolean object serial deseri p get properti signatur requir column initi true prepend input sourc path sourc tag enabl tag file proto tupl add new datum byte array sourc path get name els tag path proto tupl add new datum byte array sourc path string tri boolean do next key valu do return null text valu text get current valu byte buf valu get byte int len valu get length int start int field int len buf field del requir column null requir column length field requir column field add tupl valu proto tupl buf start start field pick last field start len requir column null requir column length field requir column field add tupl valu proto tupl buf start len tupl tupl factori new tupl copi proto tupl return do nt load schema appli schema catch interrupt except e int err code string err msg error read input throw new exec except err msg err code except e privat tupl appli schema tupl tup throw except caster null caster get load caster signatur null schema null properti p context get context get properti get class new string signatur string serial schema p get properti signatur schema serial schema null return tup tri schema new resourc schema util get schema string serial schema catch parser except e log error unabl pars serial schema serial schema e bet guarante return either field datum field schema user specifi requir schema null resourc field schema field schema schema get field int tupl idx field project tupl contain requir field walk requir column array find requir field cast int field schema length requir column null requir column length requir column tupl idx tup size tup append null object val null tup get tupl idx null byte byte datum byte array tup get tupl idx get val cast util convert type caster byte field schema field schema get type tup set tupl idx val tupl idx input record somehow field provid schema drop extra field tup size field schema length int lastindex tup size list object list tup get int lastindex field schema length list remov tupl get may return refer inter list creat new tupl tup tupl factori new tupl copi list return tup overrid public void put next tupl f throw except tri writer write null f catch interrupt except e throw new except e privat void add tupl valu array list object tupl byte buf int start int end tupl add read field buf start end read byte start end datum byte array inclus return tupl param byte byte array copi datum param start start point copi param end end point copi exclus return protect datum byte array read field byte byte int start int end start end return null els return new datum byte array byte start end overrid public requir field respons push project requir field list requir field list throw frontend except requir field list null return null requir field list get field null int last column requir field rf requir field list get field rf get index last column last column rf get index requir column new boolean last column requir field rf requir field list get field rf get index requir column rf get index true properti p context get context get properti get class tri p set properti signatur object serial serial requir column catch except e throw new runtim except serial requir column return new requir field respons true overrid public boolean equal object obj obj instanceof storag return equal storag obj els return fals public boolean equal storag return field del field del overrid public input format get input format load locat end bz load locat end bz bzipinput usehadoop log info use bzip text input format return new bzip text input format els log info use text input format return new text input format overrid public void prepar read record reader reader split split reader tag file tag path sourc path file split split get wrap split get path overrid public void set locat string locat job job throw except load locat locat file input format set input path job locat bzipinput usehadoop job get configur get boolean configur true overrid public output format get output format return new text output format field del overrid public void prepar write record writer writer writer writer overrid public void set store locat string locat job job throw except job get configur set configur file output format set output path job new path locat true equal job get configur get output compress enabl file output format set compress output job true string codec job get configur get output compress codec tri file output format set output compressor class job class extend compress codec class name codec catch class find except e throw new runtim except class find codec els make store directori end gz bz work set compress new path locat job privat void set compress path path job job string locat path get name locat end bz locat end bz file output format set compress output job true file output format set output compressor class job zip codec class els locat end gz file output format set compress output job true file output format set output compressor class job gzip codec class els file output format set compress output job fals overrid public void check schema resourc schema throw except overrid public string rel ab path store locat string locat path cur dir throw except return load func get absolut path locat cur dir overrid public int hash code return field del overrid public void set context signatur string signatur signatur signatur overrid public list oper set get featur return array list load push oper set overrid public void set store func context signatur string signatur overrid public void cleanup failur string locat job job throw except store func cleanup failur impl locat job overrid public void cleanup success string locat job job throw except noth implement load meta data interfac overrid public resourc schema get schema string locat job job throw except do nt load schema schema new json metadata get schema locat job schema signatur null schema null tag file schema util get schema input sourc tag schema els tag path schema util get schema input sourc tag schema properti p context get context get properti get class new string signatur p set properti signatur schema schema string return schema overrid public resourc statist get statist string locat job job throw except return null overrid public void set partit filter express partit filter throw except overrid public string get partit key string locat job job throw except return null implement store metadata overrid public void store schema resourc schema schema string locat job job throw except schema json metadata metadata writer new json metadata byte record del n metadata writer set field del field del metadata writer set record del record del metadata writer store schema schema locat job overrid public void store statist resourc statist stat string locat job job throw except overrid public boolean overwrit return overwrit output overrid public void cleanup output store store job job throw except configur conf job get configur string output conf get configur path output path null output null output path new path output file system f output path get file system conf tri f delet output path true catch except e log warn could delet output output 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach enum enumer warn type public enum warn placehold warn placehold warn placehold warn placehold warn placehold warn placehold warn placehold warn placehold warn placehold warn placehold warn placehold warn placehold warn bulk collect warn spark exec engin custom warn see 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer util import java net import java util link list import java util list import org apach common log log import org apach common log log factori import org apach hadoop f path import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper add import org apach backend hadoop executionengin physic layer express oper constant express import org apach backend hadoop executionengin physic layer express oper divid import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper greater expr import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper less expr import org apach backend hadoop executionengin physic layer express oper mod import org apach backend hadoop executionengin physic layer express oper multipli import org apach backend hadoop executionengin physic layer express oper equal expr import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper bin cond import org apach backend hadoop executionengin physic layer express oper cast import org apach backend hadoop executionengin physic layer express oper null import org apach backend hadoop executionengin physic layer express oper map look import org apach backend hadoop executionengin physic layer express oper neg import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper import org apach backend hadoop executionengin physic layer express oper project import org apach backend hadoop executionengin physic layer express oper regexp import org apach backend hadoop executionengin physic layer express oper user comparison func import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer express oper subtract import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper collect group import org apach backend hadoop executionengin physic layer relat oper cross import org apach backend hadoop executionengin physic layer relat oper demux import org apach backend hadoop executionengin physic layer relat oper distinct import org apach backend hadoop executionengin physic layer relat oper join import org apach backend hadoop executionengin physic layer relat oper filter import org apach backend hadoop executionengin physic layer relat oper import org apach backend hadoop executionengin physic layer relat oper global rearrang import org apach backend hadoop executionengin physic layer relat oper limit import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach backend hadoop executionengin physic layer relat oper merg cogroup import org apach backend hadoop executionengin physic layer relat oper merg join import org apach backend hadoop executionengin physic layer relat oper nativ import org apach backend hadoop executionengin physic layer relat oper optim import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper partial agg import org apach backend hadoop executionengin physic layer relat oper partit rearrang import org apach backend hadoop executionengin physic layer relat oper poisson sampl import org apach backend hadoop executionengin physic layer relat oper pre combin local rearrang import org apach backend hadoop executionengin physic layer relat oper reservoir sampl import org apach backend hadoop executionengin physic layer relat oper skew join import org apach backend hadoop executionengin physic layer relat oper sort import org apach backend hadoop executionengin physic layer relat oper split import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer relat oper stream import org apach backend hadoop executionengin physic layer relat oper union import org apach impl plan depend order walker import org apach impl plan oper key import org apach impl plan visitor except import com googl common collect list util class helper function deal physic plan public class plan helper privat final static log log log factori get log new plan helper get class privat plan helper creat rel path use build temporari place store output number map reduc task public static string make store tmp path string orig path path new path orig uri path uri uri normal string path str uri get path path absolut return new path ab path str string els return new path rel path str string public static extend physic oper boolean contain physic oper physic plan plan class op class throw visitor except op finder finder new op finder plan op class finder visit return finder plan contain op return link list oper contain within physic plan implement suppli class depend order return empti link list oper exist param plan param op class return link list oper contain within plan implement suppli class empti op exist throw visitor except public static link list get physic oper physic plan plan class op class throw visitor except op finder finder new op finder plan op class finder visit return finder get find op find local rearrang split sub plan param plan physic plan param rearrang key oper key local rearrang return local rearrang specifi oper key sub plan split throw visitor except public static physic plan get local rearrang plan split physic plan plan oper key rearrang key throw visitor except list split split plan helper get physic oper plan split class split split split physic plan sub plan split get plan sub plan get oper rearrang key null return sub plan return plan privat static class op finder extend phi plan visitor final class op class privat link list find op list new link list public op finder physic plan plan class op class super plan new depend order walker physic oper physic plan plan op class op class public link list get find op return find op public boolean plan contain op return find op empti overrid suppress warn uncheck public void visit physic oper op op class assign op get class find op add op overrid public void visit load load ld throw visitor except super visit load ld visit ld overrid public void visit store store st throw visitor except super visit store st visit st overrid public void visit nativ nativ nat throw visitor except super visit nativ nat visit nat overrid public void visit filter filter fl throw visitor except super visit filter fl visit fl overrid public void visit collect group collect group mg throw visitor except super visit collect group mg visit mg overrid public void visit local rearrang local rearrang lr throw visitor except super visit local rearrang lr visit lr overrid public void visit global rearrang global rearrang gr throw visitor except super visit global rearrang gr visit gr overrid public void visit packag packag pkg throw visitor except super visit packag pkg visit pkg overrid public void visit nfe throw visitor except super visit nfe visit nfe overrid public void visit union union un throw visitor except super visit union un visit un overrid public void visit split split spl throw visitor except super visit split spl visit spl overrid public void visit demux demux demux throw visitor except super visit demux demux visit demux overrid public void visit distinct distinct distinct throw visitor except super visit distinct distinct visit distinct overrid public void visit sort sort sort throw visitor except super visit sort sort visit sort overrid public void visit constant constant express cnst throw visitor except super visit constant cnst visit cnst overrid public void visit project project proj throw visitor except super visit project proj visit proj overrid public void visit greater greater expr grt throw visitor except super visit greater grt visit grt overrid public void visit less less expr lt throw visitor except super visit less lt visit lt overrid public void visit equal equal expr gte throw visitor except super visit equal gte visit gte overrid public void visit equal equal expr lte throw visitor except super visit equal lte visit lte overrid public void visit equal equal expr eq throw visitor except super visit equal eq visit eq overrid public void visit equal equal expr eq throw visitor except super visit equal eq visit eq overrid public void visit regexp regexp throw visitor except super visit regexp visit overrid public void visit null null null throw visitor except super visit null null visit null overrid public void visit add add add throw visitor except super visit add add visit add overrid public void visit subtract subtract sub throw visitor except super visit subtract sub visit sub overrid public void visit multipli multipli mul throw visitor except super visit multipli mul visit mul overrid public void visit divid divid dv throw visitor except super visit divid dv visit dv overrid public void visit mod mod mod throw visitor except super visit mod mod visit mod overrid public void visit throw visitor except super visit visit overrid public void visit throw visitor except super visit visit overrid public void visit throw visitor except super visit visit overrid public void visit bin cond bin cond bin cond super visit bin cond bin cond visit bin cond overrid public void visit neg neg neg super visit neg neg visit neg overrid public void visit user func user func user func throw visitor except super visit user func user func visit user func overrid public void visit comparison func user comparison func comp func throw visitor except super visit comparison func comp func visit comp func overrid public void visit map look map look map look super visit map look map look visit map look overrid public void visit cast cast cast super visit cast cast visit cast overrid public void visit limit limit lim throw visitor except super visit limit lim visit lim overrid public void visit cross cross cross throw visitor except super visit cross cross visit cross overrid public void visit join join join throw visitor except super visit join join visit join overrid public void visit merg join merg join join throw visitor except super visit merg join join visit join overrid public void visit merg co group merg cogroup merg co grp throw visitor except super visit merg co group merg co grp visit merg co grp overrid public void visit stream stream stream throw visitor except super visit stream stream visit stream overrid public void visit skew join skew join sk throw visitor except super visit skew join sk visit sk overrid public void visit partit rearrang partit rearrang pr throw visitor except super visit partit rearrang pr visit pr overrid public void visit optim optim optim throw visitor except super visit optim optim visit optim overrid public void visit pre combin local rearrang pre combin local rearrang pre combin local rearrang throw visitor except super visit pre combin local rearrang pre combin local rearrang visit pre combin local rearrang overrid public void visit partial agg partial agg po partial agg throw visitor except super visit partial agg po partial agg visit po partial agg overrid public void visit reservoir sampl reservoir sampl reservoir sampl throw visitor except super visit reservoir sampl reservoir sampl visit reservoir sampl overrid public void visit poisson sampl poisson sampl poisson sampl throw visitor except super visit poisson sampl poisson sampl visit poisson sampl 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer plan import java io byte array output stream import java io except import java io output stream import java io print stream import java util array list import java util collect import java util collect import java util hash set import java util list import java util set import org apach except import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer relat oper multi queri packag import org apach backend hadoop executionengin physic layer relat oper collect group import org apach backend hadoop executionengin physic layer relat oper counter import org apach backend hadoop executionengin physic layer relat oper demux import org apach backend hadoop executionengin physic layer relat oper join import org apach backend hadoop executionengin physic layer relat oper filter import org apach backend hadoop executionengin physic layer relat oper import org apach backend hadoop executionengin physic layer relat oper global rearrang import org apach backend hadoop executionengin physic layer relat oper limit import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach backend hadoop executionengin physic layer relat oper packag import org apach backend hadoop executionengin physic layer relat oper partial agg import org apach backend hadoop executionengin physic layer relat oper rank import org apach backend hadoop executionengin physic layer relat oper skew join import org apach backend hadoop executionengin physic layer relat oper sort import org apach backend hadoop executionengin physic layer relat oper split import org apach backend hadoop executionengin physic layer relat oper store import org apach backend hadoop executionengin physic layer relat oper union import org apach backend hadoop executionengin physic layer relat oper packag import org apach impl plan depth first walker import org apach impl plan oper import org apach impl plan oper plan import org apach impl plan plan visitor import org apach impl plan visitor except import org apach impl util multi map public class plan printer extend oper extend oper plan extend plan visitor string string string sep n string sep n int level cntr print stream stream system boolean verbos true public plan printer plan super plan new depth first walker plan public plan printer plan print stream stream super plan new depth first walker plan stream stream public void set verbos boolean verbos verbos verbos overrid public void visit throw visitor except tri stream write depth first get byte catch except ioe int err code string msg unexpect error print physic plan throw new visitor except msg err code except ioe public void print output stream printer throw visitor except except printer write depth first get byte protect void breadth first throw visitor except list leav plan get leav set see new hash set breadth first leaf see suppress warn uncheck privat void breadth first collect predecessor set see throw visitor except level cntr disp tab list new predecessor new array list pred predecessor see add pred list pred lst plan get predecessor pred pred lst null new predecessor add pred lst pred visit new predecessor size stream println breadth first new predecessor see suppress warn uncheck protect string depth first throw visitor except string builder sb new string builder list leav plan get leav collect sort leav leaf leaf sb append depth first leaf sb append n sb delet sb length n length sb length sb delet sb length n length sb length return sb string privat string plan string physic plan pp string builder sb new string builder byte array output stream bao new byte array output stream pp null pp explain bao verbos els return sb append sep sb append shift string tab bao string return sb string privat string plan string list physic plan lep string builder sb new string builder lep null physic plan ep lep sb append plan string ep return sb string suppress warn uncheck privat string depth first node throw visitor except string builder sb new string builder node name n verbos node instanceof filter sb append plan string filter node get plan els node instanceof local rearrang sb append plan string local rearrang node get plan els node instanceof partial agg sb append plan string partial agg node get key plan sb append plan string partial agg node get valu plan els node instanceof collect group sb append plan string collect group node get plan els node instanceof rank sb append plan string rank node get rank plan els node instanceof counter sb append plan string counter node get counter plan els node instanceof sort sb append plan string sort node get sort plan els node instanceof sb append plan string node get input plan els node instanceof packag packag pkgr packag node get pkgr pkgr instanceof multi queri packag list packag pkgr multi queri packag pkgr get packag packag child pkgr sb append sep child name n els node instanceof join join frj join node list list physic plan join plan frj get join plan join plan null list physic plan list join plan sb append plan string list els node instanceof skew join skew join skew skew join node multi map physic oper physic plan join plan skew get join plan join plan null list physic plan inner plan new array list physic plan inner plan add join plan valu sb append plan string inner plan els node instanceof limit physic plan limit plan limit node get limit plan limit plan null sb append plan string limit plan node instanceof split sb append plan string split node get plan els node instanceof demux list physic plan plan new array list physic plan set physic plan pl new hash set physic plan pl add demux node get plan plan add pl sb append plan string plan list origin predecessor plan get predecessor node origin predecessor null return sb string list predecessor new array list origin predecessor collect sort predecessor int pred predecessor string str depth first pred str null sb append sep predecessor size sb append shift string tab str els sb append shift string tab str return sb string privat string shift string tab string str int tab type string builder sb new string builder string spl str split n string tab tab type sb append spl n int spl length sb append tab sb append spl sb append n return sb string privat void disp tab int level cntr stream print public void visit load load op stream print op name public void visit store store op stream print op name public void visit filter filter op stream print op name public void visit local rearrang local rearrang op stream print op name public void visit global rearrang global rearrang op stream print op name public void visit packag packag op stream print op name public void visit start map union op stream print op name 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except boolean oper public class extend binari comparison oper privat static final long serial version public oper key k k public oper key k int rp super k rp result type data type overrid public void visit phi plan visitor v throw visitor except v visit overrid public string name return data type find type name result type key string overrid public result get next boolean throw exec except result be accum child null data type r null return r result leav left lh get next boolean pass leav return statu statu return leav truth tabl true n null f fals n f n f n n n f f f f f short circuit lh fals return fals handl boolean return leav fals left result null boolean leav result boolean valu illustr null return leav illustr markup null left result return leav true result right rh get next boolean return leav return leav pass right return statu statu return right lh null rh true return null case return rh tabl leav result null right result null boolean right result boolean valu return left matter get right side return null true fals right result null illustr markup null right result boolean right result return right overrid public clone throw clone support except clone new new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java util array list import java util list import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach datum tupl import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except public class bin cond extend express oper privat static final long serial version express oper cond express oper lh express oper rh privat transient list express oper child public bin cond oper key k super k public bin cond oper key k int rp super k rp public bin cond oper key k int rp express oper cond express oper lh express oper rh super k rp cond cond lh lh rh rh public result gener get next byte datum type throw exec except list express oper list new array list express oper list add cond result r accum child list data type r null r return statu statu return r list clear list add lh list add rh be accum child list data type return be result re cond get next boolean re result null re return statu statu return re result result boolean re result true lh get next datum type rh get next datum type illustr markup null result result boolean re result return result overrid public result get next boolean throw exec except result be accum child null data type r null return be result re cond get next boolean re result null re return statu statu return re return boolean re result true lh get next boolean rh get next boolean overrid public result get next data bag throw exec except return gener get next data type overrid public result get next data byte array throw exec except return gener get next data type overrid public result get next doubl throw exec except return gener get next data type overrid public result get next float throw exec except return gener get next data type overrid public result get next integ throw exec except return gener get next data type overrid public result get next long throw exec except return gener get next data type overrid public result get next date time throw exec except return gener get next data type overrid public result get next map throw exec except return gener get next data type overrid public result get next string throw exec except return gener get next data type overrid public result get next tupl throw exec except return gener get next data type overrid public result get next big integ throw exec except return gener get next data type overrid public result get next big decim throw exec except return gener get next data type overrid public void visit phi plan visitor v throw visitor except v visit bin cond overrid public string name return bin cond data type find type name result type key string overrid public void attach input tupl cond attach input lh attach input rh attach input public void set cond express oper cond op cond cond op public void set rh express oper rh rh rh public void set lh express oper lh lh lh get condit public express oper get cond return cond get right express public express oper get rh return rh get left express public express oper get lh return lh overrid public boolean support multipl input return true overrid public bin cond clone throw clone support except bin cond clone new bin cond new oper key key scope node id gener get gener get next node id key scope clone clone helper clone cond cond clone clone lh lh clone clone rh rh clone return clone get child express express overrid public list express oper get child express child null child new array list express oper child add cond child add lh child add rh return child overrid public tupl illustr markup object object int eq class index illustr null return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java io except import java io object input stream import java math big decim import java math big integ import java util array list import java util iter import java util list import java util map import org apach common log log import org apach common log log factori import org apach eval func import org apach func spec import org apach load caster import org apach load func import org apach except import org apach warn import org apach resourc schema import org apach resourc schema resourc field schema import org apach stream import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach builtin date import org apach datum datum bag import org apach data data byte array import org apach datum data type import org apach datum tupl import org apach impl context import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except import org apach impl util cast util import org apach impl util log util import org joda time date time cast convert datum byte array either string integ add test union need full oper implement public class cast extend express oper privat final static log log log factori get log cast class privat static final string unknown byte array error messag receiv bytearray union two differ loader determin convert bytearray privat func spec func spec null transient privat load caster caster privat boolean cast need fals privat byte real type null privat transient list express oper child privat resourc field schema field schema null privat static final long serial version public cast oper key k super k public cast oper key k int rp super k rp privat void instanti func throw except caster null return func spec null object obj context instanti func spec func spec obj instanceof load func caster load func obj get load caster els obj instanceof stream caster stream obj get load caster els obj instanceof eval func caster eval func obj get load caster els throw new except invalid class type func spec get class name privat result error result re new result re return statu statu return re public void set func spec func spec lf throw except func spec lf instanti func overrid public void visit phi plan visitor v throw visitor except v visit cast overrid public string name data type schema type result type return cast data type find type name result type field schema calc cast string key string els return cast data type find type name result type key string overrid public boolean support multipl input return fals overrid public result get next big integ throw exec except physic oper input get byte result type get result type switch result type case data type case data type case data type case data type return error case data type data byte array dba result re get next data byte array re return statu statu re result null tri dba data byte array re result catch class cast except e re result type byte array one type cast still possibl real type null find type cach real type data type find type re result tri re result data type big integ re result real type catch class cast except cce type chang need find type tri cast real type data type find type re result re result data type big integ re result real type return re tri null caster re result caster byte big integ dba get els int err code string msg unknown byte array error messag big integ get origin locat throw new exec except msg err code except catch exec except ee throw ee catch except e log error error cast byte array big integ return re case data type result re get next boolean re return statu statu re result null boolean re result re result big integ els re result big integ return re case data type result re get next integ re return statu statu re result null re result big integ valu integ re result long valu return re case data type result re get next doubl re return statu statu re result null re result big integ valu doubl re result long valu return re case data type result re get next long re return statu statu re result null re result big integ valu long re result long valu return re case data type result re get next float re return statu statu re result null re result big integ valu float re result long valu return re case data type result re get next string re return statu statu re result null re result new big integ string re result return re case data type return get next big integ case data type result re get next big decim re return statu statu re result null re result big decim re result big integ return re return error overrid public result get next big decim throw exec except physic oper input get byte result type get result type switch result type case data type case data type case data type case data type return error case data type data byte array dba result re get next data byte array re return statu statu re result null tri dba data byte array re result catch class cast except e re result type byte array one type cast still possibl real type null find type cach real type data type find type re result tri re result data type big decim re result real type catch class cast except cce type chang need find type tri cast real type data type find type re result re result data type big decim re result real type return re tri null caster re result caster byte big decim dba get els int err code string msg unknown byte array error messag big decim get origin locat throw new exec except msg err code except catch exec except ee throw ee catch except e log error error cast byte array big decim return re case data type result re get next boolean re return statu statu re result null boolean re result re result big decim els re result big decim return re case data type result re get next integ re return statu statu re result null re result big decim valu integ re result long valu return re case data type result re get next doubl re return statu statu re result null re result big decim valu doubl re result doubl valu return re case data type result re get next long re return statu statu re result null re result big decim valu long re result long valu return re case data type result re get next float re return statu statu re result null re result big decim valu float re result doubl valu return re case data type result re get next string re return statu statu re result null re result new big decim string re result return re case data type result re get next big integ re return statu statu re result null re result new big decim big integ re result return re case data type return get next big decim return error overrid public result get next boolean throw exec except physic oper input get byte result type get result type switch result type case data type case data type case data type case data type return error case data type data byte array dba result re get next data byte array re return statu statu re result null tri dba data byte array re result catch class cast except e re result type byte array one type cast still possibl real type null find type cach real type data type find type re result tri re result data type boolean re result real type catch class cast except cce type chang need find type tri cast real type data type find type re result re result data type boolean re result real type return re tri null caster re result caster byte boolean dba get els int err code string msg unknown byte array error messag boolean get origin locat throw new exec except msg err code except catch exec except ee throw ee catch except e log error error cast byte array boolean return re case data type result re get next string re return statu statu re result null re result cast util string boolean string re result return re case data type return get next boolean case data type integ null result re get next integ re return statu statu re result null re result boolean valu integ re result int valu return re case data type result re get next long re return statu statu re result null re result boolean valu long re result long valu return re case data type result re get next float re return statu statu re result null re result boolean valu float re result float valu return re case data type result re get next doubl re return statu statu re result null re result boolean valu doubl re result doubl valu return re case data type big integ bi null result re get next big integ re return statu statu re result null re result boolean valu big integ equal big integ re result return re case data type big decim bd null result re get next big decim re return statu statu re result null re result boolean valu big decim equal big decim re result return re return error overrid public result get next integ throw exec except physic oper input get byte result type get result type switch result type case data type case data type case data type return error case data type data byte array dba result re get next data byte array re return statu statu re result null tri dba data byte array re result catch class cast except e re result type byte array one type cast still possibl real type null find type cach real type data type find type re result tri re result data type integ re result real type catch class cast except cce type chang need find type tri cast real type data type find type re result re result data type integ re result real type return re tri null caster re result caster byte integ dba get els int err code string msg unknown byte array error messag int get origin locat throw new exec except msg err code except catch exec except ee throw ee catch except e log error error cast byte array integ return re case data type result re get next boolean re return statu statu re result null boolean re result re result integ valu els re result integ valu return re case data type result re get next integ return re case data type doubl null result re get next doubl re return statu statu re result null re result data type integ re result re result integ valu doubl re result int valu return re case data type result re get next long re return statu statu re result null re result integ valu long re result int valu return re case data type result re get next float re return statu statu re result null re result integ valu float re result int valu return re case data type result re get next date time re return statu statu re result null re result integ valu long valu date time re result get milli int valu return re case data type result re get next string re return statu statu re result null re result cast util string integ string re result return re case data type result re get next big integ re return statu statu re result null re result integ valu big integ re result int valu return re case data type result re get next big decim re return statu statu re result null re result integ valu big decim re result int valu return re return error overrid public result get next long throw exec except physic oper input get byte result type get result type switch result type case data type case data type case data type return error case data type data byte array dba result re get next data byte array re return statu statu re result null tri dba data byte array re result catch class cast except e re result type byte array one type cast still possibl real type null find type first call cach real type data type find type re result tri re result data type long re result real type catch class cast except cce type chang need find type tri cast real type data type find type re result re result data type long re result real type return re tri null caster re result caster byte long dba get els int err code string msg unknown byte array error messag long get origin locat throw new exec except msg err code except catch exec except ee throw ee catch except e log error error cast byte array long return re case data type result re get next boolean re return statu statu re result null boolean re result re result long valu els re result long valu return re case data type result re get next integ re return statu statu re result null re result long valu integ re result long valu return re case data type result re get next doubl re return statu statu re result null re result data type integ re result re result long valu doubl re result long valu return re case data type return get next long case data type result re get next float re return statu statu re result null re result long valu float re result long valu return re case data type result re get next date time re return statu statu re result null re result long valu date time re result get milli return re case data type result re get next string re return statu statu re result null re result cast util string long string re result return re case data type result re get next big integ re return statu statu re result null re result long valu big integ re result long valu return re case data type result re get next big decim re return statu statu re result null re result long valu big decim re result long valu return re return error overrid public result get next doubl throw exec except physic oper input get byte result type get result type switch result type case data type case data type case data type return error case data type data byte array dba result re get next data byte array re return statu statu re result null tri dba data byte array re result catch class cast except e re result type byte array one type cast still possibl real type null find type first call cach real type data type find type re result tri re result data type doubl re result real type catch class cast except cce type chang need find type tri cast real type data type find type re result re result data type doubl re result real type return re tri null caster re result caster byte doubl dba get els int err code string msg unknown byte array error messag doubl get origin locat throw new exec except msg err code except catch exec except ee throw ee catch except e log error error cast byte array doubl return re case data type result re get next boolean re return statu statu re result null boolean re result re result new doubl els re result new doubl return re case data type result re get next integ re return statu statu re result null re result new doubl integ re result doubl valu return re case data type return get next doubl case data type result re get next long re return statu statu re result null re result new doubl long re result doubl valu return re case data type result re get next float re return statu statu re result null re result new doubl float re result doubl valu return re case data type result re get next date time re return statu statu re result null re result new doubl long valu date time re result get milli doubl valu return re case data type result re get next string re return statu statu re result null re result cast util string doubl string re result return re case data type result re get next big integ re return statu statu re result null re result doubl valu big integ re result doubl valu return re case data type result re get next big decim re return statu statu re result null re result doubl valu big decim re result doubl valu return re return error overrid public result get next float throw exec except physic oper input get byte result type get result type switch result type case data type case data type case data type return error case data type data byte array dba result re get next data byte array re return statu statu re result null tri dba data byte array re result catch class cast except e re result type byte array one type cast still possibl real type null find type first call cach real type data type find type re result tri re result data type float re result real type catch class cast except cce type chang need find type tri cast real type data type find type re result re result data type float re result real type return re tri null caster re result caster byte float dba get els int err code string msg unknown byte array error messag float get origin locat throw new exec except msg err code except catch exec except ee throw ee catch except e log error error cast byte array float return re case data type result re get next boolean re return statu statu re result null boolean re result re result new float els re result new float return re case data type result re get next integ re return statu statu re result null re result new float integ re result float valu return re case data type result re get next doubl re return statu statu re result null re result data type integ re result re result new float doubl re result float valu return re case data type result re get next long re return statu statu re result null re result new float long re result float valu return re case data type return get next float case data type date time dt null result re get next date time re return statu statu re result null re result new float long valu date time re result get milli float valu return re case data type result re get next string re return statu statu re result null re result cast util string float string re result return re case data type result re get next big integ re return statu statu re result null re result float valu big integ re result float valu return re case data type result re get next big decim re return statu statu re result null re result float valu big decim re result float valu return re return error overrid public result get next date time throw exec except physic oper input get byte result type get result type switch result type case data type case data type case data type return error case data type data byte array dba result re get next data byte array re return statu statu re result null tri dba data byte array re result catch class cast except e re result type byte array one type cast still possibl real type null find type first call cach real type data type find type re result tri re result data type date time re result real type catch class cast except cce type chang need find type tri cast real type data type find type re result re result data type date time re result real type return re tri null caster re result caster byte date time dba get els int err code string msg unknown byte array error messag datetim get origin locat throw new exec except msg err code except catch exec except ee throw ee catch except e log error error cast byte array date time return re case data type result re get next integ re return statu statu re result null re result new date time integ re result long valu return re case data type result re get next doubl re return statu statu re result null re result new date time doubl re result long valu return re case data type result re get next long re return statu statu re result null re result new date time long re result long valu return re case data type result re get next float re return statu statu re result null re result new date time float re result long valu return re case data type result re get next big integ re return statu statu re result null re result new date time big integ re result long valu return re case data type result re get next big decim re return statu statu re result null re result new date time big decim re result long valu return re case data type return get next date time case data type result re get next string re return statu statu re result null re result date extract date time string re result return re return error overrid public result get next string throw exec except physic oper input get byte result type get result type switch result type case data type case data type case data type return error case data type data byte array dba result re get next data byte array re return statu statu re result null tri dba data byte array re result catch class cast except e re result type byte array one type cast still possibl real type null find type first call cach real type data type find type re result tri re result data type string re result real type catch class cast except cce type chang need find type tri cast real type data type find type re result re result data type string re result real type return re tri null caster re result caster byte char array dba get els int err code string msg unknown byte array error messag string get origin locat throw new exec except msg err code except catch exec except ee throw ee catch except e log error error cast byte array char array return re case data type result re get next boolean re return statu statu re result null boolean re result re result re result boolean string els re result re result boolean string return re case data type result re get next integ re return statu statu re result null re result integ re result string return re case data type result re get next doubl re return statu statu re result null re result data type integ re result re result doubl re result string return re case data type result re get next long re return statu statu re result null re result long re result string return re case data type result re get next float re return statu statu re result null re result float re result string return re case data type result re get next date time re return statu statu re result null re result date time re result string return re case data type return get next string case data type big integ bi null result re get next big integ re return statu statu re result null re result big integ re result string return re case data type result re get next big decim re return statu statu re result null re result big decim re result string return re return error overrid public result get next tupl throw exec except physic oper input get byte cast type data type byte result type get result type switch result type case data type result re get next tupl re return statu statu re result null tri re result convert schema re result field schema catch except e log util warn unabl interpret valu re result field convert type tupl catch pars except e get messag field discard warn log re result null return re case data type data byte array dba result re get next data byte array re return statu statu re result null re result new string data byte array re result string cast need examin datum determin input type type cast send input output return re tri dba data byte array re result catch class cast except e check type re result type tri cast data type find type re result cast type rememb futur call cast need true return output return re els input differen type rethrow except int err code string msg cast tupl expect bytearray receiv data type find type name re result throw new exec except msg err code except e tri null caster re result caster byte tupl dba get field schema els int err code string msg unknown byte array error messag tupl get origin locat throw new exec except msg err code except catch exec except ee throw ee catch except e log error error cast byte array tupl return re case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type return error return error suppress warn uncheck deprec privat object convert schema object obj resourc field schema fs throw except object result null fs null return obj obj null handl data type return null switch f get type case data type obj instanceof data bag data bag db datum bag obj get inner schema bag f get schema null resourc field schema tupl fs f get schema get field iter tupl iter db iter iter next tupl iter next convert schema tupl fs result db els obj instanceof datum byte array null caster result caster byte bag data byte array obj get f els int err code string msg unknown byte array error messag bag get origin locat throw new exec except msg err code except els throw new exec except cast obj bag except break case data type obj instanceof tupl tri tupl tupl obj resourc schema inner schema f get schema inner schema null return inner schema get field length size return null int resourc field schema field schema inner schema get field object field convert schema get field schema set field result catch except e throw new exec except convert obj f els obj instanceof data byte array null caster result caster byte tupl data byte array obj get f els int err code string msg unknown byte array error messag tupl get origin locat throw new exec except msg err code except els throw new exec except cast obj tupl except break case data type obj instanceof map fs null f get schema null resourc field schema inner field schema f get schema get field map map obj object entri entri set object new valu convert schema map entri entri get valu inner field schema put map entri entri get key new valu result els result obj els obj instanceof datum byte array null caster result caster byte map data byte array obj get f els int err code string msg unknown byte array error messag tupl get origin locat throw new exec except msg err code except els throw new exec except cast obj map except break case data type switch data type find type obj case data type null caster result caster byte boolean data byte array obj get els int err code string msg unknown byte array error messag int get origin locat throw new exec except msg err code except break case data type result obj break case data type result boolean valu integ obj int valu break case data type result boolean valu doubl obj doubl valu break case data type result boolean valu long obj long valu break case data type result boolean valu float obj float valu break case data type result cast util string boolean string obj break case data type result boolean valu big integ equal big integ obj break case data type result boolean valu big decim equal big decim obj break default throw new exec except convert obj f except break case data type switch data type find type obj case data type null caster result caster byte integ data byte array obj get els int err code string msg unknown byte array error messag int get origin locat throw new exec except msg err code except break case data type boolean obj result integ valu els result integ valu break case data type result obj break case data type result integ valu doubl obj int valu break case data type result integ valu long obj int valu break case data type result integ valu float obj int valu break case data type result integ valu long valu date time obj get milli int valu break case data type result cast util string integ string obj break case data type result integ valu big integ obj int valu break case data type result integ valu big decim obj int valu break default throw new exec except convert obj f except break case data type switch data type find type obj case data type null caster result caster byte doubl datum byte array obj get els int err code string msg unknown byte array error messag doubl get origin locat throw new exec except msg err code except break case data type boolean obj result new doubl els result new doubl break case data type result new doubl integ obj doubl valu break case data type result doubl obj break case data type result new doubl long obj doubl valu break case data type result new doubl float obj doubl valu break case data type result new doubl long valu date time obj get milli doubl valu break case data type result cast util string doubl string obj break case data type result doubl valu big integ obj doubl valu break case data type result doubl valu big decim obj doubl valu break default throw new exec except convert obj f except break case data type switch data type find type obj case data type null caster result caster byte long data byte array obj get els int err code string msg unknown byte array error messag long get origin locat throw new exec except msg err code except break case data type boolean obj result long valu els result long valu break case data type result long valu integ obj long valu break case data type result long valu doubl obj long valu break case data type result long obj break case data type result long valu float obj long valu break case data type result long valu date time obj get milli break case data type result cast util string long string obj break case data type result long valu big integ obj long valu break case data type result long valu big decim obj long valu break default throw new exec except convert obj f except break case data type switch data type find type obj case data type null caster result caster byte float data byte array obj get els int err code string msg unknown byte array error messag float get origin locat throw new exec except msg err code except break case data type boolean obj result new float els result new float break case data type result new float integ obj float valu break case data type result new float doubl obj float valu break case data type result new float long obj float valu break case data type result obj break case data type result new float long valu date time obj get milli float valu break case data type result cast util string float string obj break case data type result float valu big integ obj float valu break case data type result float valu big decim obj float valu break default throw new exec except convert obj f except break case data type switch data type find type obj case data type null caster result caster byte date time data byte array obj get els int err code string msg unknown byte array error messag datetim get origin locat throw new exec except msg err code except break case data type result new date time integ obj long valu break case data type result new date time doubl obj long valu break case data type result new date time long obj long valu break case data type result new date time float obj long valu break case data type result date time obj break case data type result date extract date time string obj break case data type result new date time big integ obj long valu break case data type result new date time big decim obj long valu break default throw new exec except convert obj f except break case data type switch data type find type obj case data type null caster result caster byte char array datum byte array obj get els int err code string msg unknown byte array error messag float get origin locat throw new exec except msg err code except break case data type boolean obj result result boolean string els result result boolean string break case data type result integ obj string break case data type result doubl obj string break case data type result long obj string break case data type result float obj string break case data type result date time obj string break case data type result obj break case data type result big integ obj string break case data type result big decim obj string break default throw new exec except convert obj f except break case data type switch data type find type obj case data type null caster result caster byte big integ data byte array obj get els int err code string msg unknown byte array error messag big integ get origin locat throw new exec except msg err code except break case data type boolean obj result big integ els result big integ break case data type result big integ valu integ obj long valu break case data type result big integ valu doubl obj long valu break case data type result big integ valu long obj long valu break case data type result big integ valu float obj long valu break case data type result new big integ string obj break case data type result big integ obj break case data type result big decim obj big integ break case data type result big integ valu date time obj get milli break default throw new exec except convert obj f except case data type switch data type find type obj case data type null caster result caster byte big decim datum byte array obj get els int err code string msg unknown byte array error messag big decim get origin locat throw new exec except msg err code except break case data type boolean obj result big decim els result big decim break case data type result big decim valu integ obj long valu break case data type result big decim valu doubl obj doubl valu break case data type result big decim valu long obj long valu break case data type result big decim valu float obj doubl valu break case data type result new big decim string obj break case data type result new big decim big integ obj break case data type result big decim obj break case data type result big decim valu date time obj get milli break default throw new exec except convert obj f except case data type op result obj break default throw new exec except n know convert obj f except return result overrid public result get next data bag throw exec except physic oper input get byte cast type data type byte result type get result type switch result type case data type re get next data bag re return statu statu re result null tri re result convert schema re result field schema catch except e log util warn unabl interpret valu re result field convert type bag catch pars except e get messag field discard warn log re result null return re case data type data byte array dba result re get next data byte array re return statu statu re result null re result new string data byte array re result string cast need examin datum determin input type type cast send input output return re tri dba data byte array re result catch class cast except e check type re result type tri cast data type find type re result cast type rememb futur call cast need true return output return re els input differen type rethrow except int err code string msg cast bag expect bytearray receiv data type find type name re result throw new exec except msg err code except e tri null caster re result caster byte bag dba get field schema els int err code string msg unknown byte array error messag bag get origin locat throw new exec except msg err code except catch exec except ee throw ee catch except e log error error cast byte array datum bag return re case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type return error return error suppress warn deprec overrid public result get next map throw exec except physic oper input get byte cast type data type byte result type get result type switch result type case data type result re get next map re return statu statu re result null tri re result convert schema re result field schema catch except e log util warn unabl interpret valu re result field convert type map catch pars except e get messag field discard warn log re result null return re case data type data byte array dba result re get next data byte array re return statu statu re result null re result new string data byte array re result string cast need examin datum determin input type type cast send input output return re tri dba data byte array re result catch class cast except e check type re result type tri cast data type find type re result cast type rememb futur call cast need true return output return re els input differen type rethrow except int err code string msg cast map expect bytearray receiv data type find type name re result throw new exec except msg err code except e tri null caster re result caster byte map dba get field schema els int err code string msg unknown byte array error messag map get origin locat throw new exec except msg err code except catch exec except ee throw ee catch except e log error error cast byte array map return re case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type return error return error overrid public result get next data byte array throw exec except physic oper input get byte result type get result type result type data type return error datum byte array dba null result re get next data byte array re return statu statu re result null tri dba data byte array re result catch class cast except e return error dba null return re return re privat void read object object input stream throw except class find except default read object instanti func overrid public cast clone throw clone support except cast clone new cast new oper key key scope node id gener get gener get next node id key scope clone clone helper clone func spec func spec clone field schema field schema tri clone instanti func catch except e clone support except cnse new clone support except cnse init caus e throw cnse return clone get child express express overrid public list express oper get child express child null child new array list express oper input get instanceof express oper child add express oper input get return child public void set field schema resourc field schema field schema public func spec get func spec return func spec overrid public tupl illustr markup object object int eq class index return tupl 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java util list import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer map reduc counter import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach datum data type import org apach datum tupl import org apach impl plan oper key import org apach impl plan visitor except import org apach pen util exampl tupl oper part oper implement add local counter uniqu task id tupl mode oper regular dens local counter depend mode oper regular rank consid duplic row assign number distinct valu group dens rank count number distinct valu without consid duplic row depend consid entir tupl row number set column rank physic oper reli specif class avail map reduc counter public class counter extend physic oper privat static final long serial version public static final long privat list physic plan counter plan privat list boolean asc col case could dens dens rank mean assign consecut rank differ valu privat boolean dens rank fals case simpl name row number mode consecut number assign tupl privat boolean row number fals local counter tupl task privat long local count task label tupl analyz correspond task privat integ task uniqu identifi link counter rank global counter label privat string oper public counter oper key k k null public counter oper key k int rp k rp null public counter oper key k list physic oper input k input public counter oper key k int rp list physic oper input super k rp input public counter counter copi super copi counter plan copi counter plan asc col copi asc col dens rank copi dens rank row number copi row number oper copi oper suppress warn rawtyp uncheck public counter oper key oper key int request parallel list inp list physic plan counter plan list boolean ascend col super oper key request parallel inp set counter plan counter plan set ascend column ascend col overrid public tupl illustr markup object object int eq class index illustr null return new exampl tupl tupl return tupl overrid public void visit phi plan visitor v throw visitor except v visit counter overrid public result get next tupl throw exec except result inp null true inp process input inp return statu statu inp return statu statu break inp return statu statu continu return add counter valu inp return inp add current task id local counter valu param input previou output return tupl within two valu prepend tupl task identifi local counter valu local counter valu could increment one row number dens rank could increment size bag previou tupl process protect result add counter valu result input throw exec except tupl tupl input result tupl tupl factori new tupl get size long size bag int posit bag tupl add two stamp tupl content posit counter valu posit last current task id case tupl analyz independ tupl group row number dens rank dens rank attach reduc phase increment way otherwis increment do mapper automat dens rank increment reduc counter counter set get local counter local increment sequenti increas increment local counter els dens rank standard rank case import number tupl group posit bag get size get type posit bag data type size bag org apach datum default abstract bag get posit bag size valu size tupl bag use increment current global counter increment reduc counter size bag set get local counter valu next tupl current task add local counter size bag object set posit last current task id set get task id input result illustr markup return input protect void increment reduc counter long increment map reduc counter reduc counter increment counter increment overrid public boolean support multipl input return fals overrid public boolean support multipl output return fals overrid public string name return get alia string counter data type find type name result type key string public void set counter plan list physic plan counter plan counter plan counter plan public list physic plan get counter plan return counter plan public void set ascend column list boolean asc col asc col asc col public list boolean get ascend column return asc col initi step counter set local counter public void reset local counter local count sequenti counter use mode protect long increment local counter return local count public void set local counter long local count local count local count public long get local counter return local count protect void add local counter long size bag local count size bag task identifi task map reduc public void set task id int task task task public int get task id return task dens rank flag public void set dens rank boolean dens rank dens rank dens rank public boolean dens rank return dens rank row number flag public void set row number boolean row number row number row number public boolean row number return row number oper identifi share within correspond rank public void set oper string oper oper oper public string get oper return oper overrid public counter clone throw clone support except counter clone counter super clone clone local count new long local count clone task new integ task counter plan asc col unus clone return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java util iter import java util list import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl plan oper key import org apach impl plan visitor except import org apach pen util exampl tupl import org apach pen util lineag tracer recov class nest cross oper public class cross extend physic oper privat static final long serial version protect transient datum bag input bag protect transient tupl datum protect transient iter tupl protect transient tupl tupl last bag public cross oper key k super k public cross oper key k int rp list physic oper inp super k rp inp public cross oper key k int rp super k rp public cross oper key k list physic oper inp super k inp overrid public void visit phi plan visitor v throw visitor except v visit cross overrid public string name return get alia string cross data type find type name result type key string overrid public boolean support multipl input return true overrid public boolean support multipl output return fals overrid public tupl illustr markup object object int eq class index illustr null exampl tupl new exampl tupl tupl illustr add datum illustr get equival class get eq class index add tupl lineag tracer lineag tracer illustr get lineag lineag tracer insert int datum length lineag tracer union datum return els return tupl overrid public result get next tupl throw exec except result re new result int item input size input bag null accumul datum load last bag re return statu statu clear memori return re null check do process check iter use boolean finish true boolean empti fals int length input bag size empti true break finish next empti one bag empti n exist non null cross product simpli clear input tupl first bag finish int index input size result re last bag input get index get next tupl re last bag return statu statu re last bag input get index get next tupl re return statu statu clear memori return re els finish load last bag re return statu statu clear memori return re datum null get next call first time start new input datum instanti templat array start popul datum datum new tupl item datum item tupl last bag int item datum next re result creat tupl datum re return statu statu return re els datum item tupl last bag int length item int index index length index index next datum index index next re result creat tupl datum re return statu statu return re els reset index iter cross product achiev would reset way index end first index need flatten reach last element iter will not come instead reset iter begin method index input bag index iter datum index index next re result creat tupl datum re return statu statu return re suppress warn uncheck privat void accumul datum throw exec except int count int length input size input bag new datum bag length new iter length int length physic oper op input get datum bag bag bag factori new default bag input bag count bag result re op get next tupl re return statu statu re op get next tupl re return statu statu continu re return statu statu throw new exec except error accumul datum local cross oper re return statu statu bag add tupl re result count bag iter privat tupl creat tupl tupl datum throw exec except tupl tupl factori get instanc new tupl int datum length tupl datum int size size int j j size j append get j return illustr markup privat boolean load last bag throw exec except result re last bag null int index input size re last bag input get index get next tupl re last bag return statu statu input get index get next tupl switch re last bag return statu case statu return fals case statu time tupl last bag eject travers combin tupl n bag save memori one bag tupl last bag tupl re last bag result return true case statu default throw new exec except error accumul datum local cross oper privat void clear memori reset input bag datum tupl last bag null next round get next new input datum load tupl last bag null input bag null null datum null overrid public void reset clear memori 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java util iter import java util list import org apach common log log import org apach common log log factori import org apach configur import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer map reduc import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum datum bag import org apach datum data type import org apach datum intern distinct bag import org apach datum tupl import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except find distinct set tupl bag block oper input put hashset implement distinct datum bag also provid data bag interfac public class distinct extend physic oper implement cloneabl privat static final log log log factori get log distinct class privat static final long serial version privat transient boolean input accumul privat transient datum bag distinct bag privat transient boolean initi privat transient boolean use default bag privat transient iter tupl sinc global rearrang use distinct pass custom partion protect string custom partition public string get custom partition return custom partition public void set custom partition string custom partition custom partition custom partition public distinct oper key k int rp list physic oper inp super k rp inp public distinct oper key k int rp super k rp public distinct oper key k list physic oper inp super k inp public distinct oper key k super k overrid public boolean block return true overrid public result get next tupl throw exec except input accumul default creat intern distinct bag unless user configur explicitli use old bag initi initi true map reduc job conf intern get null string bag type map reduc job conf intern get get configur bag type null bag type equal ignor case default use default bag true distinct bag use default bag bag factori new distinct bag new intern distinct bag result process input return statu statu return statu statu log error error read input return els return statu statu ignor read next tupl process input continu els distinct bag add tupl result illustr markup result result process input input accumul true null distinct bag iter re result next re result null re return statu statu reset els re return statu statu return re overrid public string name return get alia string distinct data type find type name result type key string overrid public boolean support multipl input return fals overrid public boolean support multipl output return fals overrid public void reset input accumul fals distinct bag null null overrid public void visit phi plan visitor v throw visitor except v visit distinct non javadoc see org apach backend hadoop executionengin physic layer physic oper clone overrid public distinct clone throw clone support except auto gener method stub return new distinct new oper key key scope node id gener get gener get next node id key scope request parallel input overrid public tupl illustr markup object object int eq class index illustr null illustr get equival class get eq class index add tupl illustr add data tupl return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java io except import java util array list import java util bit set import java util iter import java util list import java util map import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer end input need visitor import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer express oper express oper import org apach backend hadoop executionengin physic layer express oper project import org apach backend hadoop executionengin physic layer express oper relat expr project import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach datum accumul bag import org apach datum datum bag import org apach datum data type import org apach datum schema tupl class gener gen context import org apach datum schema tupl factori import org apach datum tupl import org apach datum tupl factori import org apach datum tupl maker import org apach datum unlimit null tupl import org apach impl logic layer schema schema import org apach impl plan depend order walker import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except import org apach pen util exampl tupl import org apach pen util lineag tracer intent skip type check backend perform reason suppress warn uncheck public class extend physic oper privat static final long serial version privat static final result new result statu new unlimit null tupl protect list physic plan input plan protect list physic oper op reset protect physic oper plan leaf op store result type plan leaf protect byte result type array version flatten pure optim instead call flatten get quick array access flatten array also store boolean valu rather boolean object also save boolean boolean valu call protect boolean flatten array protect int item sinc plan gener need maintain gener potenti return multipl tupl call protect transient boolean process plan hold iter databag give input express need flatten protect transient iter tupl null hold output give input express datatyp protect transient object bag templat whcih contain tupl flatten creat tupl gener final output protect transient object datum store whether accumul termin earli protect transient bit set earli termin protect transient exampl tupl protect transient accumul tupl buffer buffer protect transient tupl inp tupl protect transient boolean end input process indic foreach statement map side current use cross see protect boolean map side fals protect boolean end input process fals privat schema schema public oper key k k null null public oper key k int rp k rp null null public oper key k list inp k inp null public oper key k int rp list physic plan inp list boolean flatten super k rp set flatten flatten input plan inp op reset new array list physic oper get leav public oper key oper key int request parallel list physic plan inner plan list boolean flatten list schema schema oper key request parallel inner plan flatten list schema schema overrid public void visit phi plan visitor v throw visitor except v visit overrid public string name return get alia string new get flat str data type find type name result type key string string get flat str flatten array null return string builder sb new string builder boolean b flatten array sb append b sb append sb length sb delet char sb length return sb string overrid public boolean support multipl input return fals overrid public boolean support multipl output return fals overrid public void set accumul super set accumul physic plan p input plan iter physic oper iter p iter iter next physic oper po iter next po instanceof express oper po instanceof distinct po set accumul overrid public void set accum start super set accum start physic plan p input plan iter physic oper iter p iter iter next physic oper po iter next po instanceof express oper po instanceof distinct po set accum start overrid public void set accum end super set accum end physic plan p input plan iter physic oper iter p iter iter next physic oper po iter next po instanceof express oper po instanceof distinct po set accum end call get next gener oper insid nest physic plan return maintain addit state denot begin end nest plan process overrid public result get next tupl throw exec except tri result re null result inp null nest plan process return tupl gener oper return process plan true re process plan re return statu statu return re re return statu statu process plan fals physic plan plan input plan plan detach input break re return statu statu return re re return statu statu continu nest plan process do yet begin process input start nest plan process input tupl read true inp process input inp return statu statu return inp inp return statu statu continu inp return statu statu parent plan null parent plan end input end input process end input process continu pull one output inp els return inp attach input plan tupl inp result inp tupl tupl inp result physic oper po op reset po reset accumul int inp tupl size inp tupl get type data type need check one bag bag share buffer buffer accumul bag inp tupl get get tuplebuff break set accum start true earli termin buffer next batch tri buffer next batch catch except e throw new exec except e els buffer instanceof packag packag tupl buffer inp tupl packag packag tupl buffer buffer illustr markup null inp tupl set accum end re process plan re return statu statu attach input process next batch attach input plan tupl inp result els re return statu statu bubbl need pass null valu pipe user func properli return valu attach input plan null earli termin els break buffer clear els re process plan process plan true return re catch runtim except e throw new exec except error execut get origin locat e privat boolean earli termin fals privat tupl maker extend tupl tupl maker privat boolean know size fals privat boolean earli termin return earli termin privat void earli termin earli termin true protect result process plan throw exec except schema null tupl maker null note schema tupl current turn chain must follow good practic name append tupl come iter practic fairli common recommend tupl maker schema tupl factori get instanc schema fals gen context tupl maker null known size true tupl maker null tupl maker tupl factori get instanc result re new result check databag exhaust tupl enforc read new datum set datum null null boolean restart true int item null flatten array true restart next mean databag reach last element need forc read fresh databag restart null datum null null end input process return get next call first time start set new datum input new iter item bag new object item earli termin new bit set item int item get iter popul input datum result input data null switch result type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type input datum plan leaf op get next result type break default int err code string msg foreach current handl type datum type find type name result type throw new exec except msg err code except accru inform accumul earli termin case finish input datum return statu statu earli termin get earli termin set continu input datum return statu statu continu input datum return statu statu do element time return null bag null return input datum see error return input datum return statu statu return input datum object input null bag input datum result input datum result instanceof data bag flatten array datum bag bag iter els input datum result instanceof map flatten array map bag entri set iter els null parent plan null parent plan end input end input process end input process true accumul n get datum yet field return accumul accum start earli termin cardin item re return statu statu els re return statu statu return re true datum null get next call first time start new input datum instanti templat array start popul datum datum new object item int item flatten array bag instanceof datum bag bag instanceof map next datum next els input set null return catch function recal new input null datum null re return statu statu return re els datum bag get report null get report progress creat tupl datum re result creat tupl datum re return statu statu return re els tri find last express need flatten start iter also tri updat templat array int index item index index index null flatten array index index next datum index index next re result creat tupl datum re return statu statu return re els reset index iter cross product achiev would reset way index end first index need flatten reach last element iter will not come instead reset iter begin method bag index instanceof datum bag index datum bag bag index iter els bag instanceof map index map bag index entri set iter datum index index next return null param datum array templat final flatten tupl return final flatten tupl protect tupl creat tupl object datum throw exec except tupl tupl maker new tupl int idx int datum length object datum flatten array instanceof tupl tupl tupl int size size int j j size j know size set idx get j els append get j els flatten array instanceof map entri map entri entri map entri know size set idx entri get key set idx entri get valu els append entri get key append entri get valu els know size set idx els append inp tupl null return illustr markup inp tupl els return illustr markup data protect void attach input plan tupl super attach input physic plan p input plan p attach input public void get leav input plan null int flatten array null flatten array new boolean input plan size plan leaf op new physic oper input plan size physic plan p input plan physic oper leaf p get leav get plan leaf op leaf leaf instanceof project leaf get result type data type project leaf project end flatten array true calcul plan leav let reiniti initi privat void initi plan leaf op null item plan leaf op length result type new byte item int result type length result type plan leaf op get result type els item result type null input plan null physic plan pp input plan tri reset finder lf new reset finder pp op reset lf visit catch visitor except string err msg intern error unexpect error look nest oper need reset throw new runtim except err msg public list physic plan get input plan return input plan public void set input plan list physic plan plan input plan plan plan leaf op null get leav public void add input plan physic plan plan boolean flatten input plan add plan add plan leaf op copi exist leaf physic oper new plan leaf op new physic oper plan leaf op length int plan leaf op length new plan leaf op plan leaf op add end new plan leaf op plan leaf op length plan get leav get plan leaf op new plan leaf op add flatten array copi exist valu boolean new flatten array new boolean flatten array length int flatten array length new flatten array flatten array add end new flatten array flatten array length flatten flatten array new flatten array add leaf reiniti initi public void set flatten list boolean flatten set flatten flatten public list boolean get flatten list boolean result null flatten array null result new array list boolean int flatten array length result add flatten array return result make deep copi oper throw clone support except overrid public clone throw clone support except list physic plan plan new array list physic plan input plan size physic plan plan input plan plan add plan clone list boolean flatten null flatten array null flatten new array list boolean flatten array length boolean b flatten array flatten add b clone new new oper key key scope node id gener get gener get next node id key scope request parallel plan flatten clone set result type get result type clone add origin locat alia get origin locat clone end input process end input process clone map side map side return clone public boolean process return process plan protect void set flatten list boolean flatten flatten null flatten array null els flatten array new boolean flatten size int iter boolean flatten iter next flatten array next visit pipelin call reset node current pay attent limit node need tell reset limit privat class reset finder extend phi plan visitor reset finder physic plan plan list physic oper reset super plan new depend order walker physic oper physic plan plan overrid public void visit distinct distinct throw visitor except add limit present op reset add overrid public void visit limit limit limit throw visitor except op reset add limit overrid public void visit sort sort sort throw visitor except add limit present op reset add sort overrid public void visit cross cross c throw visitor except add limit present op reset add c overrid public void visit project project proj throw visitor except proj instanceof relat expr project op reset add proj return op reset public list physic oper get op reset return op reset param op reset op reset set public void set op reset list physic oper op reset op reset op reset privat tupl illustr markup object object illustr null exampl tupl new exampl tupl tupl illustr get lineag insert boolean synthet fals object synthet exampl tupl synthet illustr get lineag union tupl illustr add data int item datum bag bag size break item illustr get eq class share illustr get equival class get add synthet synthet return els return tupl overrid public tupl illustr markup object object int eq class index illustr null exampl tupl new exampl tupl tupl illustr add datum illustr get eq class share illustr get equival class get add lineag tracer lineag tracer illustr get lineag lineag tracer insert synthet exampl tupl synthet lineag tracer union exampl tupl return els return tupl public physic oper get plan leaf op return plan leaf op public void set map side boolean map side map side map side public boolean map side return map side public boolean need end input process throw exec except tri physic plan inner plan input plan end input need visitor end input need visitor new end input need visitor inner plan end input need visitor visit end input need visitor need end input process end input process true return true return fals catch except e throw new exec except e 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java util list import org apach backend executionengin exec except import org apach datum data type import org apach datum tupl import org apach impl plan oper key import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach impl plan visitor except dummi oper test compil local oper get next method implement intent skip type check backend perform reason suppress warn uncheck public class global rearrang extend physic oper privat static final long serial version global rearrang decid map reduc boundari add custom partition protect string custom partition privat boolean cross fals public string get custom partition return custom partition public void set custom partition string custom partition custom partition custom partition public global rearrang oper key k k null public global rearrang oper key k int rp k rp null public global rearrang oper key k list inp k null public global rearrang oper key k int rp list inp super k rp inp public global rearrang global rearrang copi throw exec except super copi cross copi cross custom partition copi custom partition overrid public void visit phi plan visitor v throw visitor except v visit global rearrang overrid public string name return get alia string global rearrang data type find type name result type key string overrid public boolean support multipl input return true overrid public boolean support multipl output return fals overrid public boolean block return true overrid public tupl illustr markup object object int eq class index return null public void set cross boolean cross cross cross public boolean cross return cross 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl builtin import java io except import org apach hadoop conf configur import org apach hadoop mapreduc record reader import org apach configur import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer split import org apach datum tupl import org apach datum tupl factori see skew join sampler http wiki apach org sampler public class poisson sampl loader extend sampl loader marker string mark last sampl row total number row see map instanc string nd last column last sampl row use get mem num row public static final string u u te rnal sp ecial ro num tupl kt lehkblah num row sampl far privat int num row sampl averag size tupl memori tupl sampl privat long avg tupl mem sz current row number privat long row num number tupl skip sampl privat long skip interv byte input skip everi sampl divid avg tupl mem size get skip interv privat long mem skip per sampl special row row number inform return privat boolean num row spl tupl return fals magic number obtain use poisson cumul distribut function mean set emper minimum number sampl confid set privat static final int privat int sampl rate total memori byte privat long total memori privat doubl heap perc partit skew key new sampl tupl privat tupl new sampl null public poisson sampl loader string func spec string n super func spec super set num sampl integ valu n overridden overrid public tupl get next throw except num row spl tupl return row num special row return input read noth read return null skip interv select first tupl sampl calcul number tupl skip tupl loader get next null sinc skip interv previou sampl next sampl null datum set empti return null long avail red mem long total memori heap perc avail red mem mem skip per sampl avail red mem sampl rate updat skip interv row num new sampl skip tupl long num skip num skip skip interv num skip skip next return creat num row tupl new sampl row num skip enough get new sampl tupl loader get next null return creat num row tupl new sampl updat skip interv row num tupl current sampl new sampl new sampl return current sampl updat averag tupl size base newli sampl tupl recalcul skip interv param tupl privat void updat skip interv tupl avg tupl mem sz avg tupl mem sz num row sampl get memori size num row sampl skip interv mem skip per sampl avg tupl mem sz skip few number row first time reduc probabl first tupl size much small rest result sampl sampl sampl littl extra num row sampl skip interv skip interv num row sampl num row sampl param sampl sampl tupl return tupl append special marker string column num row column throw exec except privat tupl creat num row tupl tupl sampl throw exec except int sz sampl null sampl size tupl factori factori tupl factori get instanc tupl factori new tupl sz sampl null int sampl size set sampl get set sz set sz row num num row spl tupl return true return suppress warn rawtyp overrid public void prepar read record reader reader split split throw except super prepar read reader split num row sampl avg tupl mem sz row num skip interv mem skip per sampl num row spl tupl return fals new sampl null configur conf split get conf sampl rate conf get int configur heap perc conf get float configur partit skew key total memori conf get long configur total memori total memori runtim get runtim max memori 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java util list import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach datum data type import org apach datum tupl import org apach impl plan oper key import org apach impl plan visitor except import org apach pen util exampl tupl public class limit extend physic oper privat static final long serial version number limit output privat long limit express plan privat physic plan express plan count output process privat transient long far public limit oper key k k null public limit oper key k int rp k rp null public limit oper key k list physic oper input k input public limit oper key k int rp list physic oper input super k rp input public void set limit long limit limit limit public long get limit return limit public physic plan get limit plan return express plan public void set limit plan physic plan express plan express plan express plan count number tupl process static variabl far number tupl process reach limit return otherwis return tupl overrid public result get next tupl throw exec except first time evalu express otherwis reus comput valu get limit express plan null physic oper express express plan get leav get long variabl limit result return valu switch express get result type case data type return valu express get next long return valu return statu statu return valu result null throw new runtim except unabl evalu limit express return valu variabl limit long return valu result break case data type return valu express get next integ return valu return statu statu return valu result null throw new runtim except unabl evalu limit express return valu variabl limit integ return valu result break default throw new runtim except limit requir integ paramet variabl limit throw new runtim except limit requir zero posit integ paramet set limit variabl limit result inp null true illustr ignor post process illustr null illustr get origin limit far limit inp break inp process input inp return statu statu inp return statu statu break illustr markup inp result null far break return inp overrid public string name return get alia string limit key string overrid public boolean support multipl input return fals overrid public boolean support multipl output return fals overrid public void visit phi plan visitor v throw visitor except v visit limit overrid public void reset far overrid public limit clone throw clone support except limit clone limit super clone express plan null clone express plan express plan clone return clone overrid public tupl illustr markup object object int eq class index illustr null exampl tupl exampl tupl illustr get equival class get eq class index add illustr add data tupl return tupl 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java io except import java util list import org apach common log log import org apach common log log factori import org apach load func import org apach except import org apach backend executionengin exec except import org apach datum tupl import org apach impl context import org apach impl io file spec import org apach impl io read end loader import org apach impl plan oper key import org apach backend hadoop datastorag configur util import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach impl plan visitor except import org apach pen util exampl tupl load oper use two way local oper use load file map reduc set use creat job map reduc oper keep load store map reduc plan till job creat public class load extend physic oper privat static final log log log factori get log load class privat static final long serial version user defin load function default load function privat transient load func loader null filespec oper base file spec l file context pass we oper creator context pc indic whether loader setup do boolean set do fals alia load privat string signatur flag distinguish user load compil load privat boolean tmp load privat long limit privat transient list string cach file null privat transient list string ship file null public load oper key k k null public load oper key k file spec l file k l file public load oper key k int rp file spec l file super k rp l file l file public load oper key k load func lf k loader lf set loader instanti load func open input stream specifi file bind input stream specifi offset throw except public void set throw except loader new read end loader load func context instanti func spec l file get func spec configur util configur pc get properti l file get file name signatur end process inputstream close use method throw except public void tear throw except set done fals main method use oper successor read tupl specifi file use specifi load function return whatev loader return null loader indic henc tear connect overrid public result get next tupl throw exec except set done l file null tri set catch except ioe int err code string msg unabl setup load function throw new exec except msg err code except ioe set done true result re new result tri re result loader get next re result null re return statu statu tear els re return statu statu re return statu statu re result illustr markup re re result catch except e log error receiv error loader function e return re return re overrid public string name return l file null get alia string load l file string key string get alia string load dummi fil dummi ldr key string overrid public boolean support multipl input return fals overrid public boolean support multipl output return fals overrid public void visit phi plan visitor v throw visitor except v visit load public file spec get file return l file public void set file file spec file l file file public void set tmp load boolean tmp tmp load tmp public boolean tmp load return tmp load public context get pc return pc public void set pc context pc pc pc public string get signatur return signatur public void set signatur string signatur signatur signatur public load func get load func loader null loader load func context instanti func spec l file get func spec loader set context signatur signatur return loader public tupl illustr markup object object int eq class index illustr null illustr ceil check result return statu statu return null illustr get schema null illustr get schema size tupl size boolean null fals int tupl size tri tupl get null null true break catch exec except e null true break null exampl tupl new exampl tupl tupl illustr get lineag insert illustr add data tupl illustr get equival class get eq class index add return els return tupl els return tupl els return tupl public long get limit return limit public void set limit long limit limit limit public list string get cach file return cach file public void set cach file list string cf cach file cf public list string get ship file return ship file public void set ship file list string sf ship file sf 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java util array list import java util hash map import java util list import java util map import org apach common log log import org apach common log log factori import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer express oper express oper import org apach backend hadoop executionengin physic layer express oper project import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach datum data type import org apach datum tupl import org apach impl io nullabl writabl import org apach impl plan oper key import org apach impl plan plan except import org apach impl plan visitor except import org apach pen util exampl tupl local rearrang oper part co group implement emb physic plan gener tupl form grp key indx inp tupl public class local rearrang extend physic oper privat static final log log log factori get log local rearrang class protect static final long serial version privat static final result new result protect list physic plan plan protect list physic plan secondari plan protect list express oper leaf op protect list express oper secondari leaf op posit packag oper protect byte index protect byte key type protect byte main key type protect byte secondari key type protect boolean distinct fals protect boolean cross fals map store map project column posit key project use inform strip column valu packag stitch right valu tupl back get column key goal reduc amount datum send hadoop map exampl load bla b load bla c cogroup b first input map would contain follow key valu correspond cogroup correspond st index key correspond cogroup correspond nd index key privat final map integ integ project col map privat final map integ integ secondari project col map place holder tupl use distinct case realli n valu pass hadoop get cranki pass null creat one instanc empti tupl pass everi row get around actual creat distinct set true protect tupl fake tupl null indic whether project inner plan project set project thing cogroup privat boolean project star fals privat boolean secondari project star fals marker note key tupl requir packag pick thing key correctli stitch togeth valu privat boolean key tupl fals marker note tupl key compound natur exampl group group key tupl two field key compound group tupl group key tupl one field key compound privat boolean key compound fals privat boolean secondari key tupl fals privat int project col map size privat int secondari project col map size privat boolean use secondari key fals default strip key valu privat boolean strip key valu true protect transient result inp public local rearrang oper key k k null public local rearrang oper key k int rp k rp null public local rearrang oper key k list physic oper inp k inp public local rearrang oper key k int rp list physic oper inp super k rp inp index leaf op new array list express oper secondari leaf op new array list express oper project col map new hash map integ integ secondari project col map new hash map integ integ public local rearrang local rearrang copi super copi plan copi plan secondari plan copi secondari plan leaf op copi leaf op secondari leaf op copi secondari leaf op index copi index key type copi key type main key type copi main key type secondari key type copi secondari key type distinct copi distinct cross copi cross project col map copi project col map secondari project col map copi secondari project col map fake tupl copi fake tupl project star copi project star secondari project star copi secondari project star key tupl copi key tupl key compound copi key compound secondari key tupl copi secondari key tupl project col map size copi project col map size secondari project col map size copi secondari project col map size use secondari key copi use secondari key strip key valu copi strip key valu overrid public void visit phi plan visitor v throw visitor except v visit local rearrang overrid public string name return get alia string local rearrang data type find type name result type data type find type name key type distinct key string overrid public boolean support multipl input return fals overrid public boolean support multipl output return fals public byte get index return index set co group index oper param index posit oper co group oper throw exec except index valu big x public void set index int index throw exec except set index index fals set multi queri index oper param index posit parent plan oper enclos split oper throw exec except index valu big x public void set multi queri index int index throw exec except set index index true privat void set index int index boolean multi queri throw exec except index nullabl writabl idx space index group cogroup rang x x possibl input int err code string msg multi queri merg map reduc job support cogroup input support throw new exec except msg err code except els could potenti send key valu relat multipl group statement one map reduc job multiqueri optim execut case want two key content come differ group oper treat differ go differ invoc reduc achiev let index outsid regular index space x x ring mq flag bitmask put index x valu nullabl writabl compar index multiqueri space also consid index compar two nullabl writabl content key content come differ group oper would differ index henc would go differ invoc reduc index multi queri byte index nullabl writabl mq flag byte index public boolean distinct return distinct public void set distinct boolean distinct distinct distinct distinct fake tupl tupl factori new tupl overridden sinc attach new input caus old process end overrid public void attach input tupl super attach input call get next gener oper insid nest physic plan convert gener tupl proper format e key index tupl valu overrid public result get next tupl throw exec except inp null result re true inp process input inp return statu statu inp return statu statu break inp return statu statu continu physic plan ep plan ep attach input tupl inp result list result re lst new array list result secondari plan null physic plan ep secondari plan ep attach input tupl inp result list result secondari re lst null secondari leaf op null secondari re lst new array list result express oper op leaf op switch op get result type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type re op get next op get result type break default log error invalid result type data type find type op get result type break re return statu statu return re re lst add re secondari leaf op null express oper op secondari leaf op switch op get result type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type re op get next op get result type break default log error invalid result type data type find type op get result type break allow null group key re return statu statu re return statu statu return new result secondari re lst add re use secondari sort key new key nullabl index key secondari key valu re result construct output re lst secondari re lst tupl inp result re return statu statu detach plan plan secondari plan null detach plan secondari plan re result illustr markup inp result re result return re return inp privat void detach plan list physic plan plan physic plan ep plan ep detach input protect object get key result list result re lst byte type throw exec except object key re lst size tupl tupl factori new tupl re lst size int result re re lst set re result key els re lst size type data type get merg multipl job differ map key type singl job multi queri optim key n tupl must wrap tupl object obj re lst get result obj instanceof tupl key obj els tupl tupl factori new tupl set re lst get result key els key re lst get result return key protect tupl construct output list result re lst list result secondari re lst tupl valu throw exec except tupl lr output tupl factori new tupl lr output set byte valu index construct key object key object secondari key null secondari re lst null secondari re lst size key get key result re lst main key type secondari key get key result secondari re lst secondari key type els key get key result re lst key type strip key valu lr output set key lr output set valu return lr output distinct put key index tupl tupl return lr output set key illustr null lr output set key els lr output set fake tupl return lr output els cross int plan size valu get remov put index key valu tupl return lr output set key lr output set valu return lr output els put index key valu tupl return use secondari key tupl compound key tupl factori new tupl compound key set key compound key set secondari key lr output set compound key els lr output set key strip column valu present key project col map size project star true tupl minim valu null project star minim valu tupl factori new tupl look individu column project int valu size project col map get null column find key send valu minim valu append valu get minim valu illustr markup valu minim valu els project star case would send empti tupl valu sinc element key minim valu tupl factori new tupl lr output set minim valu els column key strip valu send valu get lr output set valu return lr output public byte get key type return key type public byte get main key type return main key type public void set key type byte key type use secondari key main key type key type els key type key type main key type key type public list physic plan get plan return plan public void set use secondari key boolean use secondari key use secondari key use secondari key main key type key type public void set plan list physic plan plan throw plan except plan plan leaf op clear int key index zero base index field key physic plan plan plan express oper leaf express oper plan get leav get leaf op add leaf n optim cross look leaf op project oper get column project oper project project either column keep track column project posit key project use inform strip column valu packag stitch right valu tupl back get column key goal reduc amount datum send hadoop map leaf instanceof project project project project leaf project star note project project star true key tupl case key tupl true number column project unkown posit remain colum key can n determin stop optim break els project project end list physic oper pred plan get predecessor project pred null pred size saniti check never come throw new assert error project rang predecessor number column project end unkown posit remain colum key can n determin stop optim break els tri list physic oper pred plan get predecessor leaf pred null pred get instanceof project project col map put project get column key index catch exec except e int err code string msg problem access column project oper throw new plan except msg err code except project get result type data type key tupl true key index key index make note key tupl requir packag pick thing key correctli stitch togeth valu key tupl true key compound true project col map size project col map size public void set secondari plan list physic plan plan throw plan except secondari plan plan secondari leaf op clear int key index zero base index field key physic plan plan plan express oper leaf express oper plan get leav get secondari leaf op add leaf n optim cross look leaf op project oper get column project oper project project either column keep track column project posit key project use inform strip column valu packag stitch right valu tupl back get column key goal reduc amount datum send hadoop map leaf instanceof project project project project leaf project star note project secondari project star true key tupl case secondari key tupl true number column project unknown posit remain column key can n determin stop optim break els project project end list physic oper pred plan get predecessor project pred null pred size saniti check never come throw new assert error project rang predecessor number column project end unknown posit remain column key can n determin stop optim break els tri list physic oper pred plan get predecessor leaf pred null pred get instanceof project secondari project col map put project get column key index catch exec except e int err code string msg problem access column project oper throw new plan except msg err code except project get result type data type secondari key tupl true key index key index make note key tupl requir packag pick thing key correctli stitch togeth valu secondari key tupl true main key type key type key type data type plan size secondari key type data type els secondari key type plan get get leav get get result type secondari project col map size secondari project col map size make deep copi oper throw clone support except overrid public local rearrang clone throw clone support except local rearrang clone local rearrang super clone constructor clone leaf op new array list express oper clone secondari leaf op new array list express oper need call set distinct fake index tupl get creat clone set distinct distinct set key type main key type set secondari plan calcul base set key type final valu use secondari key clone key type main key type tri clone set plan clone plan plan secondari plan null clone set secondari plan clone plan secondari plan catch plan except pe clone support except cnse new clone support except problem set plan get class get simpl name cnse init caus pe throw cnse return clone public boolean cross return cross public void set cross boolean cross cross cross return project col map public map integ integ get project col map return project col map return project col map public map integ integ get secondari project col map return secondari project col map return project star public boolean project star return project star return project star public boolean secondari project star return secondari project star return key tupl public boolean key tupl return key tupl return key compound public boolean key compound return key compound return key tupl public boolean secondari key tupl return secondari key tupl param plan throw exec except public void set plan combin list physic plan plan throw plan except plan plan leaf op clear project col map clear int key index zero base index field key physic plan plan plan express oper leaf express oper plan get leav get leaf op add leaf n optim cross look leaf op project oper get column project oper project keep track column project posit key project use inform strip column valu post combin packag stitch right valu tupl back get column key goal reduc amount datum send hadoop map leaf instanceof project project project project leaf project project end int err code string msg intern error unexpect oper project local rearrang inner plan throw new plan except msg err code except els tri project col map put project get column key index catch exec except e int err code string msg problem access column project oper throw new plan except msg err code except project get result type data type key tupl true key index key index make note key tupl requir packag pick thing key correctli stitch togeth valu key tupl true project col map size project col map size protect void set strip key valu boolean strip key valu strip key valu strip key valu overrid public tupl illustr markup object object int eq class index illustr null instanceof exampl tupl exampl tupl new exampl tupl tupl illustr get lineag insert illustr add datum illustr get lineag union tupl synthet exampl tupl synthet return return tupl 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java util list import java util map import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach datum tupl import org apach impl plan oper key import org apach impl plan node id gener import org apach impl plan visitor except public class map look extend express oper privat static final long serial version privat string key public map look oper key k super k public map look oper key k int rp super k rp public map look oper key k int rp string key super k rp key key public void set look key string key key key public string get look key return key overrid public void visit phi plan visitor v throw visitor except v visit map look overrid public string name return map look data type find type name result type key string overrid public boolean support multipl input return fals overrid public result process input throw exec except result re new result map string object inp valu null input null input null input size log warn input find signal end process re return statu statu return re input attach return input get get next map els re result input re return statu statu detach input return re suppress warn uncheck privat result get next throw exec except result re process input re result null re return statu statu re result map string object re result get key return re overrid public result get next boolean throw exec except return get next overrid public result get next data bag throw exec except return get next overrid public result get next data byte array throw exec except return get next overrid public result get next doubl throw exec except return get next overrid public result get next float throw exec except return get next overrid public result get next integ throw exec except return get next overrid public result get next long throw exec except return get next overrid public result get next date time throw exec except return get next overrid public result get next map throw exec except return get next overrid public result get next string throw exec except return get next overrid public result get next tupl throw exec except return get next overrid public map look clone throw clone support except map look clone new map look new oper key key scope node id gener get gener get next node id key scope key clone clone helper return clone overrid public list express oper get child express return null overrid public tupl illustr markup object object int eq class index return tupl 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java io except import java io object input stream import java util array list import java util list import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop mapreduc job import org apach func spec import org apach index load func import org apach load func import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer map reduc import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach datum data type import org apach datum schema tupl import org apach datum schema tupl backend import org apach datum schema tupl class gener gen context import org apach datum schema tupl factori import org apach datum tupl import org apach datum tupl factori import org apach datum tupl maker import org apach impl context import org apach impl builtin default index loader import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan plan except import org apach impl plan visitor except import org apach impl util multi map import org apach newplan logic relat join oper implement merg join algorithm map side join current two way join support one input join identifi leav identifi right leav input tupl input record map right tupl read open right stream join n support outer join datum assum sort ascend order fail datum sort descend order public class merg join extend physic oper privat static final log log log factori get log merg join class privat static final long serial version privat static final string key order remind rememb chang order key merg join manipul join key way would chang sort order fs allow long chang join key valu way would chang sort order n flag indic get next call first privat boolean first time true local rearrang oper model join key privat local rearrang r privat transient load func right loader privat oper key op key privat object prev leav key privat result prev leav inp privat object prev right key null privat result prev right inp boolean denot whether gener join tupl get next call need read datum privat boolean join privat func spec right loader func spec privat string right input file name privat string index file buffer hold accumul left tupl privat transient tupl schema tupl list leav tupl privat multi map physic oper physic plan inp plan privat physic oper right pipelin leaf privat physic oper right pipelin root privat boolean inner plan right side privat object cur join key privat tupl cur join right tup privat int counter tupl leav side key privat int leav tup size privat int right tup size privat int array list size privat join join type privat string signatur privat byte end record mark statu spark current oper reach end flag end input set true old flag parent plan end input n work spark mode share oper plan could set preced oper even current oper reach end see privat transient boolean end input fals public boolean end input return end input public void set end input boolean end input end input end input spark mean current oper reach end last left input add left tupl readi join privat boolean left input consum spark fals serv default tupl factori privat transient tupl factori tupl factori tupl factori use effici tupl gener decreas amount memori need give map task success perform merg join privat transient tupl maker merg tupl maker privat transient tupl maker leav tupl maker privat schema leav input schema privat schema merg input schema param k param rp param inp param inp plan input list physic plan ex join public merg join oper key k int rp list physic oper inp multi map physic oper physic plan inp plan list list byte key type join join type schema leav input schema schema right input schema schema merg input schema throw plan except super k rp inp op key k join fals inp plan inp plan r new local rearrang creat join plan inp plan key type index file null join type join type leav input schema leav input schema merg input schema merg input schema configur local rearrang oper get key tupl throw exec except privat void creat join plan multi map physic oper physic plan inp plan list list byte key type throw plan except int physic oper inp phi op inp plan key set local rearrang lr new local rearrang gen key tri lr set index catch exec except e throw new plan except e get messag e get error code e get error sourc e lr set result type data type lr set key type key type get size datum type key type get get lr set plan inp plan get inp phi op r lr helper method set tupl factori member privat void prepar tupl factori tupl factori tupl factori get instanc leav input schema null left tupl maker schema tupl backend new schema tupl factori leav input schema fals gen context leav tupl maker null log debug schema tupl factori avail combin left merg join schema leav input schema leav tupl maker tupl factori els log debug use schema tupl factori leav merg join schema leav input schema merg input schema null merg tupl maker schema tupl backend new schema tupl factori merg input schema fals gen context merg tupl maker null log debug schema tupl factori avail combin left right merg join schema merg input schema merg tupl maker tupl factori els log debug use schema tupl factori leav right merg join schema merg input schema provid list store tupl implement list depend whether tupl factori avail return list object store tupl privat tupl schema tupl list new left tupl array return new tupl schema tupl list array list size leav tupl maker class extend array list make easi provid fli convers tupl schema tupl necessari get schema tupl sourc though futur would like public static class tupl schema tupl list extend array list tupl privat schema tupl factori tf public tupl schema tupl list int ct tupl maker tf super ct tf instanceof schema tupl factori tf schema tupl factori tf public static schema tupl convert tupl schema tupl factori tf instanceof schema tupl return schema tupl schema tupl st tf new tupl tri return st set catch exec except e throw new runtim except unabl set schema tupl schema st get schema string give tupl merg join overrid public boolean add tupl tf null convert tf return super add overrid public tupl get int return super get overrid public int size return super size suppress warn uncheck overrid public result get next tupl throw exec except object cur leav key result cur leav inp first time prepar tupl factori leav tupl new leav tupl array initi setup cur leav inp process input cur left inp return statu statu return cur leav inp return want fetch next left tupl cur leav key extract key tupl cur left inp null cur leav key drop tupl null key return new result end record mark null tri seek right stream cur left key catch except e throw process except true e catch class cast except e throw process except true e leav tupl add tupl cur left inp result first time fals prev leav key cur left key return new result end record mark null join match key time join counter leav tupl join current right tupl tupl join left tup leav tupl get counter left tup size join leav tup size tupl join tup merg tupl maker new tupl leav tup size right tup size int leav tup size join tup set join left tup get int right tup size join tup set left tup size cur join right tup get return new result statu join tup join current right input end bag leav tupl may still join next right tupl join fals true result right inp get next right inp right inp return statu statu prev right inp null return right inp els object right key extract key tupl right inp null right key see tupl null key stream drop continu fetch next tupl int cmpval compar right key compar cur join key cmpval match next right tupl cur join right tup tupl right inp result right tup size cur join right tup size counter leav tupl size join true return get next tupl els cmpval get ahead right side store current read right tupl parent plan end input leav input consum spark prev right key right key prev right inp right inp cant join key leav tupl new leav tupl array leav tupl add tupl prev leav inp result return new result end record mark null els end input last join output right loader case would n get chanc close input stream close ourself tri index load func right loader close catch except e non fatal error continu log error receiv except tri close right side file e get messag return new result statu null els point right side can n behind int err code string err msg data sort right side n key order remind last two tupl encount n cur join right tup n tupl right inp result throw new exec except err msg err code cur left inp process input switch cur leav inp return statu case statu cur left key extract key tupl cur left inp null cur leav key drop tupl null key return new result end record mark null int cmp val compar cur leav key compar prev leav key cmp val keep accumul left tupl add tupl cur left inp result return new result end record mark null els cmp val fill left bag move cur join key prev leav key break els current key prev key int err code string err msg data sort left side n key order remind last two tupl encount n prev leav key n cur leav key throw new exec except err msg err code case statu parent plan end input end input hit end leav input tupl bag may still possibl join right side cur join key prev leav key cur left key null end input leav input consum spark true break els fetch next left input return cur leav inp default encount left side send return cur leav inp null prev right key parent plan end input leav input consum spark compar prev right key compar cur left key happen accumul input left side move still behind right side case throw away tupl accumul till add one read function call leav tupl new leav tupl array leav tupl add tupl cur left inp result prev leav inp cur left inp prev left key cur left key return new result end record mark null accumul tupl key left side sinc read ahead still n check read ahead right tupl accumul left tupl may potenti join let check first null prev right key prev right key equal prev leav key cur join right tup tupl prev right inp result counter leav tupl size right tup size cur join right tup size join true prev leav inp cur left inp prev left key cur left key return get next tupl get cur leav key prev right key boolean slide next record fals true start move right stream find tupl whose key current left bag key result right inp slide next record right inp get next right inp slide next record fals els right inp get next right inp prev left key right inp return statu statu return right inp object extract right key extract key tupl right inp null extract right key see tupl null key stream drop continu fetch next tupl compar right key compar extract right key prev right key null right key compar prev right key saniti check int err code string err msg data sort right side n key order remind last two tupl encount n prev right key n right key throw new exec except err msg err code int cmpval right key compar prev leav key cmpval still behind left side noth fetch next right tupl slide next record true continu els cmpval find match tupl time join cur join right tup tupl right inp result counter leav tupl size right tup size cur join right tup size join true prev leav inp cur left inp prev left key cur left key return get next tupl els get ahead right side store current read right tupl prev right key right key prev right inp right inp sinc n find match right tupl throw away buffer left tupl add one read function call leav tupl new leav tupl array leav tupl add tupl cur left inp result prev leav inp cur left inp prev left key cur left key parent plan end input leav input consum spark end input last time read right input right loader case would n get chanc close input stream close ourself tri index load func right loader close catch except e non fatal error continu log error receiv except tri close right side file e get messag return new result end record mark null privat void seek right stream object first leav key throw except right loader load func context instanti func spec right loader func spec check hadoop distribut cach use index file null right loader instanceof default index loader default index loader loader default index loader right loader loader set index file index file pass signatur loader right loader make copi conf use call right loader right loader set context signatur signatur job job new job new configur map reduc job conf intern get right loader set locat right input file name job index load func right loader initi job get configur index load func right loader seek near first leav key instanceof tupl tupl first leav key tupl factori new tupl first leav key privat result get next right inp object leav key throw exec except call seek near merg join merg spars default index loader support singl call seek near per split n call seek near join type join tri index load func right loader seek near leav key instanceof tupl tupl leav key tupl factori new tupl leav key prev right key null catch except e throw process except true e return get next right inp privat result get next right inp throw exec except tri inner plan right side tupl right loader get next null datum right side return new result statu null els return new result statu els result re right pipelin leaf get next tupl right pipelin leaf detach input switch re return statu case statu return re case statu tupl right loader get next null datum right side return new result statu null els run tupl pipelin right pipelin root attach input return get next right inp default n deal pass throw process except fals null catch except e throw process except true e never get return new result statu null public void throw process except boolean caus except except e throw exec except int err code string err msg error process right input merg join caus except throw new exec except err msg err code except e els throw new exec except err msg err code except privat object extract key tupl result inp int lr idx throw exec except separ key valu input use correspond oper local rearrang lr r lr idx lr attach input tupl inp result result lr lr get next tupl lr detach input lr return statu statu int err code string err msg local rearrang use extract key tupl n configur correctli throw new exec except err msg err code except return tupl lr result get public void setup right pipelin physic plan right pipelin throw frontend except right pipelin null right pipelin get leav size right pipelin get root size int err code string err msg expect physic plan exactli one root one leaf throw new frontend except err msg err code except inner plan right side fals right pipelin leaf right pipelin get leav get right pipelin root right pipelin get root get right pipelin root set input null els inner plan right side true privat void read object object input stream throw except class find except exec except default read object tupl factori tupl factori get instanc privat oper key gen key return new oper key op key scope node id gener get gener get next node id op key scope public void set right loader func spec func spec right loader func spec right loader func spec right loader func spec public list physic plan get inner plan int index return inp plan get input get index overrid public void visit phi plan visitor v throw visitor except v visit merg join overrid public string name string name get alia string merg join join type join name spars name data type find type name result type key string return name overrid public boolean support multipl input return true non javadoc see org apach impl plan oper support multipl output overrid public boolean support multipl output return fals param right input file name right input file name set public void set right input file name string right input file name right input file name right input file name public string get signatur return signatur public void set signatur string signatur signatur signatur public void set index file string index file index file index file public string get index file return index file overrid public tupl illustr markup object object int eq class index return null public join get join type return join type public local rearrang get r return r 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java math big decim import java math big integ import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach datum tupl import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except public class neg extend unari express oper privat static final long serial version public neg oper key k int rp super k rp public neg oper key k super k public neg oper key k int rp express oper input super k rp expr input overrid public void visit phi plan visitor v throw visitor except v visit neg overrid public string name auto gener method stub return neg data type find type name result type key string overrid public result get next doubl throw exec except result re expr get next doubl re return statu statu re result null re result doubl re result return re overrid public result get next float throw exec except result re expr get next float re return statu statu re result null re result float re result return re overrid public result get next integ throw exec except result re expr get next integ re return statu statu re result null re result integ re result return re overrid public result get next long throw exec except result re expr get next long re return statu statu re result null re result long re result return re overrid public result get next big integ throw exec except result re expr get next big integ re return statu statu re result null re result big integ re result negat return re overrid public result get next big decim throw exec except result re expr get next big decim re return statu statu re result null re result big decim re result negat return re overrid public neg clone throw clone support except neg clone new neg new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone overrid public tupl illustr markup object object int eq class index return tupl 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except boolean oper public class extend binari comparison oper privat static final long serial version public oper key k k public oper key k int rp super k rp result type data type overrid public void visit phi plan visitor v throw visitor except v visit overrid public string name return data type find type name result type key string overrid public result get next boolean throw exec except result be accum child null data type r null return r result leav left lh get next boolean pass leav return statu statu return leav truth tabl true n null f fals n f n n n f n f short circuit lh true return true handl boolean return leav fals left result null boolean leav result boolean valu illustr null return leav illustr markup null left result return leav true result right rh get next boolean return leav return leav pass right return statu statu return right lh null rh fals return null case return rh left result null right result null boolean right result boolean valu return left matter get right side return null true fals right result null illustr markup null right result boolean right result return right overrid public clone throw clone support except clone new new oper key key scope node id gener get gener get next node id key scope clone clone helper return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java io except import java util array list import java util iter import java util list import org apach configur import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer map reduc import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin util accumul optim util import org apach datum accumul bag import org apach datum datum bag import org apach datum data type import org apach datum intern cach bag import org apach datum read bag import org apach datum tupl import org apach impl io nullabl tupl import org apach impl io nullabl writabl import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except import org apach pen illustr packag oper packag global rearrang tupl output format requir co group last stage process co group oper slightli differ format oper take two thing input key work iter bag contain index tupl need packag appropri output bag base index public class packag extend physic oper privat static final long serial version iter index tupl typic provid hadoop transient iter nullabl tupl tup iter key work protect object key number input co group indic distinct mean key valu protect int num input privat boolean last bag read true protect packag pkgr protect nullabl writabl key writabl privat transient boolean initi privat transient boolean use default bag privat transient int accumul batch size public packag oper key k k null public packag oper key k int rp k rp null public packag oper key k list physic oper inp k inp public packag oper key k int rp list physic oper inp k rp inp new packag public packag oper key k int rp list physic oper inp packag pkgr super k rp inp num input pkgr pkgr public packag packag copi super copi num input copi num input pkgr copi pkgr pkgr key info copi pkgr key info overrid public void set illustr illustr illustr super set illustr illustr pkgr set illustr illustr overrid public string name return get alia string packag pkgr name data type find type name result type data type find type name pkgr get key type key string overrid public boolean support multipl input return fals overrid public void visit phi plan visitor v throw visitor except v visit packag overrid public boolean support multipl output return fals attach requir input param k key work param inp iter index tupl typic obtain hadoop public void attach input nullabl writabl k iter nullabl tupl inp tri tup iter inp key pkgr get key k key writabl k input attach true catch except e throw new runtim except error attach input key k name locat get origin locat e attach input well half overrid public void detach input tup iter null key null input attach fals public int get num inp return num input public void set num inp int num inp num input num inp pkgr set num input num inp input construct output tupl co group requir format key bag tupl input bag tupl input overrid public result get next tupl throw exec except initi initi true map reduc job conf intern get null string bag type map reduc job conf intern get get configur bag type null bag type equal ignor case default use default bag true accumul batch size accumul optim util get accumul batch size multiqueri last bag intern cach bag set read flag otherwis materi anoth intern cach bag pkgr instanceof multi queri packag last bag read fals int num input pkgr get num input key writabl get index boolean read new boolean num input int num input read fals input attach creat num input bag datum bag db null db new datum bag num input accumul read num input fals creat bag wrapper pull tupl mani batch bag refer sampl tupl buffer contain tupl one batch packag tupl buffer buffer new packag tupl buffer accumul batch size key tup iter int num input db new accumul bag buffer els last bag read read num input true know tupl come sort index wrap last input read bag let packag decid whether read memori creat bag pull tupl iter int num input db use default bag bag factori new default bag rare case stream packag pipelin also block pipelin constructor argument num input one obscur case n want pay penalti time new intern cach bag num input index tup inp sort correspond bag base index tup iter next nullabl tupl ntup tup iter next int index ntup get index index num input pkgr get use secondari key db index null db index use default bag bag factori new default bag new intern cach bag num input els db index new peek bag pkgr ntup tup iter key writabl break tupl copi pkgr get valu tupl key writabl ntup index num input multi queri merg num input alway index posit inner plan enclos oper may db add copi els db index add copi get report null get report progress construct output tupl append key construct bag return pkgr attach input key db read detach input return pkgr get next public packag get pkgr return pkgr public void set pkgr packag pkgr pkgr pkgr pkgr set parent pkgr set illustr illustr make deep copi oper throw clone support except overrid public packag clone throw clone support except packag clone packag super clone clone key new oper key key scope node id gener get gener get next node id key scope clone request parallel request parallel clone result type result type clone num input num input clone pkgr packag pkgr clone return clone public class packag tupl buffer implement accumul tupl buffer privat list tupl bag privat iter nullabl tupl iter privat int batch size privat object curr key suppress warn uncheck public packag tupl buffer int batch size object key iter nullabl tupl iter batch size batch size curr key key iter iter bag new list num input int num input bag new array list tupl batch size overrid public boolean next batch return iter next overrid public void next batch throw except int bag length bag clear key curr key int batch size iter next nullabl tupl ntup iter next int index ntup get index tupl copi pkgr get valu tupl key writabl ntup index num input multi queri merg num input alway index posit inner plan enclos oper may bag add copi els bag index add copi els break overrid public void clear int bag length bag clear iter null overrid public iter tupl get tupl int index return bag index iter public tupl illustr markup object object int eq class index return packag illustr markup eq class index overrid public tupl illustr markup object object int eq class index return pkgr illustr markup eq class index public int number equival class return pkgr number equival class read bag alreadi peek privat static class peek bag extend read bag privat static final long serial version nullabl tupl head int index public peek bag packag pkgr nullabl tupl head iter nullabl tupl tup iter nullabl writabl key writabl super pkgr tup iter key writabl head head index head get index overrid public iter tupl iter return new iter tupl boolean head return fals overrid public boolean next head return return true return tup iter next overrid public tupl next head return head return true tri return pkgr get valu tupl key writabl head head get index catch exec except e throw new runtim except peek bag fail get valu tupl e string nullabl tupl ntup tup iter next tupl ret null tri ret pkgr get valu tupl key writabl ntup index catch exec except e throw new runtim except peek bag fail get valu tupl e string get report null get report progress return ret overrid public void remov throw new unsupport oper except peek bag support remov 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java util array list import java util iter import java util list import org apach except import org apach warn import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum datum bag import org apach datum data type import org apach datum singl tupl bag import org apach datum tupl import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except implement overload form project oper project specifi column input tupl howev ask tupl input bag overload form invok project stream tupl instead bag public class project extend express oper privat static final long serial version privat boolean result singl tupl bag fals column project protect array list integ column true middl stream tupl bag privat boolean process bag tupl fals bag iter use straem tupl privat transient iter tupl bag iter null repres fact instanc project overload stream tupl bag rather pass entir bag respons translat set protect boolean overload fals protect boolean project end fals protect int start col public project oper key k k public project oper key k int rp k rp public project oper key k int rp int col super k rp column new array list integ column add col public project oper key k int rp array list integ col super k rp column col public void set project end int start col project end true start col start col column new array list integ overrid public string name string str project data type find type name result type star str els project end str start col els str column str key string return str overrid public boolean support multipl input return fals overrid public boolean support multipl output return fals overrid public void visit phi plan visitor v throw visitor except v visit project overrid sinc attach new input caus old process end overrid public void attach input tupl super attach input process bag tupl fals fetch input tupl return request column return next valu throw exec except public result get next throw exec except result re process input tupl inp valu tupl re result object ret re return statu statu return re star illustr markup inp valu re result return re els column size inp valu null tupl null derefer also produc null re return statu statu ret null els inp valu size column get ret inp valu get column get els logger null logger warn attempt access field find input warn re return statu statu ret null els project end ret get rang tupl inp valu els array list object obj list new array list object column size int col column add column obj list inp valu col ret tupl factori new tupl copi obj list re result ret illustr markup inp valu re result return re privat boolean rang invalid int last col idx start col last col idx must happen tupl small start col logger null logger warn invalid rang project start col postit start col great tupl size warn return true return fals add th column inp valu obj list param obj list param inp valu param throw exec except privat void add column array list object obj list tupl inp valu int throw exec except inp valu null tupl null derefer also produc null obj list add null els inp valu size obj list add inp valu get els logger null logger warn attempt access field find input warn obj list add null overrid public result get next data bag throw exec except result re process input bag re return statu statu return re return consum input bag re param input throw exec except protect result consum input bag result input throw exec except input attach star result ret val new result ret val result input result ret val return statu statu detach input return ret val input result instanceof data bag data bag inp bag data bag input result result ret val new result datum bag bag result singl tupl bag one tupl bag creat singl tupl bag result fill appropri input bag tupl tupl inp bag iter next project end array list object obj list new array list object column size int col column add column obj list tupl col bag new singl tupl bag tupl factori new tupl copi obj list els tupl tmp tupl get rang tupl tupl bag new singl tupl bag tmp tupl els bag bag factori new default bag tupl tupl inp bag project end array list object obj list new array list object column size int col column add column obj list tupl col bag add tupl factori new tupl copi obj list els tupl tupl get rang tupl tupl bag add tupl ret val result bag ret val return statu statu return ret val els input result instanceof tupl input tupl column one item result ret val new result ret val result tupl input result get column get ret val return statu statu return ret val els input result null result ret val new result ret val result null ret val return statu statu return ret val els throw new exec except derefer bag input result get class get name privat tupl get rang tupl tupl tupl throw exec except int last col idx tupl size tupl tupl rang invalid last col idx invalid rang return empti tupl tupl tupl factori new tupl els array list object obj list new array list object last col idx start col int start col last col idx add column obj list tupl tupl tupl factori new tupl copi obj list return tupl overrid public result get next data byte array throw exec except return get next overrid public result get next doubl throw exec except return get next overrid public result get next float throw exec except return get next overrid public result get next integ throw exec except return get next overrid public result get next long throw exec except return get next overrid public result get next boolean throw exec except return get next overrid public result get next date time throw exec except return get next overrid public result get next map throw exec except return get next overrid public result get next string throw exec except return get next overrid public result get next big integ throw exec except return get next overrid public result get next big decim throw exec except return get next ask tupl check input bag stream tupl bag instead entir bag overrid public result get next tupl throw exec except result re new result process bag tupl tupl inp valu null re process input re return statu statu return re star return re inp valu tupl re result re result null object ret column size inp valu null tupl null derefer also produc null ret null els inp valu size column get ret inp valu get column get els logger null logger warn attempt access field find input warn ret null els project end ret get rang tupl inp valu els array list object obj list new array list object column size int col column inp valu null tupl null derefer also produc null obj list add null els inp valu size col obj list add inp valu get col els logger null logger warn attempt access field find input warn obj list add null ret tupl factori new tupl obj list re result tupl ret return re overload ret null datum bag ret bag data bag ret bag iter ret bag iter bag iter next process bag tupl true re result bag iter next bag contain tupl set return statu process bag tupl re return statu statu els re return statu statu els re result tupl ret return re bag iter next re result bag iter next re return statu statu return re els do process bag tupl process bag tupl fals return get next tupl public array list integ get column project end throw new assert error intern error improp use method get column project class get simpl name return column public int get column throw exec except column size project end int err code string msg intern error improp use method get column project class get simpl name throw new exec except msg err code except return column get public int get start col return start col public void set column array list integ col project end throw new assert error column set rang project column col public void set column int col project end fals null column column new array list integ els column clear column add col public boolean overload return overload public void set overload boolean overload overload overload public boolean star return project end start col public boolean project end return project end public void set star boolean star star project end true start col els project end fals overrid public project clone throw clone support except array list integ col new array list integ column size resus integ object immut integ column col add project clone new project new oper key key scope node id gener get gener get next node id key scope request parallel col clone clone helper clone overload overload clone start col start col clone project end project end clone result type result type return clone protect result process input bag throw exec except result re new result input null input null input size log warn input find signal end process re return statu statu return re remov model clear get report null get report progress input attach input get get result type data type return input get get next data bag els return input get get next tupl els re result datum bag input get column get re return statu statu return re public void set result singl tupl bag boolean result singl tupl bag result singl tupl bag result singl tupl bag overrid public list express oper get child express return null overrid public tupl illustr markup object object int eq class index illustr null return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java util array list import java util list import org apach common log log import org apach common log log factori import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer job control compil import org apach backend hadoop executionengin map reduc layer map reduc import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach datum data type import org apach datum tupl import org apach impl plan oper key import org apach impl plan visitor except import org apach pen util exampl tupl import org apach pen util lineag tracer oper part oper implement read output tupl counter cumul sum previous calcul read task identifi order get correspond cumul sum local counter tupl valu sum prepend tupl public class rank extend physic oper privat static final log log log factori get log rank class privat static final long serial version privat list physic plan rank plan privat list boolean asc col privat list byte expr output type uniqu identifi link counter rank global counter label privat string oper counter use set tupl equival class privat int local count illustr public rank oper key k k null public rank oper key k int rp k rp null public rank oper key k list physic oper inp k inp public rank oper key k int rp list physic oper inp super k rp inp public rank rank copi super copi rank plan copi rank plan asc col copi asc col expr output type copi expr output type suppress warn rawtyp uncheck public rank oper key oper key int request parallel list inp list physic plan rank plan list boolean ascend col super oper key request parallel inp set rank plan rank plan set ascend col ascend col expr output type new array list byte rank plan size physic plan plan rank plan expr output type add plan get leav get get result type overrid public tupl illustr markup object object int eq class index illustr null exampl tupl new exampl tupl tupl illustr add data tupl illustr get equival class get eq class index add tupl lineag tracer lineag tracer illustr get lineag lineag tracer insert return return tupl overrid public void visit phi plan visitor v throw visitor except v visit rank overrid public result get next tupl throw exec except result inp null true inp process input inp return statu statu inp return statu statu break inp return statu statu continu return add rank inp return inp read output tupl counter cumul sum previous calcul read task identifi order get correspond cumul sum local counter tupl valu sum prepend tupl param input process counter return input result input result tupl own prepend rank valu public result add rank result input throw exec except tupl tupl input result long local counter long get integ task id integ get remov get size long rank get rank counter offset task id set rank local counter local count illustr local count illustr input result illustr markup local count illustr local count illustr return input protect long get rank counter offset integ task id string name counter job control compil get oper job control compil string valu task id long rank map reduc job conf intern get get long name counter illustr null rank rank log error error read counter name counter throw new runtim except unabl read counter name counter return rank overrid public boolean support multipl input return fals overrid public boolean support multipl output return fals overrid public string name return get alia string rank data type find type name result type key string public void set rank plan list physic plan rank plan rank plan rank plan public list physic plan get rank plan return rank plan public void set ascend col list boolean asc col asc col asc col public list boolean get ascend col return asc col oper identifi share within correspond counter param oper public void set oper string oper oper oper public string get oper return oper overrid public rank clone throw clone support except rank clone rank super clone rank plan asc col expr output type unus clone return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java util array list import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach datum non spillabl data bag import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except implement special form project use follow case project project introduc relat oper suppli bag output express project either provid bag input successor express oper leaf inner plan predecessor relat oper send send empti bag first signal empti output send project return type whose predecessor outsid plan e inner plan project lead we queri like load baginp txt b bag tupl b foreach gener dump b go regular project without follow flag public class relat expr project extend project privat static final long serial version boolean send empti bag fals public relat expr project oper key k k public relat expr project oper key k int rp k rp public relat expr project oper key k int rp int col super k rp col public relat expr project oper key k int rp array list integ col super k rp col overrid public string name return relat express project data type find type name result type star column key string overrid public void visit phi plan visitor v throw visitor except special class affect way visitor visit use visit project v visit project non javadoc see org apach backend hadoop executionengin physic layer physic oper reset overrid public void reset foreach oper present start new set input see predecessor first e see input see happen filter predecessor filter away input send empti bag set flag check encount send empti bag true overrid public result get next data bag throw exec except result input process input bag call accumul ok empti bag need send call accumul reset input return statu statu input return statu statu return input els input return statu statu send empti bag receiv predecessor sinc successor pipelin expect bag send empti bag input result new non spillabl data bag input return statu statu send next time call foreach oper present call get next bag new input flag reset reset els sinc send result empti bag otherwis send empti bag process new input see reset send empti bag fals return input result r consum input bag input sinc send result empti bag otherwis send empti bag process new input see reset send empti bag fals return r see overrid public relat expr project clone throw clone support except array list integ col new array list integ column size reus integ object immut integ column col add relat expr project clone new relat expr project new oper key key scope node id gener get gener get next node id key scope request parallel col clone clone helper clone overload overload clone start col start col clone project end project end clone result type result type clone send empti bag send empti bag return clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java util array list import java util list import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach datum data type import org apach datum tupl import org apach impl logic layer schema schema import org apach impl plan oper key import org apach impl plan visitor except import org apach impl util multi map physic oper repres skew join must two input oper actual work place holder translat plan skew join translat sampl job join job public class skew join extend physic oper privat static final long serial version privat boolean inner flag schema use compil support outer join transient privat list schema input schema new array list schema physic plan retriv join key key code multi map code physic oper correspond input valu list code physic plan code retriev join key input privat multi map physic oper physic plan join plan public skew join oper key k k null null public skew join oper key k int rp k rp null null public skew join oper key k list physic oper inp boolean flag k inp flag public skew join oper key k int rp list physic oper inp boolean flag super k rp inp flag null copi inner flag inner flag new boolean flag length int flag length inner flag flag public boolean get inner flag return inner flag public multi map physic oper physic plan get join plan return join plan public void set join plan multi map physic oper physic plan join plan join plan join plan overrid public void visit phi plan visitor v throw visitor except v visit skew join overrid public string name return get alia string skew join data type find type name result type key string overrid public boolean support multipl input return true overrid public boolean support multipl output return fals public void add schema schema input schema add public schema get schema int return input schema get overrid public tupl illustr markup object object int eq class index return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java io serializ import java util array list import java util compar import java util iter import java util list import org apach common log log import org apach common log log factori import org apach configur import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer map reduc import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer express oper express oper import org apach backend hadoop executionengin physic layer express oper user comparison func import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach datum datum bag import org apach datum data type import org apach datum intern sort bag import org apach datum tupl import org apach impl plan oper key import org apach impl plan visitor except implement applic physic plan local backend convers physic mapreduc would see oper take necessari step convert quantil sort job block oper sort datum bag accumul tupl sort iter start tupl input oper accumul fill datum bag attach input method applic intent skip type check backend perform reason suppress warn uncheck public class sort extend physic oper privat static final log log log factori get log sort class privat static final long serial version privat list integ sort col privat list physic plan sort plan privat list byte expr output type privat list boolean asc col privat user comparison func sort func privat compar tupl compar privat long limit public boolean compar use fals privat transient boolean input accumul fals privat transient datum bag sort bag privat transient iter tupl privat transient boolean initi privat transient boolean use default bag public sort oper key k int rp list inp list physic plan sort plan list boolean asc col user comparison func sort func super k rp inp sort col sort col sort plan sort plan asc col asc col limit set sort func sort func privat void set sort func user comparison func sort func sort func sort func sort func null compar new sort compar expr output type new array list byte sort plan size physic plan plan sort plan expr output type add plan get leav get get result type els compar new sort compar compar use true public sort oper key k int rp list inp super k rp inp public sort oper key k int rp super k rp public sort oper key k list inp super k inp public sort oper key k super k public class sort compar implement compar tupl serializ privat static final long serial version overrid public int compar tupl tupl int count int ret sort plan null sort plan size return physic plan plan sort plan tri plan attach input result re get result plan expr output type get count plan attach input result re get result plan expr output type get count re return statu statu re return statu statu log error error process input express plan plan string els asc col get count ret data type compar re result re result equal return otherwis keep compar next one ret return ret els ret data type compar re result re result ret return ret catch exec except e log error invalid result execut express plan plan string n e get messag return ret privat result get result physic plan plan byte result type throw exec except express oper op express oper plan get leav get result re null switch result type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type case data type re op get next result type break default int err code string msg expect result type data type find type name result type throw new exec except msg err code except return re public class sort compar implement compar tupl serializ privat static final long serial version overrid public int compar tupl tupl sort func attach input integ null result re null tri re sort func get next integ catch exec except e log error input readi error read input e get messag re null return integ re result els return overrid public string name return get alia string sort data type find type name result type sort func null sort func get func spec key string overrid public boolean block return true overrid public result get next tupl throw exec except result inp input accumul inp process input initi initi true map reduc job conf intern get null string bag type map reduc job conf intern get get configur bag type null bag type equal ignor case default use default bag true limit sort bag bag factori new limit sort bag compar limit els default creat intern sort bag unless user configur explicitli use old bag sort bag use default bag bag factori new sort bag compar new intern sort bag compar inp return statu statu inp return statu statu log error error read input return inp els inp return statu statu ignor read next tupl inp process input continu sort bag add tupl inp result inp process input input accumul true result re new result null sort bag iter next re result next illustr markup re result re result re return statu statu els re return statu statu reset return re overrid public boolean support multipl input return fals overrid public boolean support multipl output return fals overrid public void visit phi plan visitor v throw visitor except v visit sort overrid public void reset input accumul fals sort bag null null public list physic plan get sort plan return sort plan public void set sort plan list physic plan sort plan sort plan sort plan public user comparison func get sort func return sort func public void set sort func user comparison func sort func sort func sort func public compar tupl get compar return compar public list boolean get asc col return asc col public void set limit long l limit l public long get limit return limit public boolean limit return limit overrid public sort clone throw clone support except sort clone sort super clone clone sort plan clone plan sort plan sort func null set sort func null els set sort func sort func clone list boolean clone asc new array list boolean asc col size boolean b asc col clone asc add b clone asc col clone asc return clone overrid public tupl illustr markup object object int eq class index illustr null illustr get equival class get eq class index add tupl illustr add data tupl return tupl 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer relat oper import java io except import java util list import org apach except import org apach sort info import org apach store func interfac import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer map reduc store impl import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum tupl import org apach impl context import org apach impl io file spec import org apach impl logic layer schema schema import org apach impl plan oper key import org apach impl plan visitor except import org apach pen util exampl tupl import org apach pen util lineag tracer import org apach tool pigstat stat util store oper use two way local oper use store file map reduc set use creat job map reduc oper keep load store map reduc plan till job creat public class store extend physic oper privat static final long serial version transient privat store func interfac storer transient privat store func decor decor transient privat store impl impl transient privat string counter name null privat file spec file privat schema schema flag distinguish user store compil store privat boolean tmp store flag distinguish singl store multiqueri store privat boolean multi store flag indic custom counter disabl privat boolean disabl counter fals index multiqueri store track counter privat int index know reload store l file file spec set server post process use reload store optim need privat file spec l file predecessor store sort order sort info inform sort column name asc dsc info privat sort info sort info privat string signatur privat transient list string cach file null privat transient list string ship file null public store oper key k k null public store oper key k int rp k rp null public store oper key k int rp list physic oper inp super k rp inp public store store copi super copi file copi file schema copi schema tmp store copi tmp store multi store copi multi store disabl counter copi disabl counter index copi index l file copi l file sort info copi sort info signatur copi signatur set storer throw except public void set throw except impl null tri stor impl creat store func tmp store disabl counter impl instanceof map reduc store impl counter name stat util get multi store counter name counter name null creat counter need incr counter may never call case empti file map reduc store impl impl incr record counter counter name catch except ioe int err code string msg unabl setup store function throw new exec except msg err code except ioe call end process clean throw except public void tear throw except impl null impl tear perform cleanup error throw except public void clean throw except impl null impl clean overrid public result get next tupl throw exec except result re process input tri switch re return statu case statu illustr null decor put next tupl re result els illustr markup re result re result re counter name null map reduc store impl impl incr record counter counter name break case statu break case statu case statu default break catch except ioe int err code string msg receiv error store function ioe get messag throw new exec except msg err code ioe return re overrid public string name return file null get alia string store file string key string get alia string store dummi fil dummi ldr key string overrid public boolean support multipl input return fals overrid public boolean support multipl output return true overrid public void visit phi plan visitor v throw visitor except v visit store public file spec get file return file public void set file file spec file file file storer null public void set input spec file spec l file l file l file public file spec get input spec return l file public void set tmp store boolean tmp tmp store tmp public boolean tmp store return tmp store public void set store impl store impl impl impl impl public void set schema schema schema schema schema public schema get schema return schema public store func interfac get store func storer null storer store func interfac context instanti func spec file get func spec storer set store func context signatur signatur decor null init decor use write tupl set store func decor new store func decor storer signatur return storer void set store func decor store func decor decor decor decor return link store func decor use write tupl public store func decor get store func decor return decor param sort info sort info set public void set sort info sort info sort info sort info sort info return sort info public sort info get sort info return sort info public string get signatur return signatur public void set signatur string signatur signatur signatur public void set multi store boolean multi store multi store multi store public boolean multi store return multi store overrid public tupl illustr markup object object int eq class index illustr null exampl tupl exampl tupl lineag tracer lineag illustr get lineag lineag insert tmp store illustr get equival class get eq class index add illustr add data tupl return tupl public void set index int index index index public int get index return index public void set disabl counter boolean disabl counter disabl counter disabl counter public boolean disabl counter return disabl counter public void set store func store func interfac store func storer store func public list string get cach file return cach file public void set cach file list string cf cach file cf public list string get ship file return ship file public void set ship file list string sf ship file sf 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java io except import java io object input stream import java util list import org apach common log log import org apach common log log factori import org apach comparison func import org apach func spec import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach datum data type import org apach datum tupl import org apach impl context import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except intent skip type check backend perform reason suppress warn uncheck public class user comparison func extend express oper privat final static log log log factori get log user comparison func class privat static final long serial version func spec func spec tupl transient comparison func func public user comparison func oper key k int rp list inp func spec func spec comparison func func super k rp super set input inp func spec func spec func func func null instanti func public user comparison func oper key k int rp list inp func spec func spec k rp inp func spec null privat void instanti func func comparison func context instanti func spec func spec func set report get report public comparison func get compar return func overrid public result get next integ throw exec except result result new result result result func compar result return statu null null statu statu two attach tupl use set input attach flag fals input attach fals result return statu statu illustr markup null result result integ result result integ result result return result privat result get next result re null log error get next call non integ return re overrid public result get next boolean throw exec except return get next overrid public result get next data bag throw exec except return get next overrid public result get next data byte array throw exec except return get next overrid public result get next doubl throw exec except return get next overrid public result get next float throw exec except return get next overrid public result get next long throw exec except return get next overrid public result get next date time throw exec except return get next overrid public result get next map throw exec except return get next overrid public result get next string throw exec except return get next overrid public result get next tupl throw exec except return get next overrid public result get next big integ throw exec except return get next overrid public result get next big decim throw exec except return get next public void attach input tupl tupl input attach true privat void read object object input stream throw except class find except default read object instanti func overrid public void visit phi plan visitor v throw visitor except v visit comparison func overrid public string name return user comparison func func get class get name data type find type name result type key string overrid public boolean support multipl input return fals public func spec get func spec return func spec overrid public user comparison func clone throw clone support except func spec clone fs null func spec null clone fs func spec clone user comparison func clone new user comparison func new oper key key scope node id gener get gener get next node id key scope request parallel null clone fs clone clone helper return clone get child express express overrid public list express oper get child express return null overrid public tupl illustr markup object object int eq class index illustr null illustr get input add illustr get equival class get eq class index add illustr get input add illustr get equival class get eq class index add return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import static org apach configur import static org apach configur import static org apach constant import static org apach constant import java io except import java io object input stream import java lang reflect type import java util list import java util properti import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach accumul import org apach algebra import org apach eval func import org apach func spec import org apach except import org apach termin accumul import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer statu import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer result import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer util monitor executor import org apach builtin monitor import org apach datum data type import org apach datum schema tupl class gener gen context import org apach datum schema tupl factori import org apach datum tupl import org apach datum tupl factori import org apach datum tupl maker import org apach impl context import org apach impl logic layer schema schema import org apach impl plan node id gener import org apach impl plan oper key import org apach impl plan visitor except import org apach impl util context import org apach tool pigstat statu report public class user func extend express oper privat static final long serial version privat static final log log factori get log user func class privat static final tupl factori tf tupl factori get instanc privat transient string counter group privat transient eval func func privat transient list string cach file null privat transient list string ship file null func spec func spec func spec orig spec public static final byte public static final byte public static final byte privat boolean initi fals privat monitor executor executor null privat physic oper refer oper null privat boolean accumul do privat string signatur privat boolean check termin accumul privat long num invoc privat long time frequenc privat boolean time fals public physic oper get refer oper return refer oper public void set referenc oper physic oper refer oper refer oper refer oper public user func oper key k int rp list physic oper inp k rp inp null public user func oper key k int rp list physic oper inp func spec func spec k rp inp func spec null public user func oper key k int rp list physic oper inp func spec func spec eval func func super k rp super set input inp func spec func spec orig spec func spec func func instanti func func spec public void set func input schema set func input schema signatur privat void instanti func func spec f spec func eval func context instanti func spec f spec set signatur signatur set func input schema signatur func get class annot present monitor class executor new monitor executor func next coupl initi work intend follow reason report logger member variabl physic oper instanit func invok deseri time report logger null set map reduc call make initi basic useless look process input method variabl initi point physic oper set correctli report logger refer func set report get report func set logger logger privat transient tupl maker input tupl maker privat boolean use schema tupl factori overrid public result process input throw exec except make sure report set n get carri across serial n know suspect cheap call set report call everytim check whether hope java inlin initi func set report get report func set logger logger configur job conf context get context get job conf job conf null time job conf get boolean fals time counter group func spec string time frequenc job conf get long initi instead instanti func call actual process begin wherea function instanti frontend potenti mainli optim schema tmp func get input schema tmp null current get instanc schema return null class find work fine null default use pass context happen schema gener elsewher want overrid user expect input tupl maker schema tupl factori get instanc tmp fals gen context input tupl maker null debug schema tupl factori find schema tmp use default tupl factori use schema tupl factori fals els debug use schema tupl factori schema tmp use schema tupl factori true futur could option use schema tupl output well input tupl maker null input tupl maker tupl factori get instanc initi true result re new result input null input null input size re return statu statu return re remov model clear get report null get report progress input attach re result input re return statu statu detach input return re els decoupl may case size know n schema tupl factori boolean know size use schema tupl factori int know index re result input tupl maker new tupl result temp null physic oper op input temp op get next op get result type temp return statu statu return temp op instanceof project op get result type data type project proj op project op proj op project end tupl trslt tupl temp result tupl rslt tupl re result int trslt size know size rslt set know index trslt get els rslt append trslt get continu know size tupl re result set known index temp result els tupl re result append temp result re return statu temp return statu return re privat boolean earli termin fals privat void set earli termin earli termin true privat boolean earli termin return earli termin privat boolean termin fals privat boolean termin return termin privat void earli termin termin true privat result get next throw exec except result result process input long start nano boolean time time num invoc time frequenc time start nano system nano time statu report get instanc incr counter counter group time frequenc tri result return statu statu accumul accum start check termin accumul check termin accumul true func instanceof termin accumul set earli termin termin earli termin termin accumul func finish earli termin termin result return statu statu result result null accumul do fals els accumul func accumul tupl result result result return statu statu result result null accumul do fals els accumul do relat expr project return udf get call accum start first true set fals even input relat empti send user func result send result result null result return statu statu els result result accumul func get valu result return statu statu accumul func cleanup accumul done true els parent plan null parent plan end input need end input process func set end input true executor null result result executor monitor exec tupl result result els result result func exec tupl result result time statu report get instanc incr counter counter group math round system nano time start nano time frequenc return result catch exec except ee throw ee catch except ioe int err code string msg catch error func spec get class name string footer ioe get messag ioe instanceof except int udf error code except ioe get error code udf error code err code udf error code msg except ioe get messag els msg except ioe get messag els msg footer throw new exec except msg err code except ioe catch index bound except ie int err code string msg catch error func spec get class name bound access ie get messag throw new exec except msg err code except ie overrid public result get next tupl throw exec except return get next overrid public result get next data bag throw exec except return get next overrid public result get next integ throw exec except return get next overrid public result get next boolean throw exec except return get next overrid public result get next data byte array throw exec except return get next overrid public result get next doubl throw exec except return get next overrid public result get next big integ throw exec except return get next overrid public result get next big decim throw exec except return get next overrid public result get next float throw exec except return get next overrid public result get next long throw exec except return get next overrid public result get next date time throw exec except return get next overrid public result get next map throw exec except return get next overrid public result get next string throw exec except return get next public void set algebra function byte function throw exec except use optim put correct function mapper combin reduc help maintain physic plan without optimis replac oper would n abl make two call function algebra eval func func chang switch function case func spec new func spec get initi break case func spec new func spec get interm break case func spec new func spec get final break func spec set ctor arg orig spec get ctor arg instanti func func spec set result type data type find type eval func func get return type public string get initi throw exec except instanti func orig spec func instanceof algebra return algebra func get initi els int err code string msg attempt run non algebra function algebra function throw new exec except msg err code except public string get interm throw exec except instanti func orig spec func instanceof algebra return algebra func get interm els int err code string msg attempt run non algebra function algebra function throw new exec except msg err code except public string get final throw exec except instanti func orig spec func instanceof algebra return algebra func get final els int err code string msg attempt run non algebra function algebra function throw new exec except msg err code except public type get origin return type throw exec except instanti func orig spec return func get return type public type get return type return func get return type public void finish func finish executor null executor termin public schema output schema schema input return func output schema input public boolean asynchron return func asynchron overrid public string name return user func func get class get name data type find type name result type key string overrid public boolean support multipl input return true overrid public boolean support multipl output return fals overrid public void visit phi plan visitor v throw visitor except v visit user func public func spec get func spec return func spec public void set func spec func spec func spec func spec func spec instanti func func spec public list string get cach file return cach file public void set cach file list string cf cach file cf public list string get ship file return ship file public void set ship file list string sf ship file sf public boolean combin return func instanceof algebra overrid public user func clone throw clone support except input patch later physic plan clone user func clone new user func new oper key key scope node id gener get gener get next node id key scope request parallel null func spec clone clone set result type result type clone signatur signatur clone cach file cach file clone ship file ship file return clone privat void read object object input stream throw except class find except default read object instanti func func spec get child express express overrid public list express oper get child express return null suppress warn uncheck overrid public void set accum start accumul accum start super set accum start accumul func cleanup overrid public void set result type byte result type result type result type overrid public tupl illustr markup object object int eq class index return tupl public eval func get func return func public string get signatur return signatur public void set signatur string signatur signatur signatur func null func set context signatur signatur set eval func inputschema base signatur param signatur public void set func input schema string signatur properti prop context get context get properti func get class schema tmp schema prop get evalfunc inputschema signatur tmp null func set input schema tmp public boolean need end input process return get func need end input process 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import org apach datum tupl import java io except import java util list base class simpl fs function primit type handl marshal object basic error check etc extend class implement pre exec input pre method writ oper first input expect type tupl public abstract class primit eval func extend type output eval func protect class type class null public class get input type class return type class suppress warn uncheck public primit eval func list type arg get type argument primit eval func class get class type class class type arg get type class class type arg get suppress warn uncheck public primit eval func class type class class type class type class type class type class type class overrid suppress warn uncheck public exec tupl tupl throw except verifi udf input get counter group tupl input tupl get input null default behavior null input null output return null return exec input public abstract exec input throw except 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import java util list import org apach except import org apach datum data type import org apach impl logic layer frontend except import org apach impl plan plan valid except import org apach impl util pair import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema import org apach parser sourc locat project column express public class project express extend column express privat int input input relat oper project project count zero base project filter input number alway sinc filter one input join cross cogroup union could great privat int col column input project refer count zero base privat string alia alia project field foreach inner plan project make relat oper may get reus howev express need sticki oper express project privat oper project oper privat logic relat oper attach relat op field rang project privat boolean rang project fals start end column rang end col valu repres everyth upto end privat int start col privat int end col privat string start alia privat string end alia add project plan param plan logic express plan project part param input num input number project refer param col num column number project refer param attach relat op public project express oper plan plan int input num int col num logic relat oper attach relat op super project plan input input num col col num plan add attach relat op attach relat op add project plan param plan param input num param alia param attach relat op throw frontend except public project express oper plan plan int input num string alia oper project op logic relat oper attach relat op super project plan input input num alia alia project oper project op plan add attach relat op attach relat op constructor rang project add project plan start end alia column number set separ param plan param input num param attach relat op public project express oper plan plan int input num logic relat oper attach relat op super project plan input input num rang project true plan add attach relat op attach relat op like copi constructor plan argument param proj expr param plan public project express project express proj expr oper plan plan super project plan input proj expr input col proj expr col alia proj expr alia project oper proj expr project oper attach relat op proj expr attach relat op rang project proj expr rang project start col proj expr start col end col proj expr end col start alia proj expr start alia end alia proj expr end alia plan add alia find column number throw frontend except alia public void set column number alia throw frontend except rang project start alia null start col find col num start alia start alia null end alia null end col find col num end alia end alia null start col string msg invalid start column posit rang project start col throw new plan valid except msg except end col start col end col string msg start column appear end column rang project start column posit start col end column posit end col throw new plan valid except msg except els set col num find col num alia privat int find col num string alia throw frontend except logic plan lp logic plan attach relat op get plan list oper input lp get predecessor attach relat op logic relat oper input logic relat oper input get get input num logic schema input schema input get schema alia null int col num input schema null input schema get field posit alia col num string msg invalid field project project field alia exist input schema null msg schema input schema string fals msg throw new plan valid except msg return col num els int col get col num input schema null col input schema size throw new plan valid except bind access tri access non exist column col schema input schema string fals input schema size column return col link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit input number project refer input number relat oper contain express count zero base return input number public int get input num return input public void set input num int input num input input num column number project refer column number column relat oper contain express count zero base return column number public int get col num rang project throw new assert error get col num call rang project return col public string get col alia return alia public oper get project oper return project oper set column number project call project patcher stupid java need friend param col num new column number project public void set col num int col num col col num alia null column number set alia long need public boolean project star return col public boolean rang project return rang project public boolean rang star project return project star rang project overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema logic relat oper refer find refer logic schema schema null refer get schema null schema refer get schema deep copi attach relat op instanceof gener plan get successor null find refer instanceof inner load inner load find refer sourc bag string alia find refer get alia pair list inner load boolean inner load pair find reacheabl inner load boundari project list inner load inner load inner load pair first boolean need new uid inner load pair second pull tupl inform innerload inner load get get project get field schema schema null inner load get get project get field schema type data type logic field schema origin tupl field schema inner load get get project get field schema schema get field logic field schema new tupl field schema new logic field schema origin tupl field schema alia schema data type need new uid new tupl field schema uid logic express get next uid els new tupl field schema uid origin tupl field schema uid logic schema new tupl schema new logic schema new tupl schema add field new tupl field schema field schema new logic schema logic field schema alia new tupl schema data type els field schema new logic schema logic field schema alia schema data type need new uid field schema uid logic express get next uid els field schema uid inner load get get project get field schema uid els inner load sourc bag schema null get rang star project otherwis inner load convert schema non null rang project end col logic schema inner schema new logic schema int start col end col schema null null alia inner schema add field new logic field schema null null datum type field schema new logic schema logic field schema null inner schema data type els field schema null els field schema schema get field field schema null uid field schema field schema merg uid uid field schema els schema null rang star project rang project end col logic schema inner schema new logic schema int start col end col schema null null alia inner schema add field new logic field schema null null datum type field schema new logic schema logic field schema null inner schema data type els field schema null els field schema new logic schema logic field schema null null datum type field schema null uid field schema field schema merg uid uid field schema els int index rang star project uid field schema null long uid uid field schema uid int schema size logic field schema fs schema get field fs uid uid index index alia null index schema get field posit alia index index col rang star project schema null schema size index field schema schema get field index els field schema new logic schema logic field schema null null datum type uid field schema field schema clone uid els logic schema new tupl schema null project star new tupl schema schema deep copi els project rang new tupl schema new logic schema int start col end col new tupl schema add field schema get field deep copi field schema new logic schema logic field schema null new tupl schema data type uid field schema field schema merg uid uid field schema return field schema find logic relat oper project refer return project refer throw frontend except public logic relat oper find refer throw frontend except list oper pred pred attach relat op get plan get predecessor attach relat op pred null input pred size throw new frontend except project noth refer logic relat oper pred logic relat oper pred get input pred null throw new frontend except find refer return pred overrid public boolean equal oper throw frontend except null instanceof project express project express po project express po input input po col col return fals oper succ get plan get successor null get plan get successor get null oper succ get plan get successor null get plan get successor get null succ null succ null return succ equal succ succ null succ null return true return fals els return fals public string string string builder msg new string builder field schema null field schema alia null msg append field schema alia msg append name name type field schema null msg append data type find type name field schema type els msg append null msg append uid field schema null msg append field schema uid els msg append null msg append input input column alia null msg append alia els project star msg append els rang project msg append append start col append append end col append els msg append col msg append return msg string public logic relat oper get attach relat op return attach relat op public void set attach relat op logic relat oper attach relat op attach relat op attach relat op overrid public byte get type throw frontend except boundari project get field schema null attach relat op instanceof gener find refer instanceof inner load inner load find refer get project rang star project return data type return data type return super get type return start col public int get start col return start col param start col start col set public void set start col int start col start col start col return end col public int get end col return end col param end col end col set public void set end col int end col end col end col param start alia throw frontend except public void set start alia string start alia throw frontend except start alia start alia param end alia throw frontend except public void set end alia string end alia throw frontend except end alia end alia overrid public logic express deep copi logic express plan lg exp plan throw frontend except project express copi new project express lg exp plan get input num get col num get attach relat op copi set locat new sourc locat locat copi alia alia copi project oper project oper copi rang project rang project copi start col start col copi end col end col copi start alia start alia copi end alia end alia return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic visitor import java util array list import java util hash map import java util list import java util map import java util map entri import org apach except import org apach impl logic layer frontend except import org apach impl plan visitor except import org apach impl util multi map import org apach impl util pair import org apach newplan depend order walker import org apach newplan depth first walker import org apach newplan oper import org apach newplan oper plan import org apach newplan plan walker import org apach newplan logic express logic express plan import org apach newplan logic express logic express visitor import org apach newplan logic express project express import org apach newplan logic relat cogroup import org apach newplan logic relat cube import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat join import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat node visitor import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema import com googl common primit boolean visitor walk oper contain nest plan translat project oper list project oper e project project project project n project n input schema null project expand also expand project rang eg will n expand project rang end eg input schema null public class project star expand extend logic relat node visitor public project star expand oper plan plan throw frontend except super plan new depend order walker plan overrid public void visit sort sort throw frontend except list logic express plan exp plan sort get sort col plan list boolean asc order sort get ascend col new expressionplan sort order list star expans list logic express plan new exp plan new array list logic express plan list boolean new asc order new array list boolean exp plan size asc order size throw new assert error size exp plan ascord int exp plan size expand plan logic express plan ith exp plan exp plan get list logic express plan expand plan expand plan ith exp plan new exp plan add expand plan add correspond asc flag boolean asc asc order get int j j expand plan size j new asc order add asc check project star end follow anoth sort plan expand plan happen input schema int new exp plan size project express proj get project star new exp plan get proj null proj rang project proj get end col new exp plan size order sampler logic limit support right string msg project rang end eg x support order last sort column throw new frontend except msg except sort set sort col plan new exp plan sort set ascend col new asc order overrid public void visit rank rank throw frontend except list logic express plan exp plan rank get rank col plan list boolean asc order rank get ascend col list logic express plan new exp plan new array list logic express plan list boolean new asc order new array list boolean exp plan size asc order size throw new assert error size exp plan ascord int exp plan size expand plan logic express plan ith exp plan exp plan get list logic express plan expand plan expand plan ith exp plan new exp plan add expand plan add correspond asc flag boolean asc asc order get int j j expand plan size j new asc order add asc check project star end follow anoth sort plan expand plan happen input schema int new exp plan size project express proj get project star new exp plan get proj null proj rang project proj get end col new exp plan size string msg project rang end eg x support rank last rank column throw new frontend except msg except rank set rank col plan new exp plan rank set ascend col new asc order expand plan multipl plan plan contain project star project star return list contain plan argument param plan return throw frontend except privat list logic express plan expand plan logic express plan plan int input num throw frontend except list logic express plan expand plan project express proj star get project star plan proj star null expand plan multipl plan return expand plan plan proj star input num els project star expand expand plan new array list logic express plan expand plan add plan return expand plan overrid public void visit cogroup cg throw frontend except multi map integ logic express plan inp expr plan cg get express plan modifi plan project star expand plan inp expr plan valid list oper input cg get input logic plan cg get plan check translat none group plan cogroup project still input project schema case error sinc could differ number type cogroup key input size cogroup int input size logic express plan lp inp expr plan get get project star lp null string msg cogroup group x rang column end allow input schema throw new visitor except cg msg except check translat group plan ariti int ariti inp expr plan get size int input size ariti inp expr plan get size string msg ariti cogroup group column match throw new visitor except cg msg except overrid public void visit cube cu throw frontend except multi map integ logic express plan inp expr plan cu get express plan modifi plan project star expand plan inp expr plan overrid public void visit join join throw frontend except expand plan join get express plan overrid public void visit foreach throw frontend except case foreach expand inner plan singl project star input inner load also project star reset input number project express logic plan inner plan foreach get inner plan visit inner plan first plan walker new walker current walker spawn child walker inner plan push walker new walker current walker walk pop walker get gener list oper fe output inner plan get sink gener gen null oper op fe output op instanceof gener gen null string msg expect singl gener output innerplan foreach throw new visitor except foreach msg except gen gener op work gener plan flatten user schema list logic express plan exp plan gen get output plan list logic express plan new exp plan new array list logic express plan list oper lo gen pred inner plan get predecessor gen lo gen pred null inner load must work constant project star expans do return list logic schema user schema gen get user defin schema list logic schema new user schema null user schema null new user schema new array list logic schema boolean flatten gen get flatten flag list boolean new flatten new array list boolean flatten length get map gener predecessor current posit object map integ logic relat oper old po rel new hash map integ logic relat oper int lo gen pred size old po rel put logic relat oper lo gen pred get get schema predecessor project star expans need schema logic relat oper pred logic relat oper foreach get plan get predecessor foreach get logic schema inp sch pred get schema store map project inner plan gener input relat object map project express logic relat oper proj inp rel new hash map project express logic relat oper int exp plan size logic express plan exp plan exp plan get project express proj star get project lone star exp plan old po rel boolean find expand project fals proj star null project star expand logic schema user star sch null user schema null user schema get null user star sch user schema get rang valu set project inner load project express lo inner proj inner load old po rel get proj star get input num get project int first proj col int last proj col lo inner proj rang project lo inner proj set column number alia first proj col lo inner proj get start col last proj col lo inner proj get end col boolean project end lo inner proj project star lo inner proj rang project last proj col can n expand input schema project star project rang end inp sch null project end find expand project true project end last proj col inp sch size replac exist project star new one exp plan remov proj star remov inner load star inner load old inner load inner load old po rel get proj star get input num inner plan disconnect old inner load gen inner plan remov old inner load gener new exp plan inner load field schema int j first proj col j last proj col j add new inner load inner load new load new inner load inner plan foreach j inner plan add new load inner plan connect new load gen new express plan proj logic express plan new exp plan new logic express plan new exp plan add new exp plan project express new proj new project express new exp plan gen proj inp rel put new proj new load new flatten add flatten new user schema null index user specifi schema int sch idx j first proj col user star sch null user star sch get field size sch idx user star sch get field sch idx null project star field user specifi schema use j th field column logic schema sch new logic schema sch add field new logic field schema user star sch get field sch idx new user schema add sch els new user schema add null find expand project project star could expand get project find project find proj new find project exp plan find proj visit list project express proj find proj get proj creat map project express input project express proj proj proj inp rel put proj old po rel get proj get input num new exp plan add exp plan new flatten add flatten new user schema null new user schema add user schema get get map lo gener input relat current posit map logic relat oper integ rel po new hash map logic relat oper integ list oper new gen pred inner plan get predecessor gen int num new gen pred new gen pred null num new gen pred new gen pred size int num new gen pred rel po put logic relat oper new gen pred get correct input num project entri project express logic relat oper proj inp proj inp rel entri set project express proj proj inp get key logic relat oper rel proj inp get valu proj set input num rel po get rel set new list gen set output plan new exp plan gen set flatten flag boolean array new flatten gen set user defin schema new user schema gen reset schema foreach reset schema static class find project extend logic express visitor privat list project express proj new array list project express protect find project logic express plan plan throw frontend except super plan new depth first walker plan overrid public void visit project express proj proj add proj public list project express get proj return proj find project star foreach statement inner load correspond project star also need project star param exp plan express plan param old po rel inner relat plan foreach return project express satisfi condit throw frontend except privat project express get project lone star logic express plan exp plan map integ logic relat oper old po rel throw frontend except express plan singl project exp plan size exp plan size return null oper output op exp plan get oper next output op instanceof project express project express proj project express output op check project express project star proj project star check input inner load project star rang project logic relat oper input rel old po rel get proj get input num input rel instanceof inner load return null project express inner proj inner load input rel get project inner proj rang star project return proj return null privat void expand plan multi map integ logic express plan inp expr plan throw frontend except input relat expand logic plan project star int inp expr plan size list logic express plan plan inp expr plan get list logic express plan new plan new array list logic express plan logic express plan plan plan new plan add expand plan plan inp expr plan remov key inp expr plan put new plan expand plan contain project star multipl plan project singl column param exp plan param proj return throw frontend except privat list logic express plan expand plan logic express plan exp plan project express proj int input num throw frontend except pair integ integ start end proj project star expand util get project start end col exp plan proj list logic express plan new plan new array list logic express plan start end proj null ca n expand project new plan add exp plan return new plan expand first proj col last proj col int first proj col start end proj first int last proj col start end proj second logic relat oper rel op proj get attach relat op int first proj col last proj col new plan add creat exp plan proj rel op input num return new plan creat new logic plan project attach logic relat attach rel project th column input param attach rel param input num param col num return privat logic express plan creat exp plan proj logic relat oper attach rel int input num int col num logic express plan new exp plan new logic express plan project express new proj new project express new exp plan input num col num attach rel new exp plan add new proj return new exp plan logic express plan argument project star output return otherwis return null param exp plan return throw frontend except privat project express get project star logic express plan exp plan throw frontend except list oper output exp plan get sourc project express proj star null oper output op output output op instanceof project express project express proj project express output op proj rang star project output size string msg one oper express plan contain project star project rang throw new visitor except proj msg except proj star proj return proj star 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic rule import java util array list import java util hash map import java util hash set import java util iter import java util list import java util map import java util set import java util map entri import org apach impl logic layer frontend except import org apach impl util pair import org apach newplan oper import org apach newplan oper plan import org apach newplan oper sub plan import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic express project express import org apach newplan logic express user func express import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat nativ import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat split output import org apach newplan logic relat store import org apach newplan logic relat stream import org apach newplan logic relat union import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach newplan optim rule import org apach newplan optim transform public class push filter extend rule public push filter string n super n fals overrid public transform get new transform return new push filter transform public class push filter transform extend transform privat oper sub plan sub plan overrid public boolean check oper plan match throw frontend except check inner join oper current match get sourc get oper pred find non filter predecessor current pred null return fals sort union alway okay pred instanceof sort pred instanceof union return true predecessor one load store stream limit nativ predecessor optim rule filter foreach return fals pred instanceof load pred instanceof store pred instanceof stream pred instanceof filter pred instanceof split pred instanceof split output pred instanceof limit pred instanceof nativ pred instanceof return fals filter filter filter current list oper pred current plan get predecessor pred logic express plan filter plan filter get filter plan optim util plan non determinist udf filter plan return fals nondeterminist udf filter push distinct pred instanceof distinct return true collect uid use filter plan set long uid collect uid exp plan filter plan pred instanceof cogroup cogroup cogrp cogroup pred pred size logic relat oper pred get uid order ok d find previou oper return true els cogrp get express plan get size contain filter plan optim possibl singl key regular cogroup use d determin filter push okay take bag field input return true predecessor multi input oper detail check requir pred instanceof cross pred instanceof join boolean inner flag null boolean full outer true boolean inner true pred instanceof join inner flag join pred get inner flag inner flag fals mean full outer join boolean inner inner flag inner full outer fals els inner fals full outer return fals int j j pred size j logic relat oper pred get j uid join inner flag true indic branch outer join side exact opposit semant pred instanceof cross pred instanceof join inner inner flag j return true return fals privat boolean contain logic express plan filter plan iter oper filter plan get oper next next instanceof user func express return true return fals set long collect uid exp plan logic express plan filter plan throw frontend except set long uid new hash set long iter oper iter filter plan get oper iter next oper op iter next op instanceof project express long uid project express op get field schema uid uid add uid return uid start current oper filter search successor locat non filter oper null return none find privat oper find non filter predecessor oper current oper op current list oper predecessor current plan get predecessor op predecessor return fals predecessor null predecessor size return null oper pred predecessor get pred instanceof filter op pred continu els return pred true overrid public void transform oper plan match throw frontend except sub plan new oper sub plan current plan filter filter filter match get sourc get one insert filter btwn input oper predecessor find non filter predecessor filter sub plan add predecessor disconnect filter plan without remov plan oper predec current plan get predecessor filter get oper succ current plan get successor filter null suc current plan get successor filter get els succ null pair integ integ p current plan disconnect predec filter succ null sub plan add succ pair integ integ p current plan disconnect filter succ current plan connect predec p first succ p second predecessor instanceof sort predecessor instanceof distinct predecessor instanceof cogroup current plan get predecessor predecessor size sort put filter front oper prev current plan get predecessor predecessor get insert filter prev predecessor filter return find predecessor join contain requir uid logic express plan filter plan filter get filter plan list oper pred current plan get predecessor predecessor map integ oper input find input add filter filter plan predecessor pred filter new filter null entri integ oper entri input entri set int input index entri get key oper pred entri get valu find project field offset int column offset predecessor instanceof join predecessor instanceof cross int input index column offset logic relat oper pred get get schema size reus filter first match other need make copi filter add input predecessor new filter new filter null filter new filter logic plan current plan current plan add new filter sub plan add new filter sub plan add pred logic express plan f plan filter plan deep copi list oper sink f plan get sink list project express proj expr new array list project express oper sink sink sink instanceof project express proj expr add project express sink predecessor instanceof cogroup project express proj expr proj expr need merg filter condit cogroup express logic express plan plan cogroup predecessor get express plan get input index iter next logic express plan copi plan deep copi logic express root logic express copi get sink get list oper predecessor f plan get predecessor proj expr predecessor null predecessor size f plan remov proj expr f plan add root els f plan add root oper pred predecessor get pair integ integ pair f plan disconnect pred proj expr f plan connect pred pair first root pair second f plan remov proj expr reset project express new filter plan sink f plan get sink oper sink sink sink instanceof project express project express proj project express sink proj set attach relat op new filter proj set input num proj set col num proj get col num column offset new filter set filter plan f plan insert filter pred predecessor new filter check relat oper contain specifi uid privat boolean logic relat oper op set long uid throw frontend except logic schema schema op get schema schema null return fals long uid uid schema find field uid return fals return true overrid public oper plan report chang return current plan insert filter give two oper privat void insert filter oper prev oper predecessor filter filter throw frontend except pair integ integ p current plan disconnect prev predecessor current plan connect prev p first filter current plan connect filter predecessor p second identifi among pred need filter predecessor privat map integ oper find input add filter logic express plan filter plan oper predecessor list oper pred throw frontend except map integ oper input new hash map integ oper predecessor instanceof union predecessor instanceof cogroup int pred size input put pred get return input collect uid use filter plan set long uid collect uid exp plan filter plan boolean inner flag null boolean inner true predecessor instanceof join inner flag join predecessor get inner flag boolean inner inner flag inner inner fals break find predecessor join contain requir uid int j j pred size j filter push join outer branch inner branch logic relat oper pred get j uid predecessor instanceof cross predecessor instanceof join inner inner flag j oper input pred get j sub plan add input input put j input return input overrid protect oper plan build pattern logic plan plan new logic plan logic relat oper op new filter plan plan add op return plan 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach parser import java io file import java io except import java net import java net syntax except import java util array list import java util hash set import java util list import java util set import org antlr runtim common token stream import org antlr runtim recognit except import org antlr runtim tree common tree import org antlr runtim tree tree import org apach hadoop conf configur import org apach hadoop f path import org apach func spec import org apach configur import org apach store func interfac import org apach backend datastorag contain descriptor import org apach backend datastorag data storag import org apach backend datastorag element descriptor import org apach backend hadoop datastorag configur util import org apach backend hadoop executionengin map reduc layer configur import org apach backend hadoop executionengin shim hadoop shim import org apach builtin storag import org apach impl context import org apach impl io file spec import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan logic relat store import org apach newplan logic relat logic plan import org apach tool pigstat script state public class queri parser util public static string remov quot string str str start u c str end u c return str substr str length els return str public static void attach store plan string scope logic plan lp string file name string func oper input string alia context context throw frontend except func func null context get properti get properti configur storag class get name func func spec func spec new func spec func store func interfac sto func store func interfac context instanti func spec func spec file name remov quot file name file spec file spec new file spec file name func spec string sig alia logic plan builder new oper key scope boolean disambigu enabl boolean pars boolean context get properti get properti configur configur sto func set store func context signatur sig store store new store lp file spec sto func sig disambigu enabl store set alia alia tri sto func rel ab path store locat file name get current dir context catch except ioe frontend except e new frontend except ioe get messag ioe throw e lp add store lp connect input store static path get current dir context context throw except data storag df context get df contain descriptor desc df get activ contain element descriptor el df element desc return new path el string static void set hdf server string absolut path context context throw syntax except first check file system via new properti string default string context get properti get fs default default null check deprec properti must default string context get properti get f default name default new default configur conf new configur true configur util merg conf conf configur util configur context get properti set string remot host get remot host absolut path default conf string hdf server string string context get properti get configur hdf server string null hdf server string string hdf server hdf server string split string remot host remot host boolean exist fals string hdf server hdf server hdf server equal remot host exist true exist hdf server string empti hdf server string hdf server string hdf server string hdf server string remot host hdf server string empti context get properti set properti configur hdf server string static set string get remot host string absolut path default configur conf string default host default get host null default get host lower case string default scheme default get scheme null default get scheme lower case set string result new hash set string string fname absolut path split string fname fname remov lead trail whitespac path path new path fname trim uri path uri uri absolut scheme string host uru get host null uru get host lower case string scheme uri get scheme lower case host scheme continu scheme equal default scheme host equal default host host empti continu string author uru get author null uru get author lower case scheme equal har string part author split scheme part part length author els author part scheme empti scheme equal default scheme author equal default get author continu els hadoop shim file system impl path conf continu result add scheme author return result static string construct file name signatur string file name func spec func spec return file name func spec string static string gener error header recognit except ex string filenam return new sourc locat filenam ex line ex char posit line string suppress warn uncheck rawtyp static void replac node node list tree old node common tree new tree string file name int idx old node get child index common tree parent common tree old node get parent int count parent get child count list child list new array list parent get child list macro list new tree get child parent get child count parent delet child int count idx add someth add macro list null parent add child macro list els parent add child tree child list get static file get file import search path string script path file f new file script path f exist f absolut script path start script path start return f script state state script state get state null state get context null string srch path state get context get properti get properti import search path srch path null string path srch path split string path path file f new file path file separ script path f exist return f return null static queri parser creat parser common token stream token return creat parser token static queri parser creat parser common token stream token int line offset queri parser parser new queri parser token parser node adaptor adaptor new parser node adaptor token get sourc name line offset parser set tree adaptor adaptor return parser 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl builtin import java io except import java util random import org apach datum tupl import org apach hadoop mapreduc record reader import org apach backend hadoop executionengin map reduc layer split loader sampl datum randomli sampl tupl input number tupl sampl set first call get next see document get next call public class random sampl loader extend sampl loader array store sampl tupl tupl sampl null index sampl array next sampl return protect int next sampl idx construct class loader use param func spec func spec loader use param n number sampl per map collect argument pass string instead actual type func spec int func spec support string argument constructor public random sampl loader string func spec string n instanti loader super func spec set number sampl super set num sampl integ valu n alloc buffer num sampl element popul first num sampl tupl continu scan rest input everi ith next call gener random number be r be num sampl insert new tupl buffer posit r give we random sampl tupl partit overrid public tupl get next throw except sampl null return get sampl els collect sampl sampl new tupl num sampl popul sampl array first num sampl tupl tupl null int num sampl loader get next null break sampl row num start int row num num sampl random rand gen new random null exhaust tupl true collect sampl input exhaust int rand rand gen next int row num rand num sampl pick sampl tupl sampl tupl loader get next sampl tupl null break sampl rand sampl tupl els skip tupl skip next break row num return get sampl overrid public void prepar read record reader reader split split throw except super prepar read reader split sampl null next sampl idx privat tupl get sampl next sampl idx sampl length return sampl next sampl idx els return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java io data input import java io data output import java io except import java util iter import org apach except import org apach backend executionengin exec except import org apach backend hadoop executionengin physic layer relat oper packag import org apach impl io nullabl tupl import org apach impl io nullabl writabl bag store tupl memori access iter typic provid hadoop use alreadi iter tupl want copi new bag public class read bag implement data bag packag creat protect packag pkgr iter tupl mark transient never serial protect transient iter nullabl tupl tup iter key work protect nullabl writabl key writabl privat static final long serial version public read bag constructor creat bag exist iter tupl take ownership iter copi element iter param pkg packag lite param tup iter iter nullabl tupl param key object public read bag packag pkgr iter nullabl tupl tup iter nullabl writabl key writabl pkgr pkgr tup iter tup iter key writabl key writabl non javadoc see org apach impl util spillabl get memori size overrid public long get memori size return non javadoc see org apach impl util spillabl spill overrid public long spill throw new runtim except read bag support spill oper non javadoc see org apach datum datum bag add org apach datum tupl overrid public void add tupl throw new runtim except read bag support add oper non javadoc see org apach datum datum bag add org apach datum datum bag overrid public void add datum bag b throw new runtim except read bag support add oper non javadoc see org apach datum datum bag clear overrid public void clear throw new runtim except read bag support clear oper non javadoc see org apach datum datum bag distinct overrid public boolean distinct throw new runtim except read bag support distinct oper non javadoc see org apach datum datum bag sort overrid public boolean sort throw new runtim except read bag support sort oper non javadoc see org apach datum datum bag iter overrid public iter tupl iter return new read bag iter non javadoc see org apach datum datum bag mark stale boolean overrid public void mark stale boolean stale throw new runtim except read bag support mark stale oper non javadoc see org apach datum datum bag size overrid public long size throw new runtim except read bag support size oper non javadoc see org apach hadoop io writabl read field java io data input overrid public void read field data input throw except throw new runtim except read bag support read field oper non javadoc see org apach hadoop io writabl write java io data output overrid public void write datum output throw except int err code string msg read bag never serial throw new exec except msg err code except non javadoc see java lang compar compar java lang object defin sinc data bag implement compar although case realli compar overrid public int compar object throw new runtim except read bag compar overrid public boolean equal object instanceof read bag pkgr get key tupl tup iter read bag tup iter pkgr get key tupl read bag pkgr get key tupl pkgr get key tupl equal read bag pkgr get key tupl return true els return fals els tup iter read bag tup iter pkgr get key equal read bag pkgr get key return true els return fals return fals overrid public int hash code int hash pkgr get key tupl hash hash pkgr get key tupl hash code els hash hash pkgr get key hash code return hash protect class read bag iter implement iter tupl non javadoc see java util iter next overrid public boolean next return tup iter next non javadoc see java util iter next overrid public tupl next nullabl tupl ntup tup iter next int index ntup get index tupl ret null tri ret pkgr get valu tupl key writabl ntup index catch exec except e throw new runtim except read bag fail get valu tupl e string return ret non javadoc see java util iter remov overrid public void remov throw new runtim except read bag iter remov allow 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach datum data type import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat regex oper public class regex express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public regex express oper plan plan logic express lh logic express rh super regex plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof regex express regex express ao regex express return ao get lh equal get lh ao get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null datum type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new regex express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import java io except import java io serializ import java util array import java util list import org apach common log log import org apach common log log factori import org apach classif interfac audienc import org apach classif interfac stabil import org apach datum data type import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl logic layer schema schema field schema import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema import org codehau jackson annot json properti order represen schema use commun load store function separ link schema intern represent schema sinc interfac audienc public interfac stabil stabl json properti order field version sort key sort key order public class resourc schema implement serializ privat static final long serial version privat static log log log factori get log resourc schema class array getter intent return mutabl array instead copi simplifi updat without unnecessari copi setter make copi array order prevent array share two object modif one accident chang initi array empti n worri es setter will not set null privat resourc field schema field new resourc field schema public enum order privat int sort key new int entri offset field array privat order sort key order new order privat int version json properti order name type descript schema public static class resourc field schema implement serializ privat static final long serial version privat string name valu constant data type privat byte type privat string descript nest tupl bag schema privat resourc schema schema construct empti field schema public resourc field schema construct use link org apach impl logic layer schema schema field schema templat param field schema field schema copi public resourc field schema field schema field schema type field schema type name field schema alia descript autogener field schema schema inner field schema schema allow partial schema type data type type data type type data type inner null schema new resourc schema inner els schema null construct use link org apach newplan logic relat logic schema logic field schema templat param field schema field schema copi public resourc field schema logic field schema field schema type field schema type name field schema alia descript autogener field schema logic schema inner field schema schema allow partial schema data type schema type type inner null schema new resourc schema inner els schema null get name field return name public string get name return name set name file param name new name return public resourc field schema set name string name name name return get type field return type link data type static final byte public byte get type return type set type field param type new type return public resourc field schema set type byte type type type return get free form text descript field return descript public string get descript return descript set descript param descript new descript return public resourc field schema set descript string descript descript descript return get schema field type tupl bag map may schema return schema public resourc schema get schema return schema set schema field type tupl bag map may schema param schema new schema return public resourc field schema set schema resourc schema schema throw except valid schema schema schema schema return privat void valid schema resourc schema schema throw except type data type schema null resourc field schema sub field schema get field sub field length sub field type data type throw invalid schema except els throw invalid schema except public static void throw invalid schema except throw frontend except int err code throw new frontend except invalid resourc schema bag schema must tupl field err code except overrid public string string return get descript true public string calc cast string return get descript fals privat string get descript boolean print alia string builder sb new string builder print alia name null sb append name append data type atom type sb append data type find type name type els schema null stringifi resourc schema sb schema type print alia return sb string construct empti resourc schema public resourc schema construct resourc schema link schema param schema schema use public resourc schema schema schema list field schema schema field schema get field field new resourc field schema schema field size int field length field new resourc field schema schema field get construct resourc schema link logic schema param schema schema use public resourc schema logic schema schema list logic field schema schema field schema get field field new resourc field schema schema field size int field length field new resourc field schema schema field get use intern code construct resourc schema link schema param schema schema use param sort info inform datum sort interfac audienc privat public resourc schema schema schema sort info sort info schema sort info null sort info get sort col info list size sort key new int sort info get sort col info list size sort key order new order sort info get sort col info list size int sort info get sort col info list size sort col info col info sort info get sort col info list get int index col info get col index order order org apach sort col info order orig order col info get sort order orig order org apach sort col info order order order els order order sort key index sort key order order use intern code construct resourc schema link logic schema param schema logic schema use param sort info inform datum sort interfac audienc privat public resourc schema logic schema schema sort info sort info schema sort info null sort info get sort col info list size sort key new int sort info get sort col info list size sort key order new order sort info get sort col info list size int sort info get sort col info list size sort col info col info sort info get sort col info list get int index col info get col index order order org apach sort col info order orig order col info get sort order orig order org apach sort col info order order order els order order sort key index sort key order order get version schema return version public int get version return version public resourc schema set version int version version version return get field schema field return array field schema public resourc field schema get field return field get field name return array field name public string field name string name new string field length int field length name field get name return name set field field current null new field silent ignor param field use field schema return public resourc schema set field resourc field schema field field null field array copi field field length return get sort key datum return array int integ array repres field number schema datum b c datum sort c b return sort key field number zero base datum sort zero length array return public int get sort key return sort key set sort key hti datum sort key current null new sort key silent ignor param sort key integ array repres field number schema datum b c datum sort c b sort key field number zero base return public resourc schema set sort key int sort key sort key null sort key array copi sort key sort key length return get order sort key return array order array length int array return link get sort key public order get sort key order return sort key order set order sort key order current null new order silent ignor param sort key order array order length int pass link set sort key return public resourc schema set sort key order order sort key order sort key order null sort key order array copi sort key order sort key order length return test whether two resourc schema two schema say null number field field name type field may schema e tupl schema equal field descript use test equal return true equal accord definit otherwis fals public static boolean equal resourc schema rs resourc schema rs rs null return rs null true fals rs null return fals rs get version rs get version array equal rs get sort key rs get sort key array equal rs get sort key order rs get sort key order return fals resourc field schema rf rs get field resourc field schema rf rs get field rf length rf length return fals int rf length rf get name null rf get name null rf get name null rf get name null return fals rf get name null rf get name null rf get type rf get type return true els return fals rf get name equal rf get name rf get type rf get type return fals equal rf get schema rf get schema return fals return true overrid public string string string builder sb new string builder stringifi resourc schema sb data type true return sb string privat static void stringifi resourc schema string builder sb resourc schema rs byte type boolean print alia type data type sb append els type data type sb append els type data type sb append rs null int rs get field length sb append rs get field get descript print alia rs get field length sb append type datum type sb append els type data type sb append els type data type sb append 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import java io serializ import java util array import org apach classif interfac audienc import org apach classif interfac stabil class repres statist datum load store mark unstabl littl statist collect point function add expect interfac chang sinc interfac audienc public interfac stabil unstabl public class resourc statist implement cloneabl getter intent return mutabl array instead copi simplifi updat without unnecessari copi setter make copi array order prevent array share two object modif one accident chang array initi empti n worri es setter disallow set null privat static final long serial version privat long num record number record privat long avg record size averag record size byte privat resourc field statist field new resourc field statist privat long byte statist give field datum public static class resourc field statist implement serializ privat static final long serial version privat int version privat long num distinct valu number distinct valu repres field need way repres histogram valu field use howev can n count abl hold histogram memori figur keep disk repres n creat mani bucket can not hold memori order array common valu descend order frequenc privat object common valu new object array match common valu array list frequenc valu fraction total number record privat float common valu freq new float order array valu min val max val number record valu valu histogram valu histogram roughli equal valu common valu non empti valu array includ histogram adjust accordingli privat object valu histogram new object public int get version return version public resourc field statist set version int version version version return public long get num distinct valu return num distinct valu public resourc field statist set num distinct valu long num distinct valu num distinct valu num distinct valu return public object get common valu return common valu public resourc field statist set common valu object common valu common valu null common valu array copi common valu common valu length return public float get common valu freq return common valu freq public resourc field statist set common valu freq float common valu freq common valu freq null common valu freq array copi common valu freq common valu freq length return public object get valu histogram return valu histogram public resourc field statist set valu histogram object valu histogram valu histogram null valu histogram array copi valu histogram valu histogram length return equal hash code overrid mostli eas test n encount situat need equal two set statist differ object wild overrid public boolean equal object null get class equal get class return fals resourc field statist resourc field statist setter allow null valu worri es return array equal common valu common valu array equal common valu freq common valu freq array equal valu histogram valu histogram num distinct valu equal num distinct valu version version naiv hash code implement follow exampl developerwork http www ibm com developerwork java librari j jtp html overrid public int hash code int hash hash hash array hash code common valu hash hash array hash code common valu freq hash hash num distinct valu hash code hash hash array hash code valu histogram hash hash version return overrid public string string string builder sb new string builder resourc statist version version n sb append n object common valu sb append string sb append n vfreq n float f common valu freq sb append f string sb append n sb append num dist val num distinct valu sb append val histogram n object valu histogram sb append string sb append n return sb string public long getm byte return byte param byte deprec use link resourc statist set size byte long instead deprec public resourc statist setm byte long byte byte byte return set size byte param byte public void set size byte long byte byte byte return size byte public long get size byte return byte public long get num record return num record public resourc statist set num record long num record num record num record return return averag record size byte number explicitli specifi statist absent comput use totalbyt totalrecord return null can n comput public long get avg record size avg record size null byte null num record null return byte num record els return avg record size set averag record size byte param size byte public void set avg record size long size byte avg record size size byte public resourc field statist get field return field public resourc statist set field resourc field statist field field null field array copi field field length return equal hash code overrid mostli eas test n encount situat need equal two set statist differ object wild overrid public boolean equal object null get class equal get class return fals resourc statist resourc statist return array equal field field byte null byte null byte equal byte num record null num record null num record equal num record overrid public int hash code int hash hash hash array hash code field hash hash byte null byte hash code hash hash num record null num record hash code return hash probabl overrid public string string string builder sb new string builder field stat n resourc field statist f field sb append f string sb append byte byte sb append num record num record return sb string public object clone throw clone support except return super clone 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util list import org apach eval func import org apach backend executionengin exec except import org apach datum bag factori import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl logic layer schema schema field schema import com googl common collect list produc datum bag hierarchi valu detail level aggreg gener level aggreg specifi dimens exampl b c produc follow bag pre b c b null null null null null null pre public class rollup dimens extend eval func data bag privat static bag factori bf bag factori get instanc privat static tupl factori tf tupl factori get instanc privat final string marker public rollup dimens null public rollup dimens string marker super marker marker overrid public datum bag exec tupl tupl throw except list tupl result list new array list capac tupl size cube dimens convert null unknown tupl result add tupl iter rollup result tupl return bf new default bag result privat void iter rollup list tupl result tupl input throw exec except tupl temp tup tf new tupl input get int input size temp tup set marker result add tf new tupl temp tup get overrid public schema output schema schema input dimens string default namespac assign output schema overrid specifi user defin schema name foreach oper user defin schema name specifi output schema foreach oper use dimens namespac field tupl tri return new schema new field schema dimens input data type catch frontend except e specifi explicitli happen throw new runtim except e overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan optim import java util array list import java util dequ import java util hash set import java util iter import java util link list import java util list import java util set import org apach common log log import org apach common log log factori import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan oper sub plan rule describ pattern oper also refer transform pattern oper find one time provid plan optim use associ transform transform plan note pattern match logic implement limit assum leaf pattern sibl see detail descript http issu apach org jira brows new rule use pattern n work limit pattern match logic need updat public abstract class rule protect string name null protect oper plan pattern transient protect oper plan current plan protect static final log log log factori get log rule class privat transient set oper match node new hash set oper privat boolean mandatori privat boolean skip listen fals creat rule use default pattern rule provid param n name rule param mandatori set fals rule disabl user public rule string n boolean mandatori name n pattern build pattern mandatori mandatori param n name rule param p pattern look public rule string n oper plan p name n pattern p build pattern rule look return pattern look rule abstract protect oper plan build pattern get transform rule abstract rule may want choos instanti transform never return cach transform alway return fresh one state return transform use rule abstract public transform get new transform return pattern match rule return pattern match rule public oper plan get pattern return pattern protect boolean skip listen return skip listen protect void set skip listen boolean skip skip listen skip search sub plan match pattern defin rule see class descript limit pattern support return list match sub plan return plan partial view origin oper plan sub set origin plan repres topolog pattern oper return plan object origin plan therefor call get plan node return plan would return origin plan param plan oper plan look match pattern public list oper plan match oper plan plan throw frontend except current plan plan list oper leav pattern get sink iter oper iter plan get oper list oper plan match list new array list oper plan match node clear iter next oper op iter next find node match first leaf pattern match op leav get list oper plan op new array list oper plan op add op leaf pattern check leav match sibl node leav size boolean match true list oper pred null pred plan get predecessor op node predecessor must root pred null pred new array list oper pred add null oper pred match true list oper sibl null null sibl plan get successor els root get sibl get root sibl plan get sourc int index sibl index op sibl size index leav size continu int j j leav size j match sibl get index j leaf get j match fals break match int j j leav size j plan op add sibl get index j move next oper one n sibl match leaf match continu pattern match oper plan match new pattern match oper plan plan match check plan op find match pattern add oper match node iter oper iter match get oper iter next oper opt iter next match node add opt add pattern match list add match return match list public string get name return name public boolean mandatori return mandatori check two oper match want find match n share node privat boolean match oper plan node oper pattern node return plan node get class equal pattern node get class match node contain plan node privat class pattern match oper plan extend oper sub plan public pattern match oper plan oper plan base plan super base plan protect boolean check list oper plan op throw frontend except list oper pattern op pattern get sink plan op size pattern op size return fals int plan op size dequ oper new link list oper check plan op get pattern op get return fals iter oper iter iter iter next add iter next size pattern size return true return fals check plan oper sub tree match pattern oper sub tree algorithm search return one match n recurs search possibl match exampl plan look like join load load look join load pattern one match return instead two match subset n share node privat boolean check oper plan op oper pattern op dequ oper oper throw frontend except match plan op pattern op return fals check predecessor match list oper pred get base plan get predecessor plan op list oper pred pattern get predecessor pattern op pred null pred null return fals pred null pred null pred size pred size return fals reach root pattern match find pred null pred size oper push plan op return true int index look predecessor index pred size boolean match true match pred get index pred get pred size index pred size return fals int old size oper size int pred size check pred get index pred get oper int j oper size j old size j oper pop match fals break match oper push plan op return true index return fals 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl builtin import java io except import java util array list import org apach hadoop f path import org apach hadoop mapreduc input format import org apach hadoop mapreduc job import org apach hadoop mapreduc record reader import org apach load caster import org apach load func import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer split import org apach impl context import org apach impl io file spec import org apach impl util pair abstract class specifi interfac sampl loader public abstract class sampl loader extend load func number sampl sampl protect int num sampl protect load func loader record reader use underli loader privat record reader record reader null public sampl loader string func spec func spec func spec replac loader load func context instanti func spec func spec public void set num sampl int n num sampl n public int get num sampl return num sampl overrid public input format get input format throw except return loader get input format public boolean skip next throw except tri return record reader next key valu catch interrupt except e throw new except error get input e public void comput sampl array list pair file spec boolean input context pc throw exec except overrid public load caster get load caster throw except return loader get load caster overrid public string rel absolut path string locat path cur dir throw except return loader rel absolut path locat cur dir overrid public void prepar read record reader reader split split throw except loader prepar read reader split record reader reader overrid public void set locat string locat job job throw except loader set locat locat job overrid public void set context signatur string signatur loader set context signatur signatur 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import java io except import java util array list import java util list import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach func spec import org apach backend hadoop datastorag configur util import org apach backend hadoop executionengin map reduc layer plan op plan visitor import org apach backend hadoop executionengin map reduc layer plan oper plan import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper constant express import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper import org apach backend hadoop executionengin physic layer relat oper load import org apach impl io file spec import org apach impl plan depth first walker import org apach impl plan plan except import org apach impl plan plan walker import org apach impl plan visitor except import org apach impl util util import org apach impl context visitor optim plan sampl job immedi follow load store job kind plan gener order by soon gener join need sampl datum first chang random sampl loader subsum loader use first job remov first job public class sampl optim extend op plan visitor privat static final log log log factori get log sampl optim class privat context context public sampl optim oper plan plan context context super plan new depth first walker map reduc oper oper plan plan context context privat list map reduc oper op remov new array list map reduc oper overrid public void visit throw visitor except super visit remov oper mark remov map reduc oper op op remov plan remov op overrid public void visit op map reduc oper mr throw visitor except see sampl job list physic oper po mr map plan get root po null po size log debug map oper empti return physic oper po po get po instanceof load log debug root oper map load return huh load load load po string load func load get file get func name string load file load get file get file name org apach impl builtin random sampl loader equal load func org apach impl builtin poisson sampl loader equal load func log debug sampl job return load file null log debug load file return get job predecessor exactli one list map reduc oper pred plan get predecessor mr pred size log debug mani predecessor sampl job return map reduc oper pred pred get predecessor root list map reduc oper pred pred plan get predecessor pred pred pred null pred pred size log debug predecessor root plan return predecessor load store map noth combin reduc pred reduc plan empti pred combin plan empti log debug predecessor combin reduc plan return job one successor list map reduc oper succ plan get successor mr succ size log debug job one successor return map reduc oper succ succ get pred map plan null pred map plan size log debug predecessor load store map return list physic oper load pred map plan get root load size log debug predecessor plan one root return physic oper be load get r instanceof load huh log debug predecessor map plan root load return load pred load load r find load correl file sampler load check use temp file storag format succ map plan null huh log debug successor map plan return load succ map plan get root load succ load null physic oper root load root instanceof load huh log debug successor root load return load sl load root load file equal sl get file get file name util get tmp file compressor name context equal sl get file get func name succ load sl break succ load null log debug could find load match file sampl return okay first replac random sampl loader random sampl loader use load function predecessor string rslarg new string file spec pred fs pred load get file first argument func spec loader function subsum want set rslarg pred fs get func spec string add loader funcspec list udf associ mr oper mr fs add rslarg second argument number sampl per block read origin rslarg load get file get func spec get ctor arg file spec fs new file spec pred fs get file name new func spec load func rslarg load new load new load load get oper key load get request parallel f new load set signatur pred load get signatur new load set limit pred load get limit tri mr map plan replac load new load check partit skew key list physic oper ls mr reduc plan get leav physic oper op l scan mr op f get file name catch plan except e throw new visitor except e second replac loader successor whatev origin use loader fs new file spec pred fs get file name pred fs get func spec new load new load succ load get oper key succ load get request parallel f new load set signatur pred load get signatur tri succ map plan replac succ load new load add loader funcspec list udf associ mr oper succ fs add new load get file get func spec string catch plan except e throw new visitor except e delet pred right still travers graph mark pred remov plan visit optim complet op remov add pred search partion skew key updat input file name alway oper reduc plan privat void scan map reduc oper mr physic oper op string file name op instanceof user func user func op get func spec get class name equal org apach impl builtin partit skew key string ctor arg user func op get func spec get ctor arg ctor arg file name return els op instanceof list physic plan pl op get input plan physic plan plan pl list physic oper list plan get leav physic oper pp list scan mr pp file name els list physic oper pred mr reduc plan get predecessor op pred null return physic oper p pred scan mr p file name 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl logic layer schema import java io serializ import java util array list import java util collect import java util hash map import java util hash set import java util iter import java util list import java util map import java util set import org apach common log log import org apach common log log factori import org apach except import org apach resourc schema import org apach resourc schema resourc field schema import org apach datum data type import org apach impl logic layer canon namer import org apach impl logic layer frontend except import org apach impl util multi map schema class encapsul notion schema relat oper schema list column describ output relat oper column relat repres field schema static class insid schema column definit alia type possibl schema column bag tupl addit column schema uniqu auto gener name use track lineag column sequenc statement lineag column track use map predecessor column oper gener predecessor column predecessor column column requir order gener column consider similarli revers lookup oper gener predecessor column predecessor column maintain public class schema implement serializ cloneabl privat static final long serial version public static class field schema implement serializ cloneabl privat static final long serial version alia field public string alia datatyp use code link org apach datum data type public byte type tupl schema otherwis field must null public schema schema canon name name uniqu identifi field throughout queri unlik alia chang chang field transform way use arithmet express pass udf point new canon name gener field public string canon name null canon namer object gener new canon name request order ensur uniqu consist name across field schema object object make static public static final canon namer canon namer new canon namer privat static log log log factori get log schema field schema class constructor type param alia know unknown leav null param type use code link org apach datum data type public field schema string byte alia type schema null canon name canon namer get new name constructor tupl field param alia know unknown leav null param schema tupl public field schema string schema alia type data type schema canon name canon namer get new name constructor tupl field param alia know unknown leav null param schema tupl param type use code link org apach datum data type public field schema string schema byte throw frontend except alia schema log debug bag data type tupl data type null data type schema type int err code throw new frontend except schema get data type find type name err code except type canon name canon namer get new name copi constructor param fs sourc field schema public field schema field schema fs null f alia f alia null f schema schema new schema fs schema els schema null type fs type els alia null schema null type data type canon name canon namer get new name two field schema equal type schema equal level order relax alia equival requir instead use equal field schema fschema field schema fother boolean relax inner boolean relax alia overrid public boolean equal object instanceof field schema return fals field schema otherf field schema return field schema equal otherf fals fals overrid public int hash code return type schema null schema hash code alia null alia hash code recurs compar two schema check input schema cast cast schema param cast fs schema cast oper param input fs schema cast input return true falsew public static boolean castabl schema field schema cast fs schema field schema input fs cast fs null input fs null return fals cast fs null return fals input fs null return fals byte input type input fs type byte cast type cast fs type data type schema type cast fs type input type data type good els input type cast type n comparison emb schema null caus schema equal return fals even though want view true cast fs schema null input fs schema null compar recurs use schema schema castabl cast fs schema input fs schema return fals els return fals els input type cast type good els input type data type cast type data type cast type data type data type number type cast type good els data type number type input type cast type data type cast type data type data type number type cast type cast type data type cast type data type good els input type data type cast type data type cast type data type data type number type cast type good els input type data type cast type data type data type number type cast type cast type data type cast type data type good els input type data type good els return fals return true compar two field schema equal param fschema param fother param relax inner true n check inner tupl schema param relax alia true n check alias return true field schema equal fals otherwis public static boolean equal field schema fschema field schema fother boolean relax inner boolean relax alia fschema null return fals fother null return fals fschema type fother type return fals relax alia fschema alia null fother alia null good els fschema alia null fother alia null return fals els fschema alia null fother alia null return fals els fschema alia equal foth alia return fals relax inner data type schema type fschema type n comparison emb schema null caus schema equal return fals even though want view true fschema schema null fother schema null compar recurs use schema schema equal fschema schema fother schema fals relax alia return fals return true overrid public string string string builder sb new string builder alia null sb append alia sb append sb append data type find type name type schema null sb append sb append schema string sb append canon name null sb append cn sb append canon name return sb string make deep copi field schema return return clone field schema throw clone support except overrid public field schema clone throw clone support except string immut n need copi alia schema mutabl need make copi tri field schema fs new field schema alia schema null null schema clone type fs canon name canon namer get new name return f catch frontend except fe throw new runtim except never fail clone field schema fe recurs prefix merg two schema param fs field schema merg return prefix merg field schema null one schema null allow incompat type true throw schema merg except merg public schema field schema merg prefix field schema schema field schema fs throw schema merg except return merg prefix field schema fs true fals recurs prefix merg two schema param fs field schema merg param take alia preced true alia field schema take preced return prefix merg field schema null one schema null allow incompat type true throw schema merg except merg public schema field schema merg prefix field schema schema field schema fs boolean take alia preced throw schema merg except return merg prefix field schema fs take alia preced fals recurs prefix merg two schema param fs field schema merg param take alia preced true alia field schema take preced param allow mergeabl type true mergeabl type allow two type mergeabl follow condit true check either one type null unknown type null unknown result type latter non null unknown type either type bytearray result type possibl non type current type cast type result type type return prefix merg field schema null throw schema merg except merg public schema field schema merg prefix field schema schema field schema fs boolean take alia preced boolean allow mergeabl type throw schema merg except schema field schema fs schema field schema merg fs null byte merg type data type null fs return fs null unknown type fs null unknown type fs int err code string msg type mismatch use type merg field schema fs field schema fs throw new schema merg except msg err code except els fs type fs type merg type fs type els null unknown type fs null unknown type fs merg type fs type els allow mergeabl type null unknown type fs null unknown type fs merg type fs type els fs type datum type set merg type fs type could even merg type fs type els castabl fs fs merg type fs type els int err code string msg type mismatch merg schema prefix field schema fs field schema fs throw new schema merg except msg err code except els int err code string msg type mismatch merg schema prefix field schema fs field schema fs throw new schema merg except msg err code except string merg alia merg alia fs alia fs alia take alia preced data type schema type merg type normal merg merg fs new field schema merg alia merg type els schema merg sub schema null merg inner schema side schema null fs schema merg sub schema fs schema merg prefix schema fs schema take alia preced allow mergeabl type els merg sub schema fs schema set schema default type merg sub schema data type creat merg field tri merg fs new field schema merg alia merg sub schema merg type catch frontend except fee int err code string msg unabl creat field schema throw new schema merg except msg err code except fee return merg fs recurs set type specifid type param f field schema whose type set param specifi type public static void set field schema default type schema field schema fs byte null f return data type fs type fs type data type schema type f type set schema default type f schema privat boolean null unknown type field schema fs return f type data type f type data type find field schema instanc field schema hierarchi includ match give canon name param canon name canon name return field schema instanc find public field schema find field schema string canon name canon name equal canon name return schema null return schema find field schema canon name return null privat list field schema field privat map string field schema alias privat multi map string string field schema privat static log log log factori get log schema class bag schema tupl contain field present access second field say actual tri access second field tupl bag current true two case bag constant schema bag constant tupl intern actual element bag load input datum user specifi schema bag type specifi bag contain tupl actual element schema declar howev case user still say b b bag element bag tupl schema case access translat lookup tupl schema present bag indic flag use fals default current use bag type relat howev schema relat tupl fieldschema item instead schema directli field schema item relat b b access would direct singl level access b schema treat default case privat boolean two level access requir fals public schema field new array list field schema alias new hash map string field schema field schema new multi map string string param field list field schema describ field public schema list field schema field field field alias new hash map string field schema field size field schema new multi map string string field schema f field null fs fs alia null alias put f alia f field schema put f canon name f alia creat schema one field param field schema field put schema public schema field schema field schema field new array list field schema field add field schema alias new hash map string field schema field schema new multi map string string null field schema field schema alia null alias put field schema alia field schema field schema put field schema canon name field schema alia copi constructor param sourc schema public schema schema null two level access requir two level access requir field new array list field schema size alias new hash map string field schema field schema new multi map string string tri int size field schema fs new field schema get field field add fs null f f alia null alias put f alia f field schema put f canon name f alia catch frontend except pe field new array list field schema alias new hash map string field schema field schema new multi map string string els field new array list field schema alias new hash map string field schema field schema new multi map string string give alia name find associ field schema param alia alia look return field schema null alia tupl public field schema get field string alia throw frontend except field schema fs alias get alia null f string coco prefix alia map string integ alia match new hash map string integ build map alia coco prefix suffix string key alias key set key end coco prefix integ count alia match get key null count alia match put key els alia match put key count process map check multipl key count key count never occur ther singl key count match alia match key set size return null alia match key set size object key alia match key set array string key string key alia match get key int err code throw new frontend except find duplic alia key err code except return alia get key els check multipl alia obtain actual point field schema return field schema set field schema set new hash set field schema string key alia match key set set add alia get key set size return set iter next boolean next fals string builder sb new string builder find one match string key alia match key set next sb append els next true sb append key int err code throw new frontend except sb string err code except els return fs give alia name find associ field schema exact name find see field match part namespac alia eg give alia nm schema b return field schema give alia nm schema nm b return null param alia alia look return field schema null alia tupl public field schema get field sub name match string alia throw frontend except alia null return null field schema fs get field alia fs null return fs fs null final string sep array list field schema match field schema new array list field schema alia contain sep field schema field field alia end sep field alia match field schema add field match field schema size boolean next fals string builder sb new string builder find one sub alia name match field schema match fs match field schema next sb append els next true sb append match fs alia int err code throw new frontend except sb string err code except els match field schema size fs match field schema get return f give field number find associ field schema param field num field number look return field schema field throw pars except field number exceed number field tupl public field schema get field int field num throw frontend except field num field size int err code string detail msg attempt access field field num schema string msg attempt fetch field field num schema size field size throw new frontend except msg err code except fals detail msg return field get field num find number field schema return number field public int size return field size reconcil schema anoth schema schema reconcil number column use case schema alreadi exist may alia type inform alia exist schema new one give new one use similarli type though need use care type lightli chang param schema reconcil throw pars except reconcil public void reconcil schema throw frontend except null size size int err code string msg reconcil schema differ size schema size size size size string detail msg schema size mismatch schema schema throw new frontend except msg err code except fals detail msg iter field schema field iter int j next j field schema fs next field schema fs field get j log debug fs fs fs fs fs alia null log debug fs alia fs alia fs alia null log debug remov fs alia fs alia alia remov fs alia collect string alias field schema get fs canon name alias null list string list alias new array list string string alia alia list alias add alia string alia list alia log debug remov alia alia multimap field schema remov fs canon name alia fs alia fs alia log debug set alia fs alia alia put fs alia fs null fs alia field schema put fs canon name fs alia fs type data type fs type fs type log debug set type datum type find type name fs type fs schema null fs schema fs schema log debug set schema fs schema two schema equal deepli equal use schema equal schema schema schema boolean relax inner boolean relax alia relax alias requir overrid public boolean equal object instanceof schema return fals schema schema return schema equal fals fals make deep copi schema throw clone support except overrid public schema clone throw clone support except schema new schema build map old new field schema properli construct new alia field schema map popul field list copi exist field schema map field schema field schema fs map new hash map field schema field schema size map string field schema fs canon name map new hash map string field schema size field schema fs field field schema copi f clone field add copi f map put f copi fs canon name map put f canon name copi build alias map string alia alia key set field schema old fs alias get alia assert old fs null field schema new fs fs map get old fs assert new fs null alias put alia new fs build field schema map string old fs canon name field schema key set field schema new fs fs canon name map get old fs canon name assert new fs null field schema put new fs canon name field schema get old fs canon name two level access requir two level access requir return static int prime list overrid public int hash code int idx int hash code field schema fs field hash code fs hash code prime list idx prime list length idx return hash code overrid public string string return indent string integ public string pretti print return indent string privat string indent string int indent level string builder sb new string builder tri stringifi schema sb data type indent level catch frontend except fee throw new runtim except return sb string public static void stringifi schema string builder sb schema schema byte type throw frontend except stringifi schema sb schema type use build output string type public static void stringifi schema string builder sb schema schema byte type int indent level throw frontend except type data type sb append els type data type sb append indent level schema null boolean first true int schema size first sb append els first fals indent sb indent level field schema f schema get field fs null continu f alia null sb append f alia sb append data type atom fs type sb append data type find type name f type els f type data type f type data type safeti net schema f schema stringifi schema sb fs schema f type indent level els throw new assert error schema refer inner schema els f type data type sb append data type find type name f type fs schema null stringifi schema sb fs schema f type indent level sb append els sb append data type find type name f type indent level indent sb indent level type data type sb append els type data type sb append op indent level neg br otherwis print newlin indent level space privat static void indent string builder sb int indent level indent level sb append n indent level sb append space public void add field schema f field add f null f field schema put f canon name f alia null f alia alia put f alia f give alia find associ posit field schema param alia alia field schema return posit field schema public int get posit string alia throw frontend except return get posit alia fals give alia find associ posit field schema use get field sub name match look sub name match well param alia alia field schema return posit field schema public int get posit sub name string alia throw frontend except return get posit alia true privat int get posit string alia boolean sub name match throw frontend except sub name match two level access requir happen int err code string msg two level access requir true support sub name match true throw new frontend except msg err code except two level access requir case schema bag one tupl fieldschema turn list fieldschema alia suppli treat alia tupl schema check inde one field schema tupl field size int err code string msg expect bag schema singl element type data type find type name data type get bag schema multipl element throw new frontend except msg err code except schema field schema tupl field get tupl type data type int err code string msg expect bag schema singl element type data type find type name data type get element type data type find type name tupl type throw new frontend except msg err code except check alia suppli tupl disallow sinc allow access tupl allow access field tupl alia equal tupl alia int err code string msg access tupl alia bag disallow access element tupl bag allow throw new frontend except msg err code except good get posit tupl schema return tupl schema get posit alia els field schema f sub name match get field sub name match alia get field alia null f return log debug f fs int index int field size log debug field field get alia field get alia fs field get index log debug index index return index return field index fs public void add alia string alia field schema fs null alia alia put alia fs null fs field schema put f canon name alia public set string get alias return alias key set public void print alia set string alia name alia key set string alia alia name log debug schema alia alia public list field schema get field return field recurs compar two schema check input schema cast cast schema param cast schema cast oper param input schema cast input return true falsew public static boolean castabl schema cast schema input null castabl cast null input null return fals otherwis cast null return fals input null return fals cast size input size return fals iter field schema cast field iter iter field schema j input field iter next iter number field cast field schema cast fs next field schema input fs j next compar recurs use field schema field schema castabl cast fs input fs return fals return true recurs compar two schema equal param schema param param relax inner true inner schema check param relax alia true alia check return true schema equal fals otherwis public static boolean equal schema schema schema boolean relax inner boolean relax alia null equal schema null null return true otherwis schema null return fals null return fals need check bag schema bag tupl turn schema retriev tupl schema bag two level access requir assum bag exhibit behavior two level access requir use right intent schema two level access requir two level access requir schema two level access requir tri schema schema get field schema catch frontend except fee return fals two level access requir tri get field schema catch frontend except fee return fals return schema equal schema relax inner relax alia schema size size return fals iter field schema schema field iter iter field schema j field iter next field schema fs next field schema fs j next relax alia fs alia null fs alia null good els fs alia null fs alia null return fals els fs alia null fs alia null return fals els fs alia equal fs alia return fals fs type fs type return fals relax inner compar recurs use field schema field schema equal fs fs fals relax alia return fals return true merg schema schema param schema merg param take alia preced true alia schema take preced return merg schema null compat public schema merg schema boolean take alia preced return merg schema take alia preced recurs merg two schema param schema initi schema param schema merg param take alia preced true alia schema take preced return merg schema null compat public static schema merg schema schema schema schema boolean take alia preced tri schema new schema merg schema schema take alia preced fals fals return new schema catch schema merg except sme mean compat return null recurs merg two schema param schema initi schema param schema merg param take alia preced true alia schema take preced param allow differ size merg allow merg schema differ type param allow incompat type type schema compat treat byte array untyp schema schema compat allow incompat type true inner schema output null return merg schema null one schema null allow incompat type true throw schema merg except merg public static schema merg schema schema schema schema boolean take alia preced boolean allow differ size merg boolean allow incompat type throw schema merg except schema null null null incompat return null schema null allow incompat type return null els int err code string msg one schema null merg schema schema schema schema throw new schema merg except msg err code except null allow incompat type return null els int err code string msg one schema null merg schema schema schema schema throw new schema merg except msg err code except schema size size allow differ size merg int err code string msg differ schema size merg schema schema size schema size schema size size throw new schema merg except msg err code except list field schema output list new array list field schema list field schema mylist schema field list field schema otherlist field iter small one size int iter limit schema field size field size field size schema field size int idx idx iter limit idx readabl field schema fs mylist get idx field schema fs otherlist get idx byte merg type data type merg type fs type fs type type merg merg type data type treat incompat byte array true treat bytearray allow incompat type merg type data type otherwis schema merg els int err code string msg incompat type merg schema field schema type data type find type name fs type field schema type data type find type name fs type throw new schema merg except msg err code except string merg alia merg alia fs alia fs alia take alia preced field schema merg fs null data type schema type merg type normal merg merg fs new field schema merg alia merg type els merg inner tupl side tupl inner schema incompat allow incompat type true except throw merg schema schema merg sub schema merg schema fs schema fs schema take alia preced allow differ size merg allow incompat type creat merg field merg sub schema true allow incompat type tri merg fs new field schema merg alia merg sub schema merg type catch frontend except e int err code string err msg intern error unexpect error creat field schema throw new schema merg except err msg err code except e output list add merg fs handl differ schema size allow differ size merg first schema leftov append rest int idx mylist size field schema fs mylist get non schema type data type schema type fs type output list add new field schema f alia f type els field schema tmp new field schema fs alia f schema tmp type fs type output list add tmp second schema leftov append rest int idx otherlist size field schema fs otherlist get non schema type data type schema type fs type output list add new field schema f alia f type els field schema tmp new field schema fs alia f schema tmp type fs type output list add tmp schema result new schema output list schema two level access requir two level access requir int err code string err msg merg schema schema one two lever access flag n throw new schema merg except err msg err code except schema two level access requir result set two level access requir true return result merg two alia one alias null return otherwis check preced condit param alia param param take preced return privat static string merg alia string alia string boolean take preced alia null return els null return alia els take preced return els return alia merg collect schema use column alia unlik merg schema function merg use posit schema merg type incompat per data type merg type tupl bag sub schema equal consid compat param schema list schema merg use column alia return merg schema throw schema merg except public static schema merg schema alia collect schema schema throw schema merg except schema merg schema null list schema current merg use error messag array list schema merg schema new array list schema schema size schema sch schema merg schema null merg schema new schema sch merg schema add sch continu tri merg schema merg schema alia merg schema sch merg schema add sch catch schema merg except e string msg error merg schema sch merg schema merg schema schema merg schema schema merg except sme new schema merg except msg e get error code e sme set mark show user true throw sme return merg schema merg two schema use column alia unlik merg schema function merg use posit schema merg type incompat per data type merg type tupl bag sub schema equal consid compat param schema param schema return merg schema throw schema merg except schema merg public static schema merg schema alia schema schema schema schema throw schema merg except schema merg schema new schema hash set field schema schema col add new hash set field schema add merg field present first schema field schema fs schema get field check null alia fs schema field schema fs get field sub name match throw schema merg except schema f alia fs null schema col add contain f alia correspond multipl field schema lookup schema throw appropri error get field sub name match throw schema merg except schema f alia schema col add add fs field schema merg fs merg field schema first level alia fs fs merg schema add merg fs add schema nd schema alreadi present merg schema field schema fs schema get field check null alia fs schema schema col add contain f tri merg schema add f clone catch clone support except e throw new schema merg except error encount merg schema e return merg schema privat static void check null alia field schema fs schema schema throw schema merg except fs alia null throw new schema merg except schema field null alia merg use alia schema schema schema merg type incompat per data type merg type tupl bag sub schema equal consid compat alias assum param fs param fs return throw schema merg except privat static field schema merg field schema first level alia field schema fs field schema fs throw schema merg except fs null return fs fs null return f schema inner schema null string alia merg name space alia f alia f alia byte merg type data type merg type f type fs type type merg merg type data type int err code string msg incompat type merg schema field schema f field schema f throw new schema merg except msg err code except data type schema type merg type one bytearray pick inner schema one f type data type inner schema fs schema els f type data type inner schema fs schema els case type inner schema bag tupl inner schema equal f schema f schema fals fals int err code string msg incompat type merg inner schema field schema type f field schema type f throw new schema merg except msg err code except inner schema fs schema tri return new field schema alia inner schema merg type catch frontend except e except expect int err code throw new schema merg except error creat field schema err code except one alias form nm str form str return str param alia param alia return merg alia throw schema merg except privat static string merg name space alia string alia string alia throw schema merg except alia equal alia return alia alia end alia return alia alia end alia return alia alias differ alia merg return null util function call schema get file alia convert link frontend except link schema merg except param schema param alia return field schema throw schema merg except privat static field schema get field sub name match throw schema merg except schema schema string alia throw schema merg except field schema fs null tri f schema get field sub name match alia catch frontend except e string msg caught except find field schema alia alia throw new schema merg except msg e get error code e return f param top level type data type type top level element param inner type datum type type inner level element return nest schema repres type top level element first level inner schema repres type inner element public static schema gener nest schema byte top level type byte inner type throw frontend except schema inner schema new schema int inner type length inner schema add new schema field schema null inner type schema field schema outer schema new schema field schema null inner schema top level type return new schema outer schema recurs prefix merg two schema param schema merg param take alia preced true alia schema take preced return prefix merg schema null one schema null allow incompat type true throw schema merg except merg public schema merg prefix schema schema boolean take alia preced throw schema merg except return merg prefix schema take alia preced fals recurs prefix merg two schema param schema merg param take alia preced true alia schema take preced param allow mergeabl type true mergeabl type allow two type mergeabl follow condit true check either one type null unknown type null unknown result type latter non null unknown type either type bytearray result type possibl non type current type cast type result type type return prefix merg schema null one schema null allow incompat type true throw schema merg except merg public schema merg prefix schema schema boolean take alia preced boolean allow mergeabl type throw schema merg except schema schema null return schema size size int err code string msg schema size mismatch merg schema schema size great schema size schema schema throw new schema merg except msg err code except list field schema output list new array list field schema list field schema mylist schema field list field schema otherlist field iter small one size int iter limit field size int idx idx iter limit idx readabl field schema fs mylist get idx field schema fs otherlist get idx field schema merg fs fs merg prefix field schema fs take alia preced allow mergeabl type output list add merg fs first schema leftov append rest int idx mylist size field schema fs mylist get non schema type data type schema type fs type output list add new field schema f alia f type els tri field schema tmp new field schema fs alia f schema f type output list add tmp catch frontend except fee int err code string msg unabl creat field schema throw new schema merg except msg err code except fee schema new schema output list set two level access requir two level access requir return recurs set type specifid type schema param schema whose type set param specifi type public static void set schema default type schema byte null return schema field schema f get field field schema set field schema default type f return two level access deprec two level access long need deprec public boolean two level access requir return two level access requir param two level access two level access set deprec two level access long need deprec public void set two level access requir boolean two level access two level access requir two level access public static schema get schema resourc schema be schema throw frontend except be schema null return null list field schema fs list new array list field schema resourc field schema rf be schema get field field schema fs new field schema rf get name rf get schema null null get schema rf get schema rf get type rf get type data type f schema null allow partial schema f schema size field schema inner fs f schema get field inner fs type data type resourc field schema throw invalid schema except els resourc field schema throw invalid schema except fs list add f return new schema fs list look field schema instanc schema hierarchi give canon name param canon name canon name return field schema instanc find public field schema find field schema string canon name field schema fs field fs canon name equal canon name return f f schema null field schema result fs schema find field schema canon name result null return result return null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic visitor import java util hash set import java util set import org apach except import org apach impl logic layer frontend except import org apach impl plan plan valid except import org apach newplan depend order walker import org apach newplan oper plan import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat nativ import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat split output import org apach newplan logic relat store import org apach newplan logic relat stream import org apach newplan logic relat union import org apach newplan logic relat logic relat node visitor import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema public class schema alia visitor extend logic relat node visitor public schema alia visitor oper plan plan throw frontend except super plan new depend order walker plan logic check duplic alia schema throw frontend except protect void valid logic relat oper op throw frontend except logic schema schema op get schema set string see alias new hash set string schema null int schema size schema get field null schema get field alia null string alia schema get field alia see alias contain alia int err code string msg duplic schema alia schema get field alia op get alia null msg msg op get alia throw new plan valid except op msg err code except see alias add alia overrid public void visit store store throw frontend except valid store overrid public void visit filter filter throw frontend except valid filter overrid public void visit join join throw frontend except valid join overrid public void visit foreach throw frontend except new schema alia visitor foreach get inner plan visit overrid public void visit gener gen throw frontend except valid gen overrid public void visit inner load load throw frontend except valid load overrid public void visit cogroup group throw frontend except valid group overrid public void visit split split throw frontend except valid split overrid public void visit split output split output throw frontend except valid split output overrid public void visit union union throw frontend except valid union overrid public void visit sort sort throw frontend except valid sort overrid public void visit rank rank throw frontend except valid rank overrid public void visit distinct distinct throw frontend except valid distinct overrid public void visit limit limit throw frontend except valid limit overrid public void visit cross cross throw frontend except valid cross overrid public void visit stream stream throw frontend except valid stream overrid public void visit nativ nativ throw frontend except valid nativ 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic optim import java util collect import java util hash set import java util list import java util set import org apach except import org apach impl logic layer frontend except import org apach impl plan plan valid except import org apach impl util multi map import org apach newplan depend order walker import org apach newplan oper plan import org apach newplan plan walker import org apach newplan revers depend order walker import org apach newplan logic express express visitor import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat cube import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat split output import org apach newplan logic relat store import org apach newplan logic relat stream import org apach newplan logic relat union import org apach newplan logic relat logic relat node visitor import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema public class schema resett extend logic relat node visitor uid duplic remov optim rule duplic column rewrit run disabl call boolean skip duplic uid check true privat void visit collect logic express plan lexp plan throw frontend except logic express plan exp plan lexp plan field schema resett fs resett new field schema resett exp plan f resett visit public schema resett oper plan plan throw frontend except plan fals public schema resett oper plan plan boolean skip duplic uid check throw frontend except super plan new depend order walker plan skip duplic uid check skip duplic uid check overrid public void visit load load throw frontend except load reset schema valid load get schema overrid public void visit filter filter throw frontend except filter reset schema field schema resett fs resett new field schema resett filter get filter plan f resett visit valid filter get schema overrid public void visit store store throw frontend except store reset schema valid store get schema overrid public void visit join join throw frontend except join reset schema visit join get express plan valu valid join get schema overrid public void visit foreach throw frontend except foreach reset schema oper plan inner plan foreach get inner plan plan walker new walker current walker spawn child walker inner plan push walker new walker current walker walk pop walker valid foreach get schema overrid public void visit gener gen throw frontend except gen reset schema visit gen get output plan valid gen get schema overrid public void visit inner load load throw frontend except load reset schema load get project reset field schema load get schema overrid public void visit cube lo cube throw frontend except lo cube reset schema visit lo cube get express plan valu valid lo cube get schema overrid public void visit cogroup lo cogroup throw frontend except lo cogroup reset schema visit lo cogroup get express plan valu valid lo cogroup get schema overrid public void visit split lo split throw frontend except lo split reset schema valid lo split get schema overrid public void visit split output lo split output throw frontend except lo split output reset schema field schema resett fs resett new field schema resett lo split output get filter plan f resett visit valid lo split output get schema overrid public void visit union lo union throw frontend except lo union reset schema valid lo union get schema overrid public void visit sort lo sort throw frontend except lo sort reset schema visit lo sort get sort col plan valid lo sort get schema overrid public void visit rank lo rank throw frontend except lo rank reset schema visit lo rank get rank col plan valid lo rank get schema overrid public void visit distinct lo distinct throw frontend except lo distinct reset schema valid lo distinct get schema overrid public void visit limit lo limit throw frontend except lo limit reset schema lo limit get limit plan null field schema resett fs resett new field schema resett lo limit get limit plan fs resett visit valid lo limit get schema overrid public void visit cross lo cross throw frontend except lo cross reset schema valid lo cross get schema overrid public void visit stream lo stream throw frontend except lo stream reset schema valid lo stream get schema check schema valid readi part final logic plan param schema throw plan valid except field schema uid skip duplic uid check true duplic uid schema public void valid logic schema schema throw plan valid except schema null return set long uid see new hash set long logic field schema fs schema get field skip duplic uid check check duplic uid uid see add fs uid uid alreadi see string msg logic plan invalid state duplic uid schema schema throw new plan valid except msg except fs uid string msg logic plan invalid state invalid uid f uid schema schema throw new plan valid except msg except class field schema resett extend express visitor protect field schema resett oper plan p throw frontend except super p new revers depend order walker p overrid protect void execut logic express op throw frontend except op reset field schema op get field schema 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import static org apach configur import static org apach constant import java io file import java io file input stream import java io file output stream import java io except import java net malform except import java net import java net class loader import java util map import java util set import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach constant import org apach datum schema tupl class gener gen context import org apach datum util structur helper schema key import org apach datum util structur helper tripl import org apach impl context import org apach impl logic layer schema schema import org apach impl util util import com googl common collect map import com googl common collect set import com googl common io file public class schema tupl backend privat static final log log factori get log schema tupl backend class privat set string file resolv set new hash set use class loader resolv gener class simpli give directori put compil class file handl dynam load privat class loader class loader privat map tripl schema key boolean gen context schema tupl factori schema tupl factori tripl map new hash map privat map integ schema tupl factori schema tupl factori id map new hash map privat configur j conf privat file code dir privat boolean local privat boolean abort fals inform class need directori gener code resolv class param j conf param directori gener code privat schema tupl backend configur j conf boolean local local string local code dir j conf get constant local code dir null debug local code dir set local mode abort code gen resolut abort true return code dir new file j conf get constant els code dir file creat temp dir code dir delet exit tri class loader new class loader new code dir catch malform except e throw new runtim except unabl make class loader temp dir code dir get absolut path j conf j conf local local method fetch schema tupl factori creat tupl give schema ignor alia append schema tupl factori avail return null param schema param true append param context schema tupl factori request return gener schema tupl factori null otherwis privat schema tupl factori intern new schema tupl factori schema boolean append gen context context return new schema tupl factori tripl make new schema key append context method fetch schema tupl factori gener schema tupl regist give identifi schema tupl factori avail return null param identifi return gener schema tupl factori null otherwis privat schema tupl factori intern new schema tupl factori int id schema tupl factori stf schema tupl factori id get id stf null debug schema tupl factori present give identifi id return stf method fetch schema tupl factori creat tupl give schema append schema tupl factori avail return null param schema key append pair return gener schema tupl factori null otherwis privat schema tupl factori new schema tupl factori tripl schema key boolean gen context trip schema tupl factori stf schema tupl factori tripl get trip stf null debug schema tupl factori present give schema key boolean context combin trip return stf method copi gener class distribut cach local directori seek resolv cach respect schema tupl factori param configur param true job local throw except privat void copi resolv throw except abort debug noth resolv backend return step one see class distribut cach j conf get boolean info key set gener code return step two copi everyth distribut cach distribut mode local copi distribut cach step three see file need resolv name know inner class thu n need instanti directli file f code dir list file string name f get name split name contain file resolv add name info add class list class resolv name step four actual tri resolv class resolv class privat void copi distribut cach throw except string deseri j conf get constant deseri null info class key constant copi distribut cach return info copi file key constant distribut cach deseri string deseri split info attempt read file string symlink distribut cach file src new file file input stream fin null file output stream fo null tri fin new file input stream src fo new file output stream new file code dir fin get channel transfer src length fo get channel info success copi file local directori final fin null fin close fo null fo close file copi distribut cach local temp directori attempt resolv file add inform suppress warn uncheck privat void resolv class string file resolv schema tupl factori info attempt resolv class step one simpli attempt get class object classload includ gener code class clazz tri clazz class loader load class catch class find except e throw new runtim except unabl find class e step three check class schema tupl n attempt resolv support code anonym class schema tupl class assign clazz return class schema tupl st class class schema tupl clazz step four actual tri creat schema tupl instanc schema tupl st tri st st class new instanc catch instanti except e throw new runtim except error instanti file e catch illeg access except e throw new runtim except error access file e step five get inform class boolean append st instanceof append schema tupl int id st get schema tupl identifi schema schema st get schema schema tupl factori stf new schema tupl factori st class st get quick gener gen context context gen context valu context gen context context gener st class schema tupl factori debug context context present class skip continu schema key schema san alia append uniqu identifi schema tupl factori tripl schema key boolean gen context trip tripl make new schema key schema append context schema tupl factori tripl put trip stf schema tupl factori info success resolv class schema schema append append context context schema tupl factori id put id stf public static void reset stb null privat static schema tupl backend stb public static void initi configur j conf context context throw except stb null schema tupl frontend lazi reset context initi j conf context get exec type local public static void initi configur j conf throw except initi j conf util local j conf public static void initi configur j conf boolean local throw except stb null warn schema tupl backend alreadi initi els schema tupl frontend reset schema tupl backend stb instanc new schema tupl backend j conf local stb instanc copi resolv stb stb instanc public static schema tupl factori new schema tupl factori schema boolean append gen context context stb null possibl though ideal avoid call frontend tupl process path plan invok perhap optim purpos throw new runtim except initi call even schema tupl featur set call return stb intern new schema tupl factori append context protect static schema tupl factori new schema tupl factori int id stb null possibl though ideal avoid call frontend tupl process path plan invok perhap optim purpos throw new runtim except initi call even schema tupl featur set call return stb intern new schema tupl factori id 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import static org apach configur import static org apach constant import static org apach constant import static org apach constant import java io file import java io except import java net import java net syntax except import java util map import java util properti import java util set import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop filecach distribut cach import org apach hadoop f file system import org apach hadoop f path import org apach backend hadoop executionengin map reduc layer configur import org apach datum schema tupl class gener gen context import org apach datum util structur helper pair import org apach datum util structur helper schema key import org apach impl context import org apach impl io file local import org apach impl logic layer schema schema import com googl common collect map import com googl common collect set import com googl common io file class use job creation time provid let code regist schema gener necessari regist schema reduc public class schema tupl frontend privat static final log log factori get log schema tupl frontend class privat static schema tupl frontend stf schema regist gener hold privat static map pair schema key boolean pair integ set gen context schema gener map new hash map privat int intern regist gener possibl schema udf schema boolean append gen context type pair schema key boolean key pair make new schema key udf schema append pair integ set gen context pr schema gener get key pr null pr get second add type return pr get first schema tupl factori generat udf schema debug give schema generat udf schema return int id schema tupl class gener get next global class identifi set gen context context set new hash set context add gen context context add type schema gener put key pair make integ valu id context debug regist append append schema gener udf schema id id context type return id privat map pair schema key boolean pair integ set gen context get schema gener return schema gener privat static class schema tupl frontend gen helper privat file code dir privat context context privat configur conf public schema tupl frontend gen helper context context configur conf code dir file creat temp dir code dir delet exit debug temporari directori gener code creat code dir get absolut path context context conf conf method copi class file present local temp directori distribut cach copi file symlink name file copi current job run local mode param context param conf privat void intern copi gener distribut cach info start process move gener code distribut cacch context get exec type local string code path code dir get absolut path info distribut cach support need local mode set key code temp directori code path conf set code path return els let we avoid non tradit pipelin string code path code dir get absolut path conf set code path distribut cach creat symlink conf read use symlink string builder serial new string builder boolean first true attempt copi everi file gener code temp directori file f code dir list file first first fals els serial append string symlink f get name class name also symlink serial append symlink path src new path f path dst tri dst file local get temporari path context catch except e throw new runtim except error get temporari path e file system f tri f dst get file system conf catch except e throw new runtim except unabl get file system e tri f copi local file src dst f set replic dst short conf get int configur catch except e throw new runtim except unabl copi local filesystem src src dst dst e string destin dst string symlink tri distribut cach add cach file new destin conf catch syntax except e throw new runtim except unabl add file distribut cach destin e info file success add distribut cach symlink string ser serial string info set key class deseri ser must set key job conf individu job know resolv ship class conf set ser set motion gener regist schema code gener temporari directori return true fals depend file copi distribut cach privat boolean gener map pair schema key boolean pair integ set gen context schema gener boolean file ship fals conf get boolean info key fals gener code return fals info gener regist schema map entri pair schema key boolean pair integ set gen context entri schema gener entri set pair schema key boolean key pair entri get key schema key pair get first get pair integ set gen context valu pair entri get valu set gen context context includ set new hash set boolean ship fals gen context context valu pair get second context gener conf info skip gener schema key valu context key fals els ship true context includ add context ship continu int id valu pair get first boolean append key pair get second schema tupl class gener gener schema tupl append id code dir context includ array new gen context file ship true return file ship allow frontend backend process repeat test public static void reset stf null schema gener clear method regist schema gener allow portion code regist schema gener without know whether code gener enabl uniqu pass back use intern refer gener schema tupl case serial deseri context necessari allow client restrict gener code use param udf schema schema tupl potenti gener param append specifi whether want schema tupl append param context context user abl access schema tupl return identifi public static int regist gener possibl schema udf schema boolean append gen context context stf null context reset null properti prop context reset get properti prop remov prop remov context reset null schema tupl backend reset schema tupl class gener reset global class identifi stf new schema tupl frontend udf schema null return tri udf schema udf schema clone catch clone support except e throw new runtim except unabl clone schema udf schema e strip alia udf schema return stf intern regist gener possibl udf schema append context privat static void strip alia schema schema field schema fs get field fs alia null f schema null strip alias fs schema must call code gener gener code need ship cluster may use mapper reduc param context param conf public static void copi gener distribut cach context context configur conf stf null debug noth regist gener return schema tupl frontend gen helper stfgh new schema tupl frontend gen helper context conf stfgh gener stf get schema gener stfgh intern copi gener distribut cach properti prop context get properti string valu conf get valu null prop set properti valu els prop remov valu conf get valu null prop set properti valu els prop remov privat static context context reset null method cach context object relev key valu set schema tupl backend necessari case multipl cycl job might run context object may share want make sure undo chang make protect static void lazi reset context context context reset context 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach script import java io buffer reader import java io file import java io file input stream import java io file find except import java io file reader import java io except import java io input stream import java net import java util array list import java util collect import java util hash map import java util hash set import java util list import java util map import java util set import java util regex pattern import org apach hadoop util shell import org apach backend executionengin exec except import org apach impl context import org apach impl util context import org apach tool pigstat stat base class variou script implement public abstract class script engin public static enum support script lang jrubi new string rubi jrubi new string rb org apach script jrubi jrubi script engin jython new string python jython new string py org apach script jython jython script engin javascript new string new string j org apach script j js script engin groovi new string new string groovi org apach script groovi groovi script engin stream python new string stream python new string org apach script stream python python script engin privat static set string support script lang static support script lang new hash set string support script lang valu support script lang valu support script lang add valu name support script lang collect unmodifi set support script lang public static boolean contain string support script lang return support script lang contain support script lang privat string shebang privat string extens class implement engin string depend possibl class path privat string engin class name privat support script lang string shebang string extens string engin class name shebang shebang extens extens engin class name engin class name discoveri mechan come also overrid accept param file path file param first line first line file possibl contain public boolean accept string file string first line first line null return fals string shebang shebang pattern p pattern compil shebang p matcher first line match return true string ext extens file end ext return true return fals public string get engin class name return engin class name privat static final pattern shebang pattern pattern compil privat static boolean declar shebang string first line first line null return fals return shebang pattern matcher first line match open stream load script local classpath param script path path script return stream respons caller close throw illeg state except could open stream public static input stream get script stream string script path protect static input stream get script stream string script path input stream null file file new file script path frontend give prefer local file backend tri jar first context get context frontend file exist tri new file input stream file catch file find except e throw new illeg state except could find exist file script path e els shell script path char script path script path char script path substr tri system current context classload script engin class get resourc stream script path null get resourc use class loader script path script engin class get class loader null get resourc use class loader script path thread current thread get context class loader null file absolut string path script path script engin class get resourc stream path null get resourc use class loader path script engin class get class loader null get resourc use class loader path thread current thread get context class loader null file exist tri new file input stream file catch file find except e throw new illeg state except could find exist file script path e discuss want add logic load script null throw new illeg state except could initi interpret file system classpath script path return privat static input stream get resourc use class loader string full filenam class loader loader loader null return loader get resourc stream full filenam return null public static final string param file file inspect return support script lang support script languag throw except error read file file defin explicitli unknown public static support script lang get support script lang string file throw except buffer reader br new buffer reader new file reader file string first line tri first line br read line final br close support script lang support script lang support script lang valu support script lang accept file first line return support script lang declar shebang first line throw new except unsupport script type specifi first line return null privat map string list stat stat map new hash map string list stat regist script languag function function give namespac param path path script param namespac namespac function param context pigcontext regist function give namespac throw except public abstract void regist function string path string namespac context context throw except actual run script file method implement individu script engin param context link script context run script file param script file file throw except protect abstract map string list stat main context context string script file throw except need gener abstract far load script interpret param script protect abstract void load input stream script throw except get script engin classnam keyword script languag protect abstract string get script lang return map local variabl name valu throw except protect abstract map string object get param variabl throw except figur jar locat class param clazz class jar file return jar file locat null class load jar throw file find except public static string get jar path class clazz throw file find except resourc clazz get class loader get resourc clazz get canon name replac class resourc get protocol equal jar return resourc get path substr resourc get path index resourc get path index throw new file find except jar clazz get name class find get instanc script engin give script languag param script lang script engin classnam keyword script lang return scriptengin give script languag throw except public static script engin get instanc string script lang throw except string script engin script lang tri support script lang contain script lang support script lang support script lang support script lang valu script lang script engin support script lang get engin class name return script engin class name script engin new instanc catch except e throw new except could load script engin script engin script lang support lang support script lang support script lang e e run script file param context link context run script file param script file file return collect link stat object one runtim instanc link script name pipelin map key name pipelin unnam pipelin map key script id associ instanc throw exec except throw except public map string list stat run context context string script file throw exec except except script context set context return main context script file get collect link stat script run protect map string list stat get stat map return stat map void set stat string key stat stat list stat lst stat map get key lst null lst new array list stat stat map put key lst lst add stat void set stat string key list stat stat stat map put key stat 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool pigstat import java io buffer reader import java io file import java io file find except import java io file reader import java io except import java util bit set import java util hash set import java util list import java util map import java util import java util jar attribut import java util jar jar file import java util jar manif import org apach common codec binari base import org apach common log log import org apach common log log factori import org apach hadoop util version info import org apach configur import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer physic oper origin locat import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer relat oper collect group import org apach backend hadoop executionengin physic layer relat oper demux import org apach backend hadoop executionengin physic layer relat oper distinct import org apach backend hadoop executionengin physic layer relat oper join import org apach backend hadoop executionengin physic layer relat oper filter import org apach backend hadoop executionengin physic layer relat oper import org apach backend hadoop executionengin physic layer relat oper limit import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper local rearrang import org apach backend hadoop executionengin physic layer relat oper merg cogroup import org apach backend hadoop executionengin physic layer relat oper merg join import org apach backend hadoop executionengin physic layer relat oper partial agg import org apach backend hadoop executionengin physic layer relat oper skew join import org apach backend hadoop executionengin physic layer relat oper sort import org apach backend hadoop executionengin physic layer relat oper split import org apach backend hadoop executionengin physic layer relat oper stream import org apach backend hadoop executionengin physic layer relat oper union import org apach impl context import org apach impl logic layer frontend except import org apach impl plan depth first walker import org apach impl plan oper plan import org apach impl plan visitor except import org apach impl util jar manag import org apach impl util object serial import org apach newplan logic relat cogroup import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat join import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat nativ import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat stream import org apach newplan logic relat union import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat node visitor import org apach tool pigstat mapreduc script state import com googl common collect list script state encapsul set script run hadoop cluster set add job spawn script turn persist hadoop job xml properti alreadi job xml user want know relat script job deriv job xml public abstract class script state key set add job protect enum script id script command line hadoop version version input dir map output dir reduc output dir parent jobid job featur script featur alia alia locat privat string display str privat string display str overrid public string string return display str featur use script public static enum privat static final log log factori get log script state class thread copi script state initi script state new thread script state parent thread use inherit thread local use eg run separ thread privat static inherit thread local script state tss new inherit thread local script state protect string id protect string serial script protect string truncat script protect string command line protect string file name protect string version protect string hadoop version protect long script featur protect context context protect list progress notif listen listen list new array list protect script state string id id id serial script truncat script public static script state get return tss get public static script state start script state state tss set state return tss get deprec use link org apach tool pigstat script state start script state instead deprec public static script state start string command line context context script state ss new script state random string ss set command line command line ss set context context tss set ss return ss public void regist listen progress notif listen listen listen add listen public list progress notif listen get listen return listen public void emit initi plan notif oper plan plan progress notif listen listen listen tri listen initi plan notif id plan catch method error e warn progress notif listen implement n implement initi plan notif method listen get class get name e public void emit launch start notif int num job launch progress notif listen listen listen listen launch start notif id num job launch public void emit job submit notif int num job submit progress notif listen listen listen listen job submit notif id num job submit public void emit job start notif string assign job id progress notif listen listen listen listen job start notif id assign job id public void emitjob finish notif job stat job stat progress notif listen listen listen listen job finish notif id job stat public void emit job fail notif job stat job stat progress notif listen listen listen listen job fail notif id job stat public void emit output complet notif output stat output stat progress notif listen listen listen listen output complet notif id output stat public void emit progress updat notif int progress progress notif listen listen listen listen progress updat notif id progress public void emit launch complet notif int num job succeed progress notif listen listen listen listen launch complet notif id num job succeed public void set script file file throw except buffer reader reader null tri reader new buffer reader new file reader file set script reader catch file find except e warn unabl find file e final reader null tri reader close catch except ignor public void set script string script throw except script null return retain truncat script set truncat script script serial encod string serial script object serial serial script privat void set truncat script string script restrict size script store job conf int max script size context null string prop context get properti get properti configur prop null max script size integ valu prop truncat script script length max script size script substr max script size script public void set script featur logic plan plan bit set bs new bit set tri new logic plan featur visitor plan bs visit catch frontend except e warn unabl get script featur e script featur bit set long bs info featur use script featur long string script featur public string get hadoop version hadoop version null hadoop version version info get version return hadoop version null hadoop version public string get version version null string find contain jar jar manag find contain jar script state class find contain jar null tri jar file jar new jar file find contain jar final manif manifest jar get manif final map string attribut attr manifest get entri attribut attr attr get org apach version attr get valu implement version catch except e warn unabl read pig manifest file els warn unabl read pig manifest file run jar return version null version public string get file name return file name null file name public void set file name string file name file name file name public string get id return id public void set command line string command line command line new string base encod base command line get byte public string get command line return command line null command line public string get serial script return serial script null serial script public string get script return truncat script null truncat script protect void set script buffer reader reader throw except string builder sb new string builder tri string line reader read line line null sb append line append n line reader read line catch except e warn unabl pars script e set script sb string protect long bit set long bit set bs long ret int bs next set bit bs next set bit ret return ret protect string featur long string long l l return name string builder sb new string builder int valu length l x sb length sb append sb append valu name return sb string public void set context context context context context public context get context return context public string get script featur return featur long string script featur static class logic plan featur visitor extend logic relat node visitor privat bit set featur protect logic plan featur visitor logic plan plan bit set featur throw frontend except super plan new org apach newplan depth first walker plan featur featur overrid public void visit cogroup op op get group type featur set ordin els op get group type featur set ordin els op get group type op get express plan size featur set ordin els featur set ordin overrid public void visit cross op featur set ordin overrid public void visit distinct op featur set ordin overrid public void visit filter op featur set ordin overrid public void visit op overrid public void visit join op op get join type featur set ordin els op get join type featur set ordin featur set ordin featur set ordin els op get join type featur set ordin els op get join type featur set ordin els op get join type featur set ordin els op get join type featur set ordin overrid public void visit limit op featur set ordin overrid public void visit rank op featur set ordin overrid public void visit sort op featur set ordin overrid public void visit stream op featur set ordin overrid public void visit split op overrid public void visit union op featur set ordin overrid public void visit nativ n featur set ordin protect static class featur visitor extend phi plan visitor privat bit set featur public featur visitor physic plan plan bit set featur super plan new depth first walker physic oper physic plan plan featur featur overrid public void visit join join join throw visitor except featur set ordin overrid public void visit merg join merg join join throw visitor except join get join type join featur set ordin els featur set ordin overrid public void visit merg co group merg cogroup merg co grp throw visitor except featur set ordin overrid public void visit collect group collect group mg throw visitor except featur set ordin overrid public void visit distinct distinct distinct throw visitor except featur set ordin overrid public void visit stream stream stream throw visitor except featur set ordin overrid public void visit split split split throw visitor except featur set ordin overrid public void visit demux demux demux throw visitor except featur set ordin overrid public void visit partial agg partial agg part agg featur set ordin protect static class alia visitor extend phi plan visitor privat hash set string alia set privat list string alia privat final list string alia locat public alia visitor physic plan plan list string alia list string alia locat super plan new depth first walker physic oper physic plan plan alia alia alia locat alia locat alia set new hash set string alia empti string alia alia set add overrid public void visit load load load throw visitor except set alia load super visit load load overrid public void visit join join join throw visitor except set alia join super visit join join overrid public void visit merg join merg join join throw visitor except set alia join super visit merg join join overrid public void visit merg co group merg cogroup merg co grp throw visitor except set alia merg co grp super visit merg co group merg co grp overrid public void visit collect group collect group mg throw visitor except set alia mg super visit collect group mg overrid public void visit distinct distinct distinct throw visitor except set alia distinct super visit distinct distinct overrid public void visit stream stream stream throw visitor except set alia stream super visit stream stream overrid public void visit filter filter fl throw visitor except set alia fl super visit filter fl overrid public void visit local rearrang local rearrang lr throw visitor except set alia lr super visit local rearrang lr overrid public void visit nfe throw visitor except set alia nfe super visit nfe overrid public void visit union union un throw visitor except set alia un super visit union un overrid public void visit sort sort sort throw visitor except set alia sort super visit sort sort overrid public void visit limit limit lim throw visitor except set alia lim super visit limit lim overrid public void visit skew join skew join sk throw visitor except set alia sk super visit skew join sk privat void set alia physic oper op string op get alia null alia set contain alia add alia set add list origin locat origin locat op get origin locat origin locat origin locat origin locat alia locat add origin locat string 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach tool pigstat mapreduc import java text simpl date format import java util date import java util hash map import java util hash set import java util iter import java util list import java util map import java util set import org apach common log log import org apach common log log factori import org apach hadoop mapr job client import org apach hadoop mapr job import org apach hadoop mapr jobcontrol job import org apach exec type import org apach runner return code import org apach backend hadoop executionengin map reduc layer job control compil import org apach backend hadoop executionengin map reduc layer map reduc oper import org apach backend hadoop executionengin map reduc layer nativ map reduc oper import org apach backend hadoop executionengin map reduc layer plan op plan visitor import org apach backend hadoop executionengin map reduc layer plan oper plan import org apach impl context import org apach impl plan depend order walker import org apach impl plan visitor except import org apach tool pigstat input stat import org apach tool pigstat mapreduc job stat import org apach tool pigstat output stat import org apach tool pigstat stat import org apach tool pigstat job stat simpl stat encapsul statist collect run script includ statu execut job well inform output input script public final class simpl stat extend stat privat static final log log factori get log simpl stat class privat job client job client privat job control compil jcc privat map job map reduc oper job mro map privat map map reduc oper job stat mro job map success job far privat set job job see new hash set job class build job plan privat class job graph builder extend op plan visitor public job graph builder oper plan plan super plan new depend order walker map reduc oper oper plan plan job plan new job graph mro job map new hash map map reduc oper job stat overrid public void visit op map reduc oper mr throw visitor except job stat js new job stat mr get oper key string job plan job plan add j list map reduc oper pred get plan get predecessor mr pred null map reduc oper pred pred job stat jpred mro job map get pred job plan connect jpred j job plan connect jpred j mro job map put mr j overrid public list string get error messag throw new unsupport oper except overrid public map string list stat get stat throw new unsupport oper except overrid public boolean emb return fals overrid public long get spill count iter job stat job plan iter long ret next ret job stat next get spill count return ret overrid public long get proactiv spill count object iter job stat job plan iter long ret next ret job stat next get proactiv spill count object return ret overrid public long get proactiv spill count record iter job stat job plan iter long ret next ret job stat next get proactiv spill count rec return ret public simpl stat job mro map new hash map job map reduc oper job plan new job graph void initi context context job client job client job control compil jcc oper plan mr plan super start context null job client null jcc null warn invalid param context job client jcc return context context job client job client jcc jcc build job job id assign null tri new job graph builder mr plan visit catch visitor except e warn unabl build job plan e void finish super stop boolean initi return start time deprec overrid public job client get job client return job client job control compil get job control compil return jcc job stat add job stat job job map reduc oper mro job mro map get job mro null warn unabl get oper job job string return null job stat j mro job map get mro job job id job get assign job j set id job id j set alia mro j set conf job get job conf return j job stat add job stat nativ nativ map reduc oper mr job stat js mro job map get mr j set id new job mr get job id nativ map reduc oper get job number j set alia mr return j void display info get display string overrid public string get display string return code return code warn unknown return code can n display result return context null warn unknown exec type n display result return simpl date format sdf new simpl date format string builder sb new string builder sb append n hadoop version version user id start finish featur n sb append get hadoop version append append get version append append user id append append sdf format new date start time append append sdf format new date end time append append get featur append n sb append n return code return code sb append success n els return code return code sb append job fail stop run depend job n els sb append fail n sb append n return code return code return code return code sb append job stat time second n sb append job stat append n list job stat arr job plan get success job job stat js arr sb append j get display string sb append n return code return code return code return code sb append fail job n sb append job stat append n list job stat arr job plan get fail job job stat js arr sb append j get display string sb append n sb append input n input stat get input stat sb append get display string sb append n sb append output n output stat d get output stat sb append d get display string sb append n counter n sb append total record write get record written append n sb append total byte write get byte write append n sb append spillabl memori manag spill count get spill count append n sb append total bag proactiv spill get proactiv spill count object append n sb append total record proactiv spill get proactiv spill count record append n sb append n job n append job plan string return script statist n sb string void map oper job map reduc oper mro job job mro null warn null oper els job stat js mro job map get mro j null warn null job stat mro mro get oper key els job mro map put job mro boolean job see job job return job see add job 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util array list import java util list import org apach eval func import org apach func spec import org apach except import org apach backend executionengin exec except import org apach data data byte array import org apach datum data type import org apach datum tupl import org apach impl logic layer frontend except import org apach impl logic layer schema schema gener size argument pass bytearray mean number byte charray number charact bag number tupl tupl number field map number keyvalu pair type valu alway return public class extend eval func long overrid public long exec tupl input throw except tri datum byte array dba data byte array input get return dba null null long valu dba size catch exec except exp throw exp catch except e int err code string msg error comput size get class get simpl name throw new exec except msg err code except e overrid public schema output schema schema input return new schema new schema field schema null datum type non javadoc see org apach eval func get arg func map overrid public list func spec get arg func map throw frontend except list func spec func list new array list func spec schema new schema add new schema field schema null datum type func list add new func spec get class get name new schema add new schema field schema null datum type func list add new func spec string size class get name new schema add new schema field schema null datum type func list add new func spec tupl size class get name new schema add new schema field schema null datum type func list add new func spec bag size class get name new schema add new schema field schema null datum type func list add new func spec map size class get name new schema add new schema field schema null datum type func list add new func spec constant size class get name new schema add new schema field schema null datum type func list add new func spec constant size class get name new schema add new schema field schema null datum type func list add new func spec constant size class get name new schema add new schema field schema null datum type func list add new func spec constant size class get name return func list overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java io buffer input stream import java io data input stream import java io data output stream import java io except import java io file import java io file input stream import java io file find except import java io except import java util array list import java util collect import java util compar import java util iter import java util link list import java util list iter import java util prioriti queue import org apach common log log import org apach common log log factori import org apach counter import org apach warn order collect tupl possibl multipl datum store unsort come sort time dump file first iter request experement find fast store sort begin allow user defin compar provid default compar case user n specifi one public class sort data bag extend default abstract bag privat static final long serial version privat static final inter sede inter sede factori get inter sede instanc privat static final log log log factori get log sort data bag class transient privat compar tupl comp privat boolean read start fals privat static class default compar implement compar tupl overrid suppress warn uncheck public int compar tupl tupl return compar overrid public boolean equal object return fals overrid public int hash code return param comp compar use sort null default compar use public sort data bag compar tupl comp comp comp null new default compar comp content new array list tupl overrid public boolean sort return true overrid public boolean distinct return fals overrid public iter tupl iter return new sort data bag iter overrid public long spill make sure someth spill n creat empti file make mess content size return lock contain spill iter n tri read muck contain long spill synchron content datum output stream null tri get spill file catch except ioe remov last file spill array add file creat tmp file throw except warn unabl creat tmp file spill disk warn ioe return tri sort datum dump bogu lock way around read alread start alreadi sort reason n set read start could still add phase case unsort add later read start collect sort array list tupl content comp iter tupl content iter next write datum next data type spill spill everi record spill x fff report progress flush close null content clear catch throwabl e remov last file spill array sinc fail write spill file remov spill file size warn unabl spill content disk warn e return final null tri close catch except e warn error close spill warn e increment spill count inc spill count counter return spill iter handl get next tupl bag iter coupl issu deal first datum store combin memori disk second bag may ask spill iter read mean point someplac memori suddenli need switch disk file privat class sort data bag iter implement iter tupl contain hold tupl prioriti queue store file number tupl come tupl read queue know file read replac tupl privat class contain implement compar contain public tupl tupl public int file num overrid public int compar contain return comp compar tupl tupl overrid public boolean equal object instanceof contain return tupl equal contain tupl els return fals overrid public int hash code return tupl hash code buffer tupl easi way next tell whether anoth tupl avail read privat tupl buf null privat int memori ptr privat prioriti queue contain merg null privat array list data input stream stream null privat int cntr sort data bag iter first read need sort datum synchron content read start pre merg collect sort array list tupl content comp read start true overrid public boolean next see find tupl buffer buf next return buf null overrid public tupl next report progress everi time next much fast use mod cntr x ff report progress one buffer use one buf null tupl buf buf null return check see need read memori boolean spill fals synchron content spill file null spill file size return read memori check see read memori spill memori ptr content size spill true spill datum input stream need open new file fast forward past tupl alreadi read need place first tupl file prioriti queue whatev tupl memori alreadi queue fine guarante ahead point fast foward guarante file want read fast forward last element spill file n support call add call iter spill will not creat empti file tri new datum input stream new buffer input stream new file input stream spill file get spill file size stream null n file spill merg new prioriti queue contain stream new array list data input stream stream add catch file find except fnfe can n find spill file never happen string msg unabl find spill file log fatal msg fnfe throw new runtim except msg fnfe fast foward past tupl alreadi put queue int memori ptr tri read datum catch except eof never happen mean n dump tupl disk string msg ran tupl read prematur log fatal msg eof throw new runtim except msg eof catch except ioe string msg unabl find spill file log fatal msg ioe throw new runtim except msg ioe memori ptr add next tupl file queue add queue null spill file size fall read next entri prioriti queue spill file need read next tupl one file memori return read prioriti implement overrid public void remov privat tupl read prioriti merg null first read need set queue array file stream add one size list memori merg new prioriti queue contain spill file size add one size case spill later stream new array list data input stream spill file size iter file spill file iter next tri datum input stream new datum input stream new buffer input stream new file input stream next stream add add first tupl file merg queue add queue null stream size catch file find except fnfe can n find spill file never happen string msg unabl find spill file log fatal msg fnfe throw new runtim except msg fnfe prime one memori content size add queue null pop top one queue contain c merg poll c null return null add next tupl whereev read queue buffer tupl return reus c tupl c tupl add queue c c file num return privat void add queue contain c int file num c null c new contain c file num file num file num need read memori may spill sinc tupl put queue henc memori might empti n care will n add memori synchron content c tupl read memori c tupl null merg add c return read next tupl indic file datum input stream stream get file num null still datum file tri c tupl tupl read datum merg add c catch except eof tupl file set slot array null n keep tri read file tri close catch except e log warn fail close spill file e stream set file num null catch except ioe string msg unabl find spill file log fatal msg ioe throw new runtim except msg ioe function assum reader lock alreadi hold enter function privat tupl read memori content size return null memori ptr content size return array list tupl content get memori ptr els return null pre merg mani spill file avoid issu larg fan merg experiment hadoop team show optim number spill file function modifi spill file array assum write lock alreadi hold unlock tupl reconstitut tupl evalu rewrit tupl expens need order use sort spec provid privat void pre merg spill file null spill file size return max spill file gather max spill file togeth merg one file remov other spill file new spill file attach end list keep go get small enough number without much concern uneven size merg convert spill file link list sinc remov piec middl want effici tri link list file new link list file spill file link list file file delet new link list file size list iter file list iter stream new array list data input stream merg new prioriti queue contain int j j j tri file f next datum input stream new datum input stream new buffer input stream new file input stream f stream add add queue null stream size remov file delet add f catch file find except fnfe can n find spill file neer happen string msg unabl find spill file log fatal msg fnfe throw new runtim except msg fnfe get new spill file add one end spill file list need append link list well still move link list back spill file datum output stream null tri get spill file add spill file get spill file size tupl read prioriti null write flush catch except ioe string msg unabl find spill file log fatal msg ioe throw new runtim except msg ioe final tri close catch except e warn error close spill warn e delet file merg new file file f file delet f delet fals log warn fail delet spill file f get path clear list final delet file spill file assign new valu spill file clear move new list back spill file array spill file new file list final reset stream merg alloc properli regular merg stream null merg null 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import java io serializ import java util array list import java util list import org apach classif interfac audienc import org apach classif interfac stabil import org apach impl util util class commun sort column inform base order statment sort column schema interfac audienc privat interfac stabil unstabl public class sort info implement serializ privat static final long serial version boolean global sort true default list sort col info sort col info list param sort col info list list sort col info one field datum public sort info list sort col info sort col info list sort col info list sort col info list return sort col info list list sort col info datum public list sort col info get sort col info list return new array list sort col info sort col info list non javadoc see java lang object hash code overrid public int hash code final int prime int result result prime result sort col info list null sort col info list hash code result prime result global sort return result return global sort true datum global sort fals sort within part file public boolean global sort return global sort non javadoc see java lang object equal java lang object overrid public boolean equal object obj util check null class obj return fals sort info sort info obj return global sort global sort util check null equal sort col info list sort col info list true non javadoc see java lang object string overrid public string string return global sort global sort sort column info list sort col info list 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin mock import static org apach hadoop mapreduc lib output file output format get uniqu file import java io data input import java io data output import java io except import java io serializ import java util array list import java util array import java util collect import java util hash map import java util iter import java util list import java util map import java util map entri import java util properti import java util set import java util tree map import org apach hadoop f path import org apach hadoop io writabl import org apach hadoop mapreduc input format import org apach hadoop mapreduc input split import org apach hadoop mapreduc job import org apach hadoop mapreduc job context import org apach hadoop mapreduc output committ import org apach hadoop mapreduc output format import org apach hadoop mapreduc record reader import org apach hadoop mapreduc record writer import org apach hadoop mapreduc task attempt context import org apach log j logger import org apach express import org apach load caster import org apach load func import org apach load metadata import org apach server import org apach resourc schema import org apach resourc statist import org apach store func interfac import org apach store metadata import org apach backend hadoop executionengin map reduc layer split import org apach datum datum bag import org apach datum non spillabl data bag import org apach datum tupl import org apach datum tupl factori import org apach impl context import org apach impl logic layer schema schema import org apach impl util util import org apach parser parser except conveni mock storag unit test pre server server new server exec type data datum reset datum server datum set foo tupl tupl b tupl c tupl map e f g tupl bag tupl h tupl server regist queri foo mock storag server regist queri bar mock storag list tupl datum get bar assert equal tupl get assert equal tupl b get assert equal tupl c get assert equal tupl map f g e get assert equal tupl bag tupl h tupl get pre schema pre server server new server exec type data datum reset datum server datum set foo blah chararray tupl tupl b tupl c server regist queri foo mock storag server regist queri blah blah b server regist queri bar mock storag assert equal schema chararray b chararray datum get schema bar list tupl datum get bar assert equal tupl get assert equal tupl b b get assert equal tupl c c get pre public class storag extend load func implement store func interfac load metadata store metadata privat static final string mock storag id privat static final logger logger get logger storag class privat static map integ data id datum new hash map integ data privat static tupl factori tupl factori get instanc privat static int next id param object return tupl contain provid object public static tupl tupl object object return new tupl array list object param tupl return bag contain provid object public static datum bag bag tupl tupl return new non spillabl data bag array list tupl param input param altern key valu number param even implement similar map gener map return map contain provid object public static map string object map object input input null input length return null tri map string object output new hash map string object int input length string key string input object val input output put key val return output catch class cast except e throw new illeg argument except map key must string catch array index bound except e throw new illeg argument except function input must even number paramet catch except e throw new runtim except error creat map e param schema return schema repres string throw parser except schema invalid public static schema schema string schema throw parser except return util get schema string schema reset store get datum object access param server return datum public static datum reset datum server server return reset datum server get context reset store get datum object access param context return datum datum public static datum reset datum context context properti properti context get properti clean previou datum tri properti contain integ previou id new integ properti get properti id datum remov previou id catch runtim except e warn invalid id context properti e set new store int id next id properti set properti string valu id datum datum new datum id datum put id datum return datum privat datum get data job job throw except string string id job get configur get string id null throw new except data prepar script need call storag reset datum server get context first datum datum id datum get new integ string id datum null throw new except data anymor script datum reset anoth storag reset datum server get context return datum privat static class part final string locat tree map read part file order final map string collect tupl part new tree map string collect tupl public part string locat super locat locat public void set string part file collect tupl datum part put part file datum null throw new runtim except part part file locat locat alreadi exist public list tupl get list tupl new array list tupl set entri string collect tupl entri set part entri set entri string collect tupl entri entri set add entri get valu return isol datum store avoid side effect public static class datum implement serializ privat static final long serial version privat map string part locat datum new hash map string part privat map string schema locat schema new hash map string schema set datum locat know schema param locat store tupl param schema schema datum param datum tupl store throw parser except schema invalid public void set string locat string schema collect tupl datum throw parser except set locat util get schema string schema datum set datum locat know schema param locat store tupl param schema param datum tupl store throw parser except schema invalid public void set string locat string schema tupl datum throw parser except set locat util get schema string schema array list datum set datum locat know schema param locat store tupl param schema param datum tupl store public void set string locat schema schema collect tupl datum set locat datum locat schema put locat schema null throw new runtim except schema alreadi set locat locat set datum locat know schema param locat store tupl param schema param datum tupl store public void set string locat schema schema tupl datum set locat schema array list datum set datum locat param locat store tupl param datum tupl store privat void set intern string locat string part collect tupl datum part part locat datum get locat part null part null part mock els throw new runtim except set locat locat twice part null part new part locat locat datum put locat part part set part datum set datum locat param locat store tupl param datum tupl store public void set string locat collect tupl datum set intern locat null datum set datum locat param locat store tupl param datum tupl store public void set string locat tupl datum set locat array list datum param locat return datum locat public list tupl get string locat locat data contain key locat throw new runtim except datum locat locat return locat datum get locat get param locat return schema store locat public schema get schema string locat return locat schema get locat set schema give locat param locat param schema public void set schema string locat schema schema locat schema put locat schema privat string locat privat datum datum privat schema schema privat iter tupl datum read privat mock record writer mock record writer privat void init string locat job job throw except datum get datum job locat locat schema datum get schema locat load func overrid public string rel absolut path string locat path cur dir throw except locat locat return locat overrid public void set locat string locat job job throw except init locat job datum read datum get locat iter overrid public input format get input format throw except return new mock input format locat overrid public load caster get load caster throw except return super get load caster overrid public void prepar read suppress warn rawtyp record reader reader split split throw except overrid public tupl get next throw except datum read null throw new except datum correctli initi mock loader return datum read next datum read next null overrid public void set context signatur string signatur super set context signatur signatur load meta data overrid public resourc schema get schema string locat job job throw except init locat job return schema null null new resourc schema schema overrid public resourc statist get statist string locat job job throw except init locat job return null overrid public string get partit key string locat job job throw except init locat job return null overrid public void set partit filter express partit filter throw except store func overrid public string rel ab path store locat string locat path cur dir throw except locat locat return locat overrid public output format get output format throw except return new mock output format overrid public void set store locat string locat job job throw except init locat job overrid public void check schema resourc schema throw except overrid public void prepar write suppress warn rawtyp record writer writer throw except mock record writer mock record writer writer datum set intern locat mock record writer part mock record writer datum write overrid public void put next tupl throw except mock record writer datum write add new tupl get overrid public void set store func context signatur string signatur overrid public void cleanup failur string locat job job throw except init locat job overrid public void cleanup success string locat job job throw except init locat job store meta data overrid public void store statist resourc statist stat string locat job job throw except init locat job overrid public void store schema resourc schema schema string locat job job throw except init locat job datum set schema locat schema get schema schema mock load func privat static class mock record reader extend record reader object object overrid public void close throw except overrid public object get current key throw except interrupt except return mock key overrid public object get current valu throw except interrupt except return mock valu overrid public float get progress throw except interrupt except return f overrid public void initi input split split task attempt context arg throw except interrupt except overrid public boolean next key valu throw except interrupt except return true privat static class mock input split extend input split implement writabl privat string locat use reflect hadoop suppress warn unus public mock input split public mock input split string locat locat locat overrid public string get locat throw except interrupt except return new string locat overrid public long get length throw except interrupt except return overrid public boolean equal object arg return arg overrid public int hash code return locat hash code overrid public void read field data input arg throw except locat arg read overrid public void write datum output arg throw except arg write locat privat static class mock input format extend input format object object privat final string locat public mock input format string locat locat locat overrid public record reader object object creat record reader input split arg task attempt context arg throw except interrupt except return new mock record reader overrid public list input split get split job context job context throw except interrupt except return array input split list new mock input split locat mock store func privat static final class mock record writer extend record writer object object privat final list tupl datum write new array list tupl privat final string part public mock record writer string part super part part overrid public void close task attempt context task attempt context throw except interrupt except overrid public void write object arg object arg throw except interrupt except privat static class mock output committ extend output committ overrid public void abort task task attempt context arg throw except overrid public void commit task task attempt context arg throw except overrid public boolean need task commit task attempt context arg throw except return true overrid public void setup job job context arg throw except overrid public void setup task task attempt context arg throw except privat static final class mock output format extend output format object object overrid public void check output spec job context arg throw except interrupt except overrid public output committ get output committ task attempt context arg throw except interrupt except return new mock output committ overrid public record writer object object get record writer task attempt context arg throw except interrupt except arg get configur get mapreduc output basenam null return new mock record writer arg get configur get mapreduc output basenam arg get task attempt get task get id return new mock record writer get uniqu file arg part mock 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import java io except import org apach hadoop f file system import org apach hadoop f path import org apach hadoop mapreduc job import org apach hadoop mapreduc output format import org apach hadoop mapreduc record writer import org apach backend hadoop executionengin map reduc layer hadoop logger import org apach classif interfac audienc import org apach classif interfac stabil import org apach datum tupl import org apach impl util context store func take record process store datum store frequent file could also base instanc etc interfac audienc public interfac stabil stabl public abstract class store func implement store func interfac method call runtim front end convert output locat absolut path locat rel store func implement free choos convert rel locat absolut locat sinc may depend locat string repres hdf path datum sourc param locat locat provid store statement script param cur dir current work direct base cd statement script store statement cd statement script would home directori pre user usernam pre return absolut locat base argument pass throw except convers possibl overrid public string rel ab path store locat string locat path cur dir throw except return load func get absolut path locat cur dir return output format associ store func call front end plan backend execut return link output format associ store func throw except except occur construct output format overrid public abstract output format get output format throw except commun storer locat datum need store locat string pass link store func return valu link store func rel ab path store locat string path method call frontend backend multipl time implement bear mind method call multipl time ensur inconsist side effect due multipl call link check schema resourc schema call call link set store locat string job param locat locat return link store func rel ab path store locat string path param job link job object throw except locat valid overrid public abstract void set store locat string locat job job throw except set schema datum store call front end plan store associ schema store function implement function check give schema accept exampl check correct partit key includ storag function write directli output format make sure schema translat well defin way default implement op param check throw except schema accept includ detail error messag indic wrong schema overrid public void check schema resourc schema throw except default implement op initi store func write datum call execut backend call put next param writer record writer use throw except except occur initi overrid public abstract void prepar write record writer writer throw except write tupl datum store param tupl store throw except except occur write overrid public abstract void put next tupl throw except method call front end back end pass uniqu signatur link store func use store inform link context need store variou method invoc front end back end method call method link store func necessari latin script multipl store differ instanc store function need abl find datum context object default implement op param signatur uniqu signatur identifi store func overrid public void set store func context signatur string signatur default implement op method call job contain store fail implement clean output locat method ensur incorrect incomplet result leav output locat default implement delet output locat link file system locat param locat locat return link store func rel ab path store locat string path param job link job object use obtain cluster properti link job get configur set queri runtim job inform overrid public void cleanup failur string locat job job throw except cleanup failur impl locat job method call job contain store success cleanup intermedi resourc requir implement clean output locat method ensur incorrect incomplet result leav output locat param locat locat return link store func rel ab path store locat string path param job link job object use obtain cluster properti link job get configur set queri runtim job inform overrid public void cleanup success string locat job job throw except user defin overrid call cleanup failur impl locat job default implement link cleanup failur string job link cleanup success string job remov file param locat file name file remov param job hadoop job use access appropri file system throw except public static void cleanup failur impl string locat job job throw except path path new path locat file system f path get file system job get configur f exist path f delet path true drop support move default method store func interfac execut engin like tez support optim union write output locat parallel task differ vertex commit call vertex union complet elimin need separ phase read datum output previou phase union write enabl union optim requir output format support creation differ part file name task differ vertex conflict filenam creat datum corrupt loss eg task vertex vertex creat filenam part r one file overwritten promot temporari final locat lead datum loss file output format mapreduc output basenam config enabl name file differ differ vertex class extend file output format prefix file name mapreduc output basenam valu encount conflict case like base storag write key valu store produc file also face conflict support call commit end take care promot temporari file differ vertex final locat eg file output format commit algorithm handl promot file produc task differ vertex final output locat without issu file name conflict case like base storag tabl output committ noth commit custom output format use store func support two criterion fals return union optim disabl store func default implement return null case planner fall back link configur link configur set determin store func support public boolean support parallel write store locat return null issu warn warn messag aggreg report user param msg string messag warn param warn enum type warn public final void warn string msg enum warn enum hadoop logger get instanc warn msg warn enum 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import org apach hadoop f path import org apach hadoop mapreduc job import org apach hadoop mapreduc output format import org apach hadoop mapreduc record writer import org apach datum tupl import org apach impl util util import java io except conveni class extend decor store func abstract fail compil new method get add store func interfac subclass must call set store func instanc store func interfac method call result illeg argument except method call public class store func wrapper implement store func interfac privat store func interfac store func protect store func wrapper wrap store func interfac object must set method call make object typic do via constructor often time wrap object properli initi later lifecycl wrapper object param store func protect void set store func store func interfac store func store func store func overrid public string rel ab path store locat string locat path path throw except return store func rel ab path store locat locat path overrid public output format get output format throw except return store func get output format overrid public void set store locat string locat job job throw except store func set store locat locat job overrid public void check schema resourc schema resourc schema throw except store func check schema resourc schema overrid public void prepar write record writer record writer throw except store func prepar write record writer overrid public void put next tupl tupl throw except store func put next tupl overrid public void set store func context signatur string signatur store func set store func context signatur signatur overrid public void cleanup failur string locat job job throw except store func cleanup failur locat job overrid public void cleanup success string locat job job throw except store func cleanup success locat job privat store func interfac store func store func null throw except stack trace pars phase throw new illeg argument except method call make store func wrapper object wrap store func interfac object set fail method call get method name return store func return method call stack give depth depth return method call get method name depth method call etc param depth return method name string protect string get method name final int depth final stack trace element ste thread current thread get stack trace int index util vendor index depth els index depth return ste index get method name 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import org apach eval func import org apach except import org apach backend executionengin exec except import org apach datum data type import org apach datum tupl import org apach impl logic layer schema schema method never use directli use link public class string concat extend eval func string overrid public string exec tupl input throw except tri input null input size return null string builder sb new string builder int input size input get null return null sb append string valu input get return sb string catch exec except exp throw exp catch except e int err code string msg error comput concat get class get simpl name throw new exec except msg err code except e overrid public schema output schema schema input return new schema new schema field schema null datum type overrid public schema type get schema type return schema type overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import static java lang string format import java io except import java util hash set import java util iter import java util set import org apach eval func import org apach backend executionengin exec except import org apach datum bag factori import org apach datum datum bag import org apach datum tupl take two bag argument return new bag compos tupl first bag second bag br null bag argument replac empti bag p implement assum bag pass function fit entir memori simultan br case still function strong strong slow public class extend eval func data bag compar two bag field input tupl return new bag compos element first bag second bag param input tupl exactli two bag field throw except exactli two field tupl link datum bag overrid public datum bag exec tupl input throw except input size throw new exec except expect two input receiv input size input datum bag bag datum bag input get datum bag bag datum bag input get return subtract bag bag privat static string class name object return null null get class get simpl name privat static datum bag data bag object throw exec except null return bag factori get instanc new default bag instanceof datum bag return datum bag throw new exec except format expect input datum bag class name privat static datum bag subtract datum bag bag datum bag bag datum bag subtract bag bag bag factori get instanc new default bag convert bag set make assumpt set fit memori set tupl set set bag remov element bag set iter tupl bag iter bag iter bag iter next set remov bag iter next set contain element bag bag build result datum bag tupl tupl set subtract bag bag add tupl return subtract bag bag privat static set tupl set data bag bag set tupl set new hash set tupl iter tupl iter bag iter iter next set add iter next return set overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic relat logic schema import org apach parser sourc locat subtract oper public class subtract express extend binari express add oper plan connect left right hand side oper param plan plan oper part param lh express leav hand side param rh express right hand side public subtract express oper plan plan logic express lh logic express rh super subtract plan lh rh link org apach newplan oper accept org apach newplan plan visitor overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except null instanceof subtract express subtract express ao subtract express return ao get lh equal get lh ao get rh equal get rh els return fals overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema field schema new logic schema logic field schema null null get lh get type uid field schema field schema merg uid uid field schema return field schema overrid public logic express deep copi logic express plan lg exp plan throw frontend except logic express copi new subtract express lg exp plan get lh deep copi lg exp plan get rh deep copi lg exp plan copi set locat new sourc locat locat return copi 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java util array list import java util list import org apach func spec import org apach datum data type import org apach impl logic layer frontend except import org apach impl logic layer schema schema gener sum set valu class implement link org apach algebra possibl execut perform distribut fashion p oper numer type also oper bytearray cast doubl expect bag tupl one record know schema function pass bag integ long use special adapt version use integ arithmet sum datum return type doubl float doubl bytearray argument long int long argument p implement link org apach accumul interfac well never prefer method usag avail case combin use give calcul public class extend algebra byte array math base public set op public static class intermedi extend algebra byte array math base intermedi overrid public get op return public static class final extend algebra byte array math base final overrid public get op return non javadoc see org apach eval func get arg func map overrid public list func spec get arg func map throw frontend except list func spec func list new array list func spec func list add new func spec get class get name schema gener nest schema data type data type doubl sum work float doubl func list add new func spec doubl sum class get name schema gener nest schema data type data type func list add new func spec doubl sum class get name schema gener nest schema data type data type long sum work int long func list add new func spec long sum class get name schema gener nest schema data type data type func list add new func spec long sum class get name schema gener nest schema data type data type add big decim func list add new func spec big decim sum class get name schema gener nest schema data type data type dding big integ func list add new func spec big integ sum class get name schema gener nest schema data type data type return func list 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java math big decim import java math big integ import java util map import org apach common log log import org apach common log log factori import org apach hadoop io text import org apach hadoop mapreduc input format import org apach hadoop mapreduc job import org apach hadoop mapreduc record reader import org apach hadoop mapreduc lib input file input format import org apach load caster import org apach load func import org apach configur import org apach except import org apach resourc schema resourc field schema import org apach backend executionengin exec except import org apach backend hadoop executionengin map reduc layer split import org apach backend hadoop executionengin map reduc layer text input format import org apach bzip r bzip text input format import org apach datum datum bag import org apach data data byte array import org apach datum tupl import org apach datum tupl factori import org joda time date time load function simpli creat tupl line text singl chararray field contain line text public class text loader extend load func implement load caster protect record reader null privat tupl factori tupl factori tupl factori get instanc privat string load locat protect final log log log factori get log get class determin whether depend bzip text input format simpli depend hadoop handl bzip input privat boolean bzipinput usehadoop overrid public tupl get next throw except tri boolean done next key valu do return null text valu text get current valu byte ba valu get byte make copi byte repres input sinc text input format reus byte array return tupl factori new tupl new datum byte array ba valu get length catch interrupt except e throw new except error get input text loader support convers boolean throw except valu cast overrid public boolean byte boolean byte b throw except int err code string msg text loader support convers boolean throw new exec except msg err code except text loader support convers integ throw except valu cast overrid public integ byte integ byte b throw except int err code string msg text loader support convers integ throw new exec except msg err code except text loader support convers long throw except valu cast overrid public long byte long byte b throw except int err code string msg text loader support convers long throw new exec except msg err code except text loader support convers float throw except valu cast overrid public float byte float byte b throw except int err code string msg text loader support convers float throw new exec except msg err code except text loader support convers doubl throw except valu cast overrid public doubl byte doubl byte b throw except int err code string msg text loader support convers doubl throw new exec except msg err code except text loader support convers date time throw except valu cast overrid public date time byte date time byte b throw except int err code string msg text loader support convers date time throw new exec except msg err code except cast datum byte chararray valu param b byte array cast return string valu throw except valu cast overrid public string byte char array byte b throw except return new string b overrid public map string object byte map byte b resourc field schema schema throw except int err code string msg text loader support convers map throw new exec except msg err code except text loader support convers tupl throw except valu cast overrid public tupl byte tupl byte b resourc field schema schema throw except int err code string msg text loader support convers tupl throw new exec except msg err code except text loader support convers bag throw except valu cast public datum bag byte bag byte b resourc field schema schema throw except int err code string msg text loader support convers bag throw new exec except msg err code except public byte byte data bag bag throw except int err code string msg text loader support convers bag throw new exec except msg err code except public byte byte string throw except return get byte public byte byte doubl throw except int err code string msg text loader support convers doubl throw new exec except msg err code except public byte byte float f throw except int err code string msg text loader support convers float throw new exec except msg err code except public byte byte boolean b throw except int err code string msg text loader support convers boolean throw new exec except msg err code except public byte byte integ throw except int err code string msg text loader support convers integ throw new exec except msg err code except public byte byte long l throw except int err code string msg text loader support convers long throw new exec except msg err code except public byte byte date time dt throw except int err code string msg text loader support convers date time throw new exec except msg err code except public byte byte map string object throw except int err code string msg text loader support convers map throw new exec except msg err code except public byte byte tupl throw except int err code string msg text loader support convers tupl throw new exec except msg err code except overrid public big integ byte big integ byte b throw except int err code string msg text loader support convers big integ throw new exec except msg err code except overrid public big decim byte big decim byte b throw except int err code string msg text loader support convers big decim throw new exec except msg err code except overrid public input format get input format load locat end bz load locat end bz bzipinput usehadoop log info use bzip text input format return new bzip text input format els log info use text input format return new text input format overrid public load caster get load caster return overrid public void prepar read record reader reader split split reader overrid public void set locat string locat job job throw except load locat locat file input format set input path job locat bzipinput usehadoop job get configur get boolean configur true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl io import java io except import java util iter import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach hadoop f path import org apach hadoop io text import org apach hadoop io writabl compar import org apach hadoop mapreduc input format import org apach hadoop mapreduc input split import org apach hadoop mapreduc job import org apach hadoop mapreduc output format import org apach hadoop mapreduc record reader import org apach hadoop mapreduc record writer import org apach hadoop mapreduc task attempt context import org apach hadoop mapreduc lib input file input format import org apach hadoop mapreduc lib output file output format import org apach express import org apach file input load func import org apach load func import org apach load metadata import org apach configur import org apach resourc schema import org apach resourc statist import org apach store func import org apach store func interfac import org apach backend hadoop executionengin map reduc layer file input format import org apach backend hadoop executionengin map reduc layer split import org apach classif interfac audienc import org apach datum tupl import org apach impl util util load function use store intermedi datum job queri serial format load function chang new version use store persist datum interfac audienc privat public class file storag extend file input load func implement store func interfac load metadata privat static final log log log factori get log file storag class public static final string use log file storag use privat file record reader rec reader null privat file record writer rec writer null simpl binari nest reader format public file storag throw except log debug use log overrid public tupl get next throw except rec reader next key valu return rec reader get current valu els return null overrid public void put next tupl throw except tri rec writer write null catch interrupt except e throw new except e public static class file input format extend file input format text tupl non javadoc see org apach hadoop mapreduc input format creat record reader org apach hadoop mapreduc input split org apach hadoop mapreduc task attempt context overrid public record reader text tupl creat record reader input split split task attempt context context throw except interrupt except return new file record reader overrid public input format get input format return new file input format overrid public int hash code return overrid public void prepar read record reader reader split split rec reader file record reader reader overrid public void set locat string locat job job throw except file input format set input path job locat public static class file output format extend file output format org apach hadoop io writabl compar tupl non javadoc see org apach hadoop mapreduc lib output file output format get record writer org apach hadoop mapreduc task attempt context overrid public record writer writabl compar tupl get record writer task attempt context job throw except interrupt except configur conf job get configur string codec conf get configur codec equal lzo codec equal gz codec equal gzip throw new except invalid temporari file compress codec codec expect compress codec gz gzip lzo codec equal gzip codec gz log info codec compress codec use path file get default work file job return new file record writer file codec conf overrid public output format get output format return new file output format overrid public void prepar write record writer writer rec writer file record writer writer overrid public void set store locat string locat job job throw except file output format set output path job new path locat overrid public void check schema resourc schema throw except overrid public string rel ab path store locat string locat path cur dir throw except return load func get absolut path locat cur dir overrid public string get partit key string locat job job throw except return null overrid public resourc schema get schema string locat job job throw except return util get schema locat true job overrid public resourc statist get statist string locat job job throw except return null overrid public void set partit filter express plan throw except throw new unsupport oper except overrid public void set store func context signatur string signatur overrid public void cleanup failur string locat job job throw except store func cleanup failur impl locat job overrid public void cleanup success string locat job job throw except noth 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import org apach eval func import org apach datum datum bag import org apach datum data type import org apach datum non spillabl data bag import org apach datum tupl import org apach datum tupl factori import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl logic layer schema schema field schema class take list item put bag foreach gener like say foreach gener argument tupl type insert tupl add bag bag alway bag tupl output schema output schema udf depend schema argument argument type inner schema bag tupl column udf output schema would bag tupl column type inner schema argument argument type tupl bag inner schema match though schema field alia may differ condit meet output schema bag null inner schema exampl grunt describ int int grunt b foreach gener grunt describ b b int exampl grunt describ x int x int grunt b foreach gener grunt describ b b x int exampl grunt describ x int int note inner schema match type differ field alia alias first argument use output schema grunt b foreach gener grunt describ b b x int exampl grunt describ x int x chararray inner schema match output schema well defin grunt b foreach gener grunt describ b b public class extend eval func data bag overrid public datum bag exec tupl input throw except tri assumpt bag content fit input tupl need spill datum bag bag new non spillabl data bag input size int input size final object object input get object instanceof tupl bag add tupl object els tupl tp tupl factori get instanc new tupl tp set object bag add tp return bag catch except ee throw new runtim except error creat bag ee non javadoc see org apach eval func output schema org apach impl logic layer schema schema column tupl type set bag schema bag tupl column type overrid public schema output schema schema input sch byte type data type schema inner schema null input sch null field schema fs input sch get field type datum type type fs type inner schema fs schema els type fs type null equal inner schema fs schema invalid type type data type break tri type data type return schema gener nest schema data type data type field schema inner fs new schema field schema null inner schema type schema inner sch new schema inner fs schema bag schema new schema new field schema null inner sch data type return bag schema catch frontend except e happen throw new runtim except bug except throw creat output schema udf e privat boolean null equal schema current schema schema new schema current schema null new schema null return fals return true return schema equal current schema new schema fals true overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util array list import java util list import org apach eval func import org apach func spec import org apach datum data type import org apach datum tupl import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org joda time date time import org joda time date time zone import org joda time format date time formatt import org joda time format date time format p date convert custom string unix timestamp date time object p p date overload p dl dt b syntax b dt dd code date time date long milli code dd dt b input b dt dd code millisecond code dd dt b output b dt dd code date time object code dd dl dl dt b syntax b dt dd code date time date string dt str code dd dt b input b dt dd code format date time string code dd dt b output b dt dd code date time object code dd dl dl dt b syntax b dt dd code date time date string dt str string format code dd dt b input b dt dd code dt str string repres date time code dd dd code format format string code dd dt b output b dt dd code date time object code dd dl dl dt b syntax b dt dd code date time date string dt str string format string timezon code dd dt b input b dt dd code dt str string repres date time code dd dd code format format string code dd dd code timezon timezon string code dd dt b output b dt dd code date time object code dd dl public class date extend eval func date time privat static final date time formatt iso date time formatt date time format date option time parser offset pars public date time exec tupl input throw except input null input size input get null return null return new date time data type long input get overrid public schema output schema schema input return new schema new schema field schema get schema name get class get name low case input data type overrid public list func spec get arg func map throw frontend except list func spec func list new array list func spec schema new schema add new schema field schema null datum type func list add new func spec get class get name new schema add new schema field schema null datum type func list add new func spec date class get name new schema add new schema field schema null datum type add new schema field schema null datum type func list add new func spec date class get name new schema add new schema field schema null datum type add new schema field schema null datum type add new schema field schema null datum type func list add new func spec date class get name return func list public static date time zone extract date time zone string dt str return iso date time formatt pars date time allow iso space dt str get zone public static date time extract date time string dt str return iso date time formatt pars date time allow iso space dt str format timestamp format similar strict specifi date portion time portion allow space instead loos variant variant often adopt increas human readabl timestamp format use space variant hive impala databas orient gener timestamp space would like accept space format org joda time format date time formatt requir clean way get joda time accept convert space feed string date time formatt privat static string allow iso space string dt str dt str null dt str length dt str char return dt str return dt str substr dt str substr overrid public boolean allow compil time calcul return true 
gener java edit line token java version java option null true packag org apach tool paramet describ input token stream public class token implement java io serializ version identifi serializ class increment serial form class chang privat static final long serial version integ describ kind token number system determin java parser tabl number store file constant java public int kind line number first charact token public int begin line column number first charact token public int begin column line number last charact token public int end line column number last charact token public int end column string imag token public string imag refer next regular non special token input stream last token input stream token manag read token beyond one field set null true token also regular token otherwis see descript content field public token next field use access special token occur prior token immedi preced regular non special token special token field set null one special token field refer last special token turn refer next previou special token special token field first special token whose special token field null next field special token refer special token immedi follow without interven regular token token field null public token special token option attribut valu token token use syntact sugar often contain meaning valu use later compil interpret attribut valu often differ imag subclass token actual want return non null valu overrid method appropri public object get valu return null argument constructor public token construct new token specifi imag public token int kind kind null construct new token specifi imag kind public token int kind string imag kind kind imag imag return imag public string string return imag return new token object default howev want creat return subclass object base valu kind simpli add case switch special case exampl subclass token call token want creat kind simpli add someth like case parser constant return new token kind imag follow switch statement cast match token variabl appropri type use sit lexic action public static token new token int kind string imag switch kind default return new token kind imag public static token new token int kind return new token kind null java origin checksum f c f ad c f ce edit line 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util array list import java util list import java util string token import org apach eval func import org apach except import org apach backend executionengin exec except import org apach datum bag factori import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach datum tupl factori import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach func spec give chararray argument method split chararray return bag tupl chararray result split string split space doubl quot comma open parend close parend asterisk star public class extend eval func data bag tupl factori tupl factori tupl factori get instanc bag factori bag factori bag factori get instanc overrid public datum bag exec tupl input throw except tri input null return null input size return null object input get null return null datum bag output bag factori new default bag instanceof string int err code string msg expect input chararray get get class get name throw new exec except msg err code except string delim input size object input get instanceof string int err code string msg expect delim chararray get get class get name throw new exec except msg err code except delim string string token tok new string token string delim fals tok token output add tupl factori new tupl tok next token return output catch exec except ee throw ee suppress warn deprec overrid public schema output schema schema input tri schema field schema token fs new schema field schema token data type schema tupl schema new schema token fs schema field schema tupl fs tupl fs new schema field schema tupl token tupl schema data type schema bag schema new schema tupl fs bag schema set two level access requir true schema field schema bag fs new schema field schema bag token tupl input get field alia bag schema data type return new schema bag fs catch frontend except e throw schema creation expect throw except also superclass throw except throw new runtim except unabl comput schema public list func spec get arg func map throw frontend except list func spec func list new array list func spec schema new schema add new schema field schema null datum type func list add new func spec get class get name new schema add new schema field schema null datum type add new schema field schema null datum type func list add new func spec get class get name return func list overrid public boolean allow compil time calcul return true 
gener java edit line token mgr error java version java option packag org apach tool paramet token manag error public class token mgr error extend error version identifi serializ class increment serial form class chang privat static final long serial version ordin variou reason error type throw lexic error occur static final int attempt make creat second instanc static token manag static final int tri chang invalid lexic state static final int detect bail infinit loop token manag static final int indic reason except throw one valu int error code replac unprint charact escap unicod escap equival give string protect static final string add escap string str string buffer retval new string buffer char ch int str length switch str char case continu case b retval append b continu case retval append continu case n retval append n continu case f retval append f continu case be retval append r continu case retval append continu case retval append continu case retval append continu default ch str char x ch x e string integ string ch retval append u substr length length els retval append ch continu return retval string return detail messag error throw token manag indic lexic error paramet see indic caus lexic error cur lex state lexic state error occur error line line number error occur error column column number error occur error prefix see error occur curchar offend charact note custom lexic error messag modifi method protect static string lexic error boolean see int lex state int error line int error column string error char cur char return lexic error line error line column error column encount see add escap string valu cur char int cur char add escap error also modifi bodi method custom error messag exampl case like end user concern return someth like intern error pleas file bug report method case releas version parser public string get messag return super get messag constructor variou flavor follow arg constructor public token mgr error constructor messag reason public token mgr error string messag int reason super messag error code reason full constructor public token mgr error boolean see int lex state int error line int error column string error char cur char int reason lexic error see lex state error line error column error cur char reason java origin checksum aa b c bba c f b b edit line 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import java util map import java util hash map import org apach eval func import org apach datum datum bag import org apach datum data type import org apach datum tupl import org apach impl logic layer schema schema class make map paramet pass foreach gener gener map also accept bag pair tupl e tupl key valu public class extend eval func map overrid public map exec tupl input throw except input null input size return null map string object output new hash map string object tri singl bag valu input size input get instanceof datum bag data bag bag pair datum bag input get bag pair size return output tupl tupl bag pair tupl size throw new runtim except input tupl bag exactli field string key string tupl get object val tupl get output put key val return output els return null valu must bag int input size string key string input get object val input get output put key val return output catch class cast except e throw new runtim except map key must string catch array index bound except e throw new runtim except function input must even number paramet catch except e throw new runtim except error creat map e overrid public schema output schema schema input byte valu type null input size input bag pair tupl schema bag schema input get field get schema bag schema null bag schema size schema tupl schema bag schema get field get schema tupl schema null valu type tupl schema get field get type els input null input get field null int input size valu type null valu type input get field get type els valu type input get field get type valu type data type break schema new schema new schema field schema null datum type valu type null valu type data type get field get schema new schema new schema field schema null valu type return return overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io except import org apach eval func import org apach datum data type import org apach datum tupl import org apach impl logic layer schema schema class make tupl paramet foreach gener gener tupl contain public class extend eval func tupl overrid public tupl exec tupl input throw except return input overrid public schema output schema schema input tri schema tupl schema new schema int input size tupl schema add input get field return new schema new schema field schema get schema name get class get name low case input tupl schema data type catch except e return null overrid public boolean allow compil time calcul return true 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan optim import org apach impl logic layer frontend except import org apach newplan oper plan public abstract class transform check transform do call pattern match may criterion must meet well param match sub set plan match pattern subset graph pattern oper point object plan match return true transform do throw transform public abstract boolean check oper plan match throw frontend except transform tree param match sub set plan match pattern subset graph pattern oper point object plan match throw transform public abstract void transform oper plan match throw frontend except report part tree transform listen know part tree visit modifi schema annot etc node remov need plan node add move return oper plan describ chang node public abstract oper plan report chang 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java net import java net class loader import java util list import org apach backend hadoop executionengin map reduc layer tupl default raw compar import org apach classif interfac audienc import org apach classif interfac stabil factori construct tupl class abstract user overrid tupl factori desir provid return implement tupl properti datum tupl factori name set class name datum tupl factori jar set point jar contain name class link get instanc creat instanc name class use indic jar otherwis creat instanc link default tupl factori interfac audienc public interfac stabil stabl public abstract class tupl factori implement tupl maker tupl privat static tupl factori g self null get refer singleton factori return tupl factori use construct tupl public static tupl factori get instanc g self null string factori name system get properti datum tupl factori name string factori jar system get properti datum tupl factori jar factori name null factori jar null tri url new url new factori jar class loader loader new class loader url tupl factori class get class loader class c class name factori name true loader object c new instanc instanceof tupl factori throw new runtim except provid factori factori name extend tupl factori g self tupl factori catch except e e instanceof runtim except throw runtim except runtim except e throw throw new runtim except unabl instanti tupl factori factori name e els factori name null tri class c class name factori name object c new instanc instanceof tupl factori throw new runtim except provid factori factori name extend tupl factori g self tupl factori catch except e e instanceof runtim except throw runtim except runtim except e throw throw new runtim except unabl instanti tupl factori factori name e els g self new bin sede tupl factori return g self creat empti tupl use infrequ possibl use new tupl int instead return empti new tupl public abstract tupl new tupl creat tupl size field whenev possibl prefer null constructor constructor prealloc size contain hold field call legal call tupl set x object x lt size param size number field tupl return tupl size field public abstract tupl new tupl int size creat tupl provid list object underli list copi param c list object use field tupl return tupl list object field public abstract tupl new tupl list c creat tupl provid list object keep provid list new tupl take ownership provid list param list list object becom field tupl return tupl list object field public abstract tupl new tupl copi list list creat tupl singl element use fact bag current take tupl often end stick singl element tupl order put bag param datum datum put tupl return tupl one field public abstract tupl new tupl object datum return actual class repres tupl implement factori return need hadoop need know exact class use input output return class implement tupl public abstract class extend tupl tupl class protect tupl factori provid test purpos function never call anybodi unit test public static void reset self g self null return actual class implement raw compar tupl factori return ovverrid allow hadoop speed tupl sort actual return class know serial detail tupl default implement tupl default raw compar serial datum comparison return class implement tupl raw compar public class extend tupl raw compar tupl raw compar class return tupl default raw compar class method use inspect whether tupl creat factori fix size creat practic term mean whether support append return tupl fix public abstract boolean fix size 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic rule import java util array list import java util list import org apach func spec import org apach datum data type import org apach impl logic layer frontend except import org apach impl stream stream command import org apach impl stream stream command handl spec import org apach newplan oper import org apach newplan oper plan import org apach newplan logic express cast express import org apach newplan logic express logic express plan import org apach newplan logic express project express import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat load import org apach newplan logic relat stream import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach newplan optim rule import org apach newplan optim transform public abstract class type cast insert extend rule public type cast insert string n super n true protect abstract logic schema determin schema logic relat oper op throw frontend except overrid public transform get new transform return new type cast insert transform public class type cast insert transform extend transform overrid public boolean check oper plan match throw frontend except logic relat oper op logic relat oper match get sourc get logic schema op get schema null return fals process node cast adjust op return fals op instanceof load load op get script schema null return fals els stream op get script schema null return fals narrow oper cast add user specifi type might match datum let see actual need logic schema determin schema determin schema op determin schema null determin schema size size n know datum look like user specifi want certain number field load return true least one cast need determin schema return true return fals privat boolean least one cast need logic schema determin schema logic schema int size logic schema logic field schema fs get field f type data type f equal determin schema get field cast field default type whatev user specifi claus statement f type return true return fals overrid public void transform oper plan match throw frontend except logic relat oper op logic relat oper match get sourc get logic schema op get schema logic schema determin schema determin schema op current plan get successor op null output go anywher n need bother tidi output return everi field build logic plan field type byte array plan cast project els project logic plan inner plan new logic plan foreach new current plan foreach set inner plan inner plan foreach set alia op get alia insert foreach plan patch plan oper next current plan get successor op get current plan insert op foreach next list logic express plan exp new array list logic express plan gener gen new gener inner plan exp new boolean size inner plan add gen int size logic schema logic field schema fs get field inner load inner load new inner load inner plan foreach inner plan add inner load inner plan connect inner load gen logic express plan exp new logic express plan project express prj new project express exp gen exp add prj f type data type determin schema null f equal determin schema get field either schema determin loader type determin schema differ type specifi need cast cast express cast new cast express exp prj new logic schema logic field schema fs exp add cast func spec load func spec null op instanceof load load func spec load op get file spec get func spec els op instanceof stream stream command command stream op get stream command handl spec stream output spec command get output spec load func spec new func spec stream output spec get spec els string msg type cast insert invok invalid oper class name inner plan get class get simpl name throw new frontend except msg cast set func spec load func spec exp add exp mark cast insert op overrid public oper plan report chang return current plan protect abstract void mark cast insert logic relat oper op protect abstract void mark cast need logic relat oper op protect abstract boolean cast adjust logic relat oper op 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic visitor import java util array list import java util array import java util collect import java util compar import java util hash map import java util iter import java util list import java util map import org apach eval func import org apach eval func schema type import org apach func spec import org apach except import org apach warn import org apach datum data type import org apach impl context import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl logic layer schema schema field schema import org apach impl logic layer valid type checker except import org apach impl plan compil messag collector import org apach impl plan compil messag collector messag type import org apach impl plan plan except import org apach impl plan visitor except import org apach impl util pair import org apach newplan oper import org apach newplan oper plan import org apach newplan revers depend order walker import org apach newplan logic util import org apach newplan logic express add express import org apach newplan logic express express visitor import org apach newplan logic express express import org apach newplan logic express bin cond express import org apach newplan logic express binari express import org apach newplan logic express cast express import org apach newplan logic express constant express import org apach newplan logic express derefer express import org apach newplan logic express divid express import org apach newplan logic express equal express import org apach newplan logic express greater equal express import org apach newplan logic express greater express import org apach newplan logic express less equal express import org apach newplan logic express less express import org apach newplan logic express logic express import org apach newplan logic express logic express visitor import org apach newplan logic express map lookup express import org apach newplan logic express mod express import org apach newplan logic express multipli express import org apach newplan logic express neg express import org apach newplan logic express equal express import org apach newplan logic express express import org apach newplan logic express express import org apach newplan logic express regex express import org apach newplan logic express subtract express import org apach newplan logic express user func express import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema public class type check exp visitor extend logic express visitor privat compil messag collector msg collector privat logic relat oper current rel op privat static final int public type check exp visitor oper plan exp plan compil messag collector msg collector logic relat oper rel op throw frontend except super exp plan new revers depend order walker exp plan msg collector msg collector current rel op rel op reset field schema express oper need evalu correct type set field schema resett sr new field schema resett exp plan sr visit overrid public void visit add express bin op throw frontend except add cast numer bin express bin op overrid public void visit subtract express bin op throw frontend except add cast numer bin express bin op overrid public void visit multipli express bin op throw frontend except add cast numer bin express bin op overrid public void visit divid express bin op throw frontend except add cast numer bin express bin op add cast promot numer type larg two input numer type link binari express bin op one input numer bytearray cast bytearray type numer type input bytearray cast doubl param bin op throw frontend except privat void add cast numer bin express binari express bin op throw frontend except logic express lh bin op get lh logic express rh bin op get rh byte lh type lh get type byte rh type rh get type data type number type lh type data type number type rh type return big type byte big type lh type rh type lh type rh type cast small type big type lh type big type insert cast bin op big type bin op get lh els rh type big type insert cast bin op big type bin op get rh els lh type data type data type number type rh type insert cast bin op rh type bin op get lh els rh type data type data type number type lh type insert cast bin op lh type bin op get rh els lh type data type rh type data type cast operand doubl insert cast bin op data type bin op get lh insert cast bin op data type bin op get rh els int err code string msg gener incompat type messag bin op msg collector collect msg messag type error throw new type checker except bin op msg err code except overrid public void visit mod express bin op throw frontend except logic express lh bin op get lh logic express rh bin op get rh byte lh type lh get type byte rh type rh get type boolean error fals lh type data type rh type data type noth els rh type data type rh type data type insert cast bin op rh type bin op get lh els error true els lh type data type rh type data type insert cast bin op lh type bin op get rh els rh type data type insert cast bin op rh type bin op get lh els rh type data type noth els error true els lh type data type rh type data type rh type data type insert cast bin op lh type bin op get rh els rh type data type noth els error true els lh type data type rh type data type rh type data type rh type data type insert cast bin op rh type bin op get lh els error true els error true error int err code string msg gener incompat type messag bin op msg collector collect msg messag type error throw new type checker except bin op msg err code except privat string gener incompat type messag binari express bin op throw frontend except string msg bin op string current rel op null current rel op get alia null msg alia current rel op get alia logic field schema lh fs bin op get lh get field schema logic field schema rh fs bin op get rh get field schema msg msg incompat type bin op get name oper left hand side data type find type name lh fs type lh fs schema null lh fs schema string fals right hand side data type find type name rh fs type rh fs schema null rh fs schema string fals return msg overrid public void visit neg express neg exp throw frontend except byte type neg exp get express get type data type number type type noth els type data type cast bytearray doubl insert cast neg exp data type neg exp get express els int err code string msg use number bytearray msg collector collect msg messag type error throw new type checker except neg exp msg err code except overrid public void visit express exp throw frontend except exp get express instanceof constant express constant express exp get express get valu null insert cast exp data type exp get express byte type exp get express get type type data type int err code string msg use boolean msg collector collect msg messag type error throw new type checker except exp msg err code except overrid public void visit express exp throw frontend except visit boolean binari exp overrid public void visit express exp throw frontend except visit boolean binari exp privat void visit boolean binari binari express bool exp throw frontend except lh rh null constant cast boolean insert cast null boolean bool exp logic express lh bool exp get lh logic express rh bool exp get rh byte lh type lh get type byte rh type rh get type lh type data type rh type data type int err code string msg operand boolean msg collector collect msg messag type error throw new type checker except bool exp msg err code except overrid public void visit less express bin op throw frontend except add cast compar binari exp bin op fals equal op overrid public void visit less equal express bin op throw frontend except add cast compar binari exp bin op fals equal op overrid public void visit greater express bin op throw frontend except add cast compar binari exp bin op fals equal op overrid public void visit greater equal express bin op throw frontend except add cast compar binari exp bin op fals equal op overrid public void visit equal express bin op throw frontend except add cast compar binari exp bin op true equal op overrid public void visit equal express bin op throw frontend except add cast compar binari exp bin op true equal op privat void add cast compar binari exp binari express bin op boolean equal throw frontend except logic express lh bin op get lh logic express rh bin op get rh byte lh type lh get type byte rh type rh get type data type number type lh type data type number type rh type type cast byte big type lh type rh type lh type rh type cast small type big type lh type big type insert cast bin op big type bin op get lh els rh type big type insert cast bin op big type bin op get rh els lh type data type rh type data type good els lh type data type rh type data type good els lh type data type rh type data type good els lh type data type rh type data type data type number type rh type rh type data type rh type data type cast byte array type rh insert cast bin op rh type bin op get lh els rh type data type lh type data type data type number type lh type lh type data type lh type data type cast byte array type lh insert cast bin op lh type bin op get rh els equal case equal condit allow boolean tupl map arg lh type data type rh type data type good els lh type data type rh type data type good els lh type data type rh type data type good els lh type data type rh type data type rh type data type cast byte array type lh insert cast bin op rh type bin op get lh els rh type data type lh type data type lh type data type cast byte array type lh insert cast bin op lh type bin op get rh els throw incompat type error bin op els throw incompat type error bin op privat void throw incompat type error binari express bin op throw frontend except int err code string msg gener incompat type messag bin op msg collector collect msg messag type error throw new type checker except bin op msg err code except privat void insert cast null boolean binari express bin op throw frontend except bin op get lh instanceof constant express constant express bin op get lh get valu null insert cast bin op data type bin op get lh bin op get rh instanceof constant express constant express bin op get rh get valu null insert cast bin op data type bin op get rh add cast convert input exp link logic express arg type type param exp param type param arg throw frontend except privat void insert cast logic express exp byte type logic express arg throw frontend except logic field schema fs new logic schema logic field schema null null type insert cast exp fs arg privat void insert cast logic express node logic field schema fs logic express arg throw frontend except collect cast warn node arg get type fs type msg collector cast express cast new cast express plan arg fs cast set locat node get locat tri disconnect cast arg connect alreadi add cast constructor insert call go plan disconnect cast arg plan insert node cast arg catch plan except pe int err code string msg problem insert cast oper node plan throw new type checker except arg msg err code except pe visit cast basic type cast alway ok cast number number alway ok byte array anyth ok number chararray ok composit type recurs travers schema till get basic type throw frontend except overrid public void visit cast express cast throw frontend except byte type cast get express get type byte type cast get type type data type type type int err code string msg cast data type find type name type bytearray msg collector collect msg messag type error throw new type checker except cast msg err code except logic field schema fs cast get express get field schema logic field schema fs cast get field schema fs null replac null schema bytearray schema fs new logic field schema null null datum type check field schema castabl boolean castabl logic field schema castabl fs fs castabl int err code string msg cast data type find type name type data type schema type type schema fs string fals data type find type name type data type schema type type schema fs string fals msg collector collect msg messag type error throw new type checker except cast msg err code except link regex express expect char array input alway return boolean param rg throw frontend except overrid public void visit regex express rg throw frontend except allow convert rg get lh get type data type insert cast rg data type rg get lh rg get rh get type data type insert cast rg data type rg get rh char array say goodby rg get lh get type data type rg get rh get type data type int err code string msg operand regex char array rg msg collector collect msg messag type error throw new type checker except rg msg err code except overrid public void visit bin cond express bin cond throw frontend except high level type check bin cond get condit get type data type int err code string msg condit bin cond must boolean msg collector collect msg messag type error throw new type checker except bin cond msg err code except byte lh type bin cond get lh get type byte rh type bin cond get rh get type side number convert small type big type data type number type lh type data type number type rh type byte big type lh type rh type lh type rh type big type lh type insert cast bin cond big type bin cond get lh els big type rh type insert cast bin cond big type bin cond get rh els lh type data type rh type data type data type number type rh type rh type data type need add boolean well cast byte array type rh insert cast bin cond rh type bin cond get lh els rh type data type lh type data type data type number type lh type rh type data type need add boolean well cast byte array type lh insert cast bin cond lh type bin cond get rh constant null alway bytearray cast rh type els bin cond get lh instanceof constant express constant express bin cond get lh get valu null tri insert cast bin cond bin cond get rh get field schema bin cond get lh catch frontend except e int err code string msg problem get field schema bin cond get rh throw new type checker except bin cond msg err code except e els bin cond get rh instanceof constant express constant express bin cond get rh get valu null tri insert cast bin cond bin cond get lh get field schema bin cond get rh catch frontend except e int err code string msg problem get field schema bin cond get rh throw new type checker except bin cond msg err code except e els lh type rh type match schema work tupl bag data type schema type lh type tri logic field schema equal unless unknown bin cond get lh get field schema bin cond get rh get field schema int err code string msg two input bin cond must compat schema leav hand side bin cond get lh get field schema right hand side bin cond get rh get field schema msg collector collect msg messag type error throw new type checker except bin cond msg err code except may merg schema previou check exact match catch frontend except fe int err code string msg problem evaluaton bin cond output type msg collector collect msg messag type error throw new type checker except bin cond msg err code except fe els int err code string msg unsupport input type bin cond leav hand side data type find type name lh type right hand side data type find type name rh type msg collector collect msg messag type error throw new type checker except bin cond msg err code except overrid public void visit map lookup express map throw frontend except map get map get type data type insert cast predecessor return map insert cast map data type map get map overrid public void visit derefer express deref throw frontend except byte input type deref get refer express get type switch input type case data type case data type case data type ideal determin type runtim allow type break default int err code string msg refer column within column type data type find type name input type allow throw new type checker except deref msg err code except overrid public void visit user func express func throw frontend except list logic express list func get argument depend graph right input must alreadi know type schema current arg schema new schema logic express op list data type usabl type op get type int err code string msg problem input op user defin function func msg collector collect msg messag type error throw new type checker except func msg err code except tri current arg schema add util translat field schema op get field schema catch frontend except e int err code string msg unabl retriev field schema throw new type checker except func msg err code except e eval func ef eval func context instanti func spec func get func spec ask eval func type input handl list func spec func spec null tri func spec ef get arg func map func spec null func spec func spec func spec schema func spec get input arg schema logic schema l util translat schema l normal func spec set input arg schema util translat schema l catch except e int err code string msg unabl get list overload method throw new type checker except func msg err code except e eval func schema type schema type udf schema type ef get schema type explan way match funcspec choos base actual type input schema first exact match tri field input schema correspond field candid funcspec schema exact match fail first check make input schema bytearray bytearray input schema good fit match attempt differ field essenti permiss cast one type anoth give score base posit cast lookup tabl final score candid funcspec deduc score particular cast cast far permiss cast possibl score candid among non score candid candid low score choos bytearray input schema modifi exact match tri match bytearray input schema consid result ignor bytearray could get multipl candid funcspec match exactli column case notifi user ambigu error els non byte array field match exactli cast bytearray correspond type match udf schema modifi exact match fail good fit algorithm attempt initi come score candid func spec bytearray ignor score process check make ensur posit bytearray input schema type give posit correspond posit candid func spec case indic conflict user notifi error one choic destin type cast bytearray case candid low score choos func spec match spec null boolean exact match fals func spec null func spec size function map find tri see one fit input schema match spec exact match func spec current arg schema func udf schema type null oop exact match find tri see map fit use cast exact match true byte array find func current arg schema tri exact match field except byte array field exact match one candid byte array cast match one match spec exact match byte array func spec current arg schema func udf schema type null exact match byte array work tri good fit match match spec good fit match byte array func spec current arg schema func udf schema type null int err code string msg could infer match function func get func spec multipl none fit pleas use explicit cast msg collector collect msg messag type error throw new type checker except func msg err code except els match spec good fit match func spec current arg schema udf schema type null either byte array find byte array one map exist howev could find match either none fit input schema ambigu throw except can n infer fit int err code string msg could infer match function func get func spec multipl none fit pleas use explicit cast msg collector collect msg messag type error throw new type checker except func msg err code except match spec null voila fit match let insert cast make work notifi user match pick exact match exact match string msg function func get func spec get class name call follow argument type match spec get input arg schema want use differ input argument type pleas use explicit cast msg collector collect msg messag type warn warn func via defin match spec set ctor arg func get func spec get ctor arg func set func spec match spec insert cast func current arg schema match spec get input arg schema udf schema type tri find schema support one func spec obtain insert set cast input schema param func spec map provid udf param input schema param func udf express param udf schema type schema type udf return func spec support schema good suit good suit schema one low score return fit possibl throw visitor except privat func spec good fit match byte array list func spec func spec schema user func express func schema type udf schema type throw visitor except list pair long func spec score func spec list new array list pair long func spec iter func spec iter func spec iter iter next func spec fs iter next long score fit possibl f get input arg schema udf schema type score score func spec list add new pair long func spec score f candid find return null score func spec list size return null score func spec list size sort candid base score collect sort score func spec list new score func spec list compar two candid low score choos one notifi user score func spec list get first score func spec list get first int err code string msg multipl match function func get func spec input schema score func spec list get second get input arg schema score func spec list get second get input arg schema pleas use explicit cast msg collector collect msg messag type error throw new type checker except func msg err code except consid bytearray field list integ byte array posit get byte array posit func make sure one type cast byte array posit among candid func spec map integ pair func spec byte cast map new hash map integ pair func spec byte iter pair long func spec score func spec list iter next func spec func spec next second schema sch func spec get input arg schema iter integ iter byte array posit iter iter next integ iter next tri cast map contain key first candid cast map put new pair func spec byte func spec sch get field type els make sure exist type earli candid match pair func spec byte exist pair cast map get sch get field type exist pair second int err code string msg multipl match function func get func spec input schema exist pair first get input arg schema func spec get input arg schema pleas use explicit cast msg collector collect msg messag type error throw new type checker except func msg err code except catch frontend except fee int err code string msg unalb retriev field schema throw new type checker except func msg err code except fee reach mean candid candid type posit bytearray input also candid store sort score list return first candid one low score return score func spec list get second privat static class score func spec list compar implement compar pair long func spec non javadoc see java util compar compar java lang object java lang object overrid public int compar pair long func spec pair long func spec first first return els first first return els return find exact match schema support one func spec input schema first exact match non byte array field first attempt exactli one candid choos sinc bytearray cast correspond type candid param func spec map provid udf param input schema param func user func express match request param udf schema type schema type udf return match spec find els null throw frontend except privat func spec exact match byte array list func spec func spec schema user func express func schema type udf schema type throw frontend except exact match field except byte array field ignor byte array field match return exact match helper func spec func udf schema type true find exact match schema support one func spec input schema exact match field attempt param func spec map provid udf param input schema param func user func express match request param udf schema type schema type user defin function return match spec find els null throw frontend except privat func spec exact match list func spec func spec schema user func express func schema type udf schema type throw frontend except exact match field n ignor byte array field return exact match helper func spec func udf schema type fals tri find schema support one func spec obtain insert set cast input schema param func spec map provid udf param input schema param udf schema type schema type udf return func spec support schema good suit good suit schema one low score return fit possibl privat func spec good fit match list func spec func spec schema schema type udf schema type func spec match spec null long score long prev good score long long good score long iter func spec iter func spec iter iter next func spec f iter next score fit possibl f get input arg schema udf schema type score score good score match spec fs prev good score good score good score score match spec null good score prev good score return match spec return null check see field input schema byte array param func param input schema return true find els fals throw visitor except privat boolean byte array find user func express func schema throw visitor except int size tri field schema fs get field fs null return fals f type data type return true catch frontend except fee int err code string msg unabl retriev field schema throw new type checker except func msg err code except fee return fals get posit schema byte array param func param input schema throw visitor except privat list integ get byte array posit user func express func schema throw visitor except list integ result new array list integ int size tri field schema f get field f type data type result add catch frontend except fee int err code string msg unabl retriev field schema throw new type checker except func msg err code except fee return result find exact match schema support one func spec input schema param func spec map provid udf param input schema param func user defin function param udf schema type schema type user defin function param ignor byte array flag whether exact match comput ignor bytearray true without ignor bytearray fals return match spec find els null throw frontend except privat func spec exact match helper list func spec func spec schema user func express func schema type udf schema type boolean ignor byte array throw frontend except list func spec match spec new array list func spec iter func spec iter func spec iter iter next func spec f iter next schema equal match f get input arg schema udf schema type ignor byte array match spec add f match spec size return null match spec size int err code string msg multipl match function func get func spec input schema match spec get get input arg schema match spec get get input arg schema pleas use explicit cast msg collector collect msg messag type error throw new type checker except func msg err code except exactli one match spec return return match spec get compar two schema equal argument match purpos relax form schema equal wherein first datatyp field schema check equal field schema udf schema complex type inner schema null check schema equal inner schema field schema input field schema param input schema param udf schema param ignor byte array return true field schema equal argument match fals otherwis throw frontend except public static boolean schema equal match schema input schema schema udf schema schema type udf schema type boolean ignor byte array throw frontend except null equal input schema null udf schema null return true otherwis input schema null return fals udf schema null return fals old udf schema might tupl insid bag fix udf schema util fix schema add tupl bag udf schema udf schema type schema type input schema size udf schema size return fals udf schema type schema type input schema size udf schema size return fals iter field schema input schema get field iter iter field schema j udf schema get field iter field schema udf field schema null next field schema input field schema next input field schema null return fals field take last one vararg field udf field schema j next j next udf field schema ignor byte array input field schema type data type continu input field schema type udf field schema type return fals field schema udf schema complex type inner schema null check schema equal inner schema field schema input field schema field schema udf schema complex type inner schema null mean udf applic input type field irrespect inner schema bag empti tupl reli field type data type schema type udf field schema type udf field schema schema null bag empti tupl udf field schema compar recurs use field schema field schema equal input field schema udf field schema fals true tri modifi empti tupl type bytearray see match need backward compat user might specifi tupl bytearray also match empti tupl field schema input bytearrayin tupl new field schema input field schema convert empti tupl bytearray tupl input bytearrayin tupl field schema equal input bytearrayin tupl udf field schema fals true return fals return true check field sch bag empti tupl schema param field sch return throw frontend except privat static boolean bag empti tupl field schema field sch throw frontend except boolean bag empti tupl fals field sch type data type field sch schema null field sch schema get field null field sch schema get field type data type field sch schema get field schema null bag empti tupl true return bag empti tupl privat static void convert empti tupl bytearray tupl field schema f f type data type f schema null f schema size f schema add new field schema null data type return f schema null field schema fs f schema get field convert empti tupl bytearray tupl fs static final hash map byte list byte cast lookup new hash map byte list byte static order decid score good fit function chang order convers small type prefer convers big type order type small big list byte bool type array list data type data type data type data type data type data type mayb big type cast lookup put data type bool type list byte int type array list data type data type data type data type data type cast lookup put data type int type list byte long type array list data type data type data type data type cast lookup put datum type long type list byte float type array list data type data type data type cast lookup put datum type float type list byte doubl type array list data type data type cast lookup put data type doubl type list byte big integ type array list data type cast lookup put data type big integ type list byte byte array type array list data type data type data type data type data type data type data type data type data type data type data type data type cast lookup put data type byte array type comput modifi version manhattan distanc two schema valu axi prefer valu chang axi mean number cast requir less axi howev function ceas metric triangl inequ hold schema size dimension vector order axi defin cast lookup unallow cast return dist param param param type return privat long fit possibl schema schema schema type type null null return list field schema field get field list field schema fs field get field type schema type field size f field size return type schema type field size f field size return long score int cast cnt int field size field schema field get null return byte array includ comput score bytearray field look separ outsid function type data type continu get vararg field defin take repeatedli field schema f type schema type size f field get size fs field get data type schema type type field schema equal f fals true return field schema equal fs true true continu cast lookup contain key type return cast lookup get type contain f type return score cast lookup get type index f type cast cnt return score cast cnt privat void insert cast user func express func schema sch schema sch schema type sch type throw frontend except list field schema fs lst sch get field list field schema ts lst sch get field list logic express arg func get argument int field schema f sch fs lst get vararg field defin take repeatedli field schema sch sch type schema type t lst size t lst get t lst size t lst get f sch type sch type continu insert cast func util translat field schema sch arg get helper collect warn cast insert plan implicit cast param node param origin type param type static void collect cast warn oper node byte origin type byte type compil messag collector msg collector string origin type name data type find type name origin type string type name data type find type name type string op name node get class get simpl name warn kind null switch type case data type kind warn break case data type kind warn break case data type kind warn break case data type kind warn break case data type kind warn break case data type kind warn break case data type kind warn break case data type kind warn break case data type kind warn break case data type kind warn break case data type kind warn break case data type kind warn break msg collector collect origin type name implicitli cast type name op name oper messag type warn kind static class field schema resett extend express visitor protect field schema resett oper plan p throw frontend except super p new revers depend order walker p overrid protect void execut logic express op throw frontend except op reset field schema 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic visitor import java util array list import java util collect import java util list import org apach except import org apach datum data type import org apach impl logic layer frontend except import org apach impl logic layer valid type checker except import org apach impl plan compil messag collector import org apach impl plan visitor except import org apach impl plan compil messag collector messag type import org apach impl util multi map import org apach newplan depend order walker import org apach newplan oper import org apach newplan oper plan import org apach newplan logic express cast express import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic express project express import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat split output import org apach newplan logic relat store import org apach newplan logic relat union import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat node visitor import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema get type oper alway return check type input express plan comput output schema type inform moment parser return get schema correct alia insert cast necessari public class type check rel visitor extend logic relat node visitor privat compil messag collector msg collector public type check rel visitor oper plan plan compil messag collector msg collector throw frontend except super plan new depend order walker plan msg collector msg collector overrid public void visit load load noth overrid public void visit store store throw frontend except store reset schema store get schema schema filter output filter input throw frontend except overrid public void visit filter filter throw frontend except filter reset schema logic express plan comparison plan filter get filter plan check inner plan output port comparison plan get sourc size int err code string msg filter cond plan one output msg collector collect msg messag type error throw type checker except filter msg err code except null visit filter express visit express plan comparison plan filter check filter express type byte inner cond type logic express comparison plan get sourc get get type inner cond type data type int err code string msg filter condit must evalu boolean find data type find type name inner cond type msg collector collect msg messag type error throw type checker except filter msg err code except null tri comput schema filter reset schema filter get schema catch frontend except fe int err code string msg problem reconcil output schema filter msg collector collect msg messag type error throw type checker except filter msg err code except fe privat void throw type checker except oper op string msg int err code byte input frontend except fe throw type checker except fe null throw new type checker except op msg err code except throw new type checker except op msg err code except fe overrid public void visit gener gen throw frontend except int gen get output plan size logic express plan exp plan gen get output plan get check inner plan output port exp plan get sourc size int err code string msg gener express plan one output msg collector collect msg messag type error throw type checker except gen msg err code except null visit filter express visit express plan exp plan gen gen reset schema gen get schema overrid public void visit inner load inner load throw frontend except inner load reset schema inner load get schema overrid public void visit throw frontend except tri visit inner plan new type check rel visitor get inner plan msg collector visit comput schema reset schema get schema catch frontend except fe int err code string msg problem reconcil output schema msg collector collect msg messag type error throw type checker except msg err code except fe privat void visit express plan logic express plan expl plan logic relat oper rel op throw frontend except type check exp visitor exp type check new type check exp visitor expl plan msg collector rel op exp type check visit non javadoc see org apach newplan logic relat logic relat node visitor visit org apach newplan logic relat union output schema union merg input schema operand leav side alway take preced alia allow type promot overrid public void visit union u throw frontend except u reset schema make copi insert oper list chang we list oper input new array list oper u get input point union one operand problem parser input size throw new assert error union count operand logic schema schema null tri comput schema schema u get schema catch frontend except fee int err code string msg problem read schema input union msg collector collect msg messag type error throw type checker except u msg err code except fee cast insert type union onschema case union onschema foreach cast add union schema setter schema null u schema insert cast input necessari int input size insert op insert cast necessari logic relat oper input get u may comput schema input insert insert op null insert op get alia null insert op set alia logic relat oper input get get alia tri visit insert op catch frontend except fee int err code string msg problem cast input union msg collector collect msg messag type error throw type checker except u msg err code except fee u reset schema u get schema cast insert relat oper necessari current shallow cast param op param op return insert oper null insert throw frontend except privat insert cast necessari logic relat oper op logic relat oper op throw frontend except make sure adjac direct op op list oper pre list plan get predecessor op boolean find fals oper tmp op pre list compar refer tmp op op find true break find int err code string msg two oper requir cast adjac throw type checker except op msg err code except null retriev input schema cast use later logic schema schema null logic schema schema null tri schema op get schema schema op get schema catch frontend except fe int err code string msg problem read schema input op get class get simpl name throw type checker except op msg err code except fe make sure suppli target schema number member number output field op schema size schema size int err code string msg schema size mismatch cast input schema size schema size target schema size schema size throw type checker except op msg err code except null plan insid gener field need cast project field need cast project cast array list logic express plan gener plan new array list logic express plan logic plan inner plan new logic plan creat gener foreach gener lo gen new gener inner plan gener plan new boolean schema size inner plan add lo gen creat insert foreach new plan foreach set inner plan inner plan int cast need counter int schema size inner load inner load new inner load inner plan foreach inner plan add inner load inner plan connect inner load lo gen logic express plan gen plan new logic express plan project express project new project express gen plan lo gen gen plan add project add cast necessari compar target type input schema logic field schema fs null f schema get field shallow check logic field schema field schema field schema schema get field field schema type fs type cast need counter cast express castexp new cast express gen plan project field schema castexp set locat op get locat gener plan add gen plan realli need cast cast need counter flatten list cast insert n flatten array list boolean flatten list new array list boolean int schema size flatten list add boolean valu fals manipul plan structur plan add foreach plan insert op foreach op return foreach els plan remov foreach return null overrid public void visit split output op throw frontend except op reset schema oper plan lp op get plan split output input list oper list lp get predecessor op list size int err code string msg split output one input find list size input throw type checker except op msg err code except null logic express plan cond plan op get filter plan check inner plan output port cond plan get sourc size int err code string msg split inner plan one output leaf msg collector collect msg messag type error throw type checker except op msg err code except null visit express plan cond plan op byte inner cond type logic express cond plan get sourc get get type inner cond type data type int err code string msg split condit must evalu boolean find data type find type name inner cond type msg collector collect msg messag type error throw type checker except op msg err code except null tri comput schema op get schema catch frontend except fe int err code string msg problem read schema input split output msg collector collect msg messag type error throw type checker except op msg err code except fe distinct output schema input param op throw visitor except overrid public void visit distinct op throw visitor except op reset schema tri comput schema op get schema catch frontend except fe int err code string msg problem read schema input distinct msg collector collect msg messag type error throw type checker except op msg err code except fe overrid public void visit limit limit throw frontend except limit reset schema logic express plan express plan limit get limit plan express plan null check inner plan output port express plan get sourc size int err code string msg limit express plan one output msg collector collect msg messag type error throw type checker except limit msg err code except null visit limit express visit express plan express plan limit check limit express type byte inner cond type logic express express plan get sourc get get type cast long bytearray inner cond type data type insert atom cast inner plan express plan limit data type els must int long els inner cond type data type inner cond type data type int err code string msg limit express must evalu long integ find data type find type name inner cond type msg collector collect msg messag type error throw type checker except limit msg err code except null tri comput schema limit get schema catch frontend except fe int err code string msg problem read schema input limit msg collector collect msg messag type error throw type checker except limit msg err code except fe return concaten field input oper one input schema construct output schema param c throw visitor except public void visit cross cs throw visitor except cs reset schema tri comput schema c get schema catch frontend except fe int err code string msg problem read schema input cross msg collector collect msg messag type error throw type checker except c msg err code except fe schema sort output sort input throw frontend except public void visit sort sort throw frontend except sort reset schema type check intern plan int sort get sort col plan size logic express plan sort col plan sort get sort col plan get check inner plan output port sort col plan get sourc size int err code string msg sort inner plan one output leaf msg collector collect msg messag type error throw type checker except sort msg err code except null visit express plan sort col plan sort tri comput schema sort get schema catch frontend except fee int err code string msg problem reconcil output schema sort msg collector collect msg messag type error throw type checker except sort msg err code except fee schema rank output input plu rank field throw frontend except public void visit rank rank throw frontend except rank reset schema type check intern plan list logic express plan rank col plan rank get rank col plan int rank col plan size logic express plan rank col plan rank col plan get check inner plan output port rank col plan get sourc size int err code string msg rank inner plan one output leaf msg collector collect msg messag type error throw type checker except rank msg err code except null visit express plan rank col plan rank tri comput schema rank get schema catch frontend except fee int err code string msg problem reconcil output schema rank msg collector collect msg messag type error throw type checker except rank msg err code except fee schema split output split input public void visit split split throw visitor except oper plan lp split get plan list oper input list lp get predecessor split input list size int err code string msg split one input find input list size input throw type checker except split msg err code except null split reset schema tri comput schema split get schema catch frontend except fe int err code string msg problem reconcil output schema split msg collector collect msg messag type error throw type checker except split msg err code except fe join visitor throw frontend except public void visit join join throw frontend except tri join reset schema join get schema catch frontend except fe int err code string msg resolv join output schema msg collector collect msg messag type error throw type checker except join msg err code except fe multi map integ logic express plan join col plan join get express plan list oper input join get input logic plan plan type check intern plan int input size array list logic express plan inner plan new array list logic express plan join col plan get int j j inner plan size j logic express plan inner plan inner plan get j check inner plan output port inner plan get sourc size int err code string msg join inner plan one output leaf msg collector collect msg messag type error throw type checker except join msg err code except null visit express plan inner plan join tri join multi col join merg inner plan output know type group column byte group type get atom join col type join go input add cast necessari int input size collect logic express plan expr plan join get join plan one express plan get check get atom join col type logic express plan expr plan expr plan iter next check inner plan size alreadi do byte inner type logic express expr plan get sourc get get type inner type group type insert atom cast inner plan expr plan join group type els schema group key logic schema group schema get schema inner plan join get express plan join go input add cast necessari int input size list logic express plan inner plan new array list logic express plan join get join plan int j j inner plan size j logic express plan inner plan inner plan get j logic express output exp logic express inner plan get sourc get byte inner type output exp get type byte expect type group schema get field j type data type atom inner type data type inner type int err code string msg join inner plan one output leaf msg collector collect msg messag type error throw type checker except join msg err code except null inner type expect type insert atom cast inner plan inner plan join expect type catch frontend except fe int err code string msg resolv join output schema msg collector collect msg messag type error throw type checker except join msg err code except fe tri join reset schema join get schema catch frontend except fe int err code string msg resolv join output schema msg collector collect msg messag type error throw type checker except join msg err code except fe param join return true one join column input privat boolean join multi col join join multi map integ logic express plan expr plan join get express plan expr plan null expr plan size throw new assert error join join multi col call join express plan return expr plan get size use get merg type output join col join col atom type return type join col throw frontend except privat byte get atom join col type join join throw frontend except join multi col join int err code string msg get atom join col type use deal atom group col throw new frontend except msg err code except fals null byte group type data type merg inner plan output know type group column int plan get predecessor join size list logic express plan inner plan new array list logic express plan join get join plan inner plan size int err code string msg group input number inner plan throw new frontend except msg err code except fals null byte inner type logic express inner plan get get sourc get get type byte new group type data type merg type group type inner type new group type int err code string msg merg join key incompat type outer data type find type name group type inner data type find type name inner type throw new frontend except msg err code except els group type new group type return group type use get merg type output join col join cogroup col atom type return type join col throw frontend except privat byte get atom col type multi map integ logic express plan expr plan throw frontend except multi expr plan per input expr plan int err code string msg get atom join col type use deal atom group col throw new frontend except msg err code except fals null byte group type data type merg inner plan output know type group column int expr plan size list logic express plan inner plan new array list logic express plan expr plan get inner plan size int err code string msg group input number inner plan throw new frontend except msg err code except fals null byte inner type logic express inner plan get get sourc get get type byte new group type data type merg type group type inner type new group type int err code string msg merg join key incompat type outer data type find type name group type inner data type find type name inner type throw new frontend except msg err code except els group type new group type return group type privat boolean multi expr plan per input multi map integ logic express plan expr plan expr plan null expr plan size throw new assert error join join multi col call join express plan return expr plan get size cast singl output oper inner plan type param inner plan param rel op join cogroup param type throw frontend except privat void insert atom cast inner plan logic express plan inner plan logic relat oper rel op byte type throw frontend except data type usabl type type int err code string msg cast data type find type name type throw type checker except rel op msg err code except null list oper output inner plan get sourc output size int err code string msg expect one output find output size output throw type checker except rel op msg err code except null logic express current output logic express output get type check exp visitor collect cast warn rel op current output get type type msg collector logic field schema new new logic field schema current output get field schema alia null type add cast new cast express inner plan current output new visit modifi inner plan visit express plan inner plan rel op creat combin group join column schema base join cogroup express plan input implement base assumpt input join col tupl ariti param expr plan return throw frontend except privat logic schema get schema inner plan multi map integ logic express plan expr plan logic relat oper op throw frontend except fs list repres column group tupl list logic field schema fs list new array list logic field schema int output schema size expr plan get size default bytearray type check n care alias int output schema size f list add new logic field schema null null datum type merg inner plan output know type group column int expr plan size list logic express plan inner plan new array list logic express plan expr plan get int j j inner plan size j logic express e op logic express inner plan get j get sourc get byte inner type e op get type e op instanceof project express project express e op project star project star one express plan int err code string msg group attribut either star list express msg collector collect msg messag type error throw new frontend except msg err code except fals null merg type logic field schema group fs f list get j group fs type data type merg type group fs type inner type group fs type datum type string col type join op instanceof cogroup col type group string msg col type column j relat col type statement datatyp data type find type name inner type incompat type correspond column earli relat statement msg collector collect msg messag type error type checker except ex new type checker except op msg except ex set mark show user true throw ex creat schema field schema logic schema tupl schema new logic schema logic field schema fs fs list tupl schema add field fs return tupl schema group group col input type throw frontend except overrid public void visit cogroup cg throw frontend except tri cg reset schema cg get schema catch frontend except fe int err code string msg resolv group output schema msg collector collect msg messag type error throw type checker except cg msg err code except fe multi map integ logic express plan group plan cg get express plan list oper input cg get input logic plan plan type check intern plan int input size list logic express plan inner plan new array list logic express plan cg get express plan get int j j inner plan size j logic express plan inner plan inner plan get j check inner plan output port inner plan get sourc size int err code string msg group inner plan one output leaf msg collector collect msg messag type error throw type checker except cg msg err code except null visit express plan inner plan cg tri co group multi col cg merg inner plan output know type group column byte group type get atom col type cg get express plan go input add cast necessari int input size list logic express plan inner plan new array list logic express plan cg get express plan get check inner plan size alreadi do byte inner type logic express inner plan get get sourc get get type inner type group type insert atom cast inner plan inner plan get cg group type els logic schema group schema get schema inner plan cg get express plan cg go input add cast necessari int input size list logic express plan inner plan new array list logic express plan group plan get int j j inner plan size j logic express plan inner plan inner plan get j byte inner type logic express inner plan get sourc get get type byte expect type data type data type atom inner type data type inner type int err code string msg sorri group complex type support soon msg collector collect msg messag type error throw type checker except cg msg err code except null expect type group schema get field j type inner type expect type insert atom cast inner plan inner plan cg expect type catch frontend except fe int err code string msg resolv group output schema msg collector collect msg messag type error throw type checker except cg msg err code except fe tri cg reset schema cg get schema catch frontend except fe int err code string msg resolv group output schema msg collector collect msg messag type error throw type checker except cg msg err code except fe param co group return true one join column input privat boolean co group multi col cogroup co group multi map integ logic express plan expr plan co group get express plan expr plan null expr plan size throw new assert error co group join multi col becal join express plan return expr plan get size 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach import com googl common collect map import org apach datum tupl import org apach tool pigstat statu report import java io except import java lang reflect import java util array list import java util list import java util map base class fs function tupl gener type handl marshal object basic error check etc also infer output schema provid function verifi input tupl extend class implement pre exec tupl input pre method writ oper multipl input tupl public abstract class type output eval func extend eval func use implement output schema protect class type class null public class get output type class return type class suppress warn uncheck public type output eval func type class class get type argument type output eval func class get class get increment hadoop counter bad input either null small protect void verifi input tupl input int minimum size throw except verifi udf input get counter group input minimum size increment counter use counter group typic work fine sinc subclass name enough identifi case though e wrapper facad number differ transform function specif group name need protect string get counter group return get class get name get actual type argument child class use extend gener base class param base class base class param child class child class return list raw class actual type argument suppress warn uncheck protect static list class get type argument class base class class extend child class map type type resolv type map new hash map type type child class start walk inherit hierarchi hit base class get class type equal base class type instanceof class use inform we raw type keep go type class type get gener superclass els parameter type parameter type parameter type type class raw type class parameter type get raw type type actual type argument parameter type get actual type argument type variabl type paramet raw type get type paramet int actual type argument length resolv type put type paramet actual type argument raw type equal base class type raw type get gener superclass final actual type argument provid base class determin possibl raw class type argument type actual type argument type instanceof class actual type argument class type get type paramet els actual type argument parameter type type get actual type argument list class type argument class new array list class resolv type chase type variabl type base type actual type argument resolv type contain key base type base type resolv type get base type type argument class add get class base type return type argument class get underli class type null type variabl type param type type return underli class suppress warn uncheck privat static class get class type type type instanceof class return class type els type instanceof parameter type return get class parameter type type get raw type els type instanceof gener array type type compon type gener array type type get gener compon type class compon class get class compon type compon class null return array new instanc compon class get class els return null els return null increment hadoop counter bad input either null small param klass name call class record purpos param input tupl pass param minimum size minimum size requir tupl protect static void verifi udf input string klass tupl input int minimum size throw except input null safe incr counter klass null input throw new except null input klass els input size minimum size string reason argument get input size need least minimum size safe incr counter klass reason throw new except enough argument klass get input size expect least minimum size els safe incr counter klass valid input protect static void safe incr counter string group string name long increment statu report get instanc incr counter group name increment 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer plan import java util hash set import java util set import org apach load func import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper cast import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer relat oper load import org apach backend hadoop executionengin physic layer relat oper store import org apach impl context import org apach impl plan depth first walker import org apach impl plan visitor except public class udf cach ship file visitor extend phi plan visitor privat set string cach file new hash set string privat set string ship file new hash set string public udf cach ship file visitor physic plan plan super plan new depth first walker physic oper physic plan plan overrid public void visit load load ld throw visitor except ld get cach file null cach file add ld get cach file ld get ship file null ship file add ld get ship file overrid public void visit store store st throw visitor except st get cach file null cach file add st get cach file st get ship file null ship file add st get ship file public void visit user func user func udf throw visitor except udf get cach file null cach file add udf get cach file udf get ship file null ship file add udf get ship file overrid public void visit cast cast cast cast get func spec null object obj context instanti func spec cast get func spec obj instanceof load func load func load func load func obj load func get cach file null cach file add load func get cach file load func get ship file null ship file add load func get ship file public set string get cach file return cach file public set string get ship file return ship file 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach impl util import java io except import java io serializ import java util array import java util hash map import java util properti import org apach common log log import org apach common log log factori import org apach hadoop conf configur import org apach backend hadoop executionengin map reduc layer configur public class context privat static final log log factori get log context class privat configur jconf null privat hash map context key properti udf conf privat properti client sy prop static final string client sy prop static final string udf context privat static thread local context tss new thread local context overrid public context initi valu return new context privat context udf conf new hash map context key properti return thread local link context public static context get context return tss get intern use call user code public static void set udf context context udf context tss set udf context intern use call user code static datum cleanup public static void static datum cleanup tss new thread local context overrid public context initi valu return new context intern use call user code public hash map context key properti get udf conf return udf conf intern use call user code public void set client system prop properti properti client sy prop properti get system properti read client machin launch includ command line properti pass launch time return client side system properti includ command line properti public properti get client system prop return client sy prop add job conf singleton call backend map reduc function fs obtain job conf backend public void add job conf configur conf jconf conf get job conf call backend return null frontend return job conf job copi job conf noth write keep system get conf use record specif inform public configur get job conf jconf null return new configur jconf els return null get properti object specif note give call multipl time script instanc pass differ argument provid differ configur object use loader pass input object path separ instanc loader constructor argument could also use avail front back end note use share inform across instanti function front end front end back end use share inform instanti map reduc instanc back end runtim param c obtain properti object param arg string argument make instanc uniqu return refer properti object specif call refer copi chang object automat propog instanc call function suppress warn rawtyp public properti get properti class c string arg context key k gener key c arg properti p udf conf get k p null p new properti udf conf put k p return p get properti object specif note give call multipl time script provid configur object make sure multipl instanc stomp guarante properti object separ provid note use share inform across instanti function front end front end back end use share inform instanti map reduc instanc back end runtim param c obtain properti object return refer properti object specif call refer copi chang object automat propog instanc call function suppress warn rawtyp public properti get properti class c context key k gener key c null properti p udf conf get k p null p new properti udf conf put k p return p serial specif inform instanc job conf function intend call front end prepar send datum backend param conf job conf serial throw except underli serial throw public void serial configur conf throw except conf set object serial serial udf conf conf set object serial serial client sy prop intern use public string serial tri return object serial serial udf conf catch except e error context serial throw error e return null popul udf conf field function intend call map configur reduc configur backend assum add job conf alreadi call throw except underli deser throw suppress warn uncheck public void deseri throw except udf conf hash map context key properti object serial deseri jconf get client sy prop properti object serial deseri jconf get public void deseri spark string udf conf str string client sy prop str throw except udf conf str null client sy prop str null udf conf hash map context key properti object serial deseri udf conf str client sy prop properti object serial deseri client sy prop str privat context key gener key class c string arg return new context key c get name arg public void reset udf conf clear public boolean conf empti return udf conf empti conveni method code check run see return boolean type valu public boolean frontend mapr task id mapreduc job applic attempt id return jconf null jconf get configur null jconf get configur null make shallow copi context overrid public context clone context new context client sy prop client sy prop jconf jconf udf conf udf conf return class act key hashmap context hold class arg udf implement equal hash code static class context key implement serializ privat static final long serial version privat string class name privat string arg context key string class name string arg class name class name arg arg string get class name return class name string get arg return arg overrid public string string return context key class name class name arg array string arg overrid public int hash code final int prime int result result prime result array hash code arg result prime result class name null class name hash code return result overrid public boolean equal object obj obj return true obj null return fals get class obj get class return fals context key context key obj array equal arg arg return fals class name null class name null return fals els class name equal class name return fals return true public properti get client sy prop return client sy prop 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin map reduc layer import org apach backend hadoop executionengin physic layer physic oper import org apach backend hadoop executionengin physic layer express oper user func import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach impl plan depend order walker import org apach impl plan visitor except public class end input need visitor extend phi plan visitor privat boolean need fals public end input need visitor physic plan plan super plan new depend order walker physic oper physic plan plan overrid public void visit user func user func user func throw visitor except super visit user func user func user func need end input process need true public boolean need end input process return need 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic optim import java util collect import java util list import org apach impl logic layer frontend except import org apach impl util multi map import org apach newplan depend order walker import org apach newplan oper plan import org apach newplan plan walker import org apach newplan revers depend order walker import org apach newplan logic express express visitor import org apach newplan logic express logic express import org apach newplan logic express logic express plan import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat split output import org apach newplan logic relat store import org apach newplan logic relat stream import org apach newplan logic relat union import org apach newplan logic relat logic relat node visitor public class uid resett extend logic relat node visitor public uid resett oper plan plan throw frontend except super plan new depend order walker plan overrid public void visit load load throw frontend except load reset uid overrid public void visit filter filter throw frontend except filter reset uid express uid resett uid resett new express uid resett filter get filter plan uid resett visit overrid public void visit store store throw frontend except store reset uid overrid public void visit join join throw frontend except join reset uid collect logic express plan join plan join get express plan valu logic express plan join plan join plan express uid resett fs resett new express uid resett join plan fs resett visit overrid public void visit foreach throw frontend except foreach reset uid oper plan inner plan foreach get inner plan plan walker new walker current walker spawn child walker inner plan push walker new walker current walker walk pop walker overrid public void visit gener gen throw frontend except gen reset uid list logic express plan gen plan gen get output plan logic express plan gen plan gen plan express uid resett fs resett new express uid resett gen plan f resett visit overrid public void visit inner load load throw frontend except load reset uid load get project reset uid overrid public void visit cogroup lo cogroup throw frontend except lo cogroup reset uid multi map integ logic express plan exp plan lo cogroup get express plan logic express plan exp plan exp plan valu express uid resett uid resett new express uid resett exp plan uid resett visit overrid public void visit split lo split throw frontend except lo split reset uid overrid public void visit split output lo split output throw frontend except lo split output reset uid express uid resett uid resett new express uid resett lo split output get filter plan uid resett visit overrid public void visit union lo union throw frontend except lo union reset uid overrid public void visit sort lo sort throw frontend except lo sort reset uid list logic express plan sort plan lo sort get sort col plan logic express plan sort plan sort plan express uid resett uid resett new express uid resett sort plan uid resett visit overrid public void visit rank lo rank throw frontend except lo rank reset uid list logic express plan rank plan lo rank get rank col plan logic express plan rank plan rank plan express uid resett uid resett new express uid resett rank plan uid resett visit overrid public void visit distinct lo distinct throw frontend except lo distinct reset uid overrid public void visit limit lo limit throw frontend except lo limit reset uid lo limit get limit plan null express uid resett uid resett new express uid resett lo limit get limit plan uid resett visit overrid public void visit cross lo cross throw frontend except lo cross reset uid overrid public void visit stream lo stream throw frontend except lo stream reset uid class express uid resett extend express visitor protect express uid resett oper plan p throw frontend except super p new revers depend order walker p overrid protect void execut logic express op throw frontend except op reset uid 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import java util list import org apach impl logic layer frontend except import org apach newplan oper import org apach newplan oper plan superclass unari express public abstract class unari express extend logic express add oper plan connect left right hand side oper param name oper param plan plan oper part param exp express express oper public unari express string name oper plan plan logic express exp super name plan plan add plan connect exp get express unari express oper return express left hand side throw frontend except public logic express get express throw frontend except list oper pred plan get successor pred null return null return logic express pred get 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop executionengin physic layer express oper import java util array list import java util list import org apach impl plan oper key import org apach backend hadoop executionengin physic layer plan phi plan visitor import org apach backend hadoop executionengin physic layer plan physic plan import org apach backend hadoop executionengin physic layer express oper express oper import org apach impl plan visitor except public abstract class unari express oper extend express oper express oper expr privat transient list express oper child public unari express oper oper key k int rp super k rp public unari express oper oper key k super k overrid public boolean support multipl input auto gener method stub return fals set contain express input valu public void set input expr physic plan plan expr express oper plan get predecessor get set contain express explicitli mostli test param e express contain public void set expr express oper e expr e get contain express return contain express public express oper get expr return expr protect void clone helper unari express oper op n clone refer someth alreadi plan expr op expr result type op get result type get child express express overrid public list express oper get child express child null child new array list express oper child add expr return child 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach datum import java io data input import java io data output import java io except import java util list import org apach backend executionengin exec except public class unlimit null tupl extend abstract tupl overrid public int size return integ overrid public object get int field num throw exec except return null overrid public list object get throw new runtim except unimpl overrid public void set int field num object val throw exec except throw new exec except unimpl overrid public void append object val throw new runtim except unimpl overrid public long get memori size throw new runtim except unimpl overrid public void read field data input arg throw except throw new except unimpl overrid public void write datum output arg throw except throw new except unimpl overrid public int compar object throw new runtim except unimpl 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic express import java io except import java lang reflect method import java util array list import java util list import java util properti import java util regex matcher import java util regex pattern import org apach algebra import org apach eval func import org apach func spec import org apach builtin invok gener import org apach builtin nondeterminist import org apach datum data type import org apach datum schema tupl class gener gen context import org apach datum schema tupl frontend import org apach impl context import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach impl util context import org apach newplan oper import org apach newplan oper plan import org apach newplan plan visitor import org apach newplan logic util import org apach newplan logic relat logic schema import org apach newplan logic relat logic schema logic field schema import org apach parser logic plan builder import org apach parser sourc locat import com googl common base joiner import com googl common collect list public class user func express extend logic express privat func spec func spec privat eval func ef null privat string signatur privat static int sig seq privat boolean via defin fals repres whether function instanti via statement public user func express oper plan plan func spec func spec super user func plan func spec func spec plan add signatur null signatur integ string sig seq public user func express oper plan plan func spec func spec list logic express arg plan func spec logic express arg arg plan connect arg public user func express oper plan plan func spec func spec boolean via defin plan func spec via defin via defin public user func express oper plan plan func spec func spec list logic express arg boolean via defin plan func spec arg via defin via defin privat boolean lazili initi invok function fals privat list logic express save arg late null privat boolean invok static fals privat string func name null privat string packag name null public user func express oper plan plan func spec func spec list logic express arg boolean via defin boolean lazili initi invok function boolean invok static string packag name string func name plan func spec arg via defin save arg late arg lazili initi invok function lazili initi invok function packag name packag name func name func name invok static invok static public func spec get func spec return func spec overrid public void accept plan visitor v throw frontend except v instanceof logic express visitor throw new frontend except expect logic express visitor logic express visitor v visit overrid public boolean equal oper throw frontend except purpos optim rule special logic express simplifi non determinist udf equal anoth return fals case note function also invok implement oper plan equal function call test case compar logic plan return fals even plan clone determinist return fals instanceof user func express user func express exp user func express func spec equal exp func spec return fals list oper succ get plan get successor list oper succ get plan get successor succ null succ null succ null succ null return true els one udf null successor return fals succ size succ size return fals int succ size succ get equal succ get return fals return true els return fals public boolean determinist throw frontend except class udf class tri udf class context resolv class name get func spec get class name catch except ioe throw new frontend except instanti get func spec ioe udf class get annot nondeterminist class null return true return fals public list logic express get argument throw frontend except list oper successor null list logic express arg new array list logic express tri successor plan get successor successor null return arg oper lo successor arg add logic express lo catch frontend except e return arg return arg param func spec func spec set public void set func spec func spec func spec func spec func spec ef eval func context instanti func spec func spec overrid public logic schema logic field schema get field schema throw frontend except field schema null return field schema logic schema input schema new logic schema list oper succ plan get successor succ null oper lo succ logic express lo get field schema null input schema null break input schema add field logic express lo get field schema lazili initi invok function initi invok function sinc ef set one time never chang valu optim instanti significantli optim perform frontend ef null ef eval func context instanti func spec func spec ef set context signatur signatur schema translat input schema util translat schema input schema translat input schema null properti prop context get context get properti ef get class prop put evalfunc inputschema signatur translat input schema ef instanceof algebra case algebra func set origin input schema initi interm final string func new string algebra ef get initi algebra ef get interm algebra ef get final class c context instanti func spec new func spec func get class prop context get context get properti c prop put evalfunc inputschema signatur translat input schema store input schema context ef set input schema translat input schema schema udf schema ef output schema translat input schema udf schema null udf schema size throw new frontend except give return improp schema schema contain one field tupl bag singl type return udf schema append come set schema tupl frontend regist gener possibl translat input schema fals gen context schema tupl frontend regist gener possibl udf schema fals gen context udf schema null schema field schema fs udf schema size fs new schema field schema null null datum type find type ef get return type els udf schema size fs new schema field schema udf schema get field els fs new schema field schema null udf schema data type field schema util translat field schema fs field schema normal els field schema new logic schema logic field schema null null datum type find type ef get return type uid field schema field schema merg uid uid field schema return field schema privat void initi invok function list logic field schema field schema list new array list logic express le save arg late tri field schema add le get field schema catch frontend except e throw new runtim except e class func class invok static tri func class context resolv class name packag name catch except e throw new runtim except invok function name find packag name e els func class data type find type class field schema get type func class primit func class logic plan builder type class func class class paramet type new class field schema size invok static int idx int invok static field schema size paramet type idx data type find type class field schema get type list integ primit paramet list new array list int paramet type length paramet type primit primit paramet add int tri primit paramet size method null int tri class tmp paramet type new class paramet type length int j j paramet type length j tmp paramet type j paramet type j int tmp int idx tmp tmp int flip primit paramet get idx tmp paramet type flip logic plan builder type class tmp paramet type flip tmp idx tri func class get method func name paramet type null paramet type tmp paramet type break catch secur except e throw new runtim except allow access method func name class func class e catch method except e continu search match post box null throw new runtim except give method func name exist class func class string ctor arg new string ctor arg func class get name ctor arg func name ctor arg list string param list new array list class param paramet type param add param get name ctor arg joiner join param need allow defin function cach etc esp reus func spec new func spec invok gener class get name ctor arg lazili initi invok function fals need fix use updat code current will n copi properli call do mayb ok overrid public logic express deep copi logic express plan lg exp plan throw frontend except user func express copi null tri copi new user func express lg exp plan get func spec clone via defin copi signatur signatur deep copi input express list oper input plan get successor input null oper op input logic express input logic express op logic express input copi input deep copi lg exp plan lg exp plan add input copi lg exp plan connect copi input copi catch clone support except e e print stack trace copi set locat new sourc locat locat return copi public string string string builder msg new string builder msg append name name get func spec type field schema null msg append data type find type name field schema type els msg append null msg append uid field schema null msg append field schema uid els msg append null msg append return msg string public string get signatur return signatur public boolean via defin return via defin public eval func get eval func ef null ef eval func context instanti func spec func spec return ef 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach builtin import java io byte array input stream import java io byte array output stream import java io except import java io pushback input stream import java math big decim import java math big integ import java util array import java util dequ import java util hash map import java util link list import java util map import org apach common log log import org apach common log log factori import org apach load store caster import org apach warn import org apach resourc schema resourc field schema import org apach datum bag factori import org apach datum datum bag import org apach data data byte array import org apach datum data type import org apach datum default bag factori import org apach datum tupl import org apach datum tupl factori import org apach impl util log util import org joda time date time abstract class provid standard convers utf encod datum datum type intend extend load store function link storag public class utf storag convert implement load store caster protect bag factori bag factori bag factori get instanc protect tupl factori tupl factori tupl factori get instanc protect final log log log factori get log get class privat static final integ max int integ valu integ privat static final integ min int integ valu integ privat static final long max long long valu long privat static final long min long long valu long privat static final int public utf storag convert privat char find start char char start throw except switch start case return case return case return default throw new except unknown start charact privat datum bag consum bag pushback input stream resourc field schema field schema throw except field schema null throw new except schema null resourc field schema fss field schema get schema get field tupl int buf buf read buf throw new except unexpect end bag fss length throw new except tupl allow insid bag schema resourc field schema fs fss data bag db default bag factori get instanc new default bag true consum tupl fs null db add buf read buf buf throw new except unexpect end bag buf break return db privat tupl consum tupl pushback input stream resourc field schema field schema throw except field schema null throw new except schema null int buf byte array output stream buf read buf buf throw new except unexpect end tupl buf unread buf return null tupl tupl factori get instanc new tupl field schema get schema null field schema get schema get field length resourc field schema fss field schema get schema get field interpret item insid tupl one one base inner schema int fss length object field resourc field schema fs fss int delimit fss length delimit data type complex fs get type field consum complex type f buf read delimit buf throw new except unexpect end tupl els new byte array output stream buf read delimit buf throw new except unexpect end tupl buf delimit break write buf field pars simpl type byte array f append field els inner schema treat everyth insid tupl bytearray dequ charact level new link list charact keep track nest tupl bag map interpret save bytearray new byte array output stream true buf read buf throw new except unexpect end tupl buf buf buf level push char buf write buf els buf level empti end tupl datum byte array valu new datum byte array byte array append valu break els buf level empti datum byte array valu new datum byte array byte array append valu reset els buf buf buf level peek find start char char buf level pop els throw new except malform tupl write buf els write buf return privat map string object consum map pushback input stream resourc field schema field schema throw except int buf boolean empti map true buf read buf throw new except unexpect end map hash map string object new hash map string object byte array output stream new byte array output stream true read key assum key contain special charact buf read end map empti map buf return buf throw new except unexpect end map empti map fals write buf string key byte char array byte array key length throw new except map key null read valu reset dequ charact level new link list charact keep track nest tupl bag map interpret save bytearray true buf read buf throw new except unexpect end map buf buf buf level push char buf els buf level empti end map break els buf buf buf level empti throw new except malform map level peek find start char char buf level pop els buf level empti current map item complet break write buf object valu null field schema null field schema get schema null size valu byte object byte array field schema get schema get field els size untyp map valu new datum byte array byte array put key valu reset buf break return privat object byte object byte b resourc field schema fs throw except object field data type complex f get type byte array input stream bi new byte array input stream b pushback input stream new pushback input stream bi field consum complex type f els field pars simpl type b f return field privat object consum complex type pushback input stream resourc field schema complex field schema throw except object field switch complex field schema get type case data type field consum bag complex field schema break case data type field consum tupl complex field schema break case data type field consum map complex field schema break default throw new except unknown complex datum type return field privat object pars simpl type byte b resourc field schema simpl field schema throw except object field switch simpl field schema get type case data type field byte integ b break case data type field byte long b break case data type field byte float b break case data type field byte doubl b break case data type field byte char array b break case data type field new datum byte array b break case data type field byte boolean b break case data type field byte big integ b break case data type field byte big decim b break case data type field byte date time b break default throw new except unknown simpl datum type return field overrid public datum bag byte bag byte b resourc field schema schema throw except b null return null datum bag db tri byte array input stream bi new byte array input stream b pushback input stream new pushback input stream bi db consum bag schema catch except e log util warn unabl interpret valu array string b field convert type bag catch pars except e get messag field discard warn log return null return db overrid public string byte char array byte b throw except b null return null return new string b overrid public doubl byte doubl byte b b null b length return null tri return doubl valu new string b catch number format except nfe log util warn unabl interpret valu array string b field convert doubl catch number format except nfe get messag field discard warn log return null overrid public float byte float byte b throw except b null b length return null string b length b b length b b length f new string b b length els new string b tri return float valu catch number format except nfe log util warn unabl interpret valu array string b field convert float catch number format except nfe get messag field discard warn log return null overrid public boolean byte boolean byte b throw except b null return null string new string b equal ignor case true return boolean els equal ignor case fals return boolean els return null saniti check whether number valid integ long param number number check return true n contain invalid charact e contain digit privat static boolean saniti check integ long string number int number length number char number char number char valid one els contain invalid charact must integ long return fals return true overrid public integ byte integ byte b throw except b null b length return null string new string b trim integ ret null see use except handl check doubl expens write saniti check saniti check integ long tri ret integ valu catch number format except nfe ret null possibl field interpret doubl unfortun java n handl integ valu need tri convert doubl work go int tri doubl doubl valu need check overflow error doubl compar doubl valu max int doubl valu doubl compar doubl valu min int doubl valu log util warn valu larg integ warn log return null return integ valu int valu catch number format except nfe log util warn unabl interpret valu array string b field convert int catch number format except nfe get messag field discard warn log return null return ret overrid public long byte long byte b throw except b null b length return null string new string b trim end l end substr length see use except handl check doubl expens write saniti check long ret null saniti check integ long tri ret long valu catch number format except nfe ret null possibl field interpret doubl unfortun java n handl long valu need tri convert doubl work go long tri doubl doubl valu need check overflow error doubl compar doubl valu max long doubl valu doubl compar doubl valu min long doubl valu log util warn valu larg long warn log return null return long valu long valu catch number format except nfe log util warn unabl interpret valu array string b field convert long catch number format except nfe get messag field discard warn log return null return ret overrid public date time byte date time byte b throw except b null return null tri string dt str new string b return date extract date time dt str catch illeg argument except e log util warn unabl interpret valu array string b field convert datetim catch illeg argument except e get messag field discard warn log return null overrid public map string object byte map byte b resourc field schema field schema throw except b null return null map string object map tri byte array input stream bi new byte array input stream b pushback input stream new pushback input stream bi map consum map field schema catch except e log util warn unabl interpret valu array string b field convert type map catch pars except e get messag field discard warn log return null return map overrid public tupl byte tupl byte b resourc field schema field schema throw except b null return null tupl tri byte array input stream bi new byte array input stream b pushback input stream new pushback input stream bi consum tupl field schema catch except e log util warn unabl interpret valu array string b field convert type tupl catch pars except e get messag field discard warn log return null return overrid public big integ byte big integ byte b throw except b null b length return null return new big integ new string b overrid public big decim byte big decim byte b throw except b null b length return null return new big decim new string b overrid public byte byte data bag bag throw except return bag string get byte overrid public byte byte string throw except return get byte overrid public byte byte doubl throw except return string get byte overrid public byte byte float f throw except return f string get byte overrid public byte byte integ throw except return string get byte overrid public byte byte long l throw except return l string get byte overrid public byte byte boolean b throw except return b string get byte overrid public byte byte date time dt throw except return dt string get byte overrid public byte byte map string object throw except return data type map string get byte overrid public byte byte tupl throw except return string get byte overrid public byte byte data byte array throw except return get overrid public byte byte big integ bi throw except return bi string get byte overrid public byte byte big decim bd throw except return bd string get byte 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach newplan logic import java util array list import java util link list import java util list import java util set import org apach impl logic layer frontend except import org apach impl logic layer schema schema import org apach newplan depend order walker import org apach newplan oper import org apach newplan logic express logic express plan import org apach newplan logic express project express import org apach newplan logic relat cogroup import org apach newplan logic relat cross import org apach newplan logic relat cube import org apach newplan logic relat distinct import org apach newplan logic relat filter import org apach newplan logic relat import org apach newplan logic relat gener import org apach newplan logic relat inner load import org apach newplan logic relat join import org apach newplan logic relat limit import org apach newplan logic relat load import org apach newplan logic relat nativ import org apach newplan logic relat rank import org apach newplan logic relat sort import org apach newplan logic relat split import org apach newplan logic relat split output import org apach newplan logic relat store import org apach newplan logic relat stream import org apach newplan logic relat union import org apach newplan logic relat logic plan import org apach newplan logic relat logic relat node visitor import org apach newplan logic relat logic relat oper import org apach newplan logic relat logic schema import com googl common collect list public class util public static logic schema translat schema schema schema schema null return null logic schema new logic schema list schema field schema schema get field schema field schema f logic schema logic field schema f new logic schema logic field schema f alia translat schema f schema f type add field f return public static logic schema logic field schema translat field schema schema field schema f logic schema new schema null f schema null new schema translat schema fs schema logic schema logic field schema new fs new logic schema logic field schema f alia new schema fs type return new fs function translat new logic schema old schema format requir physic oper param schema logic schema convert schema return schema convert logic schema throw frontend except public static schema translat schema logic schema schema schema null return null schema new schema list logic schema logic field schema schema get field logic schema logic field schema f schema field schema f null tri f new schema field schema f alia translat schema f schema f type f canon name long f uid string add f catch frontend except e return schema argument field bag contain tupl schema insert tupl schema inner level eg bag int bag int param sch return modifi schema throw frontend except public static schema fix schema add tupl bag schema sch throw frontend except logic schema log sch translat schema sch log sch normal return translat schema log sch public static schema field schema translat field schema logic schema logic field schema fs fs null return null schema new schema null f schema null new schema translat schema fs schema schema field schema new fs null tri new fs new schema field schema null new schema fs type catch frontend except e return new fs public static add logic plan plan logic relat oper op int branch set integ column drop throw frontend except foreach new plan plan add foreach list oper next plan get successor op next null logic relat oper next op logic relat oper next get branch plan insert op foreach next op foreach set alia op get alia els plan connect op foreach logic plan inner plan new logic plan foreach set inner plan inner plan logic schema schema op get schema build foreach inner plan list logic express plan exp new array list logic express plan gener gen new gener inner plan exp new boolean schema size column drop size inner plan add gen int j schema size column drop contain continu inner load inner load new inner load inner plan foreach inner plan add inner load inner plan connect inner load gen logic express plan exp new logic express plan project express prj new project express exp j gen exp add prj exp add exp return foreach return link list oper contain within physic plan implement suppli class depend order return empti link list oper exist param plan param op class return link list oper contain within plan implement suppli class empti op exist throw frontend except public static extend logic relat oper link list get logic relat oper logic plan plan class op class throw frontend except op finder finder new op finder plan op class finder visit return finder get find op privat static class op finder extend logic relat oper extend logic relat node visitor final class op class privat link list find op list new link list public op finder logic plan plan class op class throw frontend except super plan new depend order walker plan op class op class public link list get find op return find op suppress warn uncheck privat void visit op logic relat oper op op class assign op get class find op add op public void visit load load throw frontend except visit op load overrid public void visit filter filter throw frontend except visit op filter overrid public void visit store store throw frontend except visit op store overrid public void visit join join throw frontend except visit op join overrid public void visit foreach throw frontend except visit op foreach overrid public void visit gener gen throw frontend except visit op gen overrid public void visit inner load load throw frontend except visit op load overrid public void visit cube cube throw frontend except visit op cube overrid public void visit cogroup lo cogroup throw frontend except visit op lo cogroup overrid public void visit split lo split throw frontend except visit op lo split overrid public void visit split output lo split output throw frontend except visit op lo split output overrid public void visit union lo union throw frontend except visit op lo union overrid public void visit sort lo sort throw frontend except visit op lo sort overrid public void visit rank lo rank throw frontend except visit op lo rank overrid public void visit distinct lo distinct throw frontend except visit op lo distinct overrid public void visit limit lo limit throw frontend except visit op lo limit overrid public void visit cross lo cross throw frontend except visit op lo cross overrid public void visit stream lo stream throw frontend except visit op lo stream overrid public void visit nativ nativ throw frontend except visit op nativ 
licens apach softwar foundat one contributor licens agreement see file distribut work addit inform regard copyright ownership licen file apach licens version licens may use file except complianc licens may obtain copi licens http www apach org licen unless requir applic law agre write softwar distribut licens distribut either express impli see licens specif languag govern permiss limit licens packag org apach backend hadoop accumulo import java io buffer output stream import java io file import java io file input stream import java io file output stream import java io except import java io input stream import java net import java net decod import java text messag format import java util enumer import java util hash map import java util hash set import java util map import java util set import java util jar jar file import java util jar jar output stream import java util jar manif import java util zip zip entri import java util zip zip file import java util zip zip output stream import org apach hadoop conf configur import org apach hadoop f file system import org apach hadoop f path import org apach hadoop util jar finder import org apach hadoop util string util import org apach log j logger import com googl common base precondit public class util privat static final logger log logger get logger util class thank base public static void add depend jar configur conf class class throw except file system local fs file system get local conf set string jar new hash set string add jar alreadi tmpjar variabl jar add conf get string collect tmpjar add jar find map content jar name avoid creat new jar class alreadi packag map string string packag class new hash map string string add jar contain specifi class class clazz class clazz null continu path path find creat jar clazz local fs packag class path null log warn could find jar class clazz order ship cluster continu local fs exist path log warn could valid jar file path class clazz continu jar add path string jar empti return conf set tmpjar string util array string jar array new string jar size org apach hadoop util jar finder avail hadoop find jar class creat n exist class directori classpath creat jar fli content directori return path jar jar creat creat system temporari directori otherwis return exist jar contain class name maintain map jar content tmp jar creat param class class find param f file system qualifi return path param packag class map class name path return jar file contain class throw except privat static path find creat jar class class file system fs map string string packag class throw except attempt locat exist jar class string jar find contain jar class packag class null jar jar empti jar jar finder get jar class updat map jar packag class null jar jar empti return null log debug string format class use jar class get name jar return new path jar make qualifi f add entri code packag class code correspond class file contain code jar code param jar jar content list param packag class map class jar privat static void updat map string jar map string string packag class throw except null jar jar empti return zip file zip null tri zip new zip file jar enumer extend zip entri iter zip entri iter element zip entri entri iter next element entri get name end class packag class put entri get name jar final null zip zip close find jar contain class name return jar file even first thing class path class name look first classpath code packag class code map param class class find return jar file contain class null throw except privat static string find contain jar class class map string string packag class throw except class loader loader class get class loader string class file class get name replac class first search classpath enumer itr loader get resourc class file itr element url itr next element jar equal url get protocol string return url get path return start file return return substr file length decod misnam class sinc actual decod x www form urlencod type rather actual encod file path therefor would decod incorrect space actual either unencod encod replac first keep sacr decod process return return replac return decod decod return return return replac look jar packag use jar finder return null jar find return packag class get class file return full path jar contain class alway return param klass class return path jar contain class suppress warn rawtyp public static string jar finder get jar class klass precondit check null klass klass class loader loader klass get class loader loader null string class file klass get name replac class tri enumer itr loader get resourc class file itr element url itr next element string path url get path path start file path path substr file length path decod decod path jar equal url get protocol path decod decod path return path replac els file equal url get protocol string klass name klass get name klass name klass name replac class path path substr path length klass name length file base dir new file path file test dir new file system get properti test build dir target test dir test dir test dir get absolut file test dir exist test dir mkdir file temp jar file creat temp file hadoop test dir temp jar new file temp jar get absolut path jar creat jar base dir temp jar return temp jar get absolut path catch except e throw new runtim except e return null privat static void copi zip stream input stream zip entri entri zip output stream zo throw except zo put next entri entri byte arr new byte int read read arr read zo write arr read read read arr public static void jar dir file dir string rel path zip output stream zo throw except precondit check null rel path rel path precondit check null zo zo spec manifest must first entri file manifest file new file dir jar file zip entri manifest entri new zip entri jar file manifest file exist zo put next entri manifest entri new manifest write new buffer output stream zo zo close entri els input stream new file input stream manifest file tri copi zip stream manifest entri zo final null close zo null zo close entri zo close entri zip dir dir rel path zo true zo close privat static void zip dir file dir string rel path zip output stream zo boolean start throw except string dir list dir list string dir list dir list file f new file dir dir list f hide f directori start zip entri dir entri new zip entri rel path f get name zo put next entri dir entri zo close entri string file path f get path file file new file file path zip dir file rel path f get name zo fals els string path rel path f get name path equal jar file zip entri entri new zip entri path input stream new file input stream f tri copi zip stream entri zo final null close zo null zo close entri privat static void creat jar file dir file jar file throw except precondit check null dir dir precondit check null jar file jar file file jar dir jar file get parent file jar dir exist jar dir mkdir throw new except messag format format could creat dir jar dir jar output stream zo new jar output stream new file output stream jar file jar dir dir zo 
