Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop accumulo import java io Exception import java math Big Decimal import java math Big Integer import java util Collection import java util Collections import java util Hash Map import java util Iterator import java util Linked List import java util List import java util Map import java util Map Entry import java util Properties import java util concurrent Time Unit import org apache accumulo core client Accumulo Security Exception import org apache accumulo core client Batch Writer Config import org apache accumulo core client mapreduce Accumulo Input Format import org apache accumulo core client mapreduce Accumulo Output Format import org apache accumulo core client security tokens Password Token import org apache accumulo core data Key import org apache accumulo core data Mutation import org apache accumulo core data Range import org apache accumulo core data Value import org apache accumulo core security Authorizations import org apache accumulo core util Pair import org apache commons cli Command Line import org apache commons cli Parse Exception import org apache commons lang String Utils import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs Path import org apache hadoop io Text import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Job import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce Record Writer import org apache Load Caster import org apache Load Func import org apache Load Store Caster import org apache Resource Schema import org apache Resource Schema Resource Field Schema import org apache Store Func Interface import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Split import org apache backend hadoop hbase Base Binary Converter import org apache builtin Utf Storage Converter import org apache data Data Bag import org apache data Data Byte Array import org apache data Data Type import org apache data Tuple import org apache impl Context import org apache impl util Object Serializer import org apache impl util Context import org joda time Date Time Load Store Func retrieving data storing data Accumulo Key Val pair returned tuples key colfam colqual colvis timestamp value fields except timestamp Data Byte Array timestamp long Tuples written forms key colfam colqual colvis value key colfam colqual value public abstract class Abstract Accumulo Storage extends Load Func implements Store Func Interface private static final Log log Log Factory get Log Abstract Accumulo Storage class protected static final char protected static final String private static final String Accumulo Input Format class get Simple Name private static final String Accumulo Output Format class get Simple Name private final static String Storage Converter private final static String Accumulo Binary Converter private final static String accumulo caster protected final Accumulo Storage Options storage Options protected final Command Line command Line private Record Reader Key Value reader private Record Writer Text Mutation writer protected String inst protected String zookeepers protected String user protected String password protected String table protected Text table Name protected Authorizations authorizations protected List Column columns protected String start null protected String end null Defaults Batch Writer Config protected int max Write Threads protected long max Mutation Buffer Size l protected long max Latency Long protected String column Separator protected boolean ignore Whitespace true protected Load Store Caster caster protected Resource Schema schema protected String context Signature null public Abstract Accumulo Storage String columns String args throws Parse Exception Exception storage Options new Accumulo Storage Options command Line storage Options get Command Line args Extract command line args extract Args command Line storage Options Split user provided columns parse Columns columns Initializes link column Defs splits columns link param columns columns private void parse Columns String column Str columns new Linked List Column ignore Whitespace column Str String Utils strip column Str column Str Empty String column String Utils split column Str column Separator columns add new Column ignore Whitespace String Utils strip column column else Preserve original functionality empty columns fetch data map columns add new Column Extract arguments passed constructor avoid param cli param opts protected void extract Args Command Line cli Accumulo Storage Options opts throws Exception opts Authorizations cli authorizations opts get Authorizations cli start cli get Option Value Accumulo Storage Options get Opt null end cli get Option Value Accumulo Storage Options get Opt null cli Option Accumulo Storage Options get Opt max Latency opts get Int cli Accumulo Storage Options cli Option Accumulo Storage Options get Opt max Write Threads opts get Int cli Accumulo Storage Options cli Option Accumulo Storage Options get Opt max Mutation Buffer Size opts get Long cli Accumulo Storage Options Properties client System Props Context get Context get Client System Props String default Caster null client System Props default Caster client System Props get Property default Caster String caster Option cli get Option Value caster default Caster equals Ignore Case caster Option caster new Utf Storage Converter else equals Ignore Case caster Option caster new Base Binary Converter else try caster Load Store Caster Context instantiate Func Spec caster Option catch Class Cast Exception e log error Configured caster implement Load Caster interface throw new Exception e catch Runtime Exception e log error Configured caster class found e throw new Exception e log debug Using caster caster get Class cli Option Accumulo Storage Options get Opt column Separator cli get Option Value Accumulo Storage Options get Opt cli Option Accumulo Storage Options get Opt String value cli get Option Value Accumulo Storage Options get Opt false equals Ignore Case value ignore Whitespace false else true equals Ignore Case value ignore Whitespace true else log warn Ignoring unknown value Accumulo Storage Options get Opt value protected Command Line get Command Line return command Line protected Map String String get Input Format Entries Configuration conf return get Entries conf protected Map String String get Output Format Entries Configuration conf return get Entries conf Removes given values configuration accounting changes Configuration given version Hadoop used param conf param entries Unset protected void unset Entries Configuration Configuration conf Map String String entries Unset boolean configuration Unset true try conf get Class get Method unset String class catch Method Exception e configuration Unset false catch Security Exception e configuration Unset false Hadoop actually contains method Configuration unset configuration Unset simple Unset conf entries Unset else running something else remove everything add clear Unset conf entries Unset Unsets elements Configuration using unset method param conf param entries Unset protected void simple Unset Configuration conf Map String String entries Unset String key entries Unset key Set conf unset key Replaces given entries configuration clearing Configuration adding elements n Map entries unset param conf param entries Unset protected void clear Unset Configuration conf Map String String entries Unset Gets copy entries Iterator Entry String String original Entries conf iterator conf clear original Entries Next Entry String String original Entry original Entries next set pairs n collection keys unset entries Unset contains Key original Entry get Key conf set original Entry get Key original Entry get Value Override public Tuple get Next throws Exception try load next pair reader next Key Value return null Key key Key reader get Current Key Value value Value reader get Current Value assert key null value null return get Tuple key value catch Interrupted Exception e throw new Exception e get Message protected abstract Tuple get Tuple Key key Value value throws Exception Override Suppress Warnings rawtypes public Input Format get Input Format return new Accumulo Input Format Override Suppress Warnings unchecked rawtypes public void prepare Read Record Reader reader Split split reader reader private void set Location Uri String location throws Exception ex accumulo table instance myinstance user root password secret zookeepers auths fetch columns col cq col cq start abc end z String columns auths try location starts accumulo throw new Exception Bad scheme String url Parts location split url Parts length String param url Parts split String pair param split pair equals instance inst pair else pair equals user user pair else pair equals password password pair else pair equals zookeepers zookeepers pair else pair equals auths auths pair else pair equals fetch columns columns pair else pair equals start start pair else pair equals end end pair else pair equals write buffer size bytes max Mutation Buffer Size Long parse Long pair else pair equals write threads max Write Threads Integer parse Int pair else pair equals write latency ms max Latency Long parse Long pair String parts url Parts split table parts table Name new Text table null authorizations auths null authorizations new Authorizations else authorizations new Authorizations String Utils split auths String Utils Empty columns parse Columns columns catch Exception e throw new Exception Expected accumulo table instance instance Name user user password password zookeepers zookeepers auths authorizations start start Row end end Row fetch columns cf cq cf cq write buffer size bytes write threads write latency ms e get Message protected Record Writer Text Mutation get Writer return writer Extract elements Configuration whose keys match given prefix param conf param prefix return protected Map String String get Entries Configuration conf String prefix Map String String entries new Hash Map String String Entry String String entry conf String key entry get Key key starts prefix entries put key entry get Value return entries Override public void set Location String location Job job throws Exception set Location Uri location load Dependent Jars job get Configuration Map String String entries get Input Format Entries job get Configuration unset Entries Configuration job get Configuration entries try Accumulo Input Format set Connector Info job user new Password Token password catch Accumulo Security Exception e throw new Exception e Accumulo Input Format set Input Table Name job table Accumulo Input Format set Scan Authorizations job authorizations Accumulo Input Format set Zoo Keeper Instance job inst zookeepers List Pair Text Text input Format Columns new Linked List Pair Text Text int colfam Prefix Column c columns switch c get Type case Pull colf colq individually input Format Columns add make Pair c get Column Family c get Column Qualifier break case colfams colfam Prefix break case colquals given colfam input Format Columns add make Pair c get Column Family null break default log info Ignoring unhandled column type break colfam prefixes pull columns filter client side Create iterator lets us push filter logic colfam Prefix input Format Columns Empty Accumulo Input Format fetch Columns job input Format Columns Collection Range ranges Collections singleton new Range start end log info Scanning Accumulo ranges table table Accumulo Input Format set Ranges job ranges configure Input Format job protected Pair Text Text make Pair String first String second return new Pair Text Text null first null new Text first null second null new Text second Ensure Accumulo dependent jars added Configuration alleviate need clients dependency jars param job Mapreduce Job object throws Exception protected void load Dependent Jars Configuration conf throws Exception Thank Base Utils add Dependency Jars conf org apache accumulo trace instrument Tracer class org apache accumulo core client Instance class org apache accumulo fate Fate class org apache zookeeper Zoo Keeper class org apache thrift Service Client class Method allow specific implementations add elements Job reading data Accumulo param job protected void configure Input Format Job job Method allow specific implementations add elements Job writing data Accumulo param job protected void configure Output Format Job job Override public String relative Absolute Path String location Path cur Dir throws Exception return location Override public void set Context Signature String signature context Signature signature Store Func methods public void set Store Func Context Signature String signature context Signature signature Returns Properties based code context Signature code protected Properties get Properties return Context get Context get Properties get Class new String context Signature public String rel Abs Path Store Location String location Path cur Dir throws Exception return relative Absolute Path location cur Dir public void set Store Location String location Job job throws Exception set Location Uri location load Dependent Jars job get Configuration Map String String entries get Output Format Entries job get Configuration unset Entries Configuration job get Configuration entries try Accumulo Output Format set Connector Info job user new Password Token password catch Accumulo Security Exception e throw new Exception e Accumulo Output Format set Create Tables job true Accumulo Output Format set Zoo Keeper Instance job inst zookeepers Batch Writer Config bw Config new Batch Writer Config bw Config set Max Latency max Latency Time Unit bw Config set Max Memory max Mutation Buffer Size bw Config set Max Write Threads max Write Threads Accumulo Output Format set Batch Writer Options job bw Config log info Writing data table configure Output Format job Suppress Warnings rawtypes public Output Format get Output Format return new Accumulo Output Format Suppress Warnings rawtypes unchecked public void prepare Write Record Writer writer writer writer protected abstract Collection Mutation get Mutations Tuple tuple throws Exec Exception Exception public void put Next Tuple tuple throws Exec Exception Exception Collection Mutation muts get Mutations tuple Mutation mut muts try get Writer write table Name mut catch Interrupted Exception e throw new Exception e public void cleanup Failure String failure Job job public void cleanup Success String location Job job Override public void check Schema Resource Schema throws Exception caster instanceof Load Store Caster log error Caster must implement Load Store Caster writing Accumulo throw new Exception Bad Caster caster get Class schema get Properties set Property context Signature schema Object Serializer serialize schema protected Text tuple Text Tuple tuple int Resource Field Schema field Schemas throws Exception Object tuple get byte type schema Type field Schemas return obj Text type protected Text object Text Object Resource Field Schema field Schema throws Exception byte type schema Type field Schema return obj Text type protected byte schema Type Object Resource Field Schema field Schema return field Schema null Data Type find Type field Schema get Type protected byte schema Type Object int Resource Field Schema field Schemas return field Schemas null Data Type find Type field Schemas get Type protected byte tuple Bytes Tuple tuple int Resource Field Schema field Schemas throws Exception Object tuple get byte type schema Type field Schemas return obj Bytes type protected Text obj Text Object byte type throws Exception byte bytes obj Bytes type null bytes log warn Creating empty text null value return new Text return new Text bytes Suppress Warnings unchecked protected byte obj Bytes Object byte type throws Exception null return null switch type case Data Type return Data Byte Array get case Data Type return caster Bytes Data Bag case Data Type return caster Bytes String case Data Type return caster Bytes Double case Data Type return caster Bytes Float case Data Type return caster Bytes Integer case Data Type return caster Bytes Long case Data Type return caster Bytes Big Integer case Data Type return caster Bytes Big Decimal case Data Type return caster Bytes Boolean case Data Type return caster Bytes Date Time type conversion unchecked Relying Data Type find Type right thing case Data Type return caster Bytes Map String Object case Data Type return null case Data Type return caster Bytes Tuple case Data Type throw new Exception Unable determine type get Class default throw new Exception Unable find converter tuple field Override public Load Caster get Load Caster throws Exception return caster
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java io Data Input import java io Data Output import java io Exception import java util import org apache backend hadoop executionengine physical Layer relational Operators Accumulative Tuple Buffer public class Accumulative Bag implements Data Bag private static final long serial Version private transient Accumulative Tuple Buffer buffer private int index public Accumulative Bag Accumulative Tuple Buffer buffer int index buffer buffer index index public void add Tuple throw new Runtime Exception Accumulative Bag support add operation public void add Data Bag b throw new Runtime Exception Accumulative Bag support add operation public void clear throw new Runtime Exception Accumulative Bag support clear operation public boolean Distinct return false public boolean Sorted return false public Accumulative Tuple Buffer get Tuplebuffer return buffer public Iterator Tuple iterator return buffer get Tuples index public void mark Stale boolean stale public long size int size Iterator Tuple iterator Next next size return size public long get Memory Size return public long spill return public void read Fields Data Input datainput throws Exception throw new Exception Accumulative Bag support read Fields operation public void write Data Output dataoutput throws Exception throw new Exception Accumulative Bag support write operation public int compare Object throw new Runtime Exception Accumulative Bag support compare operation public boolean equals Object return true return false public int hash Code assert false hash Code designed return
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import java io Exception import org apache Accumulator import org apache Eval Func import org apache data Tuple class used provide free implementation Eval Func exec function given implementation Accumulator interface Instead provide redundant implementation provides base exec function free given methods associated Accumulator interface implemented information implement Accumulator see link Accumulator public abstract class Accumulator Eval Func extends Eval Func implements Accumulator Override public abstract void accumulate Tuple b throws Exception Override public abstract void cleanup Override public abstract get Value Override public exec Tuple input throws Exception accumulate input result get Value cleanup return result
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine spark optimizer import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Global Rearrange import org apache backend hadoop executionengine physical Layer util Plan Helper import org apache backend hadoop executionengine spark plan Spark Op Plan Visitor import org apache backend hadoop executionengine spark plan Spark Oper Plan import org apache backend hadoop executionengine spark plan Spark Operator import org apache backend hadoop executionengine util Accumulator Optimizer Util import org apache impl plan Depth First Walker import org apache impl plan Visitor Exception import java util List visitor optimize plans determines vertex plan run accumulative mode public class Accumulator Optimizer extends Spark Op Plan Visitor public Accumulator Optimizer Spark Oper Plan plan super plan new Depth First Walker Spark Operator Spark Oper Plan plan Override public void visit Spark Op Spark Operator spark Operator throws Visitor Exception Physical Plan plan spark Operator physical Plan List Physical Operator pos plan get Roots pos null pos size return List Global Rearrange glrs Plan Helper get Physical Operators plan Global Rearrange class Global Rearrange glr glrs List Physical Operator successors plan get Successors glr Accumulator Optimizer Util add Accumulator plan successors
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop accumulo import java io Byte Array Input Stream import java io Data Input Stream import java io Data Output Stream import java io Exception import java math Big Decimal import java math Big Integer import java util Map import org apache accumulo core Constants import org apache Load Store Caster import org apache Resource Schema Resource Field Schema import org apache backend executionengine Exec Exception import org apache data Data Bag import org apache data Data Byte Array import org apache data Tuple import org joda time Date Time import com google common base Preconditions Load Store Caster implementation stores type implementations bytes generated String representation Charset Pulled implementations Accumulo Lexicoder implementations public class Accumulo Binary Converter implements Load Store Caster private static final int Integer Byte private static final int Long Byte Override public Data Bag bytes Bag byte b Resource Field Schema field Schema throws Exception throw new Exec Exception Ca n generate Data Bags byte Override public Big Decimal bytes Big Decimal byte b throws Exception throw new Exec Exception Ca n generate Big Integer byte Override public Big Integer bytes Big Integer byte b throws Exception Taken Accumulo Big Integer Lexicoder Data Input Stream dis new Data Input Stream new Byte Array Input Stream b int len dis read Int len len x len Math abs len byte bytes new byte len dis read Fully bytes bytes byte x bytes return new Big Integer bytes Override public Boolean bytes Boolean byte b throws Exception Preconditions check Argument b length return b byte Override public String bytes Char Array byte b throws Exception return new String b Constants Override public Date Time bytes Date Time byte b throws Exception String new String b Constants return Date Time parse Override public Double bytes Double byte b throws Exception return Double long Bits Double bytes Long b Override public Float bytes Float byte b throws Exception return Float int Bits Float bytes Integer b Override public Integer bytes Integer byte b throws Exception Preconditions check Argument b length int n int b length n n b x return n Override public Long bytes Long byte b throws Exception Preconditions check Argument b length long l int b length l l b x return l Override public Map String Object bytes Map byte b Resource Field Schema field Schema throws Exception throw new Exec Exception Ca n generate Map byte Override public Tuple bytes Tuple byte b Resource Field Schema field Schema throws Exception throw new Exec Exception Ca n generate Tuple byte implemented Override public byte Bytes Big Decimal bd throws Exception throw new Exception Ca n generate bytes Big Decimal Override public byte Bytes Big Integer bi throws Exception Taken Accumulo Big Integer Lexicoder byte bytes bi Byte Array byte ret new byte bytes length Data Output Stream dos new Data Output Stream new Fixed Byte Array Output Stream ret flip sign bit bytes byte x bytes int len bytes length bi signum len len len len x try dos write Int len dos write bytes finally dos close return ret Override public byte Bytes Boolean b throws Exception return new byte b byte byte Override public byte Bytes Data Bag bag throws Exception throw new Exec Exception Cant generate bytes Data Bag Override public byte Bytes Data Byte Array throws Exception return get Override public byte Bytes Date Time dt throws Exception return dt String get Bytes Constants Override public byte Bytes Double throws Exception return Bytes Double double Raw Long Bits Override public byte Bytes Float f throws Exception return Bytes Float float Raw Int Bits f Override public byte Bytes Integer val throws Exception int int Val val int Value byte b new byte int b byte int Val int Val b byte int Val return b Override public byte Bytes Long val throws Exception long long Val val long Value byte b new byte int b byte long Val long Val b byte long Val return b Override public byte Bytes Map String Object throws Exception throw new Exception Ca n generate bytes Map Override public byte Bytes String throws Exception return get Bytes Constants Override public byte Bytes Tuple throws Exception throw new Exception Ca n generate bytes Tuple
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop accumulo import java io Exception import java util Collection import java util Collections import java util Hash Map import java util Iterator import java util Map import java util Map Entry import java util Sorted Map import org apache accumulo core client Iterator Setting import org apache accumulo core client mapreduce Accumulo Input Format import org apache accumulo core data Key import org apache accumulo core data Mutation import org apache accumulo core data Partial Key import org apache accumulo core data Range import org apache accumulo core data Value import org apache accumulo core iterators user Whole Row Iterator import org apache commons cli Parse Exception import org apache hadoop io Text import org apache hadoop mapreduce Job import org apache log j Logger import org apache Resource Schema Resource Field Schema import org apache backend executionengine Exec Exception import org apache data Data Byte Array import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory Basic Storage implementation uses Accumulo backing store p writing data first entry link Tuple treated row Accumulo key subsequent entries tuple handled columns row link Map expanded placing map key column family map value Accumulo value Scalars placed directly value empty column qualifier columns argument constructor omitted null empty String column family provided Keys created Accumulo p p reading data aggregate Colfams true elements row column family aggregated single link Map result link Tuple length unique column families given row aggregate Colfams false column family column qualifier concatenated separated colon placed link Map result link Tuple two entries latter element number elements equal number columns given row p public class Accumulo Storage extends Abstract Accumulo Storage private static final Logger log Logger get Logger Accumulo Storage class private static final String private static final Text new Text new byte private static final Data Byte Array new Data Byte Array new byte sure Accumulo Storage instances need thread safe final Text cf Holder new Text cq Holder new Text Creates Accumulo Storage writes values link Tuple empty column family n group column families together read creates link Map columns public Accumulo Storage throws Parse Exception Exception Create Accumulo Storage columns families use write whether columns row grouped family read param columns comma separated list column families use writing data aligned n th entry tuple param aggregate Colfams unique column qualifier value pairs grouped together column family reading data public Accumulo Storage String columns throws Parse Exception Exception columns public Accumulo Storage String column Str String args throws Parse Exception Exception super column Str args Override protected Tuple get Tuple Key key Value value throws Exception Sorted Map Key Value row Vs Whole Row Iterator decode Row key value Tuple tuple Tuple Factory get Instance new Tuple columns size final Text cf Holder new Text final Text cq Holder new Text final Text row key get Row int tuple Offset tuple set tuple Offset new Data Byte Array Text decode row get Bytes row get Length Column column columns tuple Offset switch column get Type case cf Holder set column get Column Family null column get Column Qualifier cq Holder set column get Column Qualifier else cq Holder set Get key literal would exist accounting colf colq colf empty colq Key literal Start Key new Key row cf Holder cq Holder Sorted Map Key Value tail Map row Vs tail Map literal Start Key Find element tail Map Empty tuple set tuple Offset else Key actual Key tail Map first Key place tuple matches user request avoid using value key wrong colqual literal Start Key compare actual Key Partial Key tuple set tuple Offset new Data Byte Array tail Map get actual Key get else row n column looking tuple set tuple Offset break case cf Holder set column get Column Family Range colfam Prefix Range Range prefix row cf Holder Key colfam Prefix Start Key new Key row cf Holder Sorted Map Key Value cf Tail Map row Vs tail Map colfam Prefix Start Key Find element cf Tail Map Empty tuple set tuple Offset else Hash Map String Data Byte Array tuple Map new Hash Map String Data Byte Array Build map entries row match colfam prefix Entry Key Value entry cf Tail Map entry Set colfam Prefix Range contains entry get Key entry get Key get Column Family cf Holder entry get Key get Column Qualifier cq Holder Data Byte Array val new Data Byte Array entry get Value get Avoid adding extra colqual empty cq Holder get Length tuple Map put cf Holder String val else tuple Map put cf Holder String cq Holder String val else break tuple Map Empty tuple set tuple Offset tuple Map break case cf Holder set column get Column Family cq Holder set column get Column Qualifier Range colqual Prefix Range Range prefix row cf Holder cq Holder Key colqual Prefix Start Key new Key row cf Holder cq Holder Sorted Map Key Value cq Tail Map row Vs tail Map colqual Prefix Start Key cq Tail Map Empty tuple set tuple Offset else Hash Map String Data Byte Array tuple Map new Hash Map String Data Byte Array Build map entries row match colqual prefix Entry Key Value entry cq Tail Map entry Set colqual Prefix Range contains entry get Key entry get Key get Column Family cf Holder entry get Key get Column Qualifier cq Holder Data Byte Array val new Data Byte Array entry get Value get Avoid extra empty colqual cq Holder get Length tuple Map put cf Holder String val else tuple Map put cf Holder String cq Holder String val else break tuple Map Empty tuple set tuple Offset tuple Map break default break return tuple Override protected void configure Input Format Job job Accumulo Input Format add Iterator job new Iterator Setting Whole Row Iterator class Override protected Collection Mutation get Mutations Tuple tuple throws Exec Exception Exception final Resource Field Schema field Schemas schema null null schema get Fields Iterator Object tuple Iter tuple iterator tuple size log debug Ignoring tuple size tuple size return Collections empty List Mutation mutation new Mutation object Text tuple Iter next null field Schemas null field Schemas int tuple Offset Iterator Column column Iter columns iterator tuple Iter Next column Iter Next Object tuple Iter next Column column column Iter next Grab type field final byte type schema Type null field Schemas null field Schemas tuple Offset switch column get Type case byte bytes obj Bytes type null bytes Value value new Value bytes n column name non Maps add Column mutation column get Column Family column get Column Qualifier value break case case Map String Object map try map Map String Object catch Class Cast Exception e log error Expected Map tuple offset tuple Offset get Class get Simple Name throw e Entry String Object entry map entry Set String key entry get Key Object obj Value entry get Value byte value Type Data Type find Type obj Value byte map Value obj Bytes obj Value value Type Column Type column get Type add Column mutation column get Column Family key null new Value map Value else Column Type column get Type add Column mutation column get Column Family column get Column Qualifier key new Value map Value else throw new Exception Unknown column type break default log info Ignoring unhandled column type continue tuple Offset mutation size return Collections empty List return Collections singleton List mutation Adds given column family column qualifier value given mutation param mutation param colfam param colqual param column Value protected void add Column Mutation mutation String colfam String colqual Value column Value null colfam cf Holder set colfam else cf Holder clear null colqual cq Holder set colqual else cq Holder clear mutation put cf Holder cq Holder column Value
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop accumulo import org apache accumulo core security Authorizations import org apache commons cli Command Line import org apache commons cli Gnu Parser import org apache commons cli Help Formatter import org apache commons cli Option import org apache commons cli Options import org apache commons cli Parse Exception import org apache commons lang String Utils public class Accumulo Storage Options public static final Option new Option c caster true Implementation Load Store Caster use typically String Converter Accumulo Binary Converter new Option auths authorizations true Comma separated list authorizations use new Option start true row begin reading inclusive new Option e end true row read inclusive new Option buff mutation buffer size true Number bytes buffer writing data new Option wt write threads true Number threads use writing data new Option ml max latency true Maximum latency milliseconds Mutations flushed Accumulo new Option sep separator true Separator string use parsing columns new Option iw ignore whitespace true Whether whitespace stripped column list private Options options private Gnu Parser parser public Accumulo Storage Options parser new Gnu Parser options new Options options add Option options add Option options add Option options add Option options add Option options add Option options add Option options add Option options add Option public String get Help Message return c caster Load Store Caster Impl auths authorizations auth auth auth start startrow e end endrow buff mutation buffer size bytes wt write threads threads ml max latency seconds sep separator iw ignore whitespace true false public Command Line get Command Line String args throws Parse Exception String split Args String Utils split args try return parser parse options split Args catch Parse Exception e Help Formatter formatter new Help Formatter formatter print Help get Help Message options throw e public boolean Authorizations Command Line cli return cli Option get Opt public Authorizations get Authorizations Command Line cli return new Authorizations cli get Option Value get Opt public long get Long Command Line cli Option String value cli get Option Value get Opt return null value null Long parse Long value public int get Int Command Line cli Option String value cli get Option Value get Opt return null value null Integer parse Int value
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java math Big Decimal import java math Big Integer import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception public class Add extends Binary Expression Operator private static final long serial Version public Add Operator Key k super k public Add Operator Key k int rp super k rp Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Add Override public String name return Add Data Type find Type Name result Type Key String method used invoke appropriate addition method Java provide generic dispatch protected Number add Number Number b byte data Type throws Exec Exception switch data Type case Data Type return Double value Double Double b case Data Type return Integer value Integer Integer b case Data Type return Long value Long Long b case Data Type return Float value Float Float b case Data Type return Big Integer add Big Integer b case Data Type return Big Decimal add Big Decimal b default throw new Exec Exception called unsupported Number class Data Type find Type Name data Type protected Result generic Get Next byte data Type throws Exec Exception Result r accum Child null data Type r null return r byte status Result res res lhs get Next data Type status res return Status status Status res result null return res Number left Number res result res rhs get Next data Type status res return Status status Status res result null return res Number right Number res result res result add left right data Type return res Override public Result get Next Double throws Exec Exception return generic Get Next Data Type Override public Result get Next Float throws Exec Exception return generic Get Next Data Type Override public Result get Next Integer throws Exec Exception return generic Get Next Data Type Override public Result get Next Long throws Exec Exception return generic Get Next Data Type Override public Result get Next Big Integer throws Exec Exception return generic Get Next Data Type Override public Result get Next Big Decimal throws Exec Exception return generic Get Next Data Type Override public Add clone throws Clone Supported Exception Add clone new Add new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location Add Operator public class Add Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Add Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super Add plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Add Expression Add Expression ao Add Expression return ao get Lhs Equal get Lhs ao get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null get Lhs get Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Add Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical optimizer import java util Collection import org apache impl logical Layer Frontend Exception import org apache impl util Multi Map import org apache newplan Operator Plan import org apache newplan Plan Walker import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Logical Expression Visitor import org apache newplan logical relational Cogroup import org apache newplan logical relational Cube import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split Output import org apache newplan logical relational Logical Relational Nodes Visitor import org apache newplan logical relational Logical Relational Operator visitor walks logical plan applies given Logical Expression Visitor expressions encounters public abstract class Expression Visitor extends Logical Relational Nodes Visitor protected Logical Relational Operator current Op param plan Logical Plan visit param walker Walker use visit plan public Expression Visitor Operator Plan plan Plan Walker walker throws Frontend Exception super plan walker Get new instance expression visitor apply given expression param expr Logical Expression Plan visited return new Logical Expression Visitor expression abstract protected Logical Expression Visitor get Visitor Logical Expression Plan expr throws Frontend Exception private void visit Collection Logical Expression Plan lexp Plans throws Frontend Exception Logical Expression Plan plan lexp Plans Logical Expression Visitor v get Visitor plan v visit Override public void visit Filter filter throws Frontend Exception current Op filter Logical Expression Visitor v get Visitor filter get Filter Plan v visit Override public void visit Limit limit throws Frontend Exception current Op limit limit get Limit Plan null Logical Expression Visitor v get Visitor limit get Limit Plan v visit Override public void visit Join join throws Frontend Exception current Op join visit join get Expression Plan Values Override public void visit Cube cu throws Frontend Exception current Op cu Multi Map Integer Logical Expression Plan expression Plans cu get Expression Plans Integer key expression Plans key Set visit expression Plans get key Override public void visit Cogroup cg throws Frontend Exception current Op cg Multi Map Integer Logical Expression Plan expression Plans cg get Expression Plans Integer key expression Plans key Set visit expression Plans get key Override public void visit foreach throws Frontend Exception current Op foreach Inner Operator Plan go ahead work plan Operator Plan inner Plan foreach get Inner Plan Plan Walker new Walker current Walker spawn Child Walker inner Plan push Walker new Walker current Walker walk pop Walker Override public void visit Generate gen throws Frontend Exception current Op gen visit gen get Output Plans Override public void visit Inner Load load throws Frontend Exception expression Inner Load contains info relative use Foreach current Op current Op load get Logical Expression Plan exp Logical Expression Plan load get Projection get Plan Logical Expression Visitor v get Visitor exp v visit Override public void visit Split Output split Output throws Frontend Exception current Op split Output Logical Expression Visitor v get Visitor split Output get Filter Plan v visit Override public void visit Rank rank throws Frontend Exception current Op rank visit rank get Rank Col Plans Override public void visit Sort sort throws Frontend Exception current Op sort visit sort get Sort Col Plans
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical optimizer import org apache impl logical Layer Frontend Exception import org apache newplan Operator Plan import org apache newplan Plan Walker import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Cube import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Native import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Split Output import org apache newplan logical relational Store import org apache newplan logical relational Stream import org apache newplan logical relational Union import org apache newplan logical relational Logical Relational Nodes Visitor import org apache newplan logical relational Logical Relational Operator visitor walks logical plan calls method every type node Subclasses extend implement execute method method called every node graph public abstract class Ralational Nodes Visitor extends Logical Relational Nodes Visitor param plan Operator Plan visit param walker Walker use visit plan public Ralational Nodes Visitor Operator Plan plan Plan Walker walker throws Frontend Exception super plan walker Method call every node logical plan param op Node currently visited abstract protected void execute Logical Relational Operator op throws Frontend Exception Override public void visit Filter filter throws Frontend Exception execute filter Override public void visit Join join throws Frontend Exception execute join Override public void visit Cogroup cg throws Frontend Exception execute cg Override public void visit Load load throws Frontend Exception execute load Override public void visit Store store throws Frontend Exception execute store Override public void visit foreach throws Frontend Exception execute foreach Override public void visit Split split throws Frontend Exception execute split Override public void visit Split Output split Output throws Frontend Exception execute split Output Override public void visit Union union throws Frontend Exception execute union Override public void visit Sort sort throws Frontend Exception execute sort Override public void visit Rank rank throws Frontend Exception execute rank Override public void visit Distinct distinct throws Frontend Exception execute distinct Override public void visit Cross cross throws Frontend Exception execute cross Override public void visit Stream stream throws Frontend Exception execute stream Override public void visit Limit limit throws Frontend Exception execute limit Override public void visit Native lo Native throws Frontend Exception execute lo Native Override public void visit Cube cube throws Frontend Exception execute cube
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location Boolean expression public class Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Expression Expression ao Expression return ao get Lhs Equal get Lhs ao get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache pen import java math Big Decimal import java math Big Integer import java util Array List import java util Collection import java util Hash Map import java util Hash Set import java util Iterator import java util Linked List import java util List import java util Map import java util Set import org joda time Date Time import org apache commons logging Log import org apache commons logging Log Factory import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer relational Operators Limit import org apache data Bag Factory import org apache data Data Bag import org apache data Data Byte Array import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl io File Spec import org apache impl logical Layer Frontend Exception import org apache impl util Multi Map import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan logical expression Add Expression import org apache newplan logical expression Expression import org apache newplan logical expression Binary Expression import org apache newplan logical expression Cast Expression import org apache newplan logical expression Constant Expression import org apache newplan logical expression Divide Expression import org apache newplan logical expression Equal Expression import org apache newplan logical expression Greater Equal Expression import org apache newplan logical expression Greater Expression import org apache newplan logical expression Null Expression import org apache newplan logical expression Less Equal Expression import org apache newplan logical expression Less Expression import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Mod Expression import org apache newplan logical expression Multiply Expression import org apache newplan logical expression Equal Expression import org apache newplan logical expression Expression import org apache newplan logical expression Expression import org apache newplan logical expression Project Expression import org apache newplan logical expression Regex Expression import org apache newplan logical expression Subtract Expression import org apache newplan logical expression User Func Expression import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Store import org apache newplan logical relational Union import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Nodes Visitor import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache pen util Example Tuple import org apache pen util Pre Order Depth First Walker used generate synthetic data Synthetic data generation done making constraint tuples operator traverse plan try replace constraints values far possible deal simple conditions right public class Augment Base Data Visitor extends Logical Relational Nodes Visitor Map Load Data Bag base Data null Map Load Data Bag new Base Data new Hash Map Load Data Bag Map Operator Data Bag derived Data null private boolean limit false private final Map Operator Physical Operator log Phys Map private Map Limit Long ori Limit Map Map Operator Data Bag output Constraints Map new Hash Map Operator Data Bag Log log Log Factory get Log get Class Augmentation moves leaves root hence needs depthfirstwalker public Augment Base Data Visitor Operator Plan plan Map Operator Physical Operator log Phys Map Map Load Data Bag base Data Map Operator Data Bag derived Data throws Frontend Exception super plan new Pre Order Depth First Walker plan base Data base Data derived Data derived Data log Phys Map log Phys Map public void set Limit limit true public Map Load Data Bag get New Base Data throws Exec Exception consolidate base data different Ds inputs Multi Map File Spec Data Bag input Data Map new Multi Map File Spec Data Bag Map Entry Load Data Bag e new Base Data entry Set input Data Map put e get Key get File Spec e get Value int index File Spec fs input Data Map key Set int max Schema Size Tuple tuple Max Schema Size null Data Bag bag input Data Map get fs bag size int size Tuple null bag iterator next size size size max Schema Size max Schema Size size tuple Max Schema Size Data Bag bag input Data Map get fs bag size Iterator Tuple bag iterator Next Tuple next int size max Schema Size append tuple Max Schema Size get index Map Entry Load Data Bag e base Data entry Set Data Bag bag new Base Data get e get Key bag null bag Bag Factory get Instance new Default Bag new Base Data put e get Key bag bag add e get Value return new Base Data public Map Limit Long get Ori Limit Map return ori Limit Map Override public void visit Cogroup cg throws Frontend Exception limit Pre Order Depth First Walker current Walker get Branch Flag return first get outputconstraints current cogroup Data Bag output Constraints output Constraints Map get cg output Constraints Map remove cg boolean able Handle true check handle cogroup try collect information grouping List List Integer group Specs new Linked List List Integer int num Cols int index index cg get Inputs Logical Plan plan size index Collection Logical Expression Plan group Plans cg get Expression Plans get index List Integer group Cols new Array List Integer Logical Expression Plan plan group Plans Operator leaf plan get Sinks get leaf instanceof Project Expression group Cols add Integer value Project Expression leaf get Col Num else able Handle false break num Cols num Cols group Cols size group Cols size group Plans size group Cols size num Cols came across unworkable cogroup plan break else group Specs add group Cols workable data point synthesize tuples try able Handle need go output constraints first int num Inputs cg get Inputs Logical Plan plan size output Constraints null Iterator Tuple output Constraints iterator Next Tuple output Constraint next Object group Label output Constraint get int input input num Inputs input int num Input Fields Logical Relational Operator cg get Inputs Logical Plan plan get input get Schema size List Integer group Cols group Specs get input Data Bag output output Constraints Map get cg get Inputs Logical Plan plan get input output null output Bag Factory get Instance new Default Bag output Constraints Map put cg get Inputs Logical Plan plan get input output int Tuple input Constraint Get Group Input group Label group Cols num Input Fields input Constraint null output add input Constraint go organic data groups add input constraints make group big enough Data Bag output Data derived Data get cg Iterator Tuple output Data iterator Next Tuple group Tup next Object group Label group Tup get int input input num Inputs input int num Input Fields Logical Relational Operator cg get Inputs Logical Plan plan get input get Schema size List Integer group Cols group Specs get input Data Bag output output Constraints Map get cg get Inputs Logical Plan plan get input output null output Bag Factory get Instance new Default Bag output Constraints Map put cg get Inputs Logical Plan plan get input output int num Tups Add int Data Bag group Tup get input size int num Tups Add Tuple input Constraint Get Group Input group Label group Cols num Input Fields input Constraint null output add input Constraint catch Exception e log error Error visiting Cogroup Augmentation phase Example Generator e get Message throw new Frontend Exception Error visiting Cogroup Augmentation phase Example Generator e get Message Override public void visit Join join throws Frontend Exception limit Pre Order Depth First Walker current Walker get Branch Flag return first get outputconstraints current cogroup Data Bag output Constraints output Constraints Map get join output Constraints Map remove join boolean able Handle true check handle cogroup try collect information grouping List List Integer group Specs new Linked List List Integer int num Cols int index index join get Inputs Logical Plan plan size index Collection Logical Expression Plan group Plans join get Expression Plans get index List Integer group Cols new Array List Integer Logical Expression Plan plan group Plans Operator leaf plan get Sinks get leaf instanceof Project Expression group Cols add Integer value Project Expression leaf get Col Num else able Handle false break num Cols num Cols group Cols size group Cols size group Plans size group Cols size num Cols came across unworkable cogroup plan break else group Specs add group Cols workable data point synthesize tuples try able Handle need go output constraints first int num Inputs join get Inputs Logical Plan plan size output Constraints null Iterator Tuple output Constraints iterator Next Tuple output Constraint next int input input num Inputs input int num Input Fields Logical Relational Operator join get Inputs Logical Plan plan get input get Schema size List Integer group Cols group Specs get input Data Bag output output Constraints Map get join get Inputs Logical Plan plan get input output null output Bag Factory get Instance new Default Bag output Constraints Map put join get Inputs Logical Plan plan get input output Tuple input Constraint Get Join Input output Constraint group Cols num Input Fields input Constraint null output add input Constraint go organic data groups add input constraints make group big enough Data Bag output Data derived Data get join output Data size Data Bag output output Constraints Map get join get Inputs Logical Plan plan get output null output size output derived Data get join get Inputs Logical Plan plan get Tuple input Constraint output iterator next int input input num Inputs input Data Bag output output Constraints Map get join get Inputs Logical Plan plan get input output null output Bag Factory get Instance new Default Bag output Constraints Map put join get Inputs Logical Plan plan get input output int num Input Fields Logical Relational Operator join get Inputs Logical Plan plan get input get Schema size Tuple input Constraint Get Join Input input Constraint group Specs get group Specs get input num Input Fields input Constraint null output add input Constraint catch Exception e log error Error visiting Cogroup Augmentation phase Example Generator e get Message throw new Frontend Exception Error visiting Cogroup Augmentation phase Example Generator e get Message Override public void visit Cross cs throws Frontend Exception Override public void visit Distinct dt throws Frontend Exception limit Pre Order Depth First Walker current Walker get Branch Flag return Data Bag output Constraints output Constraints Map get dt output Constraints Map remove dt Data Bag input Constraints output Constraints Map get dt get Input Logical Plan plan input Constraints null input Constraints Bag Factory get Instance new Default Bag output Constraints Map put dt get Input Logical Plan plan input Constraints output Constraints null output Constraints size Iterator Tuple output Constraints iterator Next input Constraints add next boolean empty Input Constraints input Constraints size empty Input Constraints Data Bag input Data derived Data get dt get Input Logical Plan plan Iterator Tuple input Data iterator Next input Constraints add next Set Tuple distinct Set new Hash Set Tuple Iterator Tuple input Constraints iterator Next distinct Set add next break Next duplicates found generate one input Constraints size Tuple src Example Tuple input Constraints iterator next Tuple tgt Tuple Factory get Instance new Tuple src get Example Tuple input Constraint new Example Tuple tgt input Constraint synthetic true input Constraints add input Constraint else empty Input Constraints input Constraints clear Override public void visit Filter filter throws Frontend Exception limit Pre Order Depth First Walker current Walker get Branch Flag return Data Bag output Constraints output Constraints Map get filter output Constraints Map remove filter Logical Expression Plan filter Cond filter get Filter Plan Data Bag input Constraints output Constraints Map get filter get Input Logical Plan plan input Constraints null input Constraints Bag Factory get Instance new Default Bag output Constraints Map put filter get Input Logical Plan plan input Constraints Data Bag output Data derived Data get filter Data Bag input Data derived Data get filter get Input Logical Plan plan try output Constraints null output Constraints size one output constraints generate corresponding input constraints Iterator Tuple output Constraints iterator Next Tuple output Constraint next Example Tuple input Constraint Generate Matching Tuple output Constraint filter Cond false input Constraint null input Constraints add input Constraint else output Data size output constraints output empty generate one input pass filter Example Tuple input Constraint Generate Matching Tuple filter get Schema filter Cond false input Constraint null input Constraints add input Constraint necessary insert negative example e tuple pass filter output Data size input Data size tuples pass filter generate one input pass filter Example Tuple input Constraint Generate Matching Tuple filter get Schema filter Cond true input Constraint null input Constraints add input Constraint catch Exception e log error Error visiting Load Augmentation phase Example Generator e get Message e throw new Frontend Exception Error visiting Load Augmentation phase Example Generator e get Message e Override public void visit throws Frontend Exception limit Pre Order Depth First Walker current Walker get Branch Flag return Data Bag output Constraints output Constraints Map get output Constraints Map remove Logical Plan plan get Inner Plan boolean able Handle true List Integer cols new Array List Integer boolean cast false output Constraints null output Constraints size dont anything case return Operator op plan get Sinks get op instanceof Cast Expression cast true op Cast Expression op get Expression op instanceof Project Expression able Handle false else cols add Integer value Project Expression op get Col Num able Handle handle simple projections Data Bag output Bag Factory get Instance new Default Bag Iterator Tuple output Constraints iterator Next Tuple output Constraint next try Tuple input Constraint Back Prop Constraint output Constraint cols Logical Relational Operator plan get Predecessors get get Schema cast output add input Constraint catch Exception e e print Stack Trace throw new Frontend Exception Operator error Augmenting Phase Example Generator e get Message output Constraints Map put plan get Predecessors get output Override public void visit Load load throws Frontend Exception Data Bag input Data base Data get load check input Data exists input Data null input Data size log error valid input data found throw new Runtime Exception valid input data found Data Bag new Input Data new Base Data get load new Input Data null new Input Data Bag Factory get Instance new Default Bag new Base Data put load new Input Data Logical Schema schema try schema load get Schema schema null throw new Runtime Exception Example Generator requires schema Please provide schema loading data catch Frontend Exception e log error Error visiting Load Augmentation phase Example Generator e get Message throw new Frontend Exception Error visiting Load Augmentation phase Example Generator e get Message Tuple example Tuple input Data iterator next Data Bag output Constraints output Constraints Map get load output Constraints Map remove load first required guarantee least one output tuple output Constraints null output Constraints size output Constraints Bag Factory get Instance new Default Bag output Constraints add Tuple Factory get Instance new Tuple schema get Fields size create example tuple steal values encounter n care fields e null fields System println example Tuple String run output constraints one synthesize tuple add base data synthesizing individual fields try match fields exist real data boolean new Input false Iterator Tuple output Constraints iterator Next Tuple output Constraint next sanity check output Constraint size schema get Fields size throw new Runtime Exception Internal error incorrect number fields constraint tuple Tuple input Tuple Factory get Instance new Tuple output Constraint size Example Tuple input Tuple new Example Tuple input try int input Tuple size Object output Constraint get null example Tuple size example Tuple get input Tuple set output Constraint instanceof Example Tuple input Tuple synthetic Example Tuple output Constraint synthetic else raw tuple synthesized input Tuple synthetic true catch Exec Exception e log error Error visiting Load Augmentation phase Example Generator e get Message throw new Frontend Exception Error visiting Load Augmentation phase Example Generator e get Message try input Tuple synthetic Input input Tuple input Data schema input Tuple synthetic true new Input Data add input Tuple new Input new Input true catch Exec Exception e throw new Frontend Exception Error visiting Load Augmentation phase Example Generator e get Message private boolean Input Tuple new Tuple Data Bag input Logical Schema schema throws Exec Exception boolean result Iterator Tuple iter input iterator iter Next result true Tuple tmp iter next int schema size new Tuple get equals tmp get result false break result return true return false Override public void visit Sort throws Frontend Exception limit Pre Order Depth First Walker current Walker get Branch Flag return Data Bag output Constraints output Constraints Map get output Constraints Map remove output Constraints null output Constraints Map put get Input Logical Plan plan Bag Factory get Instance new Default Bag else output Constraints Map put get Input Logical Plan plan output Constraints Override public void visit Split split throws Frontend Exception limit Pre Order Depth First Walker current Walker get Branch Flag return Override public void visit Store store throws Frontend Exception limit Pre Order Depth First Walker current Walker get Branch Flag return Data Bag output Constraints output Constraints Map get store output Constraints null output Constraints Map put plan get Predecessors store get Bag Factory get Instance new Default Bag else output Constraints Map remove store output Constraints Map put plan get Predecessors store get output Constraints Override public void visit Union u throws Frontend Exception limit Pre Order Depth First Walker current Walker get Branch Flag return Data Bag output Constraints output Constraints Map get u output Constraints Map remove u output Constraints null output Constraints size dont need anything find inputs create empty bags output Constraints return Operator op u get Inputs Logical Plan plan Data Bag constraints Bag Factory get Instance new Default Bag output Constraints Map put op constraints return since output Constraints apply inputs round robin int count List Operator inputs u get Inputs Logical Plan plan int Inputs inputs size Operator op inputs Data Bag constraint Bag Factory get Instance new Default Bag output Constraints Map put op constraint Iterator Tuple output Constraints iterator Next Data Bag constraint output Constraints Map get inputs get count constraint add next count count Inputs Override public void visit Limit lm throws Frontend Exception limit augment traversal return ori Limit Map null ori Limit Map new Hash Map Limit Long Data Bag output Constraints output Constraints Map get lm output Constraints Map remove lm Data Bag input Constraints output Constraints Map get lm get Input Logical Plan plan input Constraints null input Constraints Bag Factory get Instance new Default Bag output Constraints Map put lm get Input Logical Plan plan input Constraints Data Bag input Data derived Data get lm get Input Logical Plan plan output Constraints null output Constraints size one output constraints generate corresponding input constraints Iterator Tuple output Constraints iterator Next input Constraints add next plus one one input Constraints size input Constraints add input Data iterator next Pre Order Depth First Walker current Walker set Branch Flag else input Constraints size add input input constraints input Constraints add input Data plus one one input Constraints size input Constraints add input Data iterator next Pre Order Depth First Walker current Walker set Branch Flag Limit po Limit Limit log Phys Map get lm ori Limit Map put lm Long value po Limit get Limit po Limit set Limit input Constraints size lm set Limit po Limit get Limit Tuple Get Group Input Object group Label List Integer group Cols int num Fields throws Exec Exception Tuple Tuple Factory get Instance new Tuple num Fields group Cols size Group Label would data atom set group Cols get group Label else group Label instanceof Tuple throw new Runtime Exception Unrecognized group label Tuple group Tuple group Label int group Cols size set group Cols get group get return Tuple Get Join Input Tuple group List Integer group Cols List Integer group Cols int num Fields throws Exec Exception Tuple Tuple Factory get Instance new Tuple num Fields group Cols size Group Label would data atom set group Cols get group get group Cols get else group instanceof Tuple throw new Runtime Exception Unrecognized group label int group Cols size set group Cols get group get group Cols get return Tuple Get Join Input Tuple group List Integer group Cols int num Fields throws Exec Exception Tuple Tuple Factory get Instance new Tuple num Fields group Cols size Group Label would data atom set group Cols get group else group instanceof Tuple throw new Runtime Exception Unrecognized group label int group Cols size set group Cols get group get return Tuple Back Prop Constraint Tuple output Constraint List Integer cols Logical Schema input Schema boolean cast throws Exec Exception Tuple input Const Tuple Factory get Instance new Tuple input Schema get Fields size Tuple input Constraint new Example Tuple input Const int Col Col output Constraint size Col int Col cols get Col Object Val output Constraint get Col Object Val input Constraint get Col Val null Val null input Constraint set Col Val input Constraint set Col cast new Data Byte Array Val String get Bytes Val else Val null unable back propagate due conflicting column constraints give return null return input Constraint generate constraint tuple conforms schema passes predicate null unable find tuple Example Tuple Generate Matching Tuple Logical Schema schema Logical Expression Plan plan boolean invert throws Frontend Exception Exec Exception return Generate Matching Tuple Tuple Factory get Instance new Tuple schema get Fields size plan invert generate constraint tuple conforms constraint passes predicate null unable find tuple constraint tuples tuples whose fields blend actual data values nulls null stands n care future may want replace n care rich constraint language would help e g case two filters row want downstream filter tell upstream filter predicate wants satisfied given field Example Tuple Generate Matching Tuple Tuple constraint Logical Expression Plan predicate boolean invert throws Exec Exception Frontend Exception Tuple Tuple Factory get Instance new Tuple constraint size Example Tuple new Example Tuple int size set constraint get Generate Matching Tuple Helper predicate get Sources get invert synthetic true return void Generate Matching Tuple Helper Tuple Operator pred boolean invert throws Frontend Exception Exec Exception pred instanceof Binary Expression Generate Matching Tuple Helper Binary Expression pred invert else pred instanceof Expression Generate Matching Tuple Helper Expression pred invert else pred instanceof Null Expression Generate Matching Tuple Helper Null Expression pred invert else pred instanceof User Func Expression n know generate input tuple return null suppress generation null else throw new Frontend Exception Unknown operator filter predicate void Generate Matching Tuple Helper Tuple Binary Expression pred boolean invert throws Frontend Exception Exec Exception pred instanceof Expression Generate Matching Tuple Helper Expression pred invert return else pred instanceof Expression Generate Matching Tuple Helper Expression pred invert return sure expression operators roots plan boolean left Const false right Const false Object left Const null right Const null byte left Data Type right Data Type int left Col right Col pred instanceof Add Expression pred instanceof Subtract Expression pred instanceof Multiply Expression pred instanceof Divide Expression pred instanceof Mod Expression pred instanceof Regex Expression return n try work around operators right pred get Lhs instanceof Constant Expression left Const true left Const Constant Expression pred get Lhs get Value else Logical Expression lhs pred get Lhs lhs instanceof Cast Expression lhs Cast Expression lhs get Expression pred get Lhs Operand instanceof Project Expression Project Expression pred get Lhs Operand get Projection size return hard lhs instanceof Project Expression return left Col Project Expression lhs get Col Num left Data Type Project Expression lhs get Type Object get left Col null left Const true left Const pred get Rhs instanceof Constant Expression right Const true right Const Constant Expression pred get Rhs get Value else Operator rhs pred get Rhs rhs instanceof Cast Expression rhs Cast Expression rhs get Expression pred get Rhs Operand instanceof Project Expression Project Expression pred get Rhs Operand get Projection size return hard rhs instanceof Project Expression return right Col Project Expression rhs get Col Num right Data Type Project Expression rhs get Type Object get right Col null right Const true right Const left Const right Const return ca n really change result constants try change nulls constants convert nulls constants invert pred instanceof Equal Expression left Const set right Col generate Data right Data Type left Const String else right Const set left Col generate Data left Data Type right Const String else set left Col generate Data left Data Type set right Col generate Data right Data Type else pred instanceof Equal Expression left Const set right Col generate Data right Data Type Get Unequal Value left Const String else right Const set left Col generate Data left Data Type Get Unequal Value right Const String else set left Col generate Data left Data Type set right Col generate Data right Data Type else pred instanceof Greater Expression pred instanceof Greater Equal Expression left Const set right Col generate Data right Data Type Get Smaller Value left Const String else right Const set left Col generate Data left Data Type Get Larger Value right Const String else set left Col generate Data left Data Type set right Col generate Data right Data Type else pred instanceof Less Expression pred instanceof Less Equal Expression left Const set right Col generate Data right Data Type Get Larger Value left Const String else right Const set left Col generate Data left Data Type Get Smaller Value right Const String else set left Col generate Data left Data Type set right Col generate Data right Data Type else pred instanceof Equal Expression left Const set right Col generate Data right Data Type Get Unequal Value left Const String else right Const set left Col generate Data left Data Type Get Unequal Value right Const String else set left Col generate Data left Data Type set right Col generate Data right Data Type else pred instanceof Equal Expression left Const set right Col generate Data right Data Type left Const String else right Const set left Col generate Data left Data Type right Const String else set left Col generate Data left Data Type set right Col generate Data right Data Type else pred instanceof Greater Expression pred instanceof Greater Equal Expression left Const set right Col generate Data right Data Type Get Larger Value left Const String else right Const set left Col generate Data left Data Type Get Smaller Value right Const String else set left Col generate Data left Data Type set right Col generate Data right Data Type else pred instanceof Less Expression pred instanceof Less Equal Expression left Const set right Col generate Data right Data Type Get Smaller Value left Const String else right Const set left Col generate Data left Data Type Get Larger Value right Const String else set left Col generate Data left Data Type set right Col generate Data right Data Type void Generate Matching Tuple Helper Tuple Expression op boolean invert throws Frontend Exception Exec Exception Operator input op get Lhs Generate Matching Tuple Helper input invert input op get Rhs Generate Matching Tuple Helper input invert void Generate Matching Tuple Helper Tuple Expression op boolean invert throws Frontend Exception Exec Exception Operator input op get Lhs Generate Matching Tuple Helper input invert input op get Rhs Generate Matching Tuple Helper input invert void Generate Matching Tuple Helper Tuple Expression op boolean invert throws Frontend Exception Exec Exception Logical Expression input op get Expression Generate Matching Tuple Helper input invert void Generate Matching Tuple Helper Tuple Null Expression op boolean invert throws Frontend Exception Exec Exception byte type op get Expression get Type invert set null else set generate Data type Object Get Unequal Value Object v byte type Data Type find Type v type Data Type type Data Type type Data Type return null Object zero generate Data type v equals zero return generate Data type return zero Object Get Smaller Value Object v byte type Data Type find Type v type Data Type type Data Type type Data Type return null switch type case Data Type String str String v str length return str substring str length else return null case Data Type Data Byte Array data Data Byte Array v data size return new Data Byte Array data get data size else return null case Data Type return Integer value Integer v case Data Type return Long value Long v case Data Type return Float value Float v case Data Type return Double value Double v case Data Type return Big Integer v subtract Big Integer case Data Type return Big Decimal v subtract Big Decimal case Data Type Date Time dt Date Time v dt get Millis Second return dt minus Millis else dt get Second Minute return dt minus Seconds else dt get Minute Hour return dt minus Minutes else dt get Hour Day return dt minus Hours else return dt minus Days default return null Object Get Larger Value Object v byte type Data Type find Type v type Data Type type Data Type type Data Type return null switch type case Data Type return String v case Data Type String str Data Byte Array v String str str return new Data Byte Array str case Data Type return Integer value Integer v case Data Type return Long value Long v case Data Type return Float value Float v case Data Type return Double value Double v case Data Type return Big Integer v add Big Integer case Data Type return Big Decimal v add Big Decimal case Data Type Date Time dt Date Time v dt get Millis Second return dt plus Millis else dt get Second Minute return dt plus Seconds else dt get Minute Hour return dt plus Minutes else dt get Hour Day return dt plus Hours else return dt plus Days default return null Object generate Data byte type String data switch type case Data Type data equals Ignore Case true return Boolean else data equals Ignore Case false return Boolean else return null case Data Type return new Data Byte Array data get Bytes case Data Type return Double value data case Data Type return Float value data case Data Type return Integer value data case Data Type return Long value data case Data Type return new Big Integer data case Data Type return new Big Decimal data case Data Type return new Date Time data case Data Type return data default return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Array List import java util Iterator import java util List import org apache Accumulator import org apache Algebraic import org apache Eval Func import org apache Func Spec import org apache Exception import org apache backend executionengine Exec Exception import org apache data Data Bag import org apache data Data Byte Array import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema Generates average set values class implements link org apache Algebraic possible execution performed distributed fashion p operate numeric type also operate bytearrays cast doubles expects bag tuples one record knows schema function passed bag integers longs use specially adapted version uses integer arithmetic summing data return type always double regardless input type p implements link org apache Accumulator interface well never preferred method usage available case combiner used given calculation public class extends Eval Func Double implements Algebraic Accumulator Double private static Tuple Factory Tuple Factory Tuple Factory get Instance Override public Double exec Tuple input throws Exception try Double sum sum input sum null either handed empty bag bag filled nulls return null case return null double count count input Double avg null count avg new Double sum count return avg catch Exec Exception ee throw ee Override public String get Initial return Initial class get Name Override public String get Intermed return Intermediate class get Name Override public String get Final return Final class get Name static public class Initial extends Eval Func Tuple Override public Tuple exec Tuple input throws Exception Tuple Tuple Factory new Tuple try input bag one tuple containing column trying avg Data Bag bg Data Bag input get Data Byte Array dba null bg iterator Next Tuple tp bg iterator next dba Data Byte Array tp get set dba null Double value dba String null dba null set else set return catch Number Format Exception nfe invalid input treat input null try set null set catch Exec Exception e throw e return catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing average get Class get Simple Name throw new Exec Exception msg err Code Exception e static public class Intermediate extends Eval Func Tuple Override public Tuple exec Tuple input throws Exception try Data Bag b Data Bag input get return combine b catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing average get Class get Simple Name throw new Exec Exception msg err Code Exception e static public class Final extends Eval Func Double Override public Double exec Tuple input throws Exception try Data Bag b Data Bag input get Tuple combined combine b Double sum Double combined get sum null return null double count Long combined get Double avg null count avg new Double sum count return avg catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing average get Class get Simple Name throw new Exec Exception msg err Code Exception e static protected Tuple combine Data Bag values throws Exec Exception double sum long count combine called Intermediate Final either case Initial would called would sent valid tuples Hence n need check incoming bag empty Tuple output Tuple Factory new Tuple boolean saw Non Null false Iterator Tuple values iterator Next Tuple next Double Double get count nulls avg contributing departure performance implemented inspecting size bag null else saw Non Null true sum count Long get saw Non Null output set new Double sum else output set null output set Long value count return output static protected long count Tuple input throws Exec Exception Data Bag values Data Bag input get long cnt Iterator Tuple values iterator Next Tuple Tuple next null size get null cnt return cnt static protected Double sum Tuple input throws Exec Exception Exception Data Bag values Data Bag input get handed empty bag return values null values size return null double sum boolean saw Non Null false Iterator Tuple values iterator Next Tuple next try Data Byte Array dba Data Byte Array get Double dba null Double value dba String null null continue saw Non Null true sum catch Runtime Exception exp int err Code String msg Problem computing sum doubles throw new Exec Exception msg err Code Exception exp saw Non Null return new Double sum else return null Override public Schema output Schema Schema input return new Schema new Schema Field Schema null Data Type non Javadoc see org apache Eval Func get Arg Func Mapping Override public List Func Spec get Arg Func Mapping throws Frontend Exception List Func Spec func List new Array List Func Spec func List add new Func Spec get Class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Double Avg class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Float Avg class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Int Avg class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Long Avg class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Big Decimal Avg class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Big Integer Avg class get Name Schema generate Nested Schema Data Type Data Type return func List Accumulator interface implementation private Double intermediate Sum null private Double intermediate Count null Override public void accumulate Tuple b throws Exception try Double sum sum b sum null return set default values intermediate Sum null intermediate Count null intermediate Sum intermediate Count double count Long count b count intermediate Count count intermediate Sum sum catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing average get Class get Simple Name throw new Exec Exception msg err Code Exception e Override public void cleanup intermediate Sum null intermediate Count null Override public Double get Value Double avg null intermediate Count null intermediate Count avg new Double intermediate Sum intermediate Count return avg
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io File Found Exception import java io Exception import java io Input Stream import java util Array List import java util List import java util Properties import org apache avro Schema import org apache avro Schema Parse Exception import org apache avro Schema Type import org apache avro file Data File Stream import org apache avro generic Generic Container import org apache avro generic Generic Datum Reader import org apache avro generic Generic Data import org apache avro mapred Avro Input Format import org apache avro mapred Avro Output Format import org apache commons cli Command Line import org apache commons cli Command Line Parser import org apache commons cli Gnu Parser import org apache commons cli Help Formatter import org apache commons cli Options import org apache commons cli Parse Exception import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs File Status import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop io Null Writable import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Input Split import org apache hadoop mapreduce Job import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce Record Writer import org apache hadoop mapreduce Task Attempt Context import org apache hadoop mapreduce lib input File Input Format import org apache hadoop mapreduce lib output File Output Format import org apache Expression import org apache Load Func import org apache Load Metadata import org apache Load Push import org apache Warning import org apache Resource Schema import org apache Resource Statistics import org apache Store Func import org apache Store Func Interface import org apache Store Resources import org apache backend hadoop executionengine map Reduce Layer Split import org apache data Tuple import org apache impl logical Layer Frontend Exception import org apache impl util Jar Manager import org apache impl util Context import org apache impl util Utils import org apache impl util avro Avro Array Reader import org apache impl util avro Avro Record Reader import org apache impl util avro Avro Record Writer import org apache impl util avro Avro Storage Schema Conversion Utilities import org apache impl util avro Avro Tuple Wrapper import com google common collect Lists import com google common collect Maps reading writing Avro data public class Avro Storage extends Load Func implements Store Func Interface Load Metadata Load Push Store Resources Creates new instance Storage function without specifying schema Useful loading data public Avro Storage null null Creates new instance Storage function param sn Specifies input output schema record name public Avro Storage final String sn sn null private String schema Name output private String schema Name Space null protected boolean allow Recursive false protected boolean double Colons Double Underscores false protected Schema schema protected final Log log Log Factory get Log get Class Creates new instance Avro Storage function specifying output schema properties param sn Specifies input output schema record name param opts Options Avro Storage li code namespace code Namespace automatically generated output schema li li code schemafile code Specifies avro schema file read input schema local file hdfs url etc li li code schemaclass code Specifies fully qualified class name avro class classpath implements Generic Container li li code examplefile code Specifies avro data file copy input schema local file hdfs url etc li li code allowrecursive code Option allow recursive schema definitions default false li li code doublecolons code Option translate schema names double colons names double underscores default false li public Avro Storage final String sn final String opts super sn null sn length try Schema new Schema Parser parse sn must valid schema set Input Avro Schema set Output Avro Schema catch Schema Parse Exception e valid schema use record name schema Name sn opts null String opts Arr opts split Options valid Options new Options try Command Line Parser parser new Gnu Parser valid Options add Option n namespace true Namespace automatically generated output schema valid Options add Option f schemafile true Specifies avro schema file read input output schema valid Options add Option c schemaclass true Specifies fully qualified class name avro class classpath implements Generic Container valid Options add Option e examplefile true Specifies avro data file copy output schema valid Options add Option r allowrecursive false Option allow recursive schema definitions default false valid Options add Option doublecolons false Option translate schema names double colons names double underscores default false Command Line configured Options parser parse valid Options opts Arr schema Name Space configured Options get Option Value namespace null allow Recursive configured Options Option r double Colons Double Underscores configured Options Option configured Options Option f try Path p new Path configured Options get Option Value f Configuration conf Context get Context get Job Conf null conf new Configuration else conf Context get Context get Job Conf Schema new Schema Parser parse File System get p Uri conf open p set Input Avro Schema set Output Avro Schema catch File Found Exception fnfe System err printf file found exception n log warn Schema file found instantiating Avro Storage schema described local file front end message back end log ignore mesasge fnfe else configured Options Option c String schema Class configured Options get Option Value c try Schema Generic Container Class Name schema Class new Instance get Schema set Input Avro Schema set Output Avro Schema catch Class Found Exception Illegal Access Exception cnfe System err printf class found exception n log error Schema class schema Class found classpath cnfe throw new Runtime Exception cnfe catch Instantiation Exception ie System err printf instantiation exception n log error Schema class schema Class must public empty args constructor ie throw new Runtime Exception ie catch Class Cast Exception cce System err printf class cast exception n log error Schema class schema Class must implement org apache avro generic Generic Container interface cce throw new Runtime Exception cce else configured Options Option e set Output Avro Schema get Avro Schema configured Options get Option Value e new Job new Configuration catch Parse Exception e log error Exception Avro Storage e log error Avro Storage called arguments sn opts warn Parse Exception Avro Storage Warning Help Formatter formatter new Help Formatter formatter print Help Avro Storage options valid Options throw new Runtime Exception e catch Exception e log warn Exception Avro Storage e log warn Avro Storage called arguments sn opts warn Exception Avro Storage Warning throw new Runtime Exception e Context signature instance protected String udf Context Signature null Override public final void set Context Signature final String signature udf Context Signature signature super set Context Signature signature update Schema Input Avro Schema Internal function getting Properties object associated instance return Properties object associated instance protected final Properties get Properties udf Context Signature null return get Properties Avro Storage class null else return get Properties Avro Storage class udf Context Signature Internal function getting Properties object associated instance param c Class param signature Signature string return Properties object associated instance Suppress Warnings rawtypes protected final Properties get Properties final Class c final String signature Context context Context get Context signature null return context get Properties c else return context get Properties c new String signature see org apache Load Metadata get Schema java lang String org apache hadoop mapreduce Job Override public final Resource Schema get Schema final String location final Job job throws Exception schema null Schema get Avro Schema location job set Input Avro Schema Resource Schema rs Avro Storage Schema Conversion Utilities avro Schema Resource Schema schema allow Recursive return rs Reads avro schema specified location param location Location file param job Hadoop job object return Avro Schema object derived specified file throws Exception protected final Schema get Avro Schema final String location final Job job throws Exception String locations get Path Strings location Path paths new Path locations length int paths length paths new Path locations return get Avro Schema paths job Reads avro schemas specified location param p Location file param job Hadoop job object return Avro Schema object derived specified file throws Exception public Schema get Avro Schema final Path p final Job job throws Exception Generic Datum Reader Object avro Reader new Generic Datum Reader Object Array List File Status status List new Array List File Status File System fs File System get p Uri job get Configuration Path temp p File Status tempf fs glob Status temp status List add tempf File Status status Array File Status status List Array new File Status status List size status Array null throw new Exception Path p String exist status Array length throw new Exception path matches pattern p String Path file Path Utils depth First Search File status Array fs file Path null throw new Exception path matches pattern p String Input Stream hdfs Input Stream fs open file Path Data File Stream Object avro Data Stream new Data File Stream Object hdfs Input Stream avro Reader Schema avro Data Stream get Schema avro Data Stream close return see org apache Load Metadata get Statistics java lang String org apache hadoop mapreduce Job Override public final Resource Statistics get Statistics final String location final Job job throws Exception return null see org apache Load Metadata get Partition Keys java lang String org apache hadoop mapreduce Job Override public final String get Partition Keys final String location final Job job throws Exception return null see org apache Load Metadata set Partition Filter org apache Expression Override public void set Partition Filter final Expression partition Filter throws Exception see org apache Store Func Interface rel Abs Path Store Location java lang String org apache hadoop fs Path Override public final String rel Abs Path Store Location final String location final Path cur Dir throws Exception return Load Func get Absolute Path location cur Dir see org apache Store Func Interface get Output Format Override public Output Format Null Writable Object get Output Format throws Exception Hadoop output format Avro Storage class Avro Storage Output Format extends File Output Format Null Writable Object Override public Record Writer Null Writable Object get Record Writer final Task Attempt Context tc throws Exception Interrupted Exception return new Avro Record Writer avro Storage Output Format Schema get Default Work File tc Avro Output Format tc get Configuration return new Avro Storage Output Format see org apache Store Func Interface set Store Location java lang String org apache hadoop mapreduce Job Override public final void set Store Location final String location final Job job throws Exception File Output Format set Output Path job new Path location property name output avro schema public static final String org apache builtin Avro Storage output schema see org apache Store Func Interface check Schema org apache Resource Schema Override public final void check Schema final Resource Schema rs throws Exception rs null throw new Exception check Schema called null Resource Schema Schema avro Schema Avro Storage Schema Conversion Utilities resource Schema Avro Schema rs schema Name null schema Name length output schema Name schema Name Space Maps String List Schema new Hash Map double Colons Double Underscores avro Schema null throw new Exception check Schema could translate Resource Schema Avro Schema set Output Avro Schema avro Schema Sets output avro schema param Avro schema protected final void set Output Avro Schema final Schema schema get Properties set Property String Utility function gets output schema udf properties instance store function return output schema associated protected final Schema get Output Avro Schema schema null String schema String get Properties get Property schema String null schema new Schema Parser parse schema String return schema Record Writer used instance private Record Writer Null Writable Object writer see org apache Store Func Interface prepare Write org apache hadoop mapreduce Record Writer Suppress Warnings unchecked rawtypes Override public final void prepare Write final Record Writer w throws Exception udf Context Signature null throw new Exception get Class String prepare Write called without setting udf context signature writer Record Writer Null Writable Object w Avro Record Writer writer prepare Write get Output Avro Schema see org apache Store Func Interface put Next org apache data Tuple Override public final void put Next final Tuple throws Exception try writer write null catch Interrupted Exception e log error Interrupted Exception put Next throw new Exception e see org apache Store Func Interface set Store Func Context Signature java lang String Override public final void set Store Func Context Signature final String signature udf Context Signature signature super set Context Signature signature see org apache Store Func Interface cleanup Failure java lang String org apache hadoop mapreduce Job Override public final void cleanup Failure final String location final Job job throws Exception Store Func cleanup Failure Impl location job property name input avro schema public static final String org apache builtin Avro Storage input schema see org apache Load Func set Location java lang String org apache hadoop mapreduce Job Override public void set Location final String location final Job job throws Exception File Input Format set Input Paths job location schema null schema get Input Avro Schema schema null schema get Avro Schema location job schema null throw new Exception Could determine avro schema location location set Input Avro Schema schema Sets input avro schema param specified schema protected final void set Input Avro Schema final Schema schema get Properties set Property String Helper function reads input avro schema Properties return input avro schema public final Schema get Input Avro Schema schema null update Schema Input Avro Schema return schema Utility function gets input avro schema udf properties updates schema instance private final void update Schema Input Avro Schema String schema String get Properties get Property schema String null Schema new Schema Parser parse schema String schema see org apache Load Func get Input Format Override public Input Format Null Writable Generic Data Record get Input Format throws Exception return new org apache backend hadoop executionengine map Reduce Layer File Input Format Null Writable Generic Data Record Override public Record Reader Null Writable Generic Data Record create Record Reader final Input Split final Task Attempt Context tc throws Exception Interrupted Exception Schema get Input Avro Schema Record Reader Null Writable Generic Data Record rr null get Type Type rr new Avro Array Reader else rr new Avro Record Reader try rr initialize tc finally rr close tc set Status String return rr Suppress Warnings rawtypes private Record Reader reader Split split see org apache Load Func prepare Read org apache hadoop mapreduce Record Reader org apache backend hadoop executionengine map Reduce Layer Split Suppress Warnings rawtypes Override public final void prepare Read final Record Reader r final Split throws Exception reader r split see org apache Load Func get Next Override public final Tuple get Next throws Exception try reader next Key Value return new Avro Tuple Wrapper Generic Data Record Generic Data Record reader get Current Value else return null catch Interrupted Exception e throw new Exception Wrapped Interrupted Exception e Override public void cleanup Success final String location final Job job throws Exception Override public List Operator Set get Features return Lists new Array List Load Push Operator Set List required fields passed push projection protected Required Field List required Field List see org apache Load Push push Projection org apache Load Push Required Field List Override public Required Field Response push Projection final Required Field List rfl throws Frontend Exception required Field List rfl Schema new Schema Avro Storage Schema Conversion Utilities new Schema Required Field List schema rfl new Schema null schema new Schema set Input Avro Schema schema return new Required Field Response true else log warn could select fields subset rfl n warn could select fields subset Warning return new Required Field Response false Override public List String get Ship Files Class class List new Class Schema class Avro Input Format class return Func Utils get Ship Files class List
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import org apache Eval Func import org apache Exception import org apache backend executionengine Exec Exception import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache impl logical Layer schema Schema method never used directly use link public class Bag Size extends Eval Func Long Override public Long exec Tuple input throws Exception try Data Bag bag Data Bag input get return bag null null Long value bag size catch Exec Exception exp throw exp catch Exception e int err Code String msg Error computing size get Class get Simple Name throw new Exec Exception msg err Code Exception e Override public Schema output Schema Schema input return new Schema new Schema Field Schema null Data Type Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import org apache Eval Func import org apache Exception import org apache backend executionengine Exec Exception import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl logical Layer schema Schema Field Schema Flatten bag string use character default delimiter one provided Example bag b c Bag String bag b c Bag String bag b c bag b c e f Bag String bag b c e f input bag null return null public class Bag String extends Eval Func String private static final String Usage Bag String data Bag Bag String data Bag delimiter private static final String Override public String exec Tuple input Tuple throws Exception input Tuple size input Tuple size throw new Exec Exception Exception Object first Arg input Tuple get first Arg null return null first Arg instanceof Data Bag throw new Exec Exception found type first Arg get Class get Name Exception input Tuple size input Tuple get instanceof String throw new Exec Exception Usage Bag Tuple Data Bag String Exception Data Bag bag Data Bag input Tuple get String delimeter input Tuple size delimeter String input Tuple get String Builder buffer new String Builder try Tuple bag null int size buffer length buffer append delimeter buffer append get return buffer String catch Exception e String msg Encourntered error flattening bag get Class get Simple Name throw new Exec Exception msg Exception e Override public Schema output Schema Schema input Schema try input Schema null input Schema size input Schema size throw new Runtime Exception Expecting inputs found input Schema null input Schema size Field Schema input Field Schema input Schema get Field input Field Schema type Data Type throw new Runtime Exception Expecting bag tuples found data type Data Type find Type Name input Field Schema type first field bag schema Field Schema first Field Schema input Field Schema schema get Field first Field Schema null first Field Schema schema null first Field Schema schema size throw new Runtime Exception Expecting bag delimeter found input Schema first Field Schema type Data Type throw new Runtime Exception Expecting bag delimeter found input Schema input Schema size Field Schema second Input Field Schema input Schema get Field second Input Field Schema type Data Type throw new Runtime Exception Expecting bag delimeter found input Schema return new Schema new Schema Field Schema null Data Type catch Frontend Exception e e print Stack Trace return null Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import org apache Eval Func import org apache Exception import org apache backend executionengine Exec Exception import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema Flatten bag tuple performs flattening first level n recursively flatten nested bags Example b c b c b c e f b c e f input bag null return null public class Bag Tuple extends Eval Func Tuple Override public Tuple exec Tuple input Tuple throws Exception input Tuple size throw new Exec Exception Expecting input found input Tuple size Exception input Tuple get null return null input Tuple get instanceof Data Bag throw new Exec Exception Usage Bag Tuple Data Bag Exception Data Bag input Bag Data Bag input Tuple get try Tuple output Tuple null long output Tuple Size get Ouput Tuple Size input Bag Tuple Factory new Tuple int size support Integer output Tuple Size Integer throw new Exec Exception Input bag large Exception Tuple Factory tuple Factory Tuple Factory get Instance output Tuple tuple Factory new Tuple int output Tuple Size int field Num Tuple input Bag null int size output Tuple set field Num get return output Tuple catch Exception e String msg Encourntered error flattening bag tuple get Class get Simple Name throw new Exec Exception msg Exception e Calculate size output tuple based sum size tuple input bag param bag return total data elements tab private long get Ouput Tuple Size Data Bag bag long size bag null Tuple bag size size size return size Override public Schema output Schema Schema input Schema try input Schema null input Schema size throw new Runtime Exception Expecting input found input Schema null input Schema size Schema Field Schema input Field Schema input Schema get Field input Field Schema type Data Type throw new Runtime Exception Expecting bag tuples first field bag schema Schema Field Schema first Field Schema input Field Schema schema get Field first Field Schema null first Field Schema schema null first Field Schema schema size throw new Runtime Exception Expecting bag tuples found input Schema first Field Schema type Data Type throw new Runtime Exception Expecting bag tuples found input Schema output schema Schema tuple Output Schema new Schema int first Field Schema schema size tuple Output Schema add first Field Schema schema get Field return new Schema new Schema Field Schema get Schema Name get Class get Name Lower Case input Schema tuple Output Schema Data Type catch Frontend Exception e e print Stack Trace return null Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan import java io Byte Array Output Stream import java io Print Stream import java util Array Deque import java util Array List import java util Deque import java util Hash Set import java util Iterator import java util List import java util Set import org apache commons logging Log import org apache commons logging Log Factory import org apache impl logical Layer Frontend Exception import org apache impl util Pair public abstract class Base Operator Plan implements Operator Plan protected List Operator ops protected Plan Edge Edges protected Plan Edge Edges protected Plan Edge soft Edges protected Plan Edge soft Edges private List Operator roots private List Operator leaves protected static final Log log Log Factory get Log Base Operator Plan class public Base Operator Plan ops new Array List Operator roots new Array List Operator leaves new Array List Operator Edges new Plan Edge Edges new Plan Edge soft Edges new Plan Edge soft Edges new Plan Edge Suppress Warnings unchecked public Base Operator Plan Base Operator Plan shallow copy constructor ops List Operator Array List Operator ops clone roots List Operator Array List roots clone leaves List Operator Array List leaves clone Edges Edges shallow Clone Edges Edges shallow Clone soft Edges soft Edges shallow Clone soft Edges soft Edges shallow Clone Get number nodes plan public int size return ops size Get operators plan predecessors return operators plan predecessors empty list plan empty public List Operator get Sources roots size ops size Operator op ops Edges get op null roots add op return roots Get operators plan successors return operators plan successors empty list plan empty public List Operator get Sinks leaves size ops size Operator op ops Edges get op null leaves add op return leaves given operator get operators immediately plan param op operator fetch predecessors return list operators imeediately op empty list op root public List Operator get Predecessors Operator op return Edges get op given operator get operators immediately param op operator fetch successors return list operators imeediately op empty list op leaf public List Operator get Successors Operator op return Edges get op given operator get operators softly immediately plan param op operator fetch predecessors return list operators immediately op empty list op root public List Operator get Soft Link Predecessors Operator op return soft Edges get op given operator get operators softly immediately param op operator fetch successors return list operators immediately op empty list op leaf public List Operator get Soft Link Successors Operator op return soft Edges get op Add new operator plan connected existing operators param op operator add public void add Operator op mark Dirty ops contains op ops add op Remove operator plan param op Operator removed throws Frontend Exception remove operation attempts remove operator still connected operators public void remove Operator op throws Frontend Exception Edges contains Key op Edges contains Key op throw new Frontend Exception Attempt remove operator op get Name still connected plan soft Edges contains Key op soft Edges contains Key op throw new Frontend Exception Attempt remove operator op get Name still softly connected plan mark Dirty ops remove op Connect two operators plan controlling position edge lists edges placed param Operator edge come param Pos Position array edge param Operator edge go param Pos Position array edge public void connect Operator int Pos Operator int Pos Connected null null return mark Dirty Edges put Pos Edges put Pos Check given two operators directly connected param Operator edge come param Operator edge go public boolean Connected Operator Operator List Operator preds get Predecessors return preds null preds contains Connect two operators plan param Operator edge come param Operator edge go public void connect Operator Operator Connected null null return mark Dirty Edges put Edges put Create soft edge two nodes param Operator dependent upon param Operator dependency public void create Soft Link Operator Operator soft Edges put soft Edges put Remove soft edge param Operator dependent upon param Operator dependency public void remove Soft Link Operator Operator soft Edges remove soft Edges remove Disconnect two operators plan param Operator edge coming param Operator edge going return pair positions indicating position arrays throws Frontend Exception two operators n connected public Pair Integer Integer disconnect Operator Operator throws Frontend Exception Pair Operator Integer f Edges remove Position f null throw new Frontend Exception Attempt disconnect operators get Name get Name connected Pair Operator Integer Edges remove Position null throw new Frontend Exception Plan inconssistent state get Name get Name connected Edges Edges mark Dirty return new Pair Integer Integer f second second private void mark Dirty roots clear leaves clear public Iterator Operator get Operators return ops iterator public boolean Equal Operator Plan throws Frontend Exception return Equal private static boolean check Predecessors Operator op Operator op throws Frontend Exception List Operator preds op get Plan get Predecessors op List Operator Preds op get Plan get Predecessors op preds null Preds null intentionally blank else preds null Preds null return false else preds size Preds size return false int preds size Operator p preds get Operator p Preds get p Equal p return false check Predecessors p p return false return true protected static boolean Equal Operator Plan p Operator Plan p throws Frontend Exception p p return true p null p null List Operator leaves p get Sinks List Operator Leaves p get Sinks leaves size Leaves size return false Must find leaf equal leaf guarantee leaves returned particular order boolean found true Operator op leaves boolean found One false Operator op Leaves op Equal op check Predecessors op op found One true break found found One found return false return found return false public void explain Print Stream ps String format boolean verbose throws Frontend Exception Override public String String Byte Array Output Stream os new Byte Array Output Stream Print Stream ps new Print Stream os try explain ps false catch Frontend Exception e return return os String Override public void replace Operator old Operator Operator new Operator throws Frontend Exception add new Operator List Operator preds get Predecessors old Operator preds null List Operator preds Copy new Array List Operator preds Copy add preds int preds Copy size Operator pred preds Copy get Pair Integer Integer pos disconnect pred old Operator connect pred pos first new Operator List Operator succs get Successors old Operator succs null List Operator succs Copy new Array List Operator succs Copy add succs int succs Copy size Operator succ succs Copy get Pair Integer Integer pos disconnect old Operator succ connect new Operator succ pos second remove old Operator assume node multiple inputs one output node multiple outputs one input Otherwise n know connect inputs outputs assumption true logical plan physical plan plan Override public void remove Reconnect Operator operator Remove throws Frontend Exception List Operator preds Copy null get Predecessors operator Remove null get Predecessors operator Remove size preds Copy new Array List Operator preds Copy add get Predecessors operator Remove List Operator succs Copy null get Successors operator Remove null get Successors operator Remove size succs Copy new Array List Operator succs Copy add get Successors operator Remove preds Copy null preds Copy size succs Copy null succs Copy size throw new Frontend Exception remove reconnect node multiple inputs outputs preds Copy null preds Copy size node multiple inputs one output output reconnect inputs output Operator succ null Pair Integer Integer pos null succs Copy null succ succs Copy get pos disconnect operator Remove succ Operator pred preds Copy Pair Integer Integer pos disconnect pred operator Remove succ null connect pred pos first succ pos second else succs Copy null succs Copy size node multiple outputs one output output reconnect input outputs Operator pred null Pair Integer Integer pos null preds Copy null pred preds Copy get pos disconnect pred operator Remove Operator succ succs Copy Pair Integer Integer pos disconnect operator Remove succ pred null connect pred pos first succ pos second else one input output Operator pred null Pair Integer Integer pos null preds Copy null pred preds Copy get pos disconnect pred operator Remove Operator succ null Pair Integer Integer pos null succs Copy null succ succs Copy get pos disconnect operator Remove succ pred null succ null connect pred pos first succ pos second remove operator Remove Override public void insert Operator pred Operator operator Insert Operator succ throws Frontend Exception add operator Insert Pair Integer Integer pos disconnect pred succ connect pred pos first operator Insert connect operator Insert succ pos second method check path given node another node param start node checking param end node checking return true path exists false otherwise public boolean path Exists Operator Operator List Operator successors get Successors successors null successors size return false Operator successor successors successor equals path Exists successor return true return false Move everything given operator new operator plan specified operator moved root new operator plan param root Operator move everything param new Plan new operator plan move things throws Plan Exception public void move Tree Operator root Base Operator Plan new Plan throws Frontend Exception Deque Operator queue new Array Deque Operator new Plan add root root set Plan new Plan queue add Last root queue Empty Operator node queue poll get Successors node null Operator succ get Successors node queue contains succ queue add Last succ new Plan add succ succ set Plan new Plan new Plan connect node succ trim root Trim everything given operator specified operator removed param op Operator trim everything throws Frontend Exception public void trim Operator op throws Frontend Exception get Successors op null List Operator succs new Array List Operator succs add get Successors op Operator succ succs disconnect op succ trim succ remove succ
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java util Array List import java util List import org apache data Tuple import org apache impl plan Operator Key import org apache impl util Identity Hash Set base class Binary expression operators Supports lhs rhs operators used fetch inputs apply appropriate operation appropriate type public abstract class Binary Expression Operator extends Expression Operator private static final long serial Version protected Expression Operator lhs protected Expression Operator rhs private transient List Expression Operator child public Binary Expression Operator Operator Key k k public Binary Expression Operator Operator Key k int rp super k rp public Expression Operator get Lhs return lhs Get child expressions expression public List Expression Operator get Child Expressions child null child new Array List Expression Operator child add lhs child add rhs return child Override public boolean supports Multiple Inputs return true public void set Lhs Expression Operator lhs lhs lhs public Expression Operator get Rhs return rhs public void set Rhs Expression Operator rhs rhs rhs protected void clone Helper Binary Expression Operator op n clone references things already plan lhs op lhs rhs op rhs super clone Helper op Override public Tuple illustrator Markup Object Object int eq Class Index return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema import org apache parser Source Location public class Bin Cond Expression extends Logical Expression add operator plan connect left right hand side operators condition operator param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Bin Cond Expression Operator Plan plan Logical Expression condition Logical Expression lhs Logical Expression rhs super Bin Cond plan plan add plan connect condition plan connect lhs plan connect rhs Returns operator handles condition return expression handles condition throws Frontend Exception public Logical Expression get Condition throws Frontend Exception return Logical Expression plan get Successors get Get left hand side expression return expression left hand side throws Frontend Exception public Logical Expression get Lhs throws Frontend Exception return Logical Expression plan get Successors get Get right hand side expression return expression right hand side throws Frontend Exception public Logical Expression get Rhs throws Frontend Exception return Logical Expression plan get Successors get link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Bin Cond Expression Bin Cond Expression ao Bin Cond Expression return ao get Condition Equal get Condition ao get Lhs Equal get Lhs ao get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema Type Checking Exp Visitor ensure lhs rhs schema Logical Field Schema arg Fs get Lhs get Field Schema field Schema arg Fs deep Copy field Schema reset Uid uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Bin Cond Expression lg Exp Plan get Condition deep Copy lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java io Byte Array Input Stream import java io Data Input import java io Data Input Stream import java io Data Output import java io Exception import java io Unsupported Encoding Exception import java math Big Decimal import java math Big Integer import java nio Byte Buffer import java util Hash Map import java util Iterator import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop io Data Input Buffer import org apache hadoop io Writable import org apache hadoop io Writable Comparable import org apache hadoop io Writable Comparator import org apache hadoop mapred Job Conf import org apache Exception import org apache backend executionengine Exec Exception import org apache classification Interface Audience import org apache classification Interface Stability import org apache data utils Sedes Helper import org apache impl util Object Serializer import org joda time Date Time import org joda time Date Time Zone class handle reading writing intermediate results data types serialization format used class efficient used Data Reader Writer format used functions class subject change used store intermediate results within query Interface Audience Private Interface Stability Stable public class Bin Inter Sedes implements Inter Sedes private static final int public static final byte public static final byte public static final byte public static final byte since boolean supported yet v external type lot people use int instead data old schema likely stay time optimizing case well public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte private static Tuple Factory Tuple Factory Tuple Factory get Instance private static Bag Factory Bag Factory Bag Factory get Instance public static final int public static final int public static final String public Tuple read Tuple Data Input byte type throws Exception switch type case case case case case case case case case case case case case return Sedes Helper read Generic Tuple type case case case return read Schema Tuple type default throw new Exec Exception Unknown Tuple type found stream type private Tuple read Schema Tuple Data Input byte type throws Exception int id switch type case id read Unsigned Byte break case id read Unsigned Short break case id read Int break default throw new Runtime Exception Invalid type given read Schema Tuple type Tuple st Schema Tuple Factory get Instance id new Tuple st read Fields return st public int get Tuple Size Data Input byte type throws Exception int sz switch type case return case return case return case return case return case return case return case return case return case return case sz read Unsigned Byte break case sz read Unsigned Short break case sz read Int break default int err Code String msg Unexpected datatype type reading tuple binary file throw new Exec Exception msg err Code Exception sz construct empty tuple presumably writer wrote empty tuple sz throw new Exception Invalid size sz tuple return sz private Data Bag read Bag Data Input byte type throws Exception Data Bag bag Bag Factory new Default Bag long size determine size bag switch type case size read Unsigned Byte break case size read Unsigned Short break case size read Long break default int err Code String msg Unexpected data reading bag binary file throw new Exec Exception msg err Code Exception long size try Object read Datum bag add Tuple catch Exec Exception ee throw ee return bag private Map String Object read Map Data Input byte type throws Exception int size switch type case size read Unsigned Byte break case size read Unsigned Short break case size read Int break default int err Code String msg Unexpected data reading map binary file throw new Exec Exception msg err Code Exception Map String Object new Hash Map String Object size int size String key String read Datum put key read Datum return private Internal Map read Internal Map Data Input throws Exception int size read Int Internal Map new Internal Map size int size Object key read Datum put key read Datum return private Writable Comparable read Writable Data Input throws Exception String class Name String read Datum create writeable class needs default constructor Class obj Class null try obj Class Class Name class Name catch Class Found Exception e throw new Exception Could find class class Name attempting de serialize e Writable Comparable writable null try writable Writable Comparable obj Class new Instance catch Exception e String msg Could create instance class class Name attempting de serialize default constructor throw new Exception msg e read fields object Data Input writable read Fields return writable non Javadoc see org apache data Inter Sedes read Datum java io Data Input Override public Object read Datum Data Input throws Exception Exec Exception Read data type byte b read Byte return read Datum b private static Object read Bytes Data Input int size throws Exception byte ba new byte size read Fully ba return new Data Byte Array ba Expects bin Inter Sedes data types Data Type types p see org apache data Inter Sedes read Datum java io Data Input byte Override public Object read Datum Data Input byte type throws Exception Exec Exception switch type case case case case case case case case case case case case case return Sedes Helper read Generic Tuple type case case case return read Bag type case case case return read Map type case return read Internal Map case return Integer value case return Integer value case return Integer value read Byte case return Integer value read Short case return Integer value read Int case return Long value case return Long value case return Long value read Byte case return Long value read Short case return Long value read Int case return Long value read Long case return new Date Time read Long Date Time Zone Offset Millis read Short case return Float value read Float case return Double value read Double case return read Big Integer case return read Big Decimal case return Boolean value true case return Boolean value false case return Byte value read Byte case case case return new Data Byte Array Sedes Helper read Bytes type case case return Sedes Helper read Chararray type case return read Writable case case case return read Schema Tuple type case return null default throw new Runtime Exception Unexpected data type type found stream private Object read Big Decimal Data Input throws Exception return new Big Decimal String read Datum private Object read Big Integer Data Input throws Exception return new Big Integer String read Datum private void write Big Integer Data Output Big Integer bi throws Exception write Datum bi String private void write Big Decimal Data Output Big Decimal bd throws Exception write Datum bd String non Javadoc see org apache data Inter Sedes write Datum java io Data Output java lang Object Override public void write Datum Data Output Object val throws Exception Read data type byte type Data Type find Type val write Datum val type Override Suppress Warnings unchecked public void write Datum Data Output Object val byte type throws Exception switch type case Data Type write Tuple Tuple val break case Data Type write Bag Data Bag val break case Data Type write Map Map String Object val break case Data Type write Byte Map Object Object Map Object Object val write Int size Iterator Map Entry Object Object entry Set iterator Next Map Entry Object Object entry next write Datum entry get Key write Datum entry get Value break case Data Type int Integer val write Byte else write Byte else Byte Byte write Byte write Byte else Short Short write Byte write Short else write Byte write Int break case Data Type long lng Long val lng write Byte else lng write Byte else Byte lng lng Byte write Byte write Byte int lng else Short lng lng Short write Byte write Short int lng else Integer lng lng Integer write Byte write Int int lng else write Byte write Long lng break case Data Type write Byte write Long Date Time val get Millis write Short Date Time val get Zone get Offset Date Time val break case Data Type write Byte write Float Float val break case Data Type write Byte write Big Integer Big Integer val break case Data Type write Byte write Big Decimal Big Decimal val break case Data Type write Byte write Double Double val break case Data Type Boolean val write Byte else write Byte break case Data Type write Byte write Byte Byte val break case Data Type Data Byte Array bytes Data Byte Array val Sedes Helper write Bytes bytes Data break case Data Type Sedes Helper write Chararray String val break case Data Type write Byte store class name know class create read write Datum val get Class get Name Writable writable Writable val writable write break case Data Type write Byte break default throw new Runtime Exception Unexpected data type val get Class get Name found stream Note standard type supported output Load Func private void write Map Data Output Map String Object throws Exception final int sz size sz write Byte write Byte sz else sz write Byte write Short sz else write Byte write Int sz Iterator Map Entry String Object entry Set iterator Next Map Entry String Object entry next write Datum entry get Key write Datum entry get Value private void write Bag Data Output Data Bag bag throws Exception n care whether bag sorted distinct using iterator write guarantee things come correctly end reason waste time sorting applying distinct final long sz bag size sz write Byte write Byte int sz else sz write Byte write Short int sz else write Byte write Long sz Iterator Tuple bag iterator Next write Tuple next private void write Tuple Data Output Tuple throws Exception instanceof Type Aware Tuple write else Sedes Helper write Generic Tuple non Javadoc see org apache data Inter Sedes add Cols Tuple java io Data Input org apache data Tuple Override public void add Cols Tuple Data Input Tuple throws Exception byte type read Byte int sz get Tuple Size type int sz append read Datum public static class Bin Inter Sedes Tuple Raw Comparator extends Writable Comparator implements Tuple Raw Comparator private final Log Log Log Factory get Log get Class private boolean Asc private boolean Secondary Asc private static final boolean new boolean private boolean Whole Tuple private boolean Secondary Sort private boolean Null Field private Tuple Factory Fact private Inter Sedes Sedes public Bin Inter Sedes Tuple Raw Comparator super Bin Sedes Tuple class Override public Configuration get Conf return null Override public void set Conf Configuration conf try Asc boolean Object Serializer deserialize conf get sort Order Secondary Asc boolean Object Serializer deserialize conf get secondary Sort Order Secondary Sort true catch Exception ioe Log error Unable deserialize sort order object ioe get Message throw new Runtime Exception ioe Asc null Asc new boolean Asc true Secondary Asc null Secondary Sort false one entry Asc means whole tuple ca n looking column Whole Tuple Asc length Fact Tuple Factory get Instance Sedes Inter Sedes Factory get Inter Sedes Instance Override public boolean Compared Tuple Null return Null Field Compare two Bin Sedes Tuples raw bytes assume Tuples Nullable Writable client classes need deal Null Index Override public int compare byte b int int l byte b int int l int rc Byte Buffer bb Byte Buffer wrap b l Byte Buffer bb Byte Buffer wrap b l try rc compare Bin Sedes Tuple bb bb catch Exception ioe Log error error tuple comparison ioe get Message throw new Runtime Exception ioe get Message ioe return rc Compare two Bin Sedes Tuples raw bytes deal sort ordering method throws Exception private int compare Bin Sedes Tuple Byte Buffer bb Byte Buffer bb throws Exception Null Field false store position case deserialization int bb position int bb position treat outermost tuple differently deal sort order int result try first compare sizes int tsz read Size bb int tsz read Size bb tsz tsz return else tsz tsz return else sizes compare field field Secondary Sort compound tuple key main key secondary key key sort order deal separately delegate first invocation compare Bin Inter Sedes Datum assert tsz main key secondary key result compare Bin Inter Sedes Datum bb bb Asc result result compare Bin Inter Sedes Datum bb bb Secondary Asc else one tuple key deal sort order int tsz result used distinguish original calls recursive ones hack ish result compare Bin Inter Sedes Datum bb bb flip order descending result Whole Tuple Asc result else Whole Tuple Asc result catch Unsupported Encoding Exception uee Tuple Fact new Tuple Tuple Fact new Tuple read Fields new Data Input Stream new Byte Array Input Stream bb array bb limit read Fields new Data Input Stream new Byte Array Input Stream bb array bb limit delegate compare result compare return result private int compare Bin Inter Sedes Datum Byte Buffer bb Byte Buffer bb boolean asc throws Exception int rc byte type type byte dt bb get byte dt bb get switch dt case Bin Inter Sedes type Data Type type get Generalized Data Type dt asc null scanning top level Tuple original call Null Field true type type rc break case Bin Inter Sedes case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type false true int bv dt Bin Inter Sedes int bv dt Bin Inter Sedes rc bv bv break case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type byte bv bb get byte bv bb get rc bv bv bv bv break case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type int iv read Int bb dt int iv read Int bb dt rc iv iv iv iv break case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type long lv read Long bb dt long lv read Long bb dt rc lv lv lv lv break case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type long lv bb get Long bb position bb position move cursor forward without read timezone bytes long lv bb get Long bb position bb position rc lv lv lv lv break case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type float fv bb get Float float fv bb get Float rc Float compare fv fv break case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type double dv bb get Double double dv bb get Double rc Double compare dv dv break case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type int sz read Size bb bb get int sz read Size bb bb get byte ca new byte sz byte ca new byte sz bb get ca bb get ca String str null str null try str new String ca Bin Inter Sedes str new String ca Bin Inter Sedes catch Unsupported Encoding Exception uee Log warn Unsupported string encoding uee uee print Stack Trace str null str null rc new Big Integer str compare new Big Integer str break case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type int sz read Size bb bb get int sz read Size bb bb get byte ca new byte sz byte ca new byte sz bb get ca bb get ca String str null str null try str new String ca Bin Inter Sedes str new String ca Bin Inter Sedes catch Unsupported Encoding Exception uee Log warn Unsupported string encoding uee uee print Stack Trace str null str null rc new Big Decimal str compare new Big Decimal str break case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type int basz read Size bb dt int basz read Size bb dt rc Writable Comparator compare Bytes bb array bb position basz bb array bb position basz bb position bb position basz bb position bb position basz break case Bin Inter Sedes case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type int casz read Size bb dt int casz read Size bb dt String str null str null try str new String bb array bb position casz Bin Inter Sedes str new String bb array bb position casz Bin Inter Sedes catch Unsupported Encoding Exception uee Log warn Unsupported string encoding uee uee print Stack Trace finally bb position bb position casz bb position bb position casz str null str null rc str compare str break case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type first compare sizes int tsz read Size bb dt int tsz read Size bb dt tsz tsz return else tsz tsz return else sizes compare field field secondary sort use sort order passed caller Inner tuples never sort order pass null int tsz rc rc compare Bin Inter Sedes Datum bb bb null rc asc null asc length asc rc break case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type rc compare Bin Inter Sedes Bag bb bb dt dt break case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type rc compare Bin Inter Sedes Map bb bb dt dt break case Bin Inter Sedes type Data Type type get Generalized Data Type dt type type rc compare Bin Inter Sedes Generic Writable Comparable bb bb break default Log info Unsupported Data Type binary comparison switching object deserialization Data Type gen Type Name Map get dt dt throw new Unsupported Encoding Exception compare generalized data types type type rc type type apply sort order keys tuples whole tuples asc null asc length asc rc return rc Suppress Warnings rawtypes Override public int compare Writable Comparable Writable Comparable Tuple Tuple Tuple Tuple Null Field false treat outermost tuple differently deal sort order int result first compare sizes int tsz size int tsz size tsz tsz return else tsz tsz return else try sizes compare field field Secondary Sort compound tuple key main key secondary key key sort order deal separately delegate first invocation compare Datum assert tsz main key secondary key result compare Datum get get Asc result result compare Datum get get Secondary Asc else one tuple key chance recursion delegate dealing sort order compare Datum result compare Datum Asc catch Exec Exception e throw new Runtime Exception Unable compare tuples e return result private int compare Datum Object Object boolean asc int rc null null instanceof Tuple instanceof Tuple objects Tuples may need apply sort order inside Tuple Tuple Tuple Tuple int sz size int sz size sz sz return else sz sz return else int sz try rc Data Type compare get get rc asc null asc length asc rc get null record tuple null field Null Field true rc break catch Exec Exception e throw new Runtime Exception Unable compare tuples e else objects Tuples delegate Data Type compare rc Data Type compare apply sort order keys tuples whole tuples asc null asc length asc rc return rc Suppress Warnings unchecked rawtypes private int compare Bin Inter Sedes Generic Writable Comparable Byte Buffer bb Byte Buffer bb throws Exec Exception Exception Data Input Buffer buffer new Data Input Buffer Data Input Buffer buffer new Data Input Buffer buffer reset bb array bb position bb remaining buffer reset bb array bb position bb remaining Comparable writable Comparable Sedes read Datum buffer Comparable writable Comparable Sedes read Datum buffer bb position buffer get Position bb position buffer get Position return writable compare writable Suppress Warnings unchecked private int compare Bin Inter Sedes Bag Byte Buffer bb Byte Buffer bb byte dt byte dt throws Exception int bb position int bb position int l bb remaining int l bb remaining first compare sizes int bsz read Size bb dt int bsz read Size bb dt bsz bsz return else bsz bsz return else Data Input Buffer buffer new Data Input Buffer Data Input Buffer buffer new Data Input Buffer buffer reset bb array l buffer reset bb array l Data Bag bag Data Bag Sedes read Datum buffer dt Data Bag bag Data Bag Sedes read Datum buffer dt bb position buffer get Position bb position buffer get Position return bag compare bag Suppress Warnings unchecked private int compare Bin Inter Sedes Map Byte Buffer bb Byte Buffer bb byte dt byte dt throws Exec Exception Exception int bb position int bb position int l bb remaining int l bb remaining first compare sizes int bsz read Size bb dt int bsz read Size bb dt bsz bsz return else bsz bsz return else Data Input Buffer buffer new Data Input Buffer Data Input Buffer buffer new Data Input Buffer buffer reset bb array l buffer reset bb array l Map String Object map Map String Object Sedes read Datum buffer dt Map String Object map Map String Object Sedes read Datum buffer dt bb position buffer get Position bb position buffer get Position return Data Type compare map map Data Type Data Type private static byte get Generalized Data Type byte type switch type case Bin Inter Sedes return Data Type case Bin Inter Sedes case Bin Inter Sedes return Data Type case Bin Inter Sedes return Data Type case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes return Data Type case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes return Data Type case Bin Inter Sedes return Data Type case Bin Inter Sedes return Data Type case Bin Inter Sedes return Data Type case Bin Inter Sedes return Data Type case Bin Inter Sedes return Data Type case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes return Data Type case Bin Inter Sedes case Bin Inter Sedes return Data Type case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes return Data Type case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes return Data Type case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes return Data Type case Bin Inter Sedes return Data Type case Bin Inter Sedes return Data Type default throw new Runtime Exception Unexpected data type type found stream private static long read Long Byte Buffer bb byte type int bytes Read switch type case Bin Inter Sedes return case Bin Inter Sedes return case Bin Inter Sedes return bb get case Bin Inter Sedes return bb get Short case Bin Inter Sedes return bb get Int case Bin Inter Sedes return bb get Long default throw new Runtime Exception Unexpected data type type found stream private static int read Int Byte Buffer bb byte type switch type case Bin Inter Sedes return case Bin Inter Sedes return case Bin Inter Sedes return bb get case Bin Inter Sedes return bb get Short case Bin Inter Sedes return bb get Int default throw new Runtime Exception Unexpected data type type found stream param bb Byte Buffer serialized object including type information param type serialized type information return size type private static int read Size Byte Buffer bb return read Size bb bb get param bb Byte Buffer serialized object minus type information param type serialized type information return size type private static int read Size Byte Buffer bb byte type switch type case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes return get Unsigned Byte bb case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes return get Unsigned Short bb case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes case Bin Inter Sedes return bb get Int case Bin Inter Sedes return case Bin Inter Sedes return case Bin Inter Sedes return case Bin Inter Sedes return case Bin Inter Sedes return case Bin Inter Sedes return case Bin Inter Sedes return case Bin Inter Sedes return case Bin Inter Sedes return case Bin Inter Sedes return default throw new Runtime Exception Unexpected data type type found stream format used Data Input Data Output unsigned short private static int get Unsigned Short Byte Buffer bb return bb get xff bb get xff format used Data Input Data Output unsigned byte private static int get Unsigned Byte Byte Buffer bb return bb get xff Override public Class extends Tuple Raw Comparator get Tuple Raw Comparator Class return Bin Inter Sedes Tuple Raw Comparator class public Tuple read Tuple Data Input throws Exception return read Tuple read Byte public static boolean Tuple Byte byte b return b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes b Bin Inter Sedes
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java io Data Input import java io Data Output import java io Exception import java util List import org apache classification Interface Audience tuple faster de serialization mechanism used storing intermediate data Map Reduce jobs internal use serialization format change use storing persistant data ie load store functions Interface Audience Private public class Bin Sedes Tuple extends Default Tuple private static final long serial Version private static final Inter Sedes sedes Inter Sedes Factory get Inter Sedes Instance Override public void write Data Output throws Exception sedes write Datum Data Type Override public void read Fields Data Input throws Exception Clear fields case reused Fields clear sedes add Cols Tuple Default constructor Bin Sedes Tuple super Construct tuple known number fields Package level callers directly invoke param size Number fields allocate tuple Bin Sedes Tuple int size super size Construct tuple existing list objects Package level callers directly invoke param c List objects turn tuple Bin Sedes Tuple List Object c super c Construct tuple existing list objects Package level callers directly invoke param c List objects turn tuple list kept part tuple param junk used differentiate constructor copies list Bin Sedes Tuple List Object c int junk super c junk public static Class extends Tuple Raw Comparator get Comparator Class return Inter Sedes Factory get Inter Sedes Instance get Tuple Raw Comparator Class
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java util List import org apache backend executionengine Exec Exception import org apache classification Interface Audience Default implementation Tuple Factory Interface Audience Private public class Bin Sedes Tuple Factory extends Tuple Factory Override public Tuple new Tuple return new Bin Sedes Tuple Override public Tuple new Tuple int size return new Bin Sedes Tuple size Override Suppress Warnings unchecked public Tuple new Tuple List c return new Bin Sedes Tuple c Override Suppress Warnings unchecked public Tuple new Tuple Copy List list return new Bin Sedes Tuple list Override public Tuple new Tuple Object datum Tuple new Bin Sedes Tuple try set datum catch Exec Exception e world come end allocated tuple one slot ca n write slot throw new Runtime Exception Unable write field newly allocated tuple size e return Override public Class extends Tuple tuple Class return Bin Sedes Tuple class Override public Class extends Tuple Raw Comparator tuple Raw Comparator Class return Bin Sedes Tuple get Comparator Class Override public boolean Fixed Size return false
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Byte Array Output Stream import java io Data Output Stream import java io Exception import java math Big Decimal import java math Big Integer import java util Iterator import java util Map import java util Properties import org joda time Date Time import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs Path import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Job import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce Record Writer import org apache hadoop mapreduce lib input File Input Format import org apache hadoop mapreduce lib output File Output Format import org apache Expression import org apache File Input Load Func import org apache Load Caster import org apache Load Func import org apache Load Metadata import org apache Exception import org apache Resource Schema import org apache Resource Schema Resource Field Schema import org apache Resource Statistics import org apache Store Func import org apache Store Func Interface import org apache backend executionengine Exec Exception import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop datastorage Data Storage import org apache backend hadoop executionengine map Reduce Layer Split import org apache data Data Bag import org apache data Data Reader Writer import org apache data Tuple import org apache impl io Bin Storage Input Format import org apache impl io Bin Storage Output Format import org apache impl io Bin Storage Record Reader import org apache impl io Bin Storage Record Writer import org apache impl io File Localizer import org apache impl logical Layer Frontend Exception import org apache impl util Utils Load store data binary format class used move data Map Reduce jobs Use function storing user data supported public class Bin Storage extends File Input Load Func implements Store Func Interface Load Metadata static class Un Implemented Load Caster implements Load Caster private static final String un Implemented Error Message cast bytes loaded Bin Storage Please provide custom converter Override public Data Bag bytes Bag byte b Resource Field Schema field Schema throws Exception throw new Exec Exception un Implemented Error Message Override public String bytes Char Array byte b throws Exception throw new Exec Exception un Implemented Error Message Override public Double bytes Double byte b throws Exception throw new Exec Exception un Implemented Error Message Override public Float bytes Float byte b throws Exception throw new Exec Exception un Implemented Error Message Override public Integer bytes Integer byte b throws Exception throw new Exec Exception un Implemented Error Message Override public Long bytes Long byte b throws Exception throw new Exec Exception un Implemented Error Message Override public Boolean bytes Boolean byte b throws Exception throw new Exec Exception un Implemented Error Message Override public Date Time bytes Date Time byte b throws Exception throw new Exec Exception un Implemented Error Message Override public Map String Object bytes Map byte b Resource Field Schema field Schema throws Exception throw new Exec Exception un Implemented Error Message Override public Tuple bytes Tuple byte b Resource Field Schema field Schema throws Exception throw new Exec Exception un Implemented Error Message Override public Big Integer bytes Big Integer byte b throws Exception throw new Exec Exception un Implemented Error Message Override public Big Decimal bytes Big Decimal byte b throws Exception throw new Exec Exception un Implemented Error Message Iterator Tuple null private static final Log Log Log Factory get Log Bin Storage class protected long end Long private String caster String null private Load Caster caster null private Bin Storage Record Reader rec Reader null private Bin Storage Record Writer rec Writer null public Bin Storage user knows cast bytes Bin Storage provide class name caster later want convert bytes types Bin Storage knows provides way user store intermediate data without explicitly list fields figure parts public Bin Storage String caster String caster String caster String Override public Tuple get Next throws Exception rec Reader next Key Value return rec Reader get Current Value else return null Override public void put Next Tuple throws Exception try rec Writer write null catch Interrupted Exception e throw new Exception e public byte Bytes Data Bag bag throws Exception Byte Array Output Stream baos new Byte Array Output Stream Data Output Stream dos new Data Output Stream baos try Data Reader Writer write Datum dos bag catch Exception ee int err Code String msg Error converting bag bytes throw new Exec Exception msg err Code Exception ee return baos Byte Array public byte Bytes String throws Exception Byte Array Output Stream baos new Byte Array Output Stream Data Output Stream dos new Data Output Stream baos try Data Reader Writer write Datum dos catch Exception ee int err Code String msg Error converting chararray bytes throw new Exec Exception msg err Code Exception ee return baos Byte Array public byte Bytes Double throws Exception Byte Array Output Stream baos new Byte Array Output Stream Data Output Stream dos new Data Output Stream baos try Data Reader Writer write Datum dos catch Exception ee int err Code String msg Error converting double bytes throw new Exec Exception msg err Code Exception ee return baos Byte Array public byte Bytes Float f throws Exception Byte Array Output Stream baos new Byte Array Output Stream Data Output Stream dos new Data Output Stream baos try Data Reader Writer write Datum dos f catch Exception ee int err Code String msg Error converting float bytes throw new Exec Exception msg err Code Exception ee return baos Byte Array public byte Bytes Integer throws Exception Byte Array Output Stream baos new Byte Array Output Stream Data Output Stream dos new Data Output Stream baos try Data Reader Writer write Datum dos catch Exception ee int err Code String msg Error converting int bytes throw new Exec Exception msg err Code Exception ee return baos Byte Array public byte Bytes Long l throws Exception Byte Array Output Stream baos new Byte Array Output Stream Data Output Stream dos new Data Output Stream baos try Data Reader Writer write Datum dos l catch Exception ee int err Code String msg Error converting long bytes throw new Exec Exception msg err Code Exception ee return baos Byte Array public byte Bytes Boolean b throws Exception Byte Array Output Stream baos new Byte Array Output Stream Data Output Stream dos new Data Output Stream baos try Data Reader Writer write Datum dos b catch Exception ee int err Code String msg Error converting boolean bytes throw new Exec Exception msg err Code Exception ee return baos Byte Array public byte Bytes Date Time dt throws Exception Byte Array Output Stream baos new Byte Array Output Stream Data Output Stream dos new Data Output Stream baos try Data Reader Writer write Datum dos dt catch Exception ee int err Code String msg Error converting datetime bytes throw new Exec Exception msg err Code Exception ee return baos Byte Array public byte Bytes Map String Object throws Exception Byte Array Output Stream baos new Byte Array Output Stream Data Output Stream dos new Data Output Stream baos try Data Reader Writer write Datum dos catch Exception ee int err Code String msg Error converting map bytes throw new Exec Exception msg err Code Exception ee return baos Byte Array public byte Bytes Tuple throws Exception Byte Array Output Stream baos new Byte Array Output Stream Data Output Stream dos new Data Output Stream baos try Data Reader Writer write Datum dos catch Exception ee int err Code String msg Error converting tuple bytes throw new Exec Exception msg err Code Exception ee return baos Byte Array Override public Input Format get Input Format return new Bin Storage Input Format Override public int hash Code return Suppress Warnings unchecked Override public Load Caster get Load Caster throws Exception caster null Class Load Caster caster Class null caster String null Class Loader cl Thread current Thread get Context Class Loader try Try caster String fully qualified name caster Class Class Load Caster cl load Class caster String catch Class Found Exception e caster Class null try Try caster String builtin caster Class Class Load Caster cl load Class org apache builtin caster String catch Class Found Exception e throw new Frontend Exception find Load Caster class caster String e try caster caster Class new Instance catch Exception e throw new Frontend Exception instantiate class caster String e else caster new Un Implemented Load Caster return caster Override public void prepare Read Record Reader reader Split split rec Reader Bin Storage Record Reader reader Override public void set Location String location Job job throws Exception File Input Format set Input Paths job location Override public Output Format get Output Format return new Bin Storage Output Format Override public void prepare Write Record Writer writer rec Writer Bin Storage Record Writer writer Override public void set Store Location String location Job job throws Exception File Output Format set Output Path job new Path location Override public void check Schema Resource Schema throws Exception Override public String rel Abs Path Store Location String location Path cur Dir throws Exception return Load Func get Absolute Path location cur Dir Override public String get Partition Keys String location Job job throws Exception return null Suppress Warnings deprecation Override public Resource Schema get Schema String location Job job throws Exception Configuration conf job get Configuration Properties props Configuration Util Properties conf compile time batch mode file may exist intermediate file return null way would get valid record String locations get Path Strings location String loc locations since local mode implemented hadoop local mode treat either local hadoop mode hadoop mode hence use Data Storage File Localizer open File Data Storage storage try storage new Data Storage new org apache hadoop fs Path loc Uri props catch Runtime Exception e throw new Exception e File Localizer file Exists loc storage return null return Utils get Schema location false job Override public Resource Statistics get Statistics String location Job job throws Exception return null Override public void set Partition Filter Expression plan throws Exception throw new Unsupported Operation Exception Override public void set Store Func Context Signature String signature Override public void cleanup Failure String location Job job throws Exception Store Func cleanup Failure Impl location job Override public void cleanup Success String location Job job throws Exception nothing
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache validator import java util Set import org apache Configuration import org apache Server import org apache impl Context import org apache impl logical Layer Frontend Exception import com google common base Splitter import com google common collect Sets Filter handles black whitelisting commands public final class Black Whitelist Filter implements Command Filter private static final int private static final Splitter Splitter trim Results omit Empty Strings private final Context context private final Set String whitelist private final Set String blacklist public Black Whitelist Filter Server Server Server get Context public Black Whitelist Filter Context context context context whitelist Sets new Hash Set blacklist Sets new Hash Set init private void init String whitelist Config context get Properties get Property Configuration whitelist Config null Iterable String iter split whitelist Config String elem iter whitelist add elem Upper Case String blacklist Config context get Properties get Property Configuration blacklist Config null Iterable String iter split blacklist Config String elem iter String u Elem elem Upper Case whitelist contains u Elem throw new Illegal State Exception Conflict whitelist blacklist elem appears blacklist add u Elem Override public void validate Command command throws Frontend Exception blacklist contains command name throw new Frontend Exception command name command permitted check size whitelist empty whitelist disallow using commands altogether whitelist size whitelist contains command name throw new Frontend Exception command name command permitted
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache validator import java util Set import org apache Configuration import org apache impl Context import org apache impl logical Layer Frontend Exception import org apache newplan Depth First Walker import org apache newplan Operator Plan import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Cube import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Native import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Split Output import org apache newplan logical relational Store import org apache newplan logical relational Stream import org apache newplan logical relational Union import org apache newplan logical relational Logical Relational Nodes Visitor import org apache newplan logical rules Logical Relational Node Validator import com google common base Splitter import com google common collect Sets validator walks list operators defined link Configuration link Configuration checks whether operation permitted case properties defined default let everything pass usual public final class Black Whitelist Validator implements Logical Relational Node Validator private final Context Context private final Operator Plan operator Plan public Black Whitelist Validator Context Context Operator Plan operator Plan Context Context operator Plan operator Plan public void validate throws Frontend Exception Black Whitelist Visitor visitor new Black Whitelist Visitor operator Plan visitor visit private class Black Whitelist Visitor extends Logical Relational Nodes Visitor private static final int private final Splitter splitter private final Set String blacklist private final Set String whitelist protected Black Whitelist Visitor Operator Plan plan throws Frontend Exception super plan new Depth First Walker plan blacklist Sets new Hash Set whitelist Sets new Hash Set splitter Splitter trim Results omit Empty Strings init private void init String blacklist Config Context get Properties get Property Configuration Set blacklist defined user blacklist Config null Iterable String iter splitter split blacklist Config String elem iter blacklist add elem Lower Case String whitelist Config Context get Properties get Property Configuration Set whitelist defined user whitelist Config null Iterable String iter splitter split whitelist Config String elem iter String l Elem elem Lower Case blacklist contains l Elem throw new Illegal State Exception Conflict whitelist blacklist elem appears whitelist add l Elem private void check String operator throws Frontend Exception throw exception operator defined whitelist whitelist null whitelist size whitelist contains operator throw new Frontend Exception operator disabled throw exception operator defined blacklist blacklist null blacklist size blacklist contains operator throw new Frontend Exception operator disabled Override public void visit Load load throws Frontend Exception check load Override public void visit Filter filter throws Frontend Exception check filter Override public void visit Store store throws Frontend Exception check store Override public void visit Join join throws Frontend Exception check join Override public void visit foreach throws Frontend Exception check foreach Override public void visit Generate gen throws Frontend Exception public void visit Inner Load load throws Frontend Exception Override public void visit Cube cube throws Frontend Exception check cube public void visit Cogroup lo Cogroup throws Frontend Exception check group check cogroup Override public void visit Split lo Split throws Frontend Exception check split Override public void visit Split Output lo Split Output throws Frontend Exception Override public void visit Union lo Union throws Frontend Exception check union Override public void visit Sort lo Sort throws Frontend Exception check order Override public void visit Rank lo Rank throws Frontend Exception check rank Override public void visit Distinct lo Distinct throws Frontend Exception check distinct Override public void visit Limit lo Limit throws Frontend Exception check limit Override public void visit Cross lo Cross throws Frontend Exception check cross Override public void visit Stream lo Stream throws Frontend Exception check stream Override public void visit Native native throws Frontend Exception check mapreduce
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Byte Array Input Stream import java io Data Input Stream import java io File import java io File Input Stream import java io Filename Filter import java io Exception import java util Array List import java util List import org apache hadoop fs Path import org apache hadoop util bloom Bloom Filter import org apache hadoop util bloom Key import org apache Filter Func import org apache data Data Byte Array import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory Use Bloom filter build previously Build Bloom would first build bloom filter group job example group job example define bb Build Bloom jenkins load foo x group foreach generate bb x store mybloom bloom filter multiple keys passing one field entire bag Build Bloom resulting file used Bloom filter define bloom Bloom mybloom load foo x load bar z filter bloom z join z x uses link org apache hadoop util bloom Bloom Filter also pass Bloom filter Build Bloom directly Bloom scalar instead storing file loading simpler Bloom filter reused needs discarded run script define bb Build Bloom jenkins load foo x group foreach generate bb x bloomfilter load bar z filter Bloom bloomfilter z join z x public class Bloom extends Filter Func private static Tuple Factory Tuple Factory Tuple Factory get Instance private String bloom File private Bloom Filter filter null public Bloom filename containing serialized Bloom filter filename null arg constructor used bloomfilter bytearray output Build Bloom passed first argument param filename file containing serialized Bloom filter public Bloom String filename bloom File filename Override public Boolean exec Tuple input throws Exception filter null init input byte b bloom File null first one bloom filter Skip input size b Data Type Bytes input get else List Object input List input get Tuple tuple Tuple Factory new Tuple Copy input List sub List input List size b Data Type Bytes tuple Data Type else input size b Data Type Bytes input get else b Data Type Bytes input Data Type Key k new Key b return filter membership Test k Override public List String get Cache Files bloom File null List String list new Array List String passed name file Append name file task node try list add bloom File get Filename Path bloom File catch Exception e throw new Runtime Exception e return list return null private void init Tuple input throws Exception bloom File null input get instanceof Data Byte Array filter Build Bloom Base bloom Data Byte Array input get else throw new Illegal Argument Exception first argument Bloom bloom filter bloom file specified constructor else filter new Bloom Filter String dir get Filename Path bloom File String part Files new File dir list new Filename Filter Override public boolean accept File current String name return name starts part String dc File dir part Files Data Input Stream dis new Data Input Stream new File Input Stream dc File try filter read Fields dis finally dis close testing use directly public void set Filter Data Byte Array dba throws Exception Data Input Stream dis new Data Input Stream new Byte Array Input Stream dba get filter new Bloom Filter filter read Fields dis private String get Filename Path String p throws Exception Path path new Path p return path Uri get Path replace
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Iterator import org apache hadoop util bloom Bloom Filter import org apache hadoop util bloom Key import org apache Algebraic import org apache Eval Func import org apache data Data Bag import org apache data Data Byte Array import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl logical Layer schema Schema Build bloom filter use later Bloom intended run group job example define bb Build Bloom jenkins load foo x group foreach generate bb x store mybloom bloom filter multiple keys passing one field entire bag Build Bloom resulting file used Bloom filter define bloom Bloom mybloom load foo x load bar z filter bloom z join z x uses link org apache hadoop util bloom Bloom Filter public class Build Bloom extends Build Bloom Base Data Byte Array implements Algebraic Build bloom filter fixed size number hash functions param hash Type type hashing function see link org apache hadoop util hash Hash param mode ignored though convention fixed fixedsize param vector Size vector size filter param nb Hash number hash functions consider public Build Bloom String hash Type String mode String vector Size String nb Hash super hash Type mode vector Size nb Hash Construct Bloom filter based expected number elements desired accuracy param hash Type type hashing function see link org apache hadoop util hash Hash param num Elements number distinct elements expected placed filter param desired False Positive acceptable rate false positives floating point value would ie totally useless filter public Build Bloom String hash Type String num Elements String desired False Positive super hash Type num Elements desired False Positive Override public Data Byte Array exec Tuple input throws Exception throw new Exception must used algebraic public String get Initial return Initial class get Name public String get Intermed return Intermediate class get Name public String get Final return Final class get Name static public class Initial extends Build Bloom Base Tuple public Initial public Initial String hash Type String mode String vector Size String nb Hash super hash Type mode vector Size nb Hash public Initial String hash Type String num Elements String desired False Positive super hash Type num Elements desired False Positive Override public Tuple exec Tuple input throws Exception input null input size return null Strip initial level bag Data Bag values Data Bag input get Iterator Tuple values iterator Tuple next input tuple one field extract field serialize key multiple fields serialize whole tuple byte b size b Data Type Bytes get else b Data Type Bytes Data Type Key k new Key b filter new Bloom Filter v Size num Hash h Type filter add k return Tuple Factory get Instance new Tuple bloom static public class Intermediate extends Build Bloom Base Tuple public Intermediate public Intermediate String hash Type String mode String vector Size String nb Hash super hash Type mode vector Size nb Hash public Intermediate String hash Type String num Elements String desired False Positive super hash Type num Elements desired False Positive Override public Tuple exec Tuple input throws Exception return Tuple Factory get Instance new Tuple bloom input static public class Final extends Build Bloom Base Data Byte Array public Final public Final String hash Type String mode String vector Size String nb Hash super hash Type mode vector Size nb Hash public Final String hash Type String num Elements String desired False Positive super hash Type num Elements desired False Positive Override public Data Byte Array exec Tuple input throws Exception return bloom input Override public Schema output Schema Schema input return new Schema new Schema Field Schema null Data Type
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Byte Array Input Stream import java io Byte Array Output Stream import java io Data Input Stream import java io Data Output Stream import java io Exception import java util Iterator import org apache hadoop util bloom Bloom Filter import org apache hadoop util hash Hash import org apache Eval Func import org apache backend executionengine Exec Exception import org apache data Data Bag import org apache data Data Byte Array import org apache data Tuple Base class Build Bloom Algebraic implementations public abstract class Build Bloom Base extends Eval Func protected int v Size protected int num Hash protected int h Type protected Bloom Filter filter protected Build Bloom Base param hash Type type hashing function see link org apache hadoop util hash Hash param mode ignored though convention fixed fixedsize param vector Size vector size filter param nb Hash number hash functions consider public Build Bloom Base String hash Type String mode String vector Size String nb Hash v Size Integer value vector Size num Hash Integer value nb Hash h Type convert Hash Type hash Type param hash Type type hashing function see link org apache hadoop util hash Hash param num Elements number distinct elements expected placed filter param desired False Positive acceptable rate false positives floating point value would ie totally useless filter public Build Bloom Base String hash Type String num Elements String desired False Positive set Size num Elements desired False Positive h Type convert Hash Type hash Type protected Data Byte Array bloom Tuple input throws Exception filter new Bloom Filter v Size num Hash h Type try Data Bag values Data Bag input get Iterator Tuple values iterator Next Tuple next filter bloom Data Byte Array get catch Exec Exception ee throw new Exception ee return bloom protected Data Byte Array bloom throws Exception Byte Array Output Stream baos new Byte Array Output Stream v Size Data Output Stream dos new Data Output Stream baos filter write dos return new Data Byte Array baos Byte Array public static Bloom Filter bloom Data Byte Array b throws Exception Data Input Stream dis new Data Input Stream new Byte Array Input Stream b get Bloom Filter f new Bloom Filter f read Fields dis return f private int convert Hash Type String hash Type hash Type Lower Case contains jenkins return Hash else hash Type Lower Case contains murmur return Hash else throw new Runtime Exception Unknown hash type hash Type Valid values jenkins murmur private void set Size String num Elements String desired False Positive int num Integer value num Elements float fp Float value desired False Positive num fp fp throw new Runtime Exception Number elements must greater zero desired False Positive must v Size int num Math log fp Math pow Math log log info Build Bloom setting vector size v Size num Hash int v Size num log info Build Bloom setting number hashes num Hash
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache Func Spec import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location public class Cast Expression extends Unary Expression private Func Spec cast Func private Logical Schema Logical Field Schema cast Schema public Cast Expression Operator Plan plan Logical Expression exp Logical Schema Logical Field Schema fs super Cast plan exp cast Schema fs deep Copy cast Schema reset Uid Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Set code Func Spec code performs casting functionality param spec code Func Spec code casting public void set Func Spec Func Spec spec cast Func spec Get code Func Spec code performs casting functionality return code Func Spec code casting public Func Spec get Func Spec return cast Func Override public boolean Equal Operator throws Frontend Exception null instanceof Cast Expression Cast Expression Cast Expression return get Expression Equal get Expression else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null cast Schema schema cast Schema type uid Field Schema field Schema merge Uid uid Field Schema Bring back top level uid changed Logical Expression exp Logical Expression plan get Successors get exp get Field Schema null field Schema uid exp get Field Schema uid field Schema alias exp get Field Schema alias return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Cast Expression lg Exp Plan get Expression deep Copy lg Exp Plan cast Schema deep Copy try Func Spec orig Func Spec get Func Spec orig Func Spec null Cast Expression copy set Func Spec orig Func Spec clone catch Clone Supported Exception e e print Stack Trace copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl util import java io Exception import org apache commons logging Log import org apache commons logging Log Factory import org apache Load Caster import org apache Warning import org apache Resource Schema Resource Field Schema import org apache data Data Byte Array import org apache data Data Type public class Cast Utils private static Integer Max Int Integer value Integer private static Long Max Long Long value Long protected static final Log Log Log Factory get Log Cast Utils class param caster Load Caster used convert bytes field param bytes param field Schema schema Bag Tuple pass null simple type param data Type type Data Type return converted object throws Exception public static Object convert Type Load Caster caster byte bytes Resource Field Schema field Schema byte data Type throws Exception switch data Type case Data Type return caster bytes Bag bytes field Schema case Data Type return new Data Byte Array bytes case Data Type return caster bytes Char Array bytes case Data Type return caster bytes Double bytes case Data Type return caster bytes Float bytes case Data Type return caster bytes Integer bytes case Data Type return caster bytes Big Integer bytes case Data Type return caster bytes Big Decimal bytes case Data Type return caster bytes Long bytes case Data Type return caster bytes Boolean bytes case Data Type return caster bytes Date Time bytes case Data Type return caster bytes Map bytes field Schema case Data Type return caster bytes Tuple bytes field Schema default throw new Exception Unknown type data Type public static Double string Double String str str null return null else try return Double parse Double str catch Number Format Exception e Log Utils warn Cast Utils class Unable interpret value str field converted double caught Number Format Exception e get Message field discarded Warning Log return null public static Float string Float String str str null return null else try return Float parse Float str catch Number Format Exception e Log Utils warn Cast Utils class Unable interpret value str field converted float caught Number Format Exception e get Message field discarded Warning Log return null public static Integer string Integer String str str null return null else try return Integer parse Int str catch Number Format Exception e possible field interpreted double Unfortunately Java n handle Integer value need try convert double works go int try Double Double value str Need check overflow error double Value Max Int double Value Log Utils warn Cast Utils class Value large integer Warning Log return null return Integer value int Value catch Number Format Exception nfe Log Utils warn Cast Utils class Unable interpret value str field converted int caught Number Format Exception e get Message field discarded Warning Log return null public static Long string Long String str str null return null else try return Long parse Long str catch Number Format Exception e possible field interpreted double Unfortunately Java n handle Long value need try convert double works go long try Double Double value str Need check overflow error double Value Max Long double Value Log Utils warn Cast Utils class Value large long Warning Log return null return Long value long Value catch Number Format Exception nfe Log Utils warn Cast Utils class Unable interpret value str field converted long caught Number Format Exception nfe get Message field discarded Warning Log return null public static Boolean string Boolean String str str null return null else str equals Ignore Case true return Boolean else str equals Ignore Case false return Boolean else return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop accumulo import com google common base Preconditions Extracts necessary information user provide column specification colf colq Removes trailing asterisk colfam colqual appropriately sets link Column Type public class Column public static enum Type private final Type column Type private String column Family private String column Qualifier public Column String col Preconditions check Null col int index col index Abstract Accumulo Storage index column Family col column Qualifier null column Family ends Abstract Accumulo Storage column Family column Family substring column Family length column Type Type else column Type Type else col length throw new Illegal Argument Exception parse col column Family col substring index column Qualifier col substring index Handle colf colq column Family ends Abstract Accumulo Storage column Type Type column Family column Family substring column Family length else column Qualifier Empty column Type Type else column Qualifier ends Abstract Accumulo Storage column Type Type column Qualifier column Qualifier substring column Qualifier length else column Type Type public Type get Type return column Type public String get Column Family return column Family public String get Column Qualifier return column Qualifier public boolean match return Type equals column Type equals column Family Override public boolean equals Object instanceof Column Column Column null column Family null column Family return false else column Family equals column Family return false null column Qualifier null column Qualifier return false else column Qualifier equals column Qualifier return false return column Type column Type return false Override public String String return column Type column Family column Qualifier
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical visitor import java util Array List import java util List import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache impl plan Plan Validation Exception import org apache newplan Dependency Order Walker import org apache newplan Operator Plan import org apache newplan logical expression Dereference Expression import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Logical Expression Visitor import org apache newplan logical expression Project Expression import org apache newplan logical optimizer Expression Visitor import org apache newplan logical relational Logical Schema Logical plan visitor convert column alias references column indexes using underlying anonymous expression plan visitor public class Column Alias Conversion Visitor extends Expression Visitor public Column Alias Conversion Visitor Operator Plan plan throws Frontend Exception super plan new Dependency Order Walker plan Override protected Logical Expression Visitor get Visitor Logical Expression Plan expr Plan throws Frontend Exception return new Logical Expression Visitor expr Plan new Dependency Order Walker expr Plan Override public void visit Project Expression expr throws Frontend Exception expr set Column Number Alias public void visit Dereference Expression expr throws Frontend Exception List Object raw Cols expr get Raw Columns raw Cols Empty return List Integer cols new Array List Integer raw Cols size Logical Expression Plan plan Logical Expression Plan expr get Plan Logical Expression pred Logical Expression plan get Successors expr get Logical Schema schema null pred get Field Schema type Data Type pred get Field Schema schema null schema pred get Field Schema schema get Field schema schema null schema size schema get Field type Data Type schema schema get Field schema else schema pred get Field Schema schema int col Object rc raw Cols rc instanceof Integer col Integer rc schema null schema size col schema size throw new Plan Validation Exception expr bound access Trying access non existent column col Schema schema String false schema size column cols add Integer rc else col schema null schema get Field Position String rc col throw new Plan Validation Exception expr Invalid field reference Referenced field rc exist schema schema null schema String false cols add col expr set Bag Columns cols
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java util Array List import java util List import org apache backend hadoop executionengine physical Layer expression Operators Project Representing one sort key Sort key may compound sort multiple columns case sort key contains multiple Column Chain Info public class Column Chain Info implements Cloneable private List Column Info column Infos new Array List Column Info public boolean equals Object instanceof Column Chain Info return false Column Chain Info c Column Chain Info column Infos size c column Infos size return false int column Infos size column Infos get equals c column Infos get return false return true public void insert List Integer columns byte type Column Info new Column Info new Column Info columns type column Infos add new Column Info Insert new Column Info project star project range end param start Col param type public void insert int start Col byte type Column Info new Column Info new Column Info start Col type column Infos add new Column Info reduce input represent first input put instead match sort information collected Local Rearrange public void insert Reduce Project project size int col project Project End project get Columns size expecting first project projecting one bags getting unexpected setting column secondary sort optimization get used col return else col project get Columns get List Integer new Columns new Array List Integer new Columns add col Column Info new Column Info new Column Info new Columns project get Result Type column Infos add new Column Info else project Project End insert project get Start Col project get Result Type else insert project get Columns project get Result Type public void insert Column Chain Info Column Chain Info column Chain Info column Infos add column Chain Info column Infos public List Column Info get Column Infos return column Infos public String String return column Infos String Override public Object clone throws Clone Supported Exception super clone Column Chain Info result new Column Chain Info Column Info column Info column Infos Column Info new Column Info Column Info column Info clone result column Infos add new Column Info return result public int size return column Infos size public Column Info get Column Info int return column Infos get Override public int hash Code int result Column Info column Info column Infos result column Info hash Code return result
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java util Array List import java util List import org apache data Data Type Represent one column inside order key direct mapping Project public class Column Info implements Cloneable List Integer columns byte result Type int start Col boolean Range Project false public Column Info List Integer columns byte type columns columns result Type type Constructor range projection project star param start Col param type public Column Info int start Col byte type start Col start Col result Type type Range Project true public byte get Result Type return result Type public int get Start Col return start Col public boolean Range Project return Range Project public List Integer get Columns return columns Override public String String String result Star result result columns String result Data Type find Type Name result Type return result private boolean Star return Range Project start Col Override public boolean equals Object null instanceof Column Info return false Column Info c Column Info Range Project c Range Project start Col c start Col columns null c columns null columns null columns equals c columns return true return false Override public int hash Code return String hash Code Override public Object clone throws Clone Supported Exception Column Info new Col Info Column Info super clone copy mutable field List Integer cols new Array List Integer cols add columns new Col Info columns cols return new Col Info
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical rules import java util Collection import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Operator Sub Plan import org apache newplan Reverse Dependency Order Walker import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Project Expression import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Split Output import org apache newplan logical relational Store import org apache newplan logical relational Stream import org apache newplan logical relational Union import org apache newplan logical relational Logical Relational Nodes Visitor import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema import org apache newplan logical relational Schema Defined Exception Helper class used Column Map Key Prune figure columns pruned n make changes operator plan public class Column Prune Helper protected static final String Column Prune Input Uids public static final String Column Prune Output Uids protected static final String Column Prune Required Columns private Operator Plan current Plan private Operator Sub Plan sub Plan public Column Prune Helper Operator Plan current Plan current Plan current Plan private Operator Sub Plan get Sub Plan throws Frontend Exception Operator Sub Plan p null current Plan instanceof Operator Sub Plan p new Operator Sub Plan Operator Sub Plan current Plan get Base Plan else p new Operator Sub Plan current Plan Iterator Operator iter current Plan get Operators iter Next Operator op iter next op instanceof add Operator op p return p private void add Operator Operator op Operator Sub Plan subplan throws Frontend Exception op null return subplan add op List Operator current Plan get Predecessors op null return Operator pred add Operator pred subplan Suppress Warnings unchecked public boolean check throws Frontend Exception List Operator sources current Plan get Sources rule run return false sources size sources get get Annotation null clear Annotation return false create sub plan ends foreach sub Plan get Sub Plan sub Plan size clear Annotation return false Column Dependency Visitor v new Column Dependency Visitor current Plan try v visit catch Schema Defined Exception e operator unknown schema return false clear Annotation return false List Operator sub Plan get Sources boolean found false Operator op op instanceof Load Set Long uids Set Long op get Annotation Logical Schema Load op get Schema Set Integer required get Columns uids required size size op annotate required found true found clear Annotation return found private void clear Annotation Iterator Operator iter current Plan get Operators iter Next Operator op iter next op remove Annotation op remove Annotation op remove Annotation get set column indexes set uids protected Set Integer get Columns Logical Schema schema Set Long uids throws Frontend Exception schema null throw new Schema Defined Exception Schema defined Set Integer cols new Hash Set Integer Iterator Long iter uids iterator iter Next long uid iter next int index schema find Field uid index throw new Frontend Exception uid found schema schema cols add index return cols public Operator Plan report Changes return sub Plan Visitor calculate input output uids operator n change plan put calculated info annotations input output uids necessarily top level uids schema may uids lower level fields complex fields schema static private class Column Dependency Visitor extends Logical Relational Nodes Visitor public Column Dependency Visitor Operator Plan plan throws Frontend Exception super plan new Reverse Dependency Order Walker plan Override public void visit Load load throws Frontend Exception Set Long output set Output Uids load load input uids output uids load annotate output Override public void visit Filter filter throws Frontend Exception Set Long output set Output Uids filter input uids contains output uids projections filter conditions Set Long input new Hash Set Long output Logical Expression Plan exp filter get Filter Plan collect Uids filter exp input filter annotate input Override public void visit Store store throws Frontend Exception Set Long output set Output Uids store output Empty deal load store load store case Logical Schema store get Schema null throw new Schema Defined Exception Schema store get Name defined int size output add get Field uid store input uids output uids store annotate output Override public void visit Join join throws Frontend Exception Set Long output set Output Uids join input uids contains output uids projections join expressions Set Long input new Hash Set Long output Collection Logical Expression Plan exps join get Expression Plan Values Iterator Logical Expression Plan iter exps iterator iter Next Logical Expression Plan exp iter next collect Uids join exp input join annotate input Override public void visit Cogroup cg throws Frontend Exception Set Long output set Output Uids cg input uids contains output uids projections join expressions Set Long input new Hash Set Long Add uids required cogroup keys cogroup done Logical Expression Plan plan cg get Expression Plans values collect Uids cg plan input check case output uid generated one case need add uids generated input long first Uid Map Integer Long generated Input Uids cg get Generated Input Uids Map Entry Integer Long entry generated Input Uids entry Set Long uid entry get Value Logical Relational Operator pred Logical Relational Operator cg get Plan get Predecessors cg get entry get Key output contains uid Hence need full schema bag input add get Uids pred get Schema pred get Schema null first Uid pred get Schema get Field uid input Empty first Uid input add first Uid cg annotate input Override public void visit Limit limit throws Frontend Exception Set Long output set Output Uids limit input uids contains output uids projections limit expression Set Long input new Hash Set Long output Logical Expression Plan exp limit get Limit Plan exp null collect Uids limit exp input limit annotate input Override public void visit Stream stream throws Frontend Exception output used set Output Uids used check output schema Set Long output set Output Uids stream Every field required Logical Relational Operator pred Logical Relational Operator plan get Predecessors stream get Set Long input get Uids pred get Schema stream annotate input Override public void visit Distinct distinct throws Frontend Exception set Output Uids distinct Set Long input new Hash Set Long Every field required Logical Schema distinct get Schema null throw new Schema Defined Exception Schema distinct get Name defined int size input add get Field uid distinct annotate input Override public void visit Cross cross throws Frontend Exception Set Long output set Output Uids cross Since change topology plan keep least one input predecessor List Operator preds plan get Predecessors cross Operator pred preds Logical Schema schema Logical Relational Operator pred get Schema Set Long uids get Uids schema boolean Pruned true Long uid uids output contains uid Pruned false Pruned output add schema get Field uid cross annotate output Override public void visit Union union throws Frontend Exception Set Long output set Output Uids union Set Long input new Hash Set Long long uid output input add union get Input Uids uid union annotate input Override public void visit Split split throws Frontend Exception Set Long output set Output Uids split split annotate output Override public void visit Split Output split Output throws Frontend Exception Set Long output set Output Uids split Output input uids contains output uids projections split Output conditions Set Long input new Hash Set Long long uid output input add split Output get Input Uids uid Logical Expression Plan exp split Output get Filter Plan collect Uids split Output exp input split Output annotate input Override public void visit Sort sort throws Frontend Exception Set Long output set Output Uids sort Set Long input new Hash Set Long output Logical Expression Plan exp sort get Sort Col Plans collect Uids sort exp input sort annotate input Override public void visit Rank rank throws Frontend Exception Set Long output set Output Uids rank Set Long input new Hash Set Long output Logical Expression Plan exp rank get Rank Col Plans collect Uids rank exp input rank annotate input function returns uids present given schema private Set Long get Uids Logical Schema schema Set Long uids new Hash Set Long schema null return uids Logical Field Schema field schema get Fields field type Data Type field type Data Type field schema null uids add get Uids field schema uids add field uid return uids Suppress Warnings unchecked Override public void visit foreach throws Frontend Exception Set Long output set Output Uids foreach Generate gen Optimizer Utils find Generate foreach gen annotate output visit gen Set Long input Set Long gen get Annotation Make sure least one column retain input Empty Logical Relational Operator pred Logical Relational Operator plan get Predecessors foreach get pred get Schema null input add pred get Schema get Field uid foreach annotate input Override Suppress Warnings unchecked public void visit Generate gen throws Frontend Exception Set Long output Set Long gen get Annotation Set Long input new Hash Set Long List Logical Expression Plan gen get Output Plans Iterator Long iter output iterator iter Next long uid iter next int size Logical Expression Plan exp get boolean found false Logical Schema plan Schema gen get Output Plan Schemas get Logical Field Schema fs plan Schema get Fields fs uid uid found true break found List Operator srcs exp get Sinks Operator src srcs src instanceof Project Expression List Inner Load inner Loads find Reacheable Inner Load Boundary Project Project Expression src first Inner Load inner Load inner Loads Project Expression prj inner Load get Projection prj Project Star prj find Referent get Schema null Logical Schema Logical Field Schema fs prj find Referent get Schema get Fields input add fs uid else prj find Referent get Schema null Logical Schema Logical Field Schema fs prj find Referent get Schema get Field prj get Col Num input add fs uid flatten bag need make sure least one field input int size gen get Flatten Flags continue Logical Expression Plan exp get Logical Expression sink Logical Expression exp get Sources get sink get Field Schema type Data Type sink get Field Schema type Data Type continue List Operator srcs exp get Sinks Operator src srcs src instanceof Project Expression continue List Inner Load inner Loads find Reacheable Inner Load Boundary Project Project Expression src first Inner Load inner Load inner Loads Project Expression prj inner Load get Projection prj Project Star prj find Referent get Schema null Logical Schema Logical Field Schema fs prj find Referent get Schema get Fields input add fs uid else prj find Referent get Schema null Logical Schema Logical Field Schema fs prj find Referent get Schema get Field prj get Col Num input add fs uid gen annotate input Override public void visit Inner Load load throws Frontend Exception Set Long output set Output Uids load load annotate output private void collect Uids Logical Relational Operator current Op Logical Expression Plan exp Set Long uids throws Frontend Exception List Operator exp get Sinks Operator op op instanceof Project Expression Project Expression op Range Star Project long uid Project Expression op get Field Schema uid uids add uid else Logical Relational Operator ref Project Expression op find Referent Logical Schema ref get Schema null throw new Schema Defined Exception Schema defined ref get Alias Logical Field Schema f get Fields uids add f uid Suppress Warnings unchecked Get output uid output schema output schema exist throw exception private Set Long set Output Uids Logical Relational Operator op throws Frontend Exception List Operator plan get Successors op Set Long uids new Hash Set Long Logical Schema op get Schema null throw new Schema Defined Exception Schema op get Name defined null sink output uids union input uids successors Operator succ Set Long input Uids Set Long succ get Annotation input Uids null Iterator Long iter input Uids iterator iter Next long uid iter next find Field uid uids add uid else leaf set schema int size uids add get Field uid op annotate uids return uids
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical rules import java util Array List import java util Hash Map import java util Hash Set import java util List import java util Map import java util Set import org apache commons logging Log import org apache commons logging Log Factory import org apache Load Func import org apache Load Push import org apache Load Push Required Field import org apache Load Push Required Field List import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache impl util Pair import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Reverse Dependency Order Walker import org apache newplan logical Util import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Project Expression import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Split Output import org apache newplan logical relational Store import org apache newplan logical relational Union import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Nodes Visitor import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema public class Column Prune Visitor extends Logical Relational Nodes Visitor protected static final Log log Log Factory get Log Column Prune Visitor class private Map Load Pair Map Integer Set String Set Integer required Items new Hash Map Load Pair Map Integer Set String Set Integer private boolean column Prune public Column Prune Visitor Operator Plan plan Map Load Pair Map Integer Set String Set Integer required Items boolean column Prune throws Frontend Exception super plan new Reverse Dependency Order Walker plan column Prune column Prune required Items required Items public void add Required Items Load load Pair Map Integer Set String Set Integer required Item required Items put load required Item Override public void visit Load load throws Frontend Exception required Items contains Key load return Pair Map Integer Set String Set Integer required required Items get load Required Field List required Fields new Required Field List Logical Schema load get Schema int size Required Field required Field null done processing ahead assume column present Column Pruner Map Pruner required first null required first contains Key required Field new Required Field required Field set Index required Field set Alias get Field alias required Field set Type get Field type List Required Field sub Fields new Array List Required Field String key required first get Required Field sub Field new Required Field key null Data Type sub Fields add sub Field required Field set Sub Fields sub Fields required Fields add required Field required second null required second contains required Field new Required Field required Field set Index required Field set Alias get Field alias required Field set Type get Field type required Fields add required Field boolean column Required new boolean size Required Field rf required Fields get Fields column Required rf get Index true List Pair Integer Integer prune List new Array List Pair Integer Integer int column Required length column Required prune List add new Pair Integer Integer String Buffer message new String Buffer prune List size message append Columns pruned load get Alias int prune List size message append prune List get second prune List size message append log info message message new String Buffer Required Field rf required Fields get Fields List Required Field sub rf get Sub Fields sub null message append Map key required load get Alias rf get Index sub n message length log info message Load Push Required Field Response response null try Load Func load Func load get Load Func load Func instanceof Load Push response Load Push load Func push Projection required Fields catch Frontend Exception e log warn push Projection load throw exception skip Loader support column pruning insert foreach column Prune response null response get Required Field Response Logical Plan p Logical Plan load get Plan Operator next p get Successors load get already load n need add another next instanceof return foreach new load get Plan add foreach base plan p add foreach p insert load foreach next Logical Plan inner Plan new Logical Plan foreach set Inner Plan inner Plan build foreach inner plan List Logical Expression Plan exps new Array List Logical Expression Plan Generate gen new Generate inner Plan exps new boolean required Fields get Fields size inner Plan add gen int required Fields get Fields size Load Push Required Field rf required Fields get Fields get Inner Load inner Load new Inner Load inner Plan foreach rf get Index inner Plan add inner Load inner Plan connect inner Load gen Logical Expression Plan exp new Logical Expression Plan Project Expression prj new Project Expression exp gen exp add prj exps add exp else columns pruned reset schema Loader List Integer required Indexes new Array List Integer List Load Push Required Field field List required Fields get Fields int field List size required Indexes add field List get get Index load set Required Fields required Indexes Logical Schema new Schema new Logical Schema int field List size new Schema add Field get Field field List get get Index load set Schema new Schema Override public void visit Filter filter throws Frontend Exception Override public void visit Limit limit throws Frontend Exception Override public void visit Split Output split Output throws Frontend Exception Suppress Warnings unchecked Override public void visit Split split throws Frontend Exception List Operator branch Outputs split get Plan get Successors split int branch Outputs size Operator branch Output branch Outputs get Set Long branch Output Uids Set Long branch Output get Annotation Column Prune Helper branch Output Uids null Set Integer columns Drop new Hash Set Integer int j j split get Schema size j branch Output Uids contains split get Schema get Field j uid columns Drop add j columns Drop Empty foreach Util add Logical Plan split get Plan split columns Drop foreach get Schema Override public void visit Sort sort throws Frontend Exception Override public void visit Rank rank throws Frontend Exception Override public void visit Store store throws Frontend Exception Override public void visit Cogroup cg throws Frontend Exception Logical Plan p Logical Plan cg get Plan List Operator successors p get Successors cg already operator skip adding another foreach since conflict Accumulator Optimizer Util add Accumulator successors size successors get instanceof return add Necessary cg Override public void visit Join join throws Frontend Exception Override public void visit Cross cross throws Frontend Exception Override Suppress Warnings unchecked public void visit foreach throws Frontend Exception column Prune return get column numbers input uids Set Long input Uids Set Long foreach get Annotation Column Prune Helper Get top level projects Logical Plan inner Plan foreach get Inner Plan List Inner Load inner Loads new Array List Inner Load List Operator sources inner Plan get Sources Operator sources instanceof Inner Load inner Loads add Inner Load project inner Load remove inner Load Set Inner Load inner Loads Remove new Hash Set Inner Load Inner Load inner Load inner Loads Project Expression project inner Load get Projection project Project Star Logical Schema Logical Field Schema tuple project get Field Schema Check first component star projection long uid tuple schema get Field uid input Uids contains uid inner Loads Remove add inner Load else input Uids contains project get Field Schema uid inner Loads Remove add inner Load Find logical operator immediate precede Generate removed whole branch Set Logical Relational Operator branch Head Remove new Hash Set Logical Relational Operator Inner Load inner Load inner Loads Remove Operator op inner Load inner Plan get Successors op get instanceof Generate op inner Plan get Successors op get branch Head Remove add Logical Relational Operator op Find expression plan remove Generate gen Generate inner Plan get Sinks get List Logical Expression Plan gen Plans Remove new Array List Logical Expression Plan List Logical Expression Plan gen Plans gen get Output Plans int gen Plans size Logical Expression Plan exp Plan gen Plans get List Operator exp Sources exp Plan get Sinks Operator exp Src exp Sources exp Src instanceof Project Expression Logical Relational Operator reference Project Expression exp Src find Referent branch Head Remove contains reference gen Plans Remove add exp Plan Build temporary structure based gen Plans Remove include flatten List output Plan Schemas uid Schemas inputs Removed first construct inputs Needed inputs Removed inputs inputs Needed figure inputs Removed directly since inputs may used output plan get inputs Removed visiting output plans List Boolean flatten List new Array List Boolean Set Integer inputs Needed new Hash Set Integer Set Integer inputs Removed new Hash Set Integer List Logical Schema output Plan Schemas new Array List Logical Schema List Logical Schema uid Schemas new Array List Logical Schema List Logical Schema user Defined Schemas null gen get User Defined Schema null user Defined Schemas new Array List Logical Schema int gen Plans size Logical Expression Plan gen Plan gen Plans get gen Plans Remove contains gen Plan flatten List add gen get Flatten Flags output Plan Schemas add gen get Output Plan Schemas get uid Schemas add gen get Uid Schemas get gen get User Defined Schema null user Defined Schemas add gen get User Defined Schema get List Operator sinks gen Plan get Sinks Operator sinks instanceof Project Expression inputs Needed add Project Expression get Input Num List Operator preds inner Plan get Predecessors gen preds null otherwise gen plan based constant need adjust int preds size inputs Needed contains inputs Removed add Change Generate remove unneeded output expression plan change flatten flag output Plan Schema uid Schemas boolean flatten new boolean flatten List size int flatten List size flatten flatten List get gen set Flatten Flags flatten gen set Output Plan Schemas output Plan Schemas gen set Uid Schemas uid Schemas gen set User Defined Schema user Defined Schemas Logical Expression Plan gen Plan Remove gen Plans Remove gen Plans remove gen Plan Remove shift project input inputs Removed Empty Logical Expression Plan gen Plan gen Plans List Operator sinks gen Plan get Sinks Operator sinks instanceof Project Expression int input Project Expression get Input Num int num Shift int inputs Removed input num Shift Project Expression set Input Num input num Shift Prune unneeded Inner Load List Logical Relational Operator pred Remove new Array List Logical Relational Operator int inputs Removed pred Remove add Logical Relational Operator preds get Logical Relational Operator pred pred Remove remove Sub Tree pred Override public void visit Union union throws Frontend Exception Add union necessary List Operator preds new Array List Operator preds add plan get Predecessors union Operator pred preds add Necessary Logical Relational Operator pred remove operators starting operator private void remove Sub Tree Logical Relational Operator op throws Frontend Exception Logical Plan p Logical Plan op get Plan List Operator p get Predecessors op null Operator pred Array new Operator size remove Sub Tree Logical Relational Operator pred p get Successors op null Operator succs p get Successors op Array new Operator Operator succs p disconnect op p remove op Add op prune unnecessary columns Suppress Warnings unchecked private void add Necessary Logical Relational Operator op throws Frontend Exception Set Long output Uids Set Long op get Annotation Column Prune Helper output Uids null Logical Schema schema op get Schema Set Integer columns Drop new Hash Set Integer int schema size output Uids contains schema get Field uid columns Drop add columns Drop Empty foreach Util add Logical Plan op get Plan op columns Drop foreach get Schema
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine spark optimizer import java util Hash Map import java util Linked List import java util List import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Project import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Combiner Packager import org apache backend hadoop executionengine physical Layer relational Operators Distinct import org apache backend hadoop executionengine physical Layer relational Operators import org apache backend hadoop executionengine physical Layer relational Operators Global Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Limit import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Pre Combiner Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Packager import org apache backend hadoop executionengine physical Layer util Plan Helper import org apache backend hadoop executionengine spark operator Global Rearrange Spark import org apache backend hadoop executionengine spark operator Reduce Spark import org apache backend hadoop executionengine spark plan Spark Op Plan Visitor import org apache backend hadoop executionengine spark plan Spark Oper Plan import org apache backend hadoop executionengine spark plan Spark Operator import org apache backend hadoop executionengine util Combiner Optimizer Util import org apache data Data Type import org apache impl plan Depth First Walker import org apache impl plan Plan Exception import org apache impl plan Visitor Exception import org apache impl plan optimizer Optimizer Exception import org apache impl util Pair import com google common collect Maps class goes physical plan replaces Global Rearrange Reduce algebraic operations public class Combiner Optimizer extends Spark Op Plan Visitor private static Log Log Factory get Log Combiner Optimizer class public Combiner Optimizer Spark Oper Plan plan super plan new Depth First Walker plan Override public void visit Spark Op Spark Operator spark Op throws Visitor Exception try add Combiner spark Op physical Plan catch Exception e throw new Visitor Exception e Checks algebraic operations exist Replaces global rearrange cogroup reduce follows Input foreach using algebraic Op packager global Rearrange local Rearrange Output foreach using algebraic Op Final reduce uses algebraic Op Intermediate foreach using algebraic Op Initial Combiner Rearrange private void add Combiner Physical Plan phy Plan throws Visitor Exception Plan Exception Clone Supported Exception List Physical Operator leaves phy Plan get Leaves leaves null leaves size return Ensure grouping List Global Rearrange glrs Plan Helper get Physical Operators phy Plan Global Rearrange class glrs null glrs size return Global Rearrange glr glrs List Physical Operator glr Successors phy Plan get Successors glr glr Successors null glr Successors Empty continue glr Successors get instanceof Package continue Package po Package Package glr Successors get List Physical Operator po Package Successors phy Plan get Successors po Package po Package Successors null po Package Successors size continue Physical Operator successor po Package Successors get Retaining original successor used later modifying plan Physical Operator package Successor successor successor instanceof Limit Limit acceptable long single foreach successor List Physical Operator limit Sucs phy Plan get Successors successor limit Sucs null limit Sucs size limit Sucs get instanceof code examine foreach successor limit Sucs get successor instanceof foreach successor List Physical Operator foreach Successors phy Plan get Successors foreach multi query foreach Successors null foreach Successors size continue Clone foreach modified post reduce foreach post Reduce foreach clone List Physical Plan fe Inners post Reduce get Input Plans find algebraic operators also check foreach statement suitable combiner use List Pair Physical Operator Physical Plan algebraic Ops Combiner Optimizer Util find Algebraic Ops fe Inners algebraic Ops null algebraic Ops size plan combinable nothing combine done continue try List Physical Operator glr Predecessors phy Plan get Predecessors glr Exclude co group optimization glr Predecessors null glr Predecessors size continue glr Predecessors get instanceof Local Rearrange continue Local Rearrange rearrange Local Rearrange glr Predecessors get info Algebraic operations found Optimizing plan use combiner Trim global rearrange preceeding package convert Map Side phy Plan po Package replace Distinct Project distinct udf Algebraic Pair Physical Operator Physical Plan op plan algebraic Ops op plan first instanceof Distinct continue Combiner Optimizer Util Distinct Patcher distinct Patcher new Combiner Optimizer Util Distinct Patcher op plan second distinct Patcher visit distinct Patcher get Distinct null int err Code String msg Problem replacing distinct operator distinct built function throw new Plan Exception msg err Code Exception op plan first distinct Patcher get Distinct create new map foreach mfe Combiner Optimizer Util create Grp Proj post Reduce po Package get Pkgr get Key Type Map Physical Operator Integer op newpos Maps new Hash Map Integer pos create plan algebraic udf add inner plan map foreach Pair Physical Operator Physical Plan op plan algebraic Ops Physical Plan udf Plan Combiner Optimizer Util create Plan Predecessors op plan first op plan second mfe add Input Plan udf Plan false op newpos put op plan first pos Combiner Optimizer Util change Func mfe User Func since creating Single Tuple Bag input map foreach flag Projects map foreach inner plans also use Single Tuple Bag Physical Plan mpl mfe get Input Plans try new Combiner Optimizer Util fix Map Projects mpl visit catch Visitor Exception e int err Code String msg Unable flag project operator use single tuple bag throw new Plan Exception msg err Code Exception e create new combine foreach cfe Combiner Optimizer Util create Grp Proj post Reduce po Package get Pkgr get Key Type add algebraic functions appropriate projection Combiner Optimizer Util add Algebraic Func Combine cfe op newpos modified foreach inner plans set foreach foreach initialization around mfe set Input Plans mfe get Input Plans cfe set Input Plans cfe get Input Plans tell Combiner Package fields need projected placed bags First field simple project rest need go bags int num Fields algebraic Ops size algebraic funcs group key boolean bags new boolean num Fields bags false int num Fields bags true Use Combiner package combine plan needs act differently regular package operator Combiner Packager pkgr new Combiner Packager po Package get Pkgr bags Package combine Pack po Package clone combine Pack set Pkgr pkgr specialized local rearrange operator replace normal local rearrange map plan Local Rearrange new Rearrange Combiner Optimizer Util get New Rearrange rearrange Pre Combiner Local Rearrange combiner Local Rearrange Combiner Optimizer Util get Pre Combiner rearrange phy Plan replace rearrange combiner Local Rearrange Create reduce operator Reduce Spark reduce Operator new Reduce Spark cfe get Operator Key combiner Local Rearrange get Requested Parallelism cfe get Input Plans cfe get Flattened combine Pack new Rearrange reduce Operator set Custom Partitioner glr get Custom Partitioner fix Reduce Side post Reduce algebraic Ops Combiner Optimizer Util change Func reduce Operator User Func update Packager reduce Operator new Rearrange Add new operators phy Plan add reduce Operator phy Plan add mfe Connect new operators follows reduce using algebraic Op Intermediate foreach using algebraic Op Initial phy Plan connect mfe reduce Operator Insert reduce stage combiner rearrange successor phy Plan disconnect combiner Local Rearrange package Successor phy Plan connect reduce Operator package Successor phy Plan connect combiner Local Rearrange mfe Replace foreach post reduce foreach phy Plan add post Reduce phy Plan replace foreach post Reduce catch Exception e int err Code String msg Internal error Unable introduce combiner optimization throw new Optimizer Exception msg err Code Exception e Modifies input plans post reduce foreach match output reduce stage private void fix Reduce Side post Reduce List Pair Physical Operator Physical Plan algebraic Ops throws Exec Exception Plan Exception int Pair Physical Operator Physical Plan algebraic Op algebraic Ops User Func combine Udf User Func algebraic Op first Physical Plan pplan algebraic Op second combine Udf set Algebraic Function User Func Project new Proj new Project Combiner Optimizer Util create Operator Key post Reduce get Operator Key get Scope new Proj set Result Type Data Type Physical Operator original Udf Input pplan get Predecessors combine Udf Array new Physical Operator pplan get Predecessors original Udf Input null pplan trim original Udf Input pplan remove original Udf Input pplan add new Proj pplan connect new Proj combine Udf post Reduce set Result Type Data Type Modifies map side foreach reduce private void convert Map Side Physical Plan physical Plan Package po Package throws Plan Exception Linked List Physical Operator operators Remove new Linked List Physical Operator physical Operator physical Plan get Predecessors po Package physical Operator instanceof Global Rearrange Spark operators Remove add physical Operator break Remove global rearranges preceeding Package Physical Operator po operators Remove physical Plan remove Reconnect po Remove Package physical Plan remove Reconnect po Package Update Reduce Operator packaging used Local rearrange private void update Packager Reduce Spark reduce Operator Local Rearrange lrearrange throws Optimizer Exception Packager pkgr reduce Operator get Op get Pkgr annotate package information Rearrange update key Info information already present Package Map Integer Pair Boolean Map Integer Integer key Info pkgr get Key Info key Info null key Info new Hash Map key Info get Integer value lrearrange get Index null something wrong getting key info index two different Local Rearranges int err Code String msg Unexpected problem optimization Found index lrearrange get Index multiple Local Rearrange operators throw new Optimizer Exception msg err Code Exception key Info put Integer value lrearrange get Index new Pair Boolean Map Integer Integer lrearrange Project Star lrearrange get Projected Cols Map pkgr set Key Info key Info pkgr set Key Tuple lrearrange Key Tuple pkgr set Key Compound lrearrange Key Compound Look algebraic User Func leaf input plan param pplan physical plan return null operator Project non algebraic User Func found going plan otherwise algebraic User Func returned private static User Func get Algebraic Successor Physical Plan pplan check ends List Physical Operator leaves pplan get Leaves leaves null leaves size return null Physical Operator succ leaves get succ instanceof User Func User Func succ combinable return User Func succ operator ca n combine return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine util import java util Array List import java util List import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache Func Spec import org apache Exception import org apache Warning import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Constant Expression import org apache backend hadoop executionengine physical Layer expression Operators Project import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Combiner Packager import org apache backend hadoop executionengine physical Layer relational Operators Distinct import org apache backend hadoop executionengine physical Layer relational Operators Filter import org apache backend hadoop executionengine physical Layer relational Operators import org apache backend hadoop executionengine physical Layer relational Operators Limit import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Partial Agg import org apache backend hadoop executionengine physical Layer relational Operators Pre Combiner Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Sort import org apache classification Interface Audience import org apache data Data Type import org apache impl plan Compilation Message Collector import org apache impl plan Compilation Message Collector Message Type import org apache impl plan Dependency Order Walker import org apache impl plan Depth First Walker import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Plan Exception import org apache impl plan Plan Walker import org apache impl plan Visitor Exception import org apache impl plan optimizer Optimizer Exception import org apache impl util Pair import com google common collect Lists import com google common collect Maps Interface Audience Private public class Combiner Optimizer Util private static final String org apache builtin Distinct class get Name private static final Log Log Factory get Log Combiner Optimizer Util class private Combiner Optimizer Util Algebraic functions distinct nested plan foreach partially computed map combine phase new foreach statement initial intermediate forms algebraic functions added map combine plans respectively bag portion group result projected non algebraic expression udf bag input combiner used use combiner case likely degrade performance much reduction data size combine stage offset cost additional number times de serialization done Major areas enhancement use combiner cogroup queries order limit sort nested foreach group case group followed filter algebraic expression public static void add Combiner Physical Plan map Plan Physical Plan reduce Plan Physical Plan combine Plan Compilation Message Collector message Collector boolean Map Agg throws Visitor Exception part one check job represents group foreach Find Local Rearrange map need later List Physical Operator map Leaves map Plan get Leaves map Leaves null map Leaves size message Collector collect Expected map single leaf Message Type Warning Warning return Physical Operator map Leaf map Leaves get map Leaf instanceof Local Rearrange return Local Rearrange rearrange Local Rearrange map Leaf List Physical Operator reduce Roots reduce Plan get Roots reduce Roots size message Collector collect Expected reduce single root Message Type Warning Warning return expect first root always Package n know going Physical Operator root reduce Roots get root instanceof Package message Collector collect Expected reduce root Package Message Type Warning Warning return Package pack Package root List Physical Operator pack Successors reduce Plan get Successors root pack Successors null pack Successors size return Physical Operator successor pack Successors get successor instanceof Limit Limit acceptable long single foreach successor List Physical Operator limit Sucs reduce Plan get Successors successor limit Sucs null limit Sucs size limit Sucs get instanceof code examine foreach successor limit Sucs get successor instanceof foreach successor List Physical Plan fe Inners foreach get Input Plans find algebraic operators also check foreach statement suitable combiner use List Pair Physical Operator Physical Plan algebraic Ops find Algebraic Ops fe Inners algebraic Ops null algebraic Ops size plan combinable nothing combine done return combine Plan null combine Plan get Roots size message Collector collect n expecting find anything already combiner Message Type Warning Warning return info Choosing move algebraic foreach combiner try replace Distinct Project distinct udf Algebraic Pair Physical Operator Physical Plan op plan algebraic Ops op plan first instanceof Distinct continue Distinct Patcher distinct Patcher new Distinct Patcher op plan second distinct Patcher visit distinct Patcher get Distinct null int err Code String msg Problem replacing distinct operator distinct built function throw new Plan Exception msg err Code Exception op plan first distinct Patcher get Distinct create new map foreach mfe create Grp Proj foreach rearrange get Key Type Map Physical Operator Integer op newpos Maps new Hash Map Integer pos create plan algebraic udf add inner plan map foreach Pair Physical Operator Physical Plan op plan algebraic Ops Physical Plan udf Plan create Plan Predecessors op plan first op plan second mfe add Input Plan udf Plan false op newpos put op plan first pos change Func mfe User Func since creating Single Tuple Bag input map foreach flag Projects map foreach inner plans also use Single Tuple Bag Physical Plan mpl mfe get Input Plans try new fix Map Projects mpl visit catch Visitor Exception e int err Code String msg Unable flag project operator use single tuple bag throw new Plan Exception msg err Code Exception e create new combine foreach cfe create Grp Proj foreach rearrange get Key Type add algebraic functions appropriate projection add Algebraic Func Combine cfe op newpos change Func cfe User Func fix projection function time algebraic functions reduce foreach Pair Physical Operator Physical Plan op plan algebraic Ops set Project Input op plan first op plan second op newpos get op plan first byte result Type op plan first get Result Type User Func op plan first set Algebraic Function User Func op plan first set Result Type result Type modified foreach inner plans set foreach foreach initialization around necessary evil right leaves explicitly stored Foreach list rather computed time run time plans optimization want Foreach compute leaves time Java optimize Java optimize mfe set Input Plans mfe get Input Plans cfe set Input Plans cfe get Input Plans foreach set Input Plans foreach get Input Plans tell Combiner Package fields need projected placed bags First field simple project rest need go bags int num Fields algebraic Ops size algebraic funcs group key boolean bags new boolean num Fields bags false int num Fields bags true Use Combiner package combine plan needs act differently regular package operator Combiner Packager pkgr new Combiner Packager pack get Pkgr bags Package combine Pack pack clone combine Pack set Pkgr pkgr combine Pack set Parent Plan null combine Plan add combine Pack combine Plan add cfe combine Plan connect combine Pack cfe need connect projections cfe cp Combiner directly attaches output package root remaining plan Local Rearrange mlr get New Rearrange rearrange Partial Agg map Agg null Map Agg map Agg create Partial Agg cfe Group rearrange specialized local rearrange operator replace normal local rearrange map plan behaves like regular local rearrange get Next far getting input constructing key input returns tuple two fields key first position value inside bag second position output format resembles format Package output feed map foreach expects format key field n project combiner map foreach added end required set inner plan new Local Rearrange leaf map combine plan contain project key patch Map map Plan get Pre Combiner rearrange mfe map Agg mlr Local Rearrange clr get New Rearrange rearrange clr set Parent Plan null combine Plan add clr combine Plan connect cfe clr Change package operator reduce plan Combiner package needs act differently regular package operator pack set Pkgr pkgr clone catch Exception e int err Code String msg Internal error Unable introduce combiner optimization throw new Optimizer Exception msg err Code Exception e private static boolean Group Local Rearrange lr Local Rearrange tuple chararray false scope scope Constant scope boolean Group false lr get Plans size Physical Plan plan lr get Plans get plan get Keys size plan get Roots get instanceof Constant Expression Constant Expression const Expr Constant Expression plan get Roots get Group equals const Expr get Value return Group Translate combiner Partial Agg param combine return partial aggregate operator throws Clone Supported Exception private static Partial Agg create Partial Agg combine boolean Group throws Clone Supported Exception String scope combine get Operator Key scope Partial Agg po Agg new Partial Agg new Operator Key scope Node Id Generator get Generator get Next Node Id scope Group po Agg add Original Location combine get Alias combine get Original Locations po Agg set Result Type combine get Result Type first plan combine foreach group key po Agg set Key Plan combine get Input Plans get clone List Physical Plan value Plans Lists new Array List int combine get Input Plans size value Plans add combine get Input Plans get clone po Agg set Value Plans value Plans return po Agg find algebraic operators also check foreach statement suitable combiner use param fe Inners inner plans foreach return null plan combinable otherwise list combinable operators throws Visitor Exception public static List Pair Physical Operator Physical Plan find Algebraic Ops List Physical Plan fe Inners throws Visitor Exception List Pair Physical Operator Physical Plan algebraic Ops Lists new Array List check foreach inner plan Physical Plan pplan fe Inners check presence non combinable operators Algebraic Plan Checker alg Checker new Algebraic Plan Checker pplan alg Checker visit alg Checker saw Non Algebraic return null found combinable distinct add list alg Checker saw Distinct Agg algebraic Ops add new Pair Physical Operator Physical Plan alg Checker get Distinct pplan continue List Physical Operator roots pplan get Roots combinable operators attached Project root root successor combinable project projecting group column Otherwise job considered combinable n want use combiner cases foreach statement projecting bags likely bad performance additional de serialization costs Physical Operator root roots root instanceof Constant Expression continue root instanceof Project happen expect root inner plan constant project combining return null Project proj Project root User Func combine Udf get Algebraic Successor proj pplan combine Udf null proj Project End project star project end combinable return null Check see projection grouping column projection col List Integer cols proj get Columns cols null cols size cols get project grouping column plan still combinable continue else combinable return null algebraic udf one input Add udf boolean exist false Pair Physical Operator Physical Plan pair algebraic Ops pair first equals combine Udf exist true break exist algebraic Ops add new Pair Physical Operator Physical Plan combine Udf pplan return algebraic Ops Look algebraic User Func successor project called recursively skip projects seen way param proj project param pplan physical plan return null operator Project algebraic User Func found going plan otherwise algebraic User Func returned private static User Func get Algebraic Successor Project proj Physical Plan pplan check root followed combinable operator List Physical Operator succs pplan get Successors proj succs null succs size return null succs size project shared one operator happen plans generated today wo n try combine return null Physical Operator succ succs get succ instanceof Project return get Algebraic Successor Project succ pplan succ instanceof User Func User Func succ combinable return User Func succ operator ca n combine return null Create new foreach scope alias given foreach add inner plan projects group column going first input param foreach source foreach param key Type type group key return new Foreach public static create Grp Proj foreach byte key Type String scope foreach get Operator Key scope new new create Operator Key scope new Array List Physical Plan new add Original Location foreach get Alias foreach get Original Locations new set Result Type foreach get Result Type create plan projects group column Physical Plan grp Proj Plan new Physical Plan group column first column Project proj new Project create Operator Key scope proj set Result Type key Type grp Proj Plan add proj new add Input Plan grp Proj Plan false return new Create new plan add clones operator alge Op predecessors physical plan pplan param alge Op algebraic operator param pplan physical plan alge Op return new plan throws Clone Supported Exception throws Plan Exception public static Physical Plan create Plan Predecessors Physical Operator alge Op Physical Plan pplan throws Clone Supported Exception Plan Exception Physical Plan newplan new Physical Plan add Predecessors Plan alge Op pplan newplan return newplan Recursively clone op predecessors pplan add newplan param op param pplan param newplan return throws Clone Supported Exception throws Plan Exception private static Physical Operator add Predecessors Plan Physical Operator op Physical Plan pplan Physical Plan newplan throws Clone Supported Exception Plan Exception Physical Operator new Op op clone newplan add new Op pplan get Predecessors op null pplan get Predecessors op size return new Op Physical Operator pred pplan get Predecessors op Physical Operator new Pred add Predecessors Plan pred pplan newplan newplan connect new Pred new Op return new Op add algebraic functions appropriate projection new foreach combiner param cfe new foreach combiner param op newpos mapping physical operator position input throws Clone Supported Exception throws Plan Exception public static void add Algebraic Func Combine cfe Map Physical Operator Integer op newpos throws Clone Supported Exception Plan Exception array first populate physical operators order position input Used adding plans combine foreach output combine foreach positions input means operator position mapping used reduce well Physical Operator ops Order new Physical Operator op newpos size Map Entry Physical Operator Integer op pos op newpos entry Set ops Order op pos get Value op pos get Key first position used group column plan added start int ops Order length create new inner plan foreach add cloned copy given physical operator new project Even udf query takes multiple input one project needs added input udf version udf evaluated map Physical Plan new Plan new Physical Plan Physical Operator new Op ops Order clone new Plan add new Op Project proj new Project create Operator Key cfe get Operator Key get Scope proj set Result Type Data Type new Plan add proj new Plan connect proj new Op cfe add Input Plan new Plan false Replace old Local Rearrange new pre combine add new map foreach new map local rearrange connect param map Plan param pre Combiner param mfe param map Agg param mlr throws Plan Exception private static void patch Map Physical Plan map Plan Pre Combiner Local Rearrange pre Combiner mfe Partial Agg map Agg Local Rearrange mlr throws Plan Exception Local Rearrange old Local Rearrange map Plan get Leaves get map Plan replace old pre Combiner map Plan add mfe map Plan connect pre Combiner mfe operator local rearrange Physical Operator op mfe map Agg null map Plan add map Agg map Plan connect mfe map Agg op map Agg map Plan add mlr map Plan connect op mlr param rearrange return public static Pre Combiner Local Rearrange get Pre Combiner Local Rearrange rearrange String scope rearrange get Operator Key scope Pre Combiner Local Rearrange pclr new Pre Combiner Local Rearrange create Operator Key scope rearrange get Requested Parallelism rearrange get Inputs pclr set Plans rearrange get Plans return pclr public static Operator Key create Operator Key String scope return new Operator Key scope Node Id Generator get Generator get Next Node Id scope param op param index param plan throws Plan Exception private static void set Project Input Physical Operator op Physical Plan plan int index throws Plan Exception String scope op get Operator Key scope Project proj new Project new Operator Key scope Node Id Generator get Generator get Next Node Id scope op get Requested Parallelism index proj set Result Type Data Type Remove old connections elements plan plan trim op plan add proj plan connect proj op List Physical Operator inputs Lists new Array List inputs add proj op set Inputs inputs Change algebriac function type algebraic functions map combine map combine algebraic functions leaf plan param fe param type throws Plan Exception public static void change Func fe byte type throws Plan Exception Physical Plan plan fe get Input Plans List Physical Operator leaves plan get Leaves leaves null leaves size int err Code String msg Expected find plan single leaf Found leaves size leaves throw new Plan Exception msg err Code Exception Physical Operator leaf leaves get leaf instanceof Project continue leaf instanceof User Func int err Code String msg Expected find plan project leaf Found leaf get Class get Simple Name throw new Plan Exception msg err Code Exception User Func func User Func leaf try func set Algebraic Function type catch Exec Exception e int err Code String msg Could set algebraic function type throw new Plan Exception msg err Code Exception e create new Local rearrange cloning existing rearrange add plan projecting key param rearrange return throws Plan Exception throws Clone Supported Exception public static Local Rearrange get New Rearrange Local Rearrange rearrange throws Plan Exception Clone Supported Exception Local Rearrange new Rearrange rearrange clone Set projection key Physical Plan new Plan new Physical Plan String scope new Rearrange get Operator Key scope Project proj new Project new Operator Key scope Node Id Generator get Generator get Next Node Id scope proj set Result Type new Rearrange get Key Type new Plan add proj List Physical Plan plans new Array List Physical Plan plans add new Plan new Rearrange set Plans Combiner plans return new Rearrange Checks something prevents use algebraic interface looks Distinct used algebraic private static class Algebraic Plan Checker extends Phy Plan Visitor boolean saw Non Algebraic false boolean saw Distinct Agg false private boolean saw Foreach false private Distinct distinct null Algebraic Plan Checker Physical Plan plan super plan new Dependency Order Walker Physical Operator Physical Plan plan Override public void visit throws Visitor Exception super visit saw foreach distinct agg ok else saw foreach mark non algebraic saw Foreach saw Distinct Agg saw Non Algebraic true Override public void visit Distinct Distinct distinct throws Visitor Exception distinct distinct saw Distinct Agg want combine case one Distinct input agg apparently seen Distinct lets combine saw Non Algebraic true return check distinct input agg could following two cases script b group c foreach b x distinct generate x script leads following plan x User Func org apache builtin long Project bag Distinct bag Project tuple script b group c foreach b x distinct generate x script leads following plan x User Func org apache builtin Int Sum long Project bag Project bag Distinct bag Project tuple tracing Distinct successors upto leaf see Project bag immediate successor optional Project bag next successor till see leaf Physical Operator leaf Plan get Leaves get leaf User Func need algebraic leaf instanceof User Func want combine case one Distinct input agg combine additional inputs List Physical Operator preds Plan get Predecessors leaf preds size saw Non Algebraic true return List Physical Operator immediate Succs Plan get Successors distinct immediate Succs size immediate Succs get instanceof Project check Successor Leaf leaf immediate Succs get script saw Distinct Agg true return else check script scenario List Physical Operator next Succs Plan get Successors immediate Succs get next Succs size Physical Operator op next Succs get op instanceof Project check Successor Leaf leaf op saw Distinct Agg true return return means see pattern expected saw Non Algebraic true return distinct public Distinct get Distinct saw Non Algebraic return null return distinct Override public void visit Limit Limit limit throws Visitor Exception saw Non Algebraic true private boolean check Successor Leaf Physical Operator leaf Physical Operator op Check List Physical Operator succs Plan get Successors op Check succs size Physical Operator op succs get op leaf return true return false Override public void visit Filter Filter filter throws Visitor Exception saw Non Algebraic true Override public void visit fe throws Visitor Exception need allow foreach input distinct n want things lets flag presence Foreach present distinct agg allowed saw Foreach true Override public void visit Sort Sort sort throws Visitor Exception saw Non Algebraic true visitor replace Project bag Distinct bag User Func org apache builtin Distinct Data Bag public static class Distinct Patcher extends Phy Plan Visitor private User Func distinct null param plan param walker public Distinct Patcher Physical Plan plan Plan Walker Physical Operator Physical Plan walker super plan walker param physical Plan public Distinct Patcher Physical Plan physical Plan physical Plan new Dependency Order Walker Physical Operator Physical Plan physical Plan Override public void visit Project Project proj throws Visitor Exception check project preceded Distinct return type bag List Physical Operator preds Plan get Predecessors proj preds null return leaf project interesting patching Physical Operator pred preds get preds size pred instanceof Distinct distinct null already patched since Project Distinct pair occur int err Code String msg Unexpected Project Distinct pair trying set plans use combiner throw new Optimizer Exception msg err Code Exception stick Userfunc org apache builtin Distinct Data Bag place Project Distinct pair Physical Operator distinct Predecessor Plan get Predecessors pred get User Func func null try String scope proj get Operator Key scope List Physical Operator func Input new Array List Physical Operator Func Spec f Spec new Func Spec func Input add distinct Predecessor explicitly set distinct Predecessor result type tuple relevant distinct Predecessor originally Foreach return type need set tuple get stream tuples distinct Predecessor set Result Type Data Type func new User Func new Operator Key scope Node Id Generator get Generator get Next Node Id scope func Input f Spec func set Result Type Data Type Plan replace proj func Plan remove pred connect newly added func predecessor earlier Distinct Plan connect distinct Predecessor func catch Plan Exception e int err Code String msg Problem reconfiguring plan add distinct built function throw new Optimizer Exception msg err Code Exception e distinct func public User Func get Distinct return distinct public static class fix Map Projects extends Phy Plan Visitor public fix Map Projects Physical Plan plan plan new Depth First Walker Physical Operator Physical Plan plan param plan param walker public fix Map Projects Physical Plan plan Plan Walker Physical Operator Physical Plan walker super plan walker Override public void visit Project Project proj throws Visitor Exception proj get Result Type Data Type calling visitor fixing projects map foreach inner plan map side dealing single tuple bags set flag project use single tuple bags future n single tuple bags input map foreach proj set Result Single Tuple Bag true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl util import java util Array List import java util List import org apache Eval Func import org apache Func Spec import org apache backend hadoop executionengine physical Layer expression Operators Constant Expression import org apache backend hadoop executionengine physical Layer expression Operators Expression Operator import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators Bin Cond import org apache backend hadoop executionengine physical Layer expression Operators Project import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache builtin Empty import org apache data Data Bag import org apache data Data Type import org apache data Non Spillable Data Bag import org apache data Tuple import org apache data Tuple Factory import org apache impl Context import org apache impl logical Layer schema Schema import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Plan Exception class add util functions gets used Log Phy Translator Compiler public class Compiler Utils public static void add Empty Bag Outer Join Physical Plan fe Plan Schema input Schema boolean skewed Right Outer Join String First Reduce Key Class Name throws Plan Exception currently Project bag operator plan bag empty bag replace bag one tuple null fields flatten drop records flatten drop records bag left empty bag actually project nulls fields empty bag need get following state Project Bag User Func Empty Const Bag bag null fields Project Bag Bin Cond skewed right outer join first reduce key generate tuple null fields See Project key Project Bag First Reduce Key User Func Empty Const Bag bag null fields Project Bag Bin Cond Project relation Project Project fe Plan get Roots get try condition bincond Project relation Project Empty relation Project clone fe Plan add relation Project Empty String scope relation Project get Operator Key scope Func Spec Empty Spec new Func Spec Empty class get Name Object f Context instantiate Func Spec Empty Spec User Func Empty new User Func new Operator Key scope Node Id Generator get Generator get Next Node Id scope null Empty Spec Eval Func f Empty set Result Type Data Type fe Plan add Empty fe Plan connect relation Project Empty Empty Expression Operator cond skewed Right Outer Join Project project Key new Project new Operator Key scope Node Id Generator get Generator get Next Node Id scope project Key set Column project Key set Overloaded false project Key set Result Type input Schema get Field type new new Operator Key scope Node Id Generator get Generator get Next Node Id scope Func Spec First Reduce Key Spec new Func Spec First Reduce Key Class Name Object f Context instantiate Func Spec First Reduce Key Spec User Func First Reduce Key new User Func new Operator Key scope Node Id Generator get Generator get Next Node Id scope null First Reduce Key Spec Eval Func f fe Plan add project Key fe Plan add First Reduce Key fe Plan add fe Plan connect project Key First Reduce Key fe Plan connect First Reduce Key fe Plan connect Empty set Lhs First Reduce Key set Rhs Empty cond else cond Empty lhs bincond const bag null fields Constant Expression ce new Constant Expression new Operator Key scope Node Id Generator get Generator get Next Node Id scope following give tuple required number nulls Tuple Tuple Factory get Instance new Tuple input Schema size int input Schema size set null List Tuple bag Contents new Array List Tuple bag Contents add Data Bag bg new Non Spillable Data Bag bag Contents ce set Value bg ce set Result Type Data Type operator n predecessors fe Plan add ce rhs bincond original project let set bincond Bin Cond bincond new Bin Cond new Operator Key scope Node Id Generator get Generator get Next Node Id scope bincond set Cond cond bincond set Lhs ce bincond set Rhs relation Project bincond set Result Type Data Type fe Plan add bincond fe Plan connect cond bincond fe Plan connect ce bincond fe Plan connect relation Project bincond catch Exception e throw new Plan Exception Error setting outerjoin e
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Array List import java util List import org apache Eval Func import org apache Func Spec import org apache Exception import org apache backend executionengine Exec Exception import org apache data Data Byte Array import org apache data Data Type import org apache data Tuple import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema Generates concatenation two arguments used two bytearrays two chararrays mixture two public class extends Eval Func Data Byte Array Override public Data Byte Array exec Tuple input throws Exception try input null input size return null Data Byte Array db new Data Byte Array int input size input get null return null db append Data Byte Array input get return db catch Exec Exception exp throw exp catch Exception e int err Code String msg Error computing concat get Class get Simple Name throw new Exec Exception msg err Code Exception e Override public Schema output Schema Schema input return new Schema new Schema Field Schema null Data Type non Javadoc see org apache Eval Func get Arg Func Mapping Override public List Func Spec get Arg Func Mapping throws Frontend Exception List Func Spec func List new Array List Func Spec Schema new Schema add new Schema Field Schema null Data Type add new Schema Field Schema null Data Type func List add new Func Spec get Class get Name new Schema add new Schema Field Schema null Data Type add new Schema Field Schema null Data Type func List add new Func Spec String Concat class get Name return func List Override public Schema Type get Schema Type return Schema Type Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop datastorage import java util Enumeration import java util Iterator import java util Map import java util Map Entry import java util Properties import org apache hadoop conf Configuration import org apache Exec Type import org apache Constants import org apache backend hadoop executionengine map Reduce Layer Configuration import org apache backend hadoop executionengine map Reduce Layer Map Reduce import org apache backend hadoop executionengine util Map Red Util public class Configuration Util public static Configuration Configuration Properties properties return Configuration properties false public static Configuration Configuration Properties properties boolean load Defaults assert properties null final Configuration config new Configuration load Defaults final Enumeration Object iter properties keys iter Elements final String key String iter next Element final String val properties get Property key config set key val return config public static Properties Properties Configuration configuration Properties properties new Properties assert configuration null Iterator Map Entry String String iter configuration iterator iter Next Map Entry String String entry iter next properties put entry get Key entry get Value return properties param orig Conf param replace Conf public static void merge Conf Configuration orig Conf Configuration replace Conf Entry String String entry replace Conf orig Conf set entry get Key entry get Value public static Properties get Local Properties Configuration local Conf Map Reduce Job Context null Map Reduce Job Context get Configuration get exectype equals Exec Type String local Conf new Configuration false local Conf add Resource core default xml else Map Reduce Job Context null local Conf new Configuration Map Reduce Job Context get Configuration else local Conf new Configuration true really hacky try get unit test working hadoop Hadoop Mini Cluster currently need setup Distributed cache start build classes hadoop site xml contains entry prevents tests successful expect files hdfs need unset hadoop go away Mini Cluster fix distributed cache issue local Conf unset Configuration local Conf set Map Red Util file Properties props Configuration Util Properties local Conf return props public static void replace Config Local Mode Configuration configuration Entry String String entry configuration String key entry get Key String value entry get Value key starts Constants String real Conf Key key substring Constants length configuration set real Conf Key value Returns Properties containing alternative names given property values used solve deprecations return public static Properties expand Alternative Names String name String value final Configuration config new Configuration false config set name value return Configuration Util Properties config
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical rules import java io Exception import java util Array List import java util Hash Map import java util Iterator import java util List import java util Map import org apache backend executionengine Exec Exception import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop executionengine map Reduce Layer Hadoop Logger import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache impl Context import org apache impl logical Layer Frontend Exception import org apache impl util Context import org apache newplan Base Operator Plan import org apache newplan Dependency Order Walker import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Walker import org apache newplan Reverse Dependency Order Walker Seen Chk import org apache newplan logical expression Expression Visitor import org apache newplan logical expression Constant Expression import org apache newplan logical expression Exp Phy Translation Visitor import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Logical Expression Visitor import org apache newplan logical expression User Func Expression import org apache newplan logical optimizer Expression Visitor import org apache newplan logical relational Logical Relational Operator import org apache newplan optimizer Rule import org apache newplan optimizer Transformer import org joda time Date Time Zone public abstract class Constant Calculator extends Rule private List Logical Relational Operator processed Operators new Array List Logical Relational Operator private Context pc public Constant Calculator String n Context pc super n false pc pc Override public Transformer get New Transformer return new Constant Calculator Transformer processed Operators pc public static class Constant Calculator Transformer extends Transformer private List Logical Relational Operator processed Operators new Array List Logical Relational Operator private Operator Plan plan private Context pc public Constant Calculator Transformer List Logical Relational Operator processed Operators Context pc processed Operators processed Operators pc pc Override public boolean check Operator Plan matched throws Frontend Exception Iterator Operator operators matched get Operators operators Next Logical Relational Operator operator Logical Relational Operator operators next operator already processed quit processed Operators contains operator continue processed Operators add operator return true return false public static class Constant Calculator Logical Plan Visitor extends Expression Visitor private Context pc public Constant Calculator Logical Plan Visitor Operator Plan plan Context pc throws Frontend Exception super plan new Dependency Order Walker plan pc pc Override protected Logical Expression Visitor get Visitor Logical Expression Plan expr throws Frontend Exception return new Constant Calculator Expression Visitor expr current Op pc public static class Constant Calculator Expression Visitor extends Expression Visitor private Logical Relational Operator current Op private Context pc private Date Time Zone current null public Constant Calculator Expression Visitor Operator Plan exp Plan Logical Relational Operator current Op Context pc throws Frontend Exception super exp Plan new Reverse Dependency Order Walker Seen Chk exp Plan current Op current Op pc pc Override protected void execute Logical Expression op throws Frontend Exception op instanceof User Func Expression User Func Expression udf User Func Expression op udf get Eval Func allow Compile Time Calculation return boolean val Set false Object val null current Walker get Plan get Successors op null successors successors constant calculate constant Operator succ current Walker get Plan get Successors op succ instanceof Constant Expression return successors constant calculate value Operator Plan exp Logical Plan new Logical Expression Plan Base Operator Plan current Walker get Plan move Tree op Base Operator Plan exp Logical Plan Physical Plan exp Physical Plan new Physical Plan Map Operator Physical Operator log Phy Map new Hash Map Operator Physical Operator Plan Walker child Walker new Reverse Dependency Order Walker Seen Chk exp Logical Plan Save old walker use child Walker current Walker push Walker child Walker Exp Phy Translation Visitor exp Translation Visitor new Exp Phy Translation Visitor exp Logical Plan child Walker current Op exp Physical Plan log Phy Map exp Translation Visitor visit pop Walker Physical Operator root exp Physical Plan get Leaves get try Context get Context add Job Conf Configuration Util Configuration pc get Properties true Hadoop Logger Hadoop Logger Hadoop Logger get Instance Physical Operator set Logger Hadoop Logger set Default Time Zone val root get Next root get Result Type result restore Default Time Zone Context get Context add Job Conf null catch Exec Exception e throw new Frontend Exception e val Set true else op instanceof User Func Expression solo calculate User Func Expression udf User Func Expression op try Context get Context add Job Conf Configuration Util Configuration pc get Properties true set Default Time Zone val udf get Eval Func exec null restore Default Time Zone Context get Context add Job Conf null catch Exception e throw new Frontend Exception e val Set true val Set Constant Expression constant Expr constant Expr new Constant Expression current Walker get Plan val constant Expr inherit Schema op current Walker get Plan replace op constant Expr private void set Default Time Zone String dtz Str pc get Properties get Property datetime default tz dtz Str null dtz Str length current Date Time Zone get Default Date Time Zone set Default Date Time Zone dtz Str private void restore Default Time Zone current null Date Time Zone set Default current current null Override public void transform Operator Plan matched throws Frontend Exception Expression Visitor expression Visitor new Constant Calculator Logical Plan Visitor matched pc expression Visitor visit Override public Operator Plan report Changes return plan
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache Exception import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical Util import org apache newplan logical relational Logical Schema Logical Field Schema import org apache parser Source Location constant public class Constant Expression extends Column Expression Stupid Java needs union Object val Remember data type value null byte type Data Type Adds expression plan param plan Logical Expression Plan constant part param val Value constant public Constant Expression Operator Plan plan Object val super Constant plan val val plan add link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Get value constant return value constant public Object get Value return val public void set Value Object val val val Override public boolean Equal Operator throws Frontend Exception null instanceof Constant Expression Constant Expression co Constant Expression return co get Field Schema Equal get Field Schema co val null val null co null co val equals val else return false Override public Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema try field Schema Util translate Field Schema Data Type determine Field Schema val catch Exception e throw new Frontend Exception Error determining field schema object constant expression Exception e uid Field Schema field Schema merge Uid uid Field Schema type Data Type field Schema type Data Type val null field Schema type type return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Constant Expression copy new Constant Expression lg Exp Plan get Value copy type type copy set Location new Source Location location return copy public void inherit Schema Logical Expression expr throws Frontend Exception field Schema expr get Field Schema uid Field Schema field Schema merge Uid uid Field Schema field Schema type Data Type type field Schema type
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Array List import java util Iterator import java util List import org apache Accumulator import org apache Algebraic import org apache Eval Func import org apache Func Spec import org apache Exception import org apache backend executionengine Exec Exception import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema Generates count number values bag count include null values thus matches semantics field indicates p class implements link org apache Algebraic possible execution performed distributed fashion p restrictions data types inside bag counted p implements link org apache Accumulator interface well never preferred method usage available case combiner used given calculation public class extends Eval Func Long implements Algebraic Accumulator Long private static Tuple Factory Tuple Factory Tuple Factory get Instance Override public Long exec Tuple input throws Exception try Data Bag bag Data Bag input get bag null return null Iterator bag iterator long cnt Next Tuple Tuple next null size get null cnt return cnt catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing count get Class get Simple Name throw new Exec Exception msg err Code Exception e public String get Initial return Initial class get Name public String get Intermed return Intermediate class get Name public String get Final return Final class get Name static public class Initial extends Eval Func Tuple Override public Tuple exec Tuple input throws Exception Since Initial guaranteed called map called input bag single tuple count always bag non empty Data Bag bag Data Bag input get Iterator bag iterator Next Tuple Tuple next null size get null return Tuple Factory new Tuple Long value return Tuple Factory new Tuple Long value static public class Intermediate extends Eval Func Tuple Override public Tuple exec Tuple input throws Exception try return Tuple Factory new Tuple sum input catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing count get Class get Simple Name throw new Exec Exception msg err Code Exception e static public class Final extends Eval Func Long Override public Long exec Tuple input throws Exception try return sum input catch Exception ee int err Code String msg Error computing count get Class get Simple Name throw new Exec Exception msg err Code Exception ee static protected Long sum Tuple input throws Exec Exception Number Format Exception Data Bag values Data Bag input get long sum Iterator Tuple values iterator Next Tuple next faith Checking value cast much sum Long get return sum Override public Schema output Schema Schema input return new Schema new Schema Field Schema null Data Type non Javadoc see org apache Eval Func get Arg Func Mapping Override public List Func Spec get Arg Func Mapping throws Frontend Exception List Func Spec func List new Array List Func Spec Schema new Schema add new Schema Field Schema null Data Type func List add new Func Spec get Class get Name return func List Accumulator interface implementation private long intermediate Count Override public void accumulate Tuple b throws Exception try Data Bag bag Data Bag b get Iterator bag iterator Next Tuple Tuple next null size get null intermediate Count catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing min get Class get Simple Name throw new Exec Exception msg err Code Exception e Override public void cleanup intermediate Count Override public Long get Value return intermediate Count
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util List import org apache Eval Func import org apache backend executionengine Exec Exception import org apache data Bag Factory import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl logical Layer schema Schema Field Schema import com google common collect Lists Produces Data Bag combinations argument tuple members data cube Meaning b c produce following bag pre b c null null null b null null c null null null b c null null c null b null pre p marker null default set arbitrary string invoking constructor via constructor takes single argument string want represent p Usage goes something like pre code events load logs events using Event Loader lang event app id cubed foreach x generate piggybank Cube Dimensions lang event app id lang event app id measure cube foreach group cubed lang event app id parallel generate flatten group lang event app id cubed measure store cube event cube pre p b Note b non algebraic aggregations large data result slow reducers since one groups going get records relation public class Cube Dimensions extends Eval Func Data Bag private static Bag Factory bf Bag Factory get Instance private static Tuple Factory tf Tuple Factory get Instance private final String Marker private static final String unknown unknown public Cube Dimensions null public Cube Dimensions String Marker super Marker Marker Override public Data Bag exec Tuple tuple throws Exception List Tuple result Lists new Array List Capacity int Math pow tuple size convert Null Unknown tuple Tuple newt tf new Tuple tuple size recursively Cube result tuple newt return bf new Default Bag result dimension values contain null replace unknown value since null used rollups public static void convert Null Unknown Tuple tuple throws Exec Exception int idx Object obj tuple get obj null tuple set idx unknown idx private void recursively Cube List Tuple result Tuple input int index Tuple newt throws Exec Exception newt set index input get index index input size result add newt else recursively Cube result input index newt tf new Tuple makes copy tf new Tuple Copy n Tuple newnewt tf new Tuple newt get newnewt set index Marker index input size result add newnewt else recursively Cube result input index newnewt Override public Schema output Schema Schema input try return new Schema new Field Schema dimensions input Data Type catch Frontend Exception e specifying explicitly happen throw new Runtime Exception e Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java lang reflect Parameterized Type import java lang reflect Type import java math Big Decimal import java math Big Integer import java util Array List import java util Arrays import java util Hash Map import java util Iterator import java util Map import java util Tree Map import org apache hadoop io Writable Comparable import org apache Exception import org apache Resource Schema import org apache backend executionengine Exec Exception import org apache builtin Date import org apache classification Interface Audience import org apache classification Interface Stability import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl logical Layer schema Schema Merge Exception import org joda time Date Time class static final values used encode data type number static helper functions manipulating data objects data type values could done enumeration done byte codes instead save creating objects Interface Audience Public Interface Stability Stable public class Data Type list used record values data disk change values may strand user data Order matters compare uses order order unlike datatypes n change ordering Spaced unevenly leave room new entries without changing values creating order issues public static final byte public static final byte public static final byte public static final byte internal use public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte public static final byte Internal use public static final byte internal use storing loading chararray bigger characters Bin Storage public static final byte public static final byte public static final byte Internal use used store Writeable Comparable objects creating ordered index Merge Join Expecting object implements Writable interface default constructor public static final byte Internal use public static final byte internal use maps object object Used Find Quantiles public static final byte Determine datatype object param Object test return byte code type n know public static byte find Type Object null return Try put common first instanceof Data Byte Array return else instanceof String return else instanceof Tuple return else instanceof Data Bag return else instanceof Integer return else instanceof Long return else instanceof Internal Map return else instanceof Map return else instanceof Float return else instanceof Double return else instanceof Boolean return else instanceof Date Time return else instanceof Byte return else instanceof Big Integer return else instanceof Big Decimal return else instanceof Writable Comparable return else return Given Type object determine data type represents n cheap uses reflection use sparingly param Type examine return byte code type n know public static byte find Type Type null return Try put common first Data Byte Array class return else String class return else Integer class return else Long class return else Float class return else Double class return else Boolean class return else Byte class return else Big Integer class return else Big Decimal class return else Date Time class return else Internal Map class return else Might tuple bag need check interfaces implements instanceof Class return extract Type Class else instanceof Parameterized Type Parameterized Type impl Parameterized Type Class c Class impl get Raw Type return extract Type Class c return private static byte extract Type Class Type Class c Class Class ioe Interfaces c get Interfaces Class interfaces null c Interface interfaces new Class ioe Interfaces length interfaces c int interfaces length interfaces ioe Interfaces else interfaces ioe Interfaces boolean matched Writable Comparable false int interfaces length interfaces get Name equals org apache data Tuple return else interfaces get Name equals org apache data Data Bag return else interfaces get Name equals java util Map return else interfaces get Name equals org apache hadoop io Writable Comparable use type last resort matched Writable Comparable true matched Writable Comparable return return Return number types knows return number types public static int num Types byte types gen Types return types length Get array type values return byte array entry type public static byte gen Types byte types Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type return types private static String gen Type Names String names return names Get map type values type names return map public static Map Byte String gen Type Name Map byte types gen Types String names gen Type Names Map Byte String ret new Hash Map Byte String int types length ret put types names return ret Get map type names type values return map public static Map String Byte gen Name Type Map byte types gen Types String names gen Type Names Map String Byte ret new Hash Map String Byte int types length ret put names types return ret Get type name param Object test return type name String public static String find Type Name Object return find Type Name find Type Get type name type byte code param dt Type byte code return type name String public static String find Type Name byte dt switch dt case return case return boolean case return byte case return int case return biginteger case return bigdecimal case return long case return float case return double case return datetime case return bytearray case return bigchararray case return chararray case return map case return internalmap case return tuple case return bag case return generic writablecomparable default return Unknown public static Class find Type Class byte dt switch dt case return Void case return Boolean case return Byte case return Integer case return Big Integer class case return Big Decimal class case return Long case return Float case return Double case return Date Time class case return Data Byte Array class case return String class case return String class case return Map class case return Internal Map class case return Tuple class case return Data Bag class case return Writable Comparable class default throw new Runtime Exception Invalid type corresponding class dt Get type code type name param name Type name return type code public static byte find Type Name String name name null return else boolean equals Ignore Case name return else byte equals Ignore Case name return else int equals Ignore Case name return else biginteger equals Ignore Case name return else bigdecimal equals Ignore Case name return else long equals Ignore Case name return else float equals Ignore Case name return else double equals Ignore Case name return else datetime equals Ignore Case name return else bytearray equals Ignore Case name return else bigchararray equals Ignore Case name return else chararray equals Ignore Case name return else map equals Ignore Case name return else internalmap equals Ignore Case name return else tuple equals Ignore Case name return else bag equals Ignore Case name return else generic writablecomparable equals Ignore Case name return else return Determine whether data type complex param data Type Data type code test return true data Type bag tuple map public static boolean Complex byte data Type return data Type data Type data Type data Type Determine whether object complex atomic param Object determine type return true data Type bag tuple map public static boolean Complex Object return Complex find Type Determine whether data type atomic param data Type Data type code test return true data Type bytearray bigchararray chararray integer long float boolean public static boolean Atomic byte data Type return data Type data Type data Type data Type data Type data Type data Type data Type data Type data Type data Type data Type data Type Determine whether data type atomic param Object determine type return true data Type bytearray chararray integer long float boolean public static boolean Atomic Object return Atomic find Type Determine whether object schema param Object determine schema return true type valid schema e bag tuple public static boolean Schema Type Object return Schema Type find Type Determine whether data type schema param data Type data Type determine schema return true type valid schema e bag tuple public static boolean Schema Type byte data Type return data Type data Type data Type Compare two objects function necessary super class implements compare function provides arbitrary ordering objects different types follows lt lt lt lt lt lt lt lt lt lt lt lt functions implement cross object logic call function instead param First object param Second object return less equal less public static int compare Object Object byte dt find Type byte dt find Type return compare dt dt link compare Object Object use reflection determine type passed objects relying instead caller provide appropriate values determined link Data Type find Type Object Use version cases multiple objects type repeatedly compared param first object param second object param dt type byte value param dt type byte value return lt equal gt Suppress Warnings unchecked public static int compare Object Object byte dt byte dt dt dt null null return else return else null return switch dt case return case return Boolean compare Boolean case return Byte compare Byte case return Integer compare Integer case return Long compare Long case return Float compare Float case return Double compare Double case return Date Time compare Date Time case return Data Byte Array compare case return String compare String case return Big Integer compare Big Integer case return Big Decimal compare Big Decimal case Map String Object Map String Object Map String Object Map String Object int sz size int sz size sz sz return else sz sz return else bad sort keys maps order commutative Tree Map String Object tm new Tree Map String Object Tree Map String Object tm new Tree Map String Object Iterator Map Entry String Object tm entry Set iterator Iterator Map Entry String Object tm entry Set iterator Next Map Entry String Object entry next Map Entry String Object entry next int c entry get Key compare entry get Key c return c else c compare entry get Value entry get Value c return c return case return Comparable compare case return n think anyway want case return Tuple compare case return Data Bag compare default throw new Runtime Exception Unkown type dt compare else dt dt return else return public static byte Bytes Object throws Exec Exception return Bytes find Type Suppress Warnings unchecked public static byte Bytes Object byte type throws Exec Exception switch type case return Boolean boolean Value new byte new byte return Boolean String get Bytes case return new byte Byte case case case case case case return Number String get Bytes case return Date Time String get Bytes case return String get Bytes case return map String Map String Object get Bytes case return Tuple String get Bytes case return Data Byte Array get case return Data Bag String get Bytes case return null default int err Code String msg convert find Type Name Byte Array throw new Exec Exception msg err Code Exception Force data object Boolean possible numeric type forced Boolean well Char Array Byte Array Complex types forced Boolean n particularly efficient already b know b object Boolean cast param object cast param type object casting return object Boolean throws Exec Exception type ca n forced Boolean public static Boolean Boolean Object byte type throws Exec Exception try switch type case return null case return Boolean case return Boolean value Byte byte Value case return Boolean value Integer int Value case return Boolean value Long long Value case return Boolean value Big Integer equals Big Integer case return Boolean value Big Decimal equals Big Decimal case return Boolean value Float float Value case return Boolean value Double double Value case String str Data Byte Array String str equals Ignore Case true return Boolean else str equals Ignore Case false return Boolean else return null case String equals Ignore Case true return Boolean else String equals Ignore Case false return Boolean else return null case case case case case case default int err Code String msg convert find Type Name Boolean throw new Exec Exception msg err Code Exception catch Class Cast Exception cce throw cce catch Exec Exception ee throw ee catch Number Format Exception nfe int err Code String msg Problem formatting Could convert Float throw new Exec Exception msg err Code Exception nfe catch Exception e int err Code String msg Internal error Could convert Float throw new Exec Exception msg err Code Exception public static Boolean Boolean Object throws Exec Exception return Boolean find Type Force data object Integer possible numeric type forced Integer though precision may lost well Char Array Byte Array Boolean Complex types forced Integer n particularly efficient already b know b object Integer cast param object cast param type object casting return object Integer throws Exec Exception type ca n forced Integer public static Integer Integer Object byte type throws Exec Exception try switch type case Boolean true return Integer value else return Integer value case return Integer value Byte int Value case return Integer case return Integer value Long int Value case return Integer value Float int Value case return Integer value Double int Value case return Integer value Data Byte Array String case return Integer value String case return Integer value Big Integer int Value case return Integer value Big Decimal int Value case return null case return Integer value Long value Date Time get Millis int Value case case case case case default int err Code String msg convert find Type Name Integer throw new Exec Exception msg err Code Exception catch Class Cast Exception cce throw cce catch Exec Exception ee throw ee catch Number Format Exception nfe int err Code String msg Problem formatting Could convert Integer throw new Exec Exception msg err Code Exception nfe catch Exception e int err Code String msg Internal error Could convert Integer throw new Exec Exception msg err Code Exception Force data object Integer possible numeric type forced Integer though precision may lost well Char Array Byte Array Boolean Complex types forced Integer n particularly efficient already b know b object Integer cast Unlike link Integer Object byte method first determine type cast Use link Integer Object byte already know type param object cast return object Integer throws Exec Exception type ca n forced Integer public static Integer Integer Object throws Exec Exception return Integer find Type Force data object Long possible numeric type forced Long though precision may lost well Char Array Byte Array Boolean Complex types forced Long n particularly efficient already b know b object Long cast param object cast param type object casting return object Long throws Exec Exception type ca n forced Long public static Long Long Object byte type throws Exec Exception try switch type case Boolean true return Long value else return Long value case return Long value Byte long Value case return Long value Integer long Value case return Long case return Long value Float long Value case return Long value Double long Value case return Long value Data Byte Array String case return Long value String case return Long value Big Integer long Value case return Long value Big Decimal long Value case return null case return Long value Date Time get Millis case case case case case default int err Code String msg convert find Type Name Long throw new Exec Exception msg err Code Exception catch Class Cast Exception cce throw cce catch Exec Exception ee throw ee catch Number Format Exception nfe int err Code String msg Problem formatting Could convert Long throw new Exec Exception msg err Code Exception nfe catch Exception e int err Code String msg Internal error Could convert Long throw new Exec Exception msg err Code Exception Force data object Long possible numeric type forced Long though precision may lost well Char Array Byte Array Boolean Complex types forced Long n particularly efficient already b know b object Long cast Unlike link Long Object byte method first determine type cast Use link Long Object byte already know type param object cast return object Long throws Exec Exception type ca n forced Long public static Long Long Object throws Exec Exception return Long find Type Force data object Float possible numeric type forced Float though precision may lost well Char Array Byte Array Complex types forced Float n particularly efficient already b know b object Float cast param object cast param type object casting return object Float throws Exec Exception type ca n forced Float public static Float Float Object byte type throws Exec Exception try switch type case return Boolean Float value Float value case return new Float Integer float Value case return new Float Long float Value case return Float case return new Float Double float Value case return new Float Long value Date Time get Millis float Value case return Float value Data Byte Array String case return Float value String case return Float value Big Integer float Value case return Float value Big Decimal float Value case return null case case case case case case default int err Code String msg convert find Type Name Float throw new Exec Exception msg err Code Exception catch Class Cast Exception cce throw cce catch Exec Exception ee throw ee catch Number Format Exception nfe int err Code String msg Problem formatting Could convert Float throw new Exec Exception msg err Code Exception nfe catch Exception e int err Code String msg Internal error Could convert Float throw new Exec Exception msg err Code Exception Force data object Float possible numeric type forced Float though precision may lost well Char Array Byte Array Boolean Complex types forced Float n particularly efficient already b know b object Float cast Unlike link Float Object byte method first determine type cast Use link Float Object byte already know type param object cast return object Float throws Exec Exception type ca n forced Float public static Float Float Object throws Exec Exception return Float find Type Force data object Double possible numeric type forced Double well Char Array Byte Array Complex types forced Double n particularly efficient already b know b object Double cast param object cast param type object casting return object Double throws Exec Exception type ca n forced Double public static Double Double Object byte type throws Exec Exception try switch type case return Boolean Double value Double value case return new Double Integer double Value case return new Double Long double Value case return new Double Float double Value case return Double case return new Double Long value Date Time get Millis double Value case return Double value Data Byte Array String case return Double value String case return Double value Big Integer double Value case return Double value Big Decimal double Value case return null case case case case case case default int err Code String msg convert find Type Name Double throw new Exec Exception msg err Code Exception catch Class Cast Exception cce throw cce catch Exec Exception ee throw ee catch Number Format Exception nfe int err Code String msg Problem formatting Could convert Double throw new Exec Exception msg err Code Exception nfe catch Exception e int err Code String msg Internal error Could convert Double throw new Exec Exception msg err Code Exception Force data object Date Time possible Char Array Byte Array forced Date Time Numeric types complex types forced Date Time n particularly efficient already b know b object Date Time cast param object cast param type object casting return object Boolean throws Exec Exception type ca n forced Boolean public static Date Time Date Time Object byte type throws Exec Exception try switch type case return null case return new Date Time Data Byte Array String case string contain date part date part plus time part return Date extract Date Time String case return new Date Time Integer long Value case return new Date Time Long long Value case return new Date Time Float long Value case return new Date Time Double long Value case return new Date Time Big Integer long Value case return new Date Time Big Decimal long Value case return Date Time case case case case case case case default int err Code String msg convert find Type Name Date Time throw new Exec Exception msg err Code Exception catch Class Cast Exception cce throw cce catch Exec Exception ee throw ee catch Number Format Exception nfe int err Code String msg Problem formatting Could convert Date Time throw new Exec Exception msg err Code Exception nfe catch Exception e int err Code String msg Internal error Could convert Date Time throw new Exec Exception msg err Code Exception public static Date Time Date Time Object throws Exec Exception return Date Time find Type Force data object Double possible numeric type forced Double well Char Array Byte Array Boolean Complex types forced Double n particularly efficient already b know b object Double cast Unlike link Double Object byte method first determine type cast Use link Double Object byte already know type param object cast return object Double throws Exec Exception type ca n forced Double public static Double Double Object throws Exec Exception return Double find Type public static Big Integer Big Integer Object throws Exec Exception return Big Integer find Type public static Big Integer Big Integer Object byte type throws Exec Exception try switch type case return Boolean Big Integer Big Integer case return Big Integer value Integer long Value case return Big Integer value Long long Value case return Big Integer value Float long Value case return Big Integer value Double long Value case return new Big Integer Data Byte Array String case return new Big Integer String case return Big Integer case return Big Decimal Big Integer case return Big Integer value Date Time get Millis case return null case case case case case case default int err Code String msg convert find Type Name Big Integer throw new Exec Exception msg err Code Exception catch Class Cast Exception cce throw cce catch Exec Exception ee throw ee catch Number Format Exception nfe int err Code String msg Problem formatting Could convert Big Integer throw new Exec Exception msg err Code Exception nfe catch Exception e int err Code String msg Internal error Could convert Big Integer throw new Exec Exception msg err Code Exception public static Big Decimal Big Decimal Object throws Exec Exception return Big Decimal find Type public static Big Decimal Big Decimal Object byte type throws Exec Exception try switch type case return Boolean Big Decimal Big Decimal case return Big Decimal value Integer long Value case return Big Decimal value Long long Value case return Big Decimal value Float double Value case return Big Decimal value Double double Value case return new Big Decimal Data Byte Array String case return new Big Decimal String case return new Big Decimal Big Integer case return Big Decimal case return Big Decimal value Date Time get Millis case return null case case case case case case default int err Code String msg convert find Type Name Big Decimal throw new Exec Exception msg err Code Exception catch Class Cast Exception cce throw cce catch Exec Exception ee throw ee catch Number Format Exception nfe int err Code String msg Problem formatting Could convert Big Decimal throw new Exec Exception msg err Code Exception nfe catch Exception e int err Code String msg Internal error Could convert Big Decimal throw new Exec Exception msg err Code Exception Force data object String possible simple atomic type forced String including Byte Array Complex types forced String n particularly efficient already b know b object String cast param object cast param type object casting return object String throws Exec Exception type ca n forced String public static String String Object byte type throws Exec Exception try switch type case return Integer String case return Long String case return Float String case return Double String case return Date Time String case return Data Byte Array String case return String case return Big Integer String case return Big Decimal String case return null case return Boolean String case return Byte String case case case case case default int err Code String msg convert find Type Name String throw new Exec Exception msg err Code Exception catch Class Cast Exception cce throw cce catch Exec Exception ee throw ee catch Exception e int err Code String msg Internal error Could convert String throw new Exec Exception msg err Code Exception Force data object String possible simple atomic type forced String including Byte Array Complex types forced String n particularly efficient already b know b object String cast Unlike link String Object byte method first determine type cast Use link String Object byte already know type param object cast return object String throws Exec Exception type ca n forced String public static String String Object throws Exec Exception return String find Type object map return map n particularly efficient already b know b object Map cast param object cast return object Map throws Exec Exception type ca n forced Double Suppress Warnings unchecked public static Map String Object Map Object throws Exec Exception null return null instanceof Map instanceof Internal Map try return Map String Object catch Exception e int err Code String msg Internal error Could convert Map throw new Exec Exception msg err Code Exception else int err Code String msg convert find Type Name Map throw new Exec Exception msg err Code Exception object tuple return tuple n particularly efficient already b know b object Tuple cast param object cast return object Double throws Exec Exception type ca n forced Double public static Tuple Tuple Object throws Exec Exception null return null instanceof Tuple try return Tuple catch Exception e int err Code String msg Internal error Could convert Tuple throw new Exec Exception msg err Code Exception else int err Code String msg convert find Type Name Tuple throw new Exec Exception msg err Code Exception object bag return bag n particularly efficient already b know b object bag cast param object cast return object Double throws Exec Exception type ca n forced Double public static Data Bag Bag Object throws Exec Exception null return null instanceof Data Bag try return Data Bag catch Exception e int err Code String msg Internal error Could convert Bag throw new Exec Exception msg err Code Exception else int err Code String msg convert find Type Name Data Bag throw new Exec Exception msg err Code Exception Purely debugging public static void spill Tuple Contents Tuple String label System print Tuple label Iterator Object get iterator int j Next j System print j next get Class get Name System println String Determine type numeric type param type byte value test return true numeric type false otherwise public static boolean Number Type byte switch case return true case return true case return true case return true case return true case return true default return false Determine type work done param type byte value test return false type unknown null error true otherwise public static boolean Usable Type byte switch case return false case return false case return false default return true Test one type cast param cast Type data type cast type param input Type data type input return true false public static boolean castable byte cast Type byte input Type legal types cast Data Type Usable Type cast Type Data Type Usable Type input Type return false type castable cast Type input Type return true Numerical type castable Data Type Number Type cast Type Data Type Number Type input Type return true databyte cast anything input Type Data Type return true Cast numerical type string vice versa valid Data Type Number Type input Type cast Type Data Type Data Type Number Type cast Type input Type Data Type return true else return false return false Merge types possible Merging types means finding type one types upcast param type param type return merged type Data Type successful public static byte merge Type byte type byte type legal types merged Data Type Usable Type type Data Type Usable Type type return Data Type type type type return type number return bigger type Data Type Number Type type Data Type Number Type type return type type type type One bytearray number chararray type Data Type return type type Data Type return type else return return Data Type Given map turn String param map return string representation map public static String map String Map String Object boolean Next false String Builder sb new String Builder sb append Map Entry String Object e entry Set Next sb append else Next true sb append e get Key sb append Object val e get Value val null sb append val String sb append return sb String Test whether two byte arrays Java byte arrays byte arrays equal idea function param lhs byte array param rhs byte array return true null two length bytes public static boolean equal Byte Arrays byte lhs byte rhs lhs null rhs null return true lhs null rhs null return false lhs length rhs length return false int lhs length lhs rhs return false return true Utility method determines schema passed data Type data Type Bag Tuple need determine schemas inside data Type iterate fields inside field method works raw objects Resource Schema Resource Field Schema field descriptions specific behavior determined klass parameter param data Type Data Type Data Type param field Iter iterator fields tuple bag param field Num number fields inside field tuple param klass Object Resource Schema Resource Field Schema return throws Exec Exception throws Frontend Exception throws Schema Merge Exception Suppress Warnings deprecation private static Schema Field Schema determine Field Schema byte data Type Iterator field Iter long field Num Class klass throws Exec Exception Frontend Exception Schema Merge Exception switch data Type case return new Schema Field Schema null case case case case case case case case case case case return new Schema Field Schema null data Type case Schema schema null field Num schema new Schema int field Num schema add determine Field Schema klass cast field Iter next return new Schema Field Schema null schema case Schema schema null Schema bag Schema null field Num Array List Schema schemas new Array List Schema field Iter Next schemas add determine Field Schema klass cast field Iter next schema schema schemas get null schema Schema Field Schema tuple Fs new Schema Field Schema null null bag Schema new Schema tuple Fs bag Schema set Two Level Access Required true return new Schema Field Schema null bag Schema int schema Size schema size int schemas size Schema curr Schema schemas get null curr Schema curr Schema size schema Size Schema Field Schema tuple Fs new Schema Field Schema null null bag Schema new Schema tuple Fs bag Schema set Two Level Access Required true return new Schema Field Schema null bag Schema schema Schema merge Schema schema curr Schema false false false Schema Field Schema tuple Fs new Schema Field Schema null schema bag Schema new Schema tuple Fs since schema tuple field schema internally list field schemas actual items bag access field bag two level access bag Schema set Two Level Access Required true return new Schema Field Schema null bag Schema default int err Code String msg determine field schema throw new Exec Exception msg err Code Exception Determine field schema Resource Field Schema param rc Field Schema rc Field Schema want translated return field schema corresponding object throws Exec Exception Frontend Exception Schema Merge Exception public static Schema Field Schema determine Field Schema Resource Schema Resource Field Schema rc Field Schema throws Exec Exception Frontend Exception Schema Merge Exception byte dt rc Field Schema get Type Iterator Resource Schema Resource Field Schema field Iter null long field Num dt dt field Iter Arrays List rc Field Schema get Schema get Fields iterator field Num rc Field Schema get Schema get Fields length return determine Field Schema dt field Iter field Num Resource Schema Resource Field Schema class Determine field schema object param object whose field schema determined return field schema corresponding object throws Exec Exception Frontend Exception Schema Merge Exception public static Schema Field Schema determine Field Schema Object throws Exec Exception Frontend Exception Schema Merge Exception byte dt find Type Iterator field Iter null long field Num dt field Iter Tuple get iterator field Num Tuple size else dt field Num Data Bag size field Iter Data Bag iterator return determine Field Schema dt field Iter field Num Object class
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java io Buffered Input Stream import java io Data Input Stream import java io Data Output Stream import java io Exception import java io File Input Stream import java io File Found Exception import java io Exception import java util Array List import java util Iterator import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache Counters import org apache Warning unordered collection Tuples possibly multiples tuples stored List since concern order distinctness public class Default Data Bag extends Default Abstract Bag private static final long serial Version private static final Log log Log Factory get Log Default Data Bag class private static final Inter Sedes Inter Sedes Factory get Inter Sedes Instance public Default Data Bag Contents new Array List Tuple constructor creates bag existing list tuples taking ownership list copying contents list param list Tuples List Tuple containing tuples public Default Data Bag List Tuple list Tuples Contents list Tuples Size list Tuples size mark Spillable Necessary Override public boolean Sorted return false Override public boolean Distinct return false Override public Iterator Tuple iterator return new Default Data Bag Iterator Override public long spill Make sure something spill n create empty files make mess Contents size return Lock container spill iterators n trying read mucking container long spilled synchronized Contents Data Output Stream null try get Spill File catch Exception ioe remove last file spilled array added File create Tmp File threw Exception warn Unable create tmp file spill disk Warning ioe return try Iterator Tuple Contents iterator Next write Datum next Data Type spilled spill every records spilled x fff report Progress flush close null Contents clear catch Throwable e Remove last file spilled array since failed write Spill Files remove Spill Files size warn Unable spill contents disk Warning e return finally null try close catch Exception e warn Error closing spill Warning e Increment spill count inc Spill Count Counters return spilled iterator handles getting next tuple bag iterator couple issues deal First data stored combination memory disk Second bag may asked spill iterator reading means pointing someplace memory suddenly need switch disk file private class Default Data Bag Iterator implements Iterator Tuple buffer tuple easy way next tell whether another tuple available read private Tuple Buf null private int Memory Ptr private int File Ptr private Data Input Stream null private int Cntr private boolean Cached Tuple false Default Data Bag Iterator Override public boolean Next call Next set flag call Next repeated without fetching next tuple Cached Tuple return Buf null Buf next Cached Tuple true return Buf null Override public Tuple next report progress every times next much faster using mod Cntr x ff report Progress one buffer use one Cached Tuple Tuple Buf Cached Tuple false return See reading memory Memory Ptr still data memory keep reading Lock check size obtain reader lock point forward ca n spilling us synchronized Contents Contents size return read Memory container spilled since last read n need hold lock already spilled us file pointer already point new spill file either already incremented past end old Spill Files size need open new file fast forward past tuples already read need reset Memory Ptr know read file next time come try new Data Input Stream new Buffered Input Stream new File Input Stream Spill Files get File Ptr catch File Found Exception fnfe ca n find spill file never happen String msg Unable find spill file log fatal msg fnfe throw new Runtime Exception msg fnfe int Memory Ptr try read Datum catch Exception eof never happen means n dump tuples disk String msg Ran tuples read prematurely log fatal msg eof throw new Runtime Exception msg eof catch Exception ioe String msg Unable read spill file log fatal msg ioe throw new Runtime Exception msg ioe Memory Ptr return read File n read memory yet keep trying read file return read File implemented Override public void remove private Tuple read File null already file open Tuple try Tuple read Datum return catch Exception eof Fall next case find next file go memory try close catch Exception e log warn Failed close spill file e catch Exception ioe String msg Unable read spill file log fatal msg ioe throw new Runtime Exception msg ioe Need open next file one lock otherwise could decide files time decide start trying read memory container could spill stuck another file read unlock immediately n need hold lock go read Memory synchronized Contents Spill Files null File Ptr Spill Files size read everything read files go look memory return read Memory Open next file call enter try new Data Input Stream new Buffered Input Stream new File Input Stream Spill Files get File Ptr catch File Found Exception fnfe ca n find spill file never happen String msg Unable find spill file log fatal msg fnfe throw new Runtime Exception msg fnfe return read File called know n spilled assumes Contents lock already held enter function private Tuple read Memory Contents size return null Memory Ptr Contents size return List Tuple Contents get Memory Ptr else return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java io Byte Array Input Stream import java io Data Input import java io Data Input Stream import java io Data Output import java io Exception import java io Unsupported Encoding Exception import java math Big Decimal import java math Big Integer import java nio Byte Buffer import java util Array List import java util Iterator import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop io Writable Comparator import org apache hadoop mapred Job Conf import org apache Exception import org apache backend executionengine Exec Exception import org apache impl io Nullable Tuple import org apache impl util Object Serializer default implementation Tuple class created Default Tuple Factory public class Default Tuple extends Abstract Tuple private static final long serial Version protected List Object Fields Default constructor constructor public hadoop call directly However inside never calling function Use Tuple Factory instead br Time complexity allocation public Default Tuple Fields new Array List Object Construct tuple known number fields Package level callers directly invoke br Resulting tuple filled pre filled null elements Time complexity allocation param size Number fields allocate tuple Default Tuple int size Fields new Array List Object size int size Fields add null Construct tuple existing list objects Package level callers directly invoke br Time complexity plus running time input object iteration allocation param c List objects turn tuple Default Tuple List Object c Fields new Array List Object c Construct tuple existing list objects Package level callers directly invoke br Time complexity param c List objects turn tuple list kept part tuple param junk used differentiate constructor copies list Default Tuple List Object c int junk Fields c Find size tuple Used called arity return number fields tuple Override public int size return Fields size Get value given field param field Num Number field get value return value Object throws Exec Exception field number greater equal number fields tuple Override public Object get int field Num throws Exec Exception return Fields get field Num Get fields tuple list return List lt Object gt containing fields tuple order Override public List Object get return Fields Set value given field param field Num Number field set value param val Object put indicated field throws Exec Exception field number greater equal number fields tuple Override public void set int field Num Object val throws Exec Exception Fields set field Num val Append field tuple method efficient may force copying existing data order grow data structure Whenever possible construct Tuple new Tuple int method fill values set rather construct new Tuple append values param val Object append tuple Override public void append Object val Fields add val Determine size tuple memory used data bags determine memory size need exact decent estimation return estimated memory size Override public long get Memory Size Iterator Object Fields iterator rest fixed portion mfields size accounted within empty tuple size long mfields var size Size Util round Eight Fields size java hotspot bit vm seems minimum tuple size probably minimum size array list mfields var size Math max mfields var size fixed overhead bytes tuple object header Fields reference Fields array list fixed size long sum mfields var size Next sum Size Util get Obj Mem Size next return sum Override public int compare Object instanceof Tuple Tuple Tuple int Sz Fields size int Sz size Sz Sz return else Sz Sz return else int Sz try int c Data Type compare Fields get get c return c catch Exec Exception e throw new Runtime Exception Unable compare tuples e return else return Data Type compare public static class Default Tuple Raw Comparator extends Writable Comparator implements Tuple Raw Comparator private final Log Log Log Factory get Log get Class private boolean Asc private boolean Whole Tuple private boolean Null Field private Tuple Factory Fact public Default Tuple Raw Comparator super Default Tuple class Override public Configuration get Conf return null Override public void set Conf Configuration conf try Asc boolean Object Serializer deserialize conf get sort Order catch Exception ioe Log error Unable deserialize sort Order ioe get Message throw new Runtime Exception ioe Asc null Asc new boolean Asc true one entry Asc means whole tuple ca n looking column Whole Tuple Asc length Fact Tuple Factory get Instance Override public boolean Compared Tuple Null return Null Field Compare two Default Tuples raw bytes assume Tuples Nullable Writable client classes need deal Null Index Override public int compare byte b int int l byte b int int l Byte Buffer bb Byte Buffer wrap b l Byte Buffer bb Byte Buffer wrap b l int rc compare Default Tuple bb bb true adjust secondary sort asc return rc Compare two Default Tuples raw bytes private int compare Default Tuple Byte Buffer bb Byte Buffer bb boolean top Level Null Field false store position case deserialization int bb position int bb position int rc byte tuple Type bb get byte tuple Type bb get assert tuple Type tuple Type tuple Type Data Type first compare sizes int sz bb get Int int sz bb get Int sz sz return else sz sz return else sizes compare field field int sz rc byte dt bb get byte dt bb get dt dt switch dt case Data Type top Level scanning top level Tuple original call Null Field true rc break case Data Type case Data Type byte bv bb get byte bv bb get rc bv bv bv bv break case Data Type int iv bb get Int int iv bb get Int rc iv iv iv iv break case Data Type long lv bb get Long long lv bb get Long rc lv lv lv lv break case Data Type float fv bb get Float float fv bb get Float rc Float compare fv fv break case Data Type double dv bb get Double double dv bb get Double rc Double compare dv dv break case Data Type bb get Data Type bb get Data Type throw new Runtime Exception Issue comparing raw bytes Default Tuple serialized int basz bb get Int int basz bb get Int byte ba new byte basz byte ba new byte basz bb get ba bb get ba rc new Big Integer ba compare new Big Integer ba break case Data Type byte catype bb get byte catype bb get int casz catype Data Type bb get Short bb get Int int casz catype Data Type bb get Short bb get Int byte ca new byte casz byte ca new byte casz bb get ca bb get ca String str null str null try str new String ca Data Reader Writer str new String ca Data Reader Writer catch Unsupported Encoding Exception uee Log warn Unsupported string encoding uee uee print Stack Trace str null str null rc new Big Decimal str compare new Big Decimal str break case Data Type long dtv bb get Long bb position bb position move cursor forward without read timezone bytes long dtv bb get Long bb position bb position rc dtv dtv dtv dtv break case Data Type int basz bb get Int int basz bb get Int byte ba new byte basz byte ba new byte basz bb get ba bb get ba rc Data Byte Array compare ba ba break case Data Type case Data Type int casz dt Data Type bb get Short bb get Int int casz dt Data Type bb get Short bb get Int byte ca new byte casz byte ca new byte casz bb get ca bb get ca String str null str null try str new String ca Data Reader Writer str new String ca Data Reader Writer catch Unsupported Encoding Exception uee Log warn Unsupported string encoding uee uee print Stack Trace str null str null rc str compare str break case Data Type put back cursor Data Type bb position bb position bb position bb position rc compare Default Tuple bb bb false break default Log info Unsupported Data Type binary comparison switching object deserialization Data Type gen Type Name Map get dt dt Tuple Fact new Tuple Tuple Fact new Tuple try read Fields new Data Input Stream new Byte Array Input Stream bb array bb limit read Fields new Data Input Stream new Byte Array Input Stream bb array bb limit catch Exception ioe Log error Unable instantiate tuples comparison ioe get Message throw new Runtime Exception ioe get Message ioe delegate compare Tuple return compare Tuple else compare Data Types dt dt rc else rc flip order descending rc Whole Tuple Asc rc else Whole Tuple Asc rc return rc Override public int compare Object Object Nullable Tuple nt Nullable Tuple Nullable Tuple nt Nullable Tuple int rc either null handle differently nt Null nt Null rc compare Tuple Tuple nt get Value Type Tuple nt get Value Type else sorting purposes two nulls equal nt Null nt Null rc else nt Null rc else rc Whole Tuple Asc rc return rc private int compare Tuple Tuple Tuple int sz size int sz size sz sz return else sz sz return else int sz try int c Data Type compare get get c Whole Tuple Asc c else Whole Tuple Asc c return c catch Exec Exception e throw new Runtime Exception Unable compare tuples e return Override public int hash Code int hash Iterator Object Fields iterator Next Object next null hash hash hash Code return hash Override public void write Data Output throws Exception write Byte Data Type int sz size write Int sz int sz Data Reader Writer write Datum Fields get Override public void read Fields Data Input throws Exception Clear fields case reused Fields clear Make sure tuple byte b read Byte b Data Type int err Code String msg Unexpected data reading tuple binary file throw new Exec Exception msg err Code Exception Read number fields int sz read Int int sz try append Data Reader Writer read Datum catch Exec Exception ee throw ee public static Class extends Tuple Raw Comparator get Comparator Class return Default Tuple Raw Comparator class
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import java util Array List import java util List import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema import org apache parser Source Location get one elements tuple bag case Tuple int b bag b int b b float c int number represents uid Dereference int dereference single column tuple gives field Dereference Tuple int c int dereference one column gives tuple Dereference Dereference b bag b b float dereference bag gives bag public class Dereference Expression extends Column Expression private List Object raw Columns new Array List Object private List Integer columns new Array List Integer column input bag project references Count zero based public Dereference Expression Operator Plan plan super Dereference plan plan add public Dereference Expression Operator Plan plan int col Num plan columns add col Num public Dereference Expression Operator Plan plan List Integer column Nums plan columns add column Nums public void set Raw Columns List Object cols raw Columns add cols link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit public List Integer get Bag Columns return columns public void set Bag Columns List Integer columns columns columns raw Columns clear n need Override public boolean Equal Operator throws Frontend Exception null instanceof Dereference Expression Dereference Expression po Dereference Expression po columns size columns size return false return po columns contains columns get Referred Expression Equal po get Referred Expression else return false public Logical Expression get Referred Expression throws Frontend Exception plan get Successors size throw new Frontend Exception Could find related project Expression Dereference return Logical Expression plan get Successors get public String String String Builder msg new String Builder msg append Name name Type field Schema null msg append Data Type find Type Name field Schema type else msg append null msg append Uid field Schema null msg append field Schema uid else msg append null msg append Column columns msg append return msg String Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema Logical Expression successor Logical Expression plan get Successors get Logical Field Schema pred successor get Field Schema pred null pred type Data Type Logical Schema inner Schema null pred schema null inner Schema new Logical Schema Get tuple inner schema Logical Schema orig Schema pred schema get Field schema Slice tuple inner schema raw Columns Empty columns translate Alias Pos orig Schema raw Columns int column columns orig Schema null orig Schema size inner Schema add Field orig Schema get Field column else inner Schema add Field new Logical Field Schema null null Data Type Logical Schema bag Schema new Logical Schema bag Schema add Field new Logical Schema Logical Field Schema null inner Schema Data Type Logical Expression get Next Uid field Schema new Logical Schema Logical Field Schema null bag Schema Data Type Logical Expression get Next Uid uid Field Schema field Schema merge Uid uid Field Schema else Dereference field tuple pred schema null raw Columns Empty columns translate Alias Pos pred schema raw Columns pred schema null pred schema size columns size field Schema pred schema get Field columns get else Logical Schema inner Schema new Logical Schema String alias pred alias int column columns inner Schema add Field pred schema get Field column String sub Alias pred schema get Field column alias sub Alias null sub Alias alias alias sub Alias field Schema new Logical Schema Logical Field Schema alias inner Schema Data Type Logical Expression get Next Uid else field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema else field Schema new Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema private List Integer translate Alias Pos Logical Schema schema List Object raw Columns throws Frontend Exception List Integer columns new Array List Integer Object raw Column raw Columns raw Column instanceof Integer schema null Integer raw Column schema size Integer raw Column throw new Frontend Exception Index raw Column range schema schema String false columns add Integer raw Column else schema null int pos schema get Field Position String raw Column pos columns add pos continue else throw new Frontend Exception find field raw Column schema String false return columns Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception List Integer columns Copy new Array List Integer get Bag Columns Dereference Expression copy new Dereference Expression lg Exp Plan columns Copy List Object raw Columns Copy new Array List Object raw Columns copy set Raw Columns raw Columns Copy one input expected Logical Expression input Logical Expression plan get Successors get Logical Expression input Copy input deep Copy lg Exp Plan lg Exp Plan add input Copy lg Exp Plan connect copy input Copy copy set Location new Source Location location return copy public List Object get Raw Columns return raw Columns
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Hash Set import java util Iterator import java util Set import org apache Eval Func import org apache Exception import org apache backend executionengine Exec Exception import org apache data Bag Factory import org apache data Data Bag import org apache data Tuple import org apache data Tuple Factory takes two bags arguments compares tuples one bag returned fields bags returned match empty bag returned two records match p implementation assumes bags passed function fit entirely memory simultaneously case still function strong strong slow public class extends Eval Func Data Bag Tuple Factory Tuple Factory Tuple Factory get Instance Bag Factory Bag Factory Bag Factory get Instance Compares tuple two fields Emits differences param input tuple exactly two fields throws Exception exactly two fields tuple Override public Data Bag exec Tuple input throws Exception input size int err Code String msg expected two inputs received input size inputs throw new Exec Exception msg err Code Exception try Data Bag output Bag Factory new Default Bag Object input get instanceof Data Bag Data Bag bag Data Bag Data Bag bag Data Bag input get compute Diff bag bag output else Object input get Object input get equals output add Tuple Factory new Tuple output add Tuple Factory new Tuple return output catch Exec Exception ee throw ee private void compute Diff Data Bag bag Data Bag bag Data Bag emit Build two hash tables probe first one make assumption distinct set keys bag fit memory Set Tuple new Hash Set Tuple Iterator Tuple bag iterator Next add next Set Tuple new Hash Set Tuple Iterator Tuple bag iterator Next add next Tuple contains emit add Tuple contains emit add Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java io Buffered Input Stream import java io Data Input Stream import java io Data Output Stream import java io Exception import java io File import java io File Input Stream import java io File Found Exception import java io Exception import java util Array List import java util Arrays import java util Collections import java util Hash Set import java util Iterator import java util Linked List import java util List Iterator import java util Tree Set import org apache commons logging Log import org apache commons logging Log Factory import org apache Counters import org apache Warning unordered collection Tuples multiples Data stored without duplicates comes time spill data sorted written disk must also sorted upon first read otherwise spill happened iterators would way find place new file data stored Hash Set time sort placed Array List sorted Dispite machinations found faster storing Tree Set public class Distinct Data Bag extends Default Abstract Bag private static final long serial Version private static final Log log Log Factory get Log Distinct Data Bag class private static final Inter Sedes Inter Sedes Factory get Inter Sedes Instance public Distinct Data Bag Contents new Hash Set Tuple Override public boolean Sorted return false Override public boolean Distinct return true Override public long size Spill Files null Spill Files size need racalculate size guarantee count unique entries including disk Iterator Tuple iter iterator int new Size iter Next new Size iter next synchronized Contents n want adds change numbers lock may need cover method Size new Size return Size Override public Iterator Tuple iterator return new Distinct Data Bag Iterator Override public void add Tuple synchronized Contents Contents add Size mark Spillable Necessary Override public long spill Make sure something spill n create empty files make mess Contents size return Lock container spill iterators n trying read mucking container long spilled synchronized Contents Data Output Stream null try get Spill File catch Exception ioe remove last file spilled array added File create Tmp File threw Exception warn Unable create tmp file spill disk Warning ioe return try already started reading already sorted array list need sort writing Contents instanceof Array List Iterator Tuple Contents iterator Next write Datum next Data Type spilled spill every records spilled x fff report Progress else Tuple array new Tuple Contents size Contents Array array Arrays sort array int array length array write spilled spill every records spilled x fff report Progress flush close null Contents clear catch Throwable e Remove last file spilled array since failed write Spill Files remove Spill Files size warn Unable spill contents disk Warning e return finally null try close catch Exception e warn Error closing spill Warning e Increment spill count inc Spill Count Counters return spilled iterator handles getting next tuple bag iterator couple issues deal First data stored combination memory disk Second bag may asked spill iterator reading means pointing someplace memory suddenly need switch disk file private class Distinct Data Bag Iterator implements Iterator Tuple private class Container implements Comparable Container public Tuple tuple public int file Num Override Suppress Warnings unchecked public int compare Container return tuple compare tuple Override public boolean equals Object obj obj instanceof Container return tuple equals Container obj tuple else return false Override public int hash Code return tuple hash Code buffer tuple easy way next tell whether another tuple available read private Tuple Buf null private int Memory Ptr private Tree Set Container Merge Tree null private Array List Data Input Stream Streams null private int Cntr Suppress Warnings unchecked Distinct Data Bag Iterator first read need sort data synchronized Contents Contents instanceof Hash Set pre Merge first reader need sort data case gets dumped us Array List Tuple l new Array List Tuple Contents Collections sort l Contents l Override public boolean Next See find tuple buffer Buf next return Buf null Override public Tuple next report progress every times next much faster using mod Cntr x ff report Progress one buffer use one Buf null Tuple Buf Buf null return Check see need read memory boolean spilled false synchronized Contents Spill Files null Spill Files size return read Memory Memory Ptr Contents size spilled true Check see reading memory spilled spilled Data Input Stream need open new file fast forward past tuples already read need place first tuple file priority queue Whatever tuples memory already queue fine guaranteed ahead point fast foward guaranteed file want read fast forward last element Spill Files n support calls add calls iterator spill wo n create empty files try new Data Input Stream new Buffered Input Stream new File Input Stream Spill Files get Spill Files size Streams null Merge Tree new Tree Set Container n files spill Streams new Array List Data Input Stream Streams add catch File Found Exception fnfe ca n find spill file never happen String msg Unable find spill file log fatal msg fnfe throw new Runtime Exception msg fnfe Fast forward past tuples already put queue int Memory Ptr try read Datum catch Exception eof never happen means n dump tuples disk throw new Runtime Exception Ran tuples read prematurely eof catch Exception ioe String msg Unable find spill file log fatal msg ioe throw new Runtime Exception msg ioe Memory Ptr Add next tuple file queue add Queue null Spill Files size Fall read next entry priority queue spill files need read next tuple one files memory return read Tree implemented Override public void remove private Tuple read Tree Merge Tree null First read need set queue array file streams Merge Tree new Tree Set Container Add one size case spill later Streams new Array List Data Input Stream Spill Files size Iterator File Spill Files iterator Next try Data Input Stream new Data Input Stream new Buffered Input Stream new File Input Stream next Streams add Add first tuple file merge queue add Queue null Streams size catch File Found Exception fnfe ca n find spill file never happen String msg Unable find spill file log fatal msg fnfe throw new Runtime Exception msg fnfe Prime one memory Contents size add Queue null Merge Tree size return null Pop top one queue Container c Merge Tree first Merge Tree remove c Add next tuple whereever read queue Buffer tuple returning reusing c Tuple c tuple add Queue c c file Num return private void add Queue Container c int file Num c null c new Container c file Num file Num file Num Need read memory may spilled since tuple put queue hence memory might empty n care wo n add memory synchronized Contents c tuple read Memory c tuple null find unique entry add queue Otherwise ignore keep reading Merge Tree add c return c tuple null return Read next tuple indicated file Data Input Stream Streams get file Num null still data file try c tuple Tuple read Datum find unique entry add queue Otherwise ignore keep reading run tuples read fine wo n add new one file Merge Tree add c return catch Exception eof tuples file Set slot array null n keep trying read file try close catch Exception e log warn Failed close spill file e Streams set file Num null return catch Exception ioe String msg Unable find spill file log fatal msg ioe throw new Runtime Exception msg ioe true Function assumes reader lock already held enter function private Tuple read Memory Contents size return null Memory Ptr Contents size return Array List Tuple Contents get Memory Ptr else return null Pre merge many spill files avoids issue large fan merge Experimentation hadoop team shown optimal number spill files function modifies Spill Files array assumes write lock already held unlock Tuples reconstituted tuples evaluated rewritten tuples expensive n know read tuples file otherwise function slightly different one Sorted Data Bag uses Tree Set instead Priority private void pre Merge Spill Files null Spill Files size return max spill files gather max spill files together merge one file remove others Spill Files new spill files attached end list keep going get small enough number without much concern uneven size merges Convert Spill Files linked list since removing pieces middle want efficiently try Linked List File new Linked List File Spill Files Linked List File files Delete new Linked List File size List Iterator File list Iterator Streams new Array List Data Input Stream Merge Tree new Tree Set Container int j j j try File f next Data Input Stream new Data Input Stream new Buffered Input Stream new File Input Stream f Streams add add Queue null Streams size remove files Delete add f catch File Found Exception fnfe ca n find spill file neer happen String msg Unable find spill file log fatal msg fnfe throw new Runtime Exception msg fnfe Get new spill file adds one end spill files list need append linked list well still move linked list back spill files Data Output Stream null try get Spill File add Spill Files get Spill Files size Tuple read Tree null write flush catch Exception ioe String msg Unable find spill file log fatal msg ioe throw new Runtime Exception msg ioe finally null try close catch Exception e warn Error closing spill Warning e delete files merged new files File f files Delete f delete false log warn Failed delete spill file f get Path clear list finalize delete files Spill Files assigned new value Spill Files clear move new list back spill files array Spill Files new File List finally Reset Streams Merge allocated properly regular merging Streams null Merge Tree null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java math Big Decimal import java math Big Integer import java math Rounding Mode import org apache commons logging Log import org apache commons logging Log Factory import org apache Warning import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception public class Divide extends Binary Expression Operator private static final long serial Version public static final short private static final Log Log Factory get Log Divide class public Divide Operator Key k super k public Divide Operator Key k int rp super k rp Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Divide Override public String name return Divide Data Type find Type Name result Type Key String method used invoke appropriate method Java provide generic dispatch protected Number divide Number Number b byte data Type throws Exec Exception switch data Type case Data Type return Double value Double Double b case Data Type return Integer value Integer Integer b case Data Type return Long value Long Long b case Data Type return Float value Float Float b case Data Type return Big Integer divide Big Integer b case Data Type return big Decimal Divide Scale b default throw new Exec Exception called unsupported Number class Data Type find Type Name data Type private Number big Decimal Divide Scale Number Number b Using result scaling Hive See Arithmetic Rules https cwiki apache org confluence download attachments Hive Decimal Precision Scale Support pdf int result Scale Math max Big Decimal scale Big Decimal b precision Debug Enabled debug bigdecimal divide using result Scale result scale return Big Decimal divide Big Decimal b result Scale Rounding Mode method used invoke appropriate method Java provide generic dispatch protected boolean equals Zero Number byte data Type throws Exec Exception switch data Type case Data Type return Double equals case Data Type return Integer equals case Data Type return Long equals case Data Type return Float equals f case Data Type return Big Integer equals Big Integer case Data Type return Big Decimal equals Big Decimal default throw new Exec Exception Called unsupported Number class Data Type find Type Name data Type protected Result generic Get Next byte data Type throws Exec Exception Result r accum Child null data Type r null return r byte status Result res res lhs get Next data Type status res return Status status Status res result null return res Number left Number res result res rhs get Next data Type status res return Status status Status res result null return res Number right Number res result equals Zero right data Type Logger null Logger warn Divide zero Converting Warning res result null else res result divide left right data Type return res Override public Result get Next Double throws Exec Exception return generic Get Next Data Type Override public Result get Next Float throws Exec Exception return generic Get Next Data Type Override public Result get Next Integer throws Exec Exception return generic Get Next Data Type Override public Result get Next Long throws Exec Exception return generic Get Next Data Type Override public Result get Next Big Integer throws Exec Exception return generic Get Next Data Type Override public Result get Next Big Decimal throws Exec Exception return generic Get Next Data Type Override public Divide clone throws Clone Supported Exception Divide clone new Divide new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location Divide Operator public class Divide Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Divide Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super Divide plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Divide Expression Divide Expression ao Divide Expression return ao get Lhs Equal get Lhs ao get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null get Lhs get Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Divide Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Iterator import org apache Accumulator import org apache Algebraic import org apache Eval Func import org apache Exception import org apache backend executionengine Exec Exception import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl logical Layer schema Schema method never used directly use link public class Double Avg extends Eval Func Double implements Algebraic Accumulator Double private static Tuple Factory Tuple Factory Tuple Factory get Instance Override public Double exec Tuple input throws Exception try Double sum sum input sum null either handed empty bag bag filled nulls return null case return null double count count input Double avg null count avg new Double sum count return avg catch Exec Exception ee throw ee Override public String get Initial return Initial class get Name Override public String get Intermed return Intermediate class get Name Override public String get Final return Final class get Name static public class Initial extends Eval Func Tuple Override public Tuple exec Tuple input throws Exception try Tuple Tuple Factory new Tuple input bag one tuple containing column trying avg Data Bag bg Data Bag input get Double null bg iterator Next Tuple tp bg iterator next Double tp get set null set else set return catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing average get Class get Simple Name throw new Exec Exception msg err Code Exception e static public class Intermediate extends Eval Func Tuple Override public Tuple exec Tuple input throws Exception try Data Bag b Data Bag input get return combine b catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing average get Class get Simple Name throw new Exec Exception msg err Code Exception e static public class Final extends Eval Func Double Override public Double exec Tuple input throws Exception try Data Bag b Data Bag input get Tuple combined combine b Double sum Double combined get sum null return null double count Long combined get Double avg null count avg new Double sum count return avg catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing average get Class get Simple Name throw new Exec Exception msg err Code Exception e static protected Tuple combine Data Bag values throws Exec Exception double sum long count combine called Intermediate Final either case Initial would called would sent valid tuples Hence n need check incoming bag empty Tuple output Tuple Factory new Tuple boolean saw Non Null false Iterator Tuple values iterator Next Tuple next Double Double get count nulls avg contributing departure performance implemented inspecting size bag null else saw Non Null true sum count Long get saw Non Null output set new Double sum else output set null output set Long value count return output static protected long count Tuple input throws Exec Exception Data Bag values Data Bag input get Iterator values iterator long cnt Next Tuple Tuple next null size get null cnt return cnt static protected Double sum Tuple input throws Exec Exception Exception Data Bag values Data Bag input get handed empty bag return values null values size return null double sum boolean saw Non Null false Iterator Tuple values iterator Next Tuple next try Double Double get null continue saw Non Null true sum catch Runtime Exception exp int err Code String msg Problem computing sum doubles throw new Exec Exception msg err Code Exception exp saw Non Null return new Double sum else return null Override public Schema output Schema Schema input return new Schema new Schema Field Schema null Data Type Accumulator interface private Double intermediate Sum null private Double intermediate Count null Override public void accumulate Tuple b throws Exception try Double sum sum b sum null return set default values intermediate Sum null intermediate Count null intermediate Sum intermediate Count double count Long count b count intermediate Count count intermediate Sum sum catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing average get Class get Simple Name throw new Exec Exception msg err Code Exception e Override public void cleanup intermediate Sum null intermediate Count null Override public Double get Value Double avg null intermediate Count null intermediate Count avg new Double intermediate Sum intermediate Count return avg
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin method never used directly use link public class Double Sum extends Algebraic Double Math Base public Double Sum set Op public static class Intermediate extends Algebraic Double Math Base Intermediate Override public get Op return public static class Final extends Algebraic Double Math Base Final Override public get Op return
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache parser import java io Exception import java io Reader import java util Abstract List import java util Array List import java util Arrays import java util Hash Map import java util List import org antlr runtime Common Token Stream import org antlr runtime Recognition Exception import org antlr runtime tree Common Tree import org antlr runtime tree Common Tree Node Stream import org antlr runtime tree Tree import org apache Load Func import org apache impl Context import org apache tools pigscript parser Parse Exception import org apache tools pigscript parser Script Parser public class Dry Run Grunt Parser extends Script Parser private String Builder sb new String Builder private Context context private Tree parser Tree private String source private int Skip private boolean done false private boolean Macro false public Dry Run Grunt Parser Reader stream String source Context context super stream source source context context public String get Result return sb String public boolean parse Stop Error throws Exception done false done try parse catch Parse Exception e throw new Parser Exception Dry run parsing failed e return Macro Override public void prompt Override protected void quit done true Override protected void print Aliases throws Exception Override protected void process Fs Command String cmd Tokens throws Exception String cmds Load Func join Abstract List String Arrays List cmd Tokens sb append fs append cmds append n Override protected void process Sh Command String cmd Tokens throws Exception String cmds Load Func join Abstract List String Arrays List cmd Tokens sb append sh append cmds append n Override protected void process Command String cmd throws Exception sb append sql append cmd append n Override protected void process Describe String alias throws Exception sb append describe append alias append n Override protected void process Explain String alias String script boolean Verbose String format String target List String params List String files throws Exception Parse Exception sb append explain script null sb append script append script append target null sb append append target append Verbose sb append brief format null format equals dot sb append dot format null format equals xml sb append xml params null String param params sb append param append param append files null String file files sb append param file append file append alias null sb append alias sb append n Override protected void process Register String jar throws Exception sb append register append jar append n Override protected void process Register String path String scripting Engine String namespace throws Exception Parse Exception sb append register append path append scripting Engine null sb append using append scripting Engine namespace null sb append append namespace sb append n Override protected void process Set String key String value throws Exception Parse Exception sb append set append key append append value append n Override protected void process Set throws Exception sb append set n Override protected void process Cat String path throws Exception sb append cat append path append n Override protected void process String path throws Exception sb append cd append path append n Override protected void process Dump String alias throws Exception sb append dump append alias append n Override protected void process Kill String jobid throws Exception sb append kill append jobid append n Override protected void process String path throws Exception sb append ls path null sb append append path sb append n Override protected void process throws Exception sb append pwd n Override protected void print Help Override protected void process History boolean Numbers Override protected void process Move String src String dst throws Exception sb append mv append src append append dst append n Override protected void process Copy String src String dst throws Exception sb append cp append src append append dst append n Override protected void process Copy Local String src String dst throws Exception sb append Copy Local append src append append dst append n Override protected void process Copy Local String src String dst throws Exception sb append Copy Local append src append append dst append n Override protected void process Mkdir String dir throws Exception sb append mkdir append dir append n Override protected void process String cmd throws Exception int start get Line Number String Builder blder new String Builder int start blder append n cmd char cmd length cmd blder append cmd cmd blder String Common Token Stream token Stream Query Parser Driver tokenize cmd source Tree ast null try ast Query Parser Driver parse token Stream catch Runtime Exception ex throw new Parser Exception ex get Message Macro List Common Tree import Nodes new Array List Common Tree List Common Tree macro Nodes new Array List Common Tree List Common Tree inline Nodes new Array List Common Tree Query Parser Driver traverse Import ast import Nodes Query Parser Driver traverse ast macro Nodes inline Nodes import Nodes Empty macro Nodes Empty inline Nodes Empty Macro true parser Tree null parser Tree ast else int n ast get Child Count int n parser Tree add Child ast get Child Common Tree dup Common Tree parser Tree dup Node dup add Children Common Tree parser Tree get Children Query Parser Driver driver new Query Parser Driver context new Hash Map String String Tree new Ast driver expand Macro dup Common Tree Node Stream nodes new Common Tree Node Stream new Ast Ast Printer walker new Ast Printer nodes try walker query catch Recognition Exception e throw new Parser Exception Failed print command cmd e String result walker get Result trim result Empty String lines result split n int Skip lines length sb append lines append n Skip Override protected void process Remove String path String opt throws Exception opt null opt equals Ignore Case force sb append rm else sb append rmf sb append path append n Override protected void process Illustrate String alias String script String target List String params List String files throws Exception Parse Exception sb append illustrate script null sb append script append script append target null sb append append target append params null String param params sb append param append param append files null String file files sb append param file append file append alias null sb append alias sb append n Override protected void process Script String script boolean batch List String params List String files throws Exception Parse Exception batch sb append exec else sb append run params null String param params sb append param append param append files null String file files sb append param file append file append sb append script append n Override protected void print Clear Override protected void process Default String key String value throws Exception Override protected void process Declare String key String value throws Exception
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer plans import org apache backend hadoop executionengine map Reduce Layer Map Reduce Oper import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Collected Group import org apache backend hadoop executionengine physical Layer relational Operators import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Merge Cogroup import org apache backend hadoop executionengine physical Layer relational Operators Merge Join import org apache backend hadoop executionengine physical Layer relational Operators Partial Agg import org apache backend hadoop executionengine physical Layer relational Operators Poisson Sample import org apache backend hadoop executionengine physical Layer relational Operators Reservoir Sample import org apache backend hadoop executionengine physical Layer relational Operators Stream import org apache backend hadoop executionengine tez plan operator Build Bloom Rearrange Tez import org apache impl plan Depth First Walker import org apache impl plan Visitor Exception visitor visits Plan following Oper map plan reduce plan Oper end input flag present marks Oper whether map end input flag set reduce end input flag set public class End Input Setter extends Op Plan Visitor param plan plan visit public End Input Setter Oper Plan plan super plan new Depth First Walker Map Reduce Oper Oper Plan plan Override public void visit Op Map Reduce Oper mr throws Visitor Exception End Input Checker checker new End Input Checker mr map Plan checker visit checker End Input Present mr set End Input Map true checker new End Input Checker mr reduce Plan checker visit checker End Input Present mr set End Input Reduce true public static class End Input Checker extends Phy Plan Visitor private boolean end Input Flag false public End Input Checker Physical Plan plan super plan new Depth First Walker Physical Operator Physical Plan plan Override public void visit Stream Stream stream throws Visitor Exception stream present end Input Flag true Override public void visit Merge Join Merge Join join throws Visitor Exception merge join present end Input Flag true Override public void visit Collected Group Collected Group mg throws Visitor Exception map side group present end Input Flag true Override public void visit Merge Co Group Merge Cogroup merge Co Grp throws Visitor Exception end Input Flag true Override public void visit Partial Agg Partial Agg part Agg throws Visitor Exception end Input Flag true Override public void visit Reservoir Sample Reservoir Sample reservoir Sample throws Visitor Exception end Input Flag true Override public void visit Poisson Sample Poisson Sample poisson Sample throws Visitor Exception end Input Flag true Override public void visit foreach throws Visitor Exception try foreach need End Input Processing end Input Flag true catch Exception e throw new Visitor Exception e Override public void visit Local Rearrange Local Rearrange lr throws Visitor Exception lr instanceof Build Bloom Rearrange Tez end Input Flag true super visit Local Rearrange lr return end input present public boolean End Input Present return end Input Flag
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location Equality test expression public class Equal Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Equal Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super Equal plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Equal Expression Equal Expression eo Equal Expression return eo get Lhs Equal get Lhs eo get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Equal Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java util Hash Map import org apache commons logging Log import org apache commons logging Log Factory import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception public class Equal Expr extends Binary Comparison Operator private static final long serial Version transient private final Log log Log Factory get Log get Class public Equal Expr Operator Key k k public Equal Expr Operator Key k int rp super k rp result Type Data Type Override public String name return Equal Data Type find Type Name result Type Key String Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Equal Override public Result get Next Boolean throws Exec Exception try Result left right switch operand Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type Result r accum Child null operand Type r null return r left lhs get Next operand Type right rhs get Next operand Type return Comparison left right default int err Code String msg get Class get Simple Name know handle type Data Type find Type Name operand Type throw new Exec Exception msg err Code Exception catch Runtime Exception e throw new Exec Exception exception executing String e String Exception e Suppress Warnings unchecked private Result Comparison Result left Result right throws Exec Exception left return Status Status return left right return Status Status return right either operand null result null left result null right result null left result null left return Status Status return left left result instanceof Comparable right result instanceof Comparable Comparable left result compare right result left result Boolean else left result Boolean else left result instanceof Hash Map right result instanceof Hash Map Hash Map left Map Hash Map left result Hash Map right Map Hash Map right result left Map equals right Map left result Boolean else left result Boolean else throw new Exec Exception left side right side different types illustrator Markup null left result Boolean left result return left Override public Equal Expr clone throws Clone Supported Exception Equal Expr clone new Equal Expr new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import org apache commons logging Log import org apache commons logging Log Factory import org apache backend hadoop executionengine physical Layer Logger import org apache backend hadoop executionengine physical Layer Progressable import org apache builtin Output Schema import org apache classification Interface Audience import org apache classification Interface Stability import org apache data Tuple import org apache impl Context import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl util Context import org apache impl util Utils import org apache parser Parser Exception import java io Exception import java lang reflect import java util Hash Map import java util List import java util Map class used implement functions applied fields dataset function applied Tuple set programmer make assumptions state maintained invocations exec method since runtime schedule localize invocations based information provided runtime programmer also make assumptions many times class instantiated since may instantiated multiple times front back end Interface Audience Public Interface Stability Stable public abstract class Eval Func Reporter send heartbeats Hadoop exec take seconds link Progressable progress called occasionally avoid timeouts Default Hadoop timeout seconds protected Progressable reporter Logging object Log calls made front end sent log client Log calls made backend sent stdout seen Hadoop logs protected Log log Log Factory get Log get Class Logger aggregating warnings warnings sent user logged via link Logger warn protected Logger Logger private static int next Schema Id assigning unique ids columns protected String get Schema Name String name Schema input String alias name input null input get Aliases size alias input get Aliases iterator next alias next Schema Id return alias Return type instance Eval Func protected Type return Type Eval Func schema type see link Eval Func get Schema Type public static enum Schema Type default field type last field udf schema type vararg public Eval Func Resolve concrete type Eval Func Build map type param type class hierarchy current class Eval Func Map Type Variable Type types Type Variable new Hash Map Type Variable Type Class cls get Class Type type cls get Generic Superclass cls cls get Superclass Eval Func class Assignable cls Type Variable extends Class type Params cls get Type Parameters type instanceof Parameterized Type Parameterized Type p Type Parameterized Type type Type type Args p Type get Actual Type Arguments int type Params length types Type Variable put type Params type Args type cls get Generic Superclass cls cls get Superclass Use type param type map determine concrete type Eval Func Type target Type Eval Func class get Type Parameters target Type null target Type instanceof Type Variable target Type types Type Variable get target Type target Type null target Type instanceof Generic Array Type target Type instanceof Wildcard Type throw new Runtime Exception String format Failed determine concrete type type parameter Eval Func derived class get Class get Name return Type target Type Type check initial intermediate final functions instanceof Algebraic Algebraic Algebraic String err Msg function get Class get Name expected type get Return Type Spec new Func Spec get Initial Tuple class throw new Runtime Exception Initial err Msg get Return Type Spec new Func Spec get Intermed Tuple class throw new Runtime Exception Intermediate err Msg get Return Type Spec new Func Spec get Final equals return Type throw new Runtime Exception Final err Msg private Type get Return Type Spec Func Spec func Spec try return Eval Func Context instantiate Func Spec func Spec get Return Type catch Class Cast Exception e throw new Runtime Exception func Spec specify eval func e Get Type Eval Func returns return Type public Type get Return Type return return Type report progress made otherwise hadoop times seconds working one outer tuple Utility method allow report progress exec take seconds link Progressable progress called occasionally avoid timeouts Default Hadoop timeout seconds public final void progress reporter null reporter progress else warn reporter object provided Warning Issue warning Warning messages aggregated reported user param msg String message warning param warning Enum type warning public final void warn String msg Enum warning Enum Logger null Logger warn msg warning Enum else log warn logger object provided get Class get Name msg Placeholder cleanup performed end User defined functions override Default implementation op public void finish callback method must implemented subclasses method invoked every Tuple given dataset Since dataset may divided variety ways programmer make assumptions state maintained invocations method param input Tuple processed return result type throws Exception abstract public exec Tuple input throws Exception Report schema output make use error checking optimization planning schema input data provided p default implementation interprets link Output Schema annotation one present Otherwise returns code null code known output schema param input Schema input return Schema output public Schema output Schema Schema input Output Schema schema get Class get Annotation Output Schema class try return schema null null Utils get Schema String schema value catch Parser Exception e throw new Runtime Exception e function overriden return true functions return values asynchronously Currently never attempts execute function asynchronously return true function executed asynchronously Deprecated public boolean Asynchronous return false public Progressable get Reporter return reporter Set reporter Called provide reference reporter param reporter Hadoop reporter public final void set Reporter Progressable reporter reporter reporter Allow specify type specific implementations example implementation arithmetic sum might int float implementations since integer arithmetic performs much better floating point arithmetic typechecker call method using returned list plus schema function input data decide implementation use return List containing Func Spec objects representing Eval Func class handle inputs corresponding schema objects Func Spec constructed schema describes input implementation example sum function would return two elements list ol li Func Spec get Class get Name new Schema new Schema Field Schema null Data Type li Func Spec Int Sum get Class get Name new Schema new Schema Field Schema null Data Type ol would indicate main implementation used doubles special implementation Int Sum used ints public List Func Spec get Arg Func Mapping throws Frontend Exception return null Allow specify list hdfs files would like placed distributed cache files put cache every job used default implementation returns null return list files public List String get Cache Files return null Allow specify list local files would like placed distributed cache files put cache every job used Check link Func Utils utility function facilitate default implementation returns null return list files public List String get Ship Files return null public Logger get Logger return Logger Set Logger object Called provide reference param Logger Logger object public final void set Logger Logger Logger Logger Logger public Log get Logger return log private Schema input Schema Internal null method called front end back end pass unique signature link Eval Func signature used store link Context information link Eval Func needs store various method invocations front end back end param signature unique signature identify Eval Func public void set Context Signature String signature method internal use called core front end back end setup right input schema Eval Func public void set Input Schema Schema input input Schema Internal input method intended called user link Eval Func get input schema Eval Func public Schema get Input Schema return input Schema Internal Returns link Schema Type Eval Func User defined functions override method return link Schema Type case last Field Schema added Schema link get Arg Func Mapping considered vararg field return schema type public Schema Type get Schema Type return Schema Type Whether evaluated compile time inputs constant applicable however access hdfs file available compile time false return Whether compile time calculation allowed default false ensure legacy get right behavior public boolean allow Compile Time Calculation return false public boolean need End Input Processing return false public void set End Input boolean end Input called front end back end execution return link Load Caster associated eval Returning null indicates casts bytearray pick one associated parameters come loadcaster type throws Exception exception Load Caster public Load Caster get Load Caster throws Exception return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache pen import java io Exception import java util Collection import java util Hash Map import java util Iterator import java util Linked List import java util List import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Execution Engine import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache data Data Bag import org apache data Tuple import org apache impl Context import org apache impl io File Localizer import org apache impl logical Layer Frontend Exception import org apache impl util Identity Hash Set import org apache newplan Operator import org apache newplan logical relational import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Sort import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache pen util Display Examples import org apache pen util Lineage Tracer class used generate example tuples purpose public class Example Generator Logical Plan plan Logical Plan new Plan Map Load Data Bag base Data null Context Context Physical Plan phys Plan Physical Plan Resetter phys Plan Reseter private Execution Engine exec Engine private Local Map Reduce Simulator local Runner Log log Log Factory get Log get Class private int private Map Operator Physical Operator log Phy Map private Map Physical Operator Operator po Load Log Map private Map Physical Operator Operator po Log Map private Hash Map Physical Operator Collection Identity Hash Set Tuple po Eqclasses Map private Lineage Tracer lineage private Map Operator Data Bag log Data Map null private Map Map Logical Relational Operator Data Bag Inner Log Data Map Map Map Logical Relational Operator Physical Operator Inner Log Phy Map Map Limit Long ori Limit Map null Map Load Logical Schema po Load Schema Map public Example Generator Logical Plan plan Context hadoop Context plan plan Context new Context Exec Type hadoop Context get Properties Context hadoop Context Context set Exec Type Exec Type File Localizer set Initialized false try Context connect catch Exec Exception e log error Error connecting cluster e get Localized Message exec Engine new Execution Engine Context local Runner new Local Map Reduce Simulator po Load Schema Map new Hash Map Load Logical Schema public Lineage Tracer get Lineage return lineage public Map Operator Physical Operator get Log Phy Map return log Phy Map public void set Max Records int max max public Map Operator Data Bag get Examples throws Exception Interrupted Exception Context get Properties get Property usenewlogicalplan true equals false throw new Exec Exception must use new logical plan Context Illustrator true phys Plan compile Plan plan phys Plan Reseter new Physical Plan Resetter phys Plan List Operator loads new Plan get Sources List Physical Operator p Roots phys Plan get Roots loads size p Roots size throw new Exec Exception Logical Physical plans different number roots log Phy Map exec Engine get Log Phy Map Inner Log Phy Map exec Engine get Inner Log Phy Map plan po Load Log Map new Hash Map Physical Operator Operator log Data Map new Hash Map Operator Data Bag po Log Map new Hash Map Physical Operator Operator set foreach inner data map Inner Log Data Map new Hash Map Map Logical Relational Operator Data Bag Map Entry Map Logical Relational Operator Physical Operator entry Inner Log Phy Map entry Set Map Logical Relational Operator Data Bag inner Map new Hash Map Logical Relational Operator Data Bag Inner Log Data Map put entry get Key inner Map Operator load loads po Load Log Map put log Phy Map get load load boolean Limit false Operator lo log Phy Map key Set po Log Map put log Phy Map get lo lo Limit lo instanceof Limit Limit true try read Base Data loads catch Exec Exception e log error Error reading data e get Message throw e catch Frontend Exception e log error Error reading data e get Message throw new Runtime Exception e Map Operator Data Bag derived Data null create derived data trim base data Lineage Trimming Visitor trimmer new Lineage Trimming Visitor new Plan base Data log Phy Map phys Plan Context trimmer visit base Data trimmer get Base Data System println Obtained first level derived trimmed data create new derived data trimmed basedata derived Data get Data phys Plan System println Got new derived data trimmed base data augment base data Augment Base Data Visitor augment new Augment Base Data Visitor new Plan log Phy Map base Data derived Data augment visit base Data augment get New Base Data System println Obtained augmented base data create new derived data trim base data augmenting base data synthetic tuples trimmer new Lineage Trimming Visitor new Plan base Data log Phy Map phys Plan Context trimmer visit base Data trimmer get Base Data System println Final trimming create final version derived Data give output derived Data get Data phys Plan System println Obtaining final derived data output Limit augment set Limit augment visit base Data augment get New Base Data ori Limit Map augment get Ori Limit Map derived Data get Data Display Examples print Simple plan get Leaves get derived Data derived Data System println Display Examples print Tabular new Plan derived Data Inner Log Data Map Context Illustrator false return derived Data private void read Base Data List Operator loads throws Exception Interrupted Exception Frontend Exception Exec Exception Physical Plan Phy Plan new Physical Plan Operator op loads Logical Schema schema Load op get Schema schema null throw new Exec Exception Example Generator requires schema Please provide schema loading data po Load Schema Map put Load log Phy Map get op schema Phy Plan add log Phy Map get op base Data null Map Operator Data Bag result get Data Phy Plan base Data new Hash Map Load Data Bag Operator lo result key Set lo instanceof Load base Data put Load lo result get lo Physical Plan compile Plan Logical Plan plan throws Exec Exception Frontend Exception new Plan new Logical Plan plan plan optimize Context Physical Plan result exec Engine compile plan null return result public Map Operator Data Bag get Data throws Exception Interrupted Exception return get Data phys Plan private Map Operator Data Bag get Data Physical Plan plan throws Exception Exception Interrupted Exception get data physical plan possibly trimmed one branch lineage new Lineage Tracer Illustrator Attacher attacher new Illustrator Attacher plan lineage po Load Schema Map Context attacher visit ori Limit Map null Map Entry Limit Long entry ori Limit Map entry Set log Phy Map get entry get Key get Illustrator set Original Limit entry get Value get Log Data Map attacher get Data Map base Data null set Load Data Map phys Plan Reseter visit local Runner launch plan base Data lineage attacher Context base Data null po Eqclasses Map attacher po Eqclasses Map else Map Entry Physical Operator Collection Identity Hash Set Tuple entry attacher po Eqclasses Map entry Set entry get Key instanceof Load po Eqclasses Map put entry get Key entry get Value base Data null non derived data generation phy Transform plan attacher get Data Map return log Data Map public Map Operator Data Bag get Data Map Load Data Bag new Base Data throws Exception base Data new Base Data return get Data phys Plan private void phy Transform Physical Plan plan Map Physical Operator Data Bag phy Data Map remap result compilation may changed plans Map Physical Operator Physical Operator phy Map local Runner get Phy Map Map Entry Physical Operator Operator entry po Log Map entry Set phy Map get entry get Key null Physical Operator po phy Map get entry get Key log Data Map put entry get Value phy Data Map get po po Eqclasses Map put entry get Key po Eqclasses Map get po private void get Log Data Map Map Physical Operator Data Bag phy Data Map log Data Map clear Operator lo log Phy Map key Set log Phy Map get lo null log Data Map put lo phy Data Map get log Phy Map get lo set Data mapping inner plans Map Entry Map Logical Relational Operator Data Bag entry Inner Log Data Map entry Set entry get Value clear Map Entry Logical Relational Operator Physical Operator inner Entry Inner Log Phy Map get entry get Key entry Set entry get Value put inner Entry get Key phy Data Map get inner Entry get Value private void set Load Data Map function sets Data map eq class lineage base data used coming runner must called log Data Map properly set runner started base Data null po Eqclasses Map null po Eqclasses Map new Hash Map Physical Operator Collection Identity Hash Set Tuple else po Eqclasses Map clear Load lo base Data key Set log Data Map get lo add base Data get lo Linked List Identity Hash Set Tuple equivalence Classes new Linked List Identity Hash Set Tuple Identity Hash Set Tuple equivalence Class new Identity Hash Set Tuple equivalence Classes add equivalence Class Tuple base Data get lo lineage insert equivalence Class add po Eqclasses Map put log Phy Map get lo equivalence Classes public Collection Identity Hash Set Tuple get Eq Classes Map Logical Relational Operator Collection Identity Hash Set Tuple log Eqclasses Map get Lo Eq Class Map Linked List Identity Hash Set Tuple ret new Linked List Identity Hash Set Tuple Map Entry Logical Relational Operator Collection Identity Hash Set Tuple entry log Eqclasses Map entry Set entry get Value null ret add entry get Value return ret public Map Logical Relational Operator Collection Identity Hash Set Tuple get Lo Eq Class Map Map Logical Relational Operator Collection Identity Hash Set Tuple ret Equivalence Classes get Lo Eq Class Map phys Plan new Plan log Phy Map log Data Map Inner Log Phy Map po Eqclasses Map eq classes adjustments based upon logical operators Map Entry Logical Relational Operator Collection Identity Hash Set Tuple entry ret entry Set entry get Key instanceof Sort Collection Identity Hash Set Tuple eq Classes entry get Value Iterator Identity Hash Set Tuple eq Classes iterator Next Object null Identity Hash Set Tuple eq Class next eq Class size eq Class clear continue boolean first true Identical true Iterator Tuple eq Class iterator Next first first false next else next equals Identical false break Identical eq Class clear return ret
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache pen util import java io Data Input import java io Data Output import java io Exception import java util List import org apache backend executionengine Exec Exception import org apache data Tuple import org apache data Abstract Tuple Example tuple adds booleans Tuple synthetic say whether tuple generated synthetically omittable future use case want attach weights tuples displayed earlier public class Example Tuple extends Abstract Tuple private static final long serial Version public boolean synthetic false public boolean omittable true Object expr null Tuple null public Example Tuple public Example Tuple Object expr expr expr public Example Tuple Tuple like Tuple interface n access internal structures Override public String String return String Writable methods Override public void write Data Output throws Exception write write Boolean synthetic write Boolean omittable Override public void read Fields Data Input throws Exception read Fields synthetic read Boolean omittable read Boolean public Tuple Tuple return Override public void append Object val append val Override public Object get int field Num throws Exec Exception return get field Num Override public List Object get return get Override public long get Memory Size return get Memory Size Override public byte get Type int field Num throws Exec Exception return get Type field Num Override public boolean Null int field Num throws Exec Exception return Null field Num Override public void reference Tuple reference Override public void set int field Num Object val throws Exec Exception set field Num val Override public int size return size Override Suppress Warnings unchecked public int compare Object return compare
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend executionengine import java util Iterator import java util Properties import java io Output Stream import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache data Tuple import org apache tools pigstats Stats Abstraction job execution engine runs allows front end retrieve information job status manage running job public interface Exec Job public enum public static final String job progress public get Status true physical plan executed successfully results ready retrieved return true execution completed false otherwise throws Exec Exception public boolean Completed throws Exec Exception query executed successfully want retrieve results via iterating return iterator resulting tuples throws Exec Exception public Iterator Tuple get Results throws Exec Exception Returns alias relation generated job public String get Alias throws Exec Exception Get configuration information return configuration information execution engine public Properties get Configuration information state submitted e g execute method called yet running e g execute issued job waiting running completed aborted progress information return statistics relevant execution engine public Stats get Statistics return link Store object associated store public Store get Store hook asynchronous notification job completion pushed back end public void completion Notification Object cookie Kills current job throws Exec Exception public void kill throws Exec Exception Collecting various forms outputs public void get Logs Output Stream log throws Exec Exception public void get Output Stream throws Exec Exception public void get Error Output Stream error throws Exec Exception Get exceptions happened execution public Exception get Exception
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import java io Serializable import java util Properties import org apache backend executionengine Execution Engine import org apache backend hadoop executionengine map Reduce Layer Local Exec Type import org apache backend hadoop executionengine map Reduce Layer Exec Type import org apache classification Interface Audience import org apache classification Interface Stability import org apache impl Context type query execution cycle implementations Exec Type choose first one matches Properties passed Exec Type dictates Execution Engine used processing behaviour throughout implementing classes noted services folder titled org apache Exec Type per Java Service Loader specification Interface Audience Public Interface Stability Evolving public interface Exec Type extends Serializable public static final Exec Type new Local Exec Type public static final Exec Type new Exec Type Exec Type selected based Properties given script may multiple settings trigger selection given Exec Type example distributed mode currently triggered user specifies mapred mapreduce desirable override String method given Exec Type uniquely identify Exec Type initialize method return true accepts properties false Java Service Loader framework used iterate select correct Exec Type public boolean accepts Properties properties Returns Execution Engine Exec Type associated Exec Type script running determined Server call method get instance Execution Engine associated Exec Type delegate execution backend public Execution Engine get Execution Engine Context Context Returns Execution Engine class Exec Type associated method simply returns class Execution Engine associated Exec Type instance public Class extends Execution Engine get Execution Engine Class Exec Type classified local runs process local filesystem Execution Engine may nuanced notion local mode qualifications requires Execution Engines extend Exec Type interface additionally differentiate Exec Types necessary public boolean Local Returns canonical name Exec Type return public String name
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import java util Properties import java util Service Loader import org apache commons logging Log import org apache commons logging Log Factory import org apache backend hadoop executionengine map Reduce Layer Local Exec Type import org apache backend hadoop executionengine map Reduce Layer Exec Type import org apache impl util Properties Util public class Exec Type Provider private static final Log log Log Factory get Log Exec Type Provider class public static Exec Type select Exec Type Properties properties throws Exception Service Loader Exec Type framework Loader Service Loader load Exec Type class Exec Type exec Type framework Loader log info Trying Exec Type exec Type exec Type accepts properties log info Picked exec Type Exec Type return get Singleton exec Type else log debug pick exec Type Exec Type throw new Exception Unknown exec type properties get Property exectype method attempts return singleton instance given exec type works Exec Types Exec Types constants codebase param exec Type return private static Exec Type get Singleton Exec Type exec Type exec Type instanceof Exec Type return Exec Type exec Type instanceof Local Exec Type return Exec Type specific rather different execution engine n access constants act singletons use given instance return exec Type public static Exec Type String String exec Type throws Exception Properties properties Properties Util load Default Properties properties set Property exectype exec Type return select Exec Type properties
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl streaming import java io Buffered Input Stream import java io Buffered Output Stream import java io Buffered Reader import java io Data Input Stream import java io Data Output Stream import java io Exception import java io Input Stream import java io Input Stream Reader import java util concurrent Blocking Queue import org apache commons logging Log import org apache commons logging Log Factory import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer relational Operators Stream import org apache data Tuple import org apache impl io Buffered Positioned Input Stream import org apache impl streaming Input Handler Input Type import org apache impl streaming Output Handler Output Type import org apache impl util Context link Executable Manager manages external executable processes data query code Executable Manager code responsible startup teardown external process also managing feeds input records executable via code stdin code collects output records code stdout code also diagnostic information code stdout code public class Executable Manager private static final Log Log Factory get Log Executable Manager class private static final int private static final Result new Result Status null protected Streaming Command command Streaming command run Process process Handle process protected int exit Code Exit code process protected Data Output Stream stdin stdin process Process Input Thread stdin Thread thread send input process Process Output Thread stdout Thread thread get process stdout Input Stream stdout stdout process Process Error Thread stderr Thread thread get process stderr Input Stream stderr stderr process Input Output handlers Input Handler input Handler Output Handler output Handler Statistics protected long input Records protected long input Bytes protected long output Records protected long output Bytes protected volatile Throwable outerr Threads Error private Stream po Stream private Process Input Thread file Input Thread Create new link Executable Manager public Executable Manager Configure initialize link Executable Manager param stream Stream operator throws Exception throws Exec Exception public void configure Stream stream throws Exception Exec Exception po Stream stream command stream get Command Create input output handlers input Handler Handler Factory create Input Handler command output Handler Handler Factory create Output Handler command Close cleanup link Executable Manager throws Exception public void close throws Exception Close Input Handler cases lets process terminate input Handler close process Check need start process input Handler get Input Type Input Type exec Wait process exit try exit Code process wait catch Interrupted Exception ie error Unexpected exception waiting streaming binary complete ie kill Process process Wait stdout thread complete try stdout Thread null stdout Thread join stdout Thread null catch Interrupted Exception ie error Unexpected exception waiting output thread streaming binary complete ie kill Process process Wait stderr thread complete try stderr Thread null stderr Thread join stderr Thread null catch Interrupted Exception ie error Unexpected exception waiting input thread streaming binary complete ie kill Process process debug Process exited exit Code exit Code String err Msg command String failed exit status exit Code error err Msg Result res new Result Status err Msg send Output po Stream get Binary Output Queue res exit Code output Handler get Output Type Output Type Trigger output Handler output Handler bind null start thread process output executable stdout stdout Thread new Process Output Thread output Handler po Stream stdout Thread start Check problem managed process outerr Threads Error null error Output Error thread failed outerr Threads Error Helper function close input output streams process kill param process process killed throws Exception private void kill Process Process process process null try input Handler close process catch Exception e info Exception kill Process closing input Handler Ignoring e get Message try output Handler close catch Exception e info Exception kill Process closing output Handler Ignoring e get Message process destroy Start execution external process takes care setting environment process also starts Process Error Thread process code stderr code managed process throws Exception protected void exec throws Exception Process Builder process Builder Streaming Util create Process command process process Builder start debug Started process command command Pick process stderr stream start thread process stderr stream stderr new Data Input Stream new Buffered Input Stream process get Error Stream stderr Thread new Process Error Thread stderr Thread start Check need handle process stdout directly output Handler get Output Type Output Type Get hold stdout process stdout new Data Input Stream new Buffered Input Stream process get Input Stream Bind stdout Output Handler output Handler bind new Buffered Positioned Input Stream stdout Long start thread process output executable stdout stdout Thread new Process Output Thread output Handler po Stream stdout Thread start Start execution link Executable Manager throws Exception public void run throws Exception Check need exec process input Handler get Input Type Input Type start thread handle input pass Context file Input Thread input type asynchronous exec called file Input Thread needs access Context file Input Thread new Process Input Thread input Handler po Stream Context get Context file Input Thread start Input type means input streaming binary file means exec process till input file completely written done close return return Start executable exec set input executable stdin new Data Output Stream new Buffered Output Stream process get Output Stream input Handler bind stdin Start thread send input executable stdin stdin Thread new Process Input Thread input Handler po Stream null stdin Thread start thread consumes input Stream binary Input queue feeds Process class Process Input Thread extends Thread Input Handler input Handler private Stream po Stream private Context udf Context private Blocking Queue Result binary Input Queue Process Input Thread Input Handler input Handler Stream po Stream Context udf Context set Daemon true input Handler input Handler po Stream po Stream copy Context passed Executable Manager thread udf Context udf Context input queue thread read input tuples binary Input Queue po Stream get Binary Input Queue Override public void run input type asynchronous set udf Context current thread copy Executable Manager thread udf Context necessary exec method called current thread file Input Thread instead Executable Manager thread input Handler get Input Type Input Type udf Context null Context set Udf Context udf Context try Read tuples previous operator pipeline pass executable true Result inp null inp binary Input Queue take synchronized po Stream notify waiting producer check keep findbugs happy inp null po Stream notify receive input process already sent input expected inp null inp return Status Status signal cleanup Executable Manager close return inp null inp return Status Status Check problem managed process outerr Threads Error null throw new Exception Output Error thread failed outerr Threads Error Pass serialized tuple executable via Input Handler Tuple null try Tuple inp result input Handler put Next catch Exception e input type synchronous could related process terminating input Handler get Input Type Input Type warn Exception trying write stream binary input e could process died closed input stream call close worry deducing whether process died normally abnormally real issue see non zero exit code process send Status back got Exception issue writing input binary hmm hope means process died abnormally close return else asynchronous case real exception throw e input Bytes get Memory Size input Records catch Throwable Note error occurred outerr Threads Error Result res new Result Status Error reading Stream passing streaming process get Message error Error reading Stream passing streaming process send Output po Stream get Binary Output Queue res kill Process process private void send Output Blocking Queue Result binary Output Queue Result res try binary Output Queue put res catch Interrupted Exception e error Error sending binary output Stream e synchronized po Stream notify waiting consumer satisfy findbugs res null po Stream notify thread gets output streaming binary puts onto binary output Queue Stream class Process Output Thread extends Thread Output Handler output Handler private Blocking Queue Result binary Output Queue Process Output Thread Output Handler output Handler Stream po Stream set Daemon true output Handler output Handler output queue thread put output tuples Stream binary Output Queue po Stream get Binary Output Queue Override public void run try Read tuples executable send Queue Stream Tuple tuple null tuple output Handler get Next null process Output tuple output Bytes tuple get Memory Size output binary done process Output null output Handler close catch Throwable Note error occurred outerr Threads Error error Caught Exception Output Handler Streaming binary sending error signal pipeline send Stream try Result res new Result res result Error reading output Streaming binary command String get Message res return Status Status send Output binary Output Queue res kill Process process catch Exception e error Error trying signal Error status pipeline e void process Output Tuple Result res new Result null valid tuple pass back res result res return Status Status output Records else null means end output binary wait process exit harvest exit code try exit Code process wait catch Interrupted Exception ie kill Process process signal error String err Msg Failure waiting process command String ie get Message error err Msg ie res result err Msg res return Status Status send Output binary Output Queue res return exit Code signal End Stream output res else signal Error String err Msg command String failed exit status exit Code error err Msg res result err Msg res return Status Status send Output binary Output Queue res Workhorse process stderr stream managed process default code Execuatble Manager code sends received error message code stderr code param error error message managed process protected void process Error String error send stderr System err print error class Process Error Thread extends Thread public Process Error Thread set Daemon true Override public void run try String error Buffered Reader reader new Buffered Reader new Input Stream Reader stderr error reader read Line null process Error error n stderr null stderr close debug Process Error Thread done catch Throwable Note error occurred outerr Threads Error error try stderr null stderr close catch Exception ioe warn ioe throw new Runtime Exception
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache pen Illustrator base class types expressions expression operators must extend class public abstract class Expression Operator extends Physical Operator private static final Log log Log Factory get Log Expression Operator class private static final long serial Version public Expression Operator Operator Key k k public Expression Operator Operator Key k int rp super k rp Override public void set Illustrator Illustrator illustrator illustrator illustrator Override public boolean supports Multiple Outputs return false Override public Result get Next Data Bag throws Exec Exception return new Result Override public abstract void visit Phy Plan Visitor v throws Visitor Exception Make deep copy operator declared make possible call clone Expression Operators throws Clone Supported Exception Override public Expression Operator clone throws Clone Supported Exception String expression operator implement clone log error throw new Clone Supported Exception Get sub expressions expression called reducer run accumulative mode child expression must called drive accumulate protected abstract List Expression Operator get Child Expressions check whether expression contains called reducer run accumulative mode case Fs must called public boolean contain instanceof User Func return true List Expression Operator l get Child Expressions l null Expression Operator e l e contain return true return false Drive Fs accumulative mode protected Result accum Child List Expression Operator child byte data Type throws Exec Exception try Accum Started child null child get Child Expressions Result res null child null Expression Operator e child e contain res e get Next data Type res return Status Status return res res new Result res return Status Status return res return null catch Runtime Exception e throw new Exec Exception Exception executing String e String e Override public String String return get Class get Simple Name super String children get Child Expressions get Original Locations
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import java io Exception import java util Array List import java util Deque import java util Linked List import java util List import java util Map import org apache Comparison Func import org apache Eval Func import org apache Func Spec import org apache Exception import org apache Resource Schema import org apache backend hadoop executionengine physical Layer Logical Physical Translator Exception import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Add import org apache backend hadoop executionengine physical Layer expression Operators Binary Comparison Operator import org apache backend hadoop executionengine physical Layer expression Operators Binary Expression Operator import org apache backend hadoop executionengine physical Layer expression Operators Constant Expression import org apache backend hadoop executionengine physical Layer expression Operators Divide import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Expression Operator import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Greater Expr import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Less Expr import org apache backend hadoop executionengine physical Layer expression Operators Mod import org apache backend hadoop executionengine physical Layer expression Operators Multiply import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators Bin Cond import org apache backend hadoop executionengine physical Layer expression Operators Cast import org apache backend hadoop executionengine physical Layer expression Operators Null import org apache backend hadoop executionengine physical Layer expression Operators Map Look import org apache backend hadoop executionengine physical Layer expression Operators Negative import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators Project import org apache backend hadoop executionengine physical Layer expression Operators Regexp import org apache backend hadoop executionengine physical Layer expression Operators Relation Expr Project import org apache backend hadoop executionengine physical Layer expression Operators User Comparison Func import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer expression Operators Subtract import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache data Data Type import org apache impl Context import org apache impl logical Layer Frontend Exception import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Plan Exception import org apache newplan Dependency Order Walker import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Walker import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Logical Relational Operator public class Exp Phy Translation Visitor extends Logical Expression Visitor value points current Logical Relational Operator working protected Logical Relational Operator current Op public Exp Phy Translation Visitor Operator Plan plan Logical Relational Operator op Physical Plan phy Plan Map Operator Physical Operator map throws Frontend Exception plan new Dependency Order Walker plan op phy Plan map public Exp Phy Translation Visitor Operator Plan plan Plan Walker walker Logical Relational Operator op Physical Plan phy Plan Map Operator Physical Operator map throws Frontend Exception super plan walker current Op op log Phy Map map current Plan phy Plan current Plans new Linked List Physical Plan protected Map Operator Physical Operator log Phy Map protected Deque Physical Plan current Plans protected Physical Plan current Plan protected Node Id Generator node Gen Node Id Generator get Generator protected Context pc public void set Context Context pc pc pc public Physical Plan get Physical Plan return current Plan private void attach Binary Comparison Operator Binary Expression op Binary Comparison Operator expr Op throws Frontend Exception dont aliases Expression Operators expr Op set Alias op get Alias expr Op set Operand Type op get Lhs get Type expr Op set Lhs Expression Operator log Phy Map get op get Lhs expr Op set Rhs Expression Operator log Phy Map get op get Rhs Operator Plan Plan op get Plan current Plan add expr Op log Phy Map put op expr Op List Operator successors Plan get Successors op successors null return Operator lo successors Physical Operator log Phy Map get lo try current Plan connect expr Op catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e private void attach Binary Expression Operator Binary Expression op Binary Expression Operator expr Op throws Frontend Exception dont aliases Expression Operators expr Op set Alias op get Alias expr Op set Result Type op get Lhs get Type expr Op set Lhs Expression Operator log Phy Map get op get Lhs expr Op set Rhs Expression Operator log Phy Map get op get Rhs Operator Plan Plan op get Plan current Plan add expr Op log Phy Map put op expr Op List Operator successors Plan get Successors op successors null return Operator lo successors Physical Operator log Phy Map get lo try current Plan connect expr Op catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit Expression op throws Frontend Exception System err println Entering Binary Comparison Operator expr Op new new Operator Key node Gen get Next Node Id attach Binary Comparison Operator op expr Op Override public void visit Expression op throws Frontend Exception System err println Entering Binary Comparison Operator expr Op new new Operator Key node Gen get Next Node Id attach Binary Comparison Operator op expr Op Override public void visit Equal Expression op throws Frontend Exception Binary Comparison Operator expr Op new Equal Expr new Operator Key node Gen get Next Node Id attach Binary Comparison Operator op expr Op Override public void visit Equal Expression op throws Frontend Exception Binary Comparison Operator expr Op new Equal Expr new Operator Key node Gen get Next Node Id attach Binary Comparison Operator op expr Op Override public void visit Greater Expression op throws Frontend Exception Binary Comparison Operator expr Op new Greater Expr new Operator Key node Gen get Next Node Id attach Binary Comparison Operator op expr Op Override public void visit Greater Equal Expression op throws Frontend Exception Binary Comparison Operator expr Op new Equal Expr new Operator Key node Gen get Next Node Id attach Binary Comparison Operator op expr Op Override public void visit Less Expression op throws Frontend Exception Binary Comparison Operator expr Op new Less Expr new Operator Key node Gen get Next Node Id attach Binary Comparison Operator op expr Op Override public void visit Less Equal Expression op throws Frontend Exception Binary Comparison Operator expr Op new Equal Expr new Operator Key node Gen get Next Node Id attach Binary Comparison Operator op expr Op Override public void visit Project Expression op throws Frontend Exception Project expr Op op get Attached Relational Op instanceof Generate op get Plan get Successors op null op find Referent instanceof Inner Load expr Op new Relation Expr Project new Operator Key node Gen get Next Node Id else expr Op new Project new Operator Key node Gen get Next Node Id op get Field Schema null op Range Star Project expr Op set Result Type Data Type else expr Op set Result Type op get Type op Project Star expr Op set Star op Project Star else op Range Project op get End Col project range expanded project star expander throw new Assertion Error project range project end seen translation physical plan expr Op set Project End op get Start Col else expr Op set Column op get Col Num implement expr Op set Overloaded op get Overloaded log Phy Map put op expr Op current Plan add expr Op Override public void visit Map Lookup Expression op throws Frontend Exception Expression Operator phys Op new Map Look new Operator Key node Gen get Next Node Id Map Look phys Op set Look Key op get Lookup Key phys Op set Result Type op get Type phys Op add Original Location op get Field Schema alias op get Location current Plan add phys Op log Phy Map put op phys Op Expression Operator Expression Operator log Phy Map get op get Map try current Plan connect phys Op catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit org apache newplan logical expression Constant Expression op throws Frontend Exception System err println Entering Constant Constant Expression ce new Constant Expression new Operator Key node Gen get Next Node Id dont aliases Expression Operators ce set Alias op get Alias ce set Value op get Value ce set Result Type op get Type operator n predecessors current Plan add ce log Phy Map put op ce System err println Exiting Constant Override public void visit Cast Expression op throws Frontend Exception Cast p Cast new Cast new Operator Key node Gen get Next Node Id p Cast add Original Location op get Field Schema alias op get Location phys Op set Alias op get Alias current Plan add p Cast log Phy Map put op p Cast Expression Operator Expression Operator log Phy Map get op get Expression p Cast set Result Type op get Type p Cast set Field Schema new Resource Schema Resource Field Schema op get Field Schema Func Spec lf Spec op get Func Spec null lf Spec try p Cast set Func Spec lf Spec catch Exception e int err Code String msg resolve load function use casting Data Type find Type Name op get Expression get Type Data Type find Type Name op get Type throw new Logical Physical Translator Exception msg err Code Exception e try current Plan connect p Cast catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit Expression op throws Frontend Exception p new new Operator Key node Gen get Next Node Id phys Op set Alias op get Alias current Plan add p log Phy Map put op p Expression Operator Expression Operator log Phy Map get op get Expression p set Expr p set Result Type op get Type p set Operand Type op get Type try current Plan connect p catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit Null Expression op throws Frontend Exception Null p Null new Null new Operator Key node Gen get Next Node Id phys Op set Alias op get Alias current Plan add p Null log Phy Map put op p Null Expression Operator Expression Operator log Phy Map get op get Expression p Null set Expr p Null set Result Type op get Type p Null set Operand Type op get Expression get Type try current Plan connect p Null catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit Negative Expression op throws Frontend Exception Negative p Negative new Negative new Operator Key node Gen get Next Node Id phys Op set Alias op get Alias current Plan add p Negative log Phy Map put op p Negative Expression Operator Expression Operator log Phy Map get op get Expression p Negative set Expr p Negative set Result Type op get Type try current Plan connect p Negative catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit Add Expression op throws Frontend Exception Binary Expression Operator expr Op new Add new Operator Key node Gen get Next Node Id attach Binary Expression Operator op expr Op Override public void visit Regex Expression op throws Frontend Exception Binary Expression Operator expr Op new Regexp new Operator Key node Gen get Next Node Id attach Binary Expression Operator op expr Op List Operator successors op get Plan get Successors op successors get instanceof org apache newplan logical expression Constant Expression Regexp expr Op set Const Expr true Override public void visit Subtract Expression op throws Frontend Exception Binary Expression Operator expr Op new Subtract new Operator Key node Gen get Next Node Id attach Binary Expression Operator op expr Op Override public void visit Multiply Expression op throws Frontend Exception Binary Expression Operator expr Op new Multiply new Operator Key node Gen get Next Node Id attach Binary Expression Operator op expr Op Override public void visit Divide Expression op throws Frontend Exception Binary Expression Operator expr Op new Divide new Operator Key node Gen get Next Node Id attach Binary Expression Operator op expr Op Override public void visit Mod Expression op throws Frontend Exception Binary Expression Operator expr Op new Mod new Operator Key node Gen get Next Node Id attach Binary Expression Operator op expr Op Override public void visit Bin Cond Expression op throws Frontend Exception Bin Cond expr Op new Bin Cond new Operator Key node Gen get Next Node Id expr Op set Result Type op get Type expr Op set Cond Expression Operator log Phy Map get op get Condition expr Op set Lhs Expression Operator log Phy Map get op get Lhs expr Op set Rhs Expression Operator log Phy Map get op get Rhs Operator Plan Plan op get Plan current Plan add expr Op log Phy Map put op expr Op List Operator successors Plan get Successors op successors null return Operator lo successors Physical Operator log Phy Map get lo try current Plan connect expr Op catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Suppress Warnings unchecked Override public void visit User Func Expression op throws Frontend Exception Object f Context instantiate Func Spec op get Func Spec Physical Operator p f instanceof Eval Func p new User Func new Operator Key node Gen get Next Node Id null op get Func Spec Eval Func f User Func p set Signature op get Signature reinitialize input schema signature User Func p get Func get Input Schema null User Func p set Func Input Schema op get Signature Eval Func f set Input Schema User Func p get Func get Input Schema List String cache Files Eval Func f get Cache Files cache Files null User Func p set Cache Files cache Files List String ship Files Eval Func f get Ship Files ship Files null User Func p set Ship Files ship Files else p new User Comparison Func new Operator Key node Gen get Next Node Id null op get Func Spec Comparison Func f p set Result Type op get Type current Plan add p List Logical Expression List op get Arguments List null Logical Expression input Operator List Physical Operator log Phy Map get input Operator try current Plan connect p catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e log Phy Map put op p need track scalars op instanceof Scalar Expression Operator ref Op Scalar Expression op get Implicit Referenced Operator User Func p set Referenced Operator log Phy Map get ref Op Override public void visit Dereference Expression op throws Frontend Exception Project expr Op new Project new Operator Key node Gen get Next Node Id expr Op set Result Type op get Type expr Op set Columns Array List Integer op get Bag Columns expr Op set Star false log Phy Map put op expr Op current Plan add expr Op Physical Operator log Phy Map get op get Referred Expression null current Plan connect expr Op
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl io import java io Buffered Output Stream import java io Buffered Reader import java io File import java io File Found Exception import java io File Output Stream import java io Exception import java io Input Stream import java io Input Stream Reader import java io Output Stream import java net import java util Array List import java util List import java util Map import java util Properties import java util Random import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs File Status import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop fs permission Fs Action import org apache hadoop fs permission Fs Permission import org apache hadoop util Shell import org apache Exec Type import org apache Configuration import org apache Exception import org apache backend datastorage Container Descriptor import org apache backend datastorage Data Storage import org apache backend datastorage Data Storage Exception import org apache backend datastorage Element Descriptor import org apache backend datastorage Seekable Input Stream import org apache backend datastorage Seekable Input Stream import org apache backend executionengine Exec Exception import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop datastorage Data Storage import org apache backend hadoop datastorage Directory import org apache backend hadoop datastorage Path import org apache backend hadoop executionengine map Reduce Layer Map Reduce import org apache impl Context import org apache impl util Utils import com google common annotations Visible Testing public class File Localizer private static final Log log Log Factory get Log File Localizer class static public final String file static public final int static public final int public static Fs Permission new Fs Permission Fs Action Fs Action Fs Action rwx public static class Data Storage Input Stream Iterator extends Input Stream Input Stream current Element Descriptor elements int current Element public Data Storage Input Stream Iterator Element Descriptor elements elements elements private boolean throws Exception current null current Element elements length return true current elements current Element open return false private void Next throws Exception current close current null Override public int read throws Exception int rc current read rc return rc Next return Override public int available throws Exception return return current available Override public void close throws Exception current null current close current null current Element elements length Override public int read byte b int int len throws Exception int count len int rc current read b len rc Next continue rc len rc count rc return count count Override public int read byte b throws Exception return read b b length Override public long skip long n throws Exception n n current skip n return n static String check Default Prefix Exec Type exec Type String file Spec file Spec starts return file Spec return exec Type Exec Type file Spec function meant used mappers reducers want access file param file Name return Input Stream open file throws Exception public static Input Stream open File String file Name throws Exception Configuration conf Map Reduce Job Conf Internal get conf null throw new Runtime Exception ca n open file executing locally return open File file Name Configuration Util Properties conf public static Input Stream open File String file Name Properties properties throws Exception Data Storage dds new Data Storage properties Element Descriptor elem dds Element file Name return open File elem public static long get Size String file Name throws Exception Configuration conf Map Reduce Job Conf Internal get conf null throw new Runtime Exception ca n open file executing locally return get Size file Name Configuration Util Properties conf public static long get Size String file Name Properties properties throws Exception Data Storage dds new Data Storage properties Element Descriptor elem dds Element file Name recursively get files path Element Descriptor Elems get File Element Descriptors elem long size add sizes files found int Elems length Map String Object stats Elems get Statistics size Long stats get Element Descriptor return size private static Input Stream open File Element Descriptor elem throws Exception Element Descriptor elements null elem exists try elem get Data Storage Container elem String elem system Element throw new Exception Attempt made open system file elem String return elem open catch Data Storage Exception e throw new Exception Failed determine elem elem container e elem directory recursively get files elements get File Element Descriptors elem else might glob glob Matches Files elem elem get Data Storage throw new Exception elem String exist else elements get File Element Descriptors elem return new Data Storage Input Stream Iterator elements return new Data Storage Input Stream Iterator elements recursively get File element descriptors present input element descriptor param elem input element descriptor return array Element descriptors files present found traversing levels dirs input element descriptor throws Data Storage Exception private static Element Descriptor get File Element Descriptors Element Descriptor elem throws Data Storage Exception Data Storage store elem get Data Storage Element Descriptor elems store Collection elem String elems could directories get files contains files List Element Descriptor paths new Array List Element Descriptor List Element Descriptor file Paths new Array List Element Descriptor int elems length paths add elems int j j paths size j Element Descriptor full Path store Element store get Active Container paths get j Skip hadoop private meta files full Path system Element continue full Path instanceof Container Descriptor Element Descriptor child Container Descriptor full Path paths add child continue else file add file Paths file Paths add full Path elems new Element Descriptor file Paths size file Paths Array elems return elems private static Input Stream open File Element Descriptor elem throws Exception Currently use classes represent files dirs local mode delegate call open File elem true local mode files dirs return open File elem function returns input stream local file system file file residing Hadoop param file Name filename open param exec Type exec Type indicating whether executing local mode Map Reduce mode Hadoop param storage Data Storage object used open file Spec return Input Stream file Spec throws Exception deprecated Use link open String Context instead Deprecated static public Input Stream open String file Name Exec Type exec Type Data Storage storage throws Exception file Name check Default Prefix exec Type file Name file Name starts Element Descriptor elem storage Element full Path file Name storage return open File elem else file Name file Name substring length Element Descriptor elem storage Element full Path file Name storage return open File elem deprecated Use link full Path String Context instead Deprecated public static String full Path String file Name Data Storage storage String full Path try file Name char Element Descriptor current Dir storage get Active Container Element Descriptor elem storage Element current Dir String file Name full Path elem String else full Path file Name catch Data Storage Exception e full Path file Name return full Path static public Input Stream open String file Spec Context Context throws Exception file Spec check Default Prefix Context get Exec Type file Spec file Spec starts Element Descriptor elem Context get Dfs Element full Path file Spec Context return open File elem else file Spec file Spec substring length buffering want buffered streams passed load functions return new Buffered Input Stream new File Input Stream file Spec Element Descriptor elem Context get Lfs Element full Path file Spec Context return open File elem param file Spec param offset param Context return Seekable Input Stream throws Exception overloaded version open need seek stream Currently seek supported file directory glob static public Seekable Input Stream open String file Spec long offset Context Context throws Exception file Spec check Default Prefix Context get Exec Type file Spec Element Descriptor elem file Spec starts elem Context get Dfs Element full Path file Spec Context else file Spec file Spec substring length elem Context get Lfs Element full Path file Spec Context elem exists elem get Data Storage Container elem String try elem system Element throw new Exception Attempt made open system file elem String Seekable Input Stream sis elem sopen sis seek offset return sis catch Data Storage Exception e throw new Exception Failed determine elem elem container e Either directory glob else throw new Exception Currently seek supported file glob directory static public Output Stream create String file Spec Context Context throws Exception return create file Spec false Context static public Output Stream create String file Spec boolean append Context Context throws Exception file Spec check Default Prefix Context get Exec Type file Spec file Spec starts Element Descriptor elem Context get Dfs Element file Spec return elem create else file Spec file Spec substring length probably replaced local file system File f new File file Spec get Parent File f null boolean res f mkdirs res log warn File Localizer create failed create f return new File Output Stream file Spec append static public boolean delete String file Spec Context Context throws Exception file Spec check Default Prefix Context get Exec Type file Spec Element Descriptor elem null file Spec starts elem Context get Dfs Element file Spec else elem Context get Lfs Element file Spec elem delete return true static Random r new Random Thread local relative Root Container Descriptor access object directly since lazy initialized relative Root Context method used instead private static Thread Local Container Descriptor relative Root new Thread Local Container Descriptor private static Container Descriptor resource Path method used test code reset state param initialized public static void set Initialized boolean initialized initialized relative Root set null Accessor method get root Container Descriptor used temporary files bound thread Calling method lazy initialized relative Root object param Context return throws Data Storage Exception private static synchronized Container Descriptor relative Root final Context Context throws Data Storage Exception relative Root get null Container Descriptor relative get Temp Container Context relative Root set relative return relative Root get Accessor method get resource Container Descriptor used tez resource path bound thread Calling method lazy initialized resource Path object path different relative Root calling Server shutdown remove relative Root resourth Path since resourth Path available entire session param Context return temporary resource path throws Data Storage Exception public static synchronized Path get Temporary Resource Path final Context Context throws Data Storage Exception resource Path null resource Path get Temp Container Context return Path resource Path get Path private static synchronized Container Descriptor get Temp Container final Context Context throws Data Storage Exception Container Descriptor temp Container null String tdir Utils substitute Vars Context get Properties get Property Configuration tmp try temp Container Context get Dfs Container tdir temp r next Int temp Container exists create Container temp Container catch Exception e try one last time case due Exception caused dir operations directory created another instant temp Container Context get Dfs Container tdir temp r next Int try create Container temp Container catch Exception e throw new Data Storage Exception e return temp Container private static void create Container Container Descriptor container throws Exception container create container instanceof Directory Directory container set Permission public static void delete Temp Files relative Root get null try relative Root get delete catch Exception e log error e set Initialized false public static void delete Temp Resource Files resource Path null try resource Path delete catch Exception e log error e public static Path get Temporary Path Context Context throws Exception return get Temporary Path Context public static Path get Temporary Path Context Context String suffix throws Exception Element Descriptor relative relative Root Context Element Descriptor elem Context get Dfs Element relative String tmp r next Int suffix return Path elem get Path public static String hadoopify String filename Context Context throws Exception Shell filename filename replace filename starts filename filename substring length Element Descriptor local Elem Context get Lfs Element filename local Elem exists throw new File Found Exception filename Element Descriptor distrib Elem Context get Dfs Element get Temporary Path Context String int suffix Start filename last Index suffix Start distrib Elem Context get Dfs Element distrib Elem String filename substring suffix Start currently copy method Data Storage allow specify overwrite work around delete dst file first exists distrib Elem exists distrib Elem delete local Elem copy distrib Elem null false return distrib Elem String public static String full Path String filename Context Context throws Exception try filename char Element Descriptor current Dir Context get Dfs get Active Container Element Descriptor elem Context get Dfs Element current Dir String filename return elem String return filename catch Data Storage Exception e return filename public static boolean file Exists String filename Context context throws Exception return file Exists filename context get Fs deprecated Use link file Exists String Context instead Deprecated public static boolean file Exists String filename Data Storage store throws Exception Element Descriptor elem store Element filename return elem exists glob Matches Files elem store public static boolean File String filename Context context throws Exception return Directory filename context get Dfs deprecated Use link File String Context instead Deprecated public static boolean File String filename Data Storage store throws Exception return Directory filename store public static boolean Directory String filename Context context throws Exception return Directory filename context get Dfs deprecated Use link Directory String Context instead Deprecated public static boolean Directory String filename Data Storage store throws Exception Element Descriptor elem store Element filename return elem instanceof Container Descriptor private static boolean glob Matches Files Element Descriptor elem Data Storage fs throws Exception try Currently give glob non special glob characters hadoop returns array file name check Element Descriptor elems fs Collection elem String switch elems length case return false case return elems equals elem default return true catch Data Storage Exception e throw e Visible Testing public static void set Random r File Localizer r r Convert path Windows convention Unix convention Invoked cygwin param path path Windows convention return path Unix convention null fail static public String parse Cyg Path String path int style String command style command new String cygpath w path else command new String cygpath u path Process p null try p Runtime get Runtime exec command catch Exception e return null int exit Val try exit Val p wait catch Interrupted Exception e return null exit Val return null String line null Buffered Reader br null try Input Stream Reader isr new Input Stream Reader p get Input Stream br new Buffered Reader isr line br read Line isr close catch Exception e return null finally br null try br close catch Exception e return line static File local Temp Dir null static File f boolean success true try f File create Temp File tmp success f delete success f mkdir local Temp Dir f local Temp Dir delete Exit catch Exception e success throw new Runtime Exception Error creating File Localizer temp directory public static class Fetch File Ret public Fetch File Ret File file boolean Fetch file file Fetch Fetch public File file public boolean Fetch Ensures passed path local file system fetching java io tmpdir necessary jars relative dfs true dfs null relative path assumed relative passed dfs active directory Else assumed relative local working directory public static Fetch File Ret fetch File Properties properties String file Path throws Exception return fetch Files Internal properties file Path false Ensures passed files pointed path local file system fetching java io tmpdir necessary jars relative dfs true dfs null relative path assumed relative passed dfs active directory Else assumed relative local working directory public static Fetch File Ret fetch Files Properties properties String file Path throws Exception return fetch Files Internal properties file Path true Copies files remote local filesystem multiple Files set path could point multiple files globs directory case return array contains multiple files otherwise single file returned jars relative dfs true relative path assumed relative default filesystem active directory Else assumed relative local working directory param properties param file Path param multiple Files return private static Fetch File Ret fetch Files Internal Properties properties String file Path boolean multiple Files throws Exception Path path new Path file Path path get Name Empty return new Fetch File Ret uri path Uri Configuration conf new Configuration Configuration Util merge Conf conf Configuration Util Configuration properties schema schema local expected local path File System local Fs File System get Local conf File System src Fs true equals properties get Property jars relative dfs uri get Scheme null Windows local files uri get Scheme null uri get Path matches Za z uri get Scheme null uri get Scheme equals local src Fs local Fs else src Fs path get File System conf File Status files multiple Files files src Fs glob Status path else files new File Status src Fs get File Status path files null files length throw new Exec Exception file file Path exist Exception Fetch File Ret fetch Files new Fetch File Ret files length int idx File Status file files throw exception file String pathname file get Path Uri get Path String filename file get Path get Name src Fs local Fs fetch Files idx new Fetch File Ret new File pathname false else fetch remote File dest new File local Temp Dir filename dest delete Exit try src Fs copy Local File file get Path new Path dest get Absolute Path catch Exception e throw new Exec Exception Could copy file Path local destination dest Exception e fetch Files idx new Fetch File Ret dest true return fetch Files Ensures passed resource available local file system fetching temporary directory throws Resource Found Exception public static Fetch File Ret fetch Resource String name throws Exception Resource Found Exception Fetch File Ret local File Ret null Input Stream resource Stream Context get Class Loader get Resource Stream name resource Stream null File dest new File local Temp Dir name dest get Parent File mkdirs dest delete Exit Output Stream output Stream null try output Stream new Buffered Output Stream new File Output Stream dest byte buffer new byte int len len resource Stream read buffer output Stream write buffer len finally resource Stream close output Stream null output Stream close local File Ret new Fetch File Ret dest false else throw new Resource Found Exception name return local File Ret
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical rules import java util Array List import java util Iterator import java util List import org apache impl logical Layer Frontend Exception import org apache impl util Pair import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Operator Sub Plan import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Project Expression import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache newplan optimizer Rule import org apache newplan optimizer Transformer Rule moves Filter Foreach checks uid filter works present predecessor foreach transforms public class Filter Foreach extends Rule public Filter Foreach String n super n false Override protected Operator Plan build Pattern pattern rule looks foreach filter Logical Plan plan new Logical Plan Logical Relational Operator foreach new plan Logical Relational Operator filter new Filter plan plan add foreach plan add filter plan connect foreach filter return plan Override public Transformer get New Transformer return new Filter Transformer public class Filter Transformer extends Transformer Filter filter null foreach null Logical Relational Operator Pred null Operator Sub Plan sub Plan null Override public boolean check Operator Plan matched throws Frontend Exception Iterator Operator iter matched get Operators iter Next Operator op iter next op instanceof foreach op break would strange case foreach null return false iter matched get Operators iter Next Operator op iter next op instanceof Filter filter Filter op break cheating look one filter plan filter null Get uids Filter Pair List Long List Byte uid Types get Filter Projection Uids filter See previous operators uids project List Operator preds current Plan get Predecessors foreach int j j preds size j Logical Relational Operator log Rel Op Logical Relational Operator preds get j log Rel Op uid Types Pred Logical Relational Operator preds get j filter nondeterministic n push return Optimizer Utils plan Non Deterministic Udf filter get Filter Plan Chances filters filter moved searching filters List Operator successors current Plan get Successors filter successors null successors size successors get instanceof Filter filter Filter successors get else filter null return false Get uids Projections Filter Operator param filter return Set uid private Pair List Long List Byte get Filter Projection Uids Filter filter throws Frontend Exception List Long uids new Array List Long List Byte types new Array List Byte filter null Logical Expression Plan filter Plan filter get Filter Plan Iterator Operator iter filter Plan get Operators Operator op null iter Next op iter next op instanceof Project Expression Project Expression proj Project Expression op proj Project Star project range always expanded schema available nothing Logical Relational Operator pred Logical Relational Operator filter get Plan get Predecessors filter get Logical Schema pred Schema pred get Schema pred Schema null int pred Schema size uids add pred Schema get Field uid types add pred Schema get Field type else uids add proj get Field Schema uid types add proj get Field Schema type Pair List Long List Byte result new Pair List Long List Byte uids types return result checks relational operator contains specified uids param op Logical Relational operator contain uid param uids Uids check return true given Logical Relational Operator given uids private boolean Logical Relational Operator op Pair List Long List Byte uid Types throws Frontend Exception Logical Schema schema op get Schema schema null return false List Long uids uid Types first List Byte types uid Types second int uids size boolean found false Logical Schema Logical Field Schema fs schema get Fields fs uid uids get fs type types get found true found return false return true Override public Operator Plan report Changes return sub Plan Override public void transform Operator Plan matched throws Frontend Exception List Operator op Set current Plan get Predecessors filter op Set null op Set size return Operator filter Pred op Set get op Set current Plan get Successors filter op Set null op Set size return Operator filter Suc op Set get sub Plan new Operator Sub Plan current Plan Steps following Pred Filter filters moved Filter Pred Filter Filter moved Filter Suc Transforms Pred Filter Moved Filter filters moved Filter Pred Filter Filter Suc plan assuming modifying filter middle modifying first filter kleene star becomes zero Filter Pred Pair Integer Integer Pred Places current Plan disconnect Pred foreach Pair Integer Integer filter Pred Places current Plan disconnect filter Pred filter Pair Integer Integer filter Suc Places current Plan disconnect filter filter Suc current Plan connect Pred Pred Places first filter filter Pred Places second current Plan connect filter filter Suc Places first foreach Pred Places second current Plan connect filter Pred filter Pred Places first filter Suc filter Suc Places second sub Plan add Pred sub Plan add foreach sub Plan add filter Pred sub Plan add filter sub Plan add filter Suc
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical rules import org apache impl Context import org apache newplan Operator Plan import org apache newplan logical relational Filter import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Operator public class Filter Constant Calculator extends Constant Calculator public Filter Constant Calculator String n Context pc super n pc Override protected Operator Plan build Pattern Logical Plan plan new Logical Plan Logical Relational Operator op new Filter plan plan add op return plan
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical rules import org apache impl Context import org apache newplan Operator Plan import org apache newplan logical relational import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Operator public class Constant Calculator extends Constant Calculator public Constant Calculator String n Context pc super n pc Override protected Operator Plan build Pattern Logical Plan plan new Logical Plan Logical Relational Operator op new plan plan add op return plan
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import org apache Exceptional Function import org apache Primitive Eval Func import org apache impl Context import java io Exception import java lang reflect Parameterized Type import java lang reflect Type import java util Hash Map Eval Func wraps implementation Function interface passed String constructor resolving Function class package import list used Function must default arg constructor used Functions take args constructor initialize function subclass one call code super function code Example code Udf Function Wrapper Eval Func Function code public class Function Wrapper Eval Func extends Primitive Eval Func Object Object cache types resolve limit reflection private static Hash Map Class Type resolved Types new Hash Map Class Type private Exceptional Function function private String counter Group Takes class name Function initializes using default constructor passes Function Wrapper Eval Func Exceptional Function function Functions must implement either com google common base Function Exceptional Function param function Class Name function class initialize public Function Wrapper Eval Func String function Class Name throws Class Found Exception Method Exception Illegal Access Exception Instantiation Exception Exception initialize Function function Class Name Determines input output types Function initializes superclass Subclass call constructor Function non default constructor required param function Function used protected Function Wrapper Eval Func com google common base Function function throws Exception Class Found Exception Method Exception Exceptional Function new Google Function Bridge function Determines input output types Function initializes superclass Subclass call constructor Function non default constructor required param function Function used protected Function Wrapper Eval Func Exceptional Function function throws Exception Class Found Exception Method Exception super get Function Class function get Function Class function function function String function Name function instanceof Google Function Bridge Google Function Bridge function get Wrapped Function get Class get Simple Name function get Class get Simple Name counter Group get Class get Name function Name Override Suppress Warnings unchecked public Object exec Object input throws Exception try return function apply input catch Exception e safe Incr Counter get Counter Group e get Class get Canonical Name throw new Exception e Override protected String get Counter Group return counter Group private static Class get Function Class Exceptional Function function Class Name throws Class Found Exception Method Exception Exception return get Function Type Class function Class Name private static Class get Function Class Exceptional Function function Class Name throws Class Found Exception Method Exception Exception return get Function Type Class function Class Name given class implements parameterized interface code Exceptional Function code return type class code index code position Function class code Google Function Bridge code return type class wrapped function private static Class get Function Type Class Exceptional Function function int index throws Class Found Exception Method Exception Exception Class clazz Class expected Interface function instanceof Google Function Bridge clazz Google Function Bridge function get Wrapped Function get Class expected Interface com google common base Function class else clazz function get Class expected Interface Exceptional Function class check cache resolved Types contains Key clazz return Class resolved Types get clazz index Type interface Types clazz get Generic Interfaces Type interface Type interface Types Parameterized Type parameterized Type Parameterized Type interface Type expected Interface Assignable Class parameterized Type get Raw Type Type types parameterized Type get Actual Type Arguments resolved Types put clazz types return Class types index throw new Method Exception Unrecognized function class passed clazz get Class Function must implement either com google common base Function class get Name Exceptional Function class get Name Suppress Warnings unchecked private static Exceptional Function initialize Function String function Class Name throws Exception Illegal Access Exception Instantiation Exception Object function Object Context resolve Class Name function Class Name new Instance function Object instanceof Exceptional Function return Exceptional Function function Object else function Object instanceof com google common base Function return new Google Function Bridge com google common base Function function Object throw new Instantiation Exception Unrecognized function class passed function Object get Class Function must implement either com google common base Function class get Name Exceptional Function class get Name Used handle Google Function well Exceptional Function private static class Google Function Bridge implements org apache Function private com google common base Function function private Google Function Bridge com google common base Function function function function public com google common base Function get Wrapped Function return function Override Suppress Warnings unchecked public apply Object item return function apply item
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java util Array List import java util Arrays import java util List import org apache impl util Jar Manager public class Func Utils Utility function get list containing jars via classes param classes Identifying Jars classes used identify containing jars return list containing jars public static List String get Ship Files Class classes Identifying Jars return get Ship Files Arrays List classes Identifying Jars public static List String get Ship Files List Class classes Identifying Jars List String cache Files new Array List String Class clz classes Identifying Jars String jar Jar Manager find Containing Jar clz cache Files add jar return cache Files
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import org apache Eval Func import org apache backend executionengine Exec Exception import org apache data Data Type import org apache data Tuple import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl logical Layer schema Schema Field Schema generic Invoker class common grunt work setting invoker Class specific non generic extensions class needed know type return expect exec find appropriate classes reflection implement constructors call super Note parameter constructor b required b seemingly nonsensical work p Invoker family udfs understand following class names case independent li String li Long li Float li Double li Int p Invokers also work array arguments represented Data Bags single tuple elements Simply refer code string code example p allows one dynamically invoke Java methods return code code p Usage Invoker family Fs adjust appropriate p pre code invoking static method String Long Invoke Long java lang Long value String longs strings String Long chararray invoking method object String Concat Invoke String java lang String concat String String false concatenations strings String Concat str str pre p first argument constructor full path desired method br second argument list classes method parameters br method static first element list object invoke method br second argument optional argument static method assumed supplied br third argument keyword static true signify method static br third argument optional true default br p param public abstract class Generic Invoker extends Eval Func private Invoker invoker public Generic Invoker public Generic Invoker String full Name throws Class Found Exception Frontend Exception Security Exception Method Exception invoker new Invoker full Name public Generic Invoker String full Name String param Specs Str throws Class Found Exception Frontend Exception Security Exception Method Exception invoker new Invoker full Name param Specs Str public Generic Invoker String full Name String param Specs Str String Static throws Class Found Exception Frontend Exception Security Exception Method Exception invoker new Invoker full Name param Specs Str Static Override public exec Tuple input throws Exception invoker null throw new Exec Exception exec attempted unitialized invoker Invokers must constructed method invoke parameter signature return invoker invoke input Override public Schema output Schema Schema input invoker null return null Field Schema fs new Field Schema null Data Type find Type invoker get Return Type return new Schema fs
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location public class Greater Equal Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Greater Equal Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super Greater Equal plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Greater Equal Expression Greater Equal Expression eo Greater Equal Expression return eo get Lhs Equal get Lhs eo get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Greater Equal Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception public class Greater Expr extends Binary Comparison Operator private static final long serial Version public Greater Expr Operator Key k k public Greater Expr Operator Key k int rp super k rp result Type Data Type Override public String name return Greater Data Type find Type Name result Type Key String Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Greater Override public Result get Next Boolean throws Exec Exception Result left right switch operand Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type Result r accum Child null operand Type r null return r left lhs get Next operand Type right rhs get Next operand Type return Comparison left right default int err Code String msg get Class get Simple Name know handle type Data Type find Type Name operand Type throw new Exec Exception msg err Code Exception Suppress Warnings unchecked private Result Comparison Result left Result right left return Status Status return left right return Status Status return right either operand null result null left result null right result null left result null left return Status Status return left assert left result instanceof Comparable assert right result instanceof Comparable Comparable left result compare right result left result Boolean else left result Boolean illustrator Markup null left result Boolean left result return left Override public Greater Expr clone throws Clone Supported Exception Greater Expr clone new Greater Expr new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location public class Greater Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Greater Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super Greater plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Greater Expression Greater Expression eo Greater Expression return eo get Lhs Equal get Lhs eo get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Greater Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools grunt import java io Buffered Reader import java util Array List import jline console Console Reader import org apache commons logging Log import org apache commons logging Log Factory import org apache Server import org apache impl Context import org apache tools grunt Grunt Parser import org apache tools grunt Completor import org apache tools grunt Completor Aliases import org apache tools pigstats Stats Util import org apache backend executionengine Exec Exception import org apache impl util Log Utils public class Grunt private final Log log Log Factory get Log get Class Buffered Reader Server Grunt Parser parser public Grunt Buffered Reader Context Context throws Exec Exception new Server Context null parser new Grunt Parser public void set Console Reader Console Reader c c add Completer new Completor Aliases c add Completer new Completor parser set Console Reader c public void run boolean verbose true equals Ignore Case get Context get Properties get Property verbose true try Stats Util get Empty Stats parser set Interactive true parser parse Stop Error break catch Throwable Log Utils write Log get Context get Properties get Property logfile log verbose Stack Trace parser Init public int exec throws Throwable boolean verbose true equals Ignore Case get Context get Properties get Property verbose try Stats Util get Empty Stats parser set Interactive false return parser parse Stop Error catch Throwable Log Utils write Log get Context get Properties get Property logfile log verbose Stack Trace throw public void check Script String script File throws Throwable boolean verbose true equals Ignore Case get Context get Properties get Property verbose try parser set Interactive false parser set Validate Statement true boolean dont Print Output true parser process Explain null script File false text null new Array List String new Array List String dont Print Output catch Throwable Log Utils write Log get Context get Properties get Property logfile log verbose Stack Trace throw
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools grunt import java io Buffered Reader import java io Byte Array Input Stream import java io File import java io File Found Exception import java io File Output Stream import java io File Reader import java io Exception import java io Input Stream import java io Input Stream Reader import java io Print Stream import java io Reader import java io String Reader import java util Abstract List import java util Array List import java util Arrays import java util Collections import java util Date import java util Hash Set import java util Iterator import java util List import java util Map import java util Properties import java util Set import jline console Console Reader import org apache commons io output Null Output Stream import org apache commons lang String Utils import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop fs File System import org apache hadoop fs Fs Shell import org apache hadoop fs Path import org apache Load Func import org apache Server import org apache backend datastorage Container Descriptor import org apache backend datastorage Data Storage import org apache backend datastorage Data Storage Exception import org apache backend datastorage Element Descriptor import org apache backend executionengine Exec Exception import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop datastorage Data Storage import org apache data Tuple import org apache impl Context import org apache impl io File Localizer import org apache impl io File Localizer Fetch File Ret import org apache impl util Log Utils import org apache impl util Tuple Format import org apache parser Register Resolver import org apache tools pigscript parser Parse Exception import org apache tools pigscript parser Script Parser import org apache tools pigscript parser Script Parser Token Manager import org apache tools pigscript parser Token Mgr Error import org apache tools pigstats Job Stats import org apache tools pigstats Stats import org apache tools pigstats Stats Job Graph import org apache validator Black Whitelist Filter import org apache validator Command Filter import org fusesource jansi Ansi import org fusesource jansi Ansi Console import com google common collect Lists public class Grunt Parser extends Script Parser private static final Log log Log Factory get Log Grunt Parser class private Command Filter filter public Grunt Parser Reader reader reader null init public Grunt Parser Reader reader Server Server super reader Server Server init public Grunt Parser Input Stream stream String encoding stream encoding null public Grunt Parser Input Stream stream String encoding Server Server super stream encoding Server Server init public Grunt Parser Input Stream stream super stream init public Grunt Parser Input Stream stream Server Server super stream Server Server init public Grunt Parser Script Parser Token Manager tm tm null public Grunt Parser Script Parser Token Manager tm Server Server super tm Server Server init private void init Done false Load false Explain null Script Illustrate false set Props filter new Black Whitelist Filter Server private void set Props Dfs Server get Context get Dfs Lfs Server get Context get Lfs Conf Server get Context get Properties shell new Fs Shell Configuration Util Configuration Conf Override public void set Interactive boolean Interactive super set Interactive Interactive Interactive set Validate Statement true public void set Validate Statement boolean b Server set Validate Statement b private void set Batch Server set Batch private void execute Batch throws Exception Server Batch Explain null explain Current Batch Load Server execute Batch Stats stats Stats get Job Graph jg stats get Job Graph Iterator Job Stats iter jg iterator iter Next Job Stats js iter next js Successful Num Failed Jobs Exception exp js get Exception null js get Exception new Exec Exception Job js get Job Id null js get Job Id failed hadoop return error message Log Utils write Log exp Server get Context get Properties get Property logfile log true equals Ignore Case Server get Context get Properties get Property verbose Stack Trace else Num Succeeded Jobs private void discard Batch throws Exception Server Batch Server discard Batch public int parse Stop Error throws Exception Parse Exception return parse Stop Error false Parses commands either interactive mode batch mode interactive mode executes plan right away whenever command encountered throws Exception Parse Exception public int parse Stop Error boolean Batch throws Exception Parse Exception Server null throw new Illegal State Exception Interactive Batch set Batch Server set Skip Parse Register Batch true try prompt Done false Done parse Batch execute Batch catch Token Mgr Error tme error Script Parser Token Manager intuitive always refers last line reading whole query without parsing line line batch execute Batch get error Query Parser Interactive Batch execute Batch throw tme finally Batch discard Batch int res Num Succeeded Jobs Num Failed Jobs return res public void set Load boolean load Load load public void set Script Illustrate Script Illustrate true Override public void prompt Interactive Console Reader set Prompt grunt Override protected void quit Done true public boolean Done return Done parse method added supporting penny public void parse throws Exception Parse Exception Server null throw new Illegal State Exception Done false Done parse Override protected void process Describe String alias throws Exception String nested Alias null Explain null process explain mode Server Batch Server parse Build alias null alias Server get Context get Last Alias describe used immediately launching grunt shell last defined alias null alias null throw new Exception previously defined alias found Please define alias use describe operator alias contains nested Alias alias substring alias index alias alias substring alias index Server dump Schema Nested alias nested Alias else equals alias alias Server get Last Rel Server dump Schema alias else log warn describe statement ignored processing explain script check Override protected void process Explain String alias String script boolean Verbose String format String target List String params List String files throws Exception Parse Exception Server Batch Server parse Build alias null script null Interactive alias Server get Context get Last Alias explain used immediately launching grunt shell last defined alias null alias null throw new Parse Exception explain statement must alias script equals alias alias Server get Last Rel process Explain alias script Verbose format target params files false protected void process Explain String alias String script boolean Verbose String format String target List String params List String files boolean dont Print Output throws Exception Parse Exception filter validate Command Filter Command null Explain return try Explain new Explain State alias target script Verbose format script null set Batch try load Script script true true false params files catch Exception e discard Batch throw e catch Parse Exception e discard Batch throw e Explain Last true explain Current Batch dont Print Output finally script null discard Batch Explain null protected void explain Current Batch throws Exception explain Current Batch false protected void explain Current Batch boolean dont Print Output throws Exception Print Stream lp dont Print Output new Print Stream new Null Output Stream System Print Stream ep dont Print Output new Print Stream new Null Output Stream System Explain Last Explain Count Server Batch Empty return Explain Count boolean mark Executed Explain Script null Explain Target null File file new File Explain Target file Directory String Count Explain Last Explain Count Explain Count String suffix Explain Time Count Explain Format lp new Print Stream new File file logical plan suffix Server explain Explain Alias Explain Format Explain Verbose mark Executed lp null file suffix lp close ep close else boolean append Explain Count lp ep new Print Stream new File Output Stream Explain Target append Server explain Explain Alias Explain Format Explain Verbose mark Executed lp ep null null lp close else Server explain Explain Alias Explain Format Explain Verbose mark Executed lp ep null null Override protected void print Aliases throws Exception Explain null process explain mode Server print Aliases else log warn aliases statement ignored processing explain script check Override protected void print Clear Ansi Console system Install Ansi ansi Ansi ansi System println ansi erase Screen System println ansi cursor Ansi Console system Uninstall Override protected void process Register String jar throws Exception filter validate Command Filter Command jar parameter Substitution Grunt jar Server register Jar jar Override protected void process Register String path String scripting Lang String namespace throws Exception Parse Exception filter validate Command Filter Command path parameter Substitution Grunt path scripting Lang parameter Substitution Grunt scripting Lang namespace parameter Substitution Grunt namespace new Register Resolver Server parse Register path scripting Lang namespace private String run Preprocessor String script Path List String params List String param Files throws Exception Parse Exception Context context Server get Context Buffered Reader reader new Buffered Reader new File Reader script Path String result context Param Substitution reader params param Files reader close return result Override protected void process Script String script boolean batch List String params List String files throws Exception Parse Exception batch filter validate Command Filter Command else filter validate Command Filter Command Explain null process explain mode script null execute Batch return batch set Batch Server set Job Name script try load Script script true false Load params files execute Batch finally discard Batch else load Script script false false Load params files else log warn run exec statement ignored processing explain script check private void load Script String script boolean batch boolean load boolean illustrate List String params List String files throws Exception Parse Exception Reader input Reader Console Reader reader boolean interactive Context pc Server get Context load pc get Preprocessor Context param Scope Push pc set Params params pc set Param Files files try Fetch File Ret fetch File File Localizer fetch File Conf script String cmds run Preprocessor fetch File file get Absolute Path params files Interactive batch Write prompt echo commands Console reader treats tabs special way cmds cmds replace reader new Console Reader new Byte Array Input Stream cmds get Bytes System reader set History Console Reader get History Input Stream new Console Reader Input Stream reader input Reader new Buffered Reader new Input Stream Reader interactive true else Quietly parse statements input Reader new String Reader cmds reader null interactive false catch File Found Exception fnfe throw new Parse Exception File found script catch Security Exception se throw new Parse Exception access file script Grunt Parser parser new Grunt Parser input Reader Server parser set Console Reader reader parser set Interactive interactive parser set Load load illustrate parser set Script Illustrate parser Explain Explain parser prompt parser Done parser parse interactive System println load pc get Preprocessor Context param Scope Pop Override protected void process Set String key String value throws Exception Parse Exception filter validate Command Filter Command key parameter Substitution Grunt key value parameter Substitution Grunt value key equals debug value null value equals Server debug else value equals Server debug else throw new Parse Exception Invalid value value provided key else System println key Server Debug else key equals job name value null Server set Job Name value else System println key Server get Job Name else key equals job priority value null Server set Job Priority value else System println key Server get Job Priority else key equals stream skippath value null Validate File file new File value file exists file Directory throw new Exception Invalid value stream skippath value Server add Path Skip value else System println key String Utils join Server get Context get Paths Skip else key equals default parallel value null Validate try Server set Default Parallel Integer parse Int value catch Number Format Exception e throw new Parse Exception Invalid value default parallel else System println key Server get Context get Default Parallel else value null Server get Context get Execution Engine set Property key value else Server get Context get Properties contains Key key System println key Server get Context get Properties get Property key else System println key defined Override protected void process Set throws Exception Parse Exception filter validate Command Filter Command Properties job Props Server get Context get Properties Properties sys Props System get Properties List String job Props List Lists new Array List List String sys Props List Lists new Array List Object key job Props key Set String prop Str key job Props get Property String key sys Props contains Key key sys Props List add system prop Str else job Props List add prop Str Collections sort job Props List Collections sort sys Props List job Props List add sys Props List String prop job Props List System println prop Override protected void process Cat String path throws Exception filter validate Command Filter Command path parameter Substitution Grunt path Explain null process explain mode execute Batch try byte buffer new byte Element Descriptor dfs Path Dfs Element path int rc dfs Path exists throw new Exception Directory path exist Dfs Container path Container Descriptor dfs Dir Container Descriptor dfs Path Iterator Element Descriptor paths dfs Dir iterator paths Next Element Descriptor cur Elem paths next Dfs Container cur Elem String continue Input Stream cur Elem open rc read buffer System write buffer rc close else Input Stream dfs Path open rc read buffer System write buffer rc close catch Data Storage Exception e throw new Exception Failed Cat path e else log warn cat statement ignored processing explain script check Override protected void process String path throws Exception filter validate Command Filter Command path parameter Substitution Grunt path Container Descriptor container Explain null process explain mode execute Batch try path null container Dfs Container Data Storage Dfs get get Home Directory String Dfs set Active Container container else container Dfs Container path container exists throw new Exception Directory path exist Dfs Container path throw new Exception path directory Dfs set Active Container container catch Data Storage Exception e throw new Exception Failed change working directory path null Data Storage Dfs get get Home Directory String path e else log warn cd statement ignored processing explain script check Override protected void process Dump String alias throws Exception filter validate Command Filter Command alias null Server Batch Server parse Build alias Server get Context get Last Alias dump used immediately launching grunt shell last defined alias null alias null throw new Exception previously defined alias found Please define alias use dump operator Explain null process explain mode execute Batch equals alias alias Server get Last Rel Iterator Tuple result Server open Iterator alias result Next Tuple result next System println Tuple Format format else log warn dump statement ignored processing explain script check Override protected void process Illustrate String alias String script String target List String params List String files throws Exception Parse Exception filter validate Command Filter Command Script Illustrate throw new Parse Exception illustrate statement appear script illustrated opon alias null script null throw new Parse Exception illustrate statement alias work script effect else Explain null log warn illustrate statement ignored processing explain script check else try script null true equals Ignore Case Server get Context get Properties get Property opt multiquery true throw new Parse Exception explain script multiquery disabled set Batch try load Script script true true true params files catch Exception e discard Batch throw e catch Parse Exception e discard Batch throw e else alias null Server Batch Server parse Build alias Server get Context get Last Alias illustrate used immediately launching grunt shell last defined alias null alias null throw new Parse Exception illustrate statement must alias script equals alias Server Batch Server parse Build alias Server get Last Rel Server get Examples alias finally script null discard Batch Override protected void process Kill String jobid throws Exception filter validate Command Filter Command Server get Context get Execution Engine kill Job jobid Override protected void process String path throws Exception filter validate Command Filter Command path parameter Substitution Grunt path Explain null process explain mode execute Batch try Element Descriptor path Descriptor path null path Descriptor Dfs get Active Container else path Descriptor Dfs Element path path Descriptor exists throw new Exception File directory path exist Dfs Container path Descriptor String Container Descriptor container Container Descriptor path Descriptor Iterator Element Descriptor elems container iterator elems Next Element Descriptor cur Elem elems next Dfs Container cur Elem String System println cur Elem String dir else print Length Replication cur Elem else print Length Replication path Descriptor catch Data Storage Exception e throw new Exception Failed path e else log warn ls statement ignored processing explain script check private void print Length Replication Element Descriptor elem throws Exception Map String Object stats elem get Statistics long replication Short stats get Element Descriptor long len Long stats get Element Descriptor System println elem String r replication len Override protected void process throws Exception filter validate Command Filter Command Explain null process explain mode execute Batch System println Dfs get Active Container String else log warn pwd statement ignored processing explain script check Override protected void process History boolean Numbers Server print History Numbers Override protected void print Help System println Commands System println latin statement See Latin manual details http hadoop apache org System println File system commands System println fs fs arguments Equivalent Hadoop dfs command http hadoop apache org common docs current hdfs shell html System println Diagnostic commands System println describe alias alias Show schema alias Inner aliases described System println explain script pigscript path brief dot xml param param name param value System println param file file name alias Show execution plan compute alias entire script System println script Explain entire script System println Store output directory rather print stdout System println brief n expand nested plans presenting smaller graph overview System println dot Generate output dot format Default text format System println xml Generate output xml format Default text format System println param param name See parameter substitution details System println param file file name See parameter substitution details System println alias Alias explain System println dump alias Compute alias writes results stdout System println Utility Commands System println exec param param name param value param file file name script System println Execute script access grunt environment including aliases System println param param name See parameter substitution details System println param file file name See parameter substitution details System println script Script executed System println run param param name param value param file file name script System println Execute script access grunt environment System println param param name See parameter substitution details System println param file file name See parameter substitution details System println script Script executed System println sh shell command Invoke shell command System println kill job id Kill hadoop job specified hadoop job id System println set key value Provide execution parameters Keys values case sensitive System println following keys supported System println default parallel Script level reduce parallelism Basic input size heuristics used default System println debug Set debug Default System println job name Single quoted name jobs Default Latin script name System println job priority Priority jobs Values low low normal high high Default normal System println stream skippath String contains path used streaming System println hadoop property System println help Display message System println history n Display list statements cache System println n Hide line numbers System println quit Quit grunt shell Override protected void process Move String src String dst throws Exception filter validate Command Filter Command src parameter Substitution Grunt src dst parameter Substitution Grunt dst Explain null process explain mode execute Batch try Element Descriptor src Path Dfs Element src Element Descriptor dst Path Dfs Element dst src Path exists throw new Exception File directory src exist src Path rename dst Path catch Data Storage Exception e throw new Exception Failed move src dst e else log warn mv statement ignored processing explain script check Override protected void process Copy String src String dst throws Exception filter validate Command Filter Command src parameter Substitution Grunt src dst parameter Substitution Grunt dst Explain null process explain mode execute Batch try Element Descriptor src Path Dfs Element src Element Descriptor dst Path Dfs Element dst src Path copy dst Path Conf false catch Data Storage Exception e throw new Exception Failed copy src dst e else log warn cp statement ignored processing explain script check Override protected void process Copy Local String src String dst throws Exception filter validate Command Filter Command src parameter Substitution Grunt src dst parameter Substitution Grunt dst Explain null process explain mode execute Batch try Element Descriptor src Path Dfs Element src Element Descriptor dst Path Lfs Element dst src Path copy dst Path false catch Data Storage Exception e throw new Exception Failed copy src locally dst e else log warn copy Local statement ignored processing explain script check Override protected void process Copy Local String src String dst throws Exception filter validate Command Filter Command src parameter Substitution Grunt src dst parameter Substitution Grunt dst Explain null process explain mode execute Batch try Element Descriptor src Path Lfs Element src Element Descriptor dst Path Dfs Element dst src Path copy dst Path false catch Data Storage Exception e throw new Exception Failed copy loally src dst e else log warn copy Local statement ignored processing explain script check Override protected void process Mkdir String dir throws Exception filter validate Command Filter Command dir parameter Substitution Grunt dir Explain null process explain mode execute Batch Container Descriptor dir Descriptor Dfs Container dir dir Descriptor create else log warn mkdir statement ignored processing explain script check Override protected void process String cmd throws Exception int start cmd parameter Substitution Grunt cmd Interactive start get Line Number cmd char cmd length Server register Query cmd start else Server register Query cmd start Override protected void process Remove String path String options throws Exception filter validate Command Filter Command filter validate Command Filter Command path parameter Substitution Grunt path int int Explain null process explain mode Path file Path new Path path Element Descriptor dfs Path null File System fs file Path get File System Configuration Util Configuration Conf execute Batch fs exists file Path options null options equals Ignore Case force throw new Exception File directory path exist else boolean delete Success fs delete file Path true delete Success log warn Unable delete path return long start Time System current Time Millis long duration fs exists file Path duration System current Time Millis start Time duration throw new Exception Timed waiting delete file dfs Path else try Thread sleep catch Interrupted Exception e throw new Exception Error waiting file deletion e log info Waited duration ms delete file else log warn rm rmf statement ignored processing explain script check Override protected void process Fs Command String cmd Tokens throws Exception filter validate Command Filter Command int cmd Tokens length cmd Tokens parameter Substitution Grunt cmd Tokens Explain null process explain mode execute Batch int ret Code try ret Code shell run cmd Tokens catch Exception e throw new Exception e ret Code Interactive String Load Func join Abstract List String Arrays List cmd Tokens throw new Exception fs command failed Please check output logs details else log warn fs statement ignored processing explain script check Override protected void process Sh Command String cmd Tokens throws Exception filter validate Command Filter Command int cmd Tokens length cmd Tokens parameter Substitution Grunt cmd Tokens Explain null process explain mode try execute Batch sh command create process following syntax shell exe invoke arg command string String shell Name sh String shell Invoke Arg c Insert cmd front array list execute support built shell commands like mkdir Windows System get Property os name starts Windows shell Name cmd shell Invoke Arg List String string List new Array List String string List add shell Name string List add shell Invoke Arg String Buffer command String new String Buffer String curr Token cmd Tokens command String append command String append curr Token string List add command String String String new Cmd Tokens string List Array new String Process executor Runtime get Runtime exec new Cmd Tokens Stream Printer Printer new Stream Printer executor get Input Stream null System Stream Printer err Printer new Stream Printer executor get Error Stream null System err Printer start err Printer start int ret executor wait Printer join err Printer join ret Interactive String Load Func join Abstract List String Arrays List cmd Tokens throw new Exception sh command failed Please check output logs details catch Exception e throw new Exception e else log warn sh statement ignored processing explain script check public static int run Command String hcat Bin String cmd boolean Interactive throws Exception List String tokens List new Array List String hcat Bin ends py tokens List add python tokens List add hcat Bin else tokens List add hcat Bin cmd cmd trim cmd substring Lower Case equals sql never happen throw new Exception sql command start sql keyword cmd cmd substring trim tokens List add e tokens List add cmd replace n String tokens tokens List Array new String create new environment environment antlr version conflict Hive Map String String envs System getenv Set String env Set new Hash Set String Map Entry String String entry envs entry Set entry get Key equals env Set add entry get Key entry get Value log info Going run hcat command tokens tokens length Process executor Runtime get Runtime exec tokens env Set Array new String Stream Printer Printer new Stream Printer executor get Input Stream null System Stream Printer err Printer new Stream Printer executor get Error Stream null System err Printer start err Printer start int ret try ret executor wait Printer join err Printer join ret Interactive throw new Exception sql command cmd failed catch Interrupted Exception e log warn Exception raised sql command e get Localized Message return Override protected void process Command String cmd throws Exception cmd parameter Substitution Grunt cmd Explain null process explain mode Server get Context get Properties get sql type equals hcat throw new Exception sql command support hcat currently String hcat Bin String Server get Context get Properties get hcat bin hcat Bin null throw new Exception hcat bin defined Define hcat script Usually bin hcat new File hcat Bin exists throw new Exception hcat Bin exist Please check hcat bin setting properties execute Batch run Command hcat Bin cmd Interactive else log warn sql statement ignored processing explain script check Override protected void process Default String key String value throws Exception parameter Substitution Grunt default key value Override protected void process Declare String key String value throws Exception parameter Substitution Grunt declare key value private String parameter Substitution Grunt String input throws Exception Interactive input null return Server get Context Param Substitution new Buffered Reader new String Reader input trim return input Stream Printer public static class Stream Printer extends Thread Input Stream String type Print Stream os public Stream Printer Input Stream String type Print Stream os type type os os Override public void run try Input Stream Reader isr new Input Stream Reader Buffered Reader br new Buffered Reader isr String line null type null line br read Line null os println type line else line br read Line null os println line catch Exception ioe ioe print Stack Trace protected static class Explain State public long Time public int Count public String Alias public String Target public String Script public boolean Verbose public String Format public boolean Last public Explain State String alias String target String script boolean verbose String format Time new Date get Time Count Alias alias Target target Script script Verbose verbose Format format Last false private Server Server private Data Storage Dfs private Data Storage Lfs private Properties Conf private boolean Done private boolean Load private Explain State Explain private int Num Failed Jobs private int Num Succeeded Jobs private Fs Shell shell private boolean Script Illustrate Testing protected void set Explain State Explain State explain State Explain explain State
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import org apache commons logging Log import org apache commons logging Log Factory import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception public class Equal Expr extends Binary Comparison Operator private static final long serial Version transient private final Log log Log Factory get Log get Class public Equal Expr Operator Key k k public Equal Expr Operator Key k int rp super k rp result Type Data Type Override public String name return Greater Equal Data Type find Type Name result Type Key String Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Equal Override public Result get Next Boolean throws Exec Exception Result left right switch operand Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type Result r accum Child null operand Type r null return r left lhs get Next operand Type right rhs get Next operand Type return Comparison left right default int err Code String msg get Class get Simple Name know handle type Data Type find Type Name operand Type throw new Exec Exception msg err Code Exception Suppress Warnings unchecked private Result Comparison Result left Result right left return Status Status return left right return Status Status return right either operand null result null left result null right result null left result null left return Status Status return left assert left result instanceof Comparable assert right result instanceof Comparable Comparable left result compare right result left result Boolean else left result Boolean illustrator Markup null left result Boolean left result return left Override public Equal Expr clone throws Clone Supported Exception Equal Expr clone new Equal Expr new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine shims import java io Exception import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop mapred Job Conf import org apache hadoop mapreduce Context Factory import org apache hadoop mapreduce Job Context import org apache hadoop mapreduce Job import org apache hadoop mapreduce Task Attempt Context import org apache hadoop mapreduce Task Attempt import org apache hadoop mapreduce Task Type import org apache hadoop mapreduce task Job Context Impl import org apache hadoop mapreduce task Task Attempt Context Impl public class Hadoop Shims private static Log Log Factory get Log Hadoop Shims class static public Job Context clone Job Context Job Context original throws Exception Interrupted Exception Job Context new Context Context Factory clone Context original new Job Conf original get Configuration return new Context static public Task Attempt Context create Task Attempt Context Configuration conf Task Attempt task Id conf instanceof Job Conf return new Task Attempt Context Impl new Job Conf conf task Id else return new Task Attempt Context Impl conf task Id static public Job Context create Job Context Configuration conf Job job Id conf instanceof Job Conf return new Job Context Impl new Job Conf conf job Id else return new Job Context Impl conf job Id static public boolean Map Task Attempt task Attempt Task Type type task Attempt get Task Type type Task Type return true return false static public Task Attempt get New Task Attempt Task Attempt task Attempt new Task Attempt Task Type return task Attempt static public Task Attempt create Task Attempt String jt Identifier int job Id boolean Map int task Id int id Map return new Task Attempt jt Identifier job Id Task Type task Id id else return new Task Attempt jt Identifier job Id Task Type task Id id Returns whether give path File System implementation param path path param conf configuration return true give path scheme File System implementation false otherwise public static boolean File System Impl Path path Configuration conf String scheme path Uri get Scheme scheme null Hadoop conf get fs file impl null String fs Impl conf get fs scheme impl fs Impl null return false else try Object fs File System get File System Class scheme conf return fs null false true catch Exception e return false return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop hbase import java io Exception import java lang reflect Invocation Target Exception import java lang reflect Undeclared Throwable Exception import java math Big Decimal import java math Big Integer import java net Malformed Exception import java net import java util Array List import java util Arrays import java util Hash Map import java util List import java util Map import java util Map Entry import java util Navigable Map import java util Properties import org apache commons cli Command Line import org apache commons cli Command Line Parser import org apache commons cli Gnu Parser import org apache commons cli Help Formatter import org apache commons cli Option import org apache commons cli Option Builder import org apache commons cli Options import org apache commons cli Parse Exception import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs Path import org apache hadoop hbase Base Configuration import org apache hadoop hbase client Delete import org apache hadoop hbase client Put import org apache hadoop hbase client Result import org apache hadoop hbase client Scan import org apache hadoop hbase filter Binary Comparator import org apache hadoop hbase filter Column Prefix Filter import org apache hadoop hbase filter Compare Filter Compare Op import org apache hadoop hbase filter Family Filter import org apache hadoop hbase filter Filter import org apache hadoop hbase filter Filter List import org apache hadoop hbase filter Qualifier Filter import org apache hadoop hbase filter Regex String Comparator import org apache hadoop hbase filter Row Filter import org apache hadoop hbase filter Match Filter import org apache hadoop hbase io Immutable Bytes Writable import org apache hadoop hbase mapreduce Table Input Format import org apache hadoop hbase mapreduce Table Map Reduce Util import org apache hadoop hbase mapreduce Table Output Format import org apache hadoop hbase mapreduce Table Split import org apache hadoop hbase security token Token Util import org apache hadoop hbase util Bytes import org apache hadoop io Writable Comparable import org apache hadoop mapred Job Conf import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Input Split import org apache hadoop mapreduce Job import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce Record Writer import org apache hadoop security User Group Information import org apache Collectable Load Func import org apache Load Caster import org apache Load Func import org apache Load Push import org apache Load Store Caster import org apache Ordered Load Func import org apache Resource Schema import org apache Resource Schema Resource Field Schema import org apache Store Func Interface import org apache Store Resources import org apache backend hadoop executionengine map Reduce Layer Split import org apache backend hadoop hbase Base Table Input Format Base Table Builder import org apache builtin Func Utils import org apache builtin Utf Storage Converter import org apache data Data Bag import org apache data Data Byte Array import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl Context import org apache impl logical Layer Frontend Exception import org apache impl util Object Serializer import org apache impl util Context import org apache impl util Utils import org joda time Date Time import com google common collect Lists Base implementation Load Func Store Func example showing load data Base pre code raw hbase Sample Table org apache backend hadoop hbase Base Storage info first name info last name friends info load Key true limit id bytearray first name chararray last name chararray friends map map info map map pre example loads data redundantly info column family illustrate usage Note row key inserted first result schema load column names start given prefix specify column name trailing example passing code friends bob code constructor example would cause columns start bob loaded Note using prefix like code friends bob code explicit Base filters set columns prefixes specified Querying Base many filters cause performance degredation typically seen mixing one prefixed descriptors large list columns case better perfomance seen either loading entire family via code friends code specifying explicit column descriptor names example showing store data Base pre code copy raw hbase Sample Table Copy org apache backend hadoop hbase Base Storage info first name info last name friends info pre Note expect first value tuple row key Scalars values need map explicit column descriptor maps need map column family name examples code friends code column family data code Sample Table code written code buddies code column family code Sample Table Copy code table public class Base Storage extends Load Func implements Store Func Interface Load Push Ordered Load Func Store Resources Collectable Load Func private static final Log Log Factory get Log Base Storage class private final static String Storage Converter private final static String Base Binary Converter private final static String hbase caster private final static String private final static String private final static String hbase security authentication private final static String hbase config set private final static String hbase token set private List Column Info column Info Lists new Array List Use Job Conf store hbase delegation token private Job Conf conf private Record Reader reader private Record Writer writer private Table Output Format output Format null private Scan scan private String context Signature null private final Command Line configured Options private final static Options valid Options new Options private final static Command Line Parser parser new Gnu Parser private boolean load Row Key private String delimiter private boolean ignore Whitespace private final long limit private final boolean cache Blocks private final int caching private boolean private final long min Timestamp private final long max Timestamp private final long timestamp private boolean include Timestamp private boolean include Tombstone protected transient byte gt protected transient byte gte protected transient byte lt protected transient byte lte private String regex private Load Caster caster private Resource Schema schema private Required Field List required Field List private static void populate Valid Options Option load Key Option Builder Optional Args Arg Name load Key Long Opt load Key Description Load Key create valid Options add Option load Key valid Options add Option gt true Records must greater value binary double slash escaped valid Options add Option lt true Records must less value binary double slash escaped valid Options add Option gte true Records must greater equal value valid Options add Option lte true Records must less equal value valid Options add Option regex true Record must match regular expression valid Options add Option cache Blocks true Set whether blocks cached scan valid Options add Option caching true Number rows scanners cache valid Options add Option limit true Per region limit valid Options add Option max Results Per Column Family true Limit maximum number values returned per row per column family valid Options add Option delim true Column delimiter valid Options add Option ignore Whitespace true Ignore spaces parsing columns valid Options add Option caster true Caster use converting values class name Base Binary Converter Utf Storage Converter storage casters must implement Load Store Caster Option Wal Option Builder Optional Args Arg Name Long Opt Description Sets write ahead false faster loading used extreme caution since could result data loss see http hbase apache org book html perf hbase client putwal create valid Options add Option Wal valid Options add Option min Timestamp true Record must timestamp greater equal value valid Options add Option max Timestamp true Record must timestamp less value valid Options add Option timestamp true Record must timestamp equal value valid Options add Option include Timestamp false Record include timestamp rowkey store rowkey timestamp valid Options add Option include Tombstone false Record include tombstone marker store row Key timestamp included rowkey timestamp tombstone Constructor Construct Base Table Load Func Store Func load store cells provided columns param column List columnlist presented string delimited space commas retreive columns column family code Foo code specify column either code Foo code code Foo code fetch columns start bar specify code Foo bar code resulting tuple always size number tokens code column List code Items tuple scalar values full column descriptor specified map column descriptors values column family specified throws Parse Exception unable parse arguments throws Exception public Base Storage String column List throws Parse Exception Exception column List Constructor Construct Base Table Load Func Store Func load store param column List param opt String Loader options Known options ul li load Key true false Load row key first column li gt min Key Val li lt max Key Val li gte min Key Val li lte max Key Val li regex match regex Key Val li limit num Rows Per Region max number rows retrieve per region li max Results Per Column Family Limit maximum number values returned per row per column family li delim char delimiter use parsing column names default space comma li ignore Whitespace true false ignore spaces parsing column names default true li cache Blocks true false Set whether blocks cached scan default false li caching num Rows number rows cache faster scans memory li true false Sets write ahead false faster loading li min Timestamp Scan timestamp min time Range li max Timestamp Scan timestamp max time Range li timestamp Scan specified timestamp li include Timestamp Record include timestamp rowkey store rowkey timestamp li include Tombstone Record include tombstone marker store row Key timestamp included rowkey timestamp tombstone li caster Base Binary Converter Utf Storage Converter Utf Storage Converter default used extreme caution since could result data loss see http hbase apache org book html perf hbase client putwal ul throws Parse Exception throws Exception public Base Storage String column List String opt String throws Parse Exception Exception populate Valid Options String opts Arr opt String split try configured Options parser parse valid Options opts Arr catch Parse Exception e Help Formatter formatter new Help Formatter formatter print Help load Key gt gte lt lte regex cache Blocks caching caster limit max Results Per Column Family delim ignore Whitespace min Timestamp max Timestamp timestamp include Timestamp include Tombstone valid Options throw e load Row Key false configured Options Option load Key String value configured Options get Option Value load Key true equals Ignore Case value equals Ignore Case value value null empty string null check backward compat load Row Key true delimiter configured Options get Option Value delim null delimiter configured Options get Option Value delim ignore Whitespace true configured Options Option ignore Whitespace String value configured Options get Option Value ignore Whitespace true equals Ignore Case value ignore Whitespace false column Info parse Column List column List delimiter ignore Whitespace mr Context deserialize first called Context get Context get Client System Props called value null spark mode spark executor first initializes object Context get Context get Client System Props null Context deserialize called need check whether Context get Context get Client System Props null null default Caster otherwise Context get Context get Client System Props get Property Detail see String default Caster Context get Context get Client System Props null Context get Context get Client System Props get Property String caster Option configured Options get Option Value caster default Caster equals Ignore Case caster Option caster new Utf Storage Converter else equals Ignore Case caster Option caster new Base Binary Converter else try caster Load Caster Context instantiate Func Spec caster Option catch Class Cast Exception e error Configured caster implement Load Caster interface throw new Exception e catch Runtime Exception e error Configured caster class found e throw new Exception e debug Using caster caster get Class caching Integer value configured Options get Option Value caching cache Blocks Boolean value configured Options get Option Value cache Blocks false limit Long value configured Options get Option Value limit false configured Options Option String value configured Options get Option Value true equals Ignore Case value equals Ignore Case value value null empty string null check backward compat true configured Options Option min Timestamp min Timestamp Long parse Long configured Options get Option Value min Timestamp else min Timestamp configured Options Option max Timestamp max Timestamp Long parse Long configured Options get Option Value max Timestamp else max Timestamp Long configured Options Option timestamp timestamp Long parse Long configured Options get Option Value timestamp else timestamp include Timestamp false configured Options Option include Timestamp String value configured Options get Option Value include Timestamp true equals Ignore Case value equals Ignore Case value value null empty string null check backward compat include Timestamp true include Tombstone false configured Options Option include Tombstone String value configured Options get Option Value include Tombstone true equals Ignore Case value equals Ignore Case value value null include Tombstone true init Scan Returns Properties based code context Signature code private Properties get Properties return Context get Context get Properties get Class new String context Signature return code context Signature projected Fields code private String projected Fields Name return context Signature projected Fields param column List param delimiter param ignore Whitespace return private List Column Info parse Column List String column List String delimiter boolean ignore Whitespace List Column Info column Info new Array List Column Info Default behavior allow combinations spaces delimiter defaults comma Setting ignore whitespace include whitespace columns names String col Names column List split delimiter ignore Whitespace List String columns new Array List String String col Name col Names String sub Col Names col Name split String sub Col Name sub Col Names sub Col Name sub Col Name trim sub Col Name length columns add sub Col Name col Names columns Array new String columns size String col Name col Names column Info add new Column Info col Name return column Info private void init Scan throws Exception scan new Scan scan set Cache Blocks cache Blocks scan set Caching caching Set filters configured Options Option gt gt Bytes Bytes Binary Utils slashisize configured Options get Option Value gt add Row Filter Compare Op gt scan set Start Row gt configured Options Option lt lt Bytes Bytes Binary Utils slashisize configured Options get Option Value lt add Row Filter Compare Op lt scan set Stop Row lt configured Options Option gte gte Bytes Bytes Binary Utils slashisize configured Options get Option Value gte scan set Start Row gte configured Options Option lte lte Bytes Bytes Binary Utils slashisize configured Options get Option Value lte byte lt increment lte Debug Enabled debug String format Incrementing lte value bytes set stop row Bytes String lte String lte String lt lt null scan set Stop Row increment lte Match Filter short circuit scan longer match set Stop Row call limit number regions need scan add Filter new Match Filter new Row Filter Compare Op new Binary Comparator lte configured Options Option regex regex Utils slashisize configured Options get Option Value regex add Filter new Row Filter Compare Op new Regex String Comparator regex configured Options Option min Timestamp configured Options Option max Timestamp scan set Time Range min Timestamp max Timestamp configured Options Option timestamp scan set Time Stamp timestamp configured Options Option max Results Per Column Family int max Results Per Column Family Integer value configured Options get Option Value max Results Per Column Family scan set Max Results Per Column Family max Results Per Column Family group column Infos family n contain prefix n need set filters call add Column add Family See javadocs boolean column Prefix Exists false Column Info column Info column Info column Info get Column Prefix null column Prefix Exists true break column Prefix Exists add Filters Without Column Prefix column Info else add Filters Column Prefix column Info column prefix n need filters call add Column add Family scan private void add Filters Without Column Prefix List Column Info column Infos Need check mixed types family n call add Column add Family family Map String List Column Info grouped Map group Family column Infos Entry String List Column Info entry Set grouped Map entry Set boolean Columns true Column Info column Info entry Set get Value column Info Column Map Columns false break Columns Column Info column Info entry Set get Value Debug Enabled debug Adding column scan via add Column cf name Bytes String column Info get Column Family Bytes String column Info get Column Name scan add Column column Info get Column Family column Info get Column Name else String family entry Set get Key Debug Enabled debug Adding column family scan via add Family cf name family scan add Family Bytes Bytes family qualifier prefix wildcard e cf foo need filter every possible column returned shown become inneficient long lists columns mixed prefixed wildcard Filter List must pass Family Filter must pass Filter List either Qualifier Column Prefix Filter column family filters e cf explicit column descriptors e cf foo mix n need filters since scan take care private void add Filters Column Prefix List Column Info column Infos need apply column list filter family Filter List Column Filters null Map String List Column Info grouped Map group Family column Infos String cf String grouped Map key Set List Column Info column Info List grouped Map get cf String byte cf Bytes Bytes cf String filters roll one parent filter Column Filters null Column Filters new Filter List Filter List Operator group contains column family filter one column filters Filter List Column Group Filter new Filter List Filter List Operator Column Group Filter add Filter new Family Filter Compare Op new Binary Comparator cf Filter List column Filters new Filter List Filter List Operator Column Info col Info column Info List col Info Column Map Debug Enabled debug Adding family prefix filters values Bytes String col Info get Column Family Bytes String col Info get Column Prefix add Prefix Filter list column filters col Info get Column Prefix null column Filters add Filter new Column Prefix Filter col Info get Column Prefix else Debug Enabled debug Adding family descriptor filters values Bytes String col Info get Column Family Bytes String col Info get Column Name add Qualifier Filter list column filters column Filters add Filter new Qualifier Filter Compare Op new Binary Comparator col Info get Column Name column Filters get Filters size Column Group Filter add Filter column Filters Column Filters add Filter Column Group Filter Column Filters null add Filter Column Filters private void add Row Filter Compare Op op byte val Debug Enabled debug Adding filter op String value Bytes String Binary val add Filter new Row Filter op new Binary Comparator val private void add Filter Filter filter Filter List scan Filter Filter List scan get Filter scan Filter null scan Filter new Filter List Filter List Operator scan Filter add Filter filter scan set Filter scan Filter Returns Column Info list external objects inspect return List Column Info objects public List Column Info get Column Info List return column Info Updates Column Info List Use need implement custom projections protected void set Column Info List List Column Info column Info List column Info column Info List Stores required Fields List serialized object fetched cluster plan overwrite push Projection need call required Field List accessed cluster protected void store Projected Field Names Required Field List required Field List throws Frontend Exception try get Properties set Property projected Fields Name Object Serializer serialize required Field List catch Exception e throw new Frontend Exception e Override public Tuple get Next throws Exception try reader next Key Value Immutable Bytes Writable row Key Immutable Bytes Writable reader get Current Key Result result Result reader get Current Value int tuple Size column Info size use map families qualifiers recent version cell Fetching multiple vesions could useful feature Navigable Map byte Navigable Map byte byte results Map result get Version Map load Row Key tuple Size Tuple tuple Tuple Factory get Instance new Tuple tuple Size int start Index load Row Key tuple set new Data Byte Array row Key get start Index int column Info size int current Index start Index Column Info column Info column Info get column Info Column Map column family need iterate set values found Navigable Map byte byte cf Results results Map get column Info get Column Family Map String Data Byte Array cf Map new Hash Map String Data Byte Array cf Results null byte quantifier cf Results key Set need check prefix filter see value included ca n rely server side filter since user could specify multiple filters column Info get Column Prefix null column Info Prefix Match quantifier byte cell cf Results get quantifier Data Byte Array value cell null null new Data Byte Array cell cf Map put Bytes String quantifier value tuple set current Index cf Map else column set value byte cell result get Value column Info get Column Family column Info get Column Name Data Byte Array value cell null null new Data Byte Array cell tuple set current Index value Debug Enabled int tuple size debug tuple value tuple get return tuple catch Interrupted Exception e throw new Exception e return null Override public Input Format get Input Format Table Input Format input Format new Base Table Builder Limit limit Gt gt Gte gte Lt lt Lte lte Conf conf build input Format set Scan scan return input Format Override public void prepare Read Record Reader reader Split split reader reader Override public void set Context Signature String signature context Signature signature Override public void set Location String location Job job throws Exception Properties udf Props get Properties job get Configuration set Boolean Split Combination true conf initialize Local Job Config job String delegation Token Set udf Props get Property delegation Token Set null add Base Delegation Token conf job udf Props set Property true String tablename location location starts hbase tablename location substring conf set Table Input Format tablename String projected Fields udf Props get Property projected Fields Name projected Fields null update column Info push Projection Required Field List Object Serializer deserialize projected Fields add Filters Without Column Prefix column Info required Field List null Properties p Context get Context get Properties get Class new String context Signature p set Property context Signature projected Fields Object Serializer serialize required Field List Override public List String get Ship Files Depend Base right thing available try Configuration conf new Configuration Table Map Reduce Util add Base Dependency Jars conf conf get tmpjars null String tmpjars conf get Strings tmpjars List String ship Files new Array List String tmpjars length String tmpjar tmpjars ship Files add new tmpjar get Path return ship Files catch Exception e e instanceof Malformed Exception debug Table Map Reduce Utils add Base Dependency Jars tmpjars malformed url Falling back previous logic e else debug Table Map Reduce Utils add Base Dependency Jars invocation failed Falling back previous logic e List Class class List new Array List Class class List add org apache hadoop hbase client Table class main hbase jar hbase client class List add org apache hadoop hbase mapreduce Table Split class main hbase jar hbase server class List add org apache zookeeper Zoo Keeper class zookeeper Additional jars specific v add Class List org cloudera htrace Trace class List htrace add Class List org apache hadoop hbase protobuf generated Base Protos class List hbase protocol add Class List org apache hadoop hbase Table Name class List hbase common add Class List org apache hadoop hbase Compatibility Factory class List hbase hadoop compat add Class List org jboss netty channel Channel Factory class List netty return Func Utils get Ship Files class List private void add Class List String class Name List Class class List try Class klass Class Name class Name class List add klass catch Class Found Exception e debug Skipping adding jar class class Name private Job Conf initialize Local Job Config Job job Properties udf Props get Properties Configuration job Conf job get Configuration Job Conf local Conf new Job Conf job Conf udf Props contains Key Entry Object Object entry udf Props entry Set local Conf set String entry get Key String entry get Value else Configuration hbase Conf Base Configuration create Entry String String entry hbase Conf Job Conf may conf overriding ones hbase site xml copy hbase config job config Context Also avoids copying core default xml core site xml props hbase Conf Context would redundant job Conf get entry get Key null udf Props set Property entry get Key entry get Value local Conf set entry get Key entry get Value udf Props set Property true return local Conf Get delegation token hbase add Job Suppress Warnings rawtypes unchecked private void add Base Delegation Token Configuration hbase Conf Job job Context get Context Frontend return kerberos equals Ignore Case hbase Conf get try User Group Information current User User Group Information get Current User current User Kerberos Credentials Token Util obtain Token Job hbase Conf current User job else info fetching hbase delegation token Kerberos available catch Runtime Exception throw catch Exception e throw new Undeclared Throwable Exception e Unexpected error calling Token Util obtain Token Job Override public String relative Absolute Path String location Path cur Dir throws Exception return location Set caster use reading values writing Base Override public Load Caster get Load Caster throws Exception return caster Store Func Methods see org apache Store Func Interface get Output Format Override public Output Format get Output Format throws Exception output Format null conf null throw new Illegal State Exception set Store Location called else output Format new Table Output Format output Format set Conf conf return output Format Override public void check Schema Resource Schema throws Exception caster instanceof Load Store Caster error Caster must implement Load Store Caster writing Base throw new Exception Bad Caster caster get Class schema get Properties set Property context Signature schema Object Serializer serialize schema Suppressing unchecked warnings Record Writer parameterized Store Func Interface Override public void prepare Write Suppress Warnings rawtypes Record Writer writer throws Exception writer writer Suppressing unchecked warnings Record Writer parameterized Store Func Interface Suppress Warnings unchecked Override public void put Next Tuple throws Exception Resource Field Schema field Schemas schema null null schema get Fields byte type field Schemas null Data Type find Type get field Schemas get Type long ts int start Index include Timestamp byte timestamp Type field Schemas null Data Type find Type get start Index field Schemas start Index get Type Load Store Caster caster Load Store Caster caster switch timestamp Type case Data Type ts caster bytes Long Data Byte Array get start Index get break case Data Type ts Long get start Index long Value break case Data Type ts Date Time get start Index get Millis break default throw new Exception Unable find converter timestamp field get start Index start Index else ts System current Time Millis check deletes include Tombstone Boolean get start Index boolean Value Delete delete create Delete get type ts try delete put done writer write null delete return catch Interrupted Exception e throw new Exception e start Index Put put create Put get type Debug Enabled debug put Next disabled Column Info column Info column Info debug put Next col column Info int start Index size Column Info column Info column Info get start Index Debug Enabled debug put Next tuple value get cf column column Info column Info Column Map put add column Info get Column Family column Info get Column Name ts obj Bytes get field Schemas null Data Type find Type get field Schemas get Type else Map String Object cf Map Map String Object get cf Map null String col Name cf Map key Set Debug Enabled debug put Next col Name col Name class col Name get Class deal fact maps types Currently detect types runtime case storing cf suboptimal put add column Info get Column Family Bytes Bytes col Name String ts obj Bytes cf Map get col Name Data Type find Type cf Map get col Name try put Empty writer write null put catch Interrupted Exception e throw new Exception e Public method initialize Delete param key param type param timestamp return new delete throws Exception public Delete create Delete Object key byte type long timestamp throws Exception Delete delete new Delete obj Bytes key type delete set Timestamp timestamp delete set Write false return delete Public method initialize Put Used allow assertions Puts initialized unit tests param key param type return new put throws Exception public Put create Put Object key byte type throws Exception Put put new Put obj Bytes key type put set Write false return put Suppress Warnings unchecked private byte obj Bytes Object byte type throws Exception Load Store Caster caster Load Store Caster caster null return null switch type case Data Type return Data Byte Array get case Data Type return caster Bytes Data Bag case Data Type return caster Bytes String case Data Type return caster Bytes Double case Data Type return caster Bytes Float case Data Type return caster Bytes Integer case Data Type return caster Bytes Long case Data Type return caster Bytes Big Integer case Data Type return caster Bytes Big Decimal case Data Type return caster Bytes Boolean case Data Type return caster Bytes Date Time type conversion unchecked Relying Data Type find Type right thing case Data Type return caster Bytes Map String Object case Data Type return null case Data Type return caster Bytes Tuple case Data Type throw new Exception Unable determine type get Class default throw new Exception Unable find converter tuple field Override public String rel Abs Path Store Location String location Path cur Dir throws Exception return location Override public void set Store Func Context Signature String signature context Signature signature Override public void set Store Location String location Job job throws Exception location starts hbase job get Configuration set Table Output Format location substring else job get Configuration set Table Output Format location String serialized Schema get Properties get Property context Signature schema serialized Schema null schema Resource Schema Object Serializer deserialize serialized Schema conf initialize Local Job Config job setting udf property getting hbase delegation token like set Location set Store Location gets different Job objects call last Job passed one launched end getting multiple hbase delegation tokens add Base Delegation Token conf job Override public void cleanup Failure String location Job job throws Exception Override public void cleanup Success String location Job job throws Exception Load Push Methods Override public List Operator Set get Features return Arrays List Load Push Operator Set Override public Required Field Response push Projection Required Field List required Field List throws Frontend Exception List Required Field required Fields required Field List get Fields List Column Info new Columns Lists new Array List Expected Size required Fields size required Field List null addition also called set Location debug projection already set skipping return new Required Field Response true projection handled push Projection invoked front end push Projection stores serialized projection context adjusts column Info set Location invoked backend reads projection context set Location invokes method column Info adjected col Offset offset column List need apply indexes get required Fields row key real column int col Offset load Row Key proj Offset offset required Field List need apply figuring columns prune key pruned skip row key element list trimming col List int proj Offset col Offset required Field List required Field List required Field List null required Fields size column Info size col Offset throw new Frontend Exception list columns project Base required Fields size larger Base Storage configured load column Info size col Offset remember projection store Projected Field Names required Field List load Row Key required Fields size required Fields get get Index load Row Key false proj Offset int proj Offset required Fields size int field Index required Fields get get Index new Columns add column Info get field Index col Offset Debug Enabled debug push Projection Projection load Row Key load Row Key Column Info col Info new Columns debug push Projection col col Info set Column Info List new Columns return new Required Field Response true Override public void ensure Key Instances Split throws Exception op hbase keys unique also work things like Delimited Key Prefix Region Split Policy need partial key match included split debug ensure Key Instances Split Override public Writable Comparable Table Split get Split Comparable Input Split split throws Exception split instanceof Table Split return new Table Split Comparable Table Split split else throw new Runtime Exception Load Func expected split type Table Split split get Class get Name Class encapsulate logic around column names specified position column list Users specify columns names one ways Foo Foo Foo bar Foo bar first result Map added tuple last results scalar rd form results prefix filtered Map public class Column Info final String original Column Name always set final byte column Family always set final byte column Name set exists n contain final byte column Prefix set contains prefix followed public Column Info String col Name original Column Name col Name String cf Column col Name split Fs byte columns byte column Family Bytes Bytes cf Column cf Column length cf Column length equals cf Column cf Column ends column Prefix Bytes Bytes cf Column substring cf Column length column Name null else column Name Bytes Bytes cf Column column Prefix null else column Prefix null column Name null public byte get Column Family return column Family public byte get Column Name return column Name public byte get Column Prefix return column Prefix public boolean Column Map return column Name null public boolean Prefix Match byte qualifier return Bytes starts qualifier column Prefix Override public String String return original Column Name Group list Column Info objects column family returns map list Column Info objects Using String key since implements Comparable param column Infos column Info list group return Map lists keyed column family static Map String List Column Info group Family List Column Info column Infos Map String List Column Info grouped Map new Hash Map String List Column Info Column Info column Info column Infos String cf Bytes String column Info get Column Family List Column Info column Info List grouped Map get cf column Info List null column Info List new Array List Column Info column Info List add column Info grouped Map put cf column Info List return grouped Map static String String byte bytes bytes null return null String Buffer sb new String Buffer int bytes length sb append sb append bytes return sb String Increments byte array one use setting stop Row bytes array set maximum byte value original array returned byte appended Base compares bytes left right byte array equal byte array extra byte appended example code byte code increments code byte code code code param bytes array increment bytes return copy byte array incremented static byte increment byte bytes boolean Max true int bytes length bytes bytes length x ff Max false break Max return Arrays copy bytes bytes length byte incremented bytes clone int bytes length boolean carry false int val bytes x ff int total val total carry true total else total carry true incremented byte total carry return incremented return incremented
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine import java io File import java io Exception import java io Print Stream import java net import java util Iterator import java util Map import java util Map Entry import java util Properties import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs File System import org apache hadoop hdfs Distributed File System import org apache hadoop mapred Job Conf import org apache Exception import org apache backend Backend Exception import org apache backend datastorage Data Storage import org apache backend executionengine Exec Exception import org apache backend executionengine Execution Engine import org apache backend hadoop Kerberos import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop datastorage Data Storage import org apache backend hadoop executionengine fetch Fetch Launcher import org apache backend hadoop executionengine fetch Fetch Optimizer import org apache backend hadoop executionengine map Reduce Layer Configuration import org apache backend hadoop executionengine map Reduce Layer Phy Plan Setter import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine util Map Red Util import org apache backend hadoop streaming Hadoop Executable Manager import org apache impl Context import org apache impl Impl Constants import org apache impl logical Layer Frontend Exception import org apache impl plan Operator Key import org apache impl plan Plan Exception import org apache impl plan Visitor Exception import org apache impl streaming Executable Manager import org apache impl util Utils import org apache newplan Operator import org apache newplan logical relational import org apache newplan logical relational Log Phy Translation Visitor import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Operator import org apache tools pigstats Stats import com google common collect Maps public abstract class Execution Engine implements Execution Engine private static final Log Log Factory get Log Execution Engine class public static final String hadoop site xml public static final String core site xml public static final String yarn site xml public static final String core default xml public static final String mapred default xml public static final String yarn default xml public static final String local protected Context Context protected Data Storage ds protected Launcher launcher key operator key logical plan originated physical plan val operator key root phyisical plan protected Map Operator Key Operator Key logical Physical Keys protected Map Operator Physical Operator new Log Phy Map public Execution Engine Context Context Context Context ds null logical Physical Keys Maps new Hash Map Deprecated public Job Conf get Job Conf Job Conf jc new Job Conf false Utils recompute Properties jc Context get Properties return jc Override public Data Storage get Data Storage return ds Override public void init throws Exec Exception init Context get Properties Loads properties core site xml including aws keys needed local non local mode public Job Conf get Conf throws Exec Exception Job Conf jc new Job Conf jc add Resource Job Conf Jc new Job Conf false Iterator Entry String String jc iterator Next Entry String String e next String key e get Key String value e get Value key starts fs key starts fs n Jc set key value return Jc public Job Conf get Local Conf Job Conf jc new Job Conf false jc add Resource jc add Resource jc add Resource return jc public Job Conf get Exec Conf Properties properties throws Exec Exception Job Conf jc null Check existence user provided configs String Hadoop Configs Overriden properties get Property use overriden hadoop configs Hadoop Configs Overriden null Hadoop Configs Overriden equals true jc new Job Conf Configuration Util Configuration properties else Check existence hadoop site xml core site xml classpath user provided confs used Configuration test Conf new Configuration Class Loader cl test Conf get Class Loader hadoop site cl get Resource core site cl get Resource hadoop site null core site null throw new Exec Exception find hadoop configurations classpath neither hadoop site xml core site xml found classpath plan use local mode please put x local option command line jc new Job Conf jc add Resource cluster hadoop site xml jc add Resource return jc Suppress Warnings resource private void init Properties properties throws Exec Exception String cluster null String name Node null need build configuration object first manner described get back properties object inspect reason looked existing properties object may get right settings want read configurations order specified look Hadoop default specifies two resources loaded order classpath hadoop default xml Read defaults hadoop hadoop site xml Site specific configuration given hadoop installation add settings properties object override existing properties accomplished method call Job Conf jc Context get Exec Type Local jc get Exec Conf properties Trick invoke static initializer Distributed File System add hdfs default xml configuration new Distributed File System else running local mode dont read hadoop conf file properties get Property Configuration null properties set Property Configuration properties set Property Configuration properties remove fs default name Deprecated Hadoop x properties set Property File System file jc get Local Conf Job Conf Jc get Conf Configuration Util merge Conf jc Jc method alters properties object overriding hadoop properties values properties recomputing properties Utils recompute Properties jc properties Ensure logged using kerberos keytab provided continuing Kerberos try Kerberos Keytab Login jc cluster jc get Configuration name Node jc get File System info Connecting hadoop file system name Node null name Node constructor sets ds new Data Storage properties cluster null cluster equals Ignore Case info Connecting map reduce job tracker jc get Configuration public Physical Plan compile Logical Plan plan Properties properties throws Frontend Exception plan null int err Code String msg Plan compile throw new Frontend Exception msg err Code Exception translate new logical plan physical plan Log Phy Translation Visitor translator new Log Phy Translation Visitor plan translator set Context Context translator visit new Log Phy Map translator get Log Phy Map return translator get Physical Plan public Map Operator Physical Operator get Log Phy Map return new Log Phy Map public Map Map Logical Relational Operator Physical Operator get Inner Log Phy Map Logical Plan plan Map Map Logical Relational Operator Physical Operator result Maps new Hash Map Iterator Operator outer Iter plan get Operators outer Iter Next Operator oper outer Iter next oper instanceof Logical Plan inner Plan oper get Inner Plan Map Logical Relational Operator Physical Operator inner Op Map Maps new Hash Map Iterator Operator inner Iter inner Plan get Operators inner Iter Next Operator inner Oper inner Iter next inner Op Map put Logical Relational Operator inner Oper new Log Phy Map get inner Oper result put oper inner Op Map return result Override public Stats launch Logical Plan lp String grp Name Context pc throws Frontend Exception Exec Exception try Physical Plan pp compile lp pc get Properties compiled physical plan fulfills requirements fetch optimizer transformations jobs creations skipped Simple Fetch Stats returned result directly fetched underlying storage Fetch Optimizer Plan Fetchable pc pp new Phy Plan Setter pp visit return new Fetch Launcher pc launch pp return launcher launch pp grp Name Context catch Exec Exception e throw Exec Exception e catch Frontend Exception e throw Frontend Exception e catch Exception e throw new Exec Exception e finally launcher reset Override public void explain Logical Plan lp Context pc Print Stream ps String format boolean verbose File file String suffix throws Plan Exception Visitor Exception Exception Frontend Exception Print Stream pps ps Print Stream eps ps boolean Fetchable false try file null pps new Print Stream new File file physical plan suffix eps new Print Stream new File file exec plan suffix Physical Plan pp compile lp pc get Properties pp explain pps format verbose Map Red Util check Leaf Store pp Context Fetchable Fetch Optimizer Plan Fetchable pc pp Fetchable new Fetch Launcher Context explain pp pc eps format return launcher explain pp Context eps format verbose finally launcher reset Fetchable Context get Properties remove Impl Constants close stream opened file null pps close eps close Override public Properties get Configuration Properties properties new Properties properties put Context get Properties return properties Override public void set Configuration Properties new Configuration throws Exec Exception init new Configuration Override public void set Property String property String value Properties properties Context get Properties Configuration Deprecated property properties put Configuration Util expand Alternative Names property value else properties put property value Override public Executable Manager get Executable Manager return new Hadoop Executable Manager Override public void kill throws Backend Exception launcher null launcher kill Override public void kill Job String job throws Backend Exception launcher null launcher kill Job job get Job Conf Override public void destroy launcher null launcher destroy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util List import org apache hadoop conf Configuration import org apache hadoop hive conf Hive Conf import org apache hadoop hive conf Hive Conf Conf Vars import org apache hadoop hive ql exec Function Info import org apache hadoop hive ql exec Function Registry import org apache hadoop hive ql exec Mapred Context import org apache hadoop hive ql exec import org apache hadoop hive ql exec import org apache hadoop hive ql parse Semantic Exception import org apache hadoop hive ql udf generic Collector import org apache hadoop hive ql udf generic Generic Resolver import org apache hadoop hive ql udf generic Generic import org apache hadoop hive ql udf generic Generic import org apache hadoop hive serde objectinspector Constant Object Inspector import org apache hadoop hive serde objectinspector Primitive Object Inspector import org apache hadoop hive serde objectinspector Struct Field import org apache hadoop hive serde objectinspector Struct Object Inspector import org apache hadoop hive shims Hadoop Shims import org apache hadoop hive shims Hadoop Shims Secure import org apache hadoop hive shims Shim Loader import org apache hadoop mapred Counters import org apache hadoop mapred Counters Counter import org apache hadoop mapred Input Split import org apache hadoop mapred Job Conf import org apache hadoop mapred Reporter import org apache Eval Func import org apache backend hadoop executionengine map Reduce Layer Configuration import org apache data Data Type import org apache data Tuple import org apache impl Context import org apache impl util Context import org apache impl util Utils import org apache impl util hive Hive Utils import org apache tools pigstats Status Reporter import com esotericsoftware kryo Serializer abstract class Hive Base extends Eval Func Object static protected class Constant Object Inspect Info Constant Object Inspector constants static Constant Object Inspect Info parse String params throws Exception Constant Object Inspect Info info new Constant Object Inspect Info params params replace Object constant Utils parse Constant params Data Type find Type constant Data Type Tuple Tuple constant info constants new Constant Object Inspector size int size get null info constants Hive Utils get Constant Object Inspector get else info constants new Constant Object Inspector info constants Hive Utils get Constant Object Inspector constant return info boolean Empty return constants null int size return constants length Constant Object Inspector get int return constants void inject Constant Object Inspector Struct Object Inspector input Object Inspector Empty int size get null Struct Field orig Field input Object Inspector get Struct Field Refs get Struct Field newfield new Hive Utils Field orig Field get Field Name get List Hive Utils Field input Object Inspector get Struct Field Refs set Hive Utils Field newfield static protected Class resolve Func String func Name throws Exception String class Name func Name Class udf Class Function Registry get Function Names contains func Name Function Info func try func Function Registry get Function Info func Name catch Semantic Exception e throw new Exception e udf Class func get Function Class else udf Class Context resolve Class Name class Name udf Class null throw new Exception find Hive func Name return udf Class constant Reporter type nothing static protected class Hive Reporter implements Reporter Status Reporter rep Hive Reporter Status Reporter rep rep rep public void set Status String rep set Status public void progress rep progress public Counter get Counter Enum name try Counters counters new Counters counters incr Counter name rep get Counter name get Value return counters find Counter name catch Exception e throw new Runtime Exception e public Counter get Counter String group String name try Counters counters new Counters counters incr Counter group name rep get Counter group name get Value return counters find Counter group name catch Exception e throw new Runtime Exception e public void incr Counter Enum key long amount rep incr Counter key amount public void incr Counter String group String counter long amount rep incr Counter group counter amount public Input Split get Input Split throws Unsupported Operation Exception throw new Unsupported Operation Exception reporter input public float get Progress return protected static Mapred Context instantiate Mapred Context Configuration conf Context get Context get Job Conf boolean Map conf get Boolean Configuration false conf get exectype starts Map true Hive Conf set Var conf Conf Vars tez Mapred Context context Mapred Context init Map new Job Conf Context get Context get Job Conf context set Reporter new Hive Reporter Status Reporter get Instance return context Override public List String get Ship Files List String files Func Utils get Ship Files new Class Generic class Primitive Object Inspector class Hive Conf class Serializer class Shim Loader class Hadoop Shims class Hadoop Shims Secure class Collector class return files static protected String get Error Message Class c String Buffer message new String Buffer Please declare c get Name class Assignable c Generic class Assignable c message append Hive class get Name else Generic class Assignable c message append Hive class get Name else class Assignable c Generic Resolver class Assignable c message append Hive class get Name else message new String Buffer c get Name Hive return message String
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import org apache hadoop hive ql metadata Hive Exception import org apache hadoop hive ql udf generic Collector import org apache hadoop hive ql udf generic Generic import org apache hadoop hive serde objectinspector Object Inspector import org apache hadoop hive serde objectinspector Struct Object Inspector import org apache hadoop hive serde typeinfo Type Info import org apache hadoop hive serde typeinfo Type Info Utils import org apache Resource Schema import org apache Resource Schema Resource Field Schema import org apache data Bag Factory import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache impl logical Layer schema Schema import org apache impl util hive Hive Utils Use Hive Generic Example define explode Hive explode load mydata b chararray foreach generate flatten explode public class Hive extends Hive Base private boolean inited false private Generic udtf private boolean end Input false static class Schema Info Struct Object Inspector input Object Inspector Object Inspector output Object Inspector private void init Schema input Schema Generic udtf Constant Object Inspect Info constants Info throws Exception Resource Schema rs new Resource Schema input Schema Resource Field Schema wrapped Tuple Field Schema new Resource Field Schema wrapped Tuple Field Schema set Type Data Type wrapped Tuple Field Schema set Schema rs Type Info ti Hive Utils get Type Info wrapped Tuple Field Schema input Object Inspector Struct Object Inspector Hive Utils create Object Inspector ti constants Info null constants Info inject Constant Object Inspector input Object Inspector try output Object Inspector udtf initialize input Object Inspector catch Exception e throw new Exception e Schema Info schema Info new Schema Info Constant Object Inspect Info constants Info private static Bag Factory bf Bag Factory get Instance private Hive Collector collector null public Hive String func Name throws Instantiation Exception Illegal Access Exception Exception Class hive Class resolve Func func Name Generic class Assignable hive Class udtf Generic hive Class new Instance else throw new Exception get Error Message hive Class public Hive String func Name String params throws Instantiation Exception Illegal Access Exception Exception func Name constants Info Constant Object Inspect Info parse params Override public Object exec Tuple input throws Exception inited udtf configure instantiate Mapred Context schema Info init get Input Schema udtf constants Info inited true collector null collector new Hive Collector udtf set Collector collector else collector init try end Input udtf process input get Array else udtf close catch Exception e throw new Exception e return collector get Bag Override public Schema output Schema Schema input try inited schema Info init get Input Schema udtf constants Info inited true Resource Field Schema rfs Hive Utils get Resource Field Schema Type Info Utils get Type Info Object Inspector schema Info output Object Inspector Resource Schema tuple Schema new Resource Schema tuple Schema set Fields new Resource Field Schema rfs Resource Field Schema bag Field Schema new Resource Field Schema bag Field Schema set Type Data Type bag Field Schema set Schema tuple Schema Resource Schema bag Schema new Resource Schema bag Schema set Fields new Resource Field Schema bag Field Schema return Schema get Schema bag Schema catch Exception e throw new Runtime Exception e class Hive Collector implements Collector Data Bag bag bf new Default Bag public void init bag clear Override public void collect Object input throws Hive Exception try Tuple output Tuple Tuple Hive Utils convert Hive input schema Info output Object Inspector null output Tuple size output Tuple get instanceof Tuple bag add Tuple output Tuple get else bag add output Tuple catch Exception e throw new Hive Exception e public Data Bag get Bag return bag Override public boolean need End Input Processing return true Override public void set End Input boolean end Input end Input end Input
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl util hive import java io Exception import java math Big Decimal import java math Big Integer import java sql Timestamp import java util Array List import java util Hash Map import java util Iterator import java util List import java util Map import org apache hadoop hive common type Hive Char import org apache hadoop hive common type Hive Decimal import org apache hadoop hive common type Hive Varchar import org apache hadoop hive serde io Hive Decimal Writable import org apache hadoop hive serde io Timestamp Writable import org apache hadoop hive serde objectinspector Constant Object Inspector import org apache hadoop hive serde objectinspector List Object Inspector import org apache hadoop hive serde objectinspector Map Object Inspector import org apache hadoop hive serde objectinspector Object Inspector import org apache hadoop hive serde objectinspector Primitive Object Inspector import org apache hadoop hive serde objectinspector Struct Field import org apache hadoop hive serde objectinspector Struct Object Inspector import org apache hadoop hive serde objectinspector primitive Abstract Primitive Java Object Inspector import org apache hadoop hive serde objectinspector primitive Binary Object Inspector import org apache hadoop hive serde objectinspector primitive Hive Decimal Object Inspector import org apache hadoop hive serde objectinspector primitive Primitive Object Inspector Factory import org apache hadoop hive serde objectinspector primitive Java Constant Boolean Object Inspector import org apache hadoop hive serde objectinspector primitive Java Constant Double Object Inspector import org apache hadoop hive serde objectinspector primitive Java Constant Float Object Inspector import org apache hadoop hive serde objectinspector primitive Java Constant Int Object Inspector import org apache hadoop hive serde objectinspector primitive Java Constant Long Object Inspector import org apache hadoop hive serde objectinspector primitive Java Constant String Object Inspector import org apache hadoop hive serde objectinspector primitive Timestamp Object Inspector import org apache hadoop hive serde objectinspector primitive Writable Constant Float Object Inspector import org apache hadoop hive serde typeinfo List Type Info import org apache hadoop hive serde typeinfo Map Type Info import org apache hadoop hive serde typeinfo Primitive Type Info import org apache hadoop hive serde typeinfo Struct Type Info import org apache hadoop hive serde typeinfo Type Info import org apache hadoop hive serde typeinfo Type Info Factory import org apache hadoop io Bytes Writable import org apache hadoop io Float Writable import org apache Warning import org apache Resource Schema import org apache Resource Schema Resource Field Schema import org apache backend executionengine Exec Exception import org apache data Bag Factory import org apache data Data Bag import org apache data Data Byte Array import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache tools pigstats Status Reporter import org joda time Date Time public class Hive Utils static Tuple Factory tf Tuple Factory get Instance public static Object convert Hive Object obj Object Inspector oi boolean included Columns Object result null obj null return result switch oi get Category case Primitive Object Inspector poi Primitive Object Inspector oi result get Primary Hive obj poi break case Struct Object Inspector soi Struct Object Inspector oi List Struct Field element Fields List Struct Field soi get Struct Field Refs List Object items soi get Struct Fields Data List obj Tuple tf new Tuple int items size included Columns null included Columns Object converted Item convert Hive items get element Fields get get Field Object Inspector null append converted Item result break case Map Object Inspector moi Map Object Inspector oi Object Inspector key Object Inspector moi get Map Key Object Inspector Object Inspector value Object Inspector moi get Map Value Object Inspector Map Object Object Map Object Object obj result new Hash Map Map Entry Object Object entry entry Set Object converted Key convert Hive entry get Key key Object Inspector null Object converted Value convert Hive entry get Value value Object Inspector null converted Key null Map result put converted Key String converted Value else Status Reporter reporter Status Reporter get Instance reporter null reporter incr Counter Warning break case List Object Inspector loi List Object Inspector oi result Bag Factory get Instance new Default Bag Object Inspector item Object Inspector loi get List Element Object Inspector Object item loi get List obj Object converted Item convert Hive item item Object Inspector null Tuple inner Tuple Hive array contains single item type tuple need wrap tuple converted Item instanceof Tuple inner Tuple Tuple converted Item else inner Tuple tf new Tuple try inner Tuple set converted Item catch Exception e throw new Runtime Exception e Data Bag result add inner Tuple break default throw new Illegal Argument Exception Unknown type oi get Category return result public static Object get Primary Hive Object obj Primitive Object Inspector poi Object result null obj null return result switch poi get Primitive Category case case case case case case result poi get Primitive Java Object obj break case result Hive Char poi get Primitive Java Object obj get Value break case result Hive Varchar poi get Primitive Java Object obj get Value break case result int Byte poi get Primitive Java Object obj break case result int Short poi get Primitive Java Object obj break case byte b byte poi get Primitive Java Object obj Make copy result new Data Byte Array b b length break case java sql Timestamp orig Time Stamp java sql Timestamp poi get Primitive Java Object obj result new Date Time orig Time Stamp get Time break case java sql Date orig Date java sql Date poi get Primitive Java Object obj result new Date Time orig Date get Time break case org apache hadoop hive common type Hive Decimal orig Decimal org apache hadoop hive common type Hive Decimal poi get Primitive Java Object obj result orig Decimal big Decimal Value break default throw new Illegal Argument Exception Unknown primitive type poi get Primitive Category return result public static Resource Field Schema get Resource Field Schema Type Info ti throws Exception Resource Field Schema field Schema new Resource Field Schema Resource Field Schema inner Fs Resource Schema inner Schema switch ti get Category case Struct Type Info sti Struct Type Info ti field Schema set Type Data Type List Type Info type Infos sti get Struct Field Type Infos List String names sti get Struct Field Names inner Fs new Resource Field Schema type Infos size int type Infos size inner Fs get Resource Field Schema type Infos get inner Fs set Name names get inner Schema new Resource Schema inner Schema set Fields inner Fs field Schema set Schema inner Schema break case List Type Info lti List Type Info ti field Schema set Type Data Type inner Fs new Resource Field Schema Resource Field Schema item Schema get Resource Field Schema lti get List Element Type Info item Schema get Type Data Type inner Fs item Schema else item tuple wrap tuple Resource Field Schema tuple Field Schema new Resource Field Schema tuple Field Schema set Type Data Type Resource Schema tuple Schema new Resource Schema tuple Schema set Fields new Resource Field Schema item Schema inner Fs tuple Field Schema inner Schema new Resource Schema inner Schema set Fields inner Fs field Schema set Schema inner Schema break case Map Type Info mti Map Type Info ti field Schema set Type Data Type inner Fs new Resource Field Schema inner Fs get Resource Field Schema mti get Map Value Type Info inner Schema new Resource Schema inner Schema set Fields inner Fs field Schema set Schema inner Schema break case switch Primitive Type Info ti get Primitive Category case field Schema set Type Data Type break case field Schema set Type Data Type break case field Schema set Type Data Type break case field Schema set Type Data Type break case field Schema set Type Data Type break case field Schema set Type Data Type break case field Schema set Type Data Type break case field Schema set Type Data Type break case field Schema set Type Data Type break case field Schema set Type Data Type break case field Schema set Type Data Type break case field Schema set Type Data Type break case field Schema set Type Data Type break case field Schema set Type Data Type break default throw new Illegal Argument Exception Unknown primitive type Primitive Type Info ti get Primitive Category break return field Schema public static Type Info get Type Info Resource Field Schema fs throws Exception Type Info ti switch fs get Type case Data Type ti new Struct Type Info Array List String names new Array List String Array List Type Info type Infos new Array List Type Info Resource Field Schema sub Fs fs get Schema get Fields Type Info info get Type Info sub Fs names add sub Fs get Name type Infos add info Struct Type Info ti set Struct Field Names names Struct Type Info ti set Struct Field Type Infos type Infos break case Data Type ti new List Type Info fs get Schema null fs get Schema get Fields length throw new Exception Wrong bag inner schema Resource Field Schema tuple Schema fs get Schema get Fields Resource Field Schema item Schema tuple Schema single item tuple remove tuple put inner item list directly tuple Schema get Schema get Fields length item Schema tuple Schema get Schema get Fields Type Info element Field get Type Info item Schema List Type Info ti set List Element Type Info element Field break case Data Type ti new Map Type Info Type Info value Field fs get Schema null fs get Schema get Fields length value Field Type Info Factory binary Type Info else value Field get Type Info fs get Schema get Fields Map Type Info ti set Map Key Type Info Type Info Factory string Type Info Map Type Info ti set Map Value Type Info value Field break case Data Type ti Type Info Factory boolean Type Info break case Data Type ti Type Info Factory int Type Info break case Data Type ti Type Info Factory long Type Info break case Data Type ti Type Info Factory float Type Info break case Data Type ti Type Info Factory double Type Info break case Data Type ti Type Info Factory string Type Info break case Data Type ti Type Info Factory timestamp Type Info break case Data Type ti Type Info Factory decimal Type Info break case Data Type ti Type Info Factory decimal Type Info break case Data Type ti Type Info Factory binary Type Info break default throw new Illegal Argument Exception Unknown data type Data Type find Type Name fs get Type return ti static public class Field implements Struct Field private final String name private final Object Inspector inspector private final int offset public Field String name Object Inspector inspector int offset name name inspector inspector offset offset Override public String get Field Name return name Override public Object Inspector get Field Object Inspector return inspector Override public int get Field return offset Override public String get Field Comment return null static class Struct Inspector extends Struct Object Inspector private List Struct Field fields Struct Inspector Struct Type Info info Array List String field Names info get Struct Field Names Array List Type Info field Types info get Struct Field Type Infos fields new Array List Struct Field field Names size int field Names size fields add new Field field Names get create Object Inspector field Types get Struct Inspector List Struct Field fields fields fields Override public List Struct Field get Struct Field Refs return fields Override public Struct Field get Struct Field Ref String Struct Field field fields field get Field Name equals return field return null Override public Object get Struct Field Data Object object Struct Field field Object result null try result Tuple object get Field field offset catch Exec Exception e throw new Runtime Exception e return result Override public List Object get Struct Fields Data List Object object return Tuple object get Override public String get Type Name String Builder buffer new String Builder buffer append struct int fields size Struct Field field fields get buffer append buffer append field get Field Name buffer append buffer append field get Field Object Inspector get Type Name buffer append return buffer String Override public Category get Category return Category Override public boolean equals Object null get Class get Class return false else return true else List Struct Field Struct Inspector fields size fields size return false int fields size Struct Field left get Struct Field right fields get left get Field Name equals right get Field Name left get Field Object Inspector equals right get Field Object Inspector return false return true static class Map Object Inspector implements Map Object Inspector private Object Inspector key private Object Inspector value Map Object Inspector Map Type Info info key Primitive Object Inspector Factory java String Object Inspector value create Object Inspector info get Map Value Type Info Override public Object Inspector get Map Key Object Inspector return key Override public Object Inspector get Map Value Object Inspector return value Override public Object get Map Value Element Object map Object key return Map map get key Override public Map Object Object get Map Object map return Map map Override public int get Map Size Object map return Map map size Override public String get Type Name return map key get Type Name value get Type Name Override public Category get Category return Category Override public boolean equals Object null get Class get Class return false else return true else Map Object Inspector Map Object Inspector return key equals key value equals value static class List Object Inspector implements List Object Inspector private Object Inspector child private Object cached Object private int index private Iterator Tuple iter List Object Inspector List Type Info info child create Object Inspector info get List Element Type Info Override public Object Inspector get List Element Object Inspector return child Override public Object get List Element Object list int list cached Object cached Object list index Data Bag db Data Bag list iter db iterator index index try Tuple iter next single item tuple take item directly list size return get else return catch Exception e throw new Runtime Exception e else throw new Runtime Exception sequential read supported Override public int get List Length Object list return int Data Bag list size Override Suppress Warnings unchecked public List get List Object list List Object result new Array List Object Data Bag bag Data Bag list Tuple bag size try result add get catch Exec Exception e throw new Runtime Exception e else result add return result Override public String get Type Name return array child get Type Name Override public Category get Category return Category Override public boolean equals Object null get Class get Class return false else return true else Object Inspector List Object Inspector child return equals child static class Data Byte Array Object Inspector extends Abstract Primitive Java Object Inspector implements Binary Object Inspector Data Byte Array Object Inspector super Type Info Factory binary Type Info Override public Bytes Writable get Primitive Writable Object Object return null null instanceof Data Byte Array new Bytes Writable Data Byte Array get new Bytes Writable byte Override public byte get Primitive Java Object Object return Data Byte Array get static class Joda Time Stamp Object Inspector extends Abstract Primitive Java Object Inspector implements Timestamp Object Inspector protected Joda Time Stamp Object Inspector super Type Info Factory timestamp Type Info Override public Timestamp Writable get Primitive Writable Object Object return null null new Timestamp Writable new Timestamp Date Time get Millis Override public Timestamp get Primitive Java Object Object return null null new Timestamp Date Time get Millis static class Decimal Object Inspector extends Abstract Primitive Java Object Inspector implements Hive Decimal Object Inspector protected Decimal Object Inspector super Type Info Factory decimal Type Info Override public Hive Decimal Writable get Primitive Writable Object Object instanceof Big Decimal return null null new Hive Decimal Writable Hive Decimal create Big Decimal else Big Integer return null null new Hive Decimal Writable Hive Decimal create Big Integer Override public Hive Decimal get Primitive Java Object Object instanceof Big Decimal return null null Hive Decimal create Big Decimal else Big Integer return null null Hive Decimal create Big Integer public static Object Inspector create Object Inspector Type Info info switch info get Category case switch Primitive Type Info info get Primitive Category case return Primitive Object Inspector Factory java Float Object Inspector case return Primitive Object Inspector Factory java Double Object Inspector case return Primitive Object Inspector Factory java Boolean Object Inspector case return Primitive Object Inspector Factory java Int Object Inspector case return Primitive Object Inspector Factory java Long Object Inspector case return Primitive Object Inspector Factory java String Object Inspector case return new Joda Time Stamp Object Inspector case return new Decimal Object Inspector case return new Data Byte Array Object Inspector case case case case throw new Illegal Argument Exception never happen Primitive Type Info info get Primitive Category valid primitive data type default throw new Illegal Argument Exception Unknown primitive type Primitive Type Info info get Primitive Category case return new Struct Inspector Struct Type Info info case return new Map Object Inspector Map Type Info info case return new List Object Inspector List Type Info info default throw new Illegal Argument Exception Unknown type info get Category public static Constant Object Inspector get Constant Object Inspector Object obj switch Data Type find Type obj case Data Type return new Java Constant Float Object Inspector Float obj case Data Type return new Java Constant Double Object Inspector Double obj case Data Type return new Java Constant Boolean Object Inspector Boolean obj case Data Type return new Java Constant Int Object Inspector Integer obj case Data Type return new Java Constant Long Object Inspector Long obj case Data Type return new Java Constant String Object Inspector String obj default throw new Illegal Argument Exception implemented obj get Class get Name
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine import java io Output Stream import java util Iterator import java util Properties import org apache commons logging Log import org apache commons logging Log Factory import org apache Load Func import org apache Exception import org apache backend executionengine Exec Exception import org apache backend executionengine Exec Job import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache data Tuple import org apache impl Context import org apache impl io File Spec import org apache impl io Read End Loader import org apache tools pigstats Stats public class Job implements Exec Job private final Log log Log Factory get Log get Class protected status protected Context Context protected File Spec File Spec protected Exception backend Exception protected String alias protected Store po Store private Stats stats public Job status Context Context Store store String alias status status Context Context po Store store File Spec po Store get File alias alias public Job status Context Context Store store String alias Stats stats status status Context Context po Store store File Spec po Store get File alias alias stats stats Override public get Status return status Override public boolean Completed throws Exec Exception return true Override public Iterator Tuple get Results throws Exec Exception final Load Func p try Load Func original Load Func Load Func Context instantiate Func Spec File Spec get Func Spec p Load Func new Read End Loader original Load Func Configuration Util Configuration Context get Properties File Spec get File Name catch Exception e int err Code String msg Unable get results File Spec throw new Exec Exception msg err Code Exception e return new Iterator Tuple Tuple boolean End Override public boolean Next End return false try null p get Next null End true catch Exception e log error e null End true throw new Error e return End Override public Tuple next Tuple next next null null return next try next p get Next catch Exception e log error e next null End true return next Override public void remove throw new Runtime Exception Removal supported Override public Properties get Configuration return Context get Properties Override public Stats get Statistics throw new Unsupported Operation Exception return stats Override public void completion Notification Object cookie throw new Unsupported Operation Exception Override public void kill throws Exec Exception throw new Unsupported Operation Exception Override public void get Logs Output Stream log throws Exec Exception throw new Unsupported Operation Exception Override public void get Output Stream throws Exec Exception throw new Unsupported Operation Exception Override public void get Error Output Stream error throws Exec Exception throw new Unsupported Operation Exception public void set Exception Exception e backend Exception e Override public Exception get Exception return backend Exception Override public String get Alias throws Exec Exception return alias return po Store Override public Store get Store return po Store
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop security User Group Information import java io Exception Support logging using kerberos keytab file br Kerberos authentication system uses tickets limited valitity time br consequence running script kerberos secured hadoop cluster limits running time remaining validity time kerberos tickets really complex analytics may become problem job may need run longer time ticket times allow br kerberos keytab file essentially Kerberos specific form password user br possible enable Hadoop job request new tickets expire creating keytab file make part job running cluster extend maximum job duration beyond maximum renew time kerberos tickets br br Usage ol li Create keytab file required principal br p Using ktutil tool create keytab using roughly commands br addent password p niels k e rc hmac br addent password p niels k e aes cts br wkt niels keytab p li li Set following properties either via pigrc file command line via file br ul li java security krb conf br path local krb conf file br Usually etc krb conf li li hadoop security krb principal br pricipal want login br Usually would look like niels li li hadoop security krb keytab br path local keytab file must used authenticate br Usually would look like home niels krb niels keytab li ul li ol paths variables local client system starting actual script run without special access cluster nodes public class Kerberos private static final Log Log Factory get Log Kerberos class public static void try Kerberos Keytab Login Configuration conf actually connect may need login using provided credentials User Group Information Security Enabled User Group Information login User try login User User Group Information get Login User catch Exception e error Unable start attempt login using Kerberos keytab e get Message return logged Kerberos keytab skip avoid needless logins login User Kerberos Credentials login User Keytab String krb Conf conf get java security krb conf String krb Principal conf get hadoop security krb principal String krb Keytab conf get hadoop security krb keytab attempt login required settings krb Conf null krb Principal null krb Keytab null info Trying login using Kerberos Keytab info krb Conf krb Conf info krb Principal krb Principal info krb Keytab krb Keytab System set Property java security krb conf krb Conf try User Group Information login User Keytab krb Principal krb Keytab catch Exception e error Unable perform keytab based kerberos authentication e get Message
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache pen import java util Array List import java util Collection import java util Hash Map import java util Linked List import java util List import java util Map import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Greater Expr import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Less Expr import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators Bin Cond import org apache backend hadoop executionengine physical Layer expression Operators Cast import org apache backend hadoop executionengine physical Layer expression Operators Null import org apache backend hadoop executionengine physical Layer expression Operators Map Look import org apache backend hadoop executionengine physical Layer expression Operators Negative import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators Project import org apache backend hadoop executionengine physical Layer expression Operators Regexp import org apache backend hadoop executionengine physical Layer expression Operators User Comparison Func import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Lite Packager import org apache backend hadoop executionengine physical Layer relational Operators Counter import org apache backend hadoop executionengine physical Layer relational Operators Demux import org apache backend hadoop executionengine physical Layer relational Operators Distinct import org apache backend hadoop executionengine physical Layer relational Operators Filter import org apache backend hadoop executionengine physical Layer relational Operators import org apache backend hadoop executionengine physical Layer relational Operators Limit import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Optimized import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Rank import org apache backend hadoop executionengine physical Layer relational Operators Sort import org apache backend hadoop executionengine physical Layer relational Operators Split import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer relational Operators Stream import org apache backend hadoop executionengine physical Layer relational Operators Union import org apache data Data Bag import org apache data Tuple import org apache impl Context import org apache impl plan Depth First Walker import org apache impl plan Plan Walker import org apache impl plan Visitor Exception import org apache impl util Identity Hash Set import org apache newplan logical relational Logical Schema import org apache pen util Lineage Tracer class used attach illustrators physical operators public class Illustrator Attacher extends Phy Plan Visitor Context Context Lineage Tracer lineage Hash Map Physical Operator Collection Identity Hash Set Tuple po Eqclasses Map private Hash Map Physical Operator Data Bag po Data Map private int max Records private boolean revisit false private Array List Boolean sub Exp Results null private final Map Load Logical Schema poload Schema Map public Illustrator Attacher Physical Plan plan Lineage Tracer lineage int max Records Map Load Logical Schema po Load Schema Map Context hadoop Context throws Visitor Exception super plan new Depth First Walker Physical Operator Physical Plan plan Context hadoop Context lineage lineage po Eqclasses Map new Hash Map Physical Operator Collection Identity Hash Set Tuple po Data Map new Hash Map Physical Operator Data Bag max Records max Records poload Schema Map po Load Schema Map revisit enhanced physical plan compilation param plan physical plan traversed public void revisit Physical Plan plan throws Visitor Exception push Walker new Depth First Walker Physical Operator Physical Plan plan revisit true Physical Plan ori Plan Plan Plan plan visit Plan ori Plan pop Walker private void set Illustrator Physical Operator po int n Eq Classes revisit po get Illustrator null return Linked List Identity Hash Set Tuple eq Classes new Linked List Identity Hash Set Tuple po Eqclasses Map put po eq Classes int n Eq Classes Identity Hash Set Tuple eq Class new Identity Hash Set Tuple eq Classes add eq Class Illustrator illustrator new Illustrator lineage eq Classes Context po set Illustrator illustrator po Data Map put po illustrator get Data private void set Illustrator Physical Operator po Linked List Identity Hash Set Tuple eq Classes revisit po get Illustrator null return Illustrator illustrator new Illustrator lineage eq Classes Context po set Illustrator illustrator eq Classes null po Eqclasses Map put po eq Classes po Data Map put po illustrator get Data void set Illustrator Physical Operator po revisit po get Illustrator null return Linked List Identity Hash Set Tuple eq Classes new Linked List Identity Hash Set Tuple Identity Hash Set Tuple eq Class new Identity Hash Set Tuple eq Classes add eq Class Illustrator illustrator new Illustrator lineage eq Classes Context po set Illustrator illustrator po Eqclasses Map put po eq Classes po Data Map put po illustrator get Data public Map Physical Operator Data Bag get Data Map return po Data Map Override public void visit Load Load ld throws Visitor Exception temporary files need illustrator revisit return Linked List Identity Hash Set Tuple eq Classes new Linked List Identity Hash Set Tuple po Eqclasses Map put ld eq Classes Identity Hash Set Tuple eq Class new Identity Hash Set Tuple eq Classes add eq Class Illustrator illustrator illustrator new Illustrator lineage eq Classes max Records poload Schema Map get ld Context ld set Illustrator illustrator po Data Map put ld illustrator get Data Override public void visit Store Store st throws Visitor Exception set Illustrator st Override public void visit Filter Filter fl throws Visitor Exception set Illustrator fl sub Exp Results fl get Illustrator get Sub Exp Results inner Plan Attach fl fl get Plan sub Exp Results null Override public void visit Local Rearrange Local Rearrange lr throws Visitor Exception super visit Local Rearrange lr set Illustrator lr Override public void visit Package Package pkg throws Visitor Exception set Illustrator pkg pkg number Equivalence Classes Override public void visit nfe throws Visitor Exception revisit nfe get Illustrator null return List Physical Plan inner Plans nfe get Input Plans Physical Plan inner Plan inner Plans inner Plan Attach nfe inner Plan List Physical Operator preds Plan get Predecessors nfe preds null preds size preds get instanceof Package Package preds get get Pkgr Distinct equivalence class Package needs used instead succeeding equivalence class set Illustrator nfe preds get get Illustrator get Equivalence Classes nfe get Illustrator set Eq Classes Shared else set Illustrator nfe Override public void visit Union Union un throws Visitor Exception revisit un get Illustrator null return set Illustrator un null Override public void visit Split Split spl throws Visitor Exception revisit spl get Illustrator null return Physical Plan po Plan spl get Plans inner Plan Attach spl po Plan set Illustrator spl Override public void visit Demux Demux demux throws Visitor Exception revisit demux get Illustrator null return List Physical Plan inner Plans demux get Plans Physical Plan inner Plan inner Plans inner Plan Attach demux inner Plan set Illustrator demux Override public void visit Distinct Distinct distinct throws Visitor Exception set Illustrator distinct Override public void visit Sort Sort sort throws Visitor Exception set Illustrator sort Override public void visit Rank Rank rank throws Visitor Exception set Illustrator rank Override public void visit Counter Counter counter throws Visitor Exception set Illustrator counter Override public void visit Project Project proj throws Visitor Exception Override public void visit Greater Greater Expr grt throws Visitor Exception set Illustrator grt revisit sub Exp Results null sub Exp Results add grt get Illustrator get Sub Exp Result Override public void visit Less Less Expr lt throws Visitor Exception set Illustrator lt revisit sub Exp Results null sub Exp Results add lt get Illustrator get Sub Exp Result Override public void visit Equal Equal Expr gte throws Visitor Exception set Illustrator gte revisit sub Exp Results null sub Exp Results add gte get Illustrator get Sub Exp Result Override public void visit Equal Equal Expr lte throws Visitor Exception set Illustrator lte revisit sub Exp Results null sub Exp Results add lte get Illustrator get Sub Exp Result Override public void visit Equal Equal Expr eq throws Visitor Exception set Illustrator eq revisit sub Exp Results null sub Exp Results add eq get Illustrator get Sub Exp Result Override public void visit Equal Equal Expr eq throws Visitor Exception set Illustrator eq revisit sub Exp Results null sub Exp Results add eq get Illustrator get Sub Exp Result Override public void visit Regexp Regexp throws Visitor Exception set Illustrator revisit sub Exp Results null sub Exp Results add get Illustrator get Sub Exp Result Override public void visit Null Null Null throws Visitor Exception set Illustrator Null revisit sub Exp Results null sub Exp Results add Null get Illustrator get Sub Exp Result Override public void visit throws Visitor Exception set Illustrator Override public void visit throws Visitor Exception set Illustrator Override public void visit throws Visitor Exception set Illustrator revisit sub Exp Results null sub Exp Results add get Illustrator get Sub Exp Result Override public void visit Bin Cond Bin Cond bin Cond Override public void visit Negative Negative negative set Illustrator negative Override public void visit User Func User Func user Func throws Visitor Exception Override public void visit Comparison Func User Comparison Func comp Func throws Visitor Exception one set Illustrator comp Func Override public void visit Map Look Map Look map Look set Illustrator map Look Override public void visit Cast Cast cast Override public void visit Limit Limit lim throws Visitor Exception set Illustrator lim Override public void visit Stream Stream stream throws Visitor Exception set Illustrator stream param optimized Override public void visit Optimized Optimized optimized throws Visitor Exception visit optimized private void inner Plan Attach Physical Operator po Physical Plan plan throws Visitor Exception Plan Walker Physical Operator Physical Plan child Walker Current Walker spawn Child Walker plan push Walker child Walker child Walker walk pop Walker Linked List Identity Hash Set Tuple eq Classes new Linked List Identity Hash Set Tuple sub Exp Results null revisit int size sub Exp Results size int size eq Classes add new Identity Hash Set Tuple po get Illustrator set Equivalence Classes eq Classes po
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools pigstats import org apache hadoop conf Configuration import org apache hadoop fs Path import org apache classification Interface Audience import org apache classification Interface Stability class encapsulates runtime statistics user specified input Interface Audience Public Interface Stability Evolving public final class Input Stats private String name private String location private long bytes private long records private boolean success public static enum regular sampler indexer side private type regular private Configuration conf public Input Stats String location long bytes long records boolean success location location bytes bytes records records success success try name new Path location get Name catch Exception e location mal formatted name location public String get Name return name public String get Location return location public long get Bytes return bytes public long get Number Records return records public boolean Successful return success public Configuration get Conf return conf public get Input Type return type public String get Display String String Builder sb new String Builder success sb append Successfully type sampler sb append sampled else type indexer sb append indexed else sb append read records sb append records append records else sb append records bytes sb append append bytes append bytes sb append append location append type side sb append side file sb append n else sb append Failed read data append location append n return sb String public void set Conf Configuration conf conf conf public void mark Sample Input type sampler public void mark Indexer Input type indexer public void mark Side File Input type side
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Iterator import org apache Accumulator import org apache Algebraic import org apache Eval Func import org apache Exception import org apache backend executionengine Exec Exception import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl logical Layer schema Schema method never used directly use link public class Int Avg extends Eval Func Double implements Algebraic Accumulator Double private static Tuple Factory Tuple Factory Tuple Factory get Instance Override public Double exec Tuple input throws Exception try Long sum sum input sum null either handed empty bag bag filled nulls return null case return null double count count input Double avg null count avg new Double sum count return avg catch Exec Exception ee throw ee Override public String get Initial return Initial class get Name Override public String get Intermed return Intermediate class get Name Override public String get Final return Final class get Name static public class Initial extends Eval Func Tuple Override public Tuple exec Tuple input throws Exception try Tuple Tuple Factory new Tuple input bag one tuple containing column trying avg Data Bag bg Data Bag input get Integer null bg iterator Next Tuple tp bg iterator next Integer tp get set null Long value null null set else set return catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing average get Class get Simple Name throw new Exec Exception msg err Code Exception e static public class Intermediate extends Eval Func Tuple Override public Tuple exec Tuple input throws Exception try Data Bag b Data Bag input get return combine b catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing average get Class get Simple Name throw new Exec Exception msg err Code Exception e static public class Final extends Eval Func Double Override public Double exec Tuple input throws Exception try Data Bag b Data Bag input get Tuple combined combine b Long sum Long combined get sum null return null double count Long combined get Double avg null count avg new Double sum count return avg catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing average get Class get Simple Name throw new Exec Exception msg err Code Exception e static protected Tuple combine Data Bag values throws Exec Exception long sum long count combine called Intermediate Final either case Initial would called would sent valid tuples Hence n need check incoming bag empty Tuple output Tuple Factory new Tuple boolean saw Non Null false Iterator Tuple values iterator Next Tuple next Long l Long get count nulls avg contributing departure performance implemented inspecting size bag l null l else saw Non Null true sum l count Long get saw Non Null output set Long value sum else output set null output set Long value count return output static protected long count Tuple input throws Exec Exception Data Bag values Data Bag input get Iterator values iterator long cnt Next Tuple Tuple next null size get null cnt return cnt static protected Long sum Tuple input throws Exec Exception Exception Data Bag values Data Bag input get handed empty bag return values null values size return null long sum boolean saw Non Null false Iterator Tuple values iterator Next Tuple next try Integer Integer get count nulls avg contributing departure performance implemented inspecting size bag null continue saw Non Null true sum catch Runtime Exception exp int err Code String msg Problem computing sum ints throw new Exec Exception msg err Code Exception exp saw Non Null return Long value sum else return null Override public Schema output Schema Schema input return new Schema new Schema Field Schema null Data Type Accumulator interface private Long intermediate Sum null private Double intermediate Count null Override public void accumulate Tuple b throws Exception try Long sum sum b sum null return set default values intermediate Sum null intermediate Count null intermediate Sum intermediate Count double count Long count b count intermediate Count count intermediate Sum sum catch Exec Exception ee throw ee catch Exception e int err Code String msg Error computing average get Class get Simple Name throw new Exec Exception msg err Code Exception e Override public void cleanup intermediate Sum null intermediate Count null Override public Double get Value Double avg null intermediate Count null intermediate Count avg new Double intermediate Sum intermediate Count return avg
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java io Buffered Input Stream import java io Data Input Stream import java io Data Output Stream import java io Exception import java io File import java io File Input Stream import java io File Found Exception import java io Exception import java util Array List import java util Iterator import java util Element Exception import org apache commons logging Log import org apache commons logging Log Factory import org apache Counters import org apache classification Interface Audience import org apache classification Interface Stability Interface Audience Private Interface Stability Evolving public class Internal Cached Bag extends Self Spill Bag private static final long serial Version private static final Log log Log Factory get Log Internal Cached Bag class private transient Data Output Stream private transient boolean add Done private transient Tuple Factory factory used store number tuples spilled counter incremented private transient int num Tuples Spilled private static final Inter Sedes Inter Sedes Factory get Inter Sedes Instance public Internal Cached Bag f public Internal Cached Bag int bag Count bag Count f public Internal Cached Bag int bag Count float percent super bag Count percent init private void init factory Tuple Factory get Instance Contents new Array List Tuple add Done false Override public void add Tuple add Done throw new Illegal State Exception Internal Cached Bag closed adding new tuples Contents size mem Limit get Cache Limit Contents add Contents size mem Limit add New Obj Size get Memory Size else cache Limit spill disk try null log Debug Enabled log debug Memory hold Contents size records put rest spill file get Spill File inc Spill Count Counters write Datum Data Type periodically update number tuples spilled num Tuples Spilled num Tuples Spilled update Spill Rec Counter catch Exception e throw new Runtime Exception e Size private void update Spill Rec Counter inc Spill Count Counters num Tuples Spilled num Tuples Spilled private void add Done null try flush close catch Exception e ignore num Tuples Spilled update Spill Rec Counter add Done true Override public void clear add Done add Done super clear add Done false null Override public boolean Distinct return false Override public boolean Sorted return false Override public Iterator Tuple iterator add Done close spill file mark adding done adding disallowed add Done return new Cached Bag Iterator Override public long spill throw new Runtime Exception Internal Cached Bag spill called private class Cached Bag Iterator implements Iterator Tuple Iterator Tuple iter Data Input Stream Tuple next long num Tuples Read public Cached Bag Iterator iter Contents iterator Spill Files null Spill Files size File file Spill Files get try new Data Input Stream new Buffered Input Stream new File Input Stream file catch File Found Exception fnfe String msg Unable find spill file throw new Runtime Exception msg fnfe Override public boolean Next next null return true iter Next next iter next return true null return false try Tuple Tuple read Datum next return true catch Exception eof try close catch Exception e null return false catch Exception e String msg Unable read spill file throw new Runtime Exception msg e Override public Tuple next next null Next throw new Element Exception elements iterator Tuple next next null num Tuples Read report progress every records num Tuples Read x fff report Progress return Override public void remove throw new Unsupported Operation Exception remove supported Cached Bag Iterator
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java io Buffered Input Stream import java io Data Input Stream import java io Data Output Stream import java io Exception import java io File import java io File Input Stream import java io File Found Exception import java io Exception import java util Array List import java util Collections import java util Comparator import java util Iterator import java util Linked List import java util List Iterator import java util Priority Queue import org apache commons logging Log import org apache commons logging Log Factory import org apache Warning ordered collection Tuples possibly multiples Data stored unsorted comes sorted time dump file first iterator requested Experementation found faster storing sorted begin allow user defined comparator provide default comparator cases user n specify one bag registered Spillable Memory Manager calculates number tuples hold memory spill pro actively files public class Internal Sorted Bag extends Sorted Spill Bag private static final long serial Version private static Tuple Factory g Tuple Factory Tuple Factory get Instance private static final Log log Log Factory get Log Internal Sorted Bag class private transient Comparator Tuple Comp private transient boolean Read Started false static private class Default Comparator implements Comparator Tuple Override Suppress Warnings unchecked public int compare Tuple Tuple return compare Override public boolean equals Object return Override public int hash Code return public Internal Sorted Bag null public Internal Sorted Bag Comparator Tuple comp comp public Internal Sorted Bag int bag Count Comparator Tuple comp bag Count f comp public Internal Sorted Bag int bag Count float percent Comparator Tuple comp super bag Count percent init bag Count percent comp param comp Comparator use sorting null Default Comparator used private void init int bag Count double percent Comparator Tuple comp Comp comp null new Default Comparator comp Contents new Array List Tuple Override public void add Tuple synchronized Contents Read Started throw new Illegal State Exception Internal Sorted Bag closed adding new tuples Contents size mem Limit get Cache Limit proactive spill Comp Contents add check many tuples memory hold getting average size first tuples Size Spill Files null Spill Files Empty null mem Limit add New Obj Size get Memory Size Size mark Spillable Necessary Override public boolean Sorted return true Override public boolean Distinct return false Override public Iterator Tuple iterator return new Sorted Data Bag Iterator iterator handles getting next tuple bag Data stored combination memory disk private class Sorted Data Bag Iterator implements Iterator Tuple container hold tuples priority queue Stores file number tuple came tuple read queue know file read replacement tuple private class Container implements Comparable Container public Tuple tuple public int file Num Override public int compare Container return Comp compare tuple tuple Override public boolean equals Object obj obj instanceof Container return compare Container obj return false Override public int hash Code return tuple hash Code buffer tuple easy way next tell whether another tuple available read private Tuple Buf null private int Memory Ptr private Priority Queue Container Merge null private Array List Data Input Stream Streams null private int Cntr Sorted Data Bag Iterator first read need sort data synchronized Contents Read Started pre Merge Collections sort Array List Tuple Contents Comp Read Started true Override public boolean Next See find tuple buffer Buf next return Buf null Override public Tuple next report progress every times next much faster using mod Cntr x ff report Progress one buffer use one Buf null Tuple Buf Buf null return Spill Files null Spill Files size return read Memory spill files need read next tuple one files memory return read Priority implemented Override public void remove private Tuple read Priority Merge null First read need set queue array file streams Add one size list memory Merge new Priority Queue Container Spill Files size Add one size case spill later Streams new Array List Data Input Stream Spill Files size Iterator File Spill Files iterator Next try Data Input Stream new Data Input Stream new Buffered Input Stream new File Input Stream next Streams add Add first tuple file merge queue add Queue null Streams size catch File Found Exception fnfe ca n find spill file never happen String msg Unable find spill file log fatal msg fnfe throw new Runtime Exception msg fnfe Prime one memory Contents size add Queue null Pop top one queue Container c Merge poll c null return null Add next tuple whereever read queue Buffer tuple returning reusing c Tuple c tuple add Queue c c file Num return private void add Queue Container c int file Num c null c new Container c file Num file Num file Num Need read memory c tuple read Memory c tuple null Merge add c return Read next tuple indicated file Data Input Stream Streams get file Num null still data file c tuple g Tuple Factory new Tuple try c tuple read Fields Merge add c catch Exception eof tuples file Set slot array null n keep trying read file try close catch Exception e log warn Failed close spill file e Streams set file Num null catch Exception ioe String msg Unable find spill file log fatal msg ioe throw new Runtime Exception msg ioe Function assumes reader lock already held enter function private Tuple read Memory Contents size return null Memory Ptr Contents size return Array List Tuple Contents get Memory Ptr else return null Pre merge many spill files avoids issue large fan merge Experimentation hadoop team shown optimal number spill files function modifies Spill Files array assumes write lock already held unlock Tuples reconstituted tuples evaluated rewritten tuples expensive need order use sort spec provided private void pre Merge Spill Files null Spill Files size return max spill files gather max spill files together merge one file remove others Spill Files new spill files attached end list keep going get small enough number without much concern uneven size merges Convert Spill Files linked list since removing pieces middle want efficiently try Linked List File new Linked List File Spill Files Linked List File files Delete new Linked List File size List Iterator File list Iterator Streams new Array List Data Input Stream Merge new Priority Queue Container int j j j try File f next Data Input Stream new Data Input Stream new Buffered Input Stream new File Input Stream f Streams add add Queue null Streams size remove files Delete add f catch File Found Exception fnfe ca n find spill file neer happen String msg Unable find spill file log fatal msg fnfe throw new Runtime Exception msg fnfe Get new spill file adds one end spill files list need append linked list well still move linked list back spill files Data Output Stream null try get Spill File add Spill Files get Spill Files size Tuple read Priority null write flush catch Exception ioe String msg Unable find spill file log fatal msg ioe throw new Runtime Exception msg ioe finally null try close catch Exception e warn Error closing spill Warning e delete files merged new files File f files Delete f delete false log warn Failed delete spill file f get Path clear list finalize delete files Spill Files assigned new value Spill Files clear move new list back spill files array Spill Files new File List finally Reset Streams Merge allocated properly regular merging Streams null Merge null Override public long spill return proactive spill Comp Override public long proactive spill Comparator Tuple comp synchronized Contents Read Started return return super proactive spill comp
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl io import java io Exception import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs Data Output Stream import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop io Text import org apache hadoop io Writable Comparable import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Input Split import org apache hadoop mapreduce Job import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce Record Writer import org apache hadoop mapreduce Task Attempt Context import org apache hadoop mapreduce lib input File Input Format import org apache hadoop mapreduce lib output File Output Format import org apache Expression import org apache File Input Load Func import org apache Load Func import org apache Load Metadata import org apache Resource Schema import org apache Resource Statistics import org apache Store Func import org apache Store Func Interface import org apache backend hadoop executionengine map Reduce Layer File Input Format import org apache backend hadoop executionengine map Reduce Layer Split import org apache classification Interface Audience import org apache data Tuple import org apache impl util Utils load function used storing intermediate data jobs query serialization format load function change newer versions used store persistent data Interface Audience Private public class Inter Storage extends File Input Load Func implements Store Func Interface Load Metadata private static final Log Log Log Factory get Log Inter Storage class public static final String use Log Internal storage use private Inter Record Reader rec Reader null private Inter Record Writer rec Writer null Simple binary nested reader format public Inter Storage Log debug use Log Override public Tuple get Next throws Exception rec Reader next Key Value return rec Reader get Current Value else return null Override public void put Next Tuple throws Exception try rec Writer write null catch Interrupted Exception e throw new Exception e public static class Inter Input Format extends File Input Format Text Tuple non Javadoc see org apache hadoop mapreduce Input Format create Record Reader org apache hadoop mapreduce Input Split org apache hadoop mapreduce Task Attempt Context Override public Record Reader Text Tuple create Record Reader Input Split split Task Attempt Context context throws Exception Interrupted Exception return new Inter Record Reader Override public Input Format get Input Format return new Inter Input Format Override public int hash Code return Override public void prepare Read Record Reader reader Split split rec Reader Inter Record Reader reader Override public void set Location String location Job job throws Exception File Input Format set Input Paths job location public static class Inter Output Format extends File Output Format org apache hadoop io Writable Comparable Tuple non Javadoc see org apache hadoop mapreduce lib output File Output Format get Record Writer org apache hadoop mapreduce Task Attempt Context Override public Record Writer Writable Comparable Tuple get Record Writer Task Attempt Context job throws Exception Interrupted Exception Configuration conf job get Configuration Path file get Default Work File job File System fs file get File System conf Data Output Stream file fs create file false return new Inter Record Writer file Override public Output Format get Output Format return new Inter Output Format Override public void prepare Write Record Writer writer rec Writer Inter Record Writer writer Override public void set Store Location String location Job job throws Exception File Output Format set Output Path job new Path location Override public void check Schema Resource Schema throws Exception Override public String rel Abs Path Store Location String location Path cur Dir throws Exception return Load Func get Absolute Path location cur Dir Override public String get Partition Keys String location Job job throws Exception return null Override public Resource Schema get Schema String location Job job throws Exception return Utils get Schema location true job Override public Resource Statistics get Statistics String location Job job throws Exception return null Override public void set Partition Filter Expression plan throws Exception throw new Unsupported Operation Exception Override public void set Store Func Context Signature String signature Override public void cleanup Failure String location Job job throws Exception Store Func cleanup Failure Impl location job Override public void cleanup Success String location Job job throws Exception nothing
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin method never used directly use link public class Int Min extends Algebraic Int Math Base public Int Min set Op public static class Intermediate extends Algebraic Int Math Base Intermediate Override public get Op return public static class Final extends Algebraic Int Math Base Final Override public get Op return
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import org apache impl logical Layer Frontend Exception see Generic Invoker public class Invoke Double extends Generic Invoker Double public Invoke Double public Invoke Double String full Name throws Frontend Exception Security Exception Class Found Exception Method Exception super full Name public Invoke Double String full Name String param Specs Str throws Frontend Exception Security Exception Class Found Exception Method Exception super full Name param Specs Str public Invoke Double String full Name String param Specs Str String Static throws Class Found Exception Frontend Exception Security Exception Method Exception super full Name param Specs Str Static
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import org apache impl logical Layer Frontend Exception see Generic Invoker public class Invoke Float extends Generic Invoker Float public Invoke Float public Invoke Float String full Name throws Frontend Exception Security Exception Class Found Exception Method Exception super full Name public Invoke Float String full Name String param Specs Str throws Frontend Exception Security Exception Class Found Exception Method Exception super full Name param Specs Str public Invoke Float String full Name String param Specs Str String Static throws Class Found Exception Frontend Exception Security Exception Method Exception super full Name param Specs Str Static
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import org apache impl logical Layer Frontend Exception see Generic Invoker public class Invoke Int extends Generic Invoker Integer public Invoke Int public Invoke Int String full Name String param Specs Str throws Frontend Exception Security Exception Class Found Exception Method Exception super full Name param Specs Str public Invoke Int String full Name throws Frontend Exception Security Exception Class Found Exception Method Exception super full Name public Invoke Int String full Name String param Specs Str String Static throws Class Found Exception Frontend Exception Security Exception Method Exception super full Name param Specs Str Static
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import org apache impl logical Layer Frontend Exception see Generic Invoker public class Invoke Long extends Generic Invoker Long public Invoke Long public Invoke Long String full Name throws Frontend Exception Security Exception Class Found Exception Method Exception super full Name public Invoke Long String full Name String param Specs Str throws Frontend Exception Security Exception Class Found Exception Method Exception super full Name param Specs Str public Invoke Long String full Name String param Specs Str String Static throws Class Found Exception Frontend Exception Security Exception Method Exception super full Name param Specs Str Static
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import org apache impl logical Layer Frontend Exception see Generic Invoker public class Invoke String extends Generic Invoker String public Invoke String public Invoke String String full Name String param Specs Str throws Frontend Exception Security Exception Class Found Exception Method Exception super full Name param Specs Str public Invoke String String full Name throws Frontend Exception Security Exception Class Found Exception Method Exception super full Name public Invoke String String full Name String param Specs Str String Static throws Class Found Exception Frontend Exception Security Exception Method Exception super full Name param Specs Str Static
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java lang reflect Invocation Target Exception import java lang reflect Method import java lang reflect Type import java util Arrays import java util List import java util Set import org apache commons logging Log import org apache commons logging Log Factory import org apache backend executionengine Exec Exception import org apache data Data Bag import org apache data Tuple import org apache impl Context import org apache impl logical Layer Frontend Exception import com google common collect Lists import com google common collect Sets public class Invoker private static final Log Log Factory get Log Invoker class private static final Class new double get Class private static final Class new int get Class private static final Class new float get Class private static final Class new String get Class private static final Class new long get Class Suppress Warnings unchecked private static final Set Class Sets new Hash Set private Method method private Class param Classes private boolean Static private Class self Class private Type return Type public Invoker String full Name String param Specs Str throws Class Found Exception Frontend Exception Security Exception Method Exception full Name param Specs Str true public Invoker String full Name String param Specs Str String Static throws Class Found Exception Frontend Exception Security Exception Method Exception String class Name full Name substring full Name last Index String method Name full Name substring full Name last Index Class klazz try klazz Context resolve Class Name class Name catch Exception e amusing part Context throws wrap one exceptions declare throw new Frontend Exception e String param Specs equals param Specs Str new String param Specs Str split Static static equals Ignore Case Static true equals Static param Classes new Class param Specs length int param Specs length param Classes string Class param Specs Static self Class param Classes method klazz get Method method Name Static param Classes drop First Class param Classes return Type method get Generic Return Type Suppress Warnings rawtypes public Type get Return Type return un Primitivize Class return Type private static Class drop First Class Class original original length return new Class else return Arrays copy Range original original length private static Object drop First Object Object original original length return new Object else return Arrays copy Range original original length private static Class string Class String klass throws Frontend Exception string equals Ignore Case klass return String class else int equals Ignore Case klass return Integer else double equals Ignore Case klass return Double else float equals Ignore Case klass return Float else long equals Ignore Case klass return Long else double equals Ignore Case klass return else int equals Ignore Case klass return else long equals Ignore Case klass return else float equals Ignore Case klass return else string equals Ignore Case klass return else throw new Frontend Exception unable find matching class klass private static Class un Primitivize Class klass klass equals Integer return Integer class klass equals Long return Long class else klass equals Float return Float class else klass equals Double return Double class else return klass private static convert Expected Arg Class klass Object obj throws Exec Exception contains klass Data Bag dbag Data Bag obj equals klass List String data List Lists new Array List Tuple dbag data List add String get String data Array new String data List size int data List size data Array data List get obj data Array else List Number data List bag Number List dbag equals klass double data Array new double data List size int data List size data Array data List get double Value obj data Array else equals klass int data Array new int data List size int data List size data Array data List get int Value obj data Array else equals klass float data Array new float data List size int data List size data Array data List get float Value obj data Array else equals klass long data Array new long data List size int data List size data Array data List get long Value obj data Array try return klass cast obj catch Class Cast Exception e error Error dynamic argument processing Casting klass obj get Class e throw new Exec Exception e private static List Number bag Number List Data Bag dbag throws Exec Exception List Number data List Lists new Array List Tuple dbag data List add Number get return data List private Object tuple Args Tuple throws Exec Exception null param Classes null param Classes length null size param Classes length throw new Exec Exception unable match function arguments declared signature null return null Object args new Object param Classes length int param Classes length args convert Expected Arg un Primitivize param Classes get return args Suppress Warnings unchecked public invoke Tuple input throws Exception Object args tuple Args input try Static return method invoke self Class cast args drop First Object args else return method invoke null args catch Illegal Argument Exception e throw new Exec Exception e catch Illegal Access Exception e throw new Exec Exception e catch Invocation Target Exception e throw new Exec Exception e
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Map import org apache Filter Func import org apache Exception import org apache backend executionengine Exec Exception import org apache data Data Bag import org apache data Data Type import org apache data Tuple Determine whether bag map empty public class Empty extends Filter Func Override public Boolean exec Tuple input throws Exception try Object values input get values instanceof Data Bag return Data Bag values size else values instanceof Map return Map values size else int err Code String msg test Data Type find Type Name values emptiness throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location public class Null Expression extends Unary Expression public Null Expression Operator Plan plan Logical Expression exp super Null plan exp Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Null Expression Null Expression Null Expression return get Expression Equal get Expression else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Null Expression lg Exp Plan get Expression deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl util import java io File import java io File Input Stream import java io File Output Stream import java io Exception import java io Input Stream import java io Output Stream import java net Malformed Exception import java net import java net import java net Class Loader import java net Decoder import java util Array List import java util Enumeration import java util Hash Map import java util Hash Set import java util List import java util Map import java util Set import java util jar Jar Entry import java util jar Jar Output Stream import org antlr runtime Common Token Stream import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop mapreduce Job import org apache hadoop util String Utils import org apache backend hadoop executionengine map Reduce Layer Map Reduce import org apache impl Context import org apache tools bzip r Zip Constants import org joda time Date Time import com google common collect Multimaps import dk brics automaton Automaton public class Jar Manager private static Log log Log Factory get Log Jar Manager class private static enum Default Packages Map Reduce class Zip Constants class Automaton class Common Token Stream class Date Time class private final Class pkg Class Default Packages Class pkg Class pkg Class pkg Class public Class get Pkg Class return pkg Class public static File create Script Jar Context Context throws Exception File script Jar File File create Temp File Script jar ensure script Jar File deleted exit script Jar File delete Exit File Output Stream fos new File Output Stream script Jar File Hash Map String String contents new Hash Map String String create Script Jar fos Context contents contents Empty File Input Stream fis null String md null try fis new File Input Stream script Jar File md org apache commons codec digest Digest Utils md Hex fis finally fis null fis close File new Script Jar File new File script Jar File get Parent Script md jar script Jar File rename new Script Jar File return new Script Jar File return null private static void create Script Jar Output Stream os Context Context Hash Map String String contents throws Exception Jar Output Stream jar Output Stream new Jar Output Stream os String path Context script Files log debug Adding entry path job jar Input Stream stream null File input File new File path input File exists stream new File Input Stream input File else stream Context get Class Loader get Resource Stream path stream null throw new Exception find path try add Stream jar Output Stream path stream contents input File last Modified finally stream close Map Entry String File entry Context get Script Files entry Set log debug Adding entry entry get Key job jar Input Stream stream null entry get Value exists stream new File Input Stream entry get Value else stream Context get Class Loader get Resource Stream entry get Value get Path stream null throw new Exception find entry get Value get Path try add Stream jar Output Stream entry get Key stream contents entry get Value last Modified finally stream close contents Empty jar Output Stream close else os close Creates Classloader based passed jar File extra jar files param jar File jar file part newly created Classloader jar file plus jars extra Jars list constitute classpath return new Classloader throws Malformed Exception static Class Loader create Cl String jar File Context Context throws Malformed Exception int len Context extra Jars size int passed Jar jar File null urls new len passed Jar jar File null urls new file jar File int Context extra Jars size urls passed Jar new file Context extra Jars get return new Class Loader urls Map Reduce class get Class Loader Adds stream Jar file param os Output Stream Jar file stream added param name name stream param stream add param contents current contents Jar file use avoid adding two streams name param timestamp timestamp entry throws Exception private static void add Stream Jar Output Stream os String name Input Stream Map String String contents long timestamp throws Exception contents get name null return contents put name Jar Entry entry new Jar Entry name entry set Time timestamp os put Next Entry entry byte buffer new byte int rc rc read buffer os write buffer rc public static List String get Default Jars List String default Jars new Array List String Default Packages pkg Send Default Packages values String jar find Containing Jar pkg Send get Pkg Class jar null default Jars contains jar default Jars add jar return default Jars Find jar contains class name return jar file even first thing class path class name param class class find return jar file contains class null throws Exception public static String find Containing Jar Class class Class Loader loader Context get Class Loader String class file class get Name replace class try Enumeration itr null Try find class registered jars loader instanceof Class Loader itr Class Loader loader find Resources class file Try system classloader Class Loader resources found Class Loader itr null itr Elements itr loader get Resources class file itr Elements url itr next Element jar equals url get Protocol String Return url get Path Return starts file Return Return substring file length Decoder misnamed class since actually decodes x www form urlencoded type rather actual encoding file path Therefore would decode incorrect spaces actually either unencoded encoded Replace first kept sacred decoding process Return Return replace Return Decoder decode Return return Return replace catch Exception e throw new Runtime Exception e return null Add jars containing given classes job configuration Job Client ship cluster add Distributed Cache param job Job object param classes classes find throws Exception public static void add Dependency Jars Job job Class classes throws Exception Configuration conf job get Configuration File System fs File System get Local conf Set String jars new Hash Set String jars add conf get String Collection tmpjars add Qualified Jars Name fs jars classes jars Empty return conf set tmpjars String Utils array String jars Array new String Add qualified path name jars containing given classes param fs File System object param jars resolved path names added set param classes classes find private static void add Qualified Jars Name File System fs Set String jars Class classes fs Uri fs get Uri Path working Dir fs get Working Directory Class clazz classes String jar Name find Containing Jar clazz jar Name null log warn Could find jar class clazz continue jars add new Path jar Name make Qualified fs Uri working Dir String
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import static org apache Configuration import static org apache Configuration import java io File import java io Exception import java io Input Stream import java io Output Stream import java net import java net Syntax Exception import java net import java util Array List import java util Collection import java util Collections import java util Hash Map import java util Iterator import java util Linked List import java util List import java util Map import java util Map Entry import java util Properties import java util Tree Map import java util regex Matcher import java util regex Pattern import org apache commons codec digest Digest Utils import org apache commons io Filename Utils import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop filecache Distributed Cache import org apache hadoop fs File Status import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop io Utils import org apache hadoop io Writable Comparable import org apache hadoop io Writable Comparator import org apache hadoop mapred Counters import org apache hadoop mapred Counters Counter import org apache hadoop mapred Counters Group import org apache hadoop mapred Job Conf import org apache hadoop mapred Job Priority import org apache hadoop mapred jobcontrol Job import org apache hadoop mapred jobcontrol Job Control import org apache hadoop mapreduce lib output Lazy Output Format import org apache Comparison Func import org apache Exec Type import org apache Func Spec import org apache Load Func import org apache Overwritable Store Func import org apache Configuration import org apache Exception import org apache Store Func Interface import org apache backend executionengine Exec Exception import org apache backend hadoop Date Time Writable import org apache backend hadoop Data Type import org apache backend hadoop Job Control import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop executionengine Job Creation Exception import org apache backend hadoop executionengine map Reduce Layer partitioners Secondary Key Partitioner import org apache backend hadoop executionengine map Reduce Layer partitioners Skewed Partitioner import org apache backend hadoop executionengine map Reduce Layer partitioners Weighted Range Partitioner import org apache backend hadoop executionengine map Reduce Layer plans Oper Plan import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Constant Expression import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer plans Udf Cache Ship Files Visitor import org apache backend hadoop executionengine physical Layer relational Operators Join import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Merge Cogroup import org apache backend hadoop executionengine physical Layer relational Operators Merge Join import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer util Plan Helper import org apache backend hadoop executionengine util Map Red Util import org apache data Bag Factory import org apache data Data Type import org apache data Schema Tuple Frontend import org apache data Tuple import org apache data Tuple Factory import org apache impl Context import org apache impl Impl Constants import org apache impl builtin Cross import org apache impl io File Localizer import org apache impl io File Spec import org apache impl io Nullable Big Decimal Writable import org apache impl io Nullable Big Integer Writable import org apache impl io Nullable Boolean Writable import org apache impl io Nullable Bytes Writable import org apache impl io Nullable Date Time Writable import org apache impl io Nullable Double Writable import org apache impl io Nullable Float Writable import org apache impl io Nullable Int Writable import org apache impl io Nullable Long Writable import org apache impl io Nullable Partition Writable import org apache impl io Nullable Text import org apache impl io Nullable Tuple import org apache impl io Nullable Writable import org apache impl plan Depth First Walker import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache impl util Jar Manager import org apache impl util Object Serializer import org apache impl util Pair import org apache impl util Context import org apache impl util Utils import org apache tools pigstats mapreduce Job Stats import org apache tools pigstats mapreduce Stats Util import org apache tools pigstats mapreduce Script State compiler class takes Oper Plan converts Job Control object relevant dependency info maintained Job Control Object made Jobs Job Conf Map Reduce Oper corresponds Job get Job Cong method returns Job Conf configured per Map Reduce Oper h Comparator Design h p words comparators chosen almost cases use raw comparators one exception user provides comparison function order order queries Raw Comparator functions used Int Long etc comparators null aware asc desc aware first byte Nullable Writable classes contains info whether value null Asc desc written array Job Conf key sort Order read comparators part set Conf call p non order queries Writable Comparator classes used type specific instances Writable Comparator Suppress Warnings deprecation public class Job Control Compiler Oper Plan plan Configuration conf Configuration default Conf Context Context private static final Matcher Pattern compile zip tgz tar gz tar matcher private static final Log log Log Factory get Log Job Control Compiler class public static final String logs public static final String invoke close map public static final String counters counter public static final String rank public static final String public Hash Map String Array List Pair String Long global Counters new Hash Map String Array List Pair String Long public static final String job detected small job run process instead public static final String job converted run process serialize Store present map reduce lists Hadoop Conf case Multi stores could deduce map plan reduce plan case single store remove Store plan either case serialize Store Output Format Output Commiter get Store way irrespective whether multi store single store public static final String map stores public static final String reduce stores mapping job pair store locations tmp locations job private Map Job Pair List Store Path job Store Map private Map Job Map Reduce Oper job Mro Map public Job Control Compiler Context Context Configuration conf Context conf null public Job Control Compiler Context Context Configuration conf Configuration default Conf Context Context conf conf default Conf default Conf job Store Map new Hash Map Job Pair List Store Path job Mro Map new Hash Map Job Map Reduce Oper Returns store locations previously compiled job public List Store get Stores Job job Pair List Store Path pair job Store Map get job pair null pair first null return pair first else return new Array List Store Resets state public void reset job Store Map new Hash Map Job Pair List Store Path job Mro Map new Hash Map Job Map Reduce Oper Context get Context reset Gets map Job Operator public Map Job Map Reduce Oper get Job Mro Map return Collections unmodifiable Map job Mro Map Moves results collection jobs final output directory results may put temp location work around restrictions multiple output single map reduce job method always called job execution completes public void move Results List Job completed Jobs throws Exception Job job completed Jobs Pair List Store Path pair job Store Map get job pair null pair second null Path tmp pair second Path abs new Path tmp abs Path rel new Path tmp rel File System fs tmp get File System conf fs exists abs move Results abs abs Uri get Path fs fs exists rel move Results rel rel Uri get Path fs Walks temporary directory structure move rename files final location private void move Results Path p String rem File System fs throws Exception File Status fstat fs list Status p Path src fstat get Path fstat Dir log info mkdir src fs mkdirs remove Part src rem move Results fstat get Path rem fs else Path dst remove Part src rem log info mv src dst fs rename src dst private Path remove Part Path src String part uri src Uri String path Str uri get Path replace part return new Path path Str Compiles jobs dependencies removes plan returns called plan exhausted param plan Oper Plan compiled param grp Name name given Job Control return Job Control object null jobs plan throws Job Creation Exception public Job Control compile Oper Plan plan String grp Name throws Job Creation Exception Assert plan size plan plan int time Sleep String default Job Control Sleep Context get Exec Type Local String Job Control Sleep conf get jobcontrol sleep default Job Control Sleep Job Control Sleep equals default Job Control Sleep log info overriding default Job Control sleep default Job Control Sleep Job Control Sleep try time Sleep Integer parse Int Job Control Sleep catch Number Format Exception e throw new Runtime Exception Invalid configuration jobcontrol sleep Job Control Sleep time ms default default Job Control Sleep e Job Control job Ctrl new Job Control grp Name time Sleep try List Map Reduce Oper roots new Linked List Map Reduce Oper roots add plan get Roots Map Reduce Oper mro roots mro instanceof Native Map Reduce Oper return null Print plan launching needed conf get Boolean Configuration false log info mro String Job job get Job plan mro conf Context job Mro Map put job mro job Ctrl add Job job catch Job Creation Exception jce throw jce catch Exception e int err Code String msg Internal error creating job configuration throw new Job Creation Exception msg err Code Exception e return job Ctrl Update Map Reduce plan execution status jobs one job completely fail job one store job fail remove dependent jobs method return number Map Reduce Oper removed Map Reduce plan public int update Op Plan List Job complete Failed Jobs int size plan size Job job complete Failed Jobs remove subsequent jobs Map Reduce Oper mr Oper job Mro Map get job plan trim mr Oper plan remove mr Oper Remove successful jobs job Mro Map Job job job Mro Map key Set complete Failed Jobs contains job Map Reduce Oper mro job Mro Map get job Context Illustrator mro Counter Operation save Counters job mro get Operation mro Row Number plan remove mro job Mro Map clear int size plan size return size size Reads global counters produced job group labeled calculated cumulative sum consists sum previous cumulative sum plus previous global counter value param job global counters collected param operation collected global counters Counter values passed via configuration file Rank using unique operation identifier private void save Counters Job job String operation boolean Row Number Counters counters Group group Counters int counter Size Long previous Value Long previous Sum Array List Pair String Long counter Pairs try counters Job Stats get Counters job String group Name get Group Name counters get Group Names case counter group find need find acceptable state relation empty group Name null Counter output Records counters get Group Stats Util get Counter Name Stats Util output Records get Counter global Counters put operation new Array List Pair String Long return else throw new Runtime Exception found counter group operation Id operation group Counters counters get Group group Name Tree Map Integer Long counter List new Tree Map Integer Long Iterator Counter group Counters iterator Next try Counter c next counter List put Integer value c get Display Name c get Value catch Exception ex ex print Stack Trace counter Size counter List size counter Pairs new Array List Pair String Long could empty tasks counters issue need calculate offsets non empty task ids accessed Rank Entry Integer Long entry counter List entry Set previous Sum previous Value previous Value entry get Value counter Pairs add new Pair String Long Job Control Compiler operation Job Control Compiler entry get Key previous Sum global Counters put operation counter Pairs catch Exception e String msg Error read counters Rank operation counter Size counter Size throw new Runtime Exception msg e private String get Group Name Collection String collection String name collection name contains return name return null private boolean ok Run Local org apache hadoop mapreduce Job job Map Reduce Oper mro List Load lds throws Exception Configuration conf job get Configuration conf get Boolean Configuration false return false long input Byte Max conf get Long Configuration l long total Input File Size Input Size Reducer Estimator get Total Input File Size conf lds job input Byte Max log info Size input total Input File Size bytes Small job threshold input Byte Max total Input File Size total Input File Size input Byte Max return false int reducers conf get Int Configuration log info reducers reducers reducers return false return true method creates Job corresponding Map Reduce Oper assumption every Map Reduce Oper load store Job Conf removes load operator serializes input filespec Input Format take creation splits also removes store operator serializes output filespec Output Format take record writing remaining portion map plan reduce plans serialized stored Map Reduce Map objects take actual running plans Mapper amp Reducer classes required key value formats set Checks map job uses Map class mapper uses Map Reduce otherwise Map Reduce job bound package operator Remove reduce plan serializes Map Reduce class use package indexed tuples received reducer param mro Map Reduce Oper Job Conf required param config Configuration object Job Conf built param Context Context passed execution engine return Job corresponding mro throws Job Creation Exception Suppress Warnings unchecked private Job get Job Oper Plan plan Map Reduce Oper mro Configuration config Context Context throws Job Creation Exception org apache hadoop mapreduce Job nw Job null try nw Job new org apache hadoop mapreduce Job config catch Exception e throw new Job Creation Exception e Configuration conf nw Job get Configuration Array List File Spec inp new Array List File Spec Array List List Operator Key inp Targets new Array List List Operator Key Array List String inp Signature Lists new Array List String Array List Long inp Limits new Array List Long Array List Store store Locations new Array List Store Path tmp Location null add settings statistics String set Script Prop conf get Configuration true set Script Prop equals Ignore Case true Script State ss Script State get ss add Settings Conf mro conf conf set Configuration true conf set Configuration true String buff Percent conf get Configuration buff Percent null Double parse Double buff Percent log info Configuration set set default conf set Configuration else log info Configuration set conf get Configuration Date Time Writable setup Available Zone Ids configure Compression conf try Process Loads List Load lds Plan Helper get Physical Operators mro map Plan Load class lds null lds size Load ld lds Load Func lf ld get Load Func lf set Location ld get File get File Name nw Job Store inp filespecs inp add ld get File mro reduce Plan Empty log info Reduce phase detected estimating required reducers adjust Num Reducers plan mro nw Job else nw Job set Num Reduce Tasks Context Illustrator Context get Exec Type Local ok Run Local nw Job mro lds log info override default conf run local mode Entry String String entry default Conf String key entry get Key key equals Configuration key equals Configuration must set back default case set example continue key starts fs n want change fs settings back continue key starts io n want change io settings back continue String value entry get Value conf get key null conf get key equals value conf set key value conf set Boolean Impl Constants true else log info Search see Load Func Store Func need pack things distributed cache List String cache Files new Array List String List String ship Files new Array List String Udf Cache Ship Files Visitor map Udf Cache File Visitor new Udf Cache Ship Files Visitor mro map Plan map Udf Cache File Visitor visit cache Files add map Udf Cache File Visitor get Cache Files ship Files add map Udf Cache File Visitor get Ship Files Udf Cache Ship Files Visitor reduce Udf Cache File Visitor new Udf Cache Ship Files Visitor mro reduce Plan reduce Udf Cache File Visitor visit cache Files add reduce Udf Cache File Visitor get Cache Files ship Files add reduce Udf Cache File Visitor get Ship Files setup Distributed Cache Context conf cache Files Array new String false Setup Distributed Cache job List Jars new Array List extra Jar Context extra Jars Jars contains extra Jar Jars add extra Jar String udf mro Fs Class clazz Context get Class Alias udf clazz null String jar Jar Manager find Containing Jar clazz jar null jar new File jar Jars contains jar Jars add jar String script Jar Context script Jars jar new File script Jar Jars contains jar Jars add jar String ship File ship Files jar new File ship File Jars contains jar Jars add jar String default Jar Jar Manager get Default Jars jar new File default Jar Jars contains jar Jars add jar jar Jars boolean predeployed false String predeployed Jar Context predeployed Jars predeployed Jar contains new File jar get Name predeployed true predeployed jar get File Lower Case ends jar put Jar Class Path Distributed Cache Context conf jar else setup Distributed Cache Context conf new String jar get Path true File script Jar File Jar Manager create Script Jar Context script Jar File null put Jar Class Path Distributed Cache Context conf script Jar File String udf mro Fs udf contains Cross Object func Context instantiate Func Spec new Func Spec udf func instanceof Cross String cross Key Cross func get Cross Key conf set Impl Constants cross Key Integer String mro get Requested Parallelism lds null lds size Load ld lds Store target operators tuples read input List Physical Operator ld Sucs mro map Plan get Successors ld List Operator Key ld Suc Keys new Array List Operator Key ld Sucs null Physical Operator operator ld Sucs ld Suc Keys add operator get Operator Key inp Targets add ld Suc Keys inp Signature Lists add ld get Signature inp Limits add ld get Limit Remove Load plan Context Illustrator mro map Plan remove ld Utils Local Context conf Configuration Util replace Config Local Mode conf conf set Input Format Object Serializer serialize inp conf set Input Format Object Serializer serialize inp Targets conf set Input Format Object Serializer serialize inp Signature Lists conf set Input Format Object Serializer serialize inp Limits Removing job credential entry serializing pigcontext jobconf since path would invalid new job created Context get Properties remove mapreduce job credentials binary conf set Boolean Impl Constants Context get Exec Type Local conf set Impl Constants Object Serializer serialize Context get Log j Properties conf set udf import list Object Serializer serialize Context get Package Import List unit tests since n create Server user specified job name using switch wo n reset name System get Property Configuration null Context get Properties get Property Context null nw Job set Job Name Context get Properties get Property Context Context get Properties get Property Context null job priority set attempt get corresponding enum value set hadoop job priority String job Priority Context get Properties get Property Context Upper Case try Allow arbitrary case Hadoop job priorities upper case conf set Configuration Job Priority value job Priority String catch Illegal Argument Exception e String Buffer sb new String Buffer job priority must one Job Priority priorities Job Priority values int priorities length sb append sb append priorities sb append specified job Priority throw new Job Creation Exception sb String setup Distributed Cache Context conf Context get Properties streaming ship files true setup Distributed Cache Context conf Context get Properties streaming cache files false nw Job set Input Format Class Input Format class tmp file compression setups must done set Store Location Stores Utils set Tmp File Compression Conf Context conf Process Store remove plan Linked List Store map Stores Plan Helper get Physical Operators mro map Plan Store class Linked List Store reduce Stores Plan Helper get Physical Operators mro reduce Plan Store class Store st map Stores store Locations add st Store Func Interface Func st get Store Func Func set Store Location st get File get File Name nw Job Func instanceof Overwritable Store Func Overwritable Store Func osf Overwritable Store Func Func osf Overwrite osf cleanup Output st nw Job Store st reduce Stores store Locations add st Store Func Interface Func st get Store Func Func set Store Location st get File get File Name nw Job Func instanceof Overwritable Store Func Overwritable Store Func osf Overwritable Store Func Func osf Overwrite osf cleanup Output st nw Job set Output Format nw Job map Stores size reduce Stores size single store case log info Setting single store job Store st reduce Stores Empty st map Stores get Context Illustrator mro map Plan remove st else st reduce Stores get Context Illustrator mro reduce Plan remove st Map Red Util setup Streaming Dirs Conf Single st Context conf else map Stores size reduce Stores size multi store case log info Setting multi store job Map Red Util setup Streaming Dirs Conf Multi Context conf boolean disable Counter conf get Boolean disable counter false disable Counter log info Disable custom output counters int idx Store sto store Locations sto set Disable Counter disable Counter sto set Multi Store true sto set Index idx store map key type needed key null create appropriate Nullable Writable object conf set map keytype Object Serializer serialize new byte mro map Key Type set parent plan operators map reduce plans currently parent plan really used Stream present plan new Phy Plan Setter mro map Plan visit new Phy Plan Setter mro combine Plan visit new Phy Plan Setter mro reduce Plan visit call modifies Repl Files names Join operators within plans must called plans serialized setup Distributed Cache Join mro Context conf Schema Tuple Frontend copy Generated Distributed Cache Context conf Package pack null mro reduce Plan Empty Map Job nw Job set Mapper Class Map Map class Context Illustrator conf set map Plan Object Serializer serialize mro map Plan mro End Input Set Map used Map close decide whether pipeline needs rerun one time close pipeline rerun either stream Merge Join conf set true else Map Reduce Job Process Package operator remove reduce plan mro combine Plan Empty Package comb Pack Package mro combine Plan get Roots get mro combine Plan remove comb Pack nw Job set Combiner Class Combiner Combine class conf set combine Plan Object Serializer serialize mro combine Plan conf set combine package Object Serializer serialize comb Pack else mro needs Distinct Combiner nw Job set Combiner Class Distinct Combiner Combine class log info Setting identity combiner class pack Package mro reduce Plan get Roots get Context Illustrator mro reduce Plan remove pack nw Job set Mapper Class Map Reduce Map class nw Job set Reducer Class Map Reduce Reduce class mro custom Partitioner null nw Job set Partitioner Class Context resolve Class Name mro custom Partitioner Context Illustrator conf set map Plan Object Serializer serialize mro map Plan mro End Input Set Map used Map close decide whether pipeline needs rerun one time close pipeline rerun stream merge join conf set true Context Illustrator conf set reduce Plan Object Serializer serialize mro reduce Plan mro End Input Set Reduce used Map close decide whether pipeline needs rerun one time close pipeline rerun stream conf set stream reduce true Context Illustrator conf set reduce package Object Serializer serialize pack conf set reduce key type Byte String pack get Pkgr get Key Type mro get Use Secondary Key nw Job set Grouping Comparator Class Secondary Key Group Comparator class nw Job set Partitioner Class Secondary Key Partitioner class nw Job set Sort Comparator Class Secondary Key Comparator class nw Job set Output Key Class Nullable Tuple class conf set secondary Sort Order Object Serializer serialize mro get Secondary Sort Order else Class extends Writable Comparable key Class Data Type get Writable Comparable Types pack get Pkgr get Key Type get Class nw Job set Output Key Class key Class select Comparator mro pack get Pkgr get Key Type nw Job nw Job set Output Value Class Nullable Tuple class mro Global Sort mro Limit Sort mro Global Sort String symlink add Single File Distributed Cache Context conf mro get Quant File pigsample conf set quantiles File symlink nw Job set Partitioner Class Weighted Range Partitioner class mro Comparator Used boolean usercomparator false String comp Func Spec mro Fs Class comparator Context resolve Class Name comp Func Spec Comparison Func class Assignable comparator nw Job set Mapper Class Map Reduce Map Comparator class nw Job set Reducer Class Map Reduce Reduce Comparator class conf set reduce package Object Serializer serialize pack conf set usercomparator true nw Job set Output Key Class Nullable Tuple class nw Job set Sort Comparator Class comparator usercomparator true break usercomparator String msg Internal error Ca n find comparator throw new Exception msg else conf set sort Order Object Serializer serialize mro get Sort Order mro Skewed Join String symlink add Single File Distributed Cache Context conf mro get Skewed Join Partition File pigdistkey conf set key Dist File symlink nw Job set Partitioner Class Skewed Partitioner class nw Job set Mapper Class Map Reduce Map Partition Index class nw Job set Map Output Key Class Nullable Partition Writable class nw Job set Grouping Comparator Class Grouping Partition Writable Comparator class mro Counter Operation mro Row Number nw Job set Mapper Class Map Reduce Counter Map Counter class else nw Job set Reducer Class Map Reduce Counter Reduce Counter class mro Rank Operation Iterator String operation Ds mro get Rank Operation Id iterator operation Ds Next String operation operation Ds next Iterator Pair String Long Pairs global Counters get operation iterator Pair String Long pair null Pairs Next pair Pairs next conf set Long pair first pair second Context Illustrator unset inputs Store otherwise map reduce plan unnecessarily deserialized Store st map Stores st set Inputs null st set Parent Plan null Store st reduce Stores st set Inputs null st set Parent Plan null conf set Object Serializer serialize map Stores conf set Object Serializer serialize reduce Stores String tmp long max Combined Split Size mro combine Small Splits Context get Properties get Property split Combination true equals false conf set Boolean Split Combination true else tmp Context get Properties get Property max Combined Split Size null null try max Combined Split Size Long parse Long tmp catch Number Format Exception e log warn Invalid numeric format max Combined Split Size use default maximum combined split size max Combined Split Size conf set Long max Combined Split Size max Combined Split Size hack set distributed cache file hadoop Mini Cluster require local jar fixed location removed Context get Exec Type Exec Type String newfiles conf get alternative mapreduce job cache files newfiles null String files conf get Configuration conf set Configuration files null newfiles String files newfiles Serialize specific context info Context get Context serialize conf Job cjob new Job new Job Conf conf new Array List Job job Store Map put cjob new Pair List Store Path store Locations tmp Location return cjob catch Job Creation Exception jce throw jce catch Exception e int err Code String msg Internal error creating job configuration throw new Job Creation Exception msg err Code Exception e public static void configure Compression Configuration conf Convert mapred output output compression See true equals conf get Configuration conf set output compression enabled true String codec conf get Configuration codec null throw new Illegal Argument Exception Configuration set value specified Configuration else conf set output compression codec codec Adjust number reducers based default parallel requested parallel estimated parallel sampler jobs also adjust next job advance get runtime parallel number partitions used sampler param plan plan param mro operator param nw Job current job throws Exception public void adjust Num Reducers Oper Plan plan Map Reduce Oper mro org apache hadoop mapreduce Job nw Job throws Exception int job Parallelism calculate Runtime Reducers mro nw Job mro Sampler plan get Successors mro null need calculate final number reducers next job order skew join generate quantfile Map Reduce Oper next Mro plan get Successors mro get use conf Job calculate runtime reducers next job fine statistics comes next Mro Loads int n Partitions calculate Runtime Reducers next Mro nw Job set runtime reducer next job partition Parallel Constant Visitor visitor new Parallel Constant Visitor mro reduce Plan n Partitions visitor visit log info Setting Parallelism job Parallelism Configuration conf nw Job get Configuration set various parallelism job conf later analysis conf set Int Impl Constants Context default Parallel conf set Int Impl Constants mro requested Parallelism conf set Int Impl Constants mro estimated Parallelism backward compatibility encourage use runtime Parallelism runtime mro requested Parallelism job Parallelism finally set number reducers conf set Int Configuration job Parallelism Calculate runtime reducers based default parallel requested parallel estimated parallel save Map Reduce Oper runtime Parallelism return runtime Parallelism throws Exception private int calculate Runtime Reducers Map Reduce Oper mro org apache hadoop mapreduce Job nw Job throws Exception n recalculate job mro runtime Parallelism return mro runtime Parallelism int job Parallelism mro requested Parallelism job Parallelism mro requested Parallelism else Context default Parallel job Parallelism Context default Parallel else mro estimated Parallelism estimate Number Reducers nw Job mro mro estimated Parallelism job Parallelism mro estimated Parallelism else reducer estimation could return could n estimate log info Could estimate number reducers requested default parallelism set Defaulting reducer job Parallelism save mro runtime Parallelism job Parallelism return job Parallelism Looks estimator invokes find number reducers use n set defaults Input Size Reducer Estimator param job param map Reducer Oper throws Exception public static int estimate Number Reducers org apache hadoop mapreduce Job job Map Reduce Oper map Reducer Oper throws Exception Configuration conf job get Configuration Reducer Estimator estimator conf get null new Input Size Reducer Estimator Context instantiate Object Params conf Reducer Estimator class log info Using reducer estimator estimator get Class get Name int number Reducers estimator estimate Number Reducers job map Reducer Oper return number Reducers public static class Secondary Key Group Comparator extends Writable Comparator public Secondary Key Group Comparator super Nullable Tuple class true Suppress Warnings unchecked Override public int compare Writable Comparable Writable Comparable b Nullable Writable wa Nullable Writable Nullable Writable wb Nullable Writable b wa get Index Nullable Writable mq Flag multi query index wa get Index Nullable Writable idx Space wb get Index Nullable Writable idx Space return else wa get Index Nullable Writable idx Space wb get Index Nullable Writable idx Space return equal fall wa wb guaranteed null Local Rearrange create tuple anyway even main key secondary key null however main key null need check using logic Nullable Writable Object valuea null Object valueb null try Get main key compound key valuea Tuple wa get Value Type get valueb Tuple wb get Value Type get catch Exec Exception e throw new Runtime Exception Unable access tuple field e wa Null wb Null int result Data Type compare valuea valueb field inside tuple null merge keys See result valuea instanceof Tuple valueb instanceof Tuple try int Tuple valuea size Tuple valueb get null return wa get Index Nullable Writable idx Space wb get Index Nullable Writable idx Space catch Exec Exception e throw new Runtime Exception Unable access tuple field e return result else valuea null valueb null null compare indicies wa get Index Nullable Writable idx Space wb get Index Nullable Writable idx Space return else wa get Index Nullable Writable idx Space wb get Index Nullable Writable idx Space return else return else valuea null return else return public static class Writable Comparator extends Writable Comparator Suppress Warnings unchecked protected Writable Comparator Class c super c Override public int compare byte b int int l byte b int int l return Writable Comparator compare Bytes b l b l public static class Boolean Writable Comparator extends Writable Comparator public Boolean Writable Comparator super Nullable Boolean Writable class public static class Int Writable Comparator extends Writable Comparator public Int Writable Comparator super Nullable Int Writable class public static class Long Writable Comparator extends Writable Comparator public Long Writable Comparator super Nullable Long Writable class public static class Float Writable Comparator extends Writable Comparator public Float Writable Comparator super Nullable Float Writable class public static class Double Writable Comparator extends Writable Comparator public Double Writable Comparator super Nullable Double Writable class public static class Big Integer Writable Comparator extends Writable Comparator public Big Integer Writable Comparator super Nullable Big Integer Writable class public static class Big Decimal Writable Comparator extends Writable Comparator public Big Decimal Writable Comparator super Nullable Big Decimal Writable class public static class Date Time Writable Comparator extends Writable Comparator public Date Time Writable Comparator super Nullable Date Time Writable class public static class Char Array Writable Comparator extends Writable Comparator public Char Array Writable Comparator super Nullable Text class public static class Writable Comparator extends Writable Comparator public Writable Comparator super Nullable Bytes Writable class public static class Tuple Writable Comparator extends Writable Comparator public Tuple Writable Comparator super Tuple Factory get Instance tuple Class public static class Bag Writable Comparator extends Writable Comparator public Bag Writable Comparator super Bag Factory get Instance new Default Bag get Class hadoop new integration need explicitly set Grouping Comparator public static class Grouping Boolean Writable Comparator extends Writable Comparator public Grouping Boolean Writable Comparator super Nullable Boolean Writable class true public static class Grouping Int Writable Comparator extends Writable Comparator public Grouping Int Writable Comparator super Nullable Int Writable class true public static class Grouping Long Writable Comparator extends Writable Comparator public Grouping Long Writable Comparator super Nullable Long Writable class true public static class Grouping Float Writable Comparator extends Writable Comparator public Grouping Float Writable Comparator super Nullable Float Writable class true public static class Grouping Double Writable Comparator extends Writable Comparator public Grouping Double Writable Comparator super Nullable Double Writable class true public static class Grouping Date Time Writable Comparator extends Writable Comparator public Grouping Date Time Writable Comparator super Nullable Date Time Writable class true public static class Grouping Char Array Writable Comparator extends Writable Comparator public Grouping Char Array Writable Comparator super Nullable Text class true public static class Grouping Writable Comparator extends Writable Comparator public Grouping Writable Comparator super Nullable Bytes Writable class true public static class Grouping Tuple Writable Comparator extends Writable Comparator public Grouping Tuple Writable Comparator super Nullable Tuple class true public static class Grouping Partition Writable Comparator extends Writable Comparator public Grouping Partition Writable Comparator super Nullable Partition Writable class true public static class Grouping Bag Writable Comparator extends Writable Comparator public Grouping Bag Writable Comparator super Bag Factory get Instance new Default Bag get Class true public static class Grouping Big Integer Writable Comparator extends Writable Comparator public Grouping Big Integer Writable Comparator super Nullable Big Integer Writable class true public static class Grouping Big Decimal Writable Comparator extends Writable Comparator public Grouping Big Decimal Writable Comparator super Nullable Big Decimal Writable class true private void select Comparator Map Reduce Oper mro byte key Type org apache hadoop mapreduce Job job throws Job Creation Exception operator involved order use specific raw comparators cogroup need set comparator class raw comparator grouping comparator class specific raw comparators skip index Otherwise use hadoop provided raw comparator operator order global sort set successor global sort set case sampling job limit sort boolean Order false mro Global Sort mro Limit Sort mro using Typed Comparator Order true else List Map Reduce Oper succs plan get Successors mro succs null Map Reduce Oper succ succs get succ Global Sort Order true Order switch key Type case Data Type job set Sort Comparator Class Boolean Raw Comparator class break case Data Type job set Sort Comparator Class Int Raw Comparator class break case Data Type job set Sort Comparator Class Long Raw Comparator class break case Data Type job set Sort Comparator Class Float Raw Comparator class break case Data Type job set Sort Comparator Class Double Raw Comparator class break case Data Type job set Sort Comparator Class Date Time Raw Comparator class break case Data Type job set Sort Comparator Class Text Raw Comparator class break case Data Type job set Sort Comparator Class Bytes Raw Comparator class break case Data Type job set Sort Comparator Class Big Integer Raw Comparator class break case Data Type job set Sort Comparator Class Big Decimal Raw Comparator class break case Data Type int err Code String msg Using Map key supported throw new Job Creation Exception msg err Code Exception case Data Type job set Sort Comparator Class Tuple Sort Comparator class break case Data Type err Code msg Using Bag key supported throw new Job Creation Exception msg err Code Exception default break return switch key Type case Data Type job set Sort Comparator Class Boolean Writable Comparator class job set Grouping Comparator Class Grouping Boolean Writable Comparator class break case Data Type job set Sort Comparator Class Int Writable Comparator class job set Grouping Comparator Class Grouping Int Writable Comparator class break case Data Type job set Sort Comparator Class Big Integer Writable Comparator class job set Grouping Comparator Class Grouping Big Integer Writable Comparator class break case Data Type job set Sort Comparator Class Big Decimal Writable Comparator class job set Grouping Comparator Class Grouping Big Decimal Writable Comparator class break case Data Type job set Sort Comparator Class Long Writable Comparator class job set Grouping Comparator Class Grouping Long Writable Comparator class break case Data Type job set Sort Comparator Class Float Writable Comparator class job set Grouping Comparator Class Grouping Float Writable Comparator class break case Data Type job set Sort Comparator Class Double Writable Comparator class job set Grouping Comparator Class Grouping Double Writable Comparator class break case Data Type job set Sort Comparator Class Date Time Writable Comparator class job set Grouping Comparator Class Grouping Date Time Writable Comparator class break case Data Type job set Sort Comparator Class Char Array Writable Comparator class job set Grouping Comparator Class Grouping Char Array Writable Comparator class break case Data Type job set Sort Comparator Class Writable Comparator class job set Grouping Comparator Class Grouping Writable Comparator class break case Data Type int err Code String msg Using Map key supported throw new Job Creation Exception msg err Code Exception case Data Type job set Sort Comparator Class Tuple Writable Comparator class job set Grouping Comparator Class Grouping Tuple Writable Comparator class break case Data Type err Code msg Using Bag key supported throw new Job Creation Exception msg err Code Exception default err Code msg Unhandled key type Data Type find Type Name key Type throw new Job Creation Exception msg err Code Exception private void setup Distributed Cache Join Map Reduce Oper mro Context Context Configuration conf throws Exception new Join Distributed Cache Visitor mro map Plan Context conf visit new Join Distributed Cache Visitor mro reduce Plan Context conf visit private static void setup Distributed Cache Context Context Configuration conf Properties properties String key boolean ship Cluster throws Exception Set Distributed Cache job String file Names properties get Property key file Names null String paths file Names split setup Distributed Cache Context conf paths ship Cluster private static void add Distributed Cache uri Configuration conf reset uri String find Distributed Cache add Cache Archive uri conf else Distributed Cache add Cache File uri conf private static void setup Distributed Cache Context Context Configuration conf String paths boolean ship Cluster throws Exception Turn symlink feature Distributed Cache create Symlink conf String path paths path path trim path length Path src new Path path Ensure src valid src src Ship cluster necessary add Distributed Cache ship Cluster Path dst new Path File Localizer get Temporary Path Context String File System fs dst get File System conf fs copy Local File src dst fs set Replication dst short conf get Int Configuration Construct dst src Name uri Distributed Cache dst null try dst new dst String src get Name catch Syntax Exception ue byte err Src Context get Error Source int err Code switch err Src case Exception err Code break case Exception err Code break default err Code break String msg Invalid ship specification File n exist dst throw new Exec Exception msg err Code err Src add Distributed Cache dst conf else add Distributed Cache src conf private static String add Single File Distributed Cache Context Context Configuration conf String filename String prefix throws Exception Context Illustrator File Localizer file Exists filename Context throw new Exception Internal error skew join partition file filename exist String symlink filename Hadoop currently n support distributed cache local mode line removed support added Hadoop team Utils Local Context conf symlink prefix Integer String System identity Hash Code filename Long String System current Time Millis filename filename symlink setup Distributed Cache Context conf new String filename false return symlink Ensure src valid param src source Path return path throws Exec Exception private static Path src throws Exec Exception String path String src String String fragment null path String contains fragment path String substring path String index path String path String substring path String index Encode path uri new Path path String Uri String uri Encoded uri String fragment null uri Encoded uri Encoded fragment try return new uri Encoded catch Syntax Exception ue int err Code String msg Invalid cache specification File n exist src throw new Exec Exception msg err Code Exception url copy path local adding distributed cache param Context Context param conf job conf param url url added distributed cache return path seen distributed cache throws Exception Suppress Warnings deprecation private static void put Jar Class Path Distributed Cache Context Context Configuration conf url throws Exception Turn symlink feature Distributed Cache create Symlink conf Path dist Cache Path get Existing Dist Cache File Path conf url dist Cache Path null log info Jar file url already Distributed Cache dist Cache Path copying hdfs adding else always copies locally jar file see Server register Jar Path path ship Context conf url Distributed Cache add File Class Path path conf File System get conf log info Added jar url Distributed Cache path private static Path get Existing Dist Cache File Path Configuration conf url throws Exception cache File Uris Distributed Cache get Cache Files conf cache File Uris null String file Name url get Ref null Filename Utils get Name url get Path url get Ref cache File Uri cache File Uris Path path new Path cache File Uri String cache File Name cache File Uri get Fragment null path get Name cache File Uri get Fragment Match filenames symlinks symlinks symlink existing cache file name new file added would case hbase jar hbase jar configured via Oozie register hbase jar done script two different files symlinked name conflict hadoop guarantee file symlinked name good file Name equals cache File Name return path return null public static Path get Cache Staging Dir Configuration conf throws Exception String Temp Dir conf get Configuration conf get Configuration tmp String current User System get Property user name Path staging Dir new Path Temp Dir current User pigcache File System fs File System get conf fs mkdirs staging Dir fs set Permission staging Dir File Localizer return staging Dir public static Path get Cache Context Context Configuration conf url throws Exception Input Stream null Input Stream null Output Stream os null try Path staging Dir get Cache Staging Dir conf String filename Filename Utils get Name url get Path url open Stream String checksum Digest Utils sha Hex File System fs File System get conf Path cache Dir new Path staging Dir checksum Path cache File new Path cache Dir filename fs exists cache File log debug Found url jar cache cache Dir long cur Time System current Time Millis fs set Times cache File cur Time return cache File log info Url url found jarcache cache Dir attempt copy cache else return null fs mkdirs cache Dir File Localizer url open Stream short replication short conf get Int Configuration conf get Int mapred submit replication os fs create cache File replication fs set Permission cache File File Localizer Utils copy Bytes os true return cache File catch Exception ioe log info Unable retrieve jar jar cache ioe return null finally org apache commons io Utils close Quietly org apache commons io Utils close Quietly Utils close stream quietly os null os close copy file hdfs temporary path param Context context param conf job conf param url url ship hdfs return location shipped throws Exception private static Path ship Context Context Configuration conf url throws Exception short replication short conf get Int Configuration boolean cache Enabled conf get Boolean Configuration false cache Enabled Path path Dfs get Cache Context conf url path Dfs null return path Dfs String suffix Filename Utils get Name url get Path Path dst new Path File Localizer get Temporary Path Context Uri get Path suffix File System fs dst get File System conf Output Stream os null Input Stream null try url open Stream os fs create dst Utils copy Bytes os true finally org apache commons io Utils close Quietly Utils close stream quietly os null os close fs set Replication dst replication return dst private static class Join Distributed Cache Visitor extends Phy Plan Visitor private Context Context null private Configuration conf null public Join Distributed Cache Visitor Physical Plan plan Context Context Configuration conf super plan new Depth First Walker Physical Operator Physical Plan plan Context Context conf conf Override public void visit Join Join join throws Visitor Exception Hadoop currently n support distributed cache local mode line removed support added Utils Local Context conf return set distributed cache replicated files File Spec repl Files join get Repl Files Array List String replicated Path new Array List String File Spec new Repl Files new File Spec repl Files length long max Size Long value Context get Properties get Property Configuration first input replicated long size Replicated Inputs try int repl Files length ignore fragmented file String symlink join get Fragment symlink pigrepl join get Operator Key String Integer String System identity Hash Code repl Files get File Name Long String System current Time Millis replicated Path add repl Files get File Name symlink Path path new Path repl Files get File Name File System fs path get File System conf size Replicated Inputs Map Red Util get Path Length fs fs get File Status path max Size new Repl Files new File Spec symlink repl Files null null repl Files get Func Spec join set Repl Files new Repl Files size Replicated Inputs max Size throw new Visitor Exception Replicated input files size size Replicated Inputs exceeds Configuration max Size setup Distributed Cache Context conf replicated Path Array new String false catch Exception e String msg Internal error Distributed cache could set replicated files throw new Visitor Exception msg e Override public void visit Merge Join Merge Join join throws Visitor Exception Hadoop currently n support distributed cache local mode line removed support added Utils Local Context conf return String index File join get Index File merge join may use index file index File null return try String symlink add Single File Distributed Cache Context conf index File indexfile join set Index File symlink catch Exception e String msg Internal error Distributed cache could set merge join index file throw new Visitor Exception msg e Override public void visit Merge Co Group Merge Cogroup merge Co Grp throws Visitor Exception Hadoop currently n support distributed cache local mode line removed support added Utils Local Context conf return String index File merge Co Grp get Index File Name index File null throw new Visitor Exception index file try String symlink add Single File Distributed Cache Context conf index File indexfile mergecogrp merge Co Grp set Index File Name symlink catch Exception e String msg Internal error Distributed cache could set merge cogrp index file throw new Visitor Exception msg e private static class Parallel Constant Visitor extends Phy Plan Visitor private int rp private boolean replaced false public Parallel Constant Visitor Physical Plan plan int rp super plan new Depth First Walker Physical Operator Physical Plan plan rp rp Override public void visit Constant Constant Expression cnst throws Visitor Exception cnst get Requested Parallelism Object obj cnst get Value obj instanceof Integer replaced sample job one Constant Expression throw new Visitor Exception Invalid reduce plan one Constant Expression found sampling job cnst set Value rp cnst set Requested Parallelism rp replaced true public static void set Output Format org apache hadoop mapreduce Job job Output Format report Hadoop always Output Format wrapped Lazy Output Format provided Configuration set true equals Ignore Case job get Configuration get Configuration Lazy Output Format set Output Format Class job Output Format class else job set Output Format Class Output Format class
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools pigstats import java io File Found Exception import java io Exception import java util Array List import java util Collections import java util List import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop mapred Counters import org apache backend hadoop executionengine map Reduce Layer File Based Output Size Reader import org apache backend hadoop executionengine map Reduce Layer Stats Output Size Reader import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache classification Interface Audience import org apache classification Interface Stability import org apache impl Context import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Plan Visitor import org apache tools pigstats Stats Job Graph class encapsulates runtime statistics Map Reduce job Job statistics collected job completed Interface Audience Public Interface Stability Evolving public abstract class Job Stats extends Operator private static final Log Log Factory get Log Job Stats class public static final String Job Statistics alias public static final String Job Statistics alias location public static final String Job Statistics feature public static final String null public static final String null public static enum Job State protected Job State state Job State protected Array List Output Stats outputs protected Array List Input Stats inputs protected Configuration conf protected long hdfs Bytes Read protected long hdfs Bytes Written private String error Msg private Exception exception null protected Job Stats String name Job Graph plan super name plan outputs new Array List Output Stats inputs new Array List Input Stats public abstract String get Job Id public void set Conf Configuration conf conf null return conf conf public Job State get State return state public boolean Successful return state Job State public void set Successful boolean Successful state Successful Job State Job State public String get Error Message return error Msg public Exception get Exception return exception public List Output Stats get Outputs return Collections unmodifiable List outputs public List Input Stats get Inputs return Collections unmodifiable List inputs public String get Alias return String get Annotation public String get Alias Location return String get Annotation public String get Feature return String get Annotation public long get Hdfs Bytes Read return hdfs Bytes Read public long get Hdfs Bytes Written return hdfs Bytes Written Returns total bytes written user specified locations job public long get Bytes Written long count Output Stats outputs long n get Bytes n count n return count Returns total number records user specified output locations job public long get Record Writtern long count Output Stats outputs long rec get Number Records rec count rec return count Override public abstract void accept Plan Visitor v throws Frontend Exception Override public boolean Equal Operator operator operator instanceof Job Stats return false return name equals Ignore Case operator get Name public void set Error Msg String error Msg error Msg error Msg public void set Backend Exception Exception e exception e public abstract String get Display String Calculate median value given array param durations return median value protected long calculate Median Value List Long durations long median figure median Collections sort durations int mid Point durations size durations size odd median durations get mid Point else even median durations get mid Point durations get mid Point return median public boolean Sampler return get Feature contains Script State name public boolean Indexer return get Feature contains Script State name deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Number Maps instead Deprecated abstract public int get Number Maps deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Number Reduces instead Deprecated abstract public int get Number Reduces deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Max Map Time instead Deprecated abstract public long get Max Map Time deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Min Map Time instead Deprecated abstract public long get Min Map Time deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Avg Map Time instead Deprecated abstract public long get Avg Map Time deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Max Reduce Time instead Deprecated abstract public long get Max Reduce Time deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Min Reduce Time instead Deprecated abstract public long get Min Reduce Time deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Avg Educe Time instead Deprecated abstract public long get Avg Educe Time deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Map Input Records instead Deprecated abstract public long get Map Input Records deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Map Output Records instead Deprecated abstract public long get Map Output Records deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Reduce Input Records instead Deprecated abstract public long get Reduce Input Records deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Reduce Output Records instead Deprecated abstract public long get Reduce Output Records deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Spill Count instead Deprecated abstract public long get Spill Count deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Proactive Spill Count Objects instead Deprecated abstract public long get Proactive Spill Count Objects deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Proactive Spill Count Recs instead Deprecated abstract public long get Proactive Spill Count Recs deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Hadoop Counters instead Deprecated abstract public Counters get Hadoop Counters deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Multi Store Counters instead Deprecated abstract public Map String Long get Multi Store Counters deprecated using mapreduce please cast Job Stats org apache tools pigstats mapreduce Job Stats use link org apache tools pigstats mapreduce Job Stats get Multi Input Counters instead Deprecated abstract public Map String Long get Multi Input Counters Looks output size reader invokes get size output set defaults File Based Output Size Reader param sto Store param conf configuration public static long get Output Size Store sto Configuration conf Stats Output Size Reader reader null String reader Names conf get Stats Output Size Reader File Based Output Size Reader class get Canonical Name String class Name reader Names split reader Stats Output Size Reader Context instantiate Func Spec class Name reader supports sto conf info using output size reader class Name try return reader get Output Size sto conf catch File Found Exception e warn unable find output file e return catch Exception e warn unable get byte written job e return warn unable find output size reader return
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Byte Array Input Stream import java io Exception import java math Big Decimal import java util Array List import java util Hash Map import java util List import java util Map import java util Properties import org apache hadoop io Text import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Job import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce lib input File Input Format import org apache hadoop mapreduce lib input Text Input Format import org apache Expression import org apache Load Caster import org apache Load Func import org apache Load Metadata import org apache Warning import org apache Resource Schema import org apache Resource Schema Resource Field Schema import org apache Resource Statistics import org apache backend hadoop executionengine map Reduce Layer Split import org apache data Bag Factory import org apache data Data Bag import org apache data Data Byte Array import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl util Context import org apache impl util Utils import org codehaus jackson Json Factory import org codehaus jackson Json Parser import org codehaus jackson Json Token import org joda time format Date Time Formatter import org joda time format Date Time Format loader data stored using link Json Storage generic loader depends schema stored data conceivably could write loader determines schema public class Json Loader extends Load Func implements Load Metadata protected Record Reader reader null protected Resource Schema schema null private String udfc Signature null private Json Factory json Factory null private Tuple Factory tuple Factory Tuple Factory get Instance private Bag Factory bag Factory Bag Factory get Instance private static final String jsonloader schema public Json Loader public Json Loader String schema String throws Exception schema new Resource Schema Utils parse Schema schema String Override public void set Location String location Job job throws Exception Tell input format reading File Input Format set Input Paths job location Override Suppress Warnings unchecked public Input Format get Input Format throws Exception use Text Input Format default Hadoop input format text Long Writable key ignore value Text string writable data return new Text Input Format Override public Load Caster get Load Caster throws Exception expect casting byte arrays returning typed data return null Override Suppress Warnings unchecked public void prepare Read Record Reader reader Split split throws Exception reader reader Get schema string Context object Context udfc Context get Context Properties p udfc get Properties get Class new String udfc Signature String str Schema p get Property str Schema null throw new Exception Could find schema context Parse schema string stored properties object schema new Resource Schema Utils get Schema String str Schema json Factory new Json Factory Override public Tuple get Next throws Exception Text val null try Read next key value pair record reader finished return null reader next Key Value return null Get current value n use key val Text reader get Current Value catch Interrupted Exception ie throw new Exception ie Create parser specific input line may efficient approach byte new Bytes new byte val get Length System arraycopy val get Bytes new Bytes val get Length Byte Array Input Stream bais new Byte Array Input Stream new Bytes Json Parser p json Factory create Json Parser bais Create tuple returning create right number fields Tuple object optimized case Resource Field Schema fields schema get Fields Tuple tuple Factory new Tuple fields length Read start object marker Throughout file parsing n expect return tuple null fields rather throwing exception way mangled lines n fail job try p next Token Json Token warn Bad record could find start record val String Warning return Read field record int fields length set read Field p fields p next Token Json Token warn Bad record could find end record val String Warning return catch Exception jpe Throwable ex jpe get Cause null jpe jpe get Cause warn Encountered exception ex get Class get Name ex get Message Bad record returning null val Warning finally p close return private Object read Primitive Json Parser p Json Token tok Resource Field Schema field throws Exception tok Json Token return null switch field get Type Read based expected type case Data Type return p get Boolean Value case Data Type return p get Int Value case Data Type return p get Long Value case Data Type return p get Float Value case Data Type return p get Double Value case Data Type Date Time Formatter formatter Date Time Format date Time Parser return formatter Offset Parsed parse Date Time p get Text case Data Type byte b p get Text get Bytes Use constructor copies bytes memory return new Data Byte Array b b length case Data Type return p get Text case Data Type return p get Big Integer Value case Data Type return new Big Decimal p get Text default throw new Exception Unknown type input schema field get Type private Object read Field Json Parser p Resource Field Schema field int fieldnum throws Exception Read next token Json Token tok p next Token tok null warn Early termination record expected schema get Fields length fields bug found fieldnum Warning return null Check see value null tok Json Token return null tok p next Token Read based expected type switch field get Type case Data Type start map object tok Json Token warn Bad map field could find start object field fieldnum Warning return null Map String String new Hash Map String String p next Token Json Token String k p get Current Name String v p get Current Token Json Token null p get Text put k v return case Data Type tok Json Token warn Bad tuple field could find start object field fieldnum Warning return null Resource Schema field get Schema Resource Field Schema fs get Fields Tuple tuple Factory new Tuple fs length int j j fs length j set j read Field p fs j j p next Token Json Token warn Bad tuple field could find end object field fieldnum Warning return null return case Data Type tok Json Token warn Bad bag field could find start array field fieldnum Warning return null field get Schema fs get Fields Drill next level tuple schema fs get Schema fs get Fields Data Bag bag bag Factory new Default Bag Json Token inner Tok inner Tok p next Token Json Token tuple Factory new Tuple fs length inner Tok Json Token int j j fs length j set j read Field p fs j j p next Token Json Token warn Bad bag tuple field could find end object field fieldnum Warning return null bag add else handle array kind primitive primitive set read Primitive p inner Tok fs bag add return bag default return read Primitive p tok field Override public void set Context Signature String signature udfc Signature signature Override public Resource Schema get Schema String location Job job throws Exception Resource Schema schema null schema else Parse schema new Json Metadata get Schema location job true null throw new Exception Unable parse schema found file location determined schema store Context properties object need backend Context udfc Context get Context Properties p udfc get Properties get Class new String udfc Signature p set Property String return Override public Resource Statistics get Statistics String location Job job throws Exception n implement one return null Override public String get Partition Keys String location Job job throws Exception n partitions return null Override public void set Partition Filter Expression partition Filter throws Exception n partitions Override public List String get Ship Files List String cache Files new Array List String Class class List new Class Json Factory class return Func Utils get Ship Files class List
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java io Output Stream import java util Hash Set import java util Set import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs Path import org apache hadoop mapreduce Job import org apache Expression import org apache Load Func import org apache Load Metadata import org apache Exception import org apache Resource Schema import org apache Resource Statistics import org apache Store Metadata import org apache backend datastorage Container Descriptor import org apache backend datastorage Data Storage import org apache backend datastorage Element Descriptor import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop datastorage Data Storage import org apache backend hadoop datastorage Directory import org apache backend hadoop datastorage File import org apache backend hadoop datastorage Path import org apache impl io File Localizer import org apache impl logical Layer Frontend Exception import org codehaus jackson Json Generation Exception import org codehaus jackson Json Parse Exception import org codehaus jackson map Json Mapping Exception import org codehaus jackson map Object Mapper import org codehaus jackson map util Map Reads Writes metadata using metafiles next data public class Json Metadata implements Load Metadata Store Metadata private static final Log log Log Factory get Log Json Metadata class private final String schema File Name private final String header File Name private final String stat File Name private boolean print Headers true private byte field Del private byte record Del private transient Map Element Descriptor Boolean lookup Cache new Map Element Descriptor Boolean public Json Metadata schema header stats public Json Metadata String schema File Name String header File Name String stat File Name schema File Name schema File Name header File Name header File Name stat File Name stat File Name Given path may represent glob pattern directory comma separated files glob patterns file method finds set relevant metadata files storage system algorithm finding metadata file follows p object represented path either directly via glob object directory path metaname exists use metadata file Else parent Path metaname exists use metadata file p Resolving conflicts merging metadata etc handled method taken care downstream code p param path Path passed Load Func may Hadoop glob param metaname Metadata file designation schema stats param conf configuration object return Set element descriptors metadata files associated files path protected Set Element Descriptor find Meta File String path String metaname Configuration conf throws Exception Set Element Descriptor meta File Set new Hash Set Element Descriptor String locations Load Func get Path Strings path String loc locations Data Storage storage storage new Data Storage new Path loc Uri Configuration Util Properties conf String full Path File Localizer full Path loc storage storage Container full Path Element Descriptor meta File Path storage Element full Path metaname exists meta File Path meta File Set add meta File Path else Element Descriptor descriptors storage Collection loc Element Descriptor descriptor descriptors Container Descriptor container null descriptor instanceof File Path descriptor Path Path descriptor get Path Path parent descriptor Path get Parent container new Directory Data Storage storage parent else descriptor instanceof Directory container Directory descriptor custom schema try parent directory Element Descriptor meta File Path storage Element container metaname exists meta File Path meta File Set add meta File Path return meta File Set private boolean exists Element Descriptor e throws Exception lookup Cache contains Key e return lookup Cache get e else boolean res e exists lookup Cache put e res return res Implementation Load Meta Data interface Override public String get Partition Keys String location Job job return null Override public void set Partition Filter Expression partition Filter throws Exception Json Metadata schema considered optional method suppresses logs errors encountered Override public Resource Schema get Schema String location Job job throws Exception return get Schema location job false Read schema json metadata file Schema parameter false errors suppressed logged param location param job param Schema return schema throws Exception public Resource Schema get Schema String location Job job boolean Schema throws Exception Configuration conf job get Configuration Set Element Descriptor schema File Set null try schema File Set find Meta File location schema File Name conf catch Exception e String msg Could find schema file location return null Exception Schema msg e assume schemas question merging schemas left open Element Descriptor schema File null schema File Set Empty schema File schema File Set iterator next else String msg Could find schema file location return null Exception Schema msg null log debug Found schema file schema File String Resource Schema resource Schema null try resource Schema new Object Mapper read Value schema File open Resource Schema class catch Json Parse Exception e String msg Unable load Resource Schema location return null Exception Schema msg e catch Json Mapping Exception e String msg Unable load Resource Schema location return null Exception Schema msg e catch Exception e String msg Unable load Resource Schema location return null Exception Schema msg e return resource Schema private Resource Schema null Exception boolean Schema String msg Exception e throws Frontend Exception Schema throw new Frontend Exception msg Exception e valid schema file probably expected log debug message return null log debug msg return null Json Metadata stats considered optional method suppresses logs errors encountered see org apache Load Metadata get Statistics String Job Override public Resource Statistics get Statistics String location Job job throws Exception Configuration conf job get Configuration Set Element Descriptor stat File Set null try stat File Set find Meta File location stat File Name conf catch Exception e log warn could fine stat file location return null Element Descriptor stat File null stat File Set Empty stat File stat File Set iterator next else log warn Could find stat file location return null log debug Found stat file stat File String Resource Statistics resource Stats null try resource Stats new Object Mapper read Value stat File open Resource Statistics class catch Json Parse Exception e log warn Unable load Resource Statistics location e print Stack Trace catch Json Mapping Exception e log warn Unable load Resource Statistics location e print Stack Trace catch Exception e log warn Unable load Resource Statistics location e print Stack Trace return resource Stats Implementation Store Meta Data interface Override public void store Statistics Resource Statistics stats String location Job job throws Exception Configuration conf job get Configuration Data Storage storage new Data Storage new Path location Uri Configuration Util Properties conf Element Descriptor stat File Path storage Element location stat File Name stat File Path exists stats null try new Object Mapper write Value stat File Path create stats catch Json Generation Exception e log warn Unable write Resource Statistics location e print Stack Trace catch Json Mapping Exception e log warn Unable write Resource Statistics location e print Stack Trace Override public void store Schema Resource Schema schema String location Job job throws Exception Configuration conf job get Configuration Data Storage storage new Data Storage new Path location Uri Configuration Util Properties conf Element Descriptor schema File Path storage Element location schema File Name schema File Path exists schema null try new Object Mapper write Value schema File Path create schema catch Json Generation Exception e log warn Unable write Resource Statistics location e print Stack Trace catch Json Mapping Exception e log warn Unable write Resource Statistics location e print Stack Trace print Headers Element Descriptor header File Path storage Element location header File Name header File Path exists Output Stream os header File Path create try String names schema field Names String fn int names length fn names null names os write fn get Bytes names length os write field Del else os write record Del finally os close public void set Field Del byte field Del field Del field Del public void set Record Del byte record Del record Del record Del
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Byte Array Output Stream import java io Exception import java util List import java util Map import java util Properties import java math Big Decimal import java math Big Integer import org codehaus jackson Json Encoding import org codehaus jackson Json Factory import org codehaus jackson Json Generator import org apache hadoop fs Path import org apache hadoop io Long Writable import org apache hadoop io Text import org apache hadoop mapreduce Job import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Writer import org apache hadoop mapreduce lib output File Output Format import org apache hadoop mapreduce lib output Text Output Format import org apache Resource Schema import org apache Resource Schema Resource Field Schema import org apache Resource Statistics import org apache Store Metadata import org apache Store Func import org apache Store Resources import org apache data Data Type import org apache data Tuple import org apache data Data Bag import org apache impl util Context import org apache impl util Utils store function tuple stored one line one value Text Output Format read easily using Text Input Format tuples mapped objects bags mapped arrays maps also mapped objects Maps assumed string string schema stored side file deal mapping types schema file share format one use Storage public class Json Storage extends Store Func implements Store Metadata Store Resources protected Record Writer writer null protected Resource Schema schema null private String udfc Signature null private Json Factory json Factory null Default size byte buffer fit tuples private static final int private static final String jsonstorage schema Methods called front end Override public Output Format get Output Format throws Exception use Text Output Format default Hadoop output format text key unused value Text string writable type store data return new Text Output Format Long Writable Text Override public void set Store Location String location Job job throws Exception File Output Format utility method setting output location File Output Format set Output Path job new Path location Override public void set Store Func Context Signature String signature store signature use later udfc Signature signature Override public void check Schema Resource Schema throws Exception wo n really check schema store Context properties object need backend Context udfc Context get Context Properties p udfc get Properties get Class new String udfc Signature p set Property fix Schema String Methods called back end Override public void prepare Write Record Writer writer throws Exception Store record writer reference use time write tuples writer writer Get schema string Context object Context udfc Context get Context Properties p udfc get Properties get Class new String udfc Signature String str Schema p get Property str Schema null throw new Exception Could find schema context Parse schema string stored properties object schema new Resource Schema Utils get Schema String str Schema Build Json factory json Factory new Json Factory Suppress Warnings unchecked public void put Next Tuple throws Exception Build Byte Array Output Stream write Byte Array Output Stream baos new Byte Array Output Stream Build generator Json Generator json json Factory create Json Generator baos Json Encoding Write beginning top level tuple object json write Start Object Resource Field Schema fields schema get Fields int fields length int tuple Length size write col exists tuple null otherwise tuple Length write Field json fields get else write Field json fields null json write End Object json close Hand null key string Hadoop try writer write null new Text baos Byte Array catch Interrupted Exception ie throw new Exception ie Suppress Warnings unchecked private void write Field Json Generator json Resource Field Schema field Object throws Exception field missing value null write null null json write Null Field field get Name return Based field type write switch field get Type case Data Type json write Boolean Field field get Name Boolean return case Data Type json write Number Field field get Name Integer return case Data Type json write Number Field field get Name Long return case Data Type json write Number Field field get Name Float return case Data Type json write Number Field field get Name Double return case Data Type json write String Field field get Name String return case Data Type json write String Field field get Name String return case Data Type json write String Field field get Name String return case Data Type Since Jackson doesnt write Number Field Big Integer manually json write Field Name field get Name json write Number Big Integer return case Data Type json write Number Field field get Name Big Decimal return case Data Type json write Field Name field get Name json write Start Object Map Entry String Object e Map String Object entry Set json write String Field e get Key e get Value null null e get Value String json write End Object return case Data Type json write Field Name field get Name json write Start Object Resource Schema field get Schema null throw new Exception Schemas must fully specified use storage function schema found field field get Name Resource Field Schema fs get Fields int j j fs length j write Field json fs j Tuple get j json write End Object return case Data Type json write Field Name field get Name json write Start Array field get Schema null throw new Exception Schemas must fully specified use storage function schema found field field get Name fs get Fields fs length fs get Type Data Type throw new Exception Found bag without tuple inside Drill next level tuple schema fs get Schema null throw new Exception Schemas must fully specified use storage function schema found field field get Name fs get Fields Tuple Data Bag json write Start Object int j j fs length j write Field json fs j get j json write End Object json write End Array return public void store Statistics Resource Statistics stats String location Job job throws Exception n implement method public void store Schema Resource Schema schema String location Job job throws Exception Store schema side file directory Map Reduce include files starting reading data job Json Metadata metadata Writer new Json Metadata byte record Del n byte field Del metadata Writer set Field Del field Del metadata Writer set Record Del record Del metadata Writer store Schema schema location job public Resource Schema fix Schema Resource Schema Resource Field Schema filed get Fields filed get Type Data Type filed set Type Data Type return Override public List String get Ship Files Class class List new Class Json Factory class return Func Utils get Ship Files class List Override public List String get Cache Files return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java util Hash Map import java util List import java util Map import org apache Exception import org apache backend hadoop executionengine map Reduce Layer plans Op Plan Visitor import org apache backend hadoop executionengine map Reduce Layer plans Oper Plan import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache data Data Type import org apache impl plan Depth First Walker import org apache impl plan Visitor Exception visitor figure type key map plan needed key null create appropriate Nullable Writable object public class Key Type Discovery Visitor extends Op Plan Visitor non Javadoc see org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor visit Local Rearrange org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange param plan Oper Plan visit discover key Type public Key Type Discovery Visitor Oper Plan plan super plan new Depth First Walker Map Reduce Oper Oper Plan plan Override public void visit Op Map Reduce Oper mr throws Visitor Exception mr instanceof Native Map Reduce Oper return mr use Secondary Key mr map Key Type Data Type return boolean found Key Type false Phy Plan Key Type Visitor kvisitor new Phy Plan Key Type Visitor mr map Plan mr kvisitor visit kvisitor found Key Type look key type Local Rearrange previous reduce List Map Reduce Oper preds Plan get Predecessors mr predecessors probably simple load store script way figure key type case probably means n need figure preds null Map Byte Integer seen new Hash Map Byte Integer Map Reduce Oper pred preds Phy Plan Key Type Visitor visitor new Phy Plan Key Type Visitor pred reduce Plan mr visitor visit found Key Type visitor found Key Type byte type mr map Key Type seen put type seen size throw exception since get key type predecessors int error Code String message Internal Error Found multiple data types map key throw new Visitor Exception message error Code Exception able find key map reduce phase map would need send valid key object issue key null error reduce phase empty map job need key object Map collect null collect found Key Type mr reduce Plan Empty throw exception since able determine key type int error Code String message Internal Error Unable determine data type map key throw new Visitor Exception message error Code Exception static class Phy Plan Key Type Visitor extends Phy Plan Visitor private Map Reduce Oper mro private boolean found Key Type false public Phy Plan Key Type Visitor Physical Plan plan Map Reduce Oper mro super plan new Depth First Walker Physical Operator Physical Plan plan mro mro Override public void visit Local Rearrange Local Rearrange lr throws Visitor Exception mro map Key Type lr get Key Type found Key Type true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine import java io Exception import java io Print Stream import java util Array List import java util Arrays import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import java util regex Matcher import java util regex Pattern import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop mapred Status import org apache hadoop mapreduce Task Report import org apache hadoop mapred jobcontrol Job import org apache hadoop mapred jobcontrol Job Control import org apache Func Spec import org apache Exception import org apache backend Backend Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache impl Context import org apache impl io File Spec import org apache impl plan Plan Exception import org apache impl plan Visitor Exception import org apache impl util Log Utils import org apache impl util Utils import org apache tools pigstats Stats import com google common collect Lists import com google common collect Maps Provides core processing implementation backend Execution Engine chosen decides delegate work class Also contains set utility methods including ones centered around Hadoop public abstract class Launcher private static final Log log Log Factory get Log Launcher class private static final String Memory Error private boolean Exception false private boolean Memory false private String new Line n Used track exception thrown job control run separate thread protected String job Control Exception Stack Trace null protected Exception job Control Exception null protected long total Hadoop Time Spent protected Map File Spec Exception failure Map protected Job Control jc null protected class Hanging Job Killer extends Thread public Hanging Job Killer Override public void run try kill catch Exception e log warn Error killing Execution Engine e protected Launcher handle windows portion r System get Property os name Upper Case starts new Line r n reset Resets state launch public void reset failure Map Maps new Hash Map total Hadoop Time Spent Method launch hadoop either cluster job tracker local job runner difference two job client Depending context job client initialize one two Launchers frameworks overide methods Given input Physical Plan compiles get Map Reduce Plan Map Reduce plan multiple Map Reduce operators one run map reduce job dependency information stored plan compiles Oper Plan Job Control object Map Reduce operator converted Job added Job Control object Job also set dependent Jobs created using Oper Plan Job Control object obtained Job Control Compiler new thread spawned submits jobs respecting dependency information parent thread monitors submitted jobs progress complete stops Job Control thread param php param grp Name param pc throws Exception public abstract Stats launch Physical Plan php String grp Name Context pc throws Exception Explain job executed underlying infrastructure param pp Physical Plan explain param pc Context use configuration param ps Print Stream write output param format Format write param verbose Amount information print throws Visitor Exception throws Exception public abstract void explain Physical Plan pp Context pc Print Stream ps String format boolean verbose throws Plan Exception Visitor Exception Exception public abstract void kill throws Backend Exception public abstract void kill Job String job Configuration conf throws Backend Exception protected boolean Complete double prog return int Math ceil prog protected long compute Time Spent Iterator Task Report task Reports long time Spent task Reports Next Task Report r task Reports next time Spent r get Finish Time r get Start Time return time Spent protected void get Error Messages Iterator Task Report reports String type boolean err Dbg Context Context throws Exception reports Next Task Report report reports next String msgs report get Diagnostics Array List Exception exceptions new Array List Exception String exception Create Fail Msg null boolean job Failed false msgs length report get Current Status Status job Failed true Set String error Message Set new Hash Set String int j j msgs length j error Message Set contains msgs j error Message Set add msgs j err Dbg err Dbg used failed jobs keep track unique exceptions try Log Utils write Log Backend error message msgs j Context get Properties get Property logfile log Exception e get Exception String msgs j exceptions add e catch Exception e exception Create Fail Msg msgs j else log debug Error message task type report get Task msgs j valid exception could created report job Failed exceptions size exception Create Fail Msg null int err Code String msg Unable recreate exception backed error exception Create Fail Msg throw new Exec Exception msg err Code Exception failed job check one exception one exception implies possibly different kinds failures log different failures throw exception corresponding first failure job Failed exceptions size int j j exceptions size j String header Message Error message task type report get Task Log Utils write Log exceptions get j Context get Properties get Property logfile log false header Message false false throw exceptions get else exceptions size throw exceptions get else int err Code String msg Internal error Expected throw exception backend find exception throw throw new Exec Exception msg err Code Exception Compute progress current job submitted Job Control object jc Job Client job Client param jc Job Control object submitted param job Client Job Client submitted return progress precentage double format throws Exception protected double calculate Progress Job Control jc throws Exception double prog prog jc get Successful Jobs size List Job runn Jobs jc get Running Jobs Job j runn Jobs prog progress Running Job j return prog Returns progress Job j part submitted Job Control object progress Job scaled num jobs present Job Control param j Job progress required return Returns percentage progress Job throws Exception private static double progress Running Job Job j throws Exception org apache hadoop mapreduce Job mr Job j get Job try return mr Job map Progress mr Job reduce Progress catch Exception ir return public long get Total Hadoop Time Spent return total Hadoop Time Spent exception handler class handle exceptions thrown job controller thread local class mechanism catch unhandled thread exceptions Unhandled exceptions threads handled handler registered explicitly default handler null public class Job Control Thread Exception Handler implements Thread Uncaught Exception Handler Override public void uncaught Exception Thread thread Throwable throwable set Job Exception throwable protected void set Job Exception Throwable throwable job Control Exception Stack Trace Utils get Stack Strace Str throwable try job Control Exception get Exception String job Control Exception Stack Trace catch Exception e String err Msg Could resolve error occurred launching job job Control Exception Stack Trace job Control Exception new Runtime Exception err Msg throwable param stack Trace string representation link Throwable print Stack Trace print Stack Trace Handles internal Exception subclasses override link Throwable String String method return exception object whose string representation print Stack Trace input stack Trace throws Exception public Exception get Exception String String stack Trace throws Exception String lines stack Trace split new Line Throwable get Exception Strings lines Exception int err Code String msg execution encountered Hadoop error Exec Exception ee new Exec Exception msg err Code Exception ee set Stack Trace get Stack Trace return ee else Exception false Memory Memory false int err Code String msg memory Exec Exception ee new Exec Exception msg err Code Exception ee set Stack Trace get Stack Trace return ee return Exception param stack Trace Lines array strings represent link Throwable print Stack Trace print Stack Trace output split newline return exception object whose string representation print Stack Trace input stack Trace throws Exception private Throwable get Exception Strings String stack Trace Lines int starting Line Num throws Exception parse array string throw appropriate exception first line starting Line Num extract exception name extract message fourth create appropriate exception return example stack trace org apache backend executionengine Exec Exception Received bytearray determine convert bytearray int org apache backend hadoop executionengine physical Layer expression Operators Cast get Next Cast java org apache backend hadoop executionengine physical Layer expression Operators Less Expr get Next Less Expr java org apache backend hadoop executionengine physical Layer relational Operators Filter get Next Filter java org apache backend hadoop executionengine map Reduce Layer Map Base run Pipeline Map Base java org apache backend hadoop executionengine map Reduce Layer Map Base map Map Base java org apache backend hadoop executionengine map Reduce Layer Map Map map Map java org apache hadoop mapred Map Runner run Map Runner java org apache hadoop mapred Map Task run Map Task java org apache hadoop mapred Task Tracker Child main Task Tracker java stack Trace Lines length starting Line Num stack Trace Lines length regex matching exception class name note use matching nested classes String exception Name Delimiter w w w Pattern exception Name Pattern Pattern compile exception Name Delimiter first line extract exception name exception message Matcher exception Name Matcher exception Name Pattern matcher stack Trace Lines starting Line Num String exception Name null String exception Message null exception Name Matcher find exception Name exception Name Matcher group note substring end regex matcher ends one position beyond match case end colon exception message preceding space colon exception Name contains Memory true stack Trace Lines starting Line Num length exception Name Matcher end exception Message stack Trace Lines starting Line Num substring exception Name Matcher end starting Line Num exception Name null exception Name null Array List Stack Trace Element stack Trace Elements Lists new Array List Create stack trace elements remaining lines String stack Element Regex w w w Pattern stack Element Pattern Pattern compile stack Element Regex String Exception Regex org apache Pattern Exception Pattern Pattern compile Exception Regex String Element Regex Pattern Element Pattern Pattern compile Element Regex int line Num starting Line Num line Num stack Trace Lines length line Num Matcher stack Element Matcher stack Element Pattern matcher stack Trace Lines line Num stack Element Matcher find Stack Trace Element ste get Stack Trace Element stack Trace Lines line Num stack Trace Elements add ste String class Name ste get Class Name Matcher Exception Matcher Exception Pattern matcher class Name Exception Matcher find Exception true else Matcher Element Matcher Element Pattern matcher stack Trace Lines line Num Element Matcher find line Num break starting Line Num line Num create appropriate exception setup stack trace message Object object Context instantiate Func Spec exception Name object instanceof Exception extract error code message regex matching custom format String err Message Regex Pattern err Message Pattern Pattern compile err Message Regex Matcher err Message Matcher err Message Pattern matcher exception Message err Message Matcher find String err Message Stub err Message Matcher group extract actual exception message sans note matcher ends space following colon exception message appears space hence end exception Message exception Message substring err Message Matcher end regex match error code wich string numerals String err Code Regex Pattern err Code Pattern Pattern compile err Code Regex Matcher err Code Matcher err Code Pattern matcher err Message Stub String code null err Code Matcher find code err Code Matcher group could receive number format exception propagated stack int err Code code null err Code Integer parse Int code else err Code create exception message set error code error source Func Spec func Spec new Func Spec exception Name exception Message object Context instantiate Func Spec func Spec Exception object set Error Code err Code Exception object set Error Source Exception determine Error Source err Code else else err Message Matcher find find error code means Exception subclass returning error code highly unlikely never Func Spec func Spec new Func Spec exception Name exception Message object Context instantiate Func Spec func Spec Exception object set Error Code generic error code Exception object set Error Source Exception else else object instanceof Exception Exception create exception message object Context instantiate Func Spec new Func Spec exception Name exception Message Stack Trace Element ste Arr new Stack Trace Element stack Trace Elements size Throwable object set Stack Trace stack Trace Elements Array ste Arr starting Line Num stack Trace Lines length Throwable e get Exception Strings stack Trace Lines starting Line Num Throwable object init Cause e return Throwable object else else exception Name null int err Code String msg find exception name create exception string Arrays String stack Trace Lines throw new Exec Exception msg err Code Exception else else lines length int err Code String msg create exception empty string throw new Exec Exception msg err Code Exception param line string representation stack trace returned link Throwable print Stack Trace print Stack Trace return Stack Trace Element object representing stack trace throws Exception public Stack Trace Element get Stack Trace Element String line throws Exception format line something like org apache backend hadoop executionengine map Reduce Layer Map Map map Map java note white space much importance noted posterity String items regex matching fully qualified method Name note use matching nested classes use constructors String qualified Method Name Regex w w w Pattern qualified Method Name Pattern Pattern compile qualified Method Name Regex Matcher content Matcher qualified Method Name Pattern matcher line org apache backend hadoop executionengine map Reduce Layer Map Map map Map java String content null content Matcher find content line substring content Matcher start else int err Code String msg find fully qualified method name reconstruct stack trace line throw new Exec Exception msg err Code Exception Matcher qualified Method Name Matcher qualified Method Name Pattern matcher content org apache backend hadoop executionengine map Reduce Layer Map Map map String qualified Method Name null Map java String file Details null qualified Method Name Matcher find qualified Method Name qualified Method Name Matcher group file Details content substring qualified Method Name Matcher end else int err Code String msg find fully qualified method name reconstruct stack trace line throw new Exec Exception msg err Code Exception fully qualified method name extract declaring class method name items qualified Method Name split initialize declaring Class org cases String declaring Class items last member always method name String method Name items items length String Builder sb new String Builder concatenate names adding dot members till penultimate member int items length sb append sb append items declaring Class sb String file details extract file name line number Map java file Details file Details substring file Details length items file Details split Map java String file Name null int line Number items length file Name items items length line Number Integer parse Int items return new Stack Trace Element declaring Class method Name file Name line Number public void destroy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location public class Less Equal Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Less Equal Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super Less Equal plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Less Equal Expression Less Equal Expression eo Less Equal Expression return eo get Lhs Equal get Lhs eo get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Less Equal Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import org apache commons logging Log import org apache commons logging Log Factory import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception public class Less Expr extends Binary Comparison Operator private static final long serial Version transient private final Log log Log Factory get Log get Class public Less Expr Operator Key k k public Less Expr Operator Key k int rp super k rp result Type Data Type Override public String name return Less Data Type find Type Name result Type Key String Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Less Override public Result get Next Boolean throws Exec Exception Result left right switch operand Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type Result r accum Child null operand Type r null return r left lhs get Next operand Type right rhs get Next operand Type return Comparison left right default int err Code String msg get Class get Simple Name know handle type Data Type find Type Name operand Type throw new Exec Exception msg err Code Exception Suppress Warnings unchecked private Result Comparison Result left Result right left return Status Status return left right return Status Status return right either operand null result null left result null right result null left result null left return Status Status return left assert left result instanceof Comparable assert right result instanceof Comparable Comparable left result compare right result left result Boolean else left result Boolean illustrator Markup null left result Boolean left result return left Override public Less Expr clone throws Clone Supported Exception Less Expr clone new Less Expr new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location public class Less Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Less Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super Less plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Less Expression Less Expression eo Less Expression return eo get Lhs Equal get Lhs eo get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Less Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Exception import java util Array List import java util List import org apache Func Spec import org apache Exception import org apache backend hadoop executionengine map Reduce Layer plans Op Plan Visitor import org apache backend hadoop executionengine map Reduce Layer plans Oper Plan import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer relational Operators Limit import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache impl Context import org apache impl io File Localizer import org apache impl io File Spec import org apache impl plan Depth First Walker import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Plan Exception import org apache impl plan Visitor Exception import org apache impl util Utils public class Limit Adjuster extends Op Plan Visitor Array List Map Reduce Oper ops Adjust new Array List Map Reduce Oper Context Context Node Id Generator nig private String scope public Limit Adjuster Oper Plan plan Context Context super plan new Depth First Walker Map Reduce Oper Oper Plan plan Context Context nig Node Id Generator get Generator List Map Reduce Oper roots plan get Roots scope roots get get Operator Key get Scope Override public void visit Op Map Reduce Oper mr throws Visitor Exception Look map reduce operators contains limit operator add one additional map reduce operator reducer original plan new job skipped runtime discover parent single reducer mr requested Parallelism check happen runtime since reducer estimation happens mr limit mr limit Plan null ops Adjust add mr public void adjust throws Exception Plan Exception Map Reduce Oper mr ops Adjust mr reduce Plan Empty continue List Physical Operator mp Leaves mr reduce Plan get Leaves mp Leaves size int err Code String msg Expected reduce single leaf Found mp Leaves size leaves throw new Compiler Exception msg err Code Exception Physical Operator mp Leaf mp Leaves get Context Illustrator mp Leaf instanceof Store int err Code String msg Expected leaf reduce plan always Store Found mp Leaf get Class get Simple Name throw new Compiler Exception msg err Code Exception File Spec old Spec Store mp Leaf get File boolean old Tmp Store Store mp Leaf Tmp Store File Spec f Spec new File Spec File Localizer get Temporary Path Context String new Func Spec Utils get Tmp File Compressor Name Context Store store Op Store mp Leaf store Op set File f Spec store Op set Tmp Store true mr set Reduce Done true Map Reduce Oper limit Adjust Op new Map Reduce Oper new Operator Key scope nig get Next Node Id scope Load ld new Load new Operator Key scope nig get Next Node Id scope ld set Pc Context ld set File f Spec ld set Tmp Load true limit Adjust Op map Plan add ld mr Global Sort connect Map Reduce Limited Sort limit Adjust Op mr else Util simple Connect Map Reduce limit Adjust Op scope nig Need split original reduce plan two mapreduce job st root Package Limit nd Limit leaves Store duplicate Limit reason need two map reduce job otherwise end records number reducer limit constant need one extra mapreduce job reducer n want move operator Limit first mapreduce job Foreach shift key type second mapreduce job see Foreach flatten may generating records get cut Limit see split Reducer Limit limit Adjust Op mr mr Global Sort limit Adjust Op set Limit Sort true limit Adjust Op set Sort Order mr get Sort Order Store st new Store new Operator Key scope nig get Next Node Id scope st set File old Spec st set Tmp Store old Tmp Store st set Schema Store mp Leaf get Schema st set Signature Store mp Leaf get Signature st copy Alias mp Leaf limit Adjust Op reduce Plan add Leaf st limit Adjust Op requested Parallelism limit Adjust Op set Limit true List Map Reduce Oper successor List Plan get Successors mr Map Reduce Oper successors null Save snapshot successors since modify Plan use list directly problematic successor List null successor List size successors new Map Reduce Oper successor List size int Map Reduce Oper op successor List successors op Process Fs String udf mr Fs limit Adjust Op Fs contains udf limit Adjust Op Fs add udf Plan add limit Adjust Op Plan connect mr limit Adjust Op successors null int successors length Map Reduce Oper next Mr successors next Mr null Plan disconnect mr next Mr next Mr null Plan connect limit Adjust Op next Mr Move operators Limit Store reducer plan first Op second Op private void split Reducer Limit Map Reduce Oper second Op Map Reduce Oper first Op throws Plan Exception Visitor Exception Physical Operator op first Op reduce Plan get Roots get assert op instanceof Package true List Physical Operator succs first Op reduce Plan get Successors op succs null break op succs get op instanceof Limit find operator Limit op first Op reduce Plan get Successors op get break Limit p Limit new Limit new Operator Key scope nig get Next Node Id scope p Limit set Limit first Op limit p Limit set Limit Plan first Op limit Plan second Op reduce Plan add Leaf p Limit true op instanceof Store break Physical Operator op Move op List Physical Operator succs first Op reduce Plan get Successors op op succs get first Op reduce Plan remove Reconnect op Move second Op reduce Plan add Leaf op Move private void connect Map Reduce Limited Sort Map Reduce Oper mro Map Reduce Oper sort Op throws Plan Exception Visitor Exception Local Rearrange slr Local Rearrange sort Op map Plan get Leaves get Local Rearrange lr null try lr slr clone catch Clone Supported Exception e int err Code String msg Error cloning Local Rearrange limit sort throw new Compiler Exception msg err Code Exception e mro map Plan add Leaf lr Package spkg Package sort Op reduce Plan get Roots get Package pkg null try pkg spkg clone catch Exception e int err Code String msg Error cloning Package Lite limit sort throw new Compiler Exception msg err Code Exception e mro reduce Plan add pkg mro reduce Plan add Leaf Util get Plain scope nig
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical visitor import java io Exception import java util Array List import java util Hash Map import java util List import java util Map import java util Set import org apache Eval Func import org apache Func Spec import org apache Load Caster import org apache Load Func import org apache Exception import org apache data Data Type import org apache impl Context import org apache Stream import org apache impl builtin Identity Column import org apache impl logical Layer Frontend Exception import org apache impl plan Visitor Exception import org apache impl streaming Streaming Command import org apache impl streaming Streaming Command Handle Spec import org apache impl util Multi Map import org apache newplan Dependency Order Walker import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Walker import org apache newplan Reverse Dependency Order Walker import org apache newplan logical expression Bin Cond Expression import org apache newplan logical expression Cast Expression import org apache newplan logical expression Constant Expression import org apache newplan logical expression Dereference Expression import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Logical Expression Visitor import org apache newplan logical expression Map Lookup Expression import org apache newplan logical expression Project Expression import org apache newplan logical expression Scalar Expression import org apache newplan logical expression User Func Expression import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Split Output import org apache newplan logical relational Store import org apache newplan logical relational Stream import org apache newplan logical relational Union import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Nodes Visitor import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema Create mapping uid Load Func Spec Logical Expression associated known hold unmodified element data returned load function information used find Load Caster used cast bytearrays types public class Lineage Find Rel Visitor extends Logical Relational Nodes Visitor Map Long Func Spec uid Load Func Map new Hash Map Long Func Spec Logical Relational Operator associated single load func spec mapping stored Map Logical Relational Operator Func Spec rel Input Func Map new Hash Map Logical Relational Operator Func Spec Map Func Spec Class func caster Map new Hash Map Func Spec Class public Lineage Find Rel Visitor Operator Plan plan throws Frontend Exception super plan new Dependency Order Walker plan public Map Long Func Spec get Uid Load Func Map return uid Load Func Map Override public void visit Load load throws Frontend Exception Logical Schema schema load get Schema set Load Func Uids schema load get File Spec get Func Spec rel Input Func Map put load load get File Spec get Func Spec Override public void visit Stream stream throws Frontend Exception map Pred Load Func stream Streaming Command command Stream stream get Streaming Command Handle Spec stream Output Spec command get Output Spec Func Spec stream Loader Spec new Func Spec stream Output Spec get Spec set Load Func Uids stream get Schema stream Loader Spec rel Input Func Map put stream stream Loader Spec Override public void visit Inner Load inner Load throws Frontend Exception foreach inner Load get Logical Relational Operator pred Logical Relational Operator foreach get Plan get Predecessors foreach get Logical Schema pred Schema pred get Schema schema lineage tracked using uid input schema inner Load get Schema null inner Load get Schema size inner Load get Schema get Field type Data Type uid Load Func Map get inner Load get Schema get Field uid null pred Schema null long inp Uid pred Schema get Field inner Load get Projection get Col Num uid uid Load Func Map get inp Uid null add Uid Load Func Map inner Load get Schema get Field uid uid Load Func Map get inp Uid return associated load func could found using uid use single load func associated input relation get Associated Load Func pred null map Rel Pred Load Func inner Load pred map uids schema func Spec param schema param func Spec throws Visitor Exception private void set Load Func Uids Logical Schema schema Func Spec func Spec throws Visitor Exception schema null return Logical Field Schema fs schema get Fields add Uid Load Func Map Long fs uid func Spec set Load Func Uids fs schema func Spec Override public void visit Filter filter throws Frontend Exception map Pred Load Func filter visit Expression filter get Filter Plan predecessors rel Op associated load func map Op param rel Op throws Frontend Exception private void map Pred Load Func Logical Relational Operator rel Op throws Frontend Exception Operator Plan lp rel Op get Plan List Operator preds lp get Predecessors rel Op lp get Predecessors rel Op null lp get Predecessors rel Op size predecessors nothing return Func Spec load Func Spec get Associated Load Func Logical Relational Operator preds get load Func Spec null return ensure predecessors mapped load func spec int preds size Identical Casters load Func Spec get Associated Load Func Logical Relational Operator preds get return rel Input Func Map put rel Op load Func Spec Find single load func spec associated relation relation schema uids schema associated load func spec schema check existing mapping param rel Op return throws Frontend Exception private Func Spec get Associated Load Func Logical Relational Operator rel Op throws Frontend Exception Logical Schema schema rel Op get Schema Func Spec func Spec null schema null schema size return null func Spec uid Load Func Map get schema get Field uid func Spec null int schema size Logical Field Schema fs schema get Field Identical Casters func Spec uid Load Func Map get fs uid uid associated func spec single func spec represents fields func Spec null break func Spec null rel Op contains byte field could come n assume share Load Caster predecessor rel Op instanceof Finder udf Finder new Finder rel Op get Inner Plan udf Finder visit udf Finder get List size return null func Spec rel Input Func Map get rel Op return func Spec private void map Rel Pred Load Func Logical Relational Operator rel Op Operator pred rel Input Func Map get pred null rel Input Func Map put rel Op rel Input Func Map get pred private void visit Expression Logical Expression Plan exp Plan throws Frontend Exception Lineage Find Exp Visitor find Lineage Exp new Lineage Find Exp Visitor exp Plan uid Load Func Map find Lineage Exp visit Override public void visit Cogroup group throws Frontend Exception map Pred Load Func group List Operator inputs group get Inputs Logical Plan plan list field schemas group plans List Logical Field Schema group Plan Schemas new Array List Logical Field Schema Multi Map Integer Logical Expression Plan plans group get Expression Plans Logical Expression Plan exp Plan plans values visit Expression exp Plan exp Plan get Sources size throw new Assertion Error Group plans one output group Plan Schemas add Logical Expression exp Plan get Sources get get Field Schema Logical Schema sch group get Schema group plans associated load function associate load fucntion group column schema get Associated Load Func group null add Uid Load Func Map sch get Field uid rel Input Func Map get group sch get Field schema null set Load Func Uids sch get Field schema rel Input Func Map get group else map Match Load Func Uid sch get Field group Plan Schemas set load func spec bags schema helps input schemas set group schema group column followed bags corresponding input sch size inputs size throw new Assertion Error cogroup schema size number inputs int sch size long uid sch get Field uid Logical Relational Operator input Logical Relational Operator inputs get get Associated Load Func input null add Uid Load Func Map uid rel Input Func Map get input Override public void visit Join join throws Frontend Exception map Pred Load Func join Multi Map Integer Logical Expression Plan plans join get Expression Plans Logical Expression Plan exp Plan plans values visit Expression exp Plan Override public void visit fe throws Frontend Exception map Pred Load Func fe Logical Plan inner Plan fe get Inner Plan Plan Walker new Walker current Walker spawn Child Walker inner Plan push Walker new Walker current Walker walk pop Walker Override public void visit Generate gen throws Frontend Exception map Pred Load Func gen List Logical Expression Plan exp Plans gen get Output Plans Logical Expression Plan exp Plan exp Plans visit Expression exp Plan associate flatten output load func associated input expression flatten boolean flattens gen get Flatten Flags int flattens length flattens true get output schema corresponding exp plan gen get Schema gen get Output Plan Schemas null gen get Output Plan Schemas size return Logical Schema sch gen get Output Plan Schemas get sch null continue get output exp ith plan Logical Expression exp Logical Expression gen get Output Plans get get Sources get get funcspec associate uid fields schema Func Spec func Spec uid Load Func Map get exp get Field Schema uid Logical Field Schema fs sch get Fields add Uid Load Func Map fs uid func Spec Override public void visit Sort sort throws Frontend Exception map Pred Load Func sort List Logical Expression Plan exp Plans sort get Sort Col Plans Logical Expression Plan exp Plan exp Plans visit Expression exp Plan Override public void visit Rank rank throws Frontend Exception map Pred Load Func rank List Logical Expression Plan exp Plans rank get Rank Col Plans Logical Expression Plan exp Plan exp Plans visit Expression exp Plan Override public void visit Distinct rel Op throws Frontend Exception map Pred Load Func rel Op Override public void visit Limit lo Limit throws Frontend Exception map Pred Load Func lo Limit lo Limit get Limit Plan null visit Expression lo Limit get Limit Plan Override public void visit Split rel Op throws Frontend Exception map Pred Load Func rel Op Override public void visit Store rel Op throws Frontend Exception map Pred Load Func rel Op Override public void visit Cross rel Op throws Frontend Exception map Pred Load Func rel Op Override public void visit Union rel Op throws Frontend Exception map Pred Load Func rel Op Since uid changes Union add mappings new uids funcspec Logical Schema schema rel Op get Schema schema null output field checking fields union ed bundled together set funcspec come caster j j Checking caster j j j may come different casters Logical Field Schema logical Field Schema schema get Fields Set Long inputs rel Op get Input Uids logical Field Schema uid inputs size uid changed funcspec already set skipping continue Func Spec prev Load Func Spec null cur Load Func Spec null boolean Loader true Long input Uid inputs cur Load Func Spec uid Load Func Map get input Uid prev Load Func Spec null Identical Casters prev Load Func Spec cur Load Func Spec Loader false break prev Load Func Spec cur Load Func Spec Loader add Uid Load Func Map logical Field Schema uid cur Load Func Spec Override public void visit Split Output split throws Frontend Exception map Pred Load Func split visit Expression split get Filter Plan uid changes across input output split visitor uids fields output mapped ones input based position uid Load Func Map updated output schema uid load func mapped corresponding uid inputschema Logical Schema input Sch Logical Relational Operator split get Plan get Predecessors split get get Schema Logical Schema Schema split get Schema input Sch null Schema null return input Sch null Schema null String msg Bug split one input output schema null split throw new Visitor Exception split msg Exception input Sch size Schema size String msg Bug input output schema size split differ split throw new Visitor Exception split msg Exception int input Sch size Logical Field Schema Field input Sch get Field Logical Field Schema Field Schema get Field uid Load Func Map get Field uid null add Uid Load Func Map Field uid uid Load Func Map get Field uid Add given uid load Func Spec mapping param uid param load Func Spec throws Visitor Exception private void add Uid Load Func Map long uid Func Spec load Func Spec throws Visitor Exception load Func Spec null return ensure uid always matches load func Func Spec cur Func Spec uid Load Func Map get uid cur Func Spec null uid Load Func Map put uid load Func Spec else Identical Casters cur Func Spec load Func Spec String msg Bug uid mapped two different load functions cur Func Spec load Func Spec throw new Visitor Exception msg Exception uid input field schemas inner schemas map load function map new uid bincond also load function uid Load Func Map param param input Field Schemas throws Visitor Exception void map Match Load Func Uid Logical Field Schema List Logical Field Schema input Field Schemas throws Visitor Exception input Field Schemas size return schema input null skip output schema Logical Field Schema fs input Field Schemas fs null return non null load func associated fieldschemas asssociate uid Logical Field Schema inp input Field Schemas get Func Spec func Spec uid Load Func Map get inp uid boolean Inner Schema Match false func Spec null boolean Match true Inner Schema Match true Logical Field Schema fs input Field Schemas check func spec match Identical Casters func Spec uid Load Func Map get fs uid Match false check inner schema match use later schema null schema Equal fs schema Inner Schema Match false Match add Uid Load Func Map uid func Spec recursively call function corresponding files inner schemas Inner Schema Match List Logical Field Schema Fields schema get Fields int Fields size List Logical Field Schema Fs List new Array List Logical Field Schema Logical Field Schema fs input Field Schemas Fs List add fs schema get Field map Match Load Func Uid Fields get Fs List input dereference map lookup associated load function load function associated dereference map lookup class Lineage Find Exp Visitor extends Logical Expression Visitor private Map Long Func Spec uid Load Func Map public Lineage Find Exp Visitor Logical Expression Plan plan Map Long Func Spec uid Load Func Map throws Frontend Exception super plan new Reverse Dependency Order Walker plan uid Load Func Map uid Load Func Map Override public void visit Project Expression proj throws Frontend Exception proj uid input input schema uid associated func spec input relation null schema inner load use load func associated relation Logical Relational Operator input Rel proj find Referent proj get Field Schema null return long uid proj get Field Schema uid uid Load Func Map get uid null input Rel get Schema null input Rel instanceof Inner Load Func Spec func Spec rel Input Func Map get input Rel func Spec null add Uid Load Func Map uid func Spec Override public void visit Dereference Expression deref throws Frontend Exception update Uid Map deref deref get Referred Expression Override public void visit Map Lookup Expression map Lookup throws Frontend Exception update Uid Map map Lookup map Lookup get Map private void update Uid Map Logical Expression exp Logical Expression inp throws Frontend Exception find input uid corresponding load Func Spec long inp Uid inp get Field Schema uid Func Spec inp Load Func Spec uid Load Func Map get inp Uid add Uid Load Func Map exp get Field Schema uid inp Load Func Spec Override public void visit Bin Cond Expression bin Cond throws Frontend Exception either side null constant safely associate bincond load func spec side Logical Expression lhs bin Cond get Lhs Logical Expression rhs bin Cond get Rhs get Constant Cast lhs null Func Spec func Spec uid Load Func Map get rhs get Field Schema uid uid Load Func Map put bin Cond get Field Schema uid func Spec else get Constant Cast rhs null Func Spec func Spec uid Load Func Map get lhs get Field Schema uid uid Load Func Map put bin Cond get Field Schema uid func Spec else List Logical Field Schema Field Schemas new Array List Logical Field Schema Field Schemas add lhs get Field Schema Field Schemas add rhs get Field Schema map Match Load Func Uid bin Cond get Field Schema Field Schemas Override public void visit Scalar Expression scalar Exp throws Frontend Exception track lineage input load function Logical Relational Operator input Rel Logical Relational Operator scalar Exp get Attached Logical Operator Logical Plan rel Plan Logical Plan input Rel get Plan List Operator soft Preds rel Plan get Soft Link Predecessors input Rel st argument column number input nd arg input file name Integer input Col Num Integer Constant Expression scalar Exp get Arguments get get Value String input File String Constant Expression scalar Exp get Arguments get get Value long output Uid scalar Exp get Field Schema uid boolean found Input false variable sanity check num input relations find input relation use get lineage Operator soft Pred soft Preds Store input Store Store soft Pred input Store get File Spec get File Name equals input File found Input true throw new Frontend Exception one input found scalar expression Exception found Input true found store corresponding scalar expression Logical Schema sch input Store get Schema sch null see load function associated store Func Spec func Spec rel Input Func Map get input Store add Uid Load Func Map output Uid func Spec else find input uid corresponding load func Logical Field Schema fs sch get Field input Col Num Func Spec func Spec uid Load Func Map get fs uid add Uid Load Func Map output Uid func Spec found Input false throw new Frontend Exception input found scalar expression Exception Override public void visit User Func Expression op throws Frontend Exception op get Field Schema null return Func Spec func Spec null Class loader instantiate Caster op get Func Spec List Logical Expression arguments op get Arguments loader null eval Func get Load Caster returns simply use func Spec op get Func Spec else arguments size Func Spec base Func Spec null Logical Field Schema fs arguments get get Field Schema fs null base Func Spec uid Load Func Map get fs uid base Func Spec null func Spec base Func Spec int arguments size fs arguments get get Field Schema fs null Identical Casters base Func Spec uid Load Func Map get fs uid func Spec null break func Spec null add Uid Load Func Map op get Field Schema uid func Spec case schema nested set func Spec set Load Func Uids op get Field Schema schema func Spec null constant casts return param rel return throws Frontend Exception private Object get Constant Cast Logical Expression rel throws Frontend Exception rel instanceof Cast Expression Cast Expression rel get Expression instanceof Cast Expression return get Constant Cast Cast Expression rel get Expression else Cast Expression rel get Expression instanceof Constant Expression Constant Expression const Exp Constant Expression Cast Expression rel get Expression const Exp get Value null return const Exp else return null return null Copied Cast instantiate Func private Class instantiate Caster Func Spec func Spec throws Visitor Exception func Spec null return null func caster Map contains Key func Spec return func caster Map get func Spec Load Caster caster null Object obj Context instantiate Func Spec func Spec try obj instanceof Load Func caster Load Func obj get Load Caster else obj instanceof Stream caster Stream obj get Load Caster else obj instanceof Eval Func caster Eval Func obj get Load Caster else throw new Visitor Exception Invalid class type func Spec get Class Name Exception catch Exception e throw new Visitor Exception Invalid class type func Spec get Class Name e Class retval caster null null caster get Class func caster Map put func Spec retval return retval private boolean Identical Casters Func Spec f Func Spec f throws Visitor Exception f null f null return false f equals f return true Class caster instantiate Caster f Class caster instantiate Caster f caster null caster null return false class name Load Caster Load Caster default constructor two Load Casters considered equal caster get Canonical Name equals caster get Canonical Name caster get Constructors length caster get Constructors get Generic Parameter Types length caster get Constructors length caster get Constructors get Generic Parameter Types length return true return false
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import java io Exception import java net import java util Abstract Collection import java util Array List import java util Iterator import java util List import org apache hadoop fs Path import org apache hadoop mapreduce Counter import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Job import org apache hadoop mapreduce Record Reader import org apache classification Interface Audience import org apache classification Interface Stability import org apache Load Push Required Field List import org apache backend hadoop executionengine map Reduce Layer Hadoop Logger import org apache backend hadoop executionengine map Reduce Layer Split import org apache builtin Utf Storage Converter import org apache data Tuple import org apache impl logical Layer Frontend Exception import org apache impl util Context import org apache tools pigstats Status Reporter Load Func loads data read file source Load Func tightly coupled Hadoop link org apache hadoop mapreduce Input Format Load Func sit atop Input Format translate keys values Hadoop tuples p Load Func contains basic features needed majority load functions advanced functionality separate interfaces load function implement See link Load Caster link Load Metadata link Load Push link Ordered Load Func link Collectable Load Func link Indexable Load Func Interface Audience Public Interface Stability Stable public abstract class Load Func method called runtime front end convert input location absolute path location relative load Func implementation free choose converts relative location absolute location since may depend location string represent hdfs path data source param location location provided load statement script param cur Dir current working direction based cd statements script load statement cd statements script would home directory pre user username pre return absolute location based arguments passed throws Exception conversion possible public String relative Absolute Path String location Path cur Dir throws Exception return get Absolute Path location cur Dir Communicate loader location object loaded location string passed Load Func return value link Load Func relative Absolute Path String Path Implementations use method communicate location information underlying Input Format Job object method called frontend backend multiple times Implementations bear mind method called multiple times ensure inconsistent side effects due multiple calls param location Location returned link Load Func relative Absolute Path String Path param job link Job object store retrieve earlier stored information link Context throws Exception location valid public abstract void set Location String location Job job throws Exception called planning front end instance Input Format rather class name load function may need instantiate Input Format order control constructed return Input Format associated loader throws Exception exception Input Format construction Suppress Warnings unchecked public abstract Input Format get Input Format throws Exception called front end back end execution return link Load Caster associated loader Returning null indicates casts byte array supported loader construction throws Exception exception Load Caster public Load Caster get Load Caster throws Exception return new Utf Storage Converter Initializes Load Func reading data called execution calls get Next Record Reader needs passed instantiated particular Input Split param reader link Record Reader used instance Load Func param split input link Split process throws Exception exception initialization Suppress Warnings unchecked public abstract void prepare Read Record Reader reader Split split throws Exception Retrieves next tuple processed Implementations reuse tuple objects inner member objects return across calls return different tuple object call return next tuple processed null tuples processed throws Exception exception retrieving next tuple public abstract Tuple get Next throws Exception Join multiple strings string delimited given delimiter param collection strings param delimiter delimiter return delimiter separated string public static String join Abstract Collection String String delimiter Empty return Iterator String iter iterator String Buffer buffer new String Buffer iter next iter Next buffer append delimiter buffer append iter next return buffer String Parse comma separated path strings string array method escapes commas Hadoop glob pattern given paths method borrowed link org apache hadoop mapreduce lib input File Input Format jira opened make name method accessible use method directly jira fixed param comma Separated Paths comma separated string return array path strings public static String get Path Strings String comma Separated Paths int length comma Separated Paths length int curly Open int path Start boolean glob Pattern false List String path Strings new Array List String int length char ch comma Separated Paths char switch ch case curly Open glob Pattern glob Pattern true break case curly Open curly Open glob Pattern glob Pattern false break case glob Pattern path Strings add comma Separated Paths substring path Start path Start break path Strings add comma Separated Paths substring path Start length return path Strings Array new String Construct absolute path file location current directory current directory either form code hdfs nodename nodeport directory code Hadoop Map Reduce mode form code file directory code Hadoop local mode param location location string specified load statement param cur Dir current file system directory return absolute path file file system throws Frontend Exception scheme location incompatible scheme file system public static String get Absolute Path String location Path cur Dir throws Frontend Exception location null cur Dir null throw new Frontend Exception location location cur Dir cur Dir fs Uri cur Dir Uri String fs Scheme fs Uri get Scheme fs Scheme null throw new Frontend Exception cur Dir cur Dir fs Scheme fs Scheme Lower Case String authority fs Uri get Authority authority null authority Path root Dir new Path fs Scheme authority Array List String path Strings new Array List String String fnames get Path Strings location String fname fnames remove leading trailing whitespace fname fname trim Path p new Path fname uri p Uri supplied location scheme e uri absolute absolute path use uri Absolute p Absolute String scheme uri get Scheme scheme null scheme scheme Lower Case scheme null scheme equals fs Scheme throw new Frontend Exception Incompatible file scheme scheme fs Scheme String path uri get Path fname p Absolute new Path root Dir path String new Path cur Dir path String fname fname replace First file file remove trailing fname fname replace First path Strings add fname return join path Strings method called front end back end pass unique signature link Load Func signature used store link Context information link Load Func needs store various method invocations front end back end use case store link Required Field List passed link Load Push push Projection Required Field List use back end returning tuples link Load Func get Next method call methods link Load Func param signature unique signature identify Load Func public void set Context Signature String signature default implementation op Issue warning Warning messages aggregated reported user param msg String message warning param warning Enum type warning public final void warn String msg Enum warning Enum Hadoop Logger get Instance warn msg warning Enum Allow Load Func specify list files would like placed distributed cache default implementation returns null return list files public List String get Cache Files return null Allow Load Func specify list files located locally would like ship backend distributed cache Check link Func Utils utility function facilitate default implementation returns null return list files public List String get Ship Files return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java util Properties import org apache Exec Type import org apache backend executionengine Execution Engine import org apache impl Context Local Exec Type Exec Type local mode Hadoop Mapreduce public class Local Exec Type implements Exec Type private static final String modes Override public boolean accepts Properties properties String exec Type Specified properties get Property exectype Upper Case String mode modes exec Type Specified equals mode return true return false Override public Execution Engine get Execution Engine Context Context return new Execution Engine Context Override public Class get Execution Engine Class return Execution Engine class Override public boolean Local return true Override public String name return public String String return name
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache pen import java io Exception import java util Array List import java util Hash Map import java util Linked List import java util List import java util Map import org apache hadoop conf Configuration import org apache hadoop io Text import org apache hadoop io Writable import org apache hadoop mapred Task import org apache hadoop mapred jobcontrol Job import org apache hadoop mapred jobcontrol Job Control import org apache hadoop mapreduce Mapper import org apache hadoop mapreduce Reducer import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop executionengine map Reduce Layer Job Control Compiler import org apache backend hadoop executionengine map Reduce Layer Configuration import org apache backend hadoop executionengine map Reduce Layer Map Reduce Launcher import org apache backend hadoop executionengine map Reduce Layer Map Reduce Oper import org apache backend hadoop executionengine map Reduce Layer Map Base import org apache backend hadoop executionengine map Reduce Layer Map import org apache backend hadoop executionengine map Reduce Layer Map Reduce import org apache backend hadoop executionengine map Reduce Layer Map Reduce Counter import org apache backend hadoop executionengine map Reduce Layer Split import org apache backend hadoop executionengine map Reduce Layer plans Oper Plan import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer util Plan Helper import org apache data Data Bag import org apache data Tuple import org apache impl Context import org apache impl builtin Read Scalars import org apache impl io File Localizer import org apache impl io Nullable Tuple import org apache impl io Nullable Writable import org apache impl plan Depth First Walker import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache impl util Configuration Validator import org apache impl util Object Serializer import org apache impl util Pair import org apache newplan logical relational Load import org apache newplan logical relational Logical Relational Operator import org apache pen util Lineage Tracer Main class launches Map Reduce public class Local Map Reduce Simulator private Map Reduce Launcher launcher new Map Reduce Launcher private Map Physical Operator Physical Operator phy Map new Hash Map Physical Operator Physical Operator Suppress Warnings unchecked public void launch Physical Plan php Map Load Data Bag base Data Lineage Tracer lineage Illustrator Attacher attacher Example Generator eg Context pc throws Exception Exception Interrupted Exception phy Map clear Oper Plan mrp launcher compile php pc Configuration Validator validate Properties pc get Properties Configuration conf Configuration Util Configuration pc get Properties Job Control Compiler jcc new Job Control Compiler pc conf Job Control jc int num Jobs Compl Data Bag input List Pair Nullable Writable Writable intermediate Data new Array List Pair Nullable Writable Writable Map Job Map Reduce Oper job Mro Map jcc get Job Mro Map Hash Map String Data Bag output new Hash Map String Data Bag Configuration job Conf jc null mrp size boolean need File Input final Array List Operator Key empty Inp Targets new Array List Operator Key pc get Properties set Property illustrating true String jt Identifier System current Time Millis int job Id mrp size jc jcc compile mrp Illustrator jc null throw new Exec Exception Native execution supported List Job jobs jc get Waiting Jobs Job job jobs job Id job Conf job get Job Conf File Localizer set Initialized false Array List Array List Operator Key inp Targets Array List Array List Operator Key Object Serializer deserialize job Conf get inp Targets intermediate Data clear Map Reduce Oper mro job Mro Map get job Split split null List Store stores null Physical Operator pack null revisit new physical operators compilation mro map Plan Empty attacher revisit mro map Plan mro reduce Plan Empty attacher revisit mro reduce Plan pack mro reduce Plan get Roots get List Load lds Plan Helper get Physical Operators mro map Plan Load class mro map Plan Empty stores Plan Helper get Physical Operators mro map Plan Store class mro reduce Plan Empty stores null stores Plan Helper get Physical Operators mro reduce Plan Store class else stores add Plan Helper get Physical Operators mro reduce Plan Store class Store store stores output put store get File get File Name attacher get Data Map get store Output Attacher oa new Output Attacher mro map Plan output oa visit mro reduce Plan Empty oa new Output Attacher mro reduce Plan output oa visit int index Load ld lds input output get ld get File get File Name input null base Data null Logical Relational Operator lo base Data key Set Load lo get Schema File equals ld get File get File Name input base Data get lo break input null mro map Plan remove ld int map Task Id Load ld lds check newly generated data first input output get ld get File get File Name input null base Data null input null base Data null Logical Relational Operator lo base Data key Set Load lo get Schema File equals ld get File get File Name input base Data get lo break need File Input input null split new Split null index need File Input empty Inp Targets inp Targets get index index Mapper Text Tuple Nullable Writable Writable map mro reduce Plan Empty map map new Map Map Mapper Text Tuple Nullable Writable Writable Context context Map Map map get Illustrator Context job Conf input intermediate Data split mro Counter Operation mro Row Number map new Map Reduce Counter Map Counter context Map Reduce Counter Map Counter map get Illustrator Context job Conf input intermediate Data split Map Base map set Map Plan mro map Plan context get Configuration set Configuration new Task jt Identifier job Id true map Task Id String map run context else true equals job Conf get usercomparator map new Map Reduce Map Comparator else equals job Conf get key Dist File map new Map Reduce Map Partition Index else map new Map Reduce Map Mapper Text Tuple Nullable Writable Writable Context context Map Base map get Illustrator Context job Conf input intermediate Data split Map Base map set Map Plan mro map Plan context get Configuration set Configuration new Task jt Identifier job Id true map Task Id String map run context mro reduce Plan Empty pack instanceof Package mro reduce Plan remove pack reducer run Map Reduce Reduce reduce true equals job Conf get usercomparator reduce new Map Reduce Reduce Comparator else reduce new Map Reduce Reduce Reducer Nullable Writable Nullable Tuple Nullable Writable Writable Context context reduce get Illustrator Context job intermediate Data Package pack mro Counter Operation reduce new Map Reduce Counter Reduce Counter context Map Reduce Counter Reduce Counter reduce get Illustrator Context job intermediate Data Package pack Map Reduce Reduce reduce set Reduce Plan mro reduce Plan context get Configuration set Configuration new Task jt Identifier job Id false String reduce run context Physical Operator key mro phy Map key Set Physical Operator value mro phy Map get key phy Map put key value int removed Op jcc update Op Plan new Linked List Job num Jobs Compl removed Op jcc reset private class Output Attacher extends Phy Plan Visitor private Map String Data Bag output Buffer Output Attacher Physical Plan plan Map String Data Bag output super plan new Depth First Walker Physical Operator Physical Plan plan output Buffer output Override public void visit User Func User Func user Func throws Visitor Exception user Func get Func null user Func get Func instanceof Read Scalars Read Scalars user Func get Func set Output Buffer output Buffer public Map Physical Operator Physical Operator get Phy Map return phy Map
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Array List import java util Arrays import java util Collection import java util Collections import java util Hash Map import java util List import java util Map import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache impl util Multi Map import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical relational Logical Schema Logical Field Schema public class Cogroup extends Logical Relational Operator List booleans specifying cogroups inner private boolean Inner List expression Plans according input private Multi Map Integer Logical Expression Plan Expression Plans Enum type group public static enum Regular co group Collected group Map side Co Group sorted data private Group Type private Logical Field Schema group Key Uid Schema map storing Uids generated input map required make uids persistant calls reset Schema get Schema private Map Integer Long generated Input Uids new Hash Map Integer Long final static String group static constant refer option selecting group type public final static Integer Constructor use defining rule patterns param plan public Cogroup Logical Plan plan super Cogroup plan public Cogroup Operator Plan plan Multi Map Integer Logical Expression Plan expression Plans boolean Inner plan expression Plans Inner public Cogroup Operator Plan plan Multi Map Integer Logical Expression Plan expression Plans group Type boolean Inner super Cogroup plan Expression Plans expression Plans Inner null Inner Arrays copy Inner Inner length Group Type group Type Given expression plan function returns Logical Field Schema generated using expression plan param expr Plan Expression Plan generates field return private Logical Field Schema get Plan Schema Logical Expression Plan expr Plan throws Frontend Exception Logical Expression source Exp Logical Expression expr Plan get Sources get Logical Field Schema plan Schema null source Exp get Field Schema null plan Schema source Exp get Field Schema deep Copy return plan Schema Override public Logical Schema get Schema throws Frontend Exception schema calculated return schema null return schema List Operator inputs null inputs plan get Predecessors inputs null throw new Frontend Exception get predecessor List Logical Field Schema field Schema List new Array List Logical Field Schema See one expression plans schema group column tuple boolean Multiple Keys false Integer key Expression Plans key Set Expression Plans get key size Multiple Keys true break Logical Field Schema group Key Schema null Generate group Field Schema Multiple Keys Logical Schema key Schema new Logical Schema sort maintain correct order inputs Integer key Expression Plans key Set Collection Logical Expression Plan plans Expression Plans get key Logical Expression Plan plan plans Logical Field Schema field Schema get Plan Schema plan plan schema null means ca n calculate schemas bail field Schema null schema null return schema field Schema new Logical Field Schema field Schema key Schema add Field field Schema need fields one input break group Key Schema new Logical Field Schema key Schema Data Type else sort maintain correct order inputs Integer key Expression Plans key Set Collection Logical Expression Plan plans Expression Plans get key Logical Expression Plan plan plans group Key Schema get Plan Schema plan plan schema null means figure arity keys give empty tuple group Key Schema null group Key Schema new Logical Schema Logical Field Schema group null Data Type break group Key Schema new Logical Schema Logical Field Schema group Key Schema Change uid field group Key Schema alias break break Expression Plans size reset uid group column associated one input group Key Schema reset Uid group Key Schema null throw new Frontend Exception get group key schema group Key Uid Schema group Key Schema merge Uid group Key Uid Schema field Schema List add group Key Schema Generate Bag Schema int counter Operator op inputs Logical Schema input Schema Logical Relational Operator op get Schema Check already calculated Uid bag given input operator long bag Uid generated Input Uids get counter null bag Uid generated Input Uids get counter else bag Uid Logical Expression get Next Uid generated Input Uids put counter bag Uid Logical Field Schema new Tuple Field Schema new Logical Field Schema null input Schema Data Type Logical Expression get Next Uid Logical Schema bag Schema new Logical Schema bag Schema add Field new Tuple Field Schema Logical Field Schema new Bag Field Schema new Logical Field Schema Logical Relational Operator op get Alias bag Schema Data Type bag Uid field Schema List add new Bag Field Schema counter schema new Logical Schema Logical Field Schema field Schema field Schema List schema add Field field Schema return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Cogroup Cogroup oc Cogroup Group Type oc Group Type Inner length oc Inner length Expression Plans size oc Expression Plans size int Inner length Inner oc Inner return false Integer key Expression Plans key Set oc Expression Plans contains Key key return false Collection Logical Expression Plan exp Expression Plans get key Collection Logical Expression Plan exp oc Expression Plans get key exp instanceof Array List exp instanceof Array List throw new Frontend Exception Expected Array List Expression Plans Array List Logical Expression Plan exp List Array List Logical Expression Plan exp Array List Logical Expression Plan exp List Array List Logical Expression Plan exp int exp List size exp List get Equal exp List get return false return check Equality Logical Relational Operator return false public get Group Type return Group Type public void reset Group Type Group Type Returns Unmodifiable Map Input Number Uid return Unmodifiable Map Integer Long public Map Integer Long get Generated Input Uids return Collections unmodifiable Map generated Input Uids public Multi Map Integer Logical Expression Plan get Expression Plans return Expression Plans public void set Expression Plans Multi Map Integer Logical Expression Plan plans Expression Plans plans public void set Group Type gt Group Type gt public void set Inner Flags boolean flags flags null Inner Arrays copy flags flags length public boolean get Inner return Inner Override public void reset Uid group Key Uid Schema null generated Input Uids new Hash Map Integer Long public List Operator get Inputs Logical Plan plan return plan get Predecessors
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Array List import java util List import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Plan Visitor public class Cross extends Logical Relational Operator private static final long serial Version private static Log log Log Factory get Log Filter class protected boolean nested false public Cross Logical Plan plan super Cross plan public boolean Nested return nested public void set Nested boolean nested nested nested Override public Logical Schema get Schema throws Frontend Exception schema calculated return schema null return schema List Operator inputs null inputs plan get Predecessors inputs null return null List Logical Schema Logical Field Schema fss new Array List Logical Schema Logical Field Schema Operator op inputs Logical Schema input Schema Logical Relational Operator op get Schema schema one input unknown join schema unknown return input Schema null schema null return schema int input Schema size Logical Schema Logical Field Schema fs input Schema get Field Logical Schema Logical Field Schema new null fs alias null new new Logical Schema Logical Field Schema Logical Relational Operator op get Alias fs alias fs schema fs type fs uid else new new Logical Schema Logical Field Schema fs alias fs schema fs type fs uid fss add new nested Logical Relational Operator fix Duplicate Uids fss schema new Logical Schema Logical Schema Logical Field Schema field Schema fss schema add Field field Schema return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Cross return check Equality Logical Relational Operator else return false public List Operator get Inputs return plan get Predecessors
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Plan Visitor public class Distinct extends Logical Relational Operator private static final long serial Version private static Log log Log Factory get Log Filter class public Distinct Logical Plan plan super Distinct plan Override public Logical Schema get Schema throws Frontend Exception schema null return schema Logical Relational Operator input null input Logical Relational Operator plan get Predecessors get schema input get Schema return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Distinct return check Equality Logical Relational Operator else return false public Operator get Input Logical Plan plan return plan get Predecessors get
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Plan Visitor import org apache newplan logical expression Logical Expression Plan public class Filter extends Logical Relational Operator private static final long serial Version private Logical Expression Plan filter Plan private boolean Sample public Filter Logical Plan plan super Filter plan public Filter Logical Plan plan Logical Expression Plan filter Plan super Filter plan filter Plan filter Plan public Filter Logical Plan plan boolean sample plan Sample sample public Filter Logical Plan plan Logical Expression Plan filter Plan boolean sample plan filter Plan Sample sample public Logical Expression Plan get Filter Plan return filter Plan public void set Filter Plan Logical Expression Plan filter Plan filter Plan filter Plan public boolean Sample return Sample Override public Logical Schema get Schema throws Frontend Exception schema null return schema Logical Relational Operator input null input Logical Relational Operator plan get Predecessors get schema input get Schema return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Filter Filter Filter return filter Plan Equal filter Plan check Equality else return false public Operator get Input Logical Plan plan return plan get Predecessors get
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Array List import java util Deque import java util Linked List import java util List import org apache impl logical Layer Frontend Exception import org apache impl util Pair import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan Reverse Dependency Order Walker import org apache newplan logical expression Project Expression import org apache newplan logical optimizer Ralational Nodes Visitor public class extends Logical Relational Operator private static final long serial Version private Logical Plan inner Plan public Operator Plan plan super plan public Logical Plan get Inner Plan return inner Plan public void set Inner Plan Logical Plan p inner Plan p Override public boolean Equal Operator throws Frontend Exception instanceof return false return inner Plan Equal inner Plan Override public Logical Schema get Schema throws Frontend Exception List Operator inner Plan get Sinks Logical Relational Operator generate null assume Generate sink inner plan Dangling Nested Node Remover get Schema run Dangling Nested Node Remover need make sure get Generate Operator op op instanceof Generate generate Logical Relational Operator op break generate null schema generate get Schema return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Find Inner Load inner plan corresponding project also find whether relational operator inner plan along way public static Pair List Inner Load Boolean find Reacheable Inner Load Boundary Project Project Expression project throws Frontend Exception boolean need New Uid false List Inner Load inner Loads new Array List Inner Load Logical Relational Operator referred project find Referent Deque Operator stack new Linked List Operator stack add referred stack Empty Operator op stack pop op instanceof Inner Load inner Loads add Inner Load op else op instanceof Generate need New Uid true List Operator ops referred get Plan get Predecessors op ops null Operator ops stack push return new Pair List Inner Load Boolean inner Loads need New Uid public Logical Schema dump Nested Schema String alias String nested Alias throws Frontend Exception Nested Relational Operator Finder op Finder new Nested Relational Operator Finder inner Plan nested Alias op Finder visit op Finder get Matched Operator null Logical Schema nested Sc op Finder get Matched Operator get Schema return nested Sc return null private static class Nested Relational Operator Finder extends Ralational Nodes Visitor String alias Operator Logical Relational Operator op Found null public Nested Relational Operator Finder Logical Plan plan String alias throws Frontend Exception super plan new Reverse Dependency Order Walker plan alias Operator alias public Logical Relational Operator get Matched Operator return op Found Override public void execute Logical Relational Operator op throws Frontend Exception op get Alias null op get Alias equals alias Operator op Found op
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Array List import java util List import java util Map import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical relational Logical Schema Logical Field Schema public class Generate extends Logical Relational Operator private List Logical Expression Plan output Plans private boolean flatten Flags User Defined Schema original input user n suppose store uid User Defined Schema private List Logical Schema User Defined Schema null private List Logical Schema output Plan Schemas null private List Logical Schema exp Schemas null Generate generate new uid cache happens expression plan complete schema however user give complete schema statement script private List Logical Schema uid Schemas null public Generate Operator Plan plan List Logical Expression Plan ps boolean flatten plan output Plans ps flatten Flags flatten public void set Output Plans List Logical Expression Plan plans output Plans plans public Generate Operator Plan plan super Generate plan Override public Logical Schema get Schema throws Frontend Exception schema null return schema uid Schemas null uid Schemas new Array List Logical Schema int output Plans size uid Schemas add null schema new Logical Schema output Plan Schemas new Array List Logical Schema exp Schemas new Array List Logical Schema int output Plans size Logical Expression exp Logical Expression output Plans get get Sources get Logical Schema User Defined Schema Copy null User Defined Schema null User Defined Schema get null User Defined Schema Copy new Logical Schema Logical Schema Logical Field Schema fs User Defined Schema get get Fields User Defined Schema Copy add Field fs deep Copy Logical Field Schema field Schema null schema expression flatten Logical Schema exp Schema null exp get Field Schema null field Schema exp get Field Schema deep Copy exp Schema new Logical Schema field Schema type Data Type field Schema type Data Type field Schema type Data Type flatten Flags type primitive add schema field Schema null exp Schema add Field field Schema else bag tuple map n inner schema flatten n schema entire operator field Schema schema null exp Schema null else come get Tuple Map flatten extract inner schema tuple exp Schema List Logical Schema Logical Field Schema inner Field Schemas new Array List Logical Schema Logical Field Schema flatten Flags field Schema type Data Type bag get schema tuples field Schema schema null field Schema schema get Field schema null inner Field Schemas field Schema schema get Field schema get Fields Logical Schema Logical Field Schema fs inner Field Schemas fs alias fs alias null null field Schema alias fs alias else field Schema type Data Type contain schemafield Map value inner Field Schemas field Schema schema get Fields Logical Schema Logical Field Schema fs Value inner Field Schemas get fs Value alias field Schema alias value Logical Schema Logical Field Schema fs Key new Logical Field Schema field Schema alias key null Data Type field Schema uid exp Schema add Field fs Key else Data Type inner Field Schemas field Schema schema get Fields Logical Schema Logical Field Schema fs inner Field Schemas fs alias fs alias null null field Schema alias fs alias Logical Schema Logical Field Schema fs inner Field Schemas exp Schema add Field fs else exp Schema add Field field Schema Merge user defined schema exp Schema null exp Schema size exp Schema null Logical Schema plan Schema new Logical Schema exp Schemas add exp Schema User Defined Schema Copy null Logical Schema merged Schema new Logical Schema merge user Defined Schema exp Schema null Use user defined schema Logical Field Schema fs User Defined Schema Copy get Fields fs stamp Field Schema merged Schema add Field new Logical Field Schema fs else Merge uid exp field schema merged Schema Logical Schema merge User Defined Schema Copy exp Schema Logical Schema Merge Mode Load merged Schema null throw new Frontend Exception merge exp Schema String false user defined schema User Defined Schema Copy String false merged Schema merge Uid exp Schema set Null Type Byte Array Type merged Schema Logical Field Schema fs merged Schema get Fields plan Schema add Field fs else plan schema whole Generate schema exp Schema null plan Schema null else Merge schema plan Logical Field Schema fs exp Schema get Fields plan Schema add Field fs plan Schema null schema null break Logical Field Schema fs plan Schema get Fields schema add Field fs schema generated user defined schema keep uid exp Schema null Logical Schema uid Schema plan Schema merge Uid uid Schemas get uid Schemas set uid Schema output Plan Schemas add plan Schema schema null schema size schema null output Plan Schemas null return schema public List Logical Expression Plan get Output Plans return output Plans public boolean get Flatten Flags return flatten Flags public void set Flatten Flags boolean flatten flatten Flags flatten Override public boolean Equal Operator throws Frontend Exception instanceof Generate return false List Logical Expression Plan Plan Generate get Output Plans boolean fs Generate get Flatten Flags output Plans size Plan size return false int output Plans size flatten Flags fs return false output Plans get Equal Plan get return false return true Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public String String String Builder msg new String Builder alias null msg append alias msg append Name name int flatten Flags length msg append flatten Flags flatten Flags length msg append msg append Schema schema null msg append schema else msg append null msg append annotations null Map Entry String Object entry annotations entry Set msg append entry return msg String public List Logical Schema get User Defined Schema return User Defined Schema public void set User Defined Schema List Logical Schema user Defined Schema User Defined Schema user Defined Schema Get output schema corresponding input expression plan return list output schemas public List Logical Schema get Output Plan Schemas return output Plan Schemas public void set Output Plan Schemas List Logical Schema output Plan Schemas output Plan Schemas output Plan Schemas public List Logical Schema get Uid Schemas return uid Schemas public void set Uid Schemas List Logical Schema uid Schemas uid Schemas uid Schemas Override public void reset Uid uid Schemas null Override public void reset Schema super reset Schema output Plan Schemas null public List Logical Schema get Exp Schemas return exp Schemas private void set Null Type Byte Array Type Logical Schema null Logical Field Schema fs get Fields Data Type Schema Type fs type set Null Type Byte Array Type fs schema else fs type Data Type fs type Data Type
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema Logical representation expression operators Expression operators data type uid Uid unique id expression public abstract class Logical Expression extends Operator static long next Uid protected Logical Schema Logical Field Schema field Schema protected Logical Schema Logical Field Schema uid Field Schema static public long get Next Uid return next Uid used junit test called elsewhere static public void reset Next Uid next Uid param name operator param plan Logical Expression Plan part public Logical Expression String name Operator Plan plan super name plan convenience method avoid side effectful nature get Field Schema simply returns whether field Schema currently null public boolean Field Schema return field Schema null Get field schema output expression operator merely return field schema variable schema yet set attempt construct Therefore abstract since operator need construct field schema differently return Field Schema throws Frontend Exception abstract public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception public void reset Field Schema field Schema null Get data type expression return data type one static bytes Data Type public byte get Type throws Frontend Exception get Field Schema null get Field Schema type Data Type return get Field Schema type return Data Type public String String String Builder msg new String Builder msg append Name name Type field Schema null msg append Data Type find Type Name field Schema type else msg append null msg append Uid field Schema null msg append field Schema uid else msg append null msg append return msg String public void never Use Real Set Field Schema Logical Field Schema fs throws Frontend Exception field Schema fs uid Field Schema field Schema merge Uid uid Field Schema Create deep copy expression add passed Logical Expression Plan Return copy expression updated logical expression plan param lg Exp Plan Logical Expression Plan expression added return Logical Expression logical expression plan throws Exception abstract public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Erase cached uid regenerate uid regenerating schema process currently used Implicit Split Insert insert split invalidate uids plan public void reset Uid uid Field Schema null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java io Exception import java io Print Stream import java util Array List import java util Hash Set import java util Iterator import java util List import org apache Constants import org apache Exception import org apache backend hadoop datastorage Configuration Util import org apache data Schema Tuple Backend import org apache impl Context import org apache impl Impl Constants import org apache impl logical Layer Frontend Exception import org apache impl plan Compilation Message Collector import org apache impl plan Compilation Message Collector Message Type import org apache impl util Hash Output Stream import org apache impl util Object Serializer import org apache newplan Base Operator Plan import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan logical Dot Printer import org apache newplan logical optimizer Logical Plan Optimizer import org apache newplan logical optimizer Logical Plan Printer import org apache newplan logical optimizer Schema Resetter import org apache newplan logical optimizer Uid Resetter import org apache newplan logical visitor Cast Lineage Setter import org apache newplan logical visitor Column Alias Conversion Visitor import org apache newplan logical visitor Dangling Nested Node Remover import org apache newplan logical visitor Duplicate Column Rewrite Visitor import org apache newplan logical visitor User Schema Visitor import org apache newplan logical visitor Implicit Split Insert Visitor import org apache newplan logical visitor Input Output File Validator Visitor import org apache newplan logical visitor Scalar Variable Validator import org apache newplan logical visitor Scalar Visitor import org apache newplan logical visitor Schema Alias Visitor import org apache newplan logical visitor Sort Info Setter import org apache newplan logical visitor Store Alias Setter import org apache newplan logical visitor Type Checking Rel Visitor import org apache newplan logical visitor Union Schema Setter import org apache pen Optimize Disabler import org apache validator Black Whitelist Validator import com google common base Splitter import com google common collect Lists import com google common hash Hash Function import com google common hash Hashing Logical Plan logical view relational operations execute given script Note contains relational operations expressions contained Logical Expression Plans inside relational operator public class Logical Plan extends Base Operator Plan public Logical Plan Logical Plan shallow copy constructor super public Logical Plan super Equality checked calling equals every leaf plan assumes plans always connected graphs somewhat inefficient since every leaf test equality way every root intended use testing ok Checking predecessors opposed successors chosen splits multiple successors depend order outputs correctness whereas joins multiple predecessors reversing outputs split graph correctness implications whereas reversing inputs join method equals detect predecessors different orders successors different orders return false either plan non deterministic Eval Func Override public boolean Equal Operator Plan throws Frontend Exception null instanceof Logical Plan return false return super Equal Override public void explain Print Stream ps String format boolean verbose throws Frontend Exception format equals xml ps println logical Plan Supported logical Plan return ps println ps println New Logical Plan ps println size ps println Logical plan empty else format equals dot Dot Printer lpp new Dot Printer ps lpp dump else Logical Plan Printer npp new Logical Plan Printer ps npp visit public Operator find Alias String alias Iterator Operator get Operators List Operator ops new Array List Operator Next Logical Relational Operator op Logical Relational Operator next op get Alias null continue op get Alias equals alias ops add op ops Empty return null else return ops get ops size Last one Returns signature Logical Plan signature unique identifier given plan generated script script run multiple times version guaranteed produce signature even input output locations differ return unique identifier logical plan throws Frontend Exception signature ca n computed public String get Signature throws Frontend Exception Use streaming hash function use murmur function constant seed Hash Function hf Hashing murmur Hash Output Stream hos new Hash Output Stream hf Print Stream ps new Print Stream hos Logical Plan Printer printer new Logical Plan Printer ps printer visit return Integer String hos get Hash Code Int public void validate Context Context String scope boolean skip Input Output Validation throws Frontend Exception new Dangling Nested Node Remover visit new Column Alias Conversion Visitor visit new Schema Alias Visitor visit new Scalar Visitor Context scope visit new User Schema Visitor visit Implicit Split Insert Visitor called Duplicate Column Rewrite Visitor Detail new Implicit Split Insert Visitor visit Duplicate Column Rewrite Visitor Type Checking Rel Visitor reset Schema get Schema heavily new Duplicate Column Rewrite Visitor visit Compilation Message Collector collector new Compilation Message Collector new Type Checking Rel Visitor collector visit new Union Schema Setter visit new Cast Lineage Setter collector visit new Scalar Variable Validator visit new Store Alias Setter visit compute whether output data sorted new Sort Info Setter visit boolean aggregate Warning true equals Ignore Case Context get Properties get Property aggregate warning aggregate Warning Compilation Message Collector log Messages collector Message Type Warning aggregate Warning log else Enum type Message Type values Compilation Message Collector log Messages collector log skip Input Output Validation Context Explain Context Dump Schema Validate input output file new Input Output File Validator Visitor Context visit Black Whitelist Validator validator new Black Whitelist Validator Context validator validate make sure plan consistent Uid Resetter uid Resetter new Uid Resetter uid Resetter visit Schema Resetter schema Resetter new Schema Resetter true skip duplicate uid check schema Resetter visit public void optimize Context Context throws Frontend Exception Context Illustrator disable specific optimizations Optimize Disabler pod new Optimize Disabler pod visit Hash Set String disabled Optimizer Rules try disabled Optimizer Rules Hash Set String Object Serializer deserialize Context get Properties get Property Impl Constants catch Exception ioe int err Code String msg Unable deserialize optimizer rules throw new Frontend Exception msg err Code Exception ioe disabled Optimizer Rules null disabled Optimizer Rules new Hash Set String String Optimizer Rules Disabled Context get Properties get Property Constants Optimizer Rules Disabled null disabled Optimizer Rules add Lists new Array List Splitter split Optimizer Rules Disabled Context Illustrator disabled Optimizer Rules add Merge disabled Optimizer Rules add Partition Filter Optimizer disabled Optimizer Rules add Limit Optimizer disabled Optimizer Rules add Nested Limit Optimizer disabled Optimizer Rules add Split Filter disabled Optimizer Rules add Push Filter disabled Optimizer Rules add Merge Filter disabled Optimizer Rules add Push Flatten disabled Optimizer Rules add Column Map Key Prune disabled Optimizer Rules add Add disabled Optimizer Rules add Group Const Parallel Setter try Schema Tuple Backend initialize Configuration Util Configuration Context get Properties true Context catch Exception e throw new Frontend Exception e run optimizer Logical Plan Optimizer optimizer new Logical Plan Optimizer disabled Optimizer Rules Context optimizer optimize
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache parser import java io Exception import java math Big Decimal import java math Big Integer import java net Malformed Exception import java util Array List import java util Hash Map import java util Iterator import java util List import java util Map import java util Properties import org antlr runtime Int Stream import org antlr runtime Recognition Exception import org apache Exec Type import org apache Func Spec import org apache Load Func import org apache Non Load Func import org apache Configuration import org apache Store Func Interface import org apache backend executionengine Exec Exception import org apache backend hadoop datastorage Configuration Util import org apache builtin Assert import org apache builtin Cube Dimensions import org apache builtin Invoker Generator import org apache builtin Storage import org apache builtin import org apache builtin Rollup Dimensions import org apache data Bag Factory import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl Context import org apache impl io File Spec import org apache impl logical Layer Frontend Exception import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl streaming Streaming Command import org apache impl streaming Streaming Command Handle import org apache impl streaming Streaming Command Handle Spec import org apache impl util Multi Map import org apache impl util String Utils import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan logical expression Bin Cond Expression import org apache newplan logical expression Constant Expression import org apache newplan logical expression Null Expression import org apache newplan logical expression Less Expression import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Expression import org apache newplan logical expression Expression import org apache newplan logical expression Project Expression import org apache newplan logical expression User Func Expression import org apache newplan logical optimizer Schema Resetter import org apache newplan logical relational Cogroup import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Cube import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Join import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Native import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Split Output import org apache newplan logical relational Store import org apache newplan logical relational Stream import org apache newplan logical relational Union import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema import org apache newplan logical rules Optimizer Utils import org apache newplan logical visitor Proj Star Udf Expander import org apache newplan logical visitor Project Star Expander import org apache newplan logical visitor Reset Projection Attached Relational Op Visitor import org apache validator Black Whitelist Filter import org apache validator Command Filter public class Logical Plan Builder private Logical Plan plan new Logical Plan private String last Rel null private Map String Operator operators new Hash Map String Operator Override public Operator put String k Operator v last Rel k return super put k v Map String String file Name Map private Context Context null private String scope null private Int Stream int Stream private int store Index private int load Index private final Black Whitelist Filter filter private static Node Id Generator node Id Gen Node Id Generator get Generator public static long get Next Id String scope return node Id Gen get Next Node Id scope Logical Plan Builder Context Context String scope Map String String file Name Map Int Stream input Context Context scope scope file Name Map file Name Map int Stream input filter new Black Whitelist Filter Context Logical Plan Builder Int Stream input throws Exec Exception Context new Context Exec Type new Properties Context connect scope test file Name Map new Hash Map String String int Stream input filter new Black Whitelist Filter Context Operator lookup Operator String alias return operators get alias Func Spec lookup Function String alias return Context get Func Spec Alias alias Streaming Command lookup Command String alias return Context get Command Alias alias void define Command String alias Streaming Command command try filter validate Command Filter Command catch Frontend Exception e throw new Runtime Exception e get Message Context register Stream Cmd alias command void define Function String alias Func Spec fs try filter validate Command Filter Command catch Frontend Exception e throw new Runtime Exception e Context register Function alias fs Logical Plan get Plan return plan Map String Operator get Operators return operators Filter create Filter Op return new Filter plan Limit create Limit Op return new Limit plan Filter create Sample Op return new Filter plan true String build Filter Op Source Location loc Filter op String alias String input Alias Logical Expression Plan expr throws Parser Validation Exception op set Filter Plan expr alias build Op loc op alias input Alias null actually return alias try new Proj Star Udf Expander op get Plan visit op new Schema Resetter op get Plan true visit op catch Frontend Exception e throw new Parser Validation Exception int Stream loc e return alias String build Distinct Op Source Location loc String alias String input Alias String partitioner throws Parser Validation Exception Distinct op new Distinct plan return build Op loc op alias input Alias partitioner String build Limit Op Source Location loc String alias String input Alias long limit throws Parser Validation Exception Limit op new Limit plan limit return build Op loc op alias input Alias null String build Limit Op Source Location loc Limit op String alias String input Alias Logical Expression Plan expr throws Parser Validation Exception op set Limit Plan expr return build Op loc op alias input Alias null String build Sample Op Source Location loc String alias String input Alias double value Source Location val Loc throws Parser Validation Exception Logical Expression Plan filter Plan new Logical Expression Plan Generate filter condition Logical Expression konst new Constant Expression filter Plan value konst set Location val Loc User Func Expression udf new User Func Expression filter Plan new Func Spec class get Name new Less Expression filter Plan udf konst Filter filter new Filter plan true return build Filter Op loc filter alias input Alias filter Plan String build Sample Op Source Location loc Filter filter String alias String input Alias Logical Expression Plan sample Plan Logical Expression expr throws Parser Validation Exception User Func Expression udf new User Func Expression sample Plan new Func Spec class get Name new Less Expression sample Plan udf expr return build Filter Op loc filter alias input Alias sample Plan String build Union Op Source Location loc String alias List String input Aliases boolean Schema throws Parser Validation Exception check Duplicate Aliases input Aliases loc Union op new Union plan Schema return build Op loc op alias input Aliases null String build Split Op Source Location loc String input Alias throws Parser Validation Exception Split op new Split plan return build Op loc op null input Alias null Split Output create Split Output Op return new Split Output plan String build Split Output Op Source Location loc Split Output op String alias String input Alias Logical Expression Plan filter Plan throws Parser Validation Exception op set Filter Plan filter Plan return build Op loc op alias input Alias null String build Split Otherwise Op Source Location loc Split Output op String alias String input Alias boolean allow Nulls throws Parser Validation Exception Plan Generation Failure Exception Logical Expression Plan split Plan new Logical Expression Plan Operator losplit lookup Operator input Alias Logical Expression current Expr null Operator losplitoutput plan get Successors losplit take Split Output negate filter plans Logical Expression Plan fragment Split Output losplitoutput get Filter Plan try Optimizer Utils plan Non Deterministic Udf fragment throw new Parser Validation Exception int Stream loc new Frontend Exception op use Otherwise Split expression containing Nondeterministic catch Frontend Exception e e print Stack Trace throw new Plan Generation Failure Exception int Stream loc e Logical Expression root null try get root expression filter plan Split Output copy root Logical Expression fragment get Sources get deep Copy split Plan catch Frontend Exception e e print Stack Trace throw new Plan Generation Failure Exception int Stream loc e root null throw new Plan Generation Failure Exception int Stream loc new Frontend Exception op Could retrieve Logical Expression Split Output losplitoutput current Expr null current Expr root else current Expr new Expression split Plan current Expr root using De Morgan law current Expr new Expression split Plan current Expr allow Nulls add Null expression condition e needed catch null values otherwise branch Logical Expression Null new Null Expression split Plan current Expr current Expr new Expression split Plan Null current Expr try Going Project Expressions cloned updating attached operators original Split Output otherwise Split Output new Reset Projection Attached Relational Op Visitor split Plan op visit catch Frontend Exception e e print Stack Trace throw new Plan Generation Failure Exception int Stream loc e op set Filter Plan split Plan return build Op loc op alias input Alias null String build Cross Op Source Location loc String alias List String input Aliases String partitioner throws Parser Validation Exception Cross op new Cross plan return build Op loc op alias input Aliases partitioner Sort create Sort Op return new Sort plan String build Sort Op Source Location loc Sort sort String alias String input Alias List Logical Expression Plan plans List Boolean asc Flags Func Spec fs throws Parser Validation Exception sort set Sort Col Plans plans sort set User Func fs asc Flags Empty int plans size asc Flags add true sort set Ascending Cols asc Flags alias build Op loc sort alias input Alias null try new Project Star Expander sort get Plan visit sort new Proj Star Udf Expander sort get Plan visit sort new Schema Resetter sort get Plan true visit sort catch Frontend Exception e throw new Parser Validation Exception int Stream loc e return alias Rank create Rank Op return new Rank plan String build Rank Op Source Location loc Rank rank String alias String input Alias List Logical Expression Plan plans List Boolean asc Flags throws Parser Validation Exception Rank rank set Rank Col Plan plans asc Flags Empty int plans size asc Flags add true rank set Ascending Col asc Flags build Op loc rank alias input Alias null try new Project Star Expander rank get Plan visit rank new Proj Star Udf Expander rank get Plan visit rank new Schema Resetter rank get Plan true visit rank catch Frontend Exception e throw new Parser Validation Exception int Stream loc e return alias Join create Join Op return new Join plan String build Join Op Source Location loc Join op String alias List String input Aliases Multi Map Integer Logical Expression Plan join Plans jt List Boolean inner Flags String partitioner throws Parser Validation Exception check Duplicate Aliases input Aliases loc jt null jt else op pin Option Join int input Count input Aliases size jt partitioner null throw new Parser Validation Exception int Stream loc Custom Partitioner supported skewed join input Count throw new Parser Validation Exception int Stream loc Skewed join applied way joins else jt jt input Count throw new Parser Validation Exception int Stream loc Merge join applied way joins else jt inner Flags size inner Flags get false throw new Parser Validation Exception int Stream loc Replicated join support right full outer joins boolean flags new boolean join Plans size inner Flags size int join Plans size flags inner Flags get else int join Plans size flags true op set Join Type jt op set Inner Flags flags op set Join Plans join Plans alias build Op loc op alias input Aliases partitioner try new Project Star Expander op get Plan visit op new Proj Star Udf Expander op get Plan visit op new Schema Resetter op get Plan true visit op catch Frontend Exception e throw new Parser Validation Exception int Stream loc e return alias Cube create Cube Op return new Cube plan String build Cube Op Source Location loc Cube op String alias String input Alias List String operations Multi Map Integer Logical Expression Plan expression Plans throws Parser Validation Exception check continuously occurring cube operations combined combine Cube Operations Array List String operations expression Plans set expression plans cube operator build cube operator op set Expression Plans expression Plans op set Operations operations build Op loc op alias input Alias null try new Project Star Expander op get Plan visit op new Proj Star Udf Expander op get Plan visit op new Schema Resetter op get Plan true visit op catch Frontend Exception e throw new Parser Validation Exception int Stream loc e try alias convert Cube Plan loc op input Alias operations expression Plans catch Frontend Exception e throw new Parser Validation Exception int Stream loc e return alias multiple operations occur continuously combined together rel b c rel b c private void combine Cube Operations Array List String operations Multi Map Integer Logical Expression Plan expression Plans int start Idx int end Idx int boolean Merged false scan perform merge column projections operations size start Idx operations get equals true start Idx else operations get equals true end Idx else end Idx start Idx merge Mark Delete operations expression Plans start Idx end Idx Merged true start Idx end Idx else start Idx end Idx check required case sequence operations occurs end like case end Idx greater start Idx end Idx start Idx Merged true merge Mark Delete operations expression Plans start Idx end Idx merged remove column projections marked deletion Merged perform Deletion expression Plans operations private void perform Deletion Multi Map Integer Logical Expression Plan expression Plans Array List String operations Multi Map Integer Logical Expression Plan ep new Multi Map Integer Logical Expression Plan List String op new Array List String int idx rearranging indices int operations size operations get null op add idx operations get expression Plans get null ep put idx expression Plans get idx performing deletions operations clear operations add op expression Plans clear Integer ep key Set expression Plans put ep get performs merging dimensions merged cube operation Ex b c b c example operator dimensions merged private void merge Mark Delete Array List String operations Multi Map Integer Logical Expression Plan expression Plans int start Idx int end Idx mark delete int start Idx end Idx expression Plans put start Idx expression Plans get expression Plans remove Key operations remove operations add null function creates logical plan foreach groupby operators connects predecessors cube operator foreach plan disconnects cube operator logical plan also connects foreach plan groupby plan private String convert Cube Plan Source Location loc Cube op String input Alias List String operations Multi Map Integer Logical Expression Plan expression Plans throws Frontend Exception foreach new plan Cogroup groupby new Cogroup plan Logical Plan inner Plan new Logical Plan Logical Relational Operator gen new Generate inner Plan inject Foreach Operator loc op foreach Get column attributes input relation Create Project Expression columns Based dimensions specified user specified columns attached Cube Dimension Rollup Dimension rest pushed List Operator inp Opers foreach get Plan get Predecessors foreach List Logical Expression Plan Expr Plan new Array List Logical Expression Plan Operator oper inp Opers Logical Schema schema new Logical Schema schema Logical Relational Operator oper get Schema schema null Array List Logical Field Schema fields Array List Logical Field Schema schema get Fields int fields size Logical Expression Plan l Eplan new Logical Expression Plan new Project Expression l Eplan fields get alias null gen Expr Plan add l Eplan iterate operations generate corresponding Fs int oper Idx oper Idx operations size oper Idx List Logical Expression Plan lexp Plan List new Array List Logical Expression Plan List Logical Expression lexp List new Array List Logical Expression lexp Plan List add expression Plans get oper Idx duplicates exists dimension list exception thrown check Duplicate Project lexp Plan List Construct Project Expression Logical Expression Plans lexp List get Project Exp List lexp Plan List gen int lexp List size Retain columns needs pushed Remove dimension columns input column list attached Cube Dimension int j j Expr Plan size j Logical Expression lexp Logical Expression Expr Plan get j get Sources get String col Alias Project Expression lexp List get get Col Alias col Alias null col Alias Project Expression lexp List get get Field Schema alias String proj Exp Alias null try proj Exp Alias Project Expression lexp get Col Alias catch Class Cast Exception e projection User Func Expr ignore continue till next Proj Expr encountered continue col Alias equals proj Exp Alias true Expr Plan remove j else projected exp alias namespaced alias proj Exp Alias last Index proj Exp Alias proj Exp Alias substring proj Exp Alias last Index proj Exp Alias length col Alias equals proj Exp Alias true Expr Plan remove j Create user specified dimensions Logical Expression Plan uexp Plan new Logical Expression Plan operations get oper Idx equals new User Func Expression uexp Plan new Func Spec Cube Dimensions class get Name lexp List else new User Func Expression uexp Plan new Func Spec Rollup Dimensions class get Name lexp List Logical Expression Plan lexp lexp Plan List Iterator Operator lexp get Operators Next uexp Plan add next Add logical expression plan contains dependent attributes pushed input columns Expr Plan add oper Idx uexp Plan operator User Func Expression set flatten flags List Boolean flatten Flags new Array List Boolean int idx idx Expr Plan size idx List Operator opers Expr Plan get idx get Sources Operator oper opers oper instanceof Project Expression flatten Flags add false else oper instanceof User Func Expression flatten Flags add true Generate Foreach operator creation String falias null try build Generate Op loc foreach Generate gen Expr Plan flatten Flags get User Defined Schema Expr Plan falias build Foreach Op loc foreach cube input Alias inner Plan catch Parser Validation Exception pve throw new Frontend Exception pve List Boolean inner Flags new Array List Boolean List String inp Aliases new Array List String inp Aliases add falias inner Flags add false Get output schema foreach operator reconstruct Logical Expression Plan dimensional attributes Multi Map Integer Logical Expression Plan expr Plans Copy new Multi Map Integer Logical Expression Plan Logical Expression Plan exp expression Plans values Logical Expression lexp Logical Expression exp get Sources get Logical Expression Plan ep Grp new Logical Expression Plan new Project Expression ep Grp lexp get Field Schema alias null groupby expr Plans Copy put ep Grp build group operator try return build Group Op loc Cogroup groupby op get Alias inp Aliases expr Plans Copy inner Flags null catch Parser Validation Exception pve throw new Frontend Exception pve User defined schema generate operator specified output schema used prefix dimensions namespace fields private List Logical Schema get User Defined Schema List Logical Expression Plan Expr Plan throws Frontend Exception List Logical Schema gen Output Schema new Array List Logical Schema int Expr Plan size List Operator opers Expr Plan get get Sources Operator oper opers add logical schema dimensions pushed predecessor cube rollup oper instanceof Project Expression Logical Schema output new Logical Schema output add Field new Logical Field Schema Project Expression oper get Col Alias null Data Type gen Output Schema add output else oper instanceof User Func Expression add logical schema dimensions specified cube rollup operator Logical Schema output new Logical Schema Operator op User Func Expression oper get Plan get Sinks output add Field new Logical Field Schema Project Expression op get Field Schema gen Output Schema add output return gen Output Schema private List Logical Expression get Project Exp List List Logical Expression Plan lexp Plan List Logical Relational Operator lro throws Frontend Exception List Logical Expression le List new Array List Logical Expression int lexp Plan List size Logical Expression Plan lexp lexp Plan List get Logical Expression lex Logical Expression lexp get Sources get Iterator Operator opers lexp get Operators Proj Expr initially attached Cube Op attach specified operator opers Next Operator oper opers next try Project Expression oper set Attached Relational Op lro catch Class Cast Exception cce throw new Frontend Exception Column project expected cce le List add lex return le List method connects predecessors cube operator foreach operator disconnects cube operator predecessors private void inject Foreach Operator Source Location loc Cube op foreach throws Frontend Exception connect foreach operator predecessors cube operator List Operator opers op get Plan get Predecessors op Operator oper opers Operator Plan foreach Plan foreach get Plan foreach Plan connect oper Operator foreach disconnect cube operator plan opers foreach get Plan get Predecessors foreach Operator lop opers List Operator succs lop get Plan get Successors lop Operator succ succs succ instanceof Cube succ get Plan disconnect lop succ succ get Plan remove succ methods dimensions specified user duplicates private void check Duplicate Project List Logical Expression Plan l Expr Plan throws Frontend Exception int l Expr Plan size int j j l Expr Plan size j Logical Expression outer Logical Expression l Expr Plan get get Sources get Logical Expression inner Logical Expression l Expr Plan get j get Sources get String Col Alias Project Expression outer get Col Alias String Col Alias Project Expression inner get Col Alias Col Alias null Col Alias outer get Field Schema alias Col Alias null Col Alias inner get Field Schema alias Col Alias equals Col Alias true l Expr Plan remove j throw new Frontend Exception Duplicate dimensions detected Dimension name Col Alias Cogroup create Group Op return new Cogroup plan String build Group Op Source Location loc Cogroup op String alias List String input Aliases Multi Map Integer Logical Expression Plan expression Plans gt List Boolean inner Flags String partitioner throws Parser Validation Exception gt input Aliases size throw new Parser Validation Exception int Stream loc Collected group supported single input List Logical Expression Plan expr Plans expression Plans get Logical Expression Plan expr Plan expr Plans Iterator Operator expr Plan get Operators Next next instanceof Project Expression throw new Parser Validation Exception int Stream loc Collected group supported columns star projection boolean flags new boolean inner Flags size int inner Flags size flags inner Flags get op set Expression Plans expression Plans op set Group Type gt op set Inner Flags flags alias build Op loc op alias input Aliases partitioner try new Project Star Expander op get Plan visit op new Proj Star Udf Expander op get Plan visit op new Schema Resetter op get Plan true visit op catch Frontend Exception e throw new Parser Validation Exception int Stream loc e return alias String build Load Op Source Location loc String alias String filename Func Spec func Spec Logical Schema schema throws Parser Validation Exception String absolute Path Load Func lo Func try Load Load Func class default properties func Spec null Fallback Storage Load Func specified properties func Spec func Spec null new Func Spec Context get Properties get Property Configuration Storage class get Name func Spec lo Func Load Func Context instantiate Func Spec func Spec String file Name Key Query Parser Utils construct File Name Signature filename func Spec load Index absolute Path file Name Map get file Name Key absolute Path null absolute Path lo Func relative Absolute Path filename Query Parser Utils get Current Dir Context absolute Path null lo Func instanceof Non Load Func Query Parser Utils set Hdfs Servers absolute Path Context file Name Map put file Name Key absolute Path catch Exception ex throw new Parser Validation Exception int Stream loc ex File Spec loader new File Spec absolute Path func Spec Load op new Load loader schema plan Configuration Util Configuration Context get Properties lo Func alias new Operator Key op set Tmp Load false Check store plan already load depends add input alias List String input Aliases new Array List String Get list stores stores sinks plan already got successors Iterator Operator itr plan get Operators List Store stores new Array List Store itr Next Operator lop itr next lop instanceof Store stores add Store lop Store store stores String ifile op get File Spec get File Name String ofile store get File Spec get File Name ofile equals ifile input Aliases add store get Alias return build Op loc op alias input Aliases null private String build Op Source Location loc Logical Relational Operator op String alias String input Alias String partitioner throws Parser Validation Exception List String input Aliases new Array List String input Alias null input Aliases add input Alias return build Op loc op alias input Aliases partitioner private void check Duplicate Aliases List String input Aliases Source Location loc String op Name throws Parser Validation Exception Keep count number times Alias used Map Operator Integer input Aliases Map new Hash Map Operator Integer String input Aliases Operator pred operators get pred null throw new Parser Validation Exception int Stream loc Unrecognized alias input Aliases Map contains Key pred throw new Parser Validation Exception int Stream loc accept alias input op Name operation else input Aliases Map put pred private String build Op Source Location loc Logical Relational Operator op String alias List String input Aliases String partitioner throws Parser Validation Exception set Alias op alias set Partitioner op partitioner op set Location loc plan add op String input Aliases Operator pred operators get pred null throw new Parser Validation Exception int Stream loc Unrecognized alias plan connect pred op operators put op get Alias op Context set Last Alias op get Alias return op get Alias String build Store Op Source Location loc String alias String input Alias String filename Func Spec func Spec throws Parser Validation Exception try Load Store Func class default properties func Spec null Fallback Storage Store Func specified properties func Spec func Spec null new Func Spec Context get Properties get Property Configuration Storage class get Name func Spec Store Func Interface sto Func Store Func Interface Context instantiate Func Spec func Spec String file Name Key input Alias store Index String signature input Alias new Operator Key sto Func set Store Func Context Signature signature String absolute Path file Name Map get file Name Key absolute Path null absolute Path sto Func rel Abs Path Store Location filename Query Parser Utils get Current Dir Context absolute Path null Query Parser Utils set Hdfs Servers absolute Path Context file Name Map put file Name Key absolute Path File Spec file Spec new File Spec absolute Path func Spec boolean disambiguation Enabled Boolean parse Boolean Context get Properties get Property Configuration Configuration Store op new Store plan file Spec sto Func signature disambiguation Enabled return build Op loc op alias input Alias null catch Exception ex throw new Parser Validation Exception int Stream loc ex String build Assert Op Source Location loc Filter filter Op String alias String input Alias Logical Expression expr String comment Logical Expression Plan expr Plan throws Parser Validation Exception try filter Op set Alias input Alias List Logical Expression args new Array List Logical Expression Constant Expression lhs new Constant Expression expr Plan new Boolean true Constant Expression rhs new Constant Expression expr Plan new Boolean false Bin Cond Expression bin Cond new Bin Cond Expression expr Plan expr lhs rhs args add bin Cond Constant Expression const Expr new Constant Expression expr Plan comment null comment args add const Expr User Func Expression udf new User Func Expression expr Plan new Func Spec Assert class get Name args expr Plan add udf filter Op set Filter Plan expr Plan pass input Alias alias return build Filter Op loc filter Op input Alias input Alias expr Plan catch Exception ex throw new Parser Validation Exception int Stream loc ex private String new Operator Key return new Operator Key scope get Next Id String public static String new Operator Key String scope return new Operator Key scope get Next Id scope String create Foreach Op return new plan String build Foreach Op Source Location loc op String alias String input Alias Logical Plan inner Plan throws Parser Validation Exception op set Inner Plan inner Plan alias build Op loc op alias input Alias null try new Project Star Expander op get Plan visit op new Proj Star Udf Expander op get Plan visit op new Schema Resetter op get Plan true visit op catch Frontend Exception e throw new Parser Validation Exception int Stream loc e return alias Generate create Generate Op Logical Plan plan return new Generate plan void build Generate Op Source Location loc foreach Generate gen List Logical Expression Plan expr Plans List Boolean flatten Flags List Logical Schema schemas throws Parser Validation Exception boolean flags new boolean flatten Flags size int flatten Flags size flags flatten Flags get Logical Plan inner Plan Logical Plan gen get Plan Array List Operator inputs new Array List Operator int idx Logical Expression Plan expr Plan expr Plans Logical Expression expr Logical Expression expr Plan get Sources get Logical Schema user Schema schemas get idx user Schema null expr Field Schema Logical Schema ls new Logical Schema try ls add Field expr get Field Schema schemas set idx ls catch Frontend Exception e get exception schema set idx try process Expression Plan foreach inner Plan expr Plan inputs catch Frontend Exception e throw new Parser Validation Exception int Stream loc e gen set Output Plans expr Plans gen set Flatten Flags flags gen set User Defined Schema schemas inner Plan add gen gen set Location loc Operator input inputs inner Plan connect input gen Process expression plans Generate set inputs relation Project Expression param foreach param lp Logical plan Generate param plan One output expression Generate param inputs inputs Generate throws Frontend Exception private static void process Expression Plan foreach Logical Plan lp Logical Expression Plan plan Array List Operator inputs throws Frontend Exception Iterator Operator plan get Operators Next Operator sink next check Project Expression sink instanceof Project Expression Project Expression proj Expr Project Expression sink String col Alias proj Expr get Col Alias proj Expr Range Project Inner Load inner Load new Inner Load lp foreach new Project Expression proj Expr new Logical Expression Plan setup Inner Load Proj inner Load proj Expr lp inputs else col Alias null project using column alias Operator op proj Expr get Projected Operator op null means project expression refers relation nested foreach add relation inputs Generate set projection input int index inputs index op index index inputs size inputs add op proj Expr set Input Num index proj Expr set Col Num else means project expression refers column input foreach Add Inner Load use input Inner Load inner Load new Inner Load lp foreach col Alias setup Inner Load Proj inner Load proj Expr lp inputs else project expression referring column input using position eg Inner Load inner Load new Inner Load lp foreach proj Expr get Col Num setup Inner Load Proj inner Load proj Expr lp inputs private static void setup Inner Load Proj Inner Load inner Load Project Expression proj Expr Logical Plan lp Array List Operator inputs inner Load set Location proj Expr get Location proj Expr set Input Num inputs size proj Expr set Col Num Projection Expression Inner Load always lp add inner Load inputs add inner Load Operator build Nested Operator Input Source Location loc Logical Plan inner Plan foreach Map String Operator operators Logical Expression expr throws Non Project Expression Exception Parser Validation Exception Operator Plan plan expr get Plan Iterator Operator plan get Operators next instanceof Project Expression Next throw new Non Project Expression Exception int Stream loc expr Operator op null Project Expression proj Expr Project Expression expr String col Alias proj Expr get Col Alias col Alias null op operators get col Alias op null op create Inner Load loc inner Plan foreach col Alias op set Location proj Expr get Location inner Plan add op else op new Inner Load inner Plan foreach proj Expr get Col Num op set Location proj Expr get Location inner Plan add op return op private Inner Load create Inner Load Source Location loc Logical Plan inner Plan foreach String col Alias throws Parser Validation Exception try return new Inner Load inner Plan foreach col Alias catch Frontend Exception e throw new Parser Validation Exception int Stream loc e Streaming Command build Command Source Location loc String cmd List String ship Paths List String cache Paths List Handle Spec input Handle Specs List Handle Spec output Handle Specs String log Dir Integer limit throws Recognition Exception Streaming Command command null try command build Command loc cmd Process ship paths ship Paths null ship Paths size command set Ship Files false else String path ship Paths command add Path Ship path Process cache paths cache Paths null String path cache Paths command add Path Cache path Process input handle specs input Handle Specs null Handle Spec spec input Handle Specs command add Handle Spec Handle spec Process output handle specs output Handle Specs null Handle Spec spec output Handle Specs command add Handle Spec Handle spec error handling log Dir null command set Log Dir log Dir limit null command set Log Files Limit limit catch Exception e throw new Plan Generation Failure Exception int Stream loc e return command Streaming Command build Command Source Location loc String cmd throws Recognition Exception try String args Streaming Command Utils split Args cmd Streaming Command command new Streaming Command Context args Streaming Command Utils validator new Streaming Command Utils Context validator check Auto Ship Specs command args return command catch Parser Exception e throw new Invalid Command Exception int Stream loc cmd String build Stream Op Source Location loc String alias String input Alias Streaming Command command Logical Schema schema Int Stream input throws Recognition Exception try Stream op new Stream plan Context create Executable Manager command schema return build Op loc op alias input Alias null catch Exec Exception ex throw new Plan Generation Failure Exception input loc ex String build Native Op Source Location loc String input Jar String cmd List String paths String store Alias String load Alias Int Stream input throws Recognition Exception Native op try op new Native plan input Jar Streaming Command Utils split Args cmd Context add Jar input Jar String path paths Context add Jar path build Op loc op null new Array List String null Store operators get store Alias set Tmp Store true plan connect operators get store Alias op Load load Load operators get load Alias plan connect op load return load get Alias catch Parser Exception e throw new Invalid Command Exception input loc cmd catch Malformed Exception e throw new Invalid Path Exception input loc e void set Alias Logical Relational Operator op String alias alias null alias new Operator Key op set Alias alias void set Parallel Logical Relational Operator op Integer parallel parallel null op set Requested Parallelism parallel static void set Partitioner Logical Relational Operator op String partitioner partitioner null op set Custom Partitioner partitioner Func Spec build Func Spec Source Location loc String func Name List String args byte ft throws Recognition Exception String arg Array new String args size Func Spec func Spec new Func Spec func Name args size null args Array arg Array validate Func Spec loc func Spec ft return func Spec private void validate Func Spec Source Location loc Func Spec func Spec byte ft throws Recognition Exception switch ft case Function Type case Function Type case Function Type case Function Type case Function Type try Class func Context resolve Class Name func Spec get Class Name Function Type try Casting func ft catch Exception ex throw new Parser Validation Exception int Stream loc ex static String unquote String return String Utils unescape Input String substring length static int undollar String return Integer parse Int substring length Parse long given string static long parse Long String String num substring length return Long parse Long num Parse big integer formatted string e g Big Integer object static Big Integer parse Big Integer String String num substring length return new Big Integer num Parse big decimal formatted string e g Big Decimal object static Big Decimal parse Big Decimal String String num substring length return new Big Decimal num static Tuple build Tuple List Object obj List Tuple Factory tf Tuple Factory get Instance return tf new Tuple obj List static Data Bag create Data Bag Bag Factory bag Factory Bag Factory get Instance return bag Factory new Default Bag Build project expression foreach inner plan difference projection expression alias return whatever expression alias represents throws Recognition Exception Logical Expression build Project Expr Source Location loc Logical Expression Plan plan Logical Relational Operator op Map String Operator operators Map String Logical Expression Plan expr Plans String col Alias int col throws Recognition Exception Project Expression result null col Alias null Logical Expression Plan expr Plan expr Plans get col Alias expr Plan null Logical Expression Plan plan Copy null try plan Copy expr Plan deep Copy plan merge plan Copy catch Frontend Exception ex throw new Plan Generation Failure Exception int Stream loc ex projected alias actually expression alias projections represented expression n operator associated need set substitute expression alias expression op null Iterator Operator plan get Operators Next Operator next instanceof Project Expression Project Expression proj Expr Project Expression proj Expr set Attached Relational Op op Logical Expression root Logical Expression plan Copy get Sources get get root plan Logical Field Schema schema try schema root get Field Schema schema alias null schema alias col Alias catch Frontend Exception e Sometimes throw exception schema get return root else result new Project Expression plan col Alias operators get col Alias op result set Location loc return result result new Project Expression plan col op result set Location loc return result Build project expression projection present global plan nested foreach plan throws Parser Validation Exception Logical Expression build Project Expr Source Location loc Logical Expression Plan plan Logical Relational Operator rel Op int input String col Alias int col throws Parser Validation Exception Project Expression result null result col Alias null new Project Expression plan input col Alias null rel Op new Project Expression plan input col rel Op result set Location loc return result Build project expression projects range columns param loc param plan param rel Op param input param start Expr first expression projected null everything first projected param end Expr last expression projected null everything end projected return project expression throws Parser Validation Exception Logical Expression build Range Project Expr Source Location loc Logical Expression Plan plan Logical Relational Operator rel Op int input Logical Expression start Expr Logical Expression end Expr throws Parser Validation Exception start Expr null end Expr null reach parser enforcing condition String msg range project least one start end specified Use project star instead throw new Parser Validation Exception int Stream loc msg Project Expression proj new Project Expression plan input rel Op set first column projected start Expr null check Range Project Expr loc start Expr Project Expression start Proj Project Expression start Expr start Proj get Col Alias null try proj set Start Alias start Proj get Col Alias catch Frontend Exception e throw new Parser Validation Exception int Stream loc e else proj set Start Col start Proj get Col Num else proj set Start Col project first column set last column projected end Expr null check Range Project Expr loc end Expr Project Expression end Proj Project Expression end Expr end Proj get Col Alias null try proj set End Alias end Proj get Col Alias catch Frontend Exception e throw new Parser Validation Exception int Stream loc e else proj set End Col end Proj get Col Num else proj set End Col project last column try start Expr null plan remove Reconnect start Expr end Expr null plan remove Reconnect end Expr catch Frontend Exception e throw new Parser Validation Exception int Stream loc e return proj private void check Range Project Expr Source Location loc Logical Expression start Expr throws Parser Validation Exception start Expr instanceof Project Expression reach parser enforcing condition String msg range project simple column Found start Expr throw new Parser Validation Exception int Stream loc msg Logical Expression build Invoker Source Location loc Logical Expression Plan plan String package Name String func Name boolean Static List Logical Expression args throws Recognition Exception Logical Expression le new User Func Expression plan new Func Spec Invoker Generator class get Name args false true Static package Name func Name le set Location loc return le public static Class type Class Class clazz clazz Integer return Integer class else clazz Long return Long class else clazz Float return Long class else clazz Double return Long class else clazz Boolean return Long class else clazz Short return Short class else clazz Byte return Byte class else clazz Character return Character class else throw new Runtime Exception given primitive class clazz Logical Expression build Source Location loc Logical Expression Plan plan String func Name List Logical Expression args throws Recognition Exception Class func try func Context get Class Alias func Name Function Type try Casting func Function Type catch Exception e throw new Plan Generation Failure Exception int Stream loc e Func Spec func Spec Context get Func Spec Alias func Name Logical Expression le func Spec null func Name func get Name func Spec new Func Spec func Name point reached statement func Name case pass information along le new User Func Expression plan func Spec args false else le new User Func Expression plan func Spec args true le set Location loc return le private long get Next Id return get Next Id scope static Filter create Nested Filter Op Logical Plan plan return new Filter plan static Limit create Nested Limit Op Logical Plan plan return new Limit plan Build operator foreach inner plan Operator build Nested Filter Op Source Location loc Filter op Logical Plan plan String alias Operator input Op Logical Expression Plan expr op set Filter Plan expr build Nested Op loc plan op alias input Op return op Operator build Nested Distinct Op Source Location loc Logical Plan plan String alias Operator input Op Distinct op new Distinct plan build Nested Op loc plan op alias input Op return op Operator build Nested Limit Op Source Location loc Logical Plan plan String alias Operator input Op long limit Limit op new Limit plan limit build Nested Op loc plan op alias input Op return op Operator build Nested Limit Op Source Location loc Limit op Logical Plan plan String alias Operator input Op Logical Expression Plan expr op set Limit Plan expr build Nested Op loc plan op alias input Op return op Operator build Nested Cross Op Source Location loc Logical Plan plan String alias List Operator input Op List Cross op new Cross plan op set Nested true build Nested Op loc plan op alias input Op List return op private void build Nested Op Source Location loc Logical Plan plan Logical Relational Operator op String alias Operator input Op op set Location loc set Alias op alias plan add op plan connect input Op op private void build Nested Op Source Location loc Logical Plan plan Logical Relational Operator op String alias List Operator input Op List op set Location loc set Alias op alias plan add op Operator input Op input Op List plan connect input Op op static Sort create Nested Sort Op Logical Plan plan return new Sort plan type schema fields set type param sch static void set Bytearray Type Logical Schema sch Logical Field Schema fs sch get Fields fs type Data Type fs type Data Type fs schema null set Bytearray Type fs schema static create Nested Foreach Op Logical Plan plan return new plan Operator build Nested Sort Op Source Location loc Sort op Logical Plan plan String alias Operator input Op List Logical Expression Plan plans List Boolean asc Flags Func Spec fs op set Sort Col Plans plans asc Flags Empty int plans size asc Flags add true op set Ascending Cols asc Flags op set User Func fs build Nested Op loc plan op alias input Op return op Operator build Nested Foreach Op Source Location loc op Logical Plan plan String alias Operator input Op Logical Plan inner Plan throws Parser Validation Exception op set Inner Plan inner Plan build Nested Op loc plan op alias input Op return op Operator build Nested Project Op Source Location loc Logical Plan inner Plan foreach Map String Operator operators String alias Project Expression proj Expr List Logical Expression Plan expr Plans throws Parser Validation Exception Operator input null String col Alias proj Expr get Col Alias col Alias null Proj Expr refers name alias another operator col name Operator op operators get col Alias op null Proj Expr refers operator alias input op else Assuming Proj Expr refers column name Create Inner Load input create Inner Load loc inner Plan foreach col Alias input set Location proj Expr get Location else Proj Expr refers column number input new Inner Load inner Plan foreach proj Expr get Col Num input set Location proj Expr get Location Logical Plan lp new Logical Plan f inner plan f new inner Plan f set Inner Plan lp f set Location loc Generate gen new Generate lp boolean flatten new boolean expr Plans size List Operator inner Loads new Array List Operator expr Plans size Logical Expression Plan plan expr Plans Project Expression pe Project Expression plan get Sinks get String al pe get Col Alias Inner Load iload al null new Inner Load lp f pe get Col Num create Inner Load loc lp f al iload set Location pe get Location pe set Col Num pe set Input Num inner Loads size pe set Attached Relational Op gen inner Loads add iload gen set Output Plans expr Plans gen set Flatten Flags flatten lp add gen Operator il inner Loads lp add il lp connect il gen Connect inner load operators gen set Alias f alias inner Plan add input inner Plan add f inner Plan connect input f return f parse Group Type String hint Source Location loc throws Parser Validation Exception String modifier unquote hint modifier equals Ignore Case collected return else modifier equals Ignore Case regular return else modifier equals Ignore Case merge return else throw new Parser Validation Exception int Stream loc valid modifiers parse Join Type String hint Source Location loc throws Parser Validation Exception String modifier unquote hint modifier equals Ignore Case repl modifier equals Ignore Case replicated return else modifier equals Ignore Case hash modifier equals Ignore Case default return Join else modifier equals Ignore Case bloom return Join else modifier equals Ignore Case skewed return else modifier equals Ignore Case merge return else modifier equals Ignore Case merge sparse return else throw new Parser Validation Exception int Stream loc vaild modifiers void put Operator String alias Operator op operators put alias op public String get Last Rel Source Location loc throws Parser Validation Exception last Rel null throw new Parser Validation Exception int Stream loc Asked last relation relations defined return last Rel public String get Last Rel return last Rel
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical optimizer import java util Array List import java util Hash Set import java util List import java util Set import com google common base Preconditions import com google common collect Set Multimap import com google common collect Tree Multimap import org apache commons logging Log import org apache commons logging Log Factory import org apache impl Context import org apache newplan Operator Plan import org apache newplan logical rules Add import org apache newplan logical rules Column Map Key Prune import org apache newplan logical rules Filter Foreach import org apache newplan logical rules Filter Constant Calculator import org apache newplan logical rules Constant Calculator import org apache newplan logical rules Group Const Parallel Setter import org apache newplan logical rules Limit Optimizer import org apache newplan logical rules Load Type Cast Inserter import org apache newplan logical rules Merge Filter import org apache newplan logical rules Merge import org apache newplan logical rules Nested Limit Optimizer import org apache newplan logical rules Partition Filter Optimizer import org apache newplan logical rules Predicate Pushdown Optimizer import org apache newplan logical rules Push Flatten import org apache newplan logical rules Push Filter import org apache newplan logical rules Split Filter import org apache newplan logical rules Stream Type Cast Inserter import org apache newplan optimizer Plan Optimizer import org apache newplan optimizer Rule public class Logical Plan Optimizer extends Plan Optimizer private static final Log Log Factory get Log Logical Plan Optimizer class private static enum Rules Report Key private Set String Rules null private boolean Rules Disabled false private Set Multimap Rules Report Key String rules Report Tree Multimap create private Context pc null public Logical Plan Optimizer Operator Plan p int iterations Set String turn Rules p iterations turn Rules null Create new Logical Plan Optimizer param p Plan optimize param iterations Maximum number optimizer iterations param turn Rules Optimization rules disable disables non mandatory rules null enables rules param pc Context object public Logical Plan Optimizer Operator Plan p int iterations Set String turn Rules Context pc super p null iterations pc pc Rules turn Rules null new Hash Set String turn Rules Rules contains Rules Disabled true rule Sets build Rule Sets info rules Report add Listeners protected List Set Rule build Rule Sets List Set Rule ls new Array List Set Rule Logical expression simplifier Set Rule new Hash Set Rule add constant calculator rule Rule r new Filter Constant Calculator Constant Calculator pc check Add Rule r ls add r new Constant Calculator Constant Calculator pc check Add Rule r ls add Type Cast Inserter set set rules Insert Foreach dedicated casting load new Hash Set Rule add split filter rule r new Load Type Cast Inserter Load Type Cast Inserter check Add Rule r r new Stream Type Cast Inserter Stream Type Cast Inserter check Add Rule r Empty ls add Split Set set rules splitting operators move operators new Hash Set Rule add split filter rule r new Split Filter Split Filter check Add Rule r Empty ls add Push Set set moving operators new Hash Set Rule r new Push Filter Push Filter check Add Rule r r new Filter Foreach Push Filter check Add Rule r Empty ls add Merge Set Set merges operators move new Hash Set Rule check Add Rule r add merge filter rule r new Merge Filter Merge Filter check Add Rule r Empty ls add Partition filter set set rules push partition filter Load Func new Hash Set Rule Optimize partition filter r new Partition Filter Optimizer Partition Filter Optimizer check Add Rule r Empty ls add Predicate pushdown set set rules push filter conditions Load Func new Hash Set Rule Optimize partition filter r new Predicate Pushdown Optimizer Predicate Pushdown Optimizer check Add Rule r Empty ls add Push Flatten set new Hash Set Rule Add Push Flatten r new Push Flatten Push Flatten check Add Rule r Empty ls add Prune Set set used pruning columns maps new Hash Set Rule Add Prune Map Filter r new Column Map Key Prune Column Map Key Prune check Add Rule r Empty ls add Add set new Hash Set Rule Add Add r new Add Add check Add Rule r Empty ls add Add Merge set new Hash Set Rule Add Add r new Merge Merge check Add Rule r Empty ls add set parallism cogroup group constant new Hash Set Rule r new Group Const Parallel Setter Group Const Parallel Setter check Add Rule r Empty ls add Limit Set set rules push limit new Hash Set Rule Optimize limit r new Limit Optimizer Limit Optimizer check Add Rule r Empty ls add Nested Limit Set set rules push nested limit new Hash Set Rule Optimize limit r new Nested Limit Optimizer Nested Limit Optimizer check Add Rule r Empty ls add return ls Add rule rule Set mandatory disabled param rule Set Set rule added disabled param rule Rule potentially add private void check Add Rule Set Rule rule Set Rule rule Preconditions check Argument rule Set null Preconditions check Argument rule null rule get Name null rule Mandatory rule Set add rule rules Report put Rules Report Key rule get Name else Rules Disabled Rules contains rule get Name rule Set add rule rules Report put Rules Report Key rule get Name else rules Report put Rules Report Key rule get Name private void add Listeners add Plan Transform Listener new Schema Patcher add Plan Transform Listener new Projection Patcher
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical optimizer import java io Exception import java io Print Stream import java util Array List import java util List import org apache impl logical Layer Frontend Exception import org apache impl plan Visitor Exception import org apache impl util Multi Map import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical expression Logical Expression Plan import org apache newplan logical relational Cogroup import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split Output import org apache newplan logical relational Logical Plan visitor mechanism printing logical plan public class Logical Plan Printer extends Plan Visitor private Print Stream Stream null private byte get Bytes private byte get Bytes private byte Bar n get Bytes private byte Sep get Bytes private byte Sep n get Bytes static public String protected Array List byte tabs protected boolean reverse false param ps Print Stream output plan information param plan Logical plan print public Logical Plan Printer Operator Plan plan Print Stream ps throws Frontend Exception plan ps new Array List byte private Logical Plan Printer Operator Plan plan Print Stream ps Array List byte tabs throws Frontend Exception super plan null Stream ps tabs tabs plan instanceof Logical Plan reverse false else reverse true Override public void visit throws Frontend Exception try depth First catch Exception e throw new Frontend Exception e protected void depth First throws Frontend Exception Exception List Operator leaves reverse leaves plan get Sources else leaves plan get Sinks Operator leaf leaves write Tabs leaf String n get Bytes depth First leaf private void write Tabs byte data throws Exception byte tab tabs Stream write tab Stream write data private void depth First Operator node throws Frontend Exception Exception print Node Plan node List Operator operators reverse operators plan get Successors node else operators plan get Predecessors node operators null return List Operator predecessors new Array List Operator operators int Operator pred predecessors write Tabs Bar write Tabs Sep Stream write pred String n get Bytes predecessors size tabs add else tabs add depth First pred tabs remove tabs size private void print Plan Operator Plan lp throws Visitor Exception Exception write Tabs Sep tabs add lp null Logical Plan Printer printer new Logical Plan Printer lp Stream tabs printer visit tabs remove tabs size private void print Node Plan Operator node throws Frontend Exception Exception node instanceof Filter print Plan Filter node get Filter Plan else node instanceof Limit print Plan Limit node get Limit Plan else node instanceof print Plan node get Inner Plan else node instanceof Cogroup Multi Map Integer Logical Expression Plan plans Cogroup node get Expression Plans int plans key Set Visit associated plans Operator Plan plan plans get print Plan plan else node instanceof Join Multi Map Integer Logical Expression Plan plans Join node get Expression Plans int plans key Set Visit associated plans Operator Plan plan plans get print Plan plan else node instanceof Rank Visit fields rank Operator Plan plan Rank node get Rank Col Plans print Plan plan else node instanceof Sort Operator Plan plan Sort node get Sort Col Plans print Plan plan else node instanceof Split Output print Plan Split Output node get Filter Plan else node instanceof Generate Operator Plan plan Generate node get Output Plans print Plan plan
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Iterator import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan Plan Walker visitor logical plans public abstract class Logical Relational Nodes Visitor extends Plan Visitor protected Logical Relational Nodes Visitor Operator Plan plan Plan Walker walker throws Frontend Exception super plan walker Iterator Operator iter plan get Operators iter Next iter next instanceof Logical Relational Operator throw new Frontend Exception Logical Plan Visitor visit logical plan public void visit Load load throws Frontend Exception public void visit Filter filter throws Frontend Exception public void visit Store store throws Frontend Exception public void visit Join join throws Frontend Exception public void visit foreach throws Frontend Exception public void visit Generate gen throws Frontend Exception public void visit Inner Load load throws Frontend Exception public void visit Cube cube throws Frontend Exception public void visit Cogroup lo Cogroup throws Frontend Exception public void visit Split lo Split throws Frontend Exception public void visit Split Output lo Split Output throws Frontend Exception public void visit Union lo Union throws Frontend Exception public void visit Sort lo Sort throws Frontend Exception public void visit Rank lo Rank throws Frontend Exception public void visit Distinct lo Distinct throws Frontend Exception public void visit Limit lo Limit throws Frontend Exception public void visit Cross lo Cross throws Frontend Exception public void visit Stream lo Stream throws Frontend Exception public void visit Native native throws Frontend Exception
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Hash Set import java util List import java util Map import java util Set import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan logical expression Logical Expression import org apache newplan logical relational Logical Schema Logical Field Schema import com google common collect Sets Logical representation relational operators Relational operators schema abstract public class Logical Relational Operator extends Operator protected Logical Schema schema protected int requested Parallelism protected String alias protected int line Num Name custom Partitioner one used set null otherwise protected String Custom Partitioner null Hash Set indicate whether option Join Type pinned user chosen runtime optimizer protected Hash Set Integer Pinned Options new Hash Set Integer param name operator param plan operator public Logical Relational Operator String name Operator Plan plan name plan param name operator param plan operator param rp requested parallelism public Logical Relational Operator String name Operator Plan plan int rp super name plan requested Parallelism rp Get schema output relational operator merely return schema variable schema yet set attempt construct Therefore abstract since operator need construct schema differently return schema throws Frontend Exception abstract public Logical Schema get Schema throws Frontend Exception public void set Schema Logical Schema schema schema schema Reset schema null next time get Schema called schema regenerated scratch public void reset Schema schema null Erase cached uid regenerate uid regenerating schema process currently used Implicit Split Insert insert split invalidate uids plan public void reset Uid Get requested Parallelism operator return requested Parallelsim public int get Requested Parallelism return requested Parallelism Get alias operator Latin operator sort alias store split alias stored split Note alias guaranteed unique single operator return alias public String get Alias return alias public void set Alias String alias alias alias public void set Requested Parallelism int parallel requested Parallelism parallel Get line number submitted Latin script operator occurred return line number public int get Line Number return line Num used unit tests back door cheat set schema without calculate never called production code tests param schema set public void never Use Real Set Schema Logical Schema schema schema schema basic equality checks two relational operators Equality defined equal schemas predecessors equal intended used operators equals methods param Logical Relational Operator compare predecessors return true Equals methods node predecessor returns true invoked predecessor throws Frontend Exception protected boolean check Equality Logical Relational Operator throws Frontend Exception null return false Logical Schema get Schema Logical Schema os get Schema null os null intentionally blank else null os null one null one n return false else Equal os return false return true public String String String Builder msg new String Builder alias null msg append alias msg append Name get Name Schema schema null msg append schema else msg append null msg append annotations null Map Entry String Object entry annotations entry Set msg append entry return msg String public String get Custom Partitioner return Custom Partitioner public void set Custom Partitioner String custom Partitioner Custom Partitioner custom Partitioner public void pin Option Integer opt Pinned Options add opt public boolean Pinned Option Integer opt return Pinned Options contains opt private static void add Field Schema Uids Set Set Long uids Logical Field Schema lfs uids add lfs uid lfs uid Logical Expression get Next Uid Logical Schema ls lfs schema ls null Logical Field Schema lfs ls get Fields add Field Schema Uids Set uids lfs case operation manipualtes columns foreach join possible multiple columns derived column thus duplicate detects case resets uid See information param fss list Logical Field Schemas check uids public static void fix Duplicate Uids List Logical Field Schema fss Set Long uids Sets new Hash Set Logical Field Schema lfs fss Logical Relational Operator add Field Schema Uids Set uids lfs
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Array List import java util Hash Set import java util Iterator import java util List import org apache Exception import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan logical expression Logical Expression Schema logical perspective public class Logical Schema public static class Logical Field Schema public String alias public byte type public long uid public Logical Schema schema public Logical Field Schema String alias Logical Schema schema byte type alias schema type public Logical Field Schema Logical Field Schema fs fs alias fs schema fs type fs uid public Logical Field Schema String alias Logical Schema schema byte type long uid alias alias type type schema schema uid uid Equality defined type either schema null schema Alias uid checked public boolean Equal Object return Equal false Equality defined type either schema null schema compare Alias argument set true alias also compared param param compare Alias return true equal public boolean Equal Object boolean compare Alias instanceof Logical Field Schema Logical Field Schema ofs Logical Field Schema compare Alias alias null alias equals ofs alias return false type ofs type return false schema null ofs schema null return true schema null return false else return schema Equal ofs schema compare Alias else return false public String String boolean verbose String uid String verbose uid String uid String alias Print alias null alias Print alias type Data Type schema null return alias Print uid String bag return alias Print uid String bag schema String verbose else type Data Type schema null return alias Print uid String tuple return alias Print uid String tuple schema String verbose else type Data Type schema null return alias Print uid String map else return alias Print uid String map schema String verbose return alias Print uid String Data Type find Type Name type public String String return String true Give new value uid uid field schema fields schema inner schema public void stamp Field Schema uid uid Logical Expression get Next Uid schema null Logical Field Schema fs schema get Fields fs stamp Field Schema private boolean compatible Logical Field Schema uid Field Schema uid Field Schema null return false schema null uid Field Schema schema null schema null uid Field Schema schema null return false schema null schema size uid Field Schema schema size return false int schema size boolean comp schema get Field compatible uid Field Schema schema get Field comp return false return true Check fs equal fs regard type public static boolean type Match Logical Field Schema fs Logical Field Schema fs fs null fs null return true fs null fs null return false fs type fs type return false Data Type Complex fs type Logical Schema fs schema Logical Schema fs schema null null return true null null return false size size return false int size type Match get Field get Field return false return true Adds uid Field Schema argument Field Schema argument null stamps Field Schema uid param uid Field Schema return Field Schema throws Frontend Exception public Logical Schema Logical Field Schema merge Uid Logical Field Schema uid Field Schema throws Frontend Exception uid Field Schema null compatible uid Field Schema uid uid Field Schema uid schema null int schema size schema get Field merge Uid uid Field Schema schema get Field return uid Field Schema else uid Field Schema null stamp Field Schema else uid uid Field Schema uid schema null int schema size schema get Field stamp Field Schema Logical Field Schema cloned Uid Copy clone Uid return cloned Uid Copy Rest uid fieldschema inner schema public void reset Uid uid schema null schema reset Uid public Logical Field Schema clone Uid Logical Field Schema result Fs null schema null result Fs new Logical Field Schema null null type uid else Logical Schema new Schema new Logical Schema result Fs new Logical Field Schema null new Schema type uid int schema size Logical Field Schema fs schema get Field clone Uid new Schema add Field fs return result Fs public Logical Field Schema deep Copy Logical Field Schema new Fs new Logical Field Schema alias null alias null schema null schema deep Copy null type uid return new Fs Compare two field schema equality param relax Inner true n check inner tuple schemas param relax Alias true n check aliases return true Field Schemas equal false otherwise public static boolean equals Logical Field Schema fschema Logical Field Schema fother boolean relax Inner boolean relax Alias fschema null fother null return false fschema type fother type return false relax Alias fschema alias null fother alias null good else fschema alias null return false else fschema alias equals fother alias return false relax Inner Data Type Schema Type fschema type n comparison embedded schemas null cause Schema equals return false even though want view true fschema schema null fother schema null compare recursively using schema Logical Schema equals fschema schema fother schema false relax Alias return false return true Check Field Schema Fs castable Fs param Fs param Fs return true castable public static boolean castable Logical Field Schema Fs Logical Field Schema Fs Fs null Fs null return false Fs null return false Fs null return false byte Type Fs type byte Type Fs type Data Type Schema Type Fs type Type Data Type good else Type Type n comparison either input inner schema null empty inner schemas null cause Schema equals return false even though want view true Fs schema null Fs schema size Fs schema null Fs schema null compare recursively using schema Logical Schema castable Fs schema Fs schema return false else return false else Type Type good else Type Data Type Type Data Type Type Data Type Data Type Number Type Type good else Data Type Number Type Type Type Data Type Type Data Type Data Type Number Type Type Type Data Type good else Type Data Type Type Data Type Data Type Number Type Type Type Data Type good else Type Data Type good else return false return true Merge two Logical Field Schema behavior merge depends mode mode Merge Type Load Merge Type Load Inner take left side compatible otherwise throw exception mode Merge Type Union Inner type throw exception end null inner schema mode Merge Type Union take specific type param fs Load Foreach fs user declared schema Union fs left side param fs Load Foreach fs inferred schema Union fs left side param mode merge mode public static Logical Field Schema merge Logical Field Schema fs Logical Field Schema fs Merge Mode mode throws Frontend Exception deal null schema mode Merge Mode Load fs null throw new Frontend Exception cast null fs null return fs deep Copy else mode Merge Mode Load Inner fs null return null fs null return fs deep Copy else Union Union Inner fs null fs null return null String merged Alias byte merged Type Data Type Logical Schema merged Sub Schema null Infer merged data type mode Merge Mode Union Inner fs type fs type n merge inner schema different type union throw exception throw new Frontend Exception Incompatible field schema left fs String false right fs String false else merged Type fs type else mode Merge Mode Load mode Merge Mode Load Inner fs type Data Type fs type Data Type declared schema type part merged Type fs type else Data Type castable fs type fs type throw new Frontend Exception Incompatible field schema declared fs String false infered fs String false else merged Type fs type compatible type take declared type else Union schema fs type Data Type merged Type fs type else fs type Data Type merged Type fs type else Take specific type merged Type Data Type merge Type fs type fs type merged Type Data Type True incompatible set bytearray merged Type Data Type fs alias null merged Alias fs alias else fs alias null merged Alias fs alias else merged Alias merge Name Spaced Alias fs alias fs alias merged Alias null merged Alias fs alias Data Type Schema Type merged Type mode Merge Mode Union try fs type Data Type fs schema null merged Sub Schema fs schema deep Copy else fs type Data Type fs schema null merged Sub Schema fs schema deep Copy else merged Sub Schema Logical Schema merge fs schema fs schema Merge Mode Union Inner catch Frontend Exception e fs type Data Type fs type Data Type create empty tuple subschema merged Sub Schema new Logical Schema merged Sub Schema add Field new Logical Field Schema null new Logical Schema Data Type else fs type Data Type fs type Data Type merged Sub Schema new Logical Schema inner schema compatible merged Sub Schema set null else mode Merge Mode Union Inner merged Sub Schema Logical Schema merge fs schema fs schema Merge Mode Union Inner else Load Load Inner fs type Data Type merged Sub Schema fs schema else try check compatibility merged Sub Schema Logical Schema merge fs schema fs schema Merge Mode Load Inner catch Frontend Exception e throw new Frontend Exception Incompatible field schema left fs String false right fs String false Logical Field Schema merged new Logical Field Schema merged Alias merged Sub Schema merged Type return merged public static boolean Equal Unless Unknown Logical Field Schema fs Logical Field Schema fs throws Frontend Exception fs type Data Type return true else fs type Data Type return true else fs type fs type Data Type Complex fs type return Logical Schema Equal Unless Unknown fs schema fs schema else return true else return false Old field schema require tuple schema inside bag required method fill gap public void normalize type Data Type schema null Check tuple field schema size schema get Field type Data Type Logical Schema tuple Schema new Logical Schema Logical Field Schema inner Fs schema get Fields tuple Schema add Field inner Fs schema new Logical Schema schema add Field new Logical Field Schema null tuple Schema Data Type schema null Logical Field Schema fs schema get Fields fs normalize private List Logical Field Schema fields public Logical Schema fields new Array List Logical Field Schema Reset uids fieldschema schema contains public void reset Uid Logical Field Schema fs fields fs reset Uid Recursively compare two schemas check input schema cast cast schema param Sch schema cast input param Sch schema cast operator return true castable public static boolean castable Logical Schema Sch Logical Schema Sch null castable Sch null Sch null return false otherwise Sch null return false Cast specific type good Sch null return true Sch size Sch size return false Iterator Logical Field Schema Sch fields iterator Iterator Logical Field Schema j Sch fields iterator Next iterate number fields cast Logical Field Schema Fs next Logical Field Schema Fs j next Compare recursively using field schema Logical Field Schema castable Fs Fs return false return true Add field schema param field added schema public void add Field Logical Field Schema field fields add field Fetch field alias param alias return field associated alias null field throws Frontend Exception public Logical Field Schema get Field String alias throws Frontend Exception Logical Field Schema result null first look exact match Logical Field Schema fs fields fs alias null fs alias equals alias result null result fs else String Builder sb new String Builder Found one match result alias fs alias throw new Frontend Exception sb String result null return result exact match found look matches scoped aliases Logical Field Schema fs fields fs alias null fs alias matches alias result null result fs else String Builder sb new String Builder Found one match result alias fs alias throw new Frontend Exception sb String return result Given alias name find associated Logical Field Schema exact name found see field matches part namespaced alias eg given alias nm schema b return Field Schema given alias nm schema nm b return null param alias Alias look return Logical Field Schema null alias tuple public Logical Field Schema get Field Sub Name Match String alias throws Frontend Exception alias null return null Logical Field Schema fs get Field alias fs null return fs fs null final String sep Array List Logical Field Schema matched Field Schemas new Array List Logical Field Schema alias contains sep Logical Field Schema field fields alias ends sep field alias matched Field Schemas add field matched Field Schemas size boolean Next false String Builder sb new String Builder Found one sub alias name match Logical Field Schema match Fs matched Field Schemas Next sb append else Next true sb append match Fs alias int err Code throw new Frontend Exception sb String err Code Exception else matched Field Schemas size fs matched Field Schemas get return fs public int get Field Position String alias Logical Field Schema fs null try fs get Field alias catch Frontend Exception e fs null return return fields index fs Fetch field field number param field Num field number fetch return field public Logical Field Schema get Field int field Num return fields get field Num Get fields return list fields public List Logical Field Schema get Fields return fields Get size schema return size public int size return fields size Two schemas equal equal size fields schemas considered order equal function compare alias fields public boolean Equal Object return Equal false Two schemas equal equal size fields schemas considered order equal compare Alias argument set true alias fields also compared param param compare Alias return true equal public boolean Equal Object boolean compare Alias null instanceof Logical Schema Logical Schema os Logical Schema size os size return false int size get Field Equal os get Field compare Alias return false return true else return false Look index field contains specified uid param uid uid look return index field found public int find Field long uid int size Logical Field Schema f get Field field uid return field f uid uid return field schema check schema f schema null f schema find Field uid return return public static enum Merge Mode Load Load Inner Union Union Inner Merge two schemas param Load user declared schema Union left side param Load infered schema Union right side param mode merge schema Load Foreach Union Load Foreach always take compatible set user defined schema union take specific type numeric string take string case type mismatch expect Type Checking Visitor fill gap later return merged schema null merge fails public static Logical Schema merge Logical Schema Logical Schema Merge Mode mode throws Frontend Exception schema null take party null null mode Merge Mode Load mode Merge Mode Load Inner null return deep Copy else null return deep Copy else return null else Union Union Inner return null return null size size mode Merge Mode Union union incompatible type result null schema return null else throw new Frontend Exception Incompatible schema left String false right String false Logical Schema merged Schema new Logical Schema int size Logical Field Schema fs get Field Logical Field Schema fs get Field Logical Field Schema merged Logical Field Schema merge fs fs mode merged Schema add Field merged return merged Schema public static boolean Equal Unless Unknown Logical Schema Logical Schema throws Frontend Exception null return true else null return true else size size return false else int size Logical Field Schema Equal Unless Unknown get Field get Field return false return true public String String boolean verbose String Builder str new String Builder Logical Field Schema field fields str append field String verbose fields size str delete Char str length return str String public String String return String true public Logical Schema merge Uid Logical Schema uid Schema throws Frontend Exception uid Schema null size uid Schema size throw new Frontend Exception Structure schema change Original uid Schema int size get Field merge Uid uid Schema get Field return uid Schema else Logical Schema cloned Uid Copy new Logical Schema int size get Field stamp Field Schema cloned Uid Copy add Field get Field clone Uid return cloned Uid Copy public Logical Schema deep Copy Logical Schema new Schema new Logical Schema int size new Schema add Field get Field deep Copy return new Schema Merges collection schemas using column aliases unlike merge Schema functions merge using positions Schema merged types incompatible per Data Type merge Type Tuples Bags Sub Schemas equal considered compatible param schemas list schemas merged using column alias return merged schema public static Logical Schema merge Schemas Alias List Logical Schema schemas throws Frontend Exception Logical Schema merged Schema null list schemas currently merged used error message Array List Logical Schema merged Schemas new Array List Logical Schema schemas size Logical Schema sch schemas merged Schema null merged Schema sch deep Copy merged Schemas add sch continue try merged Schema merge Schema Alias merged Schema sch merged Schemas add sch catch Frontend Exception e String msg Error merging schema sch merged schema merged Schema schemas merged Schemas throw new Frontend Exception msg e return merged Schema Merges two schemas using column aliases unlike merge Schema functions merge using positions Schema merged types incompatible per Data Type merge Type Tuples Bags Sub Schemas equal considered compatible public static Logical Schema merge Schema Alias Logical Schema schema Logical Schema schema throws Frontend Exception Logical Schema merged Schema new Logical Schema Hash Set Logical Field Schema schema cols Added new Hash Set Logical Field Schema add merge fields present first schema Logical Field Schema fs schema get Fields check Null Alias fs schema Logical Field Schema fs schema get Field Sub Name Match fs alias fs null schema cols Added contains fs alias corresponds multiple fields schema lookup schema throw appropriate error schema get Field Sub Name Match fs alias schema cols Added add fs Logical Field Schema merged Fs Logical Field Schema merge fs fs Merge Mode Union merged Fs alias merge Name Spaced Alias fs alias fs alias merged Fs alias null merged Fs alias fs alias merged Schema add Field merged Fs else merged Schema add Field new Logical Field Schema fs add schemas nd schema already present merged schema Logical Field Schema fs schema get Fields check Null Alias fs schema schema cols Added contains fs merged Schema add Field new Logical Field Schema fs return merged Schema private static void check Null Alias Logical Field Schema fs Logical Schema schema throws Frontend Exception fs alias null throw new Frontend Exception Schema field null alias merged using alias Schema schema one aliases form nm str form str returns str private static String merge Name Spaced Alias String alias String alias throws Frontend Exception alias equals alias return alias alias ends alias return alias alias ends alias return alias aliases different alias merged return null Recursively compare two schemas equality param schema param param relax Inner true inner schemas checked param relax Alias true aliases checked return true schemas equal false otherwise public static boolean equals Logical Schema schema Logical Schema boolean relax Inner boolean relax Alias null equal schema null null return true otherwise schema null null return false schema size size return false Iterator Logical Field Schema schema fields iterator Iterator Logical Field Schema j fields iterator Next Logical Field Schema Fs next Logical Field Schema Fs j next relax Alias Fs alias null Fs alias null good else Fs alias null return false else Fs alias equals Fs alias return false Fs type Fs type return false relax Inner Logical Field Schema equals Fs Fs false relax Alias Compare recursively using field schema return false return true Old schema require tuple schema inside bag required method fill gap public void normalize Logical Field Schema fs get Fields fs normalize
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java io Exception import java util Array List import java util Arrays import java util Deque import java util Hash Map import java util Iterator import java util Linked List import java util List import java util Map import java util Random import org apache commons logging Log import org apache commons logging Log Factory import org apache Func Spec import org apache Exception import org apache Resource Schema import org apache Store Resources import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Logical Physical Translator Exception import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Constant Expression import org apache backend hadoop executionengine physical Layer expression Operators Project import org apache backend hadoop executionengine physical Layer expression Operators User Comparison Func import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Collected Group import org apache backend hadoop executionengine physical Layer relational Operators Counter import org apache backend hadoop executionengine physical Layer relational Operators Cross import org apache backend hadoop executionengine physical Layer relational Operators Distinct import org apache backend hadoop executionengine physical Layer relational Operators Join import org apache backend hadoop executionengine physical Layer relational Operators Filter import org apache backend hadoop executionengine physical Layer relational Operators import org apache backend hadoop executionengine physical Layer relational Operators Global Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Limit import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Merge Cogroup import org apache backend hadoop executionengine physical Layer relational Operators Merge Join import org apache backend hadoop executionengine physical Layer relational Operators Native import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Rank import org apache backend hadoop executionengine physical Layer relational Operators Skewed Join import org apache backend hadoop executionengine physical Layer relational Operators Sort import org apache backend hadoop executionengine physical Layer relational Operators Split import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer relational Operators Stream import org apache backend hadoop executionengine physical Layer relational Operators Union import org apache backend hadoop executionengine physical Layer relational Operators Packager Package Type import org apache data Data Type import org apache data Schema Tuple Class Generator Gen Context import org apache data Schema Tuple Frontend import org apache data Tuple import org apache data Tuple Factory import org apache impl Context import org apache impl builtin Cross import org apache impl io File Localizer import org apache impl io File Spec import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl logical Layer schema Schema Field Schema import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Plan Exception import org apache impl plan Visitor Exception import org apache impl util Compiler Utils import org apache impl util Linked Multi Map import org apache impl util Multi Map import org apache impl util Utils import org apache newplan Dependency Order Walker import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Walker import org apache newplan Reverse Dependency Order Walker Seen Chk import org apache newplan Subtree Dependency Order Walker import org apache newplan logical Util import org apache newplan logical expression Exp Phy Translation Visitor import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Project Expression import org apache parser Source Location public class Log Phy Translation Visitor extends Logical Relational Nodes Visitor private static final Log Log Factory get Log Log Phy Translation Visitor class public Log Phy Translation Visitor Operator Plan plan throws Frontend Exception super plan new Dependency Order Walker plan current Plan new Physical Plan log Phy Map new Hash Map Operator Physical Operator current Plans new Linked List Physical Plan protected Map Operator Physical Operator log Phy Map protected Deque Physical Plan current Plans protected Physical Plan current Plan protected Node Id Generator node Gen Node Id Generator get Generator protected Context pc public void set Context Context pc pc pc public Map Operator Physical Operator get Log Phy Map return log Phy Map public Physical Plan get Physical Plan return current Plan Override public void visit Load lo Load throws Frontend Exception String scope last parameter set true assume files splittable due Load Store Refactor Load load new Load new Operator Key scope node Gen get Next Node Id scope lo Load get Load Func load add Original Location lo Load get Alias lo Load get Location load set File lo Load get File Spec load set Pc pc load set Result Type Data Type load set Signature lo Load get Signature load set Limit lo Load get Limit load set Tmp Load lo Load Tmp Load load set Cache Files lo Load get Load Func get Cache Files load set Ship Files lo Load get Load Func get Ship Files current Plan add load log Phy Map put lo Load load Load typically root operator multiquery case might store predecessor List Operator op lo Load get Plan get Predecessors lo Load Physical Operator op null log Phy Map get op get try current Plan connect load catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit Native lo Native throws Frontend Exception String scope Native po Native new Native new Operator Key scope node Gen get Next Node Id scope po Native add Original Location lo Native get Alias lo Native get Location po Native set Native Rjar lo Native get Native Jar po Native set Params lo Native get Params po Native set Result Type Data Type log Phy Map put lo Native po Native current Plan add po Native List Operator op lo Native get Plan get Predecessors lo Native Physical Operator op null log Phy Map get op get else int err Code String msg find predecessor Native throw new Logical Physical Translator Exception msg err Code Exception try current Plan connect po Native catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit Filter filter throws Frontend Exception String scope System err println Entering Filter Filter po Filter new Filter new Operator Key scope node Gen get Next Node Id scope filter get Requested Parallelism po Filter add Original Location filter get Alias filter get Location po Filter set Result Type Data Type current Plan add po Filter log Phy Map put filter po Filter current Plans push current Plan current Plan new Physical Plan Plan Walker child Walker current Walker spawn Child Walker filter get Filter Plan Plan Walker child Walker new Reverse Dependency Order Walker Seen Chk filter get Filter Plan push Walker child Walker current Walker walk current Walker walk new Exp Phy Translation Visitor current Walker get Plan child Walker filter current Plan log Phy Map pop Walker po Filter set Plan current Plan current Plan current Plans pop List Operator op filter get Plan get Predecessors filter Physical Operator op null log Phy Map get op get else int err Code String msg find predecessor Filter throw new Logical Physical Translator Exception msg err Code Exception try current Plan connect po Filter catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e translate Soft Links filter System err println Exiting Filter Override public void visit Sort sort throws Frontend Exception String scope List Logical Expression Plan log Plans sort get Sort Col Plans List Physical Plan sort Plans new Array List Physical Plan log Plans size convert logical expression plans physical expression plans current Plans push current Plan Logical Expression Plan plan log Plans current Plan new Physical Plan Plan Walker child Walker new Reverse Dependency Order Walker Seen Chk plan push Walker child Walker child Walker walk new Exp Phy Translation Visitor current Walker get Plan child Walker sort current Plan log Phy Map sort Plans add current Plan pop Walker current Plan current Plans pop get physical operator sort Sort po Sort sort get User Func null po Sort new Sort new Operator Key scope node Gen get Next Node Id scope sort get Requested Parallelism null sort Plans sort get Ascending Cols null else User Comparison Func comparator new User Comparison Func new Operator Key scope node Gen get Next Node Id scope sort get Requested Parallelism null sort get User Func po Sort new Sort new Operator Key scope node Gen get Next Node Id scope sort get Requested Parallelism null sort Plans sort get Ascending Cols comparator po Sort add Original Location sort get Alias sort get Location po Sort set Limit sort get Limit sort set Requested Parallelism get Type log Phy Map put sort po Sort current Plan add po Sort List Operator op sort get Plan get Predecessors sort Physical Operator op null log Phy Map get op get else int err Code String msg find predecessor Sort throw new Logical Physical Translator Exception msg err Code Exception try current Plan connect po Sort catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e po Sort set Result Type Data Type Transformation Logical Physical Plan involves following steps First generated random number link Counter within Rank way avoiding possible collisions parallel rank operations row number mode pre case operation row number mode used two steps tuple counted sequentially mapper produced global counters Global counters gathered summed tuple calls respective counter value order calculate corresponding rank value pre pre case operation necessary five steps Group fields involved rank operation Package case multi fields key group field flatten Sort operation fields available flattening Sort group sequentially counted mapper global counter Counter Global counters summed passed rank operation Rank pre param lo Rank describe rank operation row number mode rank dense Override public void visit Rank lo Rank throws Frontend Exception String scope Rank po Rank Counter po Counter Random random Generator new Random Long operation Math abs random Generator next Long try Physical operations operator case operation necessary five steps Group fields involved rank operation Package case multi fields key group field flatten Sort operation fields available flattening Sort group sequentially counted mapper global counter Counter Global counters summed passed rank operation Rank lo Rank Row Number boolean flags false Multi Map Integer Logical Expression Plan expression Plans new Multi Map Integer Logical Expression Plan int lo Rank get Rank Col Plans size expression Plans put lo Rank get Rank Col Plans Package po Package compile Pack Trio lo Rank null flags expression Plans po Package get Pkgr set Package Type Package Type translate Soft Links lo Rank List Boolean flatten Lst Arrays List true false Physical Plan fep new Physical Plan Project feproj new Project new Operator Key scope node Gen get Next Node Id scope feproj add Original Location lo Rank get Alias lo Rank get Location feproj set Column feproj set Result Type po Package get Pkgr get Key Type feproj set Star false feproj set Overloaded false fep add feproj Physical Plan fep new Physical Plan Project feproj new Project new Operator Key scope node Gen get Next Node Id scope feproj add Original Location lo Rank get Alias lo Rank get Location feproj set Column feproj set Result Type Data Type feproj set Star false feproj set Overloaded false fep add feproj List Physical Plan fe Plans Arrays List fep fep po new new Operator Key scope node Gen get Next Node Id scope fe Plans flatten Lst List Logical Expression Plan rank Plans lo Rank get Rank Col Plans byte new Types new byte rank Plans size int rank Plans size Logical Expression Plan loep rank Plans get Iterator Operator inp Opers loep get Operators inp Opers Next Operator oper inp Opers next new Types Project Expression oper get Type List Physical Plan new Physical Plan new Array List Physical Plan List Boolean new Order Plan new Array List Boolean int lo Rank get Rank Col Plans size Physical Plan fep new Physical Plan Project feproj new Project new Operator Key scope node Gen get Next Node Id scope feproj add Original Location lo Rank get Alias lo Rank get Location feproj set Column feproj set Result Type new Types feproj set Star false feproj set Overloaded false fep add feproj new Physical Plan add fep new Order Plan add lo Rank get Ascending Col get Sort po Sort po Sort new Sort new Operator Key scope node Gen get Next Node Id scope null new Physical Plan new Order Plan null po Sort set Requested Parallelism lo Rank get Requested Parallelism po Sort add Original Location lo Rank get Alias lo Rank get Location po Counter new Counter new Operator Key scope node Gen get Next Node Id scope null new Physical Plan new Order Plan po Counter add Original Location lo Rank get Alias lo Rank get Location po Counter set Result Type Data Type po Counter set Row Number lo Rank Row Number po Counter set Dense Rank lo Rank Dense Rank po Counter set Operation String value operation po Rank new Rank new Operator Key scope node Gen get Next Node Id scope null new Physical Plan new Order Plan po Rank add Original Location lo Rank get Alias lo Rank get Location po Rank set Result Type Data Type po Rank set Operation String value operation List Boolean flatten Lst Arrays List false true Physical Plan fep new Physical Plan Project feproj new Project new Operator Key scope node Gen get Next Node Id scope feproj add Original Location lo Rank get Alias lo Rank get Location feproj set Column feproj set Result Type Data Type feproj set Star false feproj set Overloaded false fep add feproj Physical Plan fep new Physical Plan Project feproj new Project new Operator Key scope node Gen get Next Node Id scope feproj add Original Location lo Rank get Alias lo Rank get Location feproj set Column lo Rank get Rank Col Plans size feproj set Result Type Data Type feproj set Star false feproj set Overloaded false fep add feproj List Physical Plan fe Plans Arrays List fep fep po new new Operator Key scope node Gen get Next Node Id scope fe Plans flatten Lst current Plan add po current Plan add po Sort current Plan add po Counter current Plan add po Rank current Plan add po try current Plan connect po Package po current Plan connect po po Sort current Plan connect po Sort po Counter current Plan connect po Counter po Rank current Plan connect po Rank po catch Plan Exception e throw new Logical Physical Translator Exception e get Message e get Error Code e get Error Source e log Phy Map put lo Rank po case operation used two steps tuple counted sequentially mapper produced global counters Global counters gathered summed tuple calls respective counter value order calculate corresponding rank value else List Logical Expression Plan log Plans lo Rank get Rank Col Plans List Physical Plan rank Plans new Array List Physical Plan log Plans size convert logical expression plans physical expression plans current Plans push current Plan Logical Expression Plan plan log Plans current Plan new Physical Plan Plan Walker child Walker new Reverse Dependency Order Walker Seen Chk plan push Walker child Walker child Walker walk new Exp Phy Translation Visitor current Walker get Plan child Walker lo Rank current Plan log Phy Map rank Plans add current Plan pop Walker current Plan current Plans pop po Counter new Counter new Operator Key scope node Gen get Next Node Id scope null rank Plans lo Rank get Ascending Col po Counter add Original Location lo Rank get Alias lo Rank get Location po Counter set Result Type Data Type po Counter set Row Number lo Rank Row Number po Counter set Dense Rank lo Rank Dense Rank po Counter set Operation String value operation po Rank new Rank new Operator Key scope node Gen get Next Node Id scope null rank Plans lo Rank get Ascending Col po Rank add Original Location lo Rank get Alias lo Rank get Location po Rank set Result Type Data Type po Rank set Operation String value operation current Plan add po Counter current Plan add po Rank List Operator op lo Rank get Plan get Predecessors lo Rank Physical Operator op null log Phy Map get op get else int err Code String msg find predecessor Rank throw new Logical Physical Translator Exception msg err Code Exception current Plan connect po Counter current Plan connect po Counter po Rank log Phy Map put lo Rank po Rank catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit Cross cross throws Frontend Exception String scope List Operator inputs cross get Plan get Predecessors cross cross Nested Cross phys Op new Cross new Operator Key scope node Gen get Next Node Id scope cross get Requested Parallelism phys Op add Original Location phys Op get Alias phys Op get Original Locations current Plan add phys Op phys Op set Result Type Data Type log Phy Map put cross phys Op Operator op cross get Plan get Predecessors cross Physical Operator log Phy Map get op try current Plan connect phys Op catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e else Global Rearrange po Global new Global Rearrange new Operator Key scope node Gen get Next Node Id scope cross get Requested Parallelism po Global add Original Location cross get Alias cross get Location Package po Package new Package new Operator Key scope node Gen get Next Node Id scope cross get Requested Parallelism po Global add Original Location cross get Alias cross get Location po Global set Cross true current Plan add po Global current Plan add po Package int count try current Plan connect po Global po Package List Boolean flatten Lst Arrays List true true Operator op inputs Physical Plan fep new Physical Plan Constant Expression ce new Constant Expression new Operator Key scope node Gen get Next Node Id scope cross get Requested Parallelism ce set Value inputs size ce set Result Type Data Type fep add ce Constant Expression ce new Constant Expression new Operator Key scope node Gen get Next Node Id scope cross get Requested Parallelism ce set Value count ce set Result Type Data Type fep add ce Tuple ce val Tuple Factory get Instance new Tuple ce val set inputs size ce val set count ce set Value ce val ce set Result Type Data Type User Func gfc new User Func new Operator Key scope node Gen get Next Node Id scope cross get Requested Parallelism Arrays List Physical Operator ce Physical Operator ce new Func Spec Cross class get Name po Global get Operator Key String gfc add Original Location cross get Alias cross get Location gfc set Result Type Data Type fep add Leaf gfc gfc set Inputs Arrays List Physical Operator ce Physical Operator ce fep add gfc fep connect ce gfc fep connect ce gfc Physical Plan fep new Physical Plan Project feproj new Project new Operator Key scope node Gen get Next Node Id scope cross get Requested Parallelism feproj add Original Location cross get Alias cross get Location feproj set Result Type Data Type feproj set Star true feproj set Overloaded false fep add feproj List Physical Plan fe Plans Arrays List fep fep fe new new Operator Key scope node Gen get Next Node Id scope cross get Requested Parallelism fe Plans flatten Lst fe set Map Side true fe add Original Location cross get Alias cross get Location current Plan add fe current Plan connect log Phy Map get op fe Local Rearrange phys Op new Local Rearrange new Operator Key scope node Gen get Next Node Id scope cross get Requested Parallelism phys Op add Original Location cross get Alias cross get Location List Physical Plan lr Plans new Array List Physical Plan int inputs size Physical Plan lrp new Physical Plan Project lrproj new Project new Operator Key scope node Gen get Next Node Id scope cross get Requested Parallelism lrproj add Original Location cross get Alias cross get Location lrproj set Overloaded false lrproj set Result Type Data Type lrp add lrproj lr Plans add lrp phys Op set Cross true phys Op set Index count phys Op set Key Type Data Type phys Op set Plans lr Plans phys Op set Result Type Data Type current Plan add phys Op current Plan connect fe phys Op current Plan connect phys Op po Global catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e catch Exec Exception e int err Code String msg Unable set index newly create Local Rearrange throw new Visitor Exception msg err Code Exception e po Package get Pkgr set Key Type Data Type po Package set Result Type Data Type po Package set Num Inps count boolean inner new boolean count int count inner true po Package get Pkgr set Inner inner List Physical Plan fe Plans new Array List Physical Plan List Boolean flatten Lst new Array List Boolean int count Physical Plan fep new Physical Plan Project feproj new Project new Operator Key scope node Gen get Next Node Id scope cross get Requested Parallelism feproj add Original Location cross get Alias cross get Location feproj set Result Type Data Type feproj set Overloaded false fep add feproj fe Plans add fep flatten Lst add true fe new new Operator Key scope node Gen get Next Node Id scope cross get Requested Parallelism fe Plans flatten Lst fe add Original Location cross get Alias cross get Location current Plan add fe try current Plan connect po Package fe catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e log Phy Map put cross fe Override public void visit Stream stream throws Frontend Exception String scope Stream po Stream new Stream new Operator Key scope node Gen get Next Node Id scope stream get Executable Manager stream get Streaming Command pc get Properties po Stream add Original Location stream get Alias stream get Location current Plan add po Stream log Phy Map put stream po Stream List Operator op stream get Plan get Predecessors stream Physical Operator op null log Phy Map get op get else int err Code String msg find predecessor Stream throw new Logical Physical Translator Exception msg err Code Exception try current Plan connect po Stream catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit Inner Load load throws Frontend Exception String scope Project expr Op new Project new Operator Key scope node Gen get Next Node Id scope Logical Schema load get Schema load source Bag expr Op set Result Type Data Type expr Op set Overloaded true else null expr Op set Result Type get Field type else expr Op set Result Type Data Type Project Expression proj load get Projection proj Project Star expr Op set Star proj Project Star else proj Range Project proj get End Col project range expanded project star expander throw new Assertion Error project range project end seen translation physical plan expr Op set Project End proj get Start Col else expr Op set Column load get Col Num set input Project predecessor foreach log Phy Map put load expr Op current Plan add expr Op Override public void visit foreach throws Frontend Exception String scope List Physical Plan inner Plans new Array List Physical Plan org apache newplan logical relational Logical Plan inner foreach get Inner Plan Generate gen Generate inner get Sinks get List Logical Expression Plan exps gen get Output Plans List Operator preds inner get Predecessors gen current Plans push current Plan need translate predecessor Generate physical plan physical plan contain expression plan predecessor plus subtree starting predecessor int exps size current Plan new Physical Plan translate expression plan Plan Walker child Walker new Reverse Dependency Order Walker Seen Chk exps get push Walker child Walker child Walker walk new Exp Phy Translation Visitor exps get child Walker gen current Plan log Phy Map pop Walker List Operator leaves exps get get Sinks Operator l leaves Physical Operator op log Phy Map get l l instanceof Project Expression int input Project Expression l get Input Num sink projection get input logical plan translate Operator pred preds get input child Walker new Subtree Dependency Order Walker inner pred push Walker child Walker child Walker walk pop Walker get physical operator leaf input logical plan Physical Operator leaf log Phy Map get pred pred instanceof Inner Load predecessor Inner Load remove project comes Inner Load change column project comes expression plan current Plan remove leaf log Phy Map remove pred Project leaf Proj Project leaf try leaf Proj Star Project op set Star true else leaf Proj Project End Project op set Project End leaf Proj get Start Col else Project op set Column leaf Proj get Column catch Exec Exception e throw new Frontend Exception foreach get column leaf e else current Plan connect leaf op inner Plans add current Plan current Plan current Plans pop Physical Operator po Gen new Generate new Operator Key r next Long inputs Flattened boolean flatten gen get Flatten Flags List Boolean flatten List new Array List Boolean boolean fl flatten flatten List add fl Logical Schema log Schema foreach get Schema Schema schema null log Schema null try schema Schema get Schema new Resource Schema log Schema catch Frontend Exception e throw new Runtime Exception Logical Schema foreach unable converted Schema log Schema e schema null Schema Tuple Frontend register Generate Possible schema false Gen Context may need appendable po new new Operator Key scope node Gen get Next Node Id scope foreach get Requested Parallelism inner Plans flatten List schema po add Original Location foreach get Alias foreach get Location po set Result Type Data Type log Phy Map put foreach po current Plan add po generate multiple inputs List Operator op foreach get Plan get Predecessors foreach generate may predecessors op null return Physical Operator log Phy Map get op get try current Plan connect po catch Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e translate Soft Links foreach function takes List Logical Expression Plan converts list Physical Plans param plans return throws Frontend Exception private List Physical Plan translate Expression Plans Logical Relational Operator loj List Logical Expression Plan plans throws Frontend Exception List Physical Plan expr Plans new Array List Physical Plan plans null plans size return expr Plans Save current plan onto stack current Plans push current Plan Logical Expression Plan lp plans current Plan new Physical Plan spawn new Dependency Walker use Plan Walker child Walker current Walker spawn Child Walker lp Plan Walker child Walker new Reverse Dependency Order Walker Seen Chk lp Save old walker use child Walker current Walker push Walker child Walker create new Exp Phy Translation Visitor walk Expression Plan current Walker walk new Exp Phy Translation Visitor current Walker get Plan child Walker loj current Plan log Phy Map expr Plans add current Plan pop Walker Pop current plan back current Plan current Plans pop return expr Plans Override public void visit Store lo Store throws Frontend Exception String scope System err println Entering Store Store store new Store new Operator Key scope node Gen get Next Node Id scope store add Original Location lo Store get Alias lo Store get Location store set File lo Store get Output Spec store set Input Spec lo Store get Input Spec store set Signature lo Store get Signature store set Sort Info lo Store get Sort Info store set Tmp Store lo Store Tmp Store store set Store Func lo Store get Store Func store set Schema Util translate Schema lo Store get Schema lo Store get Store Func instanceof Store Resources store set Cache Files Store Resources lo Store get Store Func get Cache Files store set Ship Files Store Resources lo Store get Store Func get Ship Files current Plan add store List Operator op lo Store get Plan get Predecessors lo Store Physical Operator null op null log Phy Map get op get Implement sorting Sort new Limit new operator ready Sort Info sort Info null store predecessor limit check limit predecessor op get instanceof Limit op lo Store get Plan get Predecessors op get Physical Operator sort Phy Op log Phy Map get op get predecessor sort get sort info op get instanceof Sort sort Info Sort sort Phy Op get Sort Info store set Sort Info sort Info else int err Code String msg find predecessor Store throw new Logical Physical Translator Exception msg err Code Exception try current Plan connect store catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e log Phy Map put lo Store store System err println Exiting Store Override public void visit Cogroup cg throws Frontend Exception switch cg get Group Type case translate Collected Cogroup cg break case Package po Package compile Pack Trio cg cg get Custom Partitioner cg get Inner cg get Expression Plans po Package get Pkgr set Package Type Package Type log Phy Map put cg po Package break case translate Merge Cogroup cg break default throw new Logical Physical Translator Exception Unknown Co Group Modifier Exception translate Soft Links cg private void translate Collected Cogroup Cogroup cg throws Frontend Exception one input Logical Relational Operator pred Logical Relational Operator plan get Predecessors cg get List Logical Expression Plan expr Plans cg get Expression Plans get Collected Group phys Op new Collected Group new Operator Key node Gen get Next Node Id phys Op add Original Location cg get Alias cg get Location List Physical Plan p Expr Plans translate Expression Plans cg expr Plans try phys Op set Plans p Expr Plans catch Plan Exception pe int err Code String msg Problem setting map group plans throw new Logical Physical Translator Exception msg err Code Exception pe Byte type null expr Plans size type Data Type phys Op set Key Type type else type p Expr Plans get get Leaves get get Result Type phys Op set Key Type type phys Op set Result Type Data Type current Plan add phys Op try current Plan connect log Phy Map get pred phys Op catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e log Phy Map put cg phys Op private Merge Cogroup compile Merge Cogrp Logical Relational Operator relational Op Multi Map Integer Logical Expression Plan inner Plans throws Frontend Exception List Operator inputs relational Op get Plan get Predecessors relational Op Local Rearrange corresponding input needed extract keys tuples Local Rearrange inner Rs new Local Rearrange inputs size int count List Physical Operator inp Os new Array List Physical Operator inputs size int inputs size Operator op inputs get Physical Operator phys Op log Phy Map get op inp Os add phys Op List Logical Expression Plan plans inner Plans get Local Rearrange po Inner new Local Rearrange new Operator Key node Gen get Next Node Id po Inner add Original Location relational Op get Alias relational Op get Location contain list physical plans could multiple keys key expression List Physical Plan expr Plans translate Expression Plans relational Op plans try po Inner set Plans expr Plans catch Plan Exception pe int err Code String msg Problem setting local rearrange plans throw new Logical Physical Translator Exception msg err Code Exception pe inner Rs count po Inner try po Inner set Index count catch Exec Exception e int err Code String msg Unable set index newly create Local Rearrange throw new Visitor Exception msg err Code Exception e po Inner set Key Type plans size Data Type expr Plans get get Leaves get get Result Type po Inner set Result Type Data Type Merge Cogroup po Cogrp new Merge Cogroup new Operator Key node Gen get Next Node Id inp Os inner Rs relational Op get Requested Parallelism return po Cogrp private void translate Merge Cogroup Cogroup cg throws Frontend Exception validate Merge Cogrp cg get Inner throw new Logical Physical Translator Exception Inner supported relation Merge Cogroup List Operator inputs cg get Plan get Predecessors cg Map Side Merge Validator validator new Map Side Merge Validator validator validate Map Side Merge inputs cg get Plan Merge Cogroup po Cogrp compile Merge Cogrp cg cg get Expression Plans po Cogrp set Result Type Data Type po Cogrp add Original Location cg get Alias cg get Location current Plan add po Cogrp Operator op inputs try current Plan connect log Phy Map get op po Cogrp catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e log Phy Map put cg po Cogrp private boolean validate Merge Cogrp boolean inner Flags boolean flag inner Flags flag return false return true Override public void visit Join loj throws Frontend Exception String scope List join predicates List Operator inputs loj get Plan get Predecessors loj mapping inner join physical plans corresponding inner physical operators Multi Map Physical Operator Physical Plan join Plans new Linked Multi Map Physical Operator Physical Plan Outer list corresponds join predicates Inner list inner physical plan predicate List List Physical Plan pp Lists new Array List List Physical Plan List physical operator corresponding join predicates List Physical Operator inp new Array List Physical Operator Outer list corresponds join predicates inner list corresponds type keys predicate List List Byte key Types new Array List List Byte boolean inner Flags loj get Inner Flags String alias loj get Alias Source Location location loj get Location int parallel loj get Requested Parallelism int inputs size Operator op inputs get Physical Operator phys Op log Phy Map get op inp add phys Op List Logical Expression Plan plans List Logical Expression Plan loj get Join Plan List Physical Plan expr Plans translate Expression Plans loj plans pp Lists add expr Plans join Plans put phys Op expr Plans Key could potentially tuple visit expr Plans get types members tuples List Byte tuple Key Member Types new Array List Byte Physical Plan expr Plan expr Plans tuple Key Member Types add expr Plan get Leaves get get Result Type key Types add tuple Key Member Types loj get Join Type Join Skewed Join skj try skj new Skewed Join new Operator Key scope node Gen get Next Node Id scope parallel inp inner Flags skj add Original Location alias location skj set Join Plans join Plans catch Exception e int err Code String msg Skewed Join creation failed throw new Logical Physical Translator Exception msg err Code Exception e skj set Result Type Data Type int inputs size Operator op inputs get inner Flags try Logical Schema Logical Relational Operator op get Schema schema determined null throw new Frontend Exception loj determine skewed join schema skj add Schema Util translate Schema catch Frontend Exception e int err Code String msg Could n set schema outer join throw new Logical Physical Translator Exception msg err Code Exception e else never retrieved guarantees index valid Compiler trying read schema skj add Schema null current Plan add skj Operator op inputs try current Plan connect log Phy Map get op skj catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e log Phy Map put loj skj else loj get Join Type Join Schema input Schemas new Schema inputs size Schema key Schemas new Schema inputs size outer int inputs size Logical Schema logical Schema Logical Relational Operator inputs get get Schema logical Schema null continue Schema Gen Schema get Schema new Resource Schema logical Schema registers value piece Schema Tuple Frontend register Generate Possible Gen false Gen Context input Schemas Gen Schema key Gen new Schema Byte byt key Types get generate nested code information thrown away byt null Data Type Complex byt byte Value continue outer key Gen add new Field Schema null byt Schema Tuple Frontend register Generate Possible key Gen false Gen Context key Schemas key Gen int fragment Join pfrj try boolean Left Outer false dont check bounds issue assume join involves atleast two inputs Left Outer inner Flags Tuple null Tuple null Left Outer try know Left outer join two way join assume index right input Logical Schema input Schema Logical Relational Operator inputs get get Schema check schema join input Schema null int err Code String msg Input Logical Relational Operator inputs get get Alias outer join desired valid schema throw new Logical Physical Translator Exception msg err Code Exception Using schema decide number columns fields null Tuple null Tuple Tuple Factory get Instance new Tuple input Schema size int j j input Schema size j null Tuple set j null catch Frontend Exception e int err Code String msg Error determining schema input throw new Logical Physical Translator Exception msg err Code Exception e pfrj new Join new Operator Key scope node Gen get Next Node Id scope parallel inp pp Lists key Types null fragment Left Outer null Tuple input Schemas key Schemas pfrj add Original Location alias location catch Exec Exception e int err Code String msg Unable set index newly create Local Rearrange throw new Visitor Exception msg err Code Exception e pfrj set Result Type Data Type current Plan add pfrj Operator op inputs try current Plan connect log Phy Map get op pfrj catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e log Phy Map put loj pfrj else loj get Join Type Join loj get Join Type Join new Map Side Merge Validator validate Map Side Merge inputs loj get Plan Physical Operator smj boolean use Merge Join inputs size inner Flags inner Flags use Merge Join register merge join schema information code generation Logical Schema logical Schema Logical Relational Operator inputs get get Schema Schema left Schema null logical Schema null left Schema Schema get Schema new Resource Schema logical Schema logical Schema Logical Relational Operator inputs get get Schema Schema right Schema null logical Schema null right Schema Schema get Schema new Resource Schema logical Schema logical Schema loj get Schema Schema merged Schema null logical Schema null merged Schema Schema get Schema new Resource Schema logical Schema left Schema null Schema Tuple Frontend register Generate Possible left Schema false Gen Context right Schema null Schema Tuple Frontend register Generate Possible right Schema false Gen Context merged Schema null Schema Tuple Frontend register Generate Possible merged Schema false Gen Context inner join two sorted inputs less restrictive implementation form Merge Join n require loaders implement collectable interface try smj new Merge Join new Operator Key scope node Gen get Next Node Id scope parallel inp join Plans key Types loj get Join Type left Schema right Schema merged Schema catch Plan Exception e int err Code String msg Merge Join creation failed throw new Logical Physical Translator Exception msg err Code Exception e log Phy Map put loj smj else cases fall back Merge Cogroup Flattening Es smj compile Merge Cogrp loj loj get Expression Plans smj set Result Type Data Type current Plan add smj smj add Original Location alias location Operator op inputs try current Plan connect log Phy Map get op smj catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e use Merge Join create configure foreach flatten output cogroup fe compile Flattening inner Flags scope parallel alias location inputs current Plan add fe try current Plan connect smj fe catch Plan Exception e throw new Logical Physical Translator Exception e get Message e get Error Code e get Error Source e log Phy Map put loj fe return else loj get Join Type Join loj get Join Type Join Package po Package compile Pack Trio loj loj get Custom Partitioner inner Flags loj get Expression Plans fe compile Flattening inner Flags scope parallel alias location inputs current Plan add fe try current Plan connect po Package fe catch Plan Exception e throw new Logical Physical Translator Exception e get Detailed Message e get Error Code e get Error Source e log Phy Map put loj fe loj get Join Type Join inner Flags length inner Flags false inner Flags false throw new Logical Physical Translator Exception Error loj get Location alias loj get Alias Bloom join used join Exception po Package get Pkgr set Package Type Package Type else po Package get Pkgr set Package Type Package Type translate Soft Links loj private Package compile Pack Trio Logical Relational Operator relational Op String custom Partitioner boolean inner Flags Multi Map Integer Logical Expression Plan inner Plans throws Frontend Exception Global Rearrange po Global new Global Rearrange new Operator Key node Gen get Next Node Id relational Op get Requested Parallelism po Global add Original Location relational Op get Alias relational Op get Location po Global set Custom Partitioner custom Partitioner Package po Package new Package new Operator Key node Gen get Next Node Id relational Op get Requested Parallelism po Package add Original Location relational Op get Alias relational Op get Location current Plan add po Global current Plan add po Package try current Plan connect po Global po Package catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e int count Byte type null List Operator inputs relational Op get Plan get Predecessors relational Op int inputs size Operator op inputs get List Logical Expression Plan plans inner Plans get Local Rearrange phys Op new Local Rearrange new Operator Key node Gen get Next Node Id relational Op get Requested Parallelism phys Op add Original Location relational Op get Alias relational Op get Location List Physical Plan expr Plans translate Expression Plans relational Op plans try phys Op set Plans expr Plans catch Plan Exception pe int err Code String msg Problem setting local rearrange plans throw new Logical Physical Translator Exception msg err Code Exception pe try phys Op set Index count catch Exec Exception e int err Code String msg Unable set index newly create Local Rearrange throw new Visitor Exception msg err Code Exception e plans size type Data Type phys Op set Key Type type else type expr Plans get get Leaves get get Result Type phys Op set Key Type type phys Op set Result Type Data Type current Plan add phys Op try current Plan connect log Phy Map get op phys Op current Plan connect phys Op po Global catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e po Package get Pkgr set Key Type type po Package set Result Type Data Type po Package set Num Inps count po Package get Pkgr set Inner inner Flags return po Package private compile Flattening boolean inner Flags String scope int parallel String alias Source Location location List Operator inputs throws Frontend Exception List Physical Plan fe Plans new Array List Physical Plan List Boolean flatten Lst new Array List Boolean fe try int inputs size Physical Plan fep new Physical Plan Project feproj new Project new Operator Key scope node Gen get Next Node Id scope parallel since first column group field feproj add Original Location alias location feproj set Result Type Data Type feproj set Overloaded false fep add feproj fe Plans add fep parser would marked side need keep empty bags non matched outer inner Flags would false inner Flags Operator join Input inputs get outer join add bincond project nulls bag empty update Empty Bag Check fep join Input flatten Lst add true fe new new Operator Key scope node Gen get Next Node Id scope parallel fe Plans flatten Lst fe add Original Location alias location catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e return fe Override public void visit Union lo Union throws Frontend Exception String scope Union phys Op new Union new Operator Key scope node Gen get Next Node Id scope lo Union get Requested Parallelism phys Op add Original Location lo Union get Alias lo Union get Location current Plan add phys Op phys Op set Result Type Data Type log Phy Map put lo Union phys Op List Operator ops lo Union get Plan get Predecessors lo Union Operator l ops Physical Operator log Phy Map get l try current Plan connect phys Op catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit Distinct lo Distinct throws Frontend Exception String scope Distinct phys Op new Distinct new Operator Key scope node Gen get Next Node Id scope lo Distinct get Requested Parallelism phys Op set Custom Partitioner lo Distinct get Custom Partitioner phys Op add Original Location lo Distinct get Alias lo Distinct get Location current Plan add phys Op phys Op set Result Type Data Type log Phy Map put lo Distinct phys Op Operator op lo Distinct get Plan get Predecessors lo Distinct get Physical Operator log Phy Map get op try current Plan connect phys Op catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit Limit lo Limit throws Frontend Exception String scope Limit po Limit new Limit new Operator Key scope node Gen get Next Node Id scope lo Limit get Requested Parallelism po Limit set Limit lo Limit get Limit po Limit add Original Location lo Limit get Alias lo Limit get Location po Limit set Result Type Data Type current Plan add po Limit log Phy Map put lo Limit po Limit lo Limit get Limit Plan null add expression plan Limit current Plans push current Plan current Plan new Physical Plan Plan Walker child Walker new Reverse Dependency Order Walker Seen Chk lo Limit get Limit Plan push Walker child Walker current Walker walk new Exp Phy Translation Visitor current Walker get Plan child Walker lo Limit current Plan log Phy Map po Limit set Limit Plan current Plan pop Walker current Plan current Plans pop Operator op lo Limit get Plan get Predecessors lo Limit get Physical Operator log Phy Map get op try current Plan connect po Limit catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e translate Soft Links lo Limit Override public void visit Split lo Split throws Frontend Exception String scope Split phys Op new Split new Operator Key scope node Gen get Next Node Id scope lo Split get Requested Parallelism phys Op add Original Location lo Split get Alias lo Split get Location File Spec spl Str File try spl Str File new File Spec File Localizer get Temporary Path pc String new Func Spec Utils get Tmp File Compressor Name pc catch Exception e byte err Src pc get Error Source int err Code switch err Src case Exception err Code break case Exception err Code break case Exception err Code break String msg Unable obtain temporary path throw new Logical Physical Translator Exception msg err Code err Src e phys Op set Split Store spl Str File log Phy Map put lo Split phys Op current Plan add phys Op List Operator op lo Split get Plan get Predecessors lo Split Physical Operator op null log Phy Map get op get else int err Code String msg find predecessor Split throw new Logical Physical Translator Exception msg err Code Exception try current Plan connect phys Op catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e Override public void visit Split Output lo Split Output throws Frontend Exception String scope System err println Entering Filter Filter po Filter new Filter new Operator Key scope node Gen get Next Node Id scope lo Split Output get Requested Parallelism po Filter add Original Location lo Split Output get Alias lo Split Output get Location po Filter set Result Type Data Type current Plan add po Filter log Phy Map put lo Split Output po Filter current Plans push current Plan current Plan new Physical Plan Plan Walker child Walker current Walker spawn Child Walker filter get Filter Plan Plan Walker child Walker new Reverse Dependency Order Walker Seen Chk lo Split Output get Filter Plan push Walker child Walker current Walker walk current Walker walk new Exp Phy Translation Visitor current Walker get Plan child Walker lo Split Output current Plan log Phy Map pop Walker po Filter set Plan current Plan current Plan current Plans pop List Operator op lo Split Output get Plan get Predecessors lo Split Output Physical Operator op null log Phy Map get op get else int err Code String msg find predecessor Filter throw new Logical Physical Translator Exception msg err Code Exception try current Plan connect po Filter catch Plan Exception e int err Code String msg Invalid physical operators physical plan throw new Logical Physical Translator Exception msg err Code Exception e translate Soft Links lo Split Output System err println Exiting Filter updates plan check empty bag bag empty flatten bag many null dictated schema param fe Plan plan update param join Input relation corresponding bag checked throws Frontend Exception public static void update Empty Bag Check Physical Plan fe Plan Operator join Input throws Frontend Exception Logical Schema input Schema null try input Schema Logical Relational Operator join Input get Schema input Schema null int err Code String msg Input Logical Relational Operator join Input get Alias outer join desired valid schema throw new Logical Physical Translator Exception msg err Code Exception catch Frontend Exception e int err Code String msg Error determining schema input throw new Logical Physical Translator Exception msg err Code Exception e Compiler Utils add Empty Bag Outer Join fe Plan Util translate Schema input Schema false null private void translate Soft Links Operator op throws Frontend Exception List Operator preds op get Plan get Soft Link Predecessors op preds null return Operator pred preds Physical Operator log Phy Map get pred current Plan create Soft Link log Phy Map get op
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Map import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Project Expression import org apache newplan logical relational Logical Schema Logical Field Schema import org apache parser Source Location Operator map data inner plan used inner plan public class Inner Load extends Logical Relational Operator private Project Expression prj private foreach private boolean source Bag false public Inner Load Operator Plan plan foreach int col Num super Inner Load plan store column number Project Expression plan able dynamically adjust column number optimization Logical Expression Plan exp new Logical Expression Plan n care type set prj new Project Expression exp col Num foreach foreach foreach public Inner Load Operator Plan plan foreach String col Alias throws Frontend Exception super Inner Load plan store column number Project Expression plan able dynamically adjust column number optimization Logical Expression Plan exp new Logical Expression Plan prj new Project Expression exp col Alias null foreach foreach foreach public Inner Load Logical Plan plan foreach Project Expression project Expression super Inner Load plan prj project Expression prj set Input Num prj set Attached Relational Op foreach foreach foreach Override public Logical Schema get Schema throws Frontend Exception schema null return schema prj find Referent get Schema null prj get Field Schema null prj get Field Schema type Data Type source Bag true alias prj get Field Schema alias prj get Field Schema schema null Logical Field Schema tuple Schema prj get Field Schema schema get Field tuple Schema null tuple Schema schema null schema new Logical Schema int tuple Schema schema size schema add Field tuple Schema schema get Field else schema new Logical Schema schema add Field prj get Field Schema else prj Range Star Project schema new Logical Schema schema add Field new Logical Field Schema null null Data Type return schema Override public void reset Schema super reset Schema prj reset Field Schema public Project Expression get Projection return prj Override public boolean Equal Operator throws Frontend Exception instanceof Inner Load return false return get Col Num Inner Load get Col Num Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit public int get Col Num return prj get Col Num Get operator contains operator part inner plan return operator public get return foreach public boolean source Bag return source Bag public String String String Builder msg new String Builder alias null msg append alias msg append Name name msg append get Projection get Col Alias null msg append get Projection get Col Alias else get Projection Project Star msg append else get Projection Range Project msg append get Projection get Start Col append append get Projection get End Col else msg append get Projection get Col Num msg append msg append Schema schema null msg append schema else msg append null msg append annotations null Map Entry String Object entry annotations entry Set msg append entry return msg String Override public void set Location Source Location loc super set Location loc prj set Location loc
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Array List import java util Collection import java util Iterator import java util List import org apache impl logical Layer Frontend Exception import org apache impl util Multi Map import org apache newplan Operator import org apache newplan Plan Visitor import org apache newplan logical expression Logical Expression Plan public class Join extends Logical Relational Operator private static final long serial Version Enum type join public static enum Hash Join Bloom Join Fragment Replicated join Skewed Join Sort Merge Join Sort Merge Index Join Join contains list logical operators corresponding relational operators list generates relational operator generate operator turn contains list expressions columns projected private static Log log Log Factory get Log Join class expression plans input private Multi Map Integer Logical Expression Plan Join Plans indicator input whether inner private boolean Inner Flags private Join Type Retains type join static constant refer option selecting join type public final static Integer public Join Logical Plan plan super Join plan public Join Logical Plan plan Multi Map Integer Logical Expression Plan join Plans jt boolean Inner super Join plan Join Plans join Plans Join Type jt Inner Flags Inner public void set Join Plans Multi Map Integer Logical Expression Plan join Plans Join Plans join Plans public void set Inner Flags boolean Inner Inner Flags Inner public void set Join Type jt Join Type jt public boolean Inner int input Index return Inner Flags input Index public boolean get Inner Flags return Inner Flags public get Join Type return Join Type public void reset Join Type Join Type public Collection Logical Expression Plan get Join Plan int input Index return Join Plans get input Index Get expressions plans join return collection expression plans public Multi Map Integer Logical Expression Plan get Expression Plans return Join Plans public Collection Logical Expression Plan get Expression Plan Values return Join Plans values Override public Logical Schema get Schema throws Frontend Exception schema calculated return schema null return schema List Operator inputs null inputs plan get Predecessors inputs null return null List Logical Schema Logical Field Schema fss new Array List Logical Schema Logical Field Schema Operator op inputs Logical Schema input Schema Logical Relational Operator op get Schema schema one input unknown join schema unknown return input Schema null schema null return schema int input Schema size Logical Schema Logical Field Schema fs input Schema get Field Logical Schema Logical Field Schema new null fs alias null new new Logical Schema Logical Field Schema Logical Relational Operator op get Alias fs alias fs schema fs type fs uid else new new Logical Schema Logical Field Schema fs alias fs schema fs type fs uid fss add new schema new Logical Schema Logical Schema Logical Field Schema field Schema fss schema add Field field Schema return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Join Join oj Join Join Type oj Join Type return false Inner Flags length oj Inner Flags length return false int Inner Flags length Inner Flags oj Inner Flags return false check Equality oj return false Join Plans size oj Join Plans size return false need make sure input projecting columns slightly complicated since Multi Map n return particular order find matching input case Integer p Join Plans key Set Iterator Integer iter oj Join Plans key Set iterator int op iter Next op iter next p equals op break op Collection Logical Expression Plan c Join Plans get p Collection Logical Expression Plan oc oj Join Plans get op c size oc size return false c instanceof List oc instanceof List throw new Frontend Exception Expected list expression plans List Logical Expression Plan elist List Logical Expression Plan c List Logical Expression Plan oelist List Logical Expression Plan oc int elist size elist get Equal oelist get return false else return false return true else return false Override public String get Name return name Join Type String public List Operator get Inputs Logical Plan plan return plan get Predecessors
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Plan Visitor import org apache newplan logical expression Logical Expression Plan public class Limit extends Logical Relational Operator private static final long serial Version private static final long private long Limit private Logical Expression Plan mlimit Plan public Limit Logical Plan plan super Limit plan public Limit Logical Plan plan long limit super Limit plan set Limit limit public Limit Logical Plan plan Logical Expression Plan limit Plan super Limit plan set Limit Plan limit Plan public long get Limit return Limit public void set Limit long limit Limit limit public Logical Expression Plan get Limit Plan return mlimit Plan public void set Limit Plan Logical Expression Plan mlimit Plan mlimit Plan mlimit Plan Override public Logical Schema get Schema throws Frontend Exception schema null return schema Logical Relational Operator input null input Logical Relational Operator plan get Predecessors get schema input get Schema return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Limit Limit Limit Limit get Limit get Limit Limit get Limit get Limit Plan null get Limit Plan Equal Limit get Limit Plan return check Equality Limit return false public Operator get Input Logical Plan plan return plan get Predecessors get
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java io Exception import java util List import org apache hadoop conf Configuration import org apache hadoop mapreduce Job import org apache Load Func import org apache Load Metadata import org apache Exception import org apache Resource Schema import org apache data Data Type import org apache impl Context import org apache impl io File Spec import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl util Object Serializer import org apache impl util Utils import org apache newplan Operator import org apache newplan Plan Visitor import org apache newplan logical Util public class Load extends Logical Relational Operator public enum Cast State private Logical Schema script Schema private final File Spec fs private transient Load Func load Func transient private Configuration conf private final Logical Schema determined Schema private List Integer required Fields null private Cast State cast State Cast State private Logical Schema uid Schema private final String schema File private final String signature private long limit private boolean Tmp Load used pattern matching param schema schema user specified script null specified param plan logical plan load part public Load Logical Schema schema Logical Plan plan null schema plan null null null Used Logical Plan Builder param loader Func Spec load function use load param schema schema user specified script null specified param plan logical plan load part param conf param load Func Load Func instantiated loader param signature signature passed Load Func public Load File Spec loader Logical Schema schema Logical Plan plan Configuration conf Load Func load Func String signature super Load plan script Schema schema fs loader schema File loader null null loader get File Name conf conf load Func load Func signature signature store Script Schema conf script Schema signature load Func null load Func set Context Signature signature try determined Schema get Schema Meta Data catch Frontend Exception e throw new Runtime Exception retrieve schema loader load Func e else determined Schema null public String get Schema File return schema File public Load Func get Load Func throws Frontend Exception try load Func null fs null load Func Load Func Context instantiate Func Spec fs get Func Spec load Func set Context Signature signature return load Func catch Class Cast Exception cce throw new Frontend Exception fs get Func Spec implement Load Func interface public void set Script Schema Logical Schema schema script Schema schema public void set Required Fields List Integer required Fields required Fields required Fields Get schema load schema either given user script load functions get Schema call returned Otherwise null returned indicating schema unknown return schema null unknown Override public Logical Schema get Schema throws Frontend Exception schema null return schema Logical Schema original Schema null script Schema null determined Schema null original Schema Logical Schema merge script Schema determined Schema Logical Schema Merge Mode Load else script Schema null original Schema script Schema else determined Schema null original Schema determined Schema Cast Adjusted int original Schema size Logical Schema Logical Field Schema fs original Schema get Field determined Schema null Reset loads field schema byte array reflect reality fs type Data Type else Reset type determined Schema says fs type determined Schema get Field type original Schema null uid Schema original Schema merge Uid uid Schema required Fields null schema new Logical Schema int original Schema size required Fields contains schema add Field original Schema get Field else schema original Schema return schema private Logical Schema get Schema Meta Data throws Frontend Exception get Load Func null get Load Func instanceof Load Metadata try Resource Schema resource Schema Load Metadata load Func get Schema get File Spec get File Name new Job conf Schema old Schema Schema get Schema resource Schema return Util translate Schema old Schema catch Exception e throw new Frontend Exception get schema load Func load Func get Class get Name e return null method store script Schema Schema using Object Serializer current configuration br schema retrieved load functions Fs know schema user entered clause br name format br pre Signature script Schema Object Serializer serialize script Schema pre p Note schema load function returns always clause schema br input chararray b chararray br schema wil lbe chararray b chararray br p Find better solution make script schema available Load Func see https issues apache org jira browse private void store Script Schema Configuration conf Logical Schema script Schema String signature conf null script Schema null signature null try conf set Utils get Script Schema Key signature Object Serializer serialize Util translate Schema script Schema catch Exception ioe int err Code String msg Problem serializing script schema Frontend Exception fee new Frontend Exception msg err Code Exception false null ioe throw new Runtime Exception fee public File Spec get File Spec return fs Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit public Logical Schema get Determined Schema return determined Schema Override public boolean Equal Operator throws Frontend Exception null instanceof Load Load ol Load check Equality ol return false fs null ol fs null return true else return false return fs equals ol fs else return false public void set Cast State Cast State state cast State state public Cast State get Cast State return cast State public boolean Cast Adjusted return cast State Cast State public Configuration get Configuration return conf Override public void reset Uid uid Schema null Override public String String String str super String return str Required Fields required Fields public String get Signature return signature public boolean Tmp Load return Tmp Load public void set Tmp Load boolean Tmp Load Tmp Load Tmp Load public Logical Schema get Script Schema return script Schema public long get Limit return limit public void set Limit long limit limit limit
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Arrays import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor public class Native extends Logical Relational Operator private String native Jar private String params null private Load load private Store store public Native Operator Plan plan String native Jar String parameters super Native plan store lo Store load lo Load native Jar native Jar params parameters Override public Logical Schema get Schema throws Frontend Exception return load get Schema return null Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator obj throws Frontend Exception obj return true obj null return false get Class obj get Class return false Native Native obj load null load null return false else load equals load return false native Jar null native Jar null return false else native Jar equals native Jar return false Arrays equals params params return false store null store null return false else store equals store return false check predecessors schema check Equality return false return true return native Jar public String get Native Jar return native Jar param native Jar native Jar set public void set Native Jar String native Jar native Jar native Jar return params public String get Params return params param params params set public void set Params String params params params return load public Load get Load return load param load load set public void set Load Load load load load return store public Store get Store return store param store store set public void set Store Store store store store
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin method never used directly use link public class Long Sum extends Algebraic Long Math Base public Long Sum set Op public static class Intermediate extends Algebraic Long Math Base Intermediate Override public get Op return public static class Final extends Algebraic Long Math Base Final Override public get Op return
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Array List import java util List import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan operator implementation Operator Syntax pre code alias rel col ref alias output alias operator rel input relation operator col ref Column References range schema rel dense rank means sequential value without gasp among different tuple values pre public class Rank extends Logical Relational Operator private final static String rank private final static String List within logical expression plans case private List Logical Expression Plan rank Col Plans List within ascending columns private List Boolean asc Cols case could dense dense rank means assign consecutive ranking different tuples private boolean Dense Rank false case simple namely row number mode consecutive number assigned tuple private boolean Row Number false uid generated rank column important keep uid persistent calls reset Schema get Schema private long rank Column Uid public Rank Operator Plan plan super Rank plan rank Column Uid public Rank Operator Plan plan List Logical Expression Plan rank Col Plans List Boolean asc Cols plan rank Col Plans rank Col Plans asc Cols asc Cols rank Column Uid public List Logical Expression Plan get Rank Col Plans return rank Col Plans public void set Rank Col Plan List Logical Expression Plan rank Col Plans rank Col Plans rank Col Plans public List Boolean get Ascending Col return asc Cols public void set Ascending Col List Boolean asc Cols asc Cols asc Cols Get schema output Rank Composed long value prepended rest input schema return schema throws Frontend Exception Override public Logical Schema get Schema throws Frontend Exception schema calculated return schema null return schema Logical Relational Operator input null schema previous predecessor input Logical Relational Operator plan get Predecessors get input null return null Logical Schema input Schema input get Schema schema one input unknown rank schema unknown return input Schema null schema null return schema Complete copy previous schema Logical Field Schema List Logical Schema Logical Field Schema fss new Array List Logical Schema Logical Field Schema int input Schema size Logical Schema Logical Field Schema fs input Schema get Field Logical Schema Logical Field Schema new null new new Logical Schema Logical Field Schema fs alias fs schema fs type fs uid fss add new schema new Logical Schema rank Column Uid rank Column Uid Logical Expression get Next Uid rank Column Uid schema add Field new Logical Schema Logical Field Schema input get Alias null Data Type rank Column Uid Logical Schema Logical Field Schema field Schema fss schema add Field field Schema return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Rank Rank Rank rank Col Plans equals rank Col Plans return false else return false return check Equality Logical Relational Operator Get dense return boolean public boolean Dense Rank return Dense Rank Set dense param Dense Rank dense rank public void set Dense Rank boolean Dense Rank Dense Rank Dense Rank Get simple operation means row number attached tuple return boolean public boolean Row Number return Row Number Set simple operation param row Number row number operation public void set Row Number boolean row Number Row Number row Number
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Array List import java util Iterator import java util List import org apache Func Spec import org apache Sort Col Info import org apache Sort Col Info Order import org apache Sort Info import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan Reverse Dependency Order Walker import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Project Expression import org apache newplan logical visitor Reset Projection Attached Relational Op Visitor public class Sort extends Logical Relational Operator private List Boolean Asc Cols private Func Spec Sort Func private boolean Star false private long limit private List Logical Expression Plan Sort Col Plans public Sort Operator Plan plan super Sort plan public Sort Operator Plan plan List Logical Expression Plan sort Col Plans List Boolean asc Cols Func Spec sort Func plan Sort Col Plans sort Col Plans Asc Cols asc Cols Sort Func sort Func public List Logical Expression Plan get Sort Col Plans return Sort Col Plans public void set Sort Col Plans List Logical Expression Plan sort Plans Sort Col Plans sort Plans public List Boolean get Ascending Cols return Asc Cols public void set Ascending Cols List Boolean asc Cols Asc Cols asc Cols public Func Spec get User Func return Sort Func public void set User Func Func Spec func Sort Func func public boolean Star return Star public void set Star boolean b Star b public void set Limit long l limit l public long get Limit return limit public boolean Limited return limit Override public Logical Schema get Schema throws Frontend Exception schema null return schema Logical Relational Operator input null input Logical Relational Operator plan get Predecessors get schema input get Schema return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit public Sort Info get Sort Info throws Frontend Exception Logical Schema schema get Schema List Sort Col Info sort Col Info List new Array List Sort Col Info int Sort Col Plans size get single project sort plans Logical Expression Plan lp Sort Col Plans get Iterator Operator ops Iterator lp get Operators List Operator ops List new Array List Operator ops Iterator Next ops List add ops Iterator next ops List size ops List get instanceof Project Expression throw new Frontend Exception Unsupported operator inner plan ops List get Project Expression project Project Expression ops List get create Sort Col Info project project Project Star input schema project star still n know many columns represented n add columns sort list return new Sort Info sort Col Info List project Range Project project get End Col stop reason project star condition unkown number columns represents return new Sort Info sort Col Info List expand project range multiple Sort Col Infos int cnum project get Start Col cnum project get End Col cnum sort Col Info List add new Sort Col Info null cnum get Order Asc Cols else int sort Col Index project get Col Num String sort Col Name schema null null schema get Field sort Col Index alias sort Col Info List add new Sort Col Info sort Col Name sort Col Index get Order Asc Cols return new Sort Info sort Col Info List private Order get Order List Boolean Asc Cols int return Asc Cols get Sort Col Info Order Sort Col Info Order Override public boolean Equal Operator throws Frontend Exception null instanceof Sort Sort Sort Sort Asc Cols equals Sort get Ascending Cols return false Sort Func equals Sort get User Func return false Star Sort Star return false limit Sort get Limit return false Sort Col Plans equals Sort get Sort Col Plans return false return check Equality Logical Relational Operator public Operator get Input Logical Plan plan return plan get Predecessors get public static Sort create Copy Sort sort throws Frontend Exception Sort new Sort new Sort sort get Plan null sort get Ascending Cols sort get User Func List Logical Expression Plan new Sort Col Plans new Array List Logical Expression Plan sort get Sort Col Plans size Logical Expression Plan lep sort get Sort Col Plans Logical Expression Plan new lep lep deep Copy Resetting attached Sort operator Project Expression new Sort new Reset Projection Attached Relational Op Visitor new lep new Sort visit new Sort Col Plans add new lep new Sort set Sort Col Plans new Sort Col Plans return new Sort
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor public class Split extends Logical Relational Operator public Split Operator Plan plan super Split plan Override public Logical Schema get Schema throws Frontend Exception schema null return schema Logical Relational Operator input null input Logical Relational Operator plan get Predecessors get schema input get Schema return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Split return check Equality Split else return false
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Hash Map import java util Hash Set import java util Map import java util Set import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache impl util Pair import org apache newplan Operator import org apache newplan Plan Visitor import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical relational Logical Schema Logical Field Schema public class Split Output extends Logical Relational Operator private Logical Expression Plan filter Plan private Map Long Long uid Mapping new Hash Map Long Long public Split Output Logical Plan plan super Split Output plan public Split Output Logical Plan plan Logical Expression Plan filter Plan super Split Output plan filter Plan filter Plan public Logical Expression Plan get Filter Plan return filter Plan public void set Filter Plan Logical Expression Plan filter Plan filter Plan filter Plan private void reassign Uid Rec Logical Schema schema Logical Field Schema fs schema get Fields one field contains nested schema need reassign Uids nested fields fs schema null fs type Data Type fs type Data Type fs type Data Type reassign Uid Rec fs schema uid Mapping contains Key fs uid fs uid uid Mapping get fs uid else long pred Uid fs uid fs uid Logical Expression get Next Uid uid Mapping put pred Uid fs uid Override public Logical Schema get Schema throws Frontend Exception schema null return schema Logical Relational Operator input null input Logical Relational Operator plan get Predecessors get input get Schema null schema input get Schema deep Copy reassign Uid Rec schema return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Split Output Split Output os Split Output return filter Plan Equal os filter Plan check Equality os else return false Override public void reset Uid uid Mapping new Hash Map Long Long public long get Input Uids long uid Map Entry Long Long pair uid Mapping entry Set pair get Value uid return pair get Key return
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import org apache Sort Info import org apache Store Func Interface import org apache impl io File Spec import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Plan Visitor public class Store extends Logical Relational Operator private final File Spec output know reload store l File File Spec set Server post Process used reload store optimizer need private File Spec Input Spec private final String signature private boolean Tmp Store private Sort Info sort Info private final Store Func Interface store Func private boolean disambiguation Enabled true public Store Logical Plan plan File Spec output File Spec Store Func Interface store Func String signature super Store plan output output File Spec store Func store Func signature signature public Store Logical Plan plan File Spec output File Spec Store Func Interface store Func String signature boolean disambiguation Enabled plan output File Spec store Func signature disambiguation Enabled disambiguation Enabled public File Spec get Output Spec return output public Store Func Interface get Store Func return store Func Override public Logical Schema get Schema throws Frontend Exception schema Logical Relational Operator plan get Predecessors get get Schema disambiguation Enabled schema null schema get Fields null requested try remove parent alias substring including colon Logical Schema Logical Field Schema field schema get Fields field alias null field alias contains continue field alias field alias substring field alias last Index return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Store Store os Store check Equality os return false need test store Func equal since instantiated output output null os output null return true else output null os output null return false else return output equals os output else return false public Sort Info get Sort Info return sort Info public void set Sort Info Sort Info sort Info sort Info sort Info public boolean Tmp Store return Tmp Store public void set Tmp Store boolean Tmp Store Tmp Store Tmp Store public void set Input Spec File Spec Input Spec public File Spec get Input Spec return Input Spec public String get Signature return signature public File Spec get File Spec return output
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache impl streaming Executable Manager import org apache impl streaming Streaming Command import org apache newplan Operator import org apache newplan Plan Visitor import org apache newplan logical relational Load Cast State public class Stream extends Logical Relational Operator public enum Cast State private Logical Schema script Schema private static final long serial Version private static Log log Log Factory get Log Filter class Streaming Command object Stream Operator operator represents private Streaming Command command transient private Executable Manager executable Manager private Logical Schema uid Schema private Cast State cast State Cast State public Stream Logical Plan plan Executable Manager exe Manager Streaming Command cmd Logical Schema schema super Stream plan command cmd executable Manager exe Manager script Schema schema Get Streaming Command object associated operator return Streaming Command object public Streaming Command get Streaming Command return command return Executable Manager public Executable Manager get Executable Manager return executable Manager Override public Logical Schema get Schema throws Frontend Exception schema null return schema Cast Adjusted schema new Logical Schema int script Schema size Logical Schema Logical Field Schema fs script Schema get Field deep Copy fs type Data Type schema add Field fs else script Schema null schema script Schema deep Copy schema null uid Schema schema merge Uid uid Schema return schema Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Stream return check Equality Logical Relational Operator else return false public void set Cast State Cast State state cast State state public Cast State get Cast State return cast State public boolean Cast Adjusted return cast State Cast State Override public void reset Uid uid Schema null public Logical Schema get Script Schema return script Schema
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util Array List import java util Hash Set import java util List import java util Set import org apache Exception import org apache impl logical Layer Frontend Exception import org apache impl util Pair import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical expression Logical Expression import org apache newplan logical relational Logical Schema Logical Field Schema public class Union extends Logical Relational Operator private boolean Schema uid mapping output uid input uid private List Pair Long Long uid Mapping new Array List Pair Long Long public Union Operator Plan plan super Union plan public Union Operator Plan plan boolean Schema plan Schema Schema public boolean Schema return Schema Override public Logical Schema get Schema throws Frontend Exception schema null return schema List Operator inputs plan get Predecessors predecessor schema null schema union null Operator input inputs Logical Relational Operator op Logical Relational Operator input op get Schema null Schema String msg Schema relation op get Alias null used relations null schema throw new Frontend Exception msg Exception else return null Logical Schema merged Schema null inputs size return schema Logical Relational Operator inputs get get Schema List String input Aliases new Array List String inputs size List Logical Schema input Schemas new Array List Logical Schema inputs size Operator input inputs Logical Relational Operator lop Logical Relational Operator input input Aliases add lop get Alias input Schemas add lop get Schema Schema merged Schema create Merged Schema Alias input Schemas input Aliases else Logical Schema input Schemas get Logical Schema input Schemas get merged Schema Logical Schema merge Logical Schema Merge Mode Union merged Schema null return null Merge schema int input Schemas size Logical Schema Schema input Schemas get merged Schema null Schema null return null merged Schema Logical Schema merge merged Schema Schema Logical Schema Merge Mode Union merged Schema null return null Bring back cached uid otherwise cache uid generated int merged Schema size Logical Schema Logical Field Schema output Field Schema merged Schema get Field long uid Search cached uid mappings input field see cached output uid output field Logical Schema input Schema input Schemas Logical Schema Logical Field Schema input Field Schema Schema input Field Schema input Schema get Field Sub Name Match output Field Schema alias else input Field Schema input Schema get Field input Field Schema null uid get Cached Ouput Uid input Field Schema uid uid break cached uid Allocate one locate cache inputs uid uid Logical Expression get Next Uid Logical Schema input Schema input Schemas long input Uid Logical Field Schema matched Input Field Schema Schema matched Input Field Schema input Schema get Field Sub Name Match merged Schema get Field alias matched Input Field Schema null input Uid matched Input Field Schema uid uid Mapping add new Pair Long Long uid input Uid else matched Input Field Schema merged Schema get Field input Uid input Schema get Field uid uid Mapping add new Pair Long Long uid input Uid output Field Schema uid uid return schema merged Schema create schema union onschema private Logical Schema create Merged Schema Alias List Logical Schema input Schemas List String input Aliases throws Frontend Exception Array List Logical Schema schemas new Array List Logical Schema int input Schemas size Logical Schema sch input Schemas get Logical Field Schema fs sch get Fields fs alias null String msg Schema relation input Aliases get null fieldschema column Schema sch String false throw new Frontend Exception msg Exception schemas add sch create merged schema Logical Schema merged Schema null try merged Schema Logical Schema merge Schemas Alias schemas catch Frontend Exception e String msg Error merging schemas union operator e get Message throw new Frontend Exception msg Exception e return merged Schema private long get Cached Ouput Uid long input Uid long uid Pair Long Long pair uid Mapping pair second input Uid uid pair first break return uid Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Relational Nodes Visitor throw new Frontend Exception Expected Logical Plan Visitor Logical Relational Nodes Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Union return check Equality Union else return false Get input uids mapping output uid public Set Long get Input Uids long uid Set Long result new Hash Set Long Pair Long Long pair uid Mapping pair first uid result add pair second return result Override public void reset Uid uid Mapping new Array List Pair Long Long public List Operator get Inputs return plan get Predecessors public List Operator get Inputs Logical Plan plan return plan get Predecessors public void set Union Schema boolean flag Schema flag
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import org apache commons logging Log import org apache commons logging Log Factory import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception public class Equal Expr extends Binary Comparison Operator private static final long serial Version transient private final Log log Log Factory get Log get Class public Equal Expr Operator Key k k public Equal Expr Operator Key k int rp super k rp result Type Data Type Override public String name return Less Equal Data Type find Type Name result Type Key String Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Equal Override public Result get Next Boolean throws Exec Exception Result left right switch operand Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type Result r accum Child null operand Type r null return r left lhs get Next operand Type right rhs get Next operand Type return Comparison left right default int err Code String msg get Class get Simple Name know handle type Data Type find Type Name operand Type throw new Exec Exception msg err Code Exception Suppress Warnings unchecked private Result Comparison Result left Result right left return Status Status return left right return Status Status return right either operand null result null left result null right result null left result null left return Status Status return left assert left result instanceof Comparable assert right result instanceof Comparable Comparable left result compare right result left result Boolean else left result Boolean illustrator Markup null left result Boolean left result return left Override public Equal Expr clone throws Clone Supported Exception Equal Expr clone new Equal Expr new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import java io Buffered Input Stream import java io Buffered Reader import java io Buffered Writer import java io File import java io File Input Stream import java io File Reader import java io File Writer import java io Exception import java io Input Stream import java io Input Stream Reader import java io Reader import java io String Reader import java net import java nio charset Charset import java text Parse Exception import java util Abstract List import java util Array List import java util Arrays import java util Date import java util Hash Set import java util List import java util Map import java util Properties import java util jar Attributes import java util jar Jar File import java util jar Manifest import jline console Console Reader import jline console history File History import org antlr runtime Recognition Exception import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop security User Group Information import org apache hadoop util Generic Options Parser import org apache log j Level import org apache log j Logger import org apache log j Property Configurator import org apache Runner Return Code import org apache backend Backend Exception import org apache backend executionengine Exec Exception import org apache backend hadoop datastorage Configuration Util import org apache classification Interface Audience import org apache classification Interface Stability import org apache impl Context import org apache impl Impl Constants import org apache impl io File Localizer import org apache impl util Jar Manager import org apache impl util Log Utils import org apache impl util Object Serializer import org apache impl util Properties Util import org apache impl util Context import org apache impl util Utils import org apache parser Dry Run Grunt Parser import org apache scripting Script Engine import org apache scripting Script Engine Supported Script Lang import org apache tools cmdline Cmd Line Parser import org apache tools grunt Console Reader Input Stream import org apache tools grunt Grunt import org apache tools pigstats Progress Notification Listener import org apache tools pigstats Stats import org apache tools pigstats Stats Util import org apache tools pigstats Script State import org apache tools timer Performance Timer Factory import org joda time Date Time import org joda time Duration import org joda time Period import org joda time Period Type import org joda time format Period Format import com google common annotations Visible Testing import com google common base Strings import com google common io Closeables Main class engine Interface Audience Limited Private Oozie Interface Stability Stable public class Main static Utils add Shutdown Hook Priority new Runnable Override public void run File Localizer delete Temp Resource Files Impl Constants private final static Log log Log Factory get Log Main class private static final String log jconf private static final String brief private static final String debug private static final String verbose private static final String version private static final String major Version private static final String minor Version private static final String patch Version private static final String svn Revision private static final String build Time private enum Exec Mode protected static final String notification listener protected static final String notification listener arg static Attributes attr null try String find Containing Jar Jar Manager find Containing Jar Main class find Containing Jar null Jar File jar new Jar File find Containing Jar final Manifest manifest jar get Manifest final Map String Attributes attrs manifest get Entries attr attrs get org apache else log info Unable read pigs manifest file running jar version information unavailable catch Exception e log warn Unable read pigs manifest file version information unavailable e attr null version attr get Value Implementation Version svn Revision attr get Value Svn Revision build Time attr get Value Build Time Stamp String split version split major Version split minor Version split patch Version split else version null major Version null minor Version null patch Version null svn Revision null build Time null Main Class Jar provide shell setup classpath appropriate executing Jar files Warning method calls System exit param args jar used add additional jar files colon separated start shell e execute rest command line input shell throws Exception public static void main String args System exit run args null static int run String args Progress Notification Listener listener Date Time start Time new Date Time int rc boolean verbose false boolean grunt Called false boolean delete Temp Files true String log File Name null boolean print Script Run Time true Context Context null try Configuration conf new Configuration false Generic Options Parser parser new Generic Options Parser conf args conf parser get Configuration Properties properties new Properties Properties Util load Default Properties properties properties put Configuration Util Properties conf listener null listener make Listener properties String Args parser get Remaining Args boolean user Specified Log false boolean check Script false Buffered Reader pin null boolean debug false boolean dryrun false boolean embedded false List String params new Array List String List String param Files new Array List String Hash Set String disabled Optimizer Rules new Hash Set String Cmd Line Parser opts new Cmd Line Parser Args opts register Opt log jconf Cmd Line Parser Value Expected opts register Opt b brief Cmd Line Parser Value Expected opts register Opt c check Cmd Line Parser Value Expected opts register Opt debug Cmd Line Parser Value Expected opts register Opt e execute Cmd Line Parser Value Expected opts register Opt f file Cmd Line Parser Value Expected opts register Opt g embedded Cmd Line Parser Value Expected opts register Opt h help Cmd Line Parser Value Expected opts register Opt version Cmd Line Parser Value Expected opts register Opt l logfile Cmd Line Parser Value Expected opts register Opt param file Cmd Line Parser Value Expected opts register Opt p param Cmd Line Parser Value Expected opts register Opt r dryrun Cmd Line Parser Value Expected opts register Opt optimizer Cmd Line Parser Value Expected opts register Opt v verbose Cmd Line Parser Value Expected opts register Opt w warning Cmd Line Parser Value Expected opts register Opt x exectype Cmd Line Parser Value Expected opts register Opt stop failure Cmd Line Parser Value Expected opts register Opt multiquery Cmd Line Parser Value Expected opts register Opt fetch Cmd Line Parser Value Expected opts register Opt property File Cmd Line Parser Value Expected Exec Mode mode Exec Mode String file null String engine null set client side system properties context Context get Context set Client System Props properties char opt opt opts get Next Opt Cmd Line Parser End Opts switch opt case String log jconf opts get Val Str log jconf null properties set Property log jconf break case b properties set Property true break case c check Script true break case String log Level opts get Val Str log Level null properties set Property log Level debug true break case e mode Exec Mode break case f mode Exec Mode file opts get Val Str break case g embedded true engine opts get Val Str break case properties set Property stop failure true break case h String topic opts get Val Str topic null topic equals Ignore Case properties print Properties else System println Invalide help topic topic usage else usage return Return Code case print Script Run Time false System println get Version String return Return Code case l call method validates path log file sets file store client side log file String log File Parameter opts get Val Str log File Parameter null log File Parameter length log File Name validate Log File log File Parameter null else log File Name validate Log File log File Name null user Specified Log true properties set Property logfile log File Name null log File Name break case param Files add opts get Val Str break case turns multiquery optimization properties set Property Configuration false break case properties set Property Configuration false break case p params add opts get Val Str break case r currently used parameter substitution extended future dryrun true break case disabled Optimizer Rules add opts get Val Str break case v properties set Property true verbose true break case w properties set Property aggregate warning false break case x properties set Property exectype opts get Val Str opts get Val Str Lower Case contains local User Group Information set Configuration new Configuration false break case Input Stream input Stream null try File Localizer Fetch File Ret local File Ret File Localizer fetch File properties opts get Val Str input Stream new Buffered Input Stream new File Input Stream local File Ret file properties load input Stream catch Exception e throw new Runtime Exception Unable parse properties file opts get Val Str finally input Stream null try input Stream close catch Exception e break default Character cc Character value opt throw new Assertion Error Unhandled option cc String create context parameter Context new Context properties create static script state object Script State script State Context get Execution Engine instantiate Script State String command Line Load Func join Abstract List String Arrays List args script State set Command Line command Line listener null script State register Listener listener Script State start script State Context get Properties set Property cmd args command Line log File Name null user Specified Log log File Name validate Log File properties get Property logfile null Context get Properties set Property logfile log File Name null log File Name configure logging configure Log properties Context log info get Version String replace n log File Name null log info Logging error messages log File Name delete Temp Files Boolean value properties get Property Configuration true Context get Properties set Property Impl Constants Object Serializer serialize disabled Optimizer Rules Context set Class Loader Context create Cl null construct parameter substitution preprocessor Grunt grunt null Buffered Reader String subst File null param Files fetch Remote Param Files param Files properties Context set Params params Context set Param Files param Files switch mode case String remainders opts get Remaining Args remainders null Context get Properties set Property Context Object Serializer serialize remainders File Localizer Fetch File Ret local File Ret File Localizer fetch File properties file local File Ret Fetch properties set Property jars relative dfs true script State set File Name file embedded return run Embedded Script Context local File Ret file get Path engine else Supported Script Lang type determine Script Type local File Ret file get Path type null return run Embedded Script Context local File Ret file get Path type name Lower Case Reader created first loading load default statements pigbootup file available new Buffered Reader new Input Stream Reader Utils get Composite Stream new File Input Stream local File Ret file properties run parameter substitution preprocessor first subst File file substituted pin run Param Preprocessor Context subst File debug dryrun check Script dryrun dryrun subst File Context log info Dry run completed Substituted script subst File Expanded script file expanded else log info Dry run completed Substituted script subst File return Return Code log File Name validate Log File log File Name local File Ret file Context get Properties set Property logfile log File Name null log File Name Set job name based name script Context get Properties set Property Context Latin new File file get Name debug new File subst File delete Exit script State set Script local File Ret file grunt new Grunt pin Context grunt Called true check Script grunt check Script subst File System err println file syntax rc Return Code else int results grunt exec rc get Return Code Stats results return rc case check Script System err println c check option valid executing script file return Return Code Gather remaining arguments string pass grunt String Buffer sb new String Buffer String remainders opts get Remaining Args int remainders length sb append sb append remainders sb append n script State set Script sb String new Buffered Reader new String Reader sb String grunt new Grunt Context grunt Called true int results grunt exec return get Return Code Stats results default break n know yet want may given us jar execute might given us script execute might given us dash nothing means run grunt interactive String remainders opts get Remaining Args remainders null check Script System err println c check option valid executing script file return Return Code Interactive mode Exec Mode Reader created first loading load default statements pigbootup file available Console Reader reader new Console Reader Utils get Composite Stream System properties System reader set Expand Events false reader set Prompt grunt final String history String history File System get Property user home File separator reader set History new File History new File history File Console Reader Input Stream input Stream new Console Reader Input Stream reader grunt new Grunt new Buffered Reader new Input Stream Reader input Stream Context grunt set Console Reader reader grunt Called true grunt run return Return Code else Context get Properties set Property Context Object Serializer serialize remainders script want us run mode Exec Mode File Localizer Fetch File Ret local File Ret File Localizer fetch File properties remainders local File Ret Fetch properties set Property jars relative dfs true script State set File Name remainders embedded return run Embedded Script Context local File Ret file get Path engine else Supported Script Lang type determine Script Type local File Ret file get Path type null return run Embedded Script Context local File Ret file get Path type name Lower Case Reader created first loading load default statements pigbootup file available Input Stream seq Input Stream Utils get Composite Stream new File Input Stream local File Ret file properties new Buffered Reader new Input Stream Reader seq Input Stream run parameter substitution preprocessor first subst File remainders substituted pin run Param Preprocessor Context subst File debug dryrun check Script dryrun dryrun subst File Context log info Dry run completed Substituted script subst File Expanded script remainders expanded else log info Dry run completed Substituted script subst File return Return Code log File Name validate Log File log File Name local File Ret file Context get Properties set Property logfile log File Name null log File Name debug new File subst File delete Exit Set job name based name script Context get Properties set Property Context Latin new File remainders get Name script State set Script local File Ret file grunt new Grunt pin Context grunt Called true check Script grunt check Script subst File System err println remainders syntax rc Return Code else int results grunt exec rc get Return Code Stats results return rc Per Utkarsh Chris invocation jar file via depricated catch Parse Exception e usage rc Return Code Stats Util set Error Message e get Message Stats Util set Error Throwable e catch org apache tools parameters Parse Exception e usage rc Return Code Stats Util set Error Message e get Message Stats Util set Error Throwable e catch Exception e e instanceof Exception Exception pe Exception e rc pe retriable Return Code Return Code Stats Util set Error Message pe get Message Stats Util set Error Code pe get Error Code else rc Return Code Stats Util set Error Message e get Message Stats Util set Error Throwable e grunt Called Log Utils write Log e log File Name log verbose Error launched kill Running Jobs Interrupted e Context catch Throwable e rc Return Code Stats Util set Error Message e get Message Stats Util set Error Throwable e grunt Called Log Utils write Log e log File Name log verbose Error launched kill Running Jobs Interrupted e Context finally print Script Run Time print Script Run Time start Time delete Temp Files clear temp files File Localizer delete Temp Files Context null Context get Execution Engine destroy Performance Timer Factory get Perf Timer Factory dump Timers return rc private static void print Script Run Time Date Time start Time Date Time end Time new Date Time Duration duration new Duration start Time end Time Period period duration Period normalized Standard Period Type time log info script completed Period Format get Default print period duration get Millis ms private static void kill Running Jobs Interrupted Throwable e Context Context Throwable cause e get Cause Kill running job get Interrupted Exception thread interrupted mapreduce Oozie launcher job killed Shutdown hook kills running jobs sometimes Node Manager issue unregisters shutdown hook gets execute causing orphaned jobs continue run e instanceof Interrupted Exception cause null cause instanceof Interrupted Exception try Context get Execution Engine kill catch Backend Exception log error Error killing running jobs protected static Progress Notification Listener make Listener Properties properties try return Context instantiate Object Params Configuration Util Configuration properties Progress Notification Listener class catch Exec Exception e throw new Runtime Exception e private static int get Return Code Stats int stats return stats Return Code failed jobs stats Return Code succeeded jobs Return Code jobs failed public static boolean dryrun String script File Context Context throws Recognition Exception Exception Buffered Reader rd new Buffered Reader new File Reader script File Dry Run Grunt Parser dryrun new Dry Run Grunt Parser rd script File Context boolean Macro dryrun parse Stop Error Macro String expanded File script File replace substituted expanded Buffered Writer fw new Buffered Writer new File Writer expanded File fw append dryrun get Result fw close return Macro jz log j properties used instead private static void configure Log Properties properties Context Context Add file appender logs Need create property properties file sgroschupf Feb method obsolete String log jconf properties get Property String true String true boolean brief true String equals Ignore Case properties get Property Level log Level Level String log Level String properties get Property log Level String null log Level Level Level log Level String Level final Properties props log j Conf Properties log jconf props size props set Property log j logger org apache log Level String log Level String System get Property logfile level null props set Property log j root Logger else log Level Level Level log Level String Level props set Property log j logger org apache log Level String props set Property log j root Logger props set Property log j appender org apache log j Rolling File Appender props set Property log j appender File properties get Property logfile props set Property log j appender layout org apache log j Pattern Layout props set Property log j appender layout Conversion Pattern brief n p c n props set Property log j appender org apache log j Console Appender props set Property log j appender target System err props set Property log j appender layout org apache log j Pattern Layout props set Property log j appender layout Conversion Pattern brief n p c n Property Configurator configure props log Level Logger get Logger org apache get Level log Level null log Level Logger get Logger org apache get Effective Level Properties backend Props Context get Log j Properties backend Props set Property log j logger org apache log Level String Context set Log j Properties backend Props Context set Default Log Level log Level Visible Testing static Properties log j Conf Properties String log jconf final Properties properties new Properties Strings Null Empty log jconf Reader property Reader null try final File file new File log jconf file exists property Reader new File Reader file properties load property Reader log info Loaded log j properties file file else final resource Main class get Class Loader get Resource log jconf resource null property Reader new Input Stream Reader resource open Stream Charset Name properties load property Reader log info Loaded log j properties resource resource else log warn file resource found name log jconf catch Exception e log warn open log j properties file log jconf using default finally Closeables close Quietly property Reader return properties private static List String fetch Remote Param Files List String param Files Properties properties throws Exception List String param Files new Array List String String param param Files File Localizer Fetch File Ret local File Ret File Localizer fetch File properties param param Files add local File Ret file get Absolute Path return param Files returns stream final script passed Grunt private static Buffered Reader run Param Preprocessor Context context Buffered Reader orig Script String script File boolean create File throws org apache tools parameters Parse Exception Exception create File return context Param Substitution Output File orig Script script File else String substituted context Param Substitution orig Script return new Buffered Reader new String Reader substituted Returns major version run public static String get Major Version return major Version Returns major version build run public static String get Minor Version return minor Version Returns patch version build run public static String get Patch Version return patch Version Returns svn revision number build run public static String get Svn Revision return svn Revision Returns built time build run public static String get Build Time return build Time Returns version string formatted similarly svn pre Apache version r compiled Nov pre public static String get Version String return Apache version version r svn Revision ncompiled build Time Print usage string public static void usage System println n get Version String n System println options Run interactively grunt shell System println options e xecute cmd cmd Run cmd System println options f ile file Run cmds found file System println options include System println log jconf Log j configuration file overrides log conf System println b brief Brief logging timestamps System println c check Syntax check System println debug Debug level default System println e execute Commands execute within quotes System println f file Path script execute System println g embedded Script Engine classname keyword Script Engine System println h help Display message specify topic get help topic System println properties topic currently supported h properties System println version Display version information System println l logfile Path client side log file default current working directory System println param file Path parameter file System println p param Key value pair form param val System println r dryrun Produces script substituted parameters Script executed System println optimizer Turn optimizations following values supported System println Constant Calculator Calculate constants compile time System println Split Filter Split filter conditions System println Push Filter Filter early possible System println Merge Filter Merge filter conditions System println Push Foreach Flatten Join explode late possible System println Limit Optimizer Limit early possible System println Column Map Key Prune Remove unused data System println Add Add remove unneeded columns System println Merge Merge adjacent System println Group Const Parallel Setter Force parallel group statement System println Partition Filter Optimizer Pushdown partition filter conditions loader implementing Load Meta Data System println Predicate Pushdown Optimizer Pushdown filter predicates loader implementing Load Predicate Push System println Disable optimizations System println optimizations listed enabled default Optimization values case insensitive System println v verbose Print error messages screen System println w warning Turn warning logging also turns warning aggregation System println x exectype Set execution mode local mapreduce tez default mapreduce System println stop failure Aborts execution first failed job default System println multiquery Turn multiquery optimization default System println fetch Turn fetch optimization default System println property File Path property file System println print Cmd Debug Overrides anything else prints actual command used run including System println environment variables set command public static void print Properties System println following properties supported System println Logging System println verbose true false default false property v switch System println brief true false default false property b switch System println debug default property switch System println aggregate warning true false default true true prints count warnings System println type rather logging warning System println Performance tuning System println cachedbag memusage mem fraction default memory System println Note memory shared across large bags used application System println skewedjoin reduce memusagea mem fraction default memory System println Specifies fraction heap available reducer perform join System println exec nocombiner true false default false System println disable combiner temporary workaround problems System println opt multiquery true false multiquery default System println disable multiquery temporary workaround problems System println opt fetch true false fetch default System println Scripts containing Filter Foreach Limit Stream Union dumped without jobs System println tmpfilecompression true false compression default System println Determines whether output intermediate jobs compressed System println tmpfilecompression codec lzo gzip default gzip System println Used conjunction tmpfilecompression Defines compression type System println Split Combination true false Split combination default System println Determines multiple small files combined single map System println exec map Part Agg true false Default false System println Determines partial aggregation done within map phase System println records sent combiner System println exec map Part Agg min Reduction min aggregation factor Default System println map partial aggregation reduce output num records System println factor gets disabled System println Miscellaneous System println exectype mapreduce tez local default mapreduce property x switch System println additional jars uris comma seperated list jars Used place register command System println udf import list Colon seperated list imports Used avoid package names System println stop failure true false default false Set true terminate first error System println datetime default tz time offset e g Default default timezone host System println Determines timezone used handle datetime datatype Fs System println artifacts download location path download artifacts default groovy grapes System println Determines location download artifacts registering jars using ivy coordinates System println Additionally Hadoop property specified private static String validate Log File String log File Name File script File String stripped Script Name null script File null script File Directory String script File Abs Path try script File Abs Path script File get Canonical Path stripped Script Name get File Canonical Path script File Abs Path catch Exception ioe log warn Could compute canonical path script file ioe get Message stripped Script Name null String default Log File Name stripped Script Name null stripped Script Name new Date get Time log File log File log File Name null log File new File log File Name Check file name directory append default file name file log File Directory log File Write try log File Name log File get Canonical Path File separator default Log File Name catch Exception ioe log warn Could compute canonical path log file ioe get Message return null return log File Name else log warn Need write permission directory log File Name create log file return null else relative path absolute path log file check write directory file stored log File exists log File Write try log File Name new File log File Name get Canonical Path catch Exception ioe log warn Could compute canonical path log file ioe get Message return null return log File Name else write permissions log file bail error message log warn write file log File Name Need write permission return log File Name else log File log File get Parent File log File null directory writable good go log File Write try log File Name new File log File Name get Canonical Path catch Exception ioe log warn Could compute canonical path log file ioe get Message return null return log File Name else log warn Need write permission directory log File create log file return log File Name end log File null else default fall end else part log File exists end else part log File Directory end log File Name null file name null current working directory revert current working directory String curr Dir System get Property user dir log File new File curr Dir log File Name curr Dir File separator log File Name null default Log File Name log File Name log File Write return log File Name log warn write log file log File Name return null private static String get File Canonical Path String canonical Path return canonical Path substring canonical Path last Index File separator private static Supported Script Lang determine Script Type String file throws Exception return Script Engine get Supported Script Lang file private static int run Embedded Script Context Context String file String engine throws Exception log info Run embedded script engine Context connect Script Engine script Engine Script Engine get Instance engine Map String List Stats stats Map script Engine run Context file Stats Util set Stats Map stats Map int fail Count int total Count List Stats lst stats Map values lst null lst Empty Stats stats lst stats Successful fail Count total Count return total Count fail Count total Count Return Code fail Count Return Code Return Code
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import java util List import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema import org apache parser Source Location public class Map Lookup Expression extends Column Expression key lookup along type schema corresponding type schema value linked key private String Map Key public Map Lookup Expression Operator Plan plan String map Key super Map plan Map Key map Key plan add link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Map Lookup Expression Map Lookup Expression po Map Lookup Expression po Map Key compare Map Key return false else check nested map equality plan get Successors null get Plan get Successors null return false else return plan get Successors get Equal get Plan get Successors get else get Plan get Successors null return false else return true else return false public Logical Expression get Map throws Frontend Exception List Operator preds plan get Successors preds null return null return Logical Expression preds get public String get Lookup Key return Map Key public Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema Logical Expression successor Logical Expression plan get Successors get Logical Field Schema pred successor get Field Schema pred null pred type Data Type pred schema null field Schema pred schema get Field return field Schema else field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema return null public String String String Builder msg new String Builder msg append Name name Type field Schema null msg append Data Type find Type Name field Schema type else msg append null msg append Uid field Schema null msg append field Schema uid else msg append null msg append Key Map Key msg append return msg String Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy null copy new Map Lookup Expression lg Exp Plan get Lookup Key one input expected Logical Expression input Logical Expression plan get Successors get Logical Expression input Copy input deep Copy lg Exp Plan lg Exp Plan add input Copy lg Exp Plan connect copy input Copy copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Exception import java io Print Stream import java text Simple Date Format import java util Array List import java util Calendar import java util Hash Map import java util Iterator import java util Linked List import java util List import java util Map import java util Properties import javax xml parsers Parser Configuration Exception import javax xml transform Transformer Exception import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop mapred Counters import org apache hadoop mapred Job Client import org apache hadoop mapred Job Conf import org apache hadoop mapred Job import org apache hadoop mapred Running Job import org apache hadoop mapreduce Cluster import org apache hadoop mapreduce Task Report import org apache hadoop mapred jobcontrol Job import org apache hadoop mapreduce Task Type import org apache hadoop mapreduce lib jobcontrol Controlled Job import org apache Configuration import org apache Exception import org apache Runner Return Code import org apache Warning import org apache backend Backend Exception import org apache backend executionengine Exec Exception import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop executionengine Job Creation Exception import org apache backend hadoop executionengine Launcher import org apache backend hadoop executionengine map Reduce Layer Compiler Last Input Streaming Optimizer import org apache backend hadoop executionengine map Reduce Layer plans Dot Printer import org apache backend hadoop executionengine map Reduce Layer plans End Input Setter import org apache backend hadoop executionengine map Reduce Layer plans Intermediate Data Visitor import org apache backend hadoop executionengine map Reduce Layer plans Oper Plan import org apache backend hadoop executionengine map Reduce Layer plans Printer import org apache backend hadoop executionengine map Reduce Layer plans Package Annotator import org apache backend hadoop executionengine map Reduce Layer plans Printer import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Join Packager import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine shims Hadoop Shims import org apache impl Context import org apache impl Impl Constants import org apache impl io File Localizer import org apache impl io File Spec import org apache impl plan Compilation Message Collector import org apache impl plan Compilation Message Collector Message Type import org apache impl plan Plan Exception import org apache impl plan Visitor Exception import org apache impl util Configuration Validator import org apache impl util Log Utils import org apache impl util Context import org apache impl util Utils import org apache tools pigstats Output Stats import org apache tools pigstats Stats import org apache tools pigstats Stats Util import org apache tools pigstats mapreduce Job Stats import org apache tools pigstats mapreduce Stats Util import org apache tools pigstats mapreduce Script State import org python google common collect Lists Main class launches Map Reduce public class Map Reduce Launcher extends Launcher public static final String private static final Log log Log Factory get Log Map Reduce Launcher class private boolean aggregate Warning false public Map Reduce Launcher super Utils add Shutdown Hook Priority new Hanging Job Killer Impl Constants Override public void kill try jc null jc get Running Jobs size log info Received kill signal Job job jc get Running Jobs org apache hadoop mapreduce Job mr Job job get Job try mr Job null mr Job kill Job catch Exception ir throw new Exception ir log info Job job get Assigned Job killed String time Stamp new Simple Date Format yyyy dd mm ss format Calendar get Instance get Time System err println time Stamp Job job get Assigned Job killed catch Exception e log warn Encounter exception cleanup e Override public void kill Job String job Configuration conf throws Backend Exception try conf null Job Conf job Conf new Job Conf conf Job Client jc new Job Client job Conf Job id Job Name job Running Job job jc get Job id job null System println Job id job active else job kill Job log info Kill id submitted catch Exception e throw new Backend Exception e Get exception caused failure backend store location public Exception get Error File Spec spec return failure Map get spec Override public Stats launch Physical Plan php String grp Name Context pc throws Plan Exception Visitor Exception Exception Exec Exception Job Creation Exception Exception long sleep Time aggregate Warning Boolean value pc get Properties get Property aggregate warning Oper Plan mrp compile php pc Configuration Validator validate Properties pc get Properties Configuration conf Configuration Util Configuration pc get Properties Execution Engine exe Execution Engine pc get Execution Engine Properties default Properties new Properties Job Conf default Job Conf exe get Local Conf Utils recompute Properties default Job Conf default Properties generic Job Client checking progress jobs Job Client stats Job Client new Job Client exe get Job Conf Job Control Compiler jcc new Job Control Compiler pc conf Configuration Util Configuration default Properties Script State get add Workflow Adjacencies Conf mrp conf start collecting statistics Stats start pc get Execution Engine instantiate Stats Stats Util start Collection pc stats Job Client jcc mrp Find intermediate data stores plan destroyed compile execution needs done Intermediate Data Visitor intermediate Visitor new Intermediate Data Visitor mrp intermediate Visitor visit List Job failed Jobs new Linked List Job List Native Map Reduce Oper failed Native new Linked List Native Map Reduce Oper List Job complete Failed Jobs Run new Linked List Job List Job succ Jobs new Linked List Job int total Jobs mrp size int num Jobs Compl double last Prog long script Submitted Timestamp System current Time Millis create exception handler job control thread register handler job control thread Job Control Thread Exception Handler jct Exception Handler new Job Control Thread Exception Handler boolean stop failure Boolean value pc get Properties get Property stop failure false boolean stopped Failure false jc null mrp size mrp size stopped Failure jc jcc compile mrp grp Name jc null List Map Reduce Oper roots new Linked List Map Reduce Oper roots add mrp get Roots run native mapreduce roots first run rest roots Map Reduce Oper mro roots mro instanceof Native Map Reduce Oper Native Map Reduce Oper nat Op Native Map Reduce Oper mro try Script State get emit Jobs Submitted Notification nat Op run Job num Jobs Compl catch Exception e mrp trim nat Op failed Native add nat Op String msg Error running native mapreduce operator job nat Op get Job Id e get Message String stack Trace Utils get Stack Strace Str e Log Utils write Log msg stack Trace pc get Properties get Property logfile log log info msg stop failure int err Code throw new Exec Exception msg err Code Exception double prog double num Jobs Compl total Jobs notify Progress prog last Prog last Prog prog mrp remove nat Op continue Initially jobs wait state List Job jobs Without Ids jc get Waiting Jobs log info jobs Without Ids size map reduce job waiting submission notify listeners jobs submitted Script State get emit Jobs Submitted Notification jobs Without Ids size update stats job compiled jobs Stats Util update Job Mro Map jcc get Job Mro Map determine job tracker url String job Tracker Loc Job Conf job Conf jobs Without Ids get get Job Conf try String port job Conf get Configuration String job Tracker Add job Conf get Configuration job Tracker Loc job Tracker Add substring job Tracker Add index port substring port index catch Exception e Could get job tracker location probably running local mode case n print job tracker location meaningless local mode job Tracker Loc null log debug Failed get job tracker location complete Failed Jobs Run clear Set thread Context registered classes available final Context udf Context Context get Context Thread jc Thread new Thread jc Job Control Override public void run Context set Udf Context udf Context clone super run jc Thread set Uncaught Exception Handler jct Exception Handler jc Thread set Context Class Loader Context get Class Loader mark times jobs submitted reflected job history props Job job jc get Waiting Jobs Job Conf job Conf Copy job get Job Conf job Conf Copy set script submitted timestamp Long String script Submitted Timestamp job Conf Copy set job submitted timestamp Long String System current Time Millis job set Job Conf job Conf Copy setup done lets launch jobs jc Thread start try flag whether warn failure loop users notice failure earlier boolean warn failure true wait till finished jc Finished jc Thread join sleep Time List Job jobs Assigned Id Run new Array List Job Job job jobs Without Ids job get Assigned Job null jobs Assigned Id Run add job log info Hadoop Job Id job get Assigned Job display aliases processed Map Reduce Oper mro jcc get Job Mro Map get job mro null String alias Script State get get Alias mro log info Processing aliases alias String alias Location Script State get get Alias Location mro log info detailed locations alias Location update statistics job job Id set Stats Util add Job Stats job Script State get emit Job Started Notification job get Assigned Job String else job assigned id yet jobs Without Ids remove jobs Assigned Id Run double prog num Jobs Compl calculate Progress jc total Jobs notify Progress prog last Prog List Job runn Jobs jc get Running Jobs runn Jobs null String Builder msg new String Builder Object object runn Jobs Job j Job object j null msg append j get Assigned Job append msg length msg set Char msg length log info Running jobs msg last Prog prog collect job stats frequently polling completed jobs Stats Util accumulate Stats jc stop failure enabled need stop immediately job failed stopped Failure stop Jobs Failure stop failure otherwise display warning message failure stop failure warn failure jc get Failed Jobs Empty n warn group jobs warn failure false log warn Ooops job failed Specify stop failure want stop immediately failure check job Control Exception first job controller fails launching jobs jobs check failure job Control Exception null job Control Exception instanceof Exception job Control Exception Stack Trace null Log Utils write Log Error message job controller job Control Exception Stack Trace pc get Properties get Property logfile log throw job Control Exception else int err Code String msg Unexpected error launching map reduce job throw new Exec Exception msg err Code Exception job Control Exception jc get Failed Jobs Empty stop stop failure enabled stopped Failure stop Jobs Failure stop failure stopped Failure one store job fail sure job completely fail shall stop dependent jobs Job job jc get Failed Jobs complete Failed Jobs Run add job log info job job get Assigned Job failed Stop running dependent jobs failed Jobs add jc get Failed Jobs int removed Op jcc update Op Plan complete Failed Jobs Run num Jobs Compl removed Op List Job jobs jc get Successful Jobs jcc move Results jobs succ Jobs add jobs collecting final statistics Stats Util accumulate Stats jc catch Exception e throw e finally jc stop Script State get emit Progress Updated Notification log info complete boolean failed false failed Native size failed true Boolean value pc get Properties get Property Configuration true Clean intermediate data String path intermediate Visitor get Intermediate Skip non file system paths hbase see Hadoop Shims File System Impl new Path path conf File Localizer delete path pc Look see jobs failed need report failed Jobs null failed Jobs size Exception backend Exception null Job fj failed Jobs try get Stats fj true pc catch Exception e backend Exception e List Store sts jcc get Stores fj Store st sts failure Map put st get File backend Exception Stats Util set Backend Exception fj backend Exception failed true stats collection done log results Stats Util stop Collection true Stats Util stop Collection also computes return code based total jobs run jobs successful jobs failed failed failed Stats get Successful Map Enum Long warning Agg Map new Hash Map Enum Long succ Jobs null Job job succ Jobs List Store sts jcc get Stores job Store st sts st Tmp Store create file output location output location filesystem dir create Success File job st else log debug Successfully stored result st get File get File Name get Stats job false pc aggregate Warning compute Warning Aggregate job warning Agg Map aggregate Warning Compilation Message Collector log Aggregate warning Agg Map Message Type Warning log failed log info Success else succ Jobs null succ Jobs size log info jobs failed Stop running dependent jobs else log info Failed jcc reset int ret failed succ Jobs null succ Jobs size Return Code Return Code Return Code Stats Stats Stats Util get Stats ret run cleanup stores Output Stats output Stats get Output Stats Store store output get Store try output Successful store get Store Func cleanup Failure store get File get File Name new org apache hadoop mapreduce Job output get Conf else store get Store Func cleanup Success store get File get File Name new org apache hadoop mapreduce Job output get Conf catch Exception e throw new Exec Exception e catch Abstract Method Error nsme swallow means running older instance Store Func n implement method stopped Failure throw new Exec Exception Stopping execution job failure stop failure option Exception return Stats stop failure enabled job failed stops jobs param stop failure whether enabled return true failed jobs stop failure enabled private boolean stop Jobs Failure boolean stop failure throws Exception Interrupted Exception jc get Failed Jobs Empty return false stop failure List Controlled Job ready Jobs List jc get Ready Jobs List List Controlled Job running Job List jc get Running Job List ready Jobs List size running Job List size log info job failed Failing ready running jobs stop failure Controlled Job job ready Jobs List job fail Job Failing ready job stop failure job get Mapred Job Id Controlled Job job running Job List job fail Job Failing running job stop failure job get Mapred Job Id return true return false Log progress notify listeners sufficient progress param prog current progress param last Prog progress last time private boolean notify Progress double prog double last Prog prog last Prog int per Com int prog per Com log info per Com complete Script State get emit Progress Updated Notification per Com return true return false Override public void explain Physical Plan php Context pc Print Stream ps String format boolean verbose throws Plan Exception Visitor Exception Exception log trace Entering Map Reduce Launcher explain Oper Plan mrp compile php pc format equals text Printer printer new Printer ps mrp printer set Verbose verbose printer visit else format equals xml try Printer printer new Printer ps mrp printer visit printer close Plan catch Parser Configuration Exception e e print Stack Trace catch Transformer Exception e e print Stack Trace else ps println ps println Map Reduce Plan ps println Dot Printer printer new Dot Printer mrp ps printer set Verbose verbose printer dump ps println public Oper Plan compile Physical Plan php Context pc throws Plan Exception Exception Visitor Exception Compiler comp new Compiler php pc comp compile comp aggregate Scalars Files comp connect Soft Link Oper Plan plan comp get Plan display warning message Compiler comp get Message Collector log Messages Message Type Warning aggregate Warning log String last Input Chunk Size pc get Properties get Property last input chunksize Join Packager String prop pc get Properties get Property Configuration pc Illustrator true equals prop boolean Map Agg Boolean value pc get Properties get Property Configuration false Combiner Optimizer co new Combiner Optimizer plan Map Agg co visit display warning message Combiner Optimizer co get Message Collector log Messages Message Type Warning aggregate Warning log Optimize jobs load store first job followed sample job Sample Optimizer new Sample Optimizer plan pc visit must ensure reducer limit Add single reducer job pc Illustrator Limit Adjuster la new Limit Adjuster plan pc la visit la adjust Optimize use secondary sort key possible prop pc get Properties get Property Configuration pc Illustrator true equals prop Secondary Key Optimizer sk Optimizer new Secondary Key Optimizer plan sk Optimizer visit optimize key value handling package Package Annotator pkg Annotator new Package Annotator plan pkg Annotator visit optimize joins Last Input Streaming Optimizer liso new Compiler Last Input Streaming Optimizer plan last Input Chunk Size liso visit figure type key map plan needed key null create appropriate Nullable Writable object Key Type Discovery Visitor kdv new Key Type Discovery Visitor plan kdv visit removes filter constant true operators introduced splits Noop Filter Remover f Rem new Noop Filter Remover plan f Rem visit boolean Multi Query Boolean value pc get Properties get Property Configuration true Multi Query reduces number Opers plan generated multi query multi store script Multi Query Optimizer mq Optimizer new Multi Query Optimizer plan pc Illustrator mq Optimizer visit removes unnecessary stores happen splits cases run Multi Query Noop Filter Remover Noop Store Remover Rem new Noop Store Remover plan Rem visit check whether stream operator present Multi Query Optimizer shift streams map reduce etc End Input Setter checker new End Input Setter plan checker visit boolean Accum Boolean value pc get Properties get Property opt accumulator true Accum Accumulator Optimizer accum new Accumulator Optimizer plan accum visit return plan private boolean Mark Output Dir Job job return job get Job Conf get Boolean Configuration false private void create Success File Job job Store store throws Exception Mark Output Dir job Path output Path new Path store get File get File Name String scheme output Path Uri get Scheme Hadoop Shims File System Impl output Path job get Job Conf File System fs output Path get File System job get Job Conf fs exists output Path create file folder mark Path file Path new Path output Path fs exists file Path fs create file Path close else log warn File System scheme scheme creating success file Suppress Warnings deprecation void compute Warning Aggregate Job job Map Enum Long agg Map try Counters counters Job Stats get Counters job counters null long null Counter Count agg Map get Warning null agg Map get Warning null Counter Count agg Map put Warning null Counter Count Enum e Warning values e Warning Long current Count agg Map get e current Count current Count null current Count code checks counters null need report user number warning aggregations may correct fact Counters null hadoop bug bug fixed hadoop null handling code never hit See counters null current Count counters get Counter e agg Map put e current Count catch Exception e String msg Unable retrieve job compute warning aggregation log warn msg private void get Stats Job job boolean err Dbg Context Context throws Exec Exception Job Job job get Assigned Job String job Message job get Message Exception backend Exception null Job null try Log Utils write Log Backend error message job submission job Message Context get Properties get Property logfile log backend Exception get Exception String job Message catch Exception e int err Code String msg Unable recreate exception backend error job Message throw new Exec Exception msg err Code Exception throw new Exec Exception backend Exception try Iterator Task Report map Rep Job Stats get Task Reports job Task Type map Rep null get Error Messages map Rep map err Dbg Context total Hadoop Time Spent compute Time Spent map Rep map Rep null Iterator Task Report red Rep Job Stats get Task Reports job Task Type red Rep null get Error Messages red Rep reduce err Dbg Context total Hadoop Time Spent compute Time Spent red Rep red Rep null catch Exception e job get State Job job succeeded let user know unable get statistics log warn Unable get job related diagnostics else throw new Exec Exception e catch Exception e throw new Exec Exception e
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Byte Array Output Stream import java util Array List import java util Hash Set import java util Iterator import java util List import java util Set import org apache backend hadoop executionengine map Reduce Layer plans Op Plan Visitor import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Counter import org apache backend hadoop executionengine physical Layer relational Operators Rank import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer relational Operators Union import org apache impl plan Node Id Generator import org apache impl plan Operator import org apache impl plan Operator Key import org apache impl plan Plan Exception import org apache impl plan Visitor Exception import org apache impl util Multi Map operator model Map Reduce job Acts host plans execute map reduce optionally combine phases embedded Oper Plan order capture dependencies amongst jobs public class Map Reduce Oper extends Operator Op Plan Visitor private static final long serial Version physical plan executed map phase public Physical Plan map Plan physical plan executed reduce phase public Physical Plan reduce Plan physical plan executed combine phase one exists used optimizer public Physical Plan combine Plan key map plan needed key null create appropriate Nullable Writable object public byte map Key Type record map key types splittees public byte map Key Type Splittees Indicates map plan creation complete boolean map Done false Indicates reduce plan creation complete boolean reduce Done false Indicates operator uses end Input flag map plan boolean end Input Map false Indicates operator uses end Input flag reduce plan boolean end Input Reduce false Indicates job order job boolean global Sort false Indicates limit sort boolean limit Sort false Indicate entire purpose map reduce job limit change anything else help Package Annotator find right Package annotate boolean limit false feature true putting identity combine mapreduce job speed things boolean needs Distinct Combiner false true use secondary key map reduce job boolean use Secondary Key false quantiles file name global Sort true String quant File sort order columns asc true desc false boolean sort Order Sort order secondary keys boolean secondary Sort Order public Set String Fs public Set Physical Operator scalars Indicates comparator used boolean Comparator Used false transient Node Id Generator nig private String scope int requested Parallelism estimated runtime int estimated Parallelism calculated runtime int runtime Parallelism Name Custom Partitioner used String custom Partitioner null Last Limit value map reduce operator needed Limit Adjuster add additional map reduce operator reducer long limit Limit also expression See Physical Plan limit Plan null Indicates Oper splitter Oper Oper ends due Plit operator private boolean splitter false Set true skewed join private boolean skewed Join false Name partition file generated sampling process Used Skewed Join private String skewed Join Partition File Flag communicate Compiler Job Control Compiler kind comparator used Hadoop sorting Oper default set false make provide raw comparators Set true indexing job generated map side cogroup merge join private boolean using Typed Comparator false Flag indicate small input splits need combined form larger one order reduce number mappers merge join tables combinable correctness private boolean combine Small Splits true Map physical operator physical plan one plan needed physical operator changed replaced compilation due e g optimization public Multi Map Physical Operator Physical Operator phy Map private static enum Indicate job sampling job Indicate job merge indexer Indicate job group job Indicate job cogroup job Indicate job regular join job public Map Reduce Oper Operator Key k super k map Plan new Physical Plan combine Plan new Physical Plan reduce Plan new Physical Plan Fs new Hash Set String scalars new Hash Set Physical Operator nig Node Id Generator get Generator scope k get Scope phy Map new Multi Map Physical Operator Physical Operator Override public String name return Map Reduce Key String private String shift String Tabs String Str String tab String Builder sb new String Builder String spl Str split n int spl length sb append tab sb append spl sb append n sb delete sb length n length sb length return sb String Uses string representation component plans identify Override public String name String udf Str get Fs Str String Builder sb new String Builder Map Reduce requested Parallelism udf Str equals udf Str Key String n int index sb length Byte Array Output Stream baos new Byte Array Output Stream map Plan Empty map Plan explain baos String mp new String baos Byte Array sb append shift String Tabs mp else sb append Map Plan Empty reduce Plan Empty baos reset reduce Plan explain baos String rp new String baos Byte Array sb insert index shift String Tabs rp n else sb insert index Reduce Plan Empty n return sb String private String get Fs Str String Builder sb new String Builder Fs null Fs size String str Fs sb append str substring str last Index sb append sb delete Char sb length return sb String Override public boolean supports Multiple Inputs return true Override public boolean supports Multiple Outputs return true Override public void visit Op Plan Visitor v throws Visitor Exception v visit Op public boolean Map Done return map Done public void set Map Done boolean map Done map Done map Done public void set Map Done Single boolean map Done throws Plan Exception map Done map Done map Done map Plan get Leaves size map Plan add Leaf get Union public void set Map Done Multiple boolean map Done throws Plan Exception map Done map Done map Done map Plan get Leaves size map Plan add Leaf get Union private Union get Union return new Union new Operator Key scope nig get Next Node Id scope public boolean Reduce Done return reduce Done public void set Reduce Done boolean reduce Done reduce Done reduce Done public boolean Global Sort return global Sort public boolean Skewed Join return skewed Join Partition File null public void set Skewed Join Partition File String file skewed Join Partition File file public String get Skewed Join Partition File return skewed Join Partition File public void set Skewed Join boolean sk Join skewed Join sk Join public boolean get Skewed Join return skewed Join public void set Global Sort boolean global Sort global Sort global Sort public boolean Limit Sort return limit Sort public void set Limit Sort boolean las limit Sort las public boolean Limit return limit public void set Limit boolean limit limit limit public boolean Indexer return feature public void mark Indexer feature public boolean Sampler return feature public void mark Sampler feature public boolean Group return feature public void mark Group feature public boolean Cogroup return feature public void mark Cogroup feature public boolean Regular Join return feature public void mark Regular Join feature public boolean needs Distinct Combiner return needs Distinct Combiner public void set Needs Distinct Combiner boolean nic needs Distinct Combiner nic public String get Quant File return quant File public void set Quant File String quant File quant File quant File public void set Sort Order boolean sort Order null sort Order return sort Order new boolean sort Order length int sort Order length sort Order sort Order public void set Secondary Sort Order boolean secondary Sort Order null secondary Sort Order return secondary Sort Order new boolean secondary Sort Order length int secondary Sort Order length secondary Sort Order secondary Sort Order public boolean get Sort Order return sort Order public boolean get Secondary Sort Order return secondary Sort Order return whether end input set map plan public boolean End Input Set Map return end Input Map param end Input Map stream Map set public void set End Input Map boolean end Input Map end Input Map end Input Map return whether end input set reduce plan public boolean End Input Set Reduce return end Input Reduce param end Input Reduce stream Reduce set public void set End Input Reduce boolean end Input Reduce end Input Reduce end Input Reduce public int get Requested Parallelism return requested Parallelism public String get Custom Partitioner return custom Partitioner public void set Splitter boolean spl splitter spl public boolean Splitter return splitter public boolean get Use Secondary Key return use Secondary Key public void set Use Secondary Key boolean use Secondary Key use Secondary Key use Secondary Key protected boolean using Typed Comparator return using Typed Comparator protected void use Typed Comparator boolean use Typed Comparator using Typed Comparator use Typed Comparator protected void Combine Small Splits combine Small Splits false public boolean combine Small Splits return combine Small Splits public boolean Rank Operation return get Rank Operation Id size public Array List String get Rank Operation Id Array List String operation Ds new Array List String Iterator Physical Operator map Roots map Plan get Roots iterator map Roots Next Physical Operator operation map Roots next operation instanceof Rank operation Ds add Rank operation get Operation return operation Ds public boolean Counter Operation return get Counter Operation null public boolean Row Number Counter counter get Counter Operation return counter null counter Row Number false public String get Operation Counter counter get Counter Operation return counter null counter get Operation null private Counter get Counter Operation Counter counter get Counter Operation map Plan counter null counter get Counter Operation reduce Plan return counter private Counter get Counter Operation Physical Plan plan Physical Operator operator Iterator Physical Operator plan get Leaves iterator Next operator next operator instanceof Counter return Counter operator else operator instanceof Store List Physical Operator preds plan get Predecessors operator preds null Physical Operator pred preds pred instanceof Counter return Counter pred return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Exception import org apache hadoop conf Configuration import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Writer import org apache hadoop mapreduce Task Attempt Context import org apache hadoop mapreduce Task Input Output Context import org apache Store Func Interface import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer relational Operators Store Impl import org apache backend hadoop executionengine shims Hadoop Shims import org apache tools pigstats Stats Util import org apache tools pigstats Status Reporter class used Store write via output collector record writer sets modified job configuration force write specific subdirectory main output directory done multiple output directories used job public class Map Reduce Store Impl extends Store Impl private Task Attempt Context context private Status Reporter reporter private Record Writer writer public Map Reduce Store Impl Task Input Output Context context get copy Configuration changes configuration like setting output location affect caller copy Configuration output Conf new Configuration context get Configuration reporter Status Reporter get Instance reporter set Context new Task Context context make copy Context use since task map reduce could multiple stores make copy context get written different stores context Hadoop Shims create Task Attempt Context output Conf context get Task Attempt Override public Store Func Interface create Store Func Store store throws Exception Store Func Interface store Func store get Store Func call set Store Location store Func giving Job Typically result Output Format store Func storing output location Configuration Job Format set Location method merge modified Configuration configuration Context Output Format set Location context store Output Format output Format store Func get Output Format create new record writer try writer output Format get Record Writer context catch Interrupted Exception e throw new Exception e store Func prepare Write writer return store Func Override public void tear throws Exception writer null try writer close context catch Interrupted Exception e throw new Exception e writer null Override public void clean throws Exception writer null try writer close context catch Interrupted Exception e throw new Exception e writer null public void incr Record Counter String name long incr reporter incr Counter Stats Util name incr
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical relational import java util List import org apache Sort Col Info import org apache Sort Col Info Order import org apache backend hadoop executionengine physical Layer Logical Physical Translator Exception import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan logical visitor Finder public class Map Side Merge Validator public boolean validate Map Side Merge List Operator preds Operator Plan lp throws Logical Physical Translator Exception int err Code String err Msg Merge join Cogroup supports Filter Foreach Ascending Sort Load predecessors Found preds null Operator lo preds lo instanceof Filter lo instanceof Generate lo instanceof Inner Load lo instanceof Load lo instanceof Split Output lo instanceof Split lo instanceof Join Join lo get Join Type Join Acceptable Sort Op lo Acceptable Op lo throw new Logical Physical Translator Exception err Msg err Code Repeat Sort top tree reached lo instanceof Sort validate Map Side Merge lp get Predecessors lo lp visited everything good return true private boolean Acceptable Op Operator lo throws Logical Physical Translator Exception lo instanceof Operator Plan inner Plan lo get Inner Plan return validate Map Side Merge inner Plan get Sinks inner Plan else return false private boolean Acceptable Sort Op Operator op throws Logical Physical Translator Exception op instanceof Sort return false Sort sort Sort op try Sort Col Info col Info sort get Sort Info get Sort Col Info List really check sort join keys order col Info get Sort Order Order return false catch Frontend Exception e throw new Logical Physical Translator Exception e return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java util Array List import java util List import org apache Func Spec import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema Generates maximum set values class implements link org apache Algebraic possible execution performed distributed fashion p operate numeric type chararrays also operate bytearrays cast doubles expects bag tuples one record knows schema function passed bag integers longs use specially adapted version uses integer arithmetic comparing data return type match input type p implements link org apache Accumulator interface well never preferred method usage available case combiner used given calculation public class extends Algebraic Byte Array Math Base public set Op public static class Intermediate extends Algebraic Byte Array Math Base Intermediate Override public get Op return public static class Final extends Algebraic Byte Array Math Base Final Override public get Op return non Javadoc see org apache Eval Func get Arg Func Mapping Override public List Func Spec get Arg Func Mapping throws Frontend Exception List Func Spec func List new Array List Func Spec func List add new Func Spec get Class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Double Max class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Float Max class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Int Max class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Long Max class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec String Max class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Date Time Max class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Big Decimal Max class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Big Integer Max class get Name Schema generate Nested Schema Data Type Data Type return func List
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical rules import java util Array List import java util Collection import java util Hash Set import java util Iterator import java util List import java util Set import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Operator Sub Plan import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Project Expression import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache newplan optimizer Rule import org apache newplan optimizer Transformer import org apache impl logical Layer Frontend Exception import org apache impl util Pair import org apache impl util Utils public class Merge extends Rule private Operator Sub Plan sub Plan public Merge String name super name false Override protected Operator Plan build Pattern match foreach Logical Plan plan new Logical Plan Logical Relational Operator foreach new plan plan add foreach return plan Override public Transformer get New Transformer return new Merge Transformer public class Merge Transformer extends Transformer Override public boolean check Operator Plan matched throws Frontend Exception foreach matched get Sources get List Operator succs current Plan get Successors foreach succs null succs size succs get instanceof return false foreach succs get Check second foreach Generate Inner Load Iterator Operator foreach get Inner Plan get Operators Next Operator op next op instanceof Generate op instanceof Inner Load return false Check first foreach flatten generate statement Generate gen Generate foreach get Inner Plan get Sinks get boolean flatten gen get Flatten Flags flatten return false gen get User Defined Schema null Logical Schema gen get User Defined Schema null return false Check non st foreach output referred second foreach Otherwise may expression calculation defeat benefit optimization Set Integer inputs new Hash Set Integer boolean duplicate Inputs false Operator op foreach get Inner Plan get Sources source Inner Load must Generate happens st rely input nd op instanceof Inner Load Inner Load inner Load Inner Load op int input inner Load get Projection get Col Num inputs contains input duplicate Inputs true break else inputs add input inner Load get Projection Range Star Project return false Duplicate inputs case first foreach containing Inner Load Generate allowed output plan simple projection duplicate Inputs Iterator Operator foreach get Inner Plan get Operators Next Operator op next op instanceof Generate op instanceof Inner Load return false op instanceof Generate List Logical Expression Plan output Plans Generate op get Output Plans Logical Expression Plan output Plan output Plans Iterator Operator iter output Plan get Operators iter Next iter next instanceof Project Expression return false return true Override public Operator Plan report Changes return sub Plan op Inner Load get copy otherwise return op private Operator get Operator Merge Operator op Operator Plan new Plan new Operator op Merge op op instanceof Inner Load op Merge new Inner Load new Plan new Inner Load op get Col Num else op Merge set Plan new Plan return op Merge private Operator add Branch Plan Generate gen int branch Operator Plan new Plan new Operator op Next Gen Operator op gen get Plan get Predecessors gen get branch Operator op Merge get Operator Merge op new Plan new new Plan add op Merge op Next Gen op Merge Operator pred gen get Plan get Predecessors op null pred gen get Plan get Predecessors op get else pred null pred null Operator pred Merge get Operator Merge pred new Plan new new Plan add pred Merge new Plan connect pred Merge op op pred gen get Plan get Predecessors pred null pred gen get Plan get Predecessors pred get else pred null return op Next Gen Override public void transform Operator Plan matched throws Frontend Exception sub Plan new Operator Sub Plan current Plan foreach matched get Sources get Generate gen Generate foreach get Inner Plan get Sinks get foreach current Plan get Successors foreach get Generate gen Generate foreach get Inner Plan get Sinks get new new current Plan Logical Plan new Inner Plan new Logical Plan new set Inner Plan new Inner Plan new set Alias foreach get Alias new set Requested Parallelism foreach get Requested Parallelism List Logical Expression Plan new Exp List new Array List Logical Expression Plan Generate new Gen new Generate new Inner Plan new Exp List gen get Flatten Flags new Gen set User Defined Schema gen get User Defined Schema new Inner Plan add new Gen Logical Expression Plan exp gen get Output Plans Logical Expression Plan new Exp Plan new Logical Expression Plan Logical Expression Plan exp Copy exp deep Copy new Exp Plan merge exp Copy Add expression plan nd List Operator exp Sinks new Array List Operator exp Sinks add new Exp Plan get Sinks Operator exp Sink exp Sinks exp Sink instanceof Project Expression Find referred expression plan st Project Expression proj Project Expression exp Sink Inner Load inner Load Inner Load foreach get Inner Plan get Predecessors gen get proj get Input Num int exp Pos inner Load get Projection get Col Num Logical Expression Plan exp gen get Output Plans get exp Pos Logical Expression Plan exp Copy exp deep Copy List Operator exp Sources new Exp Plan merge exp Copy Copy expression plan new connect expression plan nd Operator exp Source exp Sources get new Exp Plan get Predecessors exp Sink null Operator exp Next Sink new Exp Plan get Predecessors exp Sink get Pair Integer Integer pos new Exp Plan disconnect exp Next Sink exp Sink new Exp Plan remove exp Sink new Exp Plan connect exp Next Sink pos first exp Source else new Exp Plan remove exp Sink Copy referred inner plan new List Operator exp Sinks new Exp Plan get Sinks Operator exp Sink exp Sinks exp Sink instanceof Project Expression Operator op Next Gen add Branch Plan gen Project Expression exp Sink get Input Num new Inner Plan new new Inner Plan connect op Next Gen new Gen int input new Inner Plan get Predecessors new Gen index op Next Gen Project Expression exp Sink set Input Num input new Exp List add new Exp Plan Adjust attached Op Logical Expression Plan p new Gen get Output Plans Iterator Operator iter p get Operators iter Next Operator op iter next op instanceof Project Expression Project Expression op set Attached Relational Op new Gen Iterator Operator iter new get Inner Plan get Operators iter Next Operator op iter next op instanceof Inner Load Inner Load op get Projection set Attached Relational Op new remove foreach foreach add new foreach rebuild soft link Collection Operator new Soft Link Preds Utils merge Collection current Plan get Soft Link Predecessors foreach current Plan get Soft Link Predecessors foreach Collection Operator foreach Soft Link Pred null current Plan get Soft Link Predecessors foreach null foreach Soft Link Pred new Array List Operator foreach Soft Link Pred add current Plan get Soft Link Predecessors foreach foreach Soft Link Pred null Operator soft Pred foreach Soft Link Pred current Plan remove Soft Link soft Pred foreach Collection Operator foreach Soft Link Pred null current Plan get Soft Link Predecessors foreach null foreach Soft Link Pred new Array List Operator foreach Soft Link Pred add current Plan get Soft Link Predecessors foreach foreach Soft Link Pred null Operator soft Pred foreach Soft Link Pred current Plan remove Soft Link soft Pred foreach current Plan remove Reconnect foreach current Plan replace foreach new new Soft Link Preds null Operator soft Pred new Soft Link Preds current Plan create Soft Link soft Pred new sub Plan add new
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Exception import java util List import org apache hadoop io Writable Comparable import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Job import org apache hadoop mapreduce Record Reader import org apache Load Caster import org apache Load Func import org apache Ordered Load Func import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache data Tuple import org apache data Tuple Factory import org apache impl Context import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl util Object Serializer Merge Join indexer used generate fly index Merge Join efficiently samples first record every block right side input returns tuple following format key key position split Index tuples sorted written index file public class Merge Join Indexer extends Load Func private boolean first Rec true private transient Tuple Factory Tuple Factory private Local Rearrange lr private Physical Plan preceding Phy Plan private int keys Cnt private Physical Operator right Pipeline Leaf private Physical Operator right Pipeline Root private Load Func loader private Split Split null private boolean ignore Null Keys param func Spec Loader specification param inner Plan serialized version plan want keep keys index file whole tuple need thus plan get keys sampled tuple param serialized Phy Plan Serialized physical plan right side throws Exec Exception Suppress Warnings unchecked public Merge Join Indexer String func Spec String inner Plan String serialized Phy Plan String udf Cntxt Signature String scope String ignore Nulls throws Exec Exception loader Load Func Context instantiate Func Spec func Spec loader set Context Signature udf Cntxt Signature ignore Null Keys Boolean parse Boolean ignore Nulls try List Physical Plan inner Plans List Physical Plan Object Serializer deserialize inner Plan lr new Local Rearrange new Operator Key scope Node Id Generator get Generator get Next Node Id scope lr set Plans inner Plans keys Cnt inner Plans size preceding Phy Plan Physical Plan Object Serializer deserialize serialized Phy Plan preceding Phy Plan null preceding Phy Plan get Leaves size preceding Phy Plan get Roots size int err Code String err Msg Expected physical plan exactly one root one leaf throw new Exec Exception err Msg err Code Exception right Pipeline Leaf preceding Phy Plan get Leaves get right Pipeline Root preceding Phy Plan get Roots get right Pipeline Root set Inputs null catch Exception e int err Code String msg Unable deserialize plans Indexer throw new Exec Exception msg err Code e Tuple Factory Tuple Factory get Instance Override public Tuple get Next throws Exception first Rec sample one record per block return null Writable Comparable position Ordered Load Func loader get Split Comparable Split get Wrapped Split Object key null Tuple wrapper Tuple Tuple Factory new Tuple keys Cnt true Tuple read Tuple loader get Next null read Tuple hit end int keys Cnt wrapper Tuple set null wrapper Tuple set keys Cnt position first Rec false return wrapper Tuple null preceding Phy Plan lr attach Input read Tuple key Tuple lr get Next Tuple result get lr detach Input null key ignore Null Keys Tuple null key Drop continue break physical plan right Pipeline Root attach Input read Tuple boolean fetch New Tup true Result res right Pipeline Leaf get Next Tuple switch res return Status case Status lr attach Input Tuple res result key Tuple lr get Next Tuple result get lr detach Input null key ignore Null Keys Tuple null key Drop continue fetch New Tup false break case Status fetch New Tup true break default int err Code String err Msg Expected return status Found res return Status throw new Exec Exception err Msg err Code break fetch New Tup break key instanceof Tuple Tuple tup Key Tuple key int tup Key size wrapper Tuple set tup Key get else wrapper Tuple set key wrapper Tuple set keys Cnt position wrapper Tuple set keys Cnt Split get Split Index first Rec false return wrapper Tuple non Javadoc see org apache Load Func get Input Format Override public Input Format get Input Format throws Exception return loader get Input Format non Javadoc see org apache Load Func get Load Caster Override public Load Caster get Load Caster throws Exception return loader get Load Caster non Javadoc see org apache Load Func prepare Read org apache hadoop mapreduce Record Reader org apache hadoop mapreduce Input Split Override public void prepare Read Record Reader reader Split split throws Exception loader prepare Read reader split Split split non Javadoc see org apache Load Func set Location java lang String org apache hadoop mapreduce Job Override public void set Location String location Job job throws Exception loader set Location location job
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java util Array List import java util List import org apache Func Spec import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema Generates minimum set values class implements link org apache Algebraic possible execution performed distributed fashion p operate numeric type chararrays also operate bytearrays cast doubles expects bag tuples one record knows schema function passed bag integers longs use specially adapted version uses integer arithmetic comparing data return type match input type p implements link org apache Accumulator interface well never preferred method usage available case combiner used given calculation public class extends Algebraic Byte Array Math Base public set Op public static class Intermediate extends Algebraic Byte Array Math Base Intermediate Override public get Op return public static class Final extends Algebraic Byte Array Math Base Final Override public get Op return non Javadoc see org apache Eval Func get Arg Func Mapping Override public List Func Spec get Arg Func Mapping throws Frontend Exception List Func Spec func List new Array List Func Spec func List add new Func Spec get Class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Double Min class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Float Min class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Int Min class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Long Min class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec String Min class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Date Time Min class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Big Decimal Min class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Big Integer Min class get Name Schema generate Nested Schema Data Type Data Type return func List
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java math Big Integer import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception public class Mod extends Binary Expression Operator private static final long serial Version public Mod Operator Key k super k public Mod Operator Key k int rp super k rp Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Mod Override public String name return Mod Data Type find Type Name result Type Key String protected Number mod Number Number b byte data Type throws Exec Exception switch data Type case Data Type return Integer value Integer Integer b case Data Type return Long value Long Long b case Data Type return Big Integer mod Big Integer b default throw new Exec Exception called unsupported Number class Data Type find Type Name data Type protected Result generic Get Next byte data Type throws Exec Exception Result r accum Child null data Type r null return r byte status Result res res lhs get Next data Type status res return Status status Status res result null return res Number left Number res result res rhs get Next data Type status res return Status status Status res result null return res Number right Number res result res result mod left right data Type return res Override public Result get Next Integer throws Exec Exception return generic Get Next Data Type Override public Result get Next Long throws Exec Exception return generic Get Next Data Type Override public Result get Next Big Integer throws Exec Exception return generic Get Next Data Type Override public Mod clone throws Clone Supported Exception Mod clone new Mod new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location Mod Operator public class Mod Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Mod Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super Mod plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Mod Expression Mod Expression ao Mod Expression return ao get Lhs Equal get Lhs ao get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null get Lhs get Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Mod Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Exception import java io Serializable import java util Array List import java util Collections import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Input Split import org apache hadoop mapreduce Job import org apache Collectable Load Func import org apache Exec Type import org apache Func Spec import org apache Indexable Load Func import org apache Load Func import org apache Ordered Load Func import org apache Configuration import org apache Exception import org apache Warning import org apache backend executionengine Exec Exception import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop executionengine map Reduce Layer plans Op Plan Visitor import org apache backend hadoop executionengine map Reduce Layer plans Oper Plan import org apache backend hadoop executionengine map Reduce Layer plans Scalar Phy Finder import org apache backend hadoop executionengine map Reduce Layer plans Finder import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Constant Expression import org apache backend hadoop executionengine physical Layer expression Operators Project import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Join Packager import org apache backend hadoop executionengine physical Layer relational Operators Lite Packager import org apache backend hadoop executionengine physical Layer relational Operators Collected Group import org apache backend hadoop executionengine physical Layer relational Operators Counter import org apache backend hadoop executionengine physical Layer relational Operators Cross import org apache backend hadoop executionengine physical Layer relational Operators Distinct import org apache backend hadoop executionengine physical Layer relational Operators Join import org apache backend hadoop executionengine physical Layer relational Operators Filter import org apache backend hadoop executionengine physical Layer relational Operators import org apache backend hadoop executionengine physical Layer relational Operators Global Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Limit import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Merge Cogroup import org apache backend hadoop executionengine physical Layer relational Operators Merge Join import org apache backend hadoop executionengine physical Layer relational Operators Native import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Partition Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Rank import org apache backend hadoop executionengine physical Layer relational Operators Skewed Join import org apache backend hadoop executionengine physical Layer relational Operators Sort import org apache backend hadoop executionengine physical Layer relational Operators Split import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer relational Operators Stream import org apache backend hadoop executionengine physical Layer relational Operators Union import org apache backend hadoop executionengine physical Layer relational Operators Packager import org apache backend hadoop executionengine physical Layer relational Operators Packager Package Type import org apache backend hadoop executionengine physical Layer util Plan Helper import org apache backend hadoop executionengine shims Hadoop Shims import org apache backend hadoop executionengine util Map Red Util import org apache data Data Type import org apache impl Context import org apache impl builtin Default Indexable Loader import org apache impl builtin Find Quantiles import org apache impl builtin Get Mem Num Rows import org apache impl builtin First Reduce Key import org apache impl builtin Partition Skewed Keys import org apache impl builtin Poisson Sample Loader import org apache impl builtin Random Sample Loader import org apache impl io File Localizer import org apache impl io File Spec import org apache impl plan Compilation Message Collector import org apache impl plan Compilation Message Collector Message Type import org apache impl plan Depth First Walker import org apache impl plan Node Id Generator import org apache impl plan Operator import org apache impl plan Operator Key import org apache impl plan Operator Plan import org apache impl plan Plan Exception import org apache impl plan Visitor Exception import org apache impl util Compiler Utils import org apache impl util Multi Map import org apache impl util Object Serializer import org apache impl util Pair import org apache impl util Uri Util import org apache impl util Utils import org apache newplan logical relational Join compiler compiles given physical plan Map Reduce operators converted Job Control structure implemented visitor Physical Plan compiling Currently supports operators except Sort operator Uses predecessor based depth first traversal compile operator first compiles predecessors Map Reduce Operators tries merge current operator one goal keep number Opers minimum also merges multiple Map jobs created compiling inputs individually single job new map job created contents previous map plans added However state previous map plans manually moved adding something new take care Ex requested Parallelism case blocking operators splits new Map Reduce operator started using store load combination connect two operators Whenever happens care taken add Oper Plan connect appropriately public class Compiler extends Phy Plan Visitor Context Context plan compiled Physical Plan plan plan Map Reduce Operators Oper Plan Plan current Map Reduce Operator compiled Map Reduce Oper cur Op output compiling inputs Map Reduce Oper compiled Inputs null split operators seen till maintained haunt traversal split operator revisited different path map stores split job whenever hit split create new Oper connect split job using load store also Plan Map Operator Key Map Reduce Oper splits Seen Node Id Generator nig private String scope private Finder udf Finder private Compilation Message Collector message Collector null private Map Physical Operator Map Reduce Oper phy Op Map public static final String user comparator func private static final Log Log Factory get Log Compiler class public static final String files concatenation threshold public static final String optimistic files concatenation private int file Concatenation Threshold private boolean optimistic File Concatenation false public Compiler Physical Plan plan throws Compiler Exception plan null public Compiler Physical Plan plan Context Context throws Compiler Exception super plan new Depth First Walker Physical Operator Physical Plan plan plan plan Context Context splits Seen new Hash Map Operator Key Map Reduce Oper Plan new Oper Plan nig Node Id Generator get Generator udf Finder new Finder List Physical Operator roots plan get Roots roots null roots size int err Code String msg Internal error find roots physical plan throw new Compiler Exception msg err Code Exception scope roots get get Operator Key get Scope message Collector new Compilation Message Collector phy Op Map new Hash Map Physical Operator Map Reduce Oper file Concatenation Threshold Integer parse Int Context get Properties get Property optimistic File Concatenation Context get Properties get Property false equals true info File concatenation threshold file Concatenation Threshold optimistic optimistic File Concatenation public void aggregate Scalars Files throws Plan Exception Exception List Map Reduce Oper mr Op List new Array List Map Reduce Oper Map Reduce Oper mr Op Plan mr Op List add mr Op Configuration conf Configuration Util Configuration Context get Properties boolean combinable conf get Boolean Split Combination false Set File Spec seen new Hash Set File Spec Map Reduce Oper mro scalar consumer mr Op List Physical Operator scalar mro scalar consumer scalars Map Reduce Oper mro scalar producer phy Op Map get scalar scalar instanceof Store File Spec old Spec Store scalar get File seen contains old Spec continue seen add old Spec combinable mro scalar producer reduce Plan Empty Many Input Files mro scalar producer conf mro scalar producer requested Parallelism file Concatenation Threshold Physical Plan pl mro scalar producer reduce Plan Empty mro scalar producer map Plan mro scalar producer reduce Plan File Spec new Spec get Temp File Spec replace old Spec mro new Spec new Find Store Name Visitor pl new Spec old Spec visit seen add new Spec Store new Sto get Store new Sto set File old Spec Map Reduce Oper cat Op get Concatenate Job new Spec mro scalar producer new Sto Plan connect mro scalar producer cat Op Need add Physical Plan phy Op Map softlink created phy Op Map put new Sto cat Op plan add new Sto Physical Operator succ plan get Soft Link Successors scalar Array new Physical Operator plan create Soft Link new Sto succ plan remove Soft Link scalar succ Used get compiled plan return map reduce plan built compiler public Oper Plan get Plan return Plan Used get plan compiled return physical plan Override public Physical Plan get Plan return plan public Compilation Message Collector get Message Collector return message Collector front end method user calls compile plan Assumes submitted plans Store operators leaf return map reduce plan throws Exception throws Plan Exception throws Visitor Exception public Oper Plan compile throws Exception Plan Exception Visitor Exception List Physical Operator leaves plan get Leaves Context Illustrator Physical Operator op leaves op instanceof Store int err Code String msg Expected leaf reduce plan always Store Found op get Class get Simple Name throw new Compiler Exception msg err Code Exception get stores native operators sort order operator id compile plans List Store stores Plan Helper get Physical Operators plan Store class List Native native Rs Plan Helper get Physical Operators plan Native class List Physical Operator ops Context Illustrator ops new Array List Physical Operator stores size native Rs size ops add stores else ops new Array List Physical Operator leaves size native Rs size ops add leaves ops add native Rs Collections sort ops Physical Operator op ops compile op return Plan public void connect Soft Link throws Plan Exception Exception Physical Operator op plan plan get Soft Link Predecessors op null Physical Operator pred plan get Soft Link Predecessors op Map Reduce Oper phy Op Map get pred Map Reduce Oper phy Op Map get op continue Plan get Predecessors null Plan get Predecessors contains Plan connect Compiles plan op Map Reduce Operator stores cur Op param op throws Exception throws Plan Exception throws Visitor Exception private void compile Physical Operator op throws Exception Plan Exception Visitor Exception artifact Visitor Need save overwritten Map Reduce Oper prev Comp Inp compiled Inputs Compile predecessor Oper store away use compiling op List Physical Operator predecessors plan get Predecessors op op instanceof Native predecessor store already processed n process else predecessors null predecessors size processing entire script multiquery get situation load predecessors means depends store earlier plan need take dependency connect respective operators time removing connection Physical operators way jobs run right order op instanceof Load predecessors size int err Code String msg Expected one predecessor load Got predecessors size throw new Plan Exception msg err Code Exception Physical Operator p predecessors get Map Reduce Oper oper null p instanceof Store p instanceof Native oper phy Op Map get p else int err Code String msg Predecessor load store mapreduce operator Got p get Class throw new Plan Exception msg err Code Exception Need new operator cur Op get Op cur Op map Plan add op Plan add cur Op plan disconnect op p Plan connect oper cur Op phy Op Map put op cur Op return Collections sort predecessors compiled Inputs new Map Reduce Oper predecessors size int Physical Operator pred predecessors pred instanceof Split splits Seen contains Key pred get Operator Key compiled Inputs start New Split pred get Split Store splits Seen get pred get Operator Key continue compile pred compiled Inputs cur Op else predecessors Mostly load start create new Op add first operator op Also added Plan cur Op get Op cur Op map Plan add op op null op instanceof Load Load op get File null Load op get File get Func Spec null cur Op Fs add Load op get File get Func Spec String Plan add cur Op phy Op Map put op cur Op return inputs compiled something input oper op op visit op get Requested Parallelism cur Op requested Parallelism n want change prallelism skewed join due sampling pre allocated reducers skewed keys cur Op Skewed Join cur Op requested Parallelism op get Requested Parallelism compiled Inputs prev Comp Inp private Map Reduce Oper get Op return new Map Reduce Oper new Operator Key scope nig get Next Node Id scope private Native Map Reduce Oper get Native Op String mr Jar String parameters return new Native Map Reduce Oper new Operator Key scope nig get Next Node Id scope mr Jar parameters private Load get Load Load ld new Load new Operator Key scope nig get Next Node Id scope ld set Pc Context ld set Tmp Load true return ld private Store get Store Store st new Store new Operator Key scope nig get Next Node Id scope mark store tmp store could removed optimizer n user requesting st set Tmp Store true return st map Oper Oper whose map plan still open taking non blocking operators reduce Oper Oper whose map plan done reduce plan open taking non blocking opers Used compiling non blocking operators logic simple single input push operator whichever phase open Otherwise merge compiled inputs list Opers first oper merged oper consisting map Opers rest reduce Opers reduce plans ca n merged add input oper op merged map Oper map plan leaf connect reduce Opers using store load combinations input operator leaf Also care taken connect Opers according dependencies param op throws Plan Exception throws Exception private void non Blocking Physical Operator op throws Plan Exception Exception compiled Inputs length speed Map Reduce Oper mro compiled Inputs mro Map Done mro map Plan add Leaf op else mro Map Done mro Reduce Done mro reduce Plan add Leaf op else int err Code String msg map reduce phases done unexpected compiling throw new Plan Exception msg err Code Exception cur Op mro else List Map Reduce Oper merged Plans merge compiled Inputs first Oper always merged map Oper Map Reduce Oper mro merged Plans remove Push input operator merged map Oper mro map Plan add Leaf op Connect reduce Opers merged Plans size conn Red Oper merged Plans mro return compiled Oper cur Op mro private void add Map Physical Operator op throws Plan Exception Exception compiled Inputs length speed Map Reduce Oper mro compiled Inputs mro Map Done mro map Plan add Leaf op else mro Map Done mro Reduce Done File Spec f Spec get Temp File Spec Store st get Store st set File f Spec mro reduce Plan add Leaf st mro set Reduce Done true mro start New f Spec mro mro map Plan add Leaf op compiled Inputs mro else int err Code String msg map reduce phases done unexpected compiling throw new Plan Exception msg err Code Exception cur Op mro else List Map Reduce Oper merged Plans merge compiled Inputs first Oper always merged map Oper Map Reduce Oper mro merged Plans remove Push input operator merged map Oper mro map Plan add Leaf op Connect reduce Opers merged Plans size conn Red Oper merged Plans mro return compiled Oper cur Op mro Used compiling blocking operators single input map phase still open close operators compiled reduce phase reduce phase open add store close Start new map Oper operators compiled multiple inputs logic merge map Opers one map Oper retain reduce Opers Since operator blocking Global Rerrange least operator need inserted plan implemented hadoop creates map reduce boundary merged map Oper closed reduce phase started Depending number reduce Opers number pipelines map Roper Union operator inserted whenever necessary also leads possibility empty map plans careful handling Map Reduce class map plans new one created side effect merge process reduce Opers single pipeline map union oper added Otherwise Union oper added merged map Oper reduce Opers connected store load combinations Care taken connect Opers Plan param op throws Exception throws Plan Exception private void blocking Physical Operator op throws Exception Plan Exception compiled Inputs length Map Reduce Oper mro compiled Inputs mro Map Done mro set Map Done Single true cur Op mro else mro Map Done mro Reduce Done File Spec f Spec get Temp File Spec Store st get Store st set File f Spec mro reduce Plan add Leaf st mro set Reduce Done true cur Op start New f Spec mro cur Op set Map Done true else List Map Reduce Oper merged Plans merge compiled Inputs Map Reduce Oper mro merged Plans remove merged Plans size mro set Map Done Multiple true else mro set Map Done Single true Connect reduce Opers merged Plans size conn Red Oper merged Plans mro cur Op mro Connect reduce Opers leaf node map Oper mro adding appropriate loads param merged Plans list reduce Opers param mro map Oper throws Plan Exception throws Exception private void conn Red Oper List Map Reduce Oper merged Plans Map Reduce Oper mro throws Plan Exception Exception Physical Operator leaf null List Physical Operator leaves mro map Plan get Leaves leaves null leaves size leaf leaves get Map Reduce Oper mmro merged Plans mmro set Reduce Done true File Spec file Spec get Temp File Spec Load ld get Load ld set File file Spec Store str get Store str set File file Spec mmro reduce Plan add Leaf str mro map Plan add ld leaf null mro map Plan connect ld leaf Plan connect mmro mro Force end current map reduce job store temporary file param f Spec Temp file force store return operator finished store throws Plan Exception private Map Reduce Oper end Single Input Plan Str File Spec f Spec throws Plan Exception compiled Inputs length int err Code String msg Received multi input plan expecting single input one throw new Plan Exception msg err Code Exception Map Reduce Oper mro compiled Inputs Store str get Store str set File f Spec mro Map Done mro map Plan add Leaf str mro set Map Done Single true else mro Map Done mro Reduce Done mro reduce Plan add Leaf str mro set Reduce Done true else int err Code String msg map reduce phases done unexpected compiling throw new Plan Exception msg err Code Exception return mro Starts new Roper connects old one load store assumption store already inserted old Oper param f Spec param old return throws Exception throws Plan Exception private Map Reduce Oper start New File Spec f Spec Map Reduce Oper old throws Plan Exception Load ld get Load ld set File f Spec Map Reduce Oper ret get Op ret map Plan add ld Plan add ret Plan connect old ret return ret Returns temporary Path return throws Exception private File Spec get Temp File Spec throws Exception return new File Spec File Localizer get Temporary Path Context String new Func Spec Utils get Tmp File Compressor Name Context Merges map Opers compiled Inputs single merged map Roper returns List merged map Oper first oper rest reduce Opers Care taken remove map Opers merged Plan connections moved merged map Oper Merge implemented sequence binary merges merge Phy Plan fin Plan List Phy Plan lst fin Plan merge p foreach p lst param compiled Inputs return throws Plan Exception throws Exception private List Map Reduce Oper merge Map Reduce Oper compiled Inputs throws Plan Exception List Map Reduce Oper ret new Array List Map Reduce Oper Map Reduce Oper merged Map get Op ret add merged Map Plan add merged Map Set Map Reduce Oper Connected new Hash Set Map Reduce Oper List Map Reduce Oper rem Lst new Array List Map Reduce Oper List Physical Plan mp Lst new Array List Physical Plan Map Reduce Oper mro compiled Inputs mro Map Done rem Lst add mro mp Lst add mro map Plan List Map Reduce Oper pmros Plan get Predecessors mro pmros null Map Reduce Oper pmro pmros Connected add pmro else mro Map Done mro Reduce Done ret add mro else int err Code String msg map reduce phases done unexpected merge throw new Plan Exception msg err Code Exception merge ret get map Plan mp Lst Iterator Map Reduce Oper Connected iterator Next Plan connect next merged Map Map Reduce Oper rmro rem Lst rmro requested Parallelism merged Map requested Parallelism merged Map requested Parallelism rmro requested Parallelism String udf rmro Fs merged Map Fs contains udf merged Map Fs add udf also need change scalar marking Physical Operator phys Op rmro scalars merged Map scalars contains phys Op merged Map scalars add phys Op Set Physical Operator ops Change new Hash Set Physical Operator Map Entry Physical Operator Map Reduce Oper entry phy Op Map entry Set entry get Value rmro ops Change add entry get Key Physical Operator op ops Change phy Op Map put op merged Map Plan remove rmro return ret merge list map plans param param param fin Plan Final Plan list plans merged param plans list map plans merged throws Plan Exception private extends Operator extends Operator Plan void merge fin Plan List plans throws Plan Exception e plans fin Plan merge e private void process Fs Physical Plan plan throws Visitor Exception plan null Process Scalars referenced Operators Scalar Phy Finder scalar Phy Finder new Scalar Phy Finder plan scalar Phy Finder visit cur Op scalars add scalar Phy Finder get Scalars Process Fs udf Finder set Plan plan udf Finder visit cur Op Fs add udf Finder get Fs visit Op methods decide current operator Compiles split operator logic close split job replacing split oper store creating new Map Roper return current Oper operators would compiled new Oper would connected split job load store Also add split oper splits Seen map param op split operator throws Visitor Exception Override public void visit Split Split op throws Visitor Exception try File Spec f Spec op get Split Store Map Reduce Oper mro end Single Input Plan Str f Spec mro set Splitter true splits Seen put op get Operator Key mro cur Op start New f Spec mro phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Load Load op throws Visitor Exception try non Blocking op phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Native Native op throws Visitor Exception explode native operator add new Oper native Mapreduce job try add map reduce boundary Map Reduce Oper native Oper get Native Op op get Native Rjar op get Params Plan add native Oper Plan connect cur Op native Oper phy Op Map put op native Oper cur Op native Oper catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Store Store op throws Visitor Exception try non Blocking op phy Op Map put op cur Op op get File null op get File get Func Spec null cur Op Fs add op get File get Func Spec String catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Filter Filter op throws Visitor Exception try non Blocking op process Fs op get Plan phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Cross Cross op throws Visitor Exception try non Blocking op phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Stream Stream op throws Visitor Exception try non Blocking op phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Limit Limit op throws Visitor Exception try Map Reduce Oper mro compiled Inputs mro limit op get Limit op get Limit Plan null process Fs op get Limit Plan mro limit Plan op get Limit Plan mro Map Done map plan open add limit optimization eventually add another limit reduce plan Context Illustrator mro map Plan add Leaf op mro set Map Done true mro reduce Plan Empty Util simple Connect Map Reduce mro scope nig mro requested Parallelism Context Illustrator Limit p Limit new Limit new Operator Key scope nig get Next Node Id scope p Limit set Limit op get Limit p Limit set Limit Plan op get Limit Plan mro reduce Plan add Leaf p Limit else mro reduce Plan add Leaf op else message Collector collect Something reduce plan map plan done Something wrong Message Type Warning Warning else mro Map Done mro Reduce Done limit add reduce plan mro reduce Plan add Leaf op else message Collector collect map reduce phases done unexpected compiling Message Type Warning Warning phy Op Map put op mro catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Local Rearrange Local Rearrange op throws Visitor Exception try add Map op List Physical Plan plans op get Plans plans null Physical Plan ep plans process Fs ep phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Collected Group Collected Group op throws Visitor Exception cur Op map Done List Physical Operator roots cur Op map Plan get Roots roots size int err Code String err Msg Expected one found one root physical operator physical plan throw new Compiler Exception err Msg err Code Exception Physical Operator phy Op roots get phy Op instanceof Load int err Code String err Msg Expected physical operator root Load Found phy Op get Class get Canonical Name throw new Compiler Exception err Msg err Code Exception Load Func load Func Load phy Op get Load Func try Collectable Load Func class Assignable load Func get Class int err Code throw new Compiler Exception using collected group data must loaded via loader implementing Collectable Load Func err Code Collectable Load Func load Func ensure Key Instances Split catch Compiler Exception e throw e catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e try non Blocking op List Physical Plan plans op get Plans plans null Physical Plan ep plans process Fs ep phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e else cur Op reduce Done int err Code String msg Blocking operators allowed Collected Group Consider dropping using collected throw new Compiler Exception msg err Code Exception else int err Code String msg map reduce phases done unexpected compiling throw new Compiler Exception msg err Code Exception Override public void visit op throws Visitor Exception try op Map Side cur Op Map Done File Spec f Spec get Temp File Spec Map Reduce Oper prev Oper end Single Input Plan Str f Spec cur Op start New f Spec prev Oper cur Op map Plan add Leaf op else non Blocking op List Physical Plan plans op get Input Plans plans null Physical Plan plan plans process Fs plan phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Global Rearrange Global Rearrange op throws Visitor Exception try blocking op cur Op custom Partitioner op get Custom Partitioner phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Package Package op throws Visitor Exception try non Blocking op phy Op Map put op cur Op op get Pkgr get Package Type Package Type op get Pkgr get Package Type Package Type Bloom join implemented mapreduce mode falls back regular join cur Op mark Regular Join else op get Pkgr get Package Type Package Type op get Num Inps cur Op mark Group else op get Num Inps cur Op mark Cogroup catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Union Union op throws Visitor Exception try non Blocking op phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e operator multiple inputs number join inputs prunes inputs fragment input creates separate jobs replicated inputs uses replicated files configured Join operator also sets Join job parametes associated Override public void visit Join Join op throws Visitor Exception try File Spec repl Files new File Spec op get Inputs size int repl Files length op get Fragment continue repl Files get Temp File Spec op set Repl Files repl Files cur Op phy Op Map get op get Inputs get op get Fragment int compiled Inputs length Map Reduce Oper mro compiled Inputs cur Op equals mro continue Store str get Store str set File repl Files Configuration conf Configuration Util Configuration Context get Properties boolean combinable conf get Boolean Split Combination false mro Map Done combinable Many Input Files mro conf Store tmp Sto get Store File Spec f Spec get Temp File Spec tmp Sto set File f Spec mro map Plan add Leaf tmp Sto mro set Map Done Single true Map Reduce Oper cat Op get Concatenate Job f Spec mro str Plan connect cat Op cur Op else mro map Plan add Leaf str mro set Map Done Single true Plan connect mro cur Op else mro Map Done mro Reduce Done combinable mro requested Parallelism file Concatenation Threshold Store tmp Sto get Store File Spec f Spec get Temp File Spec tmp Sto set File f Spec mro reduce Plan add Leaf tmp Sto mro set Reduce Done true Map Reduce Oper cat Op get Concatenate Job f Spec mro str Plan connect cat Op cur Op else mro reduce Plan add Leaf str mro set Reduce Done true Plan connect mro cur Op else int err Code String msg map reduce phases done unexpected compiling throw new Plan Exception msg err Code Exception cur Op Map Done cur Op map Plan add Leaf op else cur Op Map Done cur Op Reduce Done cur Op reduce Plan add Leaf op else int err Code String msg map reduce phases done unexpected compiling throw new Plan Exception msg err Code Exception List List Physical Plan join Plans op get Join Plans join Plans null List Physical Plan join Plan join Plans join Plan null Physical Plan plan join Plan process Fs plan phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Suppress Warnings unchecked private boolean Many Input Files Map Reduce Oper mro Configuration conf Context null Context get Exec Type Exec Type return false mro instanceof Native Map Reduce Oper return optimistic File Concatenation false true Physical Plan map Plan mro map Plan List Physical Operator roots map Plan get Roots roots null roots size return false int num Files boolean ret false try Physical Operator root roots Load ld Load root String file Name ld get File get File Name Uri Util File file Name input hdfs file optimization useful reduce load namenode separate locations separated comma String locations Load Func get Path Strings file Name String location locations Uri Util File location continue Path path new Path location File System fs path get File System conf fs exists path Load Func loader Load Func Context instantiate Func Spec ld get File get Func Spec Job job new Job conf loader set Context Signature ld get Signature loader set Location location job Input Format inf loader get Input Format List Input Split splits inf get Splits Hadoop Shims clone Job Context job List List Input Split results Map Red Util get Combine Splits splits fs get Default Block Size path conf num Files results size else List Map Reduce Oper preds Plan get Predecessors mro preds null preds size Map Reduce Oper pred preds get pred reduce Plan Empty num Files pred requested Parallelism else map job ret Many Input Files pred conf break else optimistic File Concatenation ca n determine number input files Treat manyfiles num Files file Concatenation Threshold break catch Exception e warn failed get number input files e catch Interrupted Exception e warn failed get number input files e info number input files num Files return ret true num Files file Concatenation Threshold Use Mult File Combiner concatenate small input files private Map Reduce Oper get Concatenate Job File Spec f Spec Map Reduce Oper old Store str throws Plan Exception Exec Exception Map Reduce Oper mro start New f Spec old mro map Plan add Leaf str mro set Map Done true info Insert file concatenation job return mro Leftmost relation referred base relation one fed mappers First close Opers except first one referred base Per create Oper indexing job idx Oper Connect idx Oper mapped Oper Plan Override public void visit Merge Co Group Merge Cogroup po Co Grp throws Visitor Exception compiled Inputs length int err Code String err Msg Merge Cogroup work two relations use map side group single relation use collected qualifier throw new Compiler Exception err Msg err Code List Func Spec func Specs new Array List Func Spec compiled Inputs length List String file Specs new Array List String compiled Inputs length List String loader Signs new Array List String compiled Inputs length try Iterate Opers disconnect side Pers Per Plan collect information needed different lists int compiled Inputs length Map Reduce Oper mr Oper compiled Inputs Physical Plan map Plan mr Oper map Plan map Plan get Roots size int err Code String err Msg Expected one found one root physical operator physical plan throw new Compiler Exception err Msg err Code Exception Physical Operator root Op map Plan get Roots get root Op instanceof Load int err Code String err Msg Expected physical operator root Load Found root Op get Class get Canonical Name throw new Compiler Exception err Msg err Code Load side Loader Load root Op File Spec load File Spec side Loader get File Func Spec func Spec load File Spec get Func Spec Load Func loadfunc side Loader get Load Func Collectable Load Func class Assignable loadfunc get Class int err Code throw new Compiler Exception Base loader Cogroup must implement Collectable Load Func err Code Collectable Load Func loadfunc ensure Key Instances Split continue Indexable Load Func class Assignable loadfunc get Class int err Code throw new Compiler Exception Side loaders cogroup must implement Indexable Load Func err Code func Specs add func Spec file Specs add load File Spec get File Name loader Signs add side Loader get Signature Plan remove mr Oper po Co Grp set Side Load Funcs func Specs po Co Grp set Side File Specs file Specs po Co Grp set Loader Signatures loader Signs Use map reduce operator base relation cogroup operation Map Reduce Oper base Op phy Op Map get po Co Grp get Inputs get base Op map Done base Op reduce Plan Empty int err Code throw new Compiler Exception Currently merged cogroup supported blocking operators err Code Create new map reduce operator indexing job configure Map Reduce Oper indexer Op get Op File Spec idx File Spec get Indexing Job indexer Op base Op po Co Grp get Inner Plans po Co Grp set Idx Func Spec idx File Spec get Func Spec po Co Grp set Index File Name idx File Spec get File Name base Op map Plan add Leaf po Co Grp Func Spec func Spec func Specs base Op Fs add func Spec String Plan add indexer Op Plan connect indexer Op base Op phy Op Map put po Co Grp base Op Going forward new operators added base Rop make sure reset cur Op cur Op base Op catch Exec Exception e throw new Compiler Exception e get Detailed Message e get Error Code e get Error Source e catch Compiler Exception mrce throw mrce catch Clone Supported Exception e throw new Compiler Exception e catch Plan Exception e int err Code String msg Error compiling operator po Co Grp get Class get Canonical Name throw new Compiler Exception msg err Code Exception e catch Exception e int err Code String err Msg Exception caught compiling Merge Co Group throw new Compiler Exception err Msg err Code e Sets indexing job map side cogroups private File Spec get Indexing Job Map Reduce Oper indexer Op final Map Reduce Oper base Op final List Physical Plan mapper Inner Plans throws Compiler Exception Plan Exception Exec Exception Exception Clone Supported Exception First replace loader Merge Join Indexer Physical Plan base Map Plan base Op map Plan Load base Loader Load base Map Plan get Roots get File Spec orig Loader File Spec base Loader get File Func Spec func Spec orig Loader File Spec get Func Spec Load Func load Func base Loader get Load Func Ordered Load Func class Assignable load Func get Class int err Code String err Msg Base relation merge co Group must implement Ordered Load Func interface specified loader func Spec n implement throw new Compiler Exception err Msg err Code String indexer Args new String indexer Args func Spec String indexer Args Object Serializer serialize Serializable mapper Inner Plans indexer Args base Loader get Signature indexer Args base Loader get Operator Key scope indexer Args Boolean String false care nulls Physical Plan phy Plan base Map Plan get Successors base Loader null base Map Plan get Successors base Loader Empty Load Load Cogroup case phy Plan null else got something Yank set inner plan phy Plan base Map Plan clone Physical Operator root phy Plan get Roots get phy Plan disconnect root phy Plan get Successors root get phy Plan remove root indexer Args Object Serializer serialize phy Plan Load idx Job Loader get Load idx Job Loader set File new File Spec orig Loader File Spec get File Name new Func Spec Merge Join Indexer class get Name indexer Args indexer Op map Plan add idx Job Loader indexer Op Fs add base Loader get File get Func Spec String Loader mro return tuple form key key Writable Comparable split Index See Merge Join Indexer details getting index entry mapper send one reducer sorted way Hadoop Util simple Connect Map Reduce indexer Op scope nig indexer Op requested Parallelism need exactly one reducer indexing job want use typed tuple comparator job instead default raw binary comparator used make sure index entries sorted correctly Hadoop indexer Op use Typed Comparator true Store st get Store File Spec str File get Temp File Spec st set File str File indexer Op reduce Plan add Leaf st indexer Op set Reduce Done true return str File Since merge join works two inputs exactly two Oper predecessors identified left right Instead merging two operators used generate job First oper run generate fly index right side Second used actually join First oper identified right Oper second cur Oper Right Oper map phase preceded Load anything else physical plan yanked set inner plans join Op reduce phase Close operator start new Oper Left Oper map phase add Join operator reduce phase Close start new Oper Override public void visit Merge Join Merge Join join Op throws Visitor Exception try compiled Inputs length join Op get Inputs size int err Code throw new Compiler Exception Merge Join must exactly two inputs Found compiled Inputs length err Code cur Op phy Op Map get join Op get Inputs get Map Reduce Oper right Opr null cur Op equals compiled Inputs right Opr compiled Inputs else right Opr compiled Inputs first operate right side indexer job First yank plan compiled right input set inner plan right operator Physical Plan right Pipeline Plan right Opr map Done Physical Plan right Map Plan right Opr map Plan right Map Plan get Roots size int err Code String err Msg Expected one found one root physical operator physical plan throw new Compiler Exception err Msg err Code Exception Physical Operator right Loader right Map Plan get Roots get right Loader instanceof Load int err Code String err Msg Expected physical operator root Load Found right Loader get Class get Canonical Name throw new Compiler Exception err Msg err Code right Map Plan get Successors right Loader null right Map Plan get Successors right Loader Empty Load Join case right Pipeline Plan null else got something right side Yank set inner plan right input right Pipeline Plan right Map Plan clone Physical Operator root right Pipeline Plan get Roots get right Pipeline Plan disconnect root right Pipeline Plan get Successors root get right Pipeline Plan remove root right Map Plan trim right Loader else right Opr reduce Done Indexer must run map reduce close start new Oper need yanking case Since starting brand new Operator contain nothing Store right Store get Store File Spec right Str File get Temp File Spec right Store set File right Str File right Opr reduce Plan add Leaf right Store right Opr set Reduce Done true right Opr start New right Str File right Opr right Pipeline Plan null else int err Code String msg map reduce phases done unexpected compiling throw new Plan Exception msg err Code Exception join Op setup Right Pipeline right Pipeline Plan right Opr requested Parallelism need exactly one reducer indexing job point must operating map plan right input would contain nothing else Load Load right Loader Load right Opr map Plan get Roots get join Op set Signature right Loader get Signature Load Func right Load Func right Loader get Load Func List String udfs new Array List String Indexable Load Func class Assignable right Load Func get Class join Op set Right Loader Func Spec right Loader get File get Func Spec join Op set Right Input File Name right Loader get File get File Name udfs add right Loader get File get Func Spec String n need right Oper since right loader Indexable Load Func handle index Plan remove right Opr right Opr compiled Inputs compiled Inputs null else right Opr compiled Inputs compiled Inputs null right Opr null validate join keys merge join simple column projections expression expressions handled index built storage layer sorted data sorted data corresponding index written merge join restricted expressions join keys int num Inputs Plan get Predecessors join Op size int num Inputs List Physical Plan key Plans join Op get Inner Plans Physical Plan key Plan key Plans Physical Operator op key Plan op instanceof Project int err Code String err Msg Merge join possible simple column join keys using right Loader get File get Func Spec loader throw new Compiler Exception err Msg err Code Exception else Load Func load Func right Loader get Load Func Replacing Load indexer disabled merge sparse joins feature would useful current implementation Default Indexable Loader designed handle multiple calls seek Near Specifically rereads entire index call refactoring class required check could removed join Op get Join Type Join int err Code String err Msg Right input merge join must implement Indexable Load Func specified loader load Func n implement throw new Compiler Exception err Msg err Code Replace Load indexer Ordered Load Func class Assignable load Func get Class int err Code String err Msg Right input merge join must implement Ordered Load Func interface specified loader load Func n implement throw new Compiler Exception err Msg err Code String indexer Args new String List Physical Plan right Inp Plans join Op get Inner Plans File Spec orig Right Loader File Spec right Loader get File indexer Args orig Right Loader File Spec get Func Spec String indexer Args Object Serializer serialize Serializable right Inp Plans indexer Args Object Serializer serialize right Pipeline Plan indexer Args right Loader get Signature indexer Args right Loader get Operator Key scope indexer Args Boolean String true File Spec l File new File Spec right Loader get File get File Name new Func Spec Merge Join Indexer class get Name indexer Args right Loader set File l File Loader mro return tuple form key First key First position split Index See Merge Join Indexer Util simple Connect Map Reduce right Opr scope nig right Opr use Typed Comparator true Store st get Store File Spec str File get Temp File Spec st set File str File right Opr reduce Plan add Leaf st right Opr set Reduce Done true set Default Indexable Loader join operator String default Indexable Loader Args new String default Indexable Loader Args orig Right Loader File Spec get Func Spec String default Indexable Loader Args str File get File Name default Indexable Loader Args str File get Func Spec String default Indexable Loader Args join Op get Operator Key scope default Indexable Loader Args orig Right Loader File Spec get File Name join Op set Right Loader Func Spec new Func Spec Default Indexable Loader class get Name default Indexable Loader Args join Op set Right Input File Name orig Right Loader File Spec get File Name join Op set Index File str File get File Name udfs add orig Right Loader File Spec get Func Spec String done right side Lets work left Join materialized left Oper cur Op map Done Life easy cur Op map Plan add Leaf join Op else cur Op reduce Done map side join Close Oper start afresh Store left Store get Store File Spec left Str File get Temp File Spec left Store set File left Str File cur Op reduce Plan add Leaf left Store cur Op set Reduce Done true cur Op start New left Str File cur Op cur Op map Plan add Leaf join Op else int err Code String msg map reduce phases done unexpected compiling throw new Plan Exception msg err Code Exception right Opr null right Opr mark Indexer want ensure indexing job runs prior actual join job connect order Plan connect right Opr cur Op phy Op Map put join Op cur Op combination small splits currently way guarantee sortness combined splits cur Op Combine Small Splits cur Op Fs add udfs catch Plan Exception e int err Code String msg Error compiling operator join Op get Class get Canonical Name throw new Compiler Exception msg err Code Exception e catch Exception e int err Code String err Msg Exception caught compiling Merge Join throw new Compiler Exception err Msg err Code e catch Clone Supported Exception e int err Code String err Msg Cloning exception caught compiling Merge Join throw new Compiler Exception err Msg err Code Exception e Override public void visit Distinct Distinct op throws Visitor Exception try Physical Plan ep new Physical Plan Project prj Star new Project new Operator Key scope nig get Next Node Id scope prj Star set Result Type Data Type prj Star set Star true ep add prj Star List Physical Plan eps new Array List Physical Plan eps add ep Local Rearrange lr new Local Rearrange new Operator Key scope nig get Next Node Id scope lr set Index lr set Key Type Data Type lr set Plans eps lr set Result Type Data Type lr set Distinct true add Map lr blocking op cur Op custom Partitioner op get Custom Partitioner Package pkg new Package new Operator Key scope nig get Next Node Id scope Packager pkgr pkg get Pkgr pkgr set Key Type Data Type pkgr set Distinct true pkg set Num Inps boolean inner false pkgr set Inner inner cur Op reduce Plan add pkg List Physical Plan eps new Array List Physical Plan List Boolean flat new Array List Boolean Physical Plan ep new Physical Plan Project prj new Project new Operator Key scope nig get Next Node Id scope prj set Result Type Data Type prj set Star false prj set Column prj set Overloaded false ep add prj eps add ep flat add true nfe new new Operator Key scope nig get Next Node Id scope op get Requested Parallelism eps flat nfe set Result Type Data Type cur Op reduce Plan add Leaf nfe cur Op set Needs Distinct Combiner true phy Op Map put op cur Op cur Op phy Map put op nfe catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Skewed Join Skewed Join op throws Visitor Exception try compiled Inputs length int err Code throw new Visitor Exception Skewed Join operator compiled Inputs length inputs err Code change plan store first join input temp file File Spec f Spec get Temp File Spec Map Reduce Oper mro compiled Inputs Store str get Store str set File f Spec mro Map Done mro map Plan add Leaf str mro set Map Done Single true else mro Map Done mro Reduce Done mro reduce Plan add Leaf str mro set Reduce Done true else int err Code String msg map reduce phases done unexpected compiling throw new Plan Exception msg err Code Exception File Spec partition File get Temp File Spec int rp op get Requested Parallelism Pair Map Reduce Oper Integer sample Job Pair get Skewed Join Sample Job op mro f Spec partition File rp rp sample Job Pair second set parallelism Skewed Join value calculated sampling job parallel specified join statement rp equal number specified use value sampling process calculated based default op set Requested Parallelism rp load temp file first table input join Map Reduce Oper join Inputs new Map Reduce Oper start New f Spec sample Job Pair first compiled Inputs Map Reduce Oper rearrange Outputs new Map Reduce Oper compiled Inputs new Map Reduce Oper join Inputs run Local Rearrange first join table Local Rearrange lr new Local Rearrange new Operator Key scope nig get Next Node Id scope rp try lr set Index catch Exec Exception e int err Code String msg Unable set index newly created Local Rearrange throw new Plan Exception msg err Code Exception e List Physical Operator l plan get Predecessors op Multi Map Physical Operator Physical Plan join Plans op get Join Plans List Physical Plan groups join Plans get l get check type group keys one field key byte type Data Type groups size type groups get get Leaves get get Result Type lr set Key Type type lr set Plans groups lr set Result Type Data Type lr visit lr get Requested Parallelism cur Op requested Parallelism cur Op requested Parallelism lr get Requested Parallelism rearrange Outputs cur Op compiled Inputs new Map Reduce Oper join Inputs map current input already closed start new job compiled Inputs Map Done compiled Inputs Reduce Done File Spec f get Temp File Spec Store get Store set File f compiled Inputs reduce Plan add Leaf compiled Inputs set Reduce Done true compiled Inputs start New f compiled Inputs run Partition Rearrange second join table Partition Rearrange pr new Partition Rearrange new Operator Key scope nig get Next Node Id scope rp pr set Context Context lr pr try lr set Index catch Exec Exception e int err Code String msg Unable set index newly created Local Rearrange throw new Plan Exception msg err Code Exception e groups join Plans get l get lr set Plans groups lr set Key Type type lr set Result Type Data Type lr visit lr get Requested Parallelism cur Op requested Parallelism cur Op requested Parallelism lr get Requested Parallelism rearrange Outputs cur Op compiled Inputs rearrange Outputs create Global Rearrange Global Rearrange gr new Global Rearrange new Operator Key scope nig get Next Node Id scope rp Skewed join special partitioner gr set Result Type Data Type gr visit gr get Requested Parallelism cur Op requested Parallelism cur Op requested Parallelism gr get Requested Parallelism compiled Inputs new Map Reduce Oper cur Op create Pakcage Package pkg new Package new Operator Key scope nig get Next Node Id scope rp Packager pkgr pkg get Pkgr pkgr set Key Type type pkg set Result Type Data Type pkg set Num Inps boolean inner op get Inner Flags pkgr set Inner inner pkg visit compiled Inputs new Map Reduce Oper cur Op create List Physical Plan eps new Array List Physical Plan List Boolean flat new Array List Boolean Physical Plan ep Add corresponding Projects int ep new Physical Plan Project prj new Project new Operator Key scope nig get Next Node Id scope prj set Column prj set Overloaded false prj set Result Type Data Type ep add prj eps add ep inner Add empty bag outer join right outer add First Reduce Key well Compiler Utils add Empty Bag Outer Join ep op get Schema true First Reduce Key class get Name else Compiler Utils add Empty Bag Outer Join ep op get Schema false First Reduce Key class get Name flat add true fe new new Operator Key scope nig get Next Node Id scope eps flat fe set Result Type Data Type fe visit cur Op set Skewed Join Partition File partition File get File Name phy Op Map put op cur Op catch Plan Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e Override public void visit Sort Sort op throws Visitor Exception try File Spec f Spec get Temp File Spec Map Reduce Oper mro end Single Input Plan Str f Spec File Spec quant File get Temp File Spec int rp op get Requested Parallelism Pair Project Byte fields get Sort Cols op get Sort Plans Pair Map Reduce Oper Integer quant Job Parallelism Pair get Quantile Job op mro f Spec quant File rp cur Op get Sort Job op quant Job Parallelism Pair first f Spec quant File quant Job Parallelism Pair second fields op Comparator Used cur Op Fs add op get Sort Func get Func Spec String cur Op Comparator Used true phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e counter job depends row number case row number previous jobs saved Counter added leaf map task Counter added leaf reduce task last sorting phase Override public void visit Counter Counter op throws Visitor Exception try op Row Number List Physical Operator mp Leaves cur Op map Plan get Leaves Physical Operator leaf mp Leaves get cur Op Map Done cur Op Rank Operation cur Op map Plan add Leaf op else File Spec f Spec get Temp File Spec Map Reduce Oper prev Oper end Single Input Plan Str f Spec Map Reduce Oper mr Counter start New f Spec prev Oper mr Counter map Plan add Leaf op cur Op mr Counter else cur Op reduce Plan add Leaf op phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e case Rank closed previous job containing Counter leaf Rank added map phase Override public void visit Rank Rank op throws Visitor Exception try File Spec f Spec get Temp File Spec Map Reduce Oper prev Oper end Single Input Plan Str f Spec cur Op start New f Spec prev Oper cur Op map Plan add Leaf op phy Op Map put op cur Op catch Exception e int err Code String msg Error compiling operator op get Class get Simple Name throw new Compiler Exception msg err Code Exception e private Pair Project Byte get Sort Cols List Physical Plan plans throws Plan Exception Exec Exception plans null Suppress Warnings unchecked Pair Project Byte ret new Pair plans size int Physical Plan plan plans Physical Operator op plan get Leaves get Project proj op instanceof Project Project op Star return null proj Project op else proj null byte type op get Result Type ret new Pair Project Byte proj type return ret int err Code String msg expression plan found Sort throw new Plan Exception msg err Code Exception private Map Reduce Oper get Sort Job Sort sort Map Reduce Oper quant Job File Spec l File File Spec quant File int rp Pair Project Byte fields throws Plan Exception Map Reduce Oper mro start New l File quant Job mro set Quant File quant File get File Name mro set Global Sort true mro requested Parallelism rp long limit sort get Limit mro limit limit List Physical Plan eps new Array List Physical Plan byte key Type Data Type boolean sort Order List Boolean sort Order List sort get Asc Cols sort Order List null sort Order new boolean sort Order List size int sort Order List size sort Order sort Order List get mro set Sort Order sort Order fields null project Physical Plan ep new Physical Plan Project prj new Project new Operator Key scope nig get Next Node Id scope prj set Star true prj set Overloaded false prj set Result Type Data Type ep add prj eps add ep else int fields Physical Plan ep new Physical Plan Project prj new Project new Operator Key scope nig get Next Node Id scope prj set Column prj set Overloaded false prj set Result Type Data Type ep add prj eps add ep Attach sort plans local rearrange get projection eps add sort get Sort Plans Visit first sort plan figure key type visit first one plan key type tuple try Find Key Type Visitor fktv new Find Key Type Visitor sort get Sort Plans get fktv visit key Type fktv key Type catch Visitor Exception int err Code String msg Internal error Could compute key type sort operator throw new Plan Exception msg err Code Exception Local Rearrange lr new Local Rearrange new Operator Key scope nig get Next Node Id scope try lr set Index catch Exec Exception e int err Code String msg Unable set index newly created Local Rearrange throw new Plan Exception msg err Code Exception e lr set Key Type fields null fields length Data Type key Type lr set Plans eps lr set Result Type Data Type lr add Original Location sort get Alias sort get Original Locations mro map Plan add Leaf lr mro set Map Done true limit Package pkg c new Package new Operator Key scope nig get Next Node Id scope Lite Packager pkgr new Lite Packager pkgr set Key Type fields length Data Type key Type pkg c set Pkgr pkgr pkg c set Num Inps mro combine Plan add pkg c List Physical Plan eps c new Array List Physical Plan List Boolean flat c new Array List Boolean Physical Plan ep c new Physical Plan Project prj c new Project new Operator Key scope nig get Next Node Id scope prj c set Column prj c set Overloaded false prj c set Result Type Data Type ep c add prj c eps c add ep c flat c add true fe c new new Operator Key scope nig get Next Node Id scope eps c flat c fe c set Result Type Data Type mro combine Plan add Leaf fe c Limit p Limit new Limit new Operator Key scope nig get Next Node Id scope p Limit set Limit limit mro combine Plan add Leaf p Limit List Physical Plan eps c new Array List Physical Plan eps c add sort get Sort Plans Local Rearrange lr c new Local Rearrange new Operator Key scope nig get Next Node Id scope try lr c set Index catch Exec Exception e int err Code String msg Unable set index newly created Local Rearrange throw new Plan Exception msg err Code Exception e lr c set Key Type fields length Data Type key Type lr c set Plans eps c lr c set Result Type Data Type mro combine Plan add Leaf lr c Package pkg new Package new Operator Key scope nig get Next Node Id scope Lite Packager pkgr new Lite Packager pkgr set Key Type fields null fields length Data Type key Type pkg set Pkgr pkgr pkg set Num Inps mro reduce Plan add pkg Physical Plan ep new Physical Plan Project prj new Project new Operator Key scope nig get Next Node Id scope prj set Column prj set Overloaded false prj set Result Type Data Type ep add prj List Physical Plan eps new Array List Physical Plan eps add ep List Boolean flattened new Array List Boolean flattened add true nfe new new Operator Key scope nig get Next Node Id scope eps flattened mro reduce Plan add nfe mro reduce Plan connect pkg nfe mro phy Map put sort nfe limit Limit p Limit new Limit new Operator Key scope nig get Next Node Id scope p Limit set Limit limit mro reduce Plan add Leaf p Limit mro phy Map put sort p Limit return mro private Pair Map Reduce Oper Integer get Quantile Job Sort inp Sort Map Reduce Oper prev Job File Spec l File File Spec quant File int rp throws Plan Exception Visitor Exception Sort sort new Sort inp Sort get Operator Key inp Sort get Requested Parallelism null inp Sort get Sort Plans inp Sort get Asc Cols inp Sort get Sort Func sort add Original Location inp Sort get Alias inp Sort get Original Locations Turn asc desc array array strings pass Find Quantiles function List Boolean asc Cols inp Sort get Asc Cols String ascs new String asc Cols size int asc Cols size ascs asc Cols get String check user defined comparator used sort prepend name comparator first fields constructor args array Find Quantiles udf String ctor Args ascs sort Comparator Used String user Comparator Func Spec sort get Sort Func get Func Spec String ctor Args new String ascs length ctor Args user Comparator Func Spec int j j ascs length j ctor Args j ascs j return get Sampling Job sort prev Job null l File quant File rp null Find Quantiles class get Name ctor Args Random Sample Loader class get Name Create Sampling job skewed join private Pair Map Reduce Oper Integer get Skewed Join Sample Job Skewed Join op Map Reduce Oper prev Job File Spec l File File Spec sample File int rp throws Plan Exception Visitor Exception Multi Map Physical Operator Physical Plan join Plans op get Join Plans List Physical Operator l plan get Predecessors op List Physical Plan groups join Plans get l get List Boolean asc Col new Array List Boolean int groups size asc Col add false Sort sort new Sort op get Operator Key op get Requested Parallelism null groups asc Col null set transform plan get keys memory size input tuples first adds plans get key columns List Physical Plan transform Plans new Array List Physical Plan transform Plans add groups adds column memory size Project prj Star new Project new Operator Key scope nig get Next Node Id scope prj Star set Result Type Data Type prj Star set Star true List Physical Operator uf Inps new Array List Physical Operator uf Inps add prj Star Physical Plan ep new Physical Plan User Func uf new User Func new Operator Key scope nig get Next Node Id scope uf Inps new Func Spec Get Mem Num Rows class get Name String null uf set Result Type Data Type ep add uf ep add prj Star ep connect prj Star uf transform Plans add ep try pass configurations User Function String per Context get Properties get Property skewedjoin reduce memusage String value Partition Skewed Keys String mc Context get Properties get Property skewedjoin reduce maxtuple String input File l File get File Name return get Sampling Job sort prev Job transform Plans l File sample File rp null Partition Skewed Keys class get Name new String per mc input File Poisson Sample Loader class get Name catch Exception e throw new Plan Exception e Create sampling job collect statistics sampling input file sequence operations following li Transform input sample tuples another tuple li li Add extra field quot quot tuple li li Package tuples one bag li li Add constant field number reducers li li Sorting bag li li Invoke number reducers sorted bag li li Data generated stored file li param sort Sort operator used sort bag param prev Job previous job current sampling job param transform Plans Physical Plans transform input samples param l File path input file param sample File path output file param rp configured parallemism param sort Key Plans Physical Plans set Sort operator get sorting keys param udf Class Name class name param udf Args arguments param sample Ldr Class Name class name sample loader return pair mapreduceoper integer throws Plan Exception throws Visitor Exception Suppress Warnings deprecation private Pair Map Reduce Oper Integer get Sampling Job Sort sort Map Reduce Oper prev Job List Physical Plan transform Plans File Spec l File File Spec sample File int rp List Physical Plan sort Key Plans String udf Class Name String udf Args String sample Ldr Class Name throws Plan Exception Visitor Exception String rslargs new String Sample Loader expects string version Func Spec first constructor argument rslargs new Func Spec Utils get Tmp File Compressor Name Context String value used order skewed join calculated based file size rslargs Context get Properties get Property Configuration File Spec quant Ld Fil Name new File Spec l File get File Name new Func Spec sample Ldr Class Name rslargs Map Reduce Oper mro start New quant Ld Fil Name prev Job sort Comparator Used mro Fs add sort get Sort Func get Func Spec String cur Op Comparator Used true List Boolean flat new Array List Boolean List Physical Plan eps new Array List Physical Plan transform plans specified project columns sorting keys transform Plans null Pair Project Byte sort Projs null try sort Projs get Sort Cols sort get Sort Plans catch Exception e throw new Runtime Exception e Set projections key columns sort Projs null Physical Plan ep new Physical Plan Project prj new Project new Operator Key scope nig get Next Node Id scope prj set Star true prj set Overloaded false prj set Result Type Data Type ep add prj eps add ep flat add false else Pair Project Byte sort Proj sort Projs Check proj null null used get Sort Cols non Project operator Since Order allow expression operators never set null sort Proj null int err Code String msg Internal exception Could create sampler job throw new Compiler Exception msg err Code Exception Physical Plan ep new Physical Plan Project prj try prj sort Proj first clone catch Clone Supported Exception e get throw new Assertion Error Error cloning project caught exception e ep add prj eps add ep flat add false else int transform Plans size eps add transform Plans get flat add transform Plans size true false foreach pick sort key columns Random Sample Loader output nfe new new Operator Key scope nig get Next Node Id scope eps flat mro map Plan add Leaf nfe set Local Rearrange key output foreach value Local Rearrange Physical Plan ep new Physical Plan Constant Expression ce new Constant Expression new Operator Key scope nig get Next Node Id scope ce set Value ce set Result Type Data Type ep add ce List Physical Plan eps new Array List Physical Plan eps add ep Local Rearrange lr new Local Rearrange new Operator Key scope nig get Next Node Id scope try lr set Index catch Exec Exception e int err Code String msg Unable set index newly created Local Rearrange throw new Plan Exception msg err Code Exception e lr set Key Type Data Type lr set Plans eps lr set Result Type Data Type lr add Original Location sort get Alias sort get Original Locations mro map Plan add lr mro map Plan connect nfe lr mro set Map Done true Package pkg new Package new Operator Key scope nig get Next Node Id scope Packager pkgr new Packager pkg set Pkgr pkgr pkgr set Key Type Data Type pkg set Num Inps boolean inner false pkgr set Inner inner mro reduce Plan add pkg Lets start building plan sort foreach Physical Plan fe Plan new Physical Plan Top level project projects tuple coming foreach package Project top Prj new Project new Operator Key scope nig get Next Node Id scope top Prj set Column top Prj set Result Type Data Type top Prj set Overloaded true fe Plan add top Prj projections form sort plans List Physical Plan nes Sort Plan Lst new Array List Physical Plan sort Key Plans null int sort Key Plans size nes Sort Plan Lst add sort Key Plans get else Pair Project Byte sort Projs null try sort Projs get Sort Cols sort get Sort Plans catch Exception e throw new Runtime Exception e Set projections key columns sort Projs null Physical Plan ep new Physical Plan Project prj new Project new Operator Key scope nig get Next Node Id scope prj set Star true prj set Overloaded false prj set Result Type Data Type ep add prj nes Sort Plan Lst add ep else int sort Projs length Project prj new Project new Operator Key scope nig get Next Node Id scope prj set Result Type sort Projs second sort Projs first null sort Projs first Project End sort Projs length project end last sort column throw new Assertion Error Project range end x supported order last sort column prj set Project End break else prj set Column prj set Overloaded false Physical Plan ep new Physical Plan ep add prj nes Sort Plan Lst add ep sort set Sort Plans nes Sort Plan Lst sort set Result Type Data Type fe Plan add sort fe Plan connect top Prj sort plan constant representing degree parallelism final order map reduce job either come order parallel x script default number reducers cluster parallel x used script Physical Plan rpep new Physical Plan Constant Expression rpce new Constant Expression new Operator Key scope nig get Next Node Id scope rpce set Requested Parallelism rp temporarily set rp adjust runtime final degree parallelism unknown ready submit See rpce set Value rp rpce set Result Type Data Type rpep add rpce List Physical Plan gen Eps new Array List Physical Plan gen Eps add rpep gen Eps add fe Plan List Boolean flattened new Array List Boolean flattened add false flattened add false nfe new new Operator Key scope nig get Next Node Id scope gen Eps flattened mro reduce Plan add nfe mro reduce Plan connect pkg nfe Let connect output foreach containing number quantiles sorted bag samples another foreach Find Quantiles udf input Find Quantiles udf project takes foreach input gives udf Physical Plan ep new Physical Plan Project prj Star new Project new Operator Key scope nig get Next Node Id scope prj Star set Result Type Data Type prj Star set Star true ep add prj Star List Physical Operator uf Inps new Array List Physical Operator uf Inps add prj Star User Func uf new User Func new Operator Key scope nig get Next Node Id scope uf Inps new Func Spec udf Class Name udf Args ep add uf ep connect prj Star uf List Physical Plan ep new Array List Physical Plan ep add ep List Boolean flattened new Array List Boolean flattened add false nfe new new Operator Key scope nig get Next Node Id scope ep flattened mro reduce Plan add nfe mro reduce Plan connect nfe nfe Store str get Store str set File sample File mro reduce Plan add str mro reduce Plan connect nfe str mro set Reduce Done true mro requested Parallelism mro mark Sampler return new Pair Map Reduce Oper Integer mro rp static class Last Input Streaming Optimizer extends Op Plan Visitor String chunk Size Last Input Streaming Optimizer Oper Plan plan String chunk Size super plan new Depth First Walker Map Reduce Oper Oper Plan plan chunk Size chunk Size ind Tup Iter Look pattern Package flatten change Join Package avoid materialize input construct result join fly param mr map reduce plan optimize Override public void visit Op Map Reduce Oper mr throws Visitor Exception optimize Package root reduce plan Union leaf map plan exclude distinct sort combiner plan nested plan contains Project depth Inside occurrences last input flattened mr map Plan Empty return mr reduce Plan Empty return Check combiner plan mr combine Plan Empty return Check map plan List Physical Operator mp Leaves mr map Plan get Leaves mp Leaves size return Physical Operator op mp Leaves get op instanceof Union return Check reduce plan List Physical Operator mr Roots mr reduce Plan get Roots mr Roots size return op mr Roots get op instanceof Package return Package pack Package op List Physical Operator sucs mr reduce Plan get Successors pack sucs null sucs size return op sucs get boolean last Input Flattened true boolean Simple true op instanceof op List Physical Plan plan List get Input Plans List Boolean flatten get Flattened Project proj Last Input null int check nested foreach plans simple projection last input flattened Physical Plan p plan List Physical Operator op Proj p get Roots get op Proj instanceof Project Simple false break Project proj Project op Proj project one column input proj Project End proj get Columns size Simple false break try input project last input proj get Column pack get Num Inps already seen another project also last input might trying flatten twice last input case ca n optimize streaming tuple projects proj Last Input null Simple false break proj Last Input proj make sure project bag needs flattened flatten get proj get Result Type Data Type last Input Flattened false break catch Exec Exception e int err Code String msg Error map reduce compilation Problem accessing column project operator throw new Compiler Exception msg err Code Exception e deeper operators project Physical Operator succ p get Successors proj null p get Successors proj get null succ null succ instanceof Project Simple false break make sure successors last project also project bags changing project tuples proj proj Last Input Project succ get Result Type Data Type Simple false break succ p get Successors succ null p get Successors succ get null Simple false break last Input Flattened Simple proj Last Input null optimize map reduce plan Replace Package Foreach Join Package replace Join Package mr reduce Plan mr pack chunk Size public static void replace Join Package Physical Plan plan Map Reduce Oper mr Package pack String chunk Size throws Visitor Exception Join Packager pkgr new Join Packager pack get Pkgr pkgr set Chunk Size Long parse Long chunk Size pack set Pkgr pkgr List Physical Operator succs plan get Successors succs null succs size int err Code String msg one successor Found succs size successors throw new Compiler Exception msg err Code Exception plan remove pack try plan replace pack catch Plan Exception e int err Code String msg Error rewriting join package throw new Compiler Exception msg err Code Exception e mr phy Map put pack Log Factory get Log Last Input Streaming Optimizer class info Rewrite Package Package Join Packager private static class Find Key Type Visitor extends Phy Plan Visitor byte key Type Data Type Find Key Type Visitor Physical Plan plan super plan new Depth First Walker Physical Operator Physical Plan plan Override public void visit Project Project p throws Visitor Exception key Type p get Result Type private static class Find Store Name Visitor extends Phy Plan Visitor File Spec new Spec File Spec old Spec Find Store Name Visitor Physical Plan plan File Spec new Spec File Spec old Spec super plan new Depth First Walker Physical Operator Physical Plan plan new Spec new Spec old Spec old Spec Override public void visit Store Store sto throws Visitor Exception File Spec spec sto get File old Spec equals spec sto set File new Spec
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java util Properties import org apache Exec Type import org apache backend executionengine Execution Engine import org apache impl Context Exec Type Exec Type distributed mode Hadoop Mapreduce public class Exec Type implements Exec Type private static final long serial Version private static final String modes Override public boolean accepts Properties properties String exec Type Specified properties get Property exectype Upper Case String mode modes exec Type Specified equals mode return true return false Override public Execution Engine get Execution Engine Context Context return new Execution Engine Context Override public Class extends Execution Engine get Execution Engine Class return Execution Engine class Override public boolean Local return false Override public String name return public String String return name
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java util import org apache backend hadoop executionengine Execution Engine import org apache impl Context import org apache tools pigstats Stats import org apache tools pigstats Script State import org apache tools pigstats mapreduce Script State import org apache tools pigstats mapreduce Simple Stats public class Execution Engine extends Execution Engine public Execution Engine Context Context super Context launcher new Map Reduce Launcher Override public Script State instantiate Script State Script State ss new Script State random String ss set Context Context return ss Override public Stats instantiate Stats return new Simple Stats
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools pigstats mapreduce import java io Exception import java util Array List import java util Collections import java util Hash Map import java util Iterator import java util List import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop mapred Counters import org apache hadoop mapred Counters Counter import org apache hadoop mapred Job import org apache hadoop mapreduce Cluster import org apache hadoop mapreduce Task Report import org apache hadoop mapred jobcontrol Job import org apache hadoop mapreduce Task Type import org apache Configuration import org apache Counters import org apache backend hadoop executionengine map Reduce Layer Job Control Compiler import org apache backend hadoop executionengine map Reduce Layer Configuration import org apache backend hadoop executionengine map Reduce Layer Map Reduce Oper import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache classification Interface Audience import org apache classification Interface Stability import org apache impl io File Spec import org apache impl logical Layer Frontend Exception import org apache impl util Object Serializer import org apache newplan Plan Visitor import org apache tools pigstats Input Stats import org apache tools pigstats Job Stats import org apache tools pigstats Output Stats import org apache tools pigstats Stats Job Graph import org apache tools pigstats Stats Job Graph Printer import org python google common collect Lists class encapsulates runtime statistics Map Reduce job Job statistics collected job completed Interface Audience Public Interface Stability Evolving public final class Job Stats extends Job Stats Job Stats String name Job Graph plan super name plan public static final String Job Id Maps Reduces Max Map Time Min Map Time Avg Map Time Median Map Time Max Reduce Time Min Reduce Time Avg Reduce Time Median Reducetime Alias Feature Outputs public static final String Job Id Alias Feature Message Outputs private static final Log Log Factory get Log Job Stats class private List Store map Stores null private List Store reduce Stores null private List File Spec loads null private Boolean disable Counter false private Job job Id private long max Map Time private long min Map Time private long avg Map Time private long median Map Time private long max Reduce Time private long min Reduce Time private long avg Reduce Time private long median Reduce Time private int number Maps private int number Reduces private long map Input Records private long map Output Records private long reduce Input Records private long reduce Output Records private long spill Count private long active Spill Count Obj private long active Spill Count Recs private Hash Map String Long multi Store Counters new Hash Map String Long private Hash Map String Long multi Input Counters new Hash Map String Long private Counters counters null Override public String get Job Id return job Id null null job Id String Override public int get Number Maps return number Maps Override public int get Number Reduces return number Reduces Override public long get Max Map Time return max Map Time Override public long get Min Map Time return min Map Time Override public long get Avg Map Time return avg Map Time Override public long get Max Reduce Time return max Reduce Time Override public long get Min Reduce Time return min Reduce Time Override public long get Avg Educe Time return avg Reduce Time Override public long get Map Input Records return map Input Records Override public long get Map Output Records return map Output Records Override public long get Reduce Input Records return reduce Input Records Override public long get Reduce Output Records return reduce Output Records Override public long get Spill Count return spill Count Override public long get Proactive Spill Count Objects return active Spill Count Obj Override public long get Proactive Spill Count Recs return active Spill Count Recs Override public Counters get Hadoop Counters return counters Override public Map String Long get Multi Store Counters return Collections unmodifiable Map multi Store Counters Override public Map String Long get Multi Input Counters return Collections unmodifiable Map multi Input Counters Override public String get Alias return String get Annotation Override public String get Alias Location return String get Annotation Override public String get Feature return String get Annotation Override public void accept Plan Visitor v throws Frontend Exception v instanceof Job Graph Printer Job Graph Printer jpp Job Graph Printer v jpp visit void set Id Job job Id job Id job Id Override Suppress Warnings unchecked public void set Conf Configuration conf super set Conf conf try map Stores List Store Object Serializer deserialize conf get Job Control Compiler reduce Stores List Store Object Serializer deserialize conf get Job Control Compiler loads Array List File Spec Object Serializer deserialize conf get inputs disable Counter conf get Boolean disable counter false catch Exception e warn Failed deserialize store list e void set Map Stat int size long max long min long avg long median number Maps size max Map Time max min Map Time min avg Map Time avg median Map Time median void set Reduce Stat int size long max long min long avg long median number Reduces size max Reduce Time max min Reduce Time min avg Reduce Time avg median Reduce Time median private static void append Stat long stat String Builder sb stat sb append stat else sb append n sb append Override public String get Display String String Builder sb new String Builder String id job Id null job Id String state Job State sb append id append append get Alias append append get Feature append state Job State sb append Message append get Error Message append else state Job State sb append id append append number Maps append append number Reduces append append Stat max Map Time sb append Stat min Map Time sb append Stat avg Map Time sb append Stat median Map Time sb append Stat max Reduce Time sb append Stat min Reduce Time sb append Stat avg Reduce Time sb append Stat median Reduce Time sb sb append get Alias append append get Feature append Output Stats os outputs sb append os get Location append sb append n return sb String void add Counters Job job try counters get Counters job catch Exception e warn Unable get job counters e counters null Counters Group taskgroup counters get Group Stats Util Counters Group hdfsgroup counters get Group Stats Util Counters Group multistoregroup counters get Group Stats Util Counters Group multiloadgroup counters get Group Stats Util map Input Records taskgroup get Counter Name Stats Util get Counter map Output Records taskgroup get Counter Name Stats Util get Counter reduce Input Records taskgroup get Counter Name Stats Util get Counter reduce Output Records taskgroup get Counter Name Stats Util get Counter hdfs Bytes Read hdfsgroup get Counter Name Stats Util get Counter hdfs Bytes Written hdfsgroup get Counter Name Stats Util get Counter spill Count counters find Counter Counters get Counter active Spill Count Obj counters find Counter Counters get Counter active Spill Count Recs counters find Counter Counters get Counter Iterator Counter iter multistoregroup iterator iter Next Counter cter iter next multi Store Counters put cter get Name cter get Value Iterator Counter iter multiloadgroup iterator iter Next Counter cter iter next multi Input Counters put cter get Name cter get Value private class Task Stat int size long max long min long avg long median public Task Stat int size long max long min long avg long median size size max max min min avg avg median median void add Map Reduce Statistics Job job Iterator Task Report maps null try maps get Task Reports job Task Type catch Exception e warn Failed get map task report e Iterator Task Report reduces null try reduces get Task Reports job Task Type catch Exception e warn Failed get reduce task report e add Map Reduce Statistics maps reduces private Task Stat get Task Stat Iterator Task Report tasks int size long max long min Long long median long total List Long durations new Array List Long tasks Next Task Report rpt tasks next long duration rpt get Finish Time rpt get Start Time durations add duration max duration max duration max min duration min duration min total duration size long avg total size median calculate Median Value durations return new Task Stat size max min avg median private void add Map Reduce Statistics Iterator Task Report maps Iterator Task Report reduces maps null maps Next Task Stat st get Task Stat maps set Map Stat st size st max st min st avg st median else int conf get Int Configuration set Map Stat reduces null reduces Next Task Stat st get Task Stat reduces set Reduce Stat st size st max st min st avg st median else int conf get Int Configuration set Reduce Stat void set Alias Map Reduce Oper mro Script State ss Script State get annotate ss get Alias mro annotate ss get Alias Location mro annotate ss get Feature mro void add Output Statistics map Stores null reduce Stores null warn unable get stores job return map Stores size reduce Stores size Store sto map Stores size map Stores get reduce Stores get sto Tmp Store long records map Stores size map Output Records reduce Output Records Output Stats ds new Output Stats sto get File get File Name hdfs Bytes Written records state Job State ds set Store sto ds set Conf conf outputs add ds state Job State Script State get emit Output Completed Notification ds else Store sto map Stores sto Tmp Store continue add One Output Stats sto Store sto reduce Stores sto Tmp Store continue add One Output Stats sto private void add One Output Stats Store sto long records sto Multi Store Long n multi Store Counters get Stats Util get Multi Store Counter Name sto n null records n else records map Output Records long bytes get Output Size sto conf String location sto get File get File Name Output Stats ds new Output Stats location bytes records state Job State ds set Store sto ds set Conf conf outputs add ds state Job State Script State get emit Output Completed Notification ds void add Input Statistics loads null warn unable get inputs job return loads size File Spec fsp loads get Stats Util Temp File fsp get File Name long records map Input Records Input Stats new Input Stats fsp get File Name hdfs Bytes Read records state Job State set Conf conf Sampler mark Sample Input Indexer mark Indexer Input inputs add else int loads size File Spec fsp loads get Stats Util Temp File fsp get File Name continue add One Input Stats fsp get File Name private void add One Input Stats String file Name int index long records Long n multi Input Counters get Stats Util get Multi Inputs Counter Name file Name index n null records n else file could empty disable Counter records else warn unable get input counter file Name Input Stats new Input Stats file Name records state Job State set Conf conf inputs add public static Iterator Task Report get Task Reports Job job Task Type type throws Exception job get Job Conf get Boolean Configuration false info Task Reports disabled job job get Assigned Job return null Cluster cluster new Cluster job get Job Conf try org apache hadoop mapreduce Job mr Job cluster get Job job get Assigned Job mr Job null local mode mr Job null mr Job job get Job org apache hadoop mapreduce Task Report reports mr Job get Task Reports type return Lists new Array List reports iterator catch Interrupted Exception ir throw new Exception ir public static Counters get Counters Job job throws Exception try Cluster cluster new Cluster job get Job Conf org apache hadoop mapreduce Job mr Job cluster get Job job get Assigned Job mr Job null local mode mr Job null mr Job job get Job return new Counters mr Job get Counters catch Exception ir throw new Exception ir
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools pigstats mapreduce import java io Exception import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop mapred Counters import org apache hadoop mapred Job Client import org apache hadoop mapred Running Job import org apache hadoop mapred jobcontrol Job import org apache hadoop mapred jobcontrol Job Control import org apache hadoop mapreduce Job import org apache backend hadoop executionengine map Reduce Layer Job Control Compiler import org apache backend hadoop executionengine map Reduce Layer Map Reduce Oper import org apache backend hadoop executionengine map Reduce Layer Native Map Reduce Oper import org apache backend hadoop executionengine map Reduce Layer plans Oper Plan import org apache classification Interface Audience Private import org apache impl Context import org apache tools pigstats Job Stats import org apache tools pigstats Stats import org apache tools pigstats Stats Job Graph import org apache tools pigstats Stats Util utility class Statistics public class Stats Util extends Stats Util public static final String org apache hadoop mapred Task Counter public static final String org apache hadoop mapreduce File System Counter private static final Log Log Factory get Log Stats Util class Returns count given counter name counter group Multi Store Counters param job job param job Client Hadoop job client param counter Name counter name return count given counter name public static long get Multi Store Count Job job Job Client job Client String counter Name long value try Running Job rj job Client get Job job get Assigned Job rj null Counters Counter counter rj get Counters get Group get Counter Name counter Name value counter get Value catch Exception e warn Failed get counter counter Name e return value Starts collecting statistics given plan param pc context param client Hadoop job client param jcc job compiler param plan plan public static void start Collection Context pc Job Client client Job Control Compiler jcc Oper Plan plan Simple Stats ps Simple Stats Stats get ps initialize pc client jcc plan Script State get emit Initial Plan Notification plan Script State get emit Launch Started Notification plan size Stops collecting statistics plan param display true log collected statistics log file level public static void stop Collection boolean display Simple Stats ps Simple Stats Stats get ps finish ps Successful error ps get Number Failed Jobs map reduce job failed String err Msg ps get Error Message err Msg null error Error message err Msg Script State get emit Launch Completed Notification ps get Number Successful Jobs display ps display Add stats new Job n yet need completed param job job run return Job Stats job public static Job Stats add Job Stats Job job Simple Stats ps Simple Stats Stats get return ps add Job Stats job Logs statistics log file level public static void display Statistics Simple Stats Stats get display Updates link Job Graph link Stats initial link Job Graph created without job ids using link Oper Plan job submitted execution link Job Graph updated job ids jobs executed param job Mro Map map maps link Job link Map Reduce Oper public static void update Job Mro Map Map Job Map Reduce Oper job Mro Map Simple Stats ps Simple Stats Stats get Map Entry Job Map Reduce Oper entry job Mro Map entry Set Map Reduce Oper mro entry get Value ps map Oper Job mro entry get Key Updates statistics patch jobs done param jc job control public static void accumulate Stats Job Control jc Simple Stats ps Simple Stats Stats get Script State ss Script State get Job job jc get Successful Jobs Job Stats js add Success Job Stats ps job js null ss emitjob Finished Notification js Job job jc get Failed Jobs Job Stats js add Failed Job Stats ps job js null js set Error Msg job get Message ss emit Job Failed Notification js Private public static void set Backend Exception Job job Exception e Job job Id job get Assigned Job job Id null return Stats get set Backend Exception job Id String e private static Job Stats add Failed Job Stats Simple Stats ps Job job ps Job Seen job return null Job Stats js ps add Job Stats job js null warn unable add failed job stats else js set Successful false js add Output Statistics js add Input Statistics return js public static Job Stats add Native Job Stats Stats ps Native Map Reduce Oper mr boolean success return add Native Job Stats ps mr success null public static Job Stats add Native Job Stats Stats ps Native Map Reduce Oper mr boolean success Exception e ps Embedded throw new Illegal Argument Exception Job Stats js Simple Stats ps add Job Stats Native mr js null warn unable add native job stats else js set Successful success e null js set Backend Exception e return js private static Job Stats add Success Job Stats Simple Stats ps Job job ps Job Seen job return null Job Stats js ps add Job Stats job js null warn unable add job stats else js set Successful true js add Map Reduce Statistics job js add Counters job js add Output Statistics js add Input Statistics return js
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer plans import java util Array List import java util Iterator import java util List import java io Print Stream import org apache backend hadoop executionengine map Reduce Layer Map Reduce Oper import org apache backend hadoop executionengine map Reduce Layer Native Map Reduce Oper import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer plans Plan Printer import org apache impl plan Dependency Order Walker import org apache impl plan Visitor Exception visitor mechanism printing logical plan public class Printer extends Op Plan Visitor private Print Stream Stream null private boolean Verbose true param ps Print Stream output plan information param plan plan print public Printer Print Stream ps Oper Plan plan super plan new Dependency Order Walker Map Reduce Oper Oper Plan plan true Stream ps Stream println Stream println Map Reduce Plan Stream println public void set Verbose boolean verbose Verbose verbose Override public void visit Op Map Reduce Oper mr throws Visitor Exception Stream println Map Reduce node mr get Operator Key String mr instanceof Native Map Reduce Oper Stream println Native Map Reduce Oper mr get Command String Stream println Stream println return mr map Plan null mr map Plan size Stream println Map Plan Plan Printer Physical Operator Physical Plan printer new Plan Printer Physical Operator Physical Plan mr map Plan Stream printer set Verbose Verbose printer visit Stream println mr combine Plan null mr combine Plan size Stream println Combine Plan Plan Printer Physical Operator Physical Plan printer new Plan Printer Physical Operator Physical Plan mr combine Plan Stream printer set Verbose Verbose printer visit Stream println mr reduce Plan null mr reduce Plan size Stream println Reduce Plan Plan Printer Physical Operator Physical Plan printer new Plan Printer Physical Operator Physical Plan mr reduce Plan Stream printer set Verbose Verbose printer visit Stream println Stream println Global sort mr Global Sort mr get Quant File null Stream println Quantile file mr get Quant File mr get Use Secondary Key Stream println Secondary sort mr get Use Secondary Key Stream println Stream println
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools pigstats mapreduce import java util Array List import java util Bit Set import java util Collections import java util Hash Map import java util Iterator import java util Linked List import java util List import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache Load Func import org apache backend hadoop executionengine map Reduce Layer Map Reduce Oper import org apache backend hadoop executionengine map Reduce Layer Native Map Reduce Oper import org apache backend hadoop executionengine map Reduce Layer plans Oper Plan import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer util Plan Helper import org apache impl plan Visitor Exception import org apache newplan Operator import org apache tools pigstats Stats Job Graph import org apache tools pigstats Script State import org apache tools pigstats Job Stats import org apache tools pigstats Stats import com google common collect Maps Script States encapsulates settings script runs hadoop cluster settings added jobs spawned script turn persisted hadoop job xml properties already job xml users want know relations script jobs derive job xmls public class Script State extends Script State private static final Log Log Factory get Log Script State class private Map Map Reduce Oper String feature Map null private Map Map Reduce Oper String alias Map Maps new Hash Map private Map Map Reduce Oper String alias Location Map Maps new Hash Map public Script State String id super id public static Script State get return Script State Script State get public void add Settings Conf Map Reduce Oper mro Configuration conf info script settings added job conf set String get Hadoop Version conf set String get Version conf set String id conf set String get Serialized Script conf set String get Command Line try Linked List Store stores Plan Helper get Physical Operators mro map Plan Store class Array List String output Dirs new Array List String Store st stores output Dirs add st get File get File Name conf set String Load Func join output Dirs catch Visitor Exception e warn unable get map stores e mro reduce Plan Empty try Linked List Store stores Plan Helper get Physical Operators mro reduce Plan Store class Array List String output Dirs new Array List String Store st stores output Dirs add st get File get File Name conf set String Load Func join output Dirs catch Visitor Exception e warn unable get reduce stores e try List Load lds Plan Helper get Physical Operators mro map Plan Load class Array List String input Dirs new Array List String lds null lds size Load ld lds input Dirs add ld get File get File Name conf set String Load Func join input Dirs catch Visitor Exception e warn unable get map loads e set Feature mro conf set Job Parents mro conf conf set mapreduce workflow id id conf set mapreduce workflow name get File Name Empty default get File Name conf set mapreduce workflow node name mro get Operator Key String public void add Workflow Adjacencies Conf Oper Plan mrop Configuration conf Map Reduce Oper source mrop List String targets new Array List String mrop get Successors source null Map Reduce Oper target mrop get Successors source targets add target get Operator Key String String new String targets size conf set Strings mapreduce workflow adjacency source get Operator Key String targets Array private void set Feature Map Reduce Oper mro Configuration conf conf set String get Feature mro script Features conf set String String value script Features conf set String get Alias mro conf set String get Alias Location mro private void set Job Parents Map Reduce Oper mro Configuration conf Stats maintains job job id updated upon available Therefore job submitted ids parent jobs already available Job Graph jg Stats get get Job Graph Job Stats js null Iterator Job Stats iter jg iterator iter Next Job Stats job iter next job get Name equals mro get Operator Key String js job break js null List Operator preds jg get Predecessors js preds null String Builder sb new String Builder Operator op preds Job Stats job Job Stats op sb length sb append sb append job get Job Id conf set String sb String public String get Alias Map Reduce Oper mro alias Map contains Key mro set Alias mro return alias Map get mro private void set Alias Map Reduce Oper mro Array List String alias new Array List String String alias Location Str try Array List String alias Location new Array List String new Alias Visitor mro map Plan alias alias Location visit alias Location Str Load Func join alias Location mro combine Plan null alias Location new Array List String new Alias Visitor mro combine Plan alias alias Location visit alias Location Str Load Func join alias Location alias Location new Array List String new Alias Visitor mro reduce Plan alias alias Location visit alias Location Str Load Func join alias Location alias Empty Collections sort alias catch Visitor Exception e warn unable get alias e alias Map put mro Load Func join alias alias Location Map put mro alias Location Str public String get Alias Location Map Reduce Oper mro alias Location Map contains Key mro set Alias mro return alias Location Map get mro public String get Feature Map Reduce Oper mro feature Map null feature Map new Hash Map Map Reduce Oper String String ret Str feature Map get mro ret Str null Bit Set feature new Bit Set feature clear mro Skewed Join feature set ordinal mro Global Sort feature set ordinal mro Sampler feature set ordinal mro Indexer feature set ordinal mro Cogroup feature set ordinal mro Group feature set ordinal mro Regular Join feature set ordinal mro needs Distinct Combiner feature set ordinal mro combine Plan Empty feature set ordinal mro instanceof Native Map Reduce Oper feature set ordinal else n explore plans try new Feature Visitor mro map Plan feature visit mro reduce Plan Empty feature set ordinal else new Feature Visitor mro reduce Plan feature visit catch Visitor Exception e warn Feature visitor failed e String Builder sb new String Builder int feature next Set Bit feature next Set Bit sb length sb append sb append values name ret Str sb String feature Map put mro ret Str return ret Str
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java math Big Decimal import java math Big Integer import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception public class Multiply extends Binary Expression Operator private static final long serial Version public Multiply Operator Key k super k public Multiply Operator Key k int rp super k rp Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Multiply Override public String name return Multiply Data Type find Type Name result Type Key String protected Number multiply Number Number b byte data Type throws Exec Exception switch data Type case Data Type return Double value Double Double b case Data Type return Integer value Integer Integer b case Data Type return Long value Long Long b case Data Type return Float value Float Float b case Data Type return Big Integer multiply Big Integer b case Data Type return Big Decimal multiply Big Decimal b default throw new Exec Exception called unsupported Number class Data Type find Type Name data Type protected Result generic Get Next byte data Type throws Exec Exception Result r accum Child null data Type r null return r byte status Result res res lhs get Next data Type status res return Status status Status res result null return res Number left Number res result res rhs get Next data Type status res return Status status Status res result null return res Number right Number res result res result multiply left right data Type return res Override public Result get Next Double throws Exec Exception return generic Get Next Data Type Override public Result get Next Float throws Exec Exception return generic Get Next Data Type Override public Result get Next Integer throws Exec Exception return generic Get Next Data Type Override public Result get Next Long throws Exec Exception return generic Get Next Data Type Override public Result get Next Big Integer throws Exec Exception return generic Get Next Data Type Override public Result get Next Big Decimal throws Exec Exception return generic Get Next Data Type Override public Multiply clone throws Clone Supported Exception Multiply clone new Multiply new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location Multiply Operator public class Multiply Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Multiply Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super Multiply plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Multiply Expression Multiply Expression ao Multiply Expression return ao get Lhs Equal get Lhs ao get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null get Lhs get Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Multiply Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location public class Negative Expression extends Unary Expression public Negative Expression Operator Plan plan Logical Expression exp super Negative plan exp Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Negative Expression Negative Expression Negative Expression return get Expression Equal get Expression else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema Logical Expression exp Logical Expression plan get Successors get field Schema new Logical Schema Logical Field Schema null null exp get Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Negative Expression lg Exp Plan get Expression deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location Equality test expression public class Equal Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Equal Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super Equal plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Equal Expression Equal Expression eo Equal Expression return eo get Lhs Equal get Lhs eo get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Equal Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java util Hash Map import org apache commons logging Log import org apache commons logging Log Factory import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception public class Equal Expr extends Binary Comparison Operator private static final long serial Version transient private final Log log Log Factory get Log get Class public Equal Expr Operator Key k k public Equal Expr Operator Key k int rp super k rp result Type Data Type Override public String name return Equal Data Type find Type Name result Type Key String Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Equal Override public Result get Next Boolean throws Exec Exception Result left right switch operand Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type Result r accum Child null operand Type r null return r left lhs get Next operand Type right rhs get Next operand Type return Comparison left right default int err Code String msg get Class get Simple Name know handle type Data Type find Type Name operand Type throw new Exec Exception msg err Code Exception Suppress Warnings unchecked private Result Comparison Result left Result right throws Exec Exception left return Status Status return left right return Status Status return right either operand null result null left result null right result null left result null left return Status Status return left left result instanceof Comparable right result instanceof Comparable Comparable left result compare right result left result Boolean else left result Boolean else left result instanceof Hash Map right result instanceof Hash Map Hash Map left Map Hash Map left result Hash Map right Map Hash Map right result left Map equals right Map left result Boolean else left result Boolean else throw new Exec Exception left side right side different types illustrator Markup null left result Boolean left result return left Override public Equal Expr clone throws Clone Supported Exception Equal Expr clone new Equal Expr new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location public class Expression extends Unary Expression public Expression Operator Plan plan Logical Expression exp super plan exp Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Expression Expression Expression return get Expression Equal get Expression else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Expression lg Exp Plan get Expression deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan import java util Iterator import java util List import org apache classification Interface Audience import org apache classification Interface Stability import org apache impl logical Layer Frontend Exception import org apache impl util Pair import org apache newplan logical relational Load import org apache newplan logical relational Store interface defines graph operations plans Plans modeled graphs restrictions types connections operations allowed Interface Audience Private Interface Stability Unstable public interface Operator Plan Get number nodes plan return number nodes plan public int size Get operators plan predecessors return operators plan predecessors empty list plan empty public List Operator get Sources Get operators plan successors return operators plan successors empty list plan empty public List Operator get Sinks given operator get operators immediately plan param op operator fetch predecessors return list operators immediately op empty list op root public List Operator get Predecessors Operator op given operator get operators immediately param op operator fetch successors return list operators immediately op empty list op leaf public List Operator get Successors Operator op given operator get operators softly immediately plan param op operator fetch predecessors return list operators immediately op empty list op root public List Operator get Soft Link Predecessors Operator op given operator get operators softly immediately param op operator fetch successors return list operators immediately op empty list op leaf public List Operator get Soft Link Successors Operator op Add new operator plan connected existing operators param op operator add public void add Operator op Remove operator plan param op Operator removed throws Frontend Exception remove operation attempts remove operator still connected operators public void remove Operator op throws Frontend Exception Connect two operators plan controlling position edge lists edges placed param Operator edge come param Pos Position array edge param Operator edge go param Pos Position array edge public void connect Operator int Pos Operator int Pos Connect two operators plan param Operator edge come param Operator edge go public void connect Operator Operator Create soft edge two nodes param Operator dependent upon param Operator dependency public void create Soft Link Operator Operator Remove soft edge param Operator dependent upon param Operator dependency public void remove Soft Link Operator Operator Disconnect two operators plan param Operator edge coming param Operator edge going return pair positions indicating position arrays throws Frontend Exception two operators n connected public Pair Integer Integer disconnect Operator Operator throws Frontend Exception Get iterator operators plan return iterator operators plan public Iterator Operator get Operators like shallow comparison Two plans equal equivalent operators equivalent structure param object compare return boolean plans equivalent throws Frontend Exception public boolean Equal Operator Plan throws Frontend Exception method replace old Operator new Operator make connection new operator place old operator param old Operator operator replaced param new Operator operator replace throws Frontend Exception public void replace Operator old Operator Operator new Operator throws Frontend Exception method remove node operator Remove also Connect successors predecessor connect predecessors successor param operator Remove operator remove throws Frontend Exception public void remove Reconnect Operator operator Remove throws Frontend Exception method insert node operator Insert pred succ pred succ null param pred predecessor inserted node method param operator Insert operato insert param succ successor inserted node method throws Frontend Exception public void insert Operator pred Operator operator Insert Operator succ throws Frontend Exception check path plan graph load operator store operator param load load operator param store store operator return true yes otherwise public boolean path Exists Operator load Operator store
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java math Big Decimal import java math Big Integer import java sql Timestamp import java util Array List import java util Arrays import java util List import java util Properties import org apache commons cli Command Line import org apache commons cli Command Line Parser import org apache commons cli Gnu Parser import org apache commons cli Help Formatter import org apache commons cli Options import org apache commons cli Parse Exception import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop fs File Status import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop fs Path Filter import org apache hadoop hive conf Hive Conf import org apache hadoop hive ql io orc Compression Kind import org apache hadoop hive ql io orc Orc File import org apache hadoop hive ql io orc Orc New Input Format import org apache hadoop hive ql io orc Orc New Output Format import org apache hadoop hive ql io orc Orc Serde import org apache hadoop hive ql io orc Orc Struct import org apache hadoop hive ql io orc Reader import org apache hadoop hive ql io orc Orc File Version import org apache hadoop hive ql io sarg Search Argument import org apache hadoop hive ql io sarg Search Argument Builder import org apache hadoop hive ql io sarg Search Argument Factory import org apache hadoop hive serde Abstract Ser De import org apache hadoop hive serde Column Projection Utils import org apache hadoop hive serde objectinspector Object Inspector import org apache hadoop hive serde typeinfo Struct Type Info import org apache hadoop hive serde typeinfo Type Info import org apache hadoop hive serde typeinfo Type Info Utils import org apache hadoop hive shims Hadoop Shims import org apache hadoop hive shims Hadoop Shims Secure import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Job import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce Record Writer import org apache hadoop mapreduce lib input File Input Format import org apache hadoop mapreduce lib output File Output Format import org apache Expression import org apache Expression Expression import org apache Expression Column import org apache Expression Const import org apache Expression Expression import org apache Expression Op Type import org apache Expression Unary Expression import org apache Load Func import org apache Load Metadata import org apache Load Predicate Pushdown import org apache Load Push import org apache Exception import org apache Warning import org apache Resource Schema import org apache Store Func import org apache Expression Binary Expression import org apache Resource Schema Resource Field Schema import org apache Resource Statistics import org apache Store Func Interface import org apache Store Resources import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Split import org apache data Data Type import org apache data Tuple import org apache impl logical Layer Frontend Exception import org apache impl util Object Serializer import org apache impl util Context import org apache impl util Utils import org apache impl util hive Hive Utils import org joda time Date Time import com esotericsoftware kryo io Input import com google common annotations Visible Testing load function store function file optional constructor argument provided allows one customize advanced behaviors list available options ul li code stripe Size code Set stripe size file li code r row Index Stride code Set distance entries row index li code b buffer Size code size memory buffers used compressing storing stripe memory li code p block Padding code Sets whether blocks padded prevent stripes straddling blocks li code c compress code Sets generic compression used compress data Valid codecs li code v version code Sets version file written ul public class Orc Storage extends Load Func implements Store Func Interface Load Metadata Load Push Load Predicate Pushdown Store Resources Make Orc Input Format visible private static final String sarg pushdown protected Record Reader null protected Record Writer writer null private Type Info type Info null private Object Inspector oi null private Orc Serde serde new Orc Serde private String signature private Long stripe Size private Integer row Index Stride private Integer buffer Size private Boolean block Padding private Compression Kind compress private Version version private static final Options valid Options private final Command Line Parser parser new Gnu Parser protected final static Log log Log Factory get Log Orc Storage class protected boolean Required Columns null private static final String Schema Signature Suffix schema private static final String Required Columns Suffix columns private static final String Search Args Suffix sarg static valid Options new Options valid Options add Option stripe Size true Set stripe size file valid Options add Option r row Index Stride true Set distance entries row index valid Options add Option b buffer Size true size memory buffers used compressing storing stripe memory valid Options add Option p block Padding false Sets whether blocks padded prevent stripes straddling blocks valid Options add Option c compress true Sets generic compression used compress data valid Options add Option v version true Sets version file written public Orc Storage public Orc Storage String options String opts Arr options split try Command Line configured Options parser parse valid Options opts Arr configured Options Option stripe Size Long parse Long configured Options get Option Value configured Options Option r row Index Stride Integer parse Int configured Options get Option Value r configured Options Option b buffer Size Integer parse Int configured Options get Option Value b block Padding configured Options Option p configured Options Option c compress Compression Kind value configured Options get Option Value c configured Options Option v version Version Name configured Options get Option Value v catch Parse Exception e log error Exception Orc Storage e log error Orc Storage called arguments options warn Parse Exception Orc Storage Warning Help Formatter formatter new Help Formatter formatter print Help Orc Storage options valid Options throw new Runtime Exception e Override public String rel Abs Path Store Location String location Path cur Dir throws Exception return Load Func get Absolute Path location cur Dir Override public Output Format get Output Format throws Exception return new Orc New Output Format Override public void set Store Location String location Job job throws Exception Context get Context Frontend stripe Size null job get Configuration set Long Hive Conf Conf Vars varname stripe Size row Index Stride null job get Configuration set Int Hive Conf Conf Vars varname row Index Stride buffer Size null job get Configuration set Int Hive Conf Conf Vars varname buffer Size block Padding null job get Configuration set Boolean Hive Conf Conf Vars varname block Padding compress null job get Configuration set Hive Conf Conf Vars varname compress String version null job get Configuration set Hive Conf Conf Vars varname version get Name File Output Format set Output Path job new Path location type Info null Properties p Context get Context get Properties get Class type Info Type Info Object Serializer deserialize p get Property signature Schema Signature Suffix oi null oi Hive Utils create Object Inspector type Info Override public void check Schema Resource Schema rs throws Exception Resource Field Schema fs new Resource Field Schema fs set Type Data Type fs set Schema rs type Info Hive Utils get Type Info fs Properties p Context get Context get Properties get Class p set Property signature Schema Signature Suffix Object Serializer serialize type Info Override public void prepare Write Record Writer writer throws Exception writer writer Override public void put Next Tuple throws Exception try writer write null serde serialize oi catch Interrupted Exception e throw new Exception e Override public void set Store Func Context Signature String signature signature signature Override public void set Context Signature String signature signature signature Override public void cleanup Failure String location Job job throws Exception Store Func cleanup Failure Impl location job Override public void cleanup Success String location Job job throws Exception Override public void set Location String location Job job throws Exception Properties p Context get Context get Properties get Class Context get Context Frontend type Info Type Info Object Serializer deserialize p get Property signature Schema Signature Suffix else type Info null type Info get Type Info location job type Info null oi null oi Orc Struct create Object Inspector type Info Context get Context Frontend p get Property signature Required Columns Suffix null Required Columns boolean Object Serializer deserialize p get Property signature Required Columns Suffix job get Configuration set Boolean Column Projection Utils false job get Configuration set Column Projection Utils get Reqired Column Id String Required Columns p get Property signature Search Args Suffix null Bug set Search Argument always expects set job get Configuration set Column Projection Utils get Reqired Column Names String get Schema location job Required Columns else p get Property signature Search Args Suffix null Bug set Search Argument always expects set job get Configuration set Column Projection Utils get Reqired Column Names String get Schema location job p get Property signature Search Args Suffix null job get Configuration set p get Property signature Search Args Suffix File Input Format set Input Paths job location private String get Reqired Column Id String boolean required Columns String Builder sb new String Builder int required Columns length required Columns sb append append sb char sb length sb delete Char sb length return sb String private String get Reqired Column Names String Resource Schema schema String Builder sb new String Builder Resource Field Schema field schema get Fields sb append field get Name append sb char sb length sb delete Char sb length return sb String private String get Reqired Column Names String Resource Schema schema boolean required Columns String Builder sb new String Builder Resource Field Schema fields schema get Fields int required Columns length required Columns sb append fields append sb char sb length sb delete Char sb length return sb String Override public Input Format get Input Format throws Exception return new Orc New Input Format Override public void prepare Read Record Reader reader Split split throws Exception reader Override public Tuple get Next throws Exception try boolean Done next Key Value Done return null Object value get Current Value Tuple Tuple Hive Utils convert Hive value oi Required Columns return catch Interrupted Exception e int err Code String err Msg Error reading input throw new Exec Exception err Msg err Code Exception e Override public List String get Ship Files Class class List new Class Orc File class Hive Conf class Abstract Ser De class org apache hadoop hive shims Hadoop Shims class Hadoop Shims Secure class Hadoop Shims class Input class return Func Utils get Ship Files class List private static Path get First File String location File System fs Path Filter filter throws Exception String locations get Path Strings location Path paths new Path locations length int paths length paths new Path locations List File Status status List new Array List File Status int paths length File Status files fs glob Status paths files null File Status tempf files status List add tempf File Status status Array File Status status List Array new File Status status List size Path p Utils depth First Search File status Array fs filter return p Override public Resource Schema get Schema String location Job job throws Exception type Info null type Info get Type Info location job still null means case multiple load store type Info null return null Resource Field Schema fs Hive Utils get Resource Field Schema type Info return fs get Schema private Type Info get Type Info String location Job job throws Exception Properties p Context get Context get Properties get Class Type Info type Info Type Info Object Serializer deserialize p get Property signature Schema Signature Suffix type Info null type Info get Type Info Location location job type Info null p set Property signature Schema Signature Suffix Object Serializer serialize type Info return type Info private Type Info get Type Info Location String location Job job throws Exception File System fs File System get new Path location Uri job get Configuration Path path get First File location fs new Non Empty Orc File Filter fs path null log info find files location Probably multiple load store script return null Reader reader Orc File create Reader fs path Object Inspector oip Object Inspector reader get Object Inspector return Type Info Utils get Type Info Object Inspector oip public static class Non Empty Orc File Filter implements Path Filter private File System fs public Non Empty Orc File Filter File System fs fs fs Override public boolean accept Path path Reader reader try reader Orc File create Reader fs path Object Inspector oip Object Inspector reader get Object Inspector Resource Field Schema rs Hive Utils get Resource Field Schema Type Info Utils get Type Info Object Inspector oip rs get Schema get Fields length return true catch Exception e throw new Runtime Exception e return false Override public Resource Statistics get Statistics String location Job job throws Exception return null Override public String get Partition Keys String location Job job throws Exception return null Override public void set Partition Filter Expression partition Filter throws Exception Override public List Operator Set get Features return Arrays List Load Push Operator Set Override public Required Field Response push Projection Required Field List required Field List throws Frontend Exception required Field List null return null required Field List get Fields null int schema Size Struct Type Info type Info get Struct Field Type Infos size Required Columns new boolean schema Size Required Field rf required Field List get Fields rf get Index Required Columns rf get Index true Properties p Context get Context get Properties get Class try p set Property signature Required Columns Suffix Object Serializer serialize Required Columns catch Exception e throw new Runtime Exception serialize Required Columns return new Required Field Response true Override public List String get Predicate Fields String location Job job throws Exception Resource Schema schema get Schema location job List String predicate Fields new Array List String Resource Field Schema field schema get Fields switch field get Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type predicate Fields add field get Name break default Skip Data Type Data Type Data Type Data Type break return predicate Fields Override public List Op Type get Supported Expression Types List Op Type types new Array List Op Type types add Op Type types add Op Type types add Op Type types add Op Type types add Op Type types add Op Type types add Op Type types add Op Type types add Op Type types add Op Type types add Op Type types add Op Type return types Override public void set Pushdown Predicate Expression expr throws Exception Search Argument Arg get Search Argument expr Arg null log info Pushdown predicate expression expr log info Pushdown predicate Search Argument n Arg Properties p Context get Context get Properties get Class try p set Property signature Search Args Suffix Arg Kryo catch Exception e throw new Exception serialize Search Argument Arg Visible Testing Search Argument get Search Argument Expression expr expr null return null Builder builder Search Argument Factory new Builder boolean begin expr get Op Type equals Op Type expr get Op Type equals Op Type expr get Op Type equals Op Type begin builder start build Search Argument expr builder begin builder end Search Argument Arg builder build return Arg private void build Search Argument Expression expr Builder builder expr instanceof Binary Expression Expression lhs Binary Expression expr get Lhs Expression rhs Binary Expression expr get Rhs switch expr get Op Type case builder start build Search Argument lhs builder build Search Argument rhs builder builder end break case builder start build Search Argument lhs builder build Search Argument rhs builder builder end break case builder equals get Column Name lhs get Expression Value rhs break case builder start builder equals get Column Name lhs get Expression Value rhs builder end break case builder less get Column Name lhs get Expression Value rhs break case builder less Equals get Column Name lhs get Expression Value rhs break case builder start builder less Equals get Column Name lhs get Expression Value rhs builder end break case builder start builder less get Column Name lhs get Expression Value rhs builder end break case Expression Expression rhs builder get Column Name lhs get Search Arg Obj Value get Lower get Search Arg Obj Value get Upper case Expression Expression rhs builder get Column Name lhs get Search Arg Obj Values get Values Array default throw new Runtime Exception Unsupported binary expression type expr get Op Type expr else expr instanceof Unary Expression Expression unary Expr Unary Expression expr get Expression switch expr get Op Type case builder Null get Column Name unary Expr break case builder start build Search Argument unary Expr builder builder end break default throw new Runtime Exception Unsupported unary expression type expr get Op Type expr else throw new Runtime Exception Unsupported expression type expr get Op Type expr private String get Column Name Expression expr try return Column expr get Name catch Class Cast Exception e throw new Runtime Exception Expected Column found expr get Class get Name expression expr e private Object get Expression Value Expression expr switch expr get Op Type case return Column expr get Name case return get Search Arg Obj Value Const expr get Value default throw new Runtime Exception Unsupported expression type expr get Op Type expr private List Object get Search Arg Obj Values List Object values values get instanceof Big Integer values get instanceof Big Decimal values get instanceof Date Time return values List Object new Values new Array List Object values size Object value values new Values add get Search Arg Obj Value value return values private Object get Search Arg Obj Value Object value value instanceof Big Integer return new Big Decimal Big Integer value else value instanceof Big Decimal return value else value instanceof Date Time return new Timestamp Date Time value get Millis else return value
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location Boolean Expression public class Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Expression Expression ao Expression return ao get Lhs Equal get Lhs ao get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools pigstats import java io Exception import java util Iterator import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs Path import org apache Load Func import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache classification Interface Audience import org apache classification Interface Stability import org apache data Tuple import org apache impl Context import org apache impl io Read End Loader class encapsulates runtime statistics user specified output Interface Audience Public Interface Stability Evolving public final class Output Stats private String name private String location private long bytes private long records private boolean success private Store store null private Configuration conf private static final Log Log Factory get Log Output Stats class public Output Stats String location long bytes long records boolean success location location bytes bytes records records success success try name new Path location get Name catch Exception e location mal formatted name location public String get Name return name public String get Location return location public long get Bytes return bytes public void set Bytes long bytes bytes bytes public long get Records return records public void set Records long records records records public long get Number Records return records public String get Function Name return store null null store get File get Func Spec get Class Name public boolean Successful return success public void set Successful boolean success success success public String get Alias return store null null store get Alias public Store get Store return store public Configuration get Conf return conf public String get Display String String Builder sb new String Builder success sb append Successfully stored records sb append records append records else sb append records bytes sb append append bytes append bytes sb append append location append n else sb append Failed produce result append location append n return sb String public void set Store Store store store store public void set Conf Configuration conf conf conf public Iterator Tuple iterator throws Exception final Load Func p Context Context Script State get get Context Context null store null throw new Illegal Argument Exception try Load Func original Load Func Load Func Context instantiate Func Spec store get File get Func Spec p Load Func new Read End Loader original Load Func Configuration Util Configuration Context get Properties store get File get File Name catch Exception e int err Code String msg Unable get results store get File throw new Exec Exception msg err Code Exception e return new Iterator Tuple Tuple boolean End Override public boolean Next End return false try null p get Next null End true catch Exception e error e null End true throw new Error e return End Override public Tuple next Tuple next next null null return next try next p get Next catch Exception e error e next null End true return next Override public void remove throw new Runtime Exception Removal supported
Generated Java edit line Parse Exception java Version Java Options null package org apache tools parameters exception thrown parse errors encountered explicitly create objects exception type calling method generate Parse Exception generated parser modify class customize error reporting mechanisms long retain public fields public class Parse Exception extends Exception version identifier Serializable class Increment serialized form class changes private static final long serial Version constructor used method generate Parse Exception generated parser Calling constructor generates new object type fields current Token expected Token Sequences token Image set public Parse Exception Token current Token Val int expected Token Sequences Val String token Image Val super initialise current Token Val expected Token Sequences Val token Image Val current Token current Token Val expected Token Sequences expected Token Sequences Val token Image token Image Val following constructors use whatever purpose think Constructing exception manner makes exception behave normal way e documented class Throwable fields error Token expected Token Sequences token Image contain relevant information Java generated code use constructors public Parse Exception super Constructor message public Parse Exception String message super message last token consumed successfully object created due parse error token followng token therefore first error token public Token current Token entry array array integers array integers represents sequence tokens ordinal values expected point parse public int expected Token Sequences reference token Image array generated parser within parse error occurred array defined generated Constants interface public String token Image uses current Token expected Token Sequences generate parse error message returns object created due parse error catch gets thrown parser correct error message gets displayed private static String initialise Token current Token int expected Token Sequences String token Image String eol System get Property line separator n String Buffer expected new String Buffer int max Size int expected Token Sequences length max Size expected Token Sequences length max Size expected Token Sequences length int j j expected Token Sequences length j expected append token Image expected Token Sequences j append expected Token Sequences expected Token Sequences length expected append expected append eol append String retval Encountered Token tok current Token next int max Size retval tok kind retval token Image break retval token Image tok kind retval retval add escapes tok image retval tok tok next retval line current Token next begin Line column current Token next begin Column retval eol expected Token Sequences length retval expecting eol else retval expecting one eol retval expected String return retval end line string machine protected String eol System get Property line separator n Used convert raw characters escaped version raw version used part string literal static String add escapes String str String Buffer retval new String Buffer char ch int str length switch str char case continue case b retval append b continue case retval append continue case n retval append n continue case f retval append f continue case r retval append r continue case retval append continue case retval append continue case retval append continue default ch str char x ch x e String Integer String ch retval append u substring length length else retval append ch continue return retval String Java Original Checksum e c cb ba fa edit line
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache parser import org antlr runtime Recognition Exception import org apache impl logical Layer Frontend Exception public class Parser Exception extends Frontend Exception private static final long serial Version private static final int error Code public Parser Exception Recognition Exception reco Exception super script failed parse reco Exception error Code reco Exception public Parser Exception String msg super msg error Code public Parser Exception String msg Source Location location super msg error Code location public Parser Exception String msg Throwable cause super msg error Code cause Override public String String return Failed parse get Message
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical rules import java io Exception import java util Array List import java util Arrays import java util Hash Map import java util List import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop mapreduce Job import org apache Expression import org apache Expression Binary Expression import org apache Expression Column import org apache Load Func import org apache Load Metadata import org apache impl logical Layer Frontend Exception import org apache newplan Filter Extractor import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Operator Sub Plan import org apache newplan Partition Filter Extractor import org apache newplan logical relational Filter import org apache newplan logical relational Load import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache newplan optimizer Rule import org apache newplan optimizer Transformer public class Partition Filter Optimizer extends Rule private static final Log Log Factory get Log Partition Filter Optimizer class private String partition Keys reference Load Metada implementation private Load Metadata load Metadata reference Load Func implementation private Load Func load Func private Load lo Load private Filter lo Filter map column names reported link Load Metadata get Schema String org apache hadoop conf Configuration present link Load get Schema two different user provided schema load statement private Map String String col Name Map new Hash Map String String map column nameas present link Load get Schema reported link Load Metadata get Schema String org apache hadoop conf Configuration two different user provided schema load statement private Map String String reverse Col Name Map new Hash Map String String public Partition Filter Optimizer String name super name false Override protected Operator Plan build Pattern match foreach Logical Plan plan new Logical Plan Logical Relational Operator load new Load null plan plan add load Logical Relational Operator filter new Filter plan plan add filter plan connect load filter return plan Override public Transformer get New Transformer return new Partition Filter Push Transformer public class Partition Filter Push Transformer extends Transformer protected Operator Sub Plan sub Plan private boolean plan Changed Override public boolean check Operator Plan matched throws Frontend Exception lo Load Load matched get Sources get Match filter List Operator succeds current Plan get Successors lo Load succeds null succeds size succeds get instanceof Filter return false lo Filter Filter succeds get Filter dependency load skip optimization current Plan get Soft Link Predecessors lo Filter null return false check Load Func implements Load Metada load Func lo Load get Load Func load Func instanceof Load Metadata return false load Metadata Load Metadata load Func try partition Keys load Metadata get Partition Keys lo Load get File Spec get File Name new Job lo Load get Configuration catch Exception e throw new Frontend Exception e partition Keys null partition Keys length return false return true Override public Operator Plan report Changes Return null case partition filter extracted means plan n changed return modified plan filters removed return plan Changed sub Plan null Override public void transform Operator Plan matched throws Frontend Exception sub Plan new Operator Sub Plan current Plan setup Col Name Maps Filter Extractor filter Finder new Partition Filter Extractor lo Filter get Filter Plan get Mapped Keys partition Keys filter Finder visit info Partition keys Arrays List partition Keys Expression partition Filter filter Finder get Push Expression partition Filter null column names filter may ones provided user schema load statement may need replace partition column names given Load Func get Schema update Mapped Col Names partition Filter try info Setting partition filter partition Filter loader load Metadata load Metadata set Partition Filter partition Filter plan Changed true catch Exception e throw new Frontend Exception e filter Finder Filter Removable current Plan remove Reconnect lo Filter else lo Filter set Filter Plan filter Finder get Filtered Plan protected void update Mapped Col Names Expression expr expr instanceof Binary Expression update Mapped Col Names Binary Expression expr get Lhs update Mapped Col Names Binary Expression expr get Rhs else expr instanceof Column Column col Column expr col set Name reverse Col Name Map get col get Name partition keys argument reported link Load Metadata get Partition Keys String org apache hadoop conf Configuration user may renamed providing schema different names load statement method replace former names latter names param partition Keys return protected List String get Mapped Keys String partition Keys List String mapped Keys new Array List String partition Keys length int partition Keys length mapped Keys add col Name Map get partition Keys return mapped Keys protected void setup Col Name Maps throws Frontend Exception Logical Schema lo Load Schema lo Load get Schema Logical Schema load Func Schema lo Load get Determined Schema int load Func Schema size col Name Map put load Func Schema get Field alias lo Load Schema size lo Load Schema get Field alias load Func Schema get Field alias reverse Col Name Map put lo Load Schema size lo Load Schema get Field alias load Func Schema get Field alias load Func Schema get Field alias
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java util List import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Add import org apache backend hadoop executionengine physical Layer expression Operators Constant Expression import org apache backend hadoop executionengine physical Layer expression Operators Divide import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Greater Expr import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Less Expr import org apache backend hadoop executionengine physical Layer expression Operators Mod import org apache backend hadoop executionengine physical Layer expression Operators Multiply import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators Bin Cond import org apache backend hadoop executionengine physical Layer expression Operators Cast import org apache backend hadoop executionengine physical Layer expression Operators Null import org apache backend hadoop executionengine physical Layer expression Operators Map Look import org apache backend hadoop executionengine physical Layer expression Operators Negative import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators Project import org apache backend hadoop executionengine physical Layer expression Operators Regexp import org apache backend hadoop executionengine physical Layer expression Operators User Comparison Func import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer expression Operators Subtract import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Collected Group import org apache backend hadoop executionengine physical Layer relational Operators Demux import org apache backend hadoop executionengine physical Layer relational Operators Distinct import org apache backend hadoop executionengine physical Layer relational Operators Join import org apache backend hadoop executionengine physical Layer relational Operators Filter import org apache backend hadoop executionengine physical Layer relational Operators import org apache backend hadoop executionengine physical Layer relational Operators Global Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Limit import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Merge Cogroup import org apache backend hadoop executionengine physical Layer relational Operators Merge Join import org apache backend hadoop executionengine physical Layer relational Operators Native import org apache backend hadoop executionengine physical Layer relational Operators Optimized import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Partial Agg import org apache backend hadoop executionengine physical Layer relational Operators Poisson Sample import org apache backend hadoop executionengine physical Layer relational Operators Pre Combiner Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Rank import org apache backend hadoop executionengine physical Layer relational Operators Reservoir Sample import org apache backend hadoop executionengine physical Layer relational Operators Skewed Join import org apache backend hadoop executionengine physical Layer relational Operators Sort import org apache backend hadoop executionengine physical Layer relational Operators Split import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer relational Operators Stream import org apache backend hadoop executionengine physical Layer relational Operators Union import org apache impl plan Dependency Order Walker import org apache impl plan Visitor Exception Sets parent plan Physical Operators Note parent Plan bit misnomer actually want operators point plan necessarily one member public class Phy Plan Setter extends Phy Plan Visitor Physical Plan parent public Phy Plan Setter Physical Plan plan super plan new Dependency Order Walker Physical Operator Physical Plan plan parent plan Override public void visit Physical Operator op op set Parent Plan parent Override public void visit Load Load ld throws Visitor Exception ld set Parent Plan parent Override public void visit Native Native nt throws Visitor Exception nt set Parent Plan parent Override public void visit Store Store st throws Visitor Exception st set Parent Plan parent Override public void visit Filter Filter fl throws Visitor Exception super visit Filter fl fl set Parent Plan parent Override public void visit Local Rearrange Local Rearrange lr throws Visitor Exception super visit Local Rearrange lr lr set Parent Plan parent Override public void visit Collected Group Collected Group mg throws Visitor Exception super visit Collected Group mg mg set Parent Plan parent Override public void visit Global Rearrange Global Rearrange gr throws Visitor Exception gr set Parent Plan parent Override public void visit Package Package pkg throws Visitor Exception pkg set Parent Plan parent Override public void visit nfe throws Visitor Exception super visit nfe nfe set Parent Plan parent Override public void visit Union Union un throws Visitor Exception un set Parent Plan parent Override public void visit Split Split spl throws Visitor Exception Physical Plan old Plan parent List Physical Plan plans spl get Plans Physical Plan plan plans parent plan push Walker Current Walker spawn Child Walker plan visit pop Walker parent old Plan spl set Parent Plan parent Override public void visit Demux Demux demux throws Visitor Exception super visit Demux demux demux set Parent Plan parent Override public void visit Distinct Distinct distinct throws Visitor Exception distinct set Parent Plan parent Override public void visit Sort Sort sort throws Visitor Exception super visit Sort sort sort set Parent Plan parent Override public void visit Rank Rank rank throws Visitor Exception rank set Parent Plan parent Override public void visit Constant Constant Expression cnst throws Visitor Exception cnst set Parent Plan parent Override public void visit Project Project proj throws Visitor Exception proj set Parent Plan parent Override public void visit Greater Greater Expr grt throws Visitor Exception grt set Parent Plan parent Override public void visit Less Less Expr lt throws Visitor Exception lt set Parent Plan parent Override public void visit Equal Equal Expr gte throws Visitor Exception gte set Parent Plan parent Override public void visit Equal Equal Expr lte throws Visitor Exception lte set Parent Plan parent Override public void visit Equal Equal Expr eq throws Visitor Exception eq set Parent Plan parent Override public void visit Equal Equal Expr eq throws Visitor Exception eq set Parent Plan parent Override public void visit Regexp Regexp throws Visitor Exception set Parent Plan parent Override public void visit Null Null Null throws Visitor Exception Null set Parent Plan parent Override public void visit Add Add add throws Visitor Exception add set Parent Plan parent Override public void visit Subtract Subtract sub throws Visitor Exception sub set Parent Plan parent Override public void visit Multiply Multiply mul throws Visitor Exception mul set Parent Plan parent Override public void visit Divide Divide dv throws Visitor Exception dv set Parent Plan parent Override public void visit Mod Mod mod throws Visitor Exception mod set Parent Plan parent Override public void visit throws Visitor Exception set Parent Plan parent Override public void visit throws Visitor Exception set Parent Plan parent Override public void visit throws Visitor Exception set Parent Plan parent Override public void visit Bin Cond Bin Cond bin Cond bin Cond set Parent Plan parent Override public void visit Negative Negative negative negative set Parent Plan parent Override public void visit User Func User Func user Func throws Visitor Exception user Func set Parent Plan parent Override public void visit Comparison Func User Comparison Func comp Func throws Visitor Exception comp Func set Parent Plan parent Override public void visit Map Look Map Look map Look map Look set Parent Plan parent Override public void visit Cast Cast cast cast set Parent Plan parent Override public void visit Limit Limit lim throws Visitor Exception lim set Parent Plan parent Override public void visit Join Join join throws Visitor Exception join set Parent Plan parent Override public void visit Merge Join Merge Join join throws Visitor Exception join set Parent Plan parent Override public void visit Skewed Join Skewed Join join throws Visitor Exception join set Parent Plan parent Override public void visit Stream Stream stream throws Visitor Exception stream set Parent Plan parent Override public void visit Partition Rearrange Partition Rearrange lrfi throws Visitor Exception super visit Partition Rearrange lrfi lrfi set Parent Plan parent Override public void visit Partial Agg Partial Agg po Partial Agg throws Visitor Exception po Partial Agg set Parent Plan parent Override public void visit Optimized Optimized optimized throws Visitor Exception optimized set Parent Plan parent Override public void visit Pre Combiner Local Rearrange Pre Combiner Local Rearrange pre Combiner Local Rearrange throws Visitor Exception super visit Pre Combiner Local Rearrange pre Combiner Local Rearrange pre Combiner Local Rearrange set Parent Plan parent Override public void visit Merge Co Group Merge Cogroup merge Co Grp throws Visitor Exception merge Co Grp set Parent Plan parent Override public void visit Reservoir Sample Reservoir Sample reservoir Sample throws Visitor Exception reservoir Sample set Parent Plan parent Override public void visit Poisson Sample Poisson Sample poisson Sample throws Visitor Exception poisson Sample set Parent Plan parent
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer plans import java util List import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Add import org apache backend hadoop executionengine physical Layer expression Operators Constant Expression import org apache backend hadoop executionengine physical Layer expression Operators Divide import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Greater Expr import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Less Expr import org apache backend hadoop executionengine physical Layer expression Operators Mod import org apache backend hadoop executionengine physical Layer expression Operators Multiply import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators Bin Cond import org apache backend hadoop executionengine physical Layer expression Operators Cast import org apache backend hadoop executionengine physical Layer expression Operators Null import org apache backend hadoop executionengine physical Layer expression Operators Map Look import org apache backend hadoop executionengine physical Layer expression Operators Negative import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators Project import org apache backend hadoop executionengine physical Layer expression Operators Regexp import org apache backend hadoop executionengine physical Layer expression Operators User Comparison Func import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer expression Operators Subtract import org apache backend hadoop executionengine physical Layer relational Operators Collected Group import org apache backend hadoop executionengine physical Layer relational Operators Counter import org apache backend hadoop executionengine physical Layer relational Operators Cross import org apache backend hadoop executionengine physical Layer relational Operators Demux import org apache backend hadoop executionengine physical Layer relational Operators Distinct import org apache backend hadoop executionengine physical Layer relational Operators Join import org apache backend hadoop executionengine physical Layer relational Operators Filter import org apache backend hadoop executionengine physical Layer relational Operators import org apache backend hadoop executionengine physical Layer relational Operators Global Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Limit import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Merge Cogroup import org apache backend hadoop executionengine physical Layer relational Operators Merge Join import org apache backend hadoop executionengine physical Layer relational Operators Native import org apache backend hadoop executionengine physical Layer relational Operators Optimized import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Partial Agg import org apache backend hadoop executionengine physical Layer relational Operators Partition Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Poisson Sample import org apache backend hadoop executionengine physical Layer relational Operators Pre Combiner Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Rank import org apache backend hadoop executionengine physical Layer relational Operators Reservoir Sample import org apache backend hadoop executionengine physical Layer relational Operators Skewed Join import org apache backend hadoop executionengine physical Layer relational Operators Sort import org apache backend hadoop executionengine physical Layer relational Operators Split import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer relational Operators Stream import org apache backend hadoop executionengine physical Layer relational Operators Union import org apache backend hadoop executionengine physical Layer relational Operators Broadcast Spark import org apache impl plan Plan Visitor import org apache impl plan Plan Walker import org apache impl plan Visitor Exception visitor class Physical Plan use create visitor plan visited Call visit method traverse plan depth first fashion class also visits nested plans inside operators One extend class modify nature visit maintain relevant state information visits two different operators public class Phy Plan Visitor extends Plan Visitor Physical Operator Physical Plan public Phy Plan Visitor Physical Plan plan Plan Walker Physical Operator Physical Plan walker super plan walker public void visit Physical Operator op nothing public void visit Load Load ld throws Visitor Exception nothing public void visit Store Store st throws Visitor Exception nothing public void visit Native Native nat throws Visitor Exception nothing public void visit Filter Filter fl throws Visitor Exception push Walker Current Walker spawn Child Walker fl get Plan visit pop Walker public void visit Collected Group Collected Group mg throws Visitor Exception List Physical Plan inp Plans mg get Plans Physical Plan plan inp Plans push Walker Current Walker spawn Child Walker plan visit pop Walker public void visit Local Rearrange Local Rearrange lr throws Visitor Exception List Physical Plan inp Plans lr get Plans Physical Plan plan inp Plans push Walker Current Walker spawn Child Walker plan visit pop Walker public void visit Global Rearrange Global Rearrange gr throws Visitor Exception nothing public void visit Package Package pkg throws Visitor Exception nothing public void visit nfe throws Visitor Exception List Physical Plan inp Plans nfe get Input Plans Physical Plan plan inp Plans push Walker Current Walker spawn Child Walker plan visit pop Walker public void visit Union Union un throws Visitor Exception nothing public void visit Split Split spl throws Visitor Exception List Physical Plan plans spl get Plans Physical Plan plan plans push Walker Current Walker spawn Child Walker plan visit pop Walker public void visit Demux Demux demux throws Visitor Exception List Physical Plan plans demux get Plans Physical Plan plan plans push Walker Current Walker spawn Child Walker plan visit pop Walker public void visit Counter Counter po Counter throws Visitor Exception nothing public void visit Rank Rank rank throws Visitor Exception nothing public void visit Distinct Distinct distinct throws Visitor Exception nothing public void visit Sort Sort sort throws Visitor Exception List Physical Plan inp Plans sort get Sort Plans Physical Plan plan inp Plans push Walker Current Walker spawn Child Walker plan visit pop Walker public void visit Constant Constant Expression cnst throws Visitor Exception nothing public void visit Project Project proj throws Visitor Exception nothing public void visit Greater Greater Expr grt throws Visitor Exception nothing public void visit Less Less Expr lt throws Visitor Exception nothing public void visit Equal Equal Expr gte throws Visitor Exception nothing public void visit Equal Equal Expr lte throws Visitor Exception nothing public void visit Equal Equal Expr eq throws Visitor Exception nothing public void visit Equal Equal Expr eq throws Visitor Exception nothing public void visit Regexp Regexp throws Visitor Exception nothing public void visit Null Null Null throws Visitor Exception public void visit Add Add add throws Visitor Exception nothing public void visit Subtract Subtract sub throws Visitor Exception nothing public void visit Multiply Multiply mul throws Visitor Exception nothing public void visit Divide Divide dv throws Visitor Exception nothing public void visit Mod Mod mod throws Visitor Exception nothing public void visit throws Visitor Exception nothing public void visit throws Visitor Exception nothing public void visit throws Visitor Exception nothing public void visit Bin Cond Bin Cond bin Cond nothing public void visit Negative Negative negative nothing public void visit User Func User Func user Func throws Visitor Exception nothing public void visit Comparison Func User Comparison Func comp Func throws Visitor Exception nothing public void visit Map Look Map Look map Look Auto generated method stub public void visit Cast Cast cast Auto generated method stub public void visit Limit Limit lim throws Visitor Exception Physical Plan inp Plan lim get Limit Plan inp Plan null push Walker Current Walker spawn Child Walker inp Plan visit pop Walker public void visit Cross Cross cross throws Visitor Exception nothing public void visit Join Join join throws Visitor Exception nothing public void visit Merge Join Merge Join join throws Visitor Exception nothing public void visit Merge Co Group Merge Cogroup merge Co Grp throws Visitor Exception param stream throws Visitor Exception public void visit Stream Stream stream throws Visitor Exception Auto generated method stub public void visit Skewed Join Skewed Join sk throws Visitor Exception public void visit Partition Rearrange Partition Rearrange pr throws Visitor Exception List Physical Plan inp Plans pr get Plans Physical Plan plan inp Plans push Walker Current Walker spawn Child Walker plan visit pop Walker param optimized public void visit Optimized Optimized optimized throws Visitor Exception Auto generated method stub param pre Combiner Local Rearrange public void visit Pre Combiner Local Rearrange Pre Combiner Local Rearrange pre Combiner Local Rearrange throws Visitor Exception List Physical Plan inp Plans pre Combiner Local Rearrange get Plans Physical Plan plan inp Plans push Walker Current Walker spawn Child Walker plan visit pop Walker public void visit Partial Agg Partial Agg po Partial Agg throws Visitor Exception public void visit Reservoir Sample Reservoir Sample reservoir Sample throws Visitor Exception public void visit Poisson Sample Poisson Sample poisson Sample throws Visitor Exception public void visit Broadcast Spark Broadcast Spark po Broadcast Spark
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer plans import java io Byte Array Output Stream import java io Exception import java io Output Stream import java io Print Stream import java util Array List import java util Collection import java util Collections import java util Comparator import java util Hash Map import java util List import java util Map import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Binary Expression Operator import org apache backend hadoop executionengine physical Layer expression Operators Comparison Operator import org apache backend hadoop executionengine physical Layer expression Operators Expression Operator import org apache backend hadoop executionengine physical Layer expression Operators Bin Cond import org apache backend hadoop executionengine physical Layer expression Operators Unary Expression Operator import org apache data Tuple import org apache impl plan Operator Plan import org apache impl plan Plan Exception import org apache impl plan Visitor Exception import org apache impl util Multi Map import com google common collect Hash Bi Map base class types physical plans extends Operator Plan public class Physical Plan extends Operator Plan Physical Operator implements Cloneable private static final long serial Version marker indicate whether input plan sent currently used Stream know map calls reduce calls finished input expected Partial Agg public boolean end Input false private Multi Map Physical Operator Physical Operator opmap null public Physical Plan super public void attach Input Tuple List Physical Operator roots get Roots Physical Operator operator roots operator attach Input public void detach Input Physical Operator op get Roots op detach Input Write visual representation Physical Plan given output stream param Output Stream visual representation written public void explain Output Stream explain true Write visual representation Physical Plan given output stream param Output Stream visual representation written param verbose Amount information print public void explain Output Stream boolean verbose Plan Printer Physical Operator Physical Plan mpp new Plan Printer Physical Operator Physical Plan mpp set Verbose verbose try mpp print catch Visitor Exception e Auto generated catch block e print Stack Trace catch Exception e Auto generated catch block e print Stack Trace Write visual representation Physical Plan given printstream param ps Print Stream visual representation written param format Format print param verbose Amount information print public void explain Print Stream ps String format boolean verbose format equals xml ps println physical Plan Supported physical Plan return ps println ps println Physical Plan ps println format equals text explain Output Stream ps verbose ps println else format equals dot Dot Printer pp new Dot Printer ps pp set Verbose verbose pp dump ps println Override public void connect Physical Operator Physical Operator throws Plan Exception super connect set Inputs get Predecessors Override public void remove Physical Operator op op set Inputs null List Physical Operator sucs get Successors op sucs null sucs size Physical Operator suc sucs successor could multiple inputs example Union remove op list inputs removal inputs set successor inputs null List Physical Operator succ Inputs suc get Inputs succ Inputs remove op succ Inputs size suc set Inputs null else suc set Inputs succ Inputs super remove op non Javadoc see org apache impl plan Operator Plan replace org apache impl plan Operator org apache impl plan Operator Override public void replace Physical Operator old Node Physical Operator new Node throws Plan Exception List Physical Operator old Node Successors get Successors old Node super replace old Node new Node old Node Successors null Physical Operator preds old Node Successors List Physical Operator inputs preds get Inputs replace old Node new Node input list old Node successors int inputs size inputs get old Node inputs set new Node non Javadoc see org apache impl plan Operator Plan add org apache impl plan Operator Override public void add Physical Operator op attach plan plan operator part op set Parent Plan super add op public boolean Empty return Ops size Override public String String Empty return Empty Plan else Byte Array Output Stream baos new Byte Array Output Stream explain baos true return baos String Override public Physical Plan clone throws Clone Supported Exception Physical Plan clone new Physical Plan Get nodes plan clone make clones create map clone original walk connections plan create equivalent connections clone Map Physical Operator Physical Operator matches new Hash Map Physical Operator Physical Operator Ops size Sorting explain output scope ids jdk jdk List Physical Operator ops Clone new Array List Physical Operator Ops key Set Collections sort ops Clone Physical Operator op ops Clone Physical Operator c op clone clone add c opmap null opmap put op c matches put op c Build edges Physical Operator op Edges key Set Physical Operator clone matches get op clone null String msg Unable find clone op op name throw new Clone Supported Exception msg Collection Physical Operator Ops Edges get op Physical Operator Op Ops Physical Operator clone matches get Op clone null String msg Unable find clone op Op name throw new Clone Supported Exception msg try clone connect clone clone catch Plan Exception pe Clone Supported Exception cnse new Clone Supported Exception cnse init Cause pe throw cnse Fix inputs operators Physical Operator op Ops key Set List Physical Operator inputs op get Inputs inputs null inputs size continue List Physical Operator new Inputs new Array List Physical Operator inputs size Physical Operator clone Op matches get op clone Op null String msg Unable find clone op op name throw new Clone Supported Exception msg Physical Operator Op inputs Physical Operator clone Op matches get Op clone Op null String msg Unable find clone op Op name throw new Clone Supported Exception msg new Inputs add clone Op clone Op set Inputs new Inputs Physical Operator op Ops key Set op instanceof Comparison Operator Comparison Operator orig Comparison Operator op Comparison Operator clone Op Comparison Operator matches get op clone Op set Operand Type orig get Operand Type op instanceof Unary Expression Operator Unary Expression Operator orig Unary Expression Operator op Unary Expression Operator clone Op Unary Expression Operator matches get op clone Op set Expr Expression Operator matches get orig get Expr else op instanceof Binary Expression Operator Binary Expression Operator orig Binary Expression Operator op Binary Expression Operator clone Op Binary Expression Operator matches get op clone Op set Rhs Expression Operator matches get orig get Rhs clone Op set Lhs Expression Operator matches get orig get Lhs else op instanceof Bin Cond Bin Cond orig Bin Cond op Bin Cond clone Op Bin Cond matches get op clone Op set Rhs Expression Operator matches get orig get Rhs clone Op set Lhs Expression Operator matches get orig get Lhs clone Op set Cond Expression Operator matches get orig get Cond Fix order edges Edges lists Map Physical Operator Physical Operator inverted Matches Hash Bi Map create matches inverse Physical Operator new Op clone Edges key Set List Physical Operator new List clone Edges get new Op new List size List Physical Operator original List Edges get inverted Matches get new Op Collections sort new List new Edge Order Helper original List inverted Matches return clone public void set Op Map Multi Map Physical Operator Physical Operator opmap opmap opmap public void reset Op Map opmap null private static class Edge Order Helper implements Comparator Physical Operator private final Map Physical Operator Physical Operator inverted Matches private final List Physical Operator original List public Edge Order Helper List Physical Operator original List Map Physical Operator Physical Operator inverted Matches original List original List inverted Matches inverted Matches Override public int compare Physical Operator Physical Operator return original List index inverted Matches get original List index inverted Matches get
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Byte Array Output Stream import java io Exception import java util Array List import java util Properties import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop io Writable import org apache hadoop mapreduce Reducer import org apache log j Property Configurator import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop Data Type import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Join Packager import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine tez plan operator Bloom Packager import org apache backend hadoop executionengine util Map Red Util import org apache data Tuple import org apache impl Context import org apache impl Impl Constants import org apache impl io Nullable Tuple import org apache impl io Nullable Writable import org apache impl util Object Serializer import org apache impl util Context import org apache tools pigstats Status Reporter public class Combiner public static class Combine extends Reducer Nullable Writable Nullable Tuple Nullable Writable Writable private static final Log log Log Factory get Log Combine class Combiners called multiple times map reduce private static boolean first Time true private byte key Type reduce plan private Physical Plan cp Package operator root every Map Reduce plan obtained job conf portion remaining removal reduce plan private Package pack Progressable Reporter Reporter Physical Operator roots Physical Operator leaf private volatile boolean initialized false Static Data Cleanup public static void static Data Cleanup first Time true Configures Reduce plan Package operator reporter thread Suppress Warnings unchecked Override protected void setup Context context throws Exception Interrupted Exception super setup context Configuration j Conf context get Configuration try Context set Package Import List Array List String Object Serializer deserialize j Conf get udf import list Properties log j Properties Properties Object Serializer deserialize j Conf get Impl Constants log j Properties null Property Configurator configure log j Properties Context get Context reset Map Red Util setup Context context get Configuration cp Physical Plan Object Serializer deserialize j Conf get combine Plan pack Package Object Serializer deserialize j Conf get combine package removed cp Empty log debug Combine Plan empty else Byte Array Output Stream baos new Byte Array Output Stream cp explain baos log debug baos String key Type byte Object Serializer deserialize j Conf get map keytype till Reporter new Progressable Reporter cp Empty roots cp get Roots Array new Physical Operator leaf cp get Leaves get catch Exception ioe String msg Problem configuring combiner reduce plan throw new Runtime Exception msg ioe Avoid log spamming first Time log info Aliases processed per job phase Alias Name line offset j Conf get alias location first Time false reduce function packages key List lt Tuple gt key Bag lt Tuple gt converting Hadoop type key type package result either collected reduce plan empty passing reduce plan Override protected void reduce Nullable Writable key Iterable Nullable Tuple tup Iter Context context throws Exception Interrupted Exception initialized initialized true Reporter set Rep context Physical Operator set Reporter Reporter boolean aggregate Warning true equals Ignore Case context get Configuration get aggregate warning Status Reporter Status Reporter Status Reporter get Instance Status Reporter set Context new Task Context context Hadoop Logger Hadoop Logger Hadoop Logger get Instance Hadoop Logger set Reporter Status Reporter Hadoop Logger set Aggregate aggregate Warning Physical Operator set Logger Hadoop Logger case optimize combine Package Foreach could get many tuples getnext call Join Package case process till see Join Pacakage get Next pack get Pkgr instanceof Join Packager pack get Pkgr instanceof Bloom Packager pack attach Input key tup Iter iterator true process One Package Output context break else optimized package give one tuple key pack attach Input key tup Iter iterator process One Package Output context return false output true end processing public boolean process One Package Output Context oc throws Exception Interrupted Exception try Result res pack get Next Tuple res return Status Status Tuple pack Res Tuple res result cp Empty oc write null pack Res return false int roots length roots attach Input pack Res true Result red Res leaf get Next Tuple red Res return Status Status Tuple tuple Tuple red Res result Byte index Byte tuple get Nullable Writable Key Data Type get Writable Comparable Types tuple get key Type Nullable Tuple val new Nullable Tuple Tuple tuple get key value need index key needs sorted index addition key value value needs Package properly assign tuple slot projection Key set Index index val set Index index oc write Key val continue red Res return Status Status break red Res return Status Status continue red Res return Status Status int err Code String msg Received Error processing combine plan red Res result null msg red Res result throw new Exec Exception msg err Code Exception res return Status Status return false res return Status Status int err Code String msg Packaging error processing group throw new Exec Exception msg err Code Exception res return Status Status return true return false catch Exec Exception e throw e called intermediate keys values processed cleanup references Physical Plan Override protected void cleanup Context context throws Exception Interrupted Exception super cleanup context leaf null pack null Reporter null Avoid Tez Physical Operator set Reporter null roots null cp null return key Type public byte get Key Type return key Type param key Type key Type set public void set Key Type byte key Type key Type key Type
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache validator import java io Exception import org apache classification Interface Audience import org apache classification Interface Stability import org apache impl logical Layer Frontend Exception Interface defining commands link Command Filter validate Command method operate Interface Audience Private Interface Stability Evolving public interface Command Filter public enum Command Validates command defined link Command param command throws Exception public void validate Command command throws Frontend Exception
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl import com google common base Splitter import com google common collect Lists import java io Buffered Reader import java io Buffered Writer import java io File import java io File Found Exception import java io File Reader import java io File Writer import java io Exception import java io Input Stream import java io Input Stream Reader import java io Object Input Stream import java io Object Output Stream import java io Serializable import java io String Writer import java lang reflect Constructor import java net Malformed Exception import java net import java net import java net Class Loader import java util Array List import java util Arrays import java util Hash Map import java util Linked Hash Map import java util Linked List import java util List import java util Map import java util Properties import java util String Tokenizer import java util Vector import org antlr runtime tree Tree import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache log j Level import org apache Exec Type import org apache Exec Type Provider import org apache Func Spec import org apache Exception import org apache backend datastorage Data Storage import org apache backend datastorage Data Storage Exception import org apache backend datastorage Element Descriptor import org apache backend executionengine Exec Exception import org apache backend executionengine Execution Engine import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop datastorage Data Storage import org apache backend hadoop executionengine map Reduce Layer Configuration import org apache impl streaming Executable Manager import org apache impl streaming Streaming Command import org apache tools parameters Parameter Substitution Preprocessor import org apache tools parameters Parse Exception import org apache tools parameters Preprocessor Context public class Context implements Serializable private static final long serial Version private static final Log log Log Factory get Log Context class private static Object instantiation Lock new Object public static final String job Name public static final String Latin public static final String job Priority public static final String cmd args remainders serialize stuff make smaller given needed Hadoop side also serializable e g Configuration one local mapreduce custom exec type different execution engine private Exec Type exec Type main file system jobs shell commands access transient private Data Storage dfs local file system jar files etc reside transient private Data Storage lfs handle back end transient private Execution Engine execution Engine private Properties properties Resources job jars scripting udf files cached macro abstract syntax trees Jar files global whole script includes registered jars Jars defined Dpig additional jars transient public List extra Jars new Linked List original paths extra jar came used avoid redundant imports transient private Map String extra Jar Original Paths new Hash Map String jars needed scripting udfs jython jar etc transient public List String script Jars new Array List String jars predeployed cluster thus merged even subsets transient public Vector String predeployed Jars new Vector String script files needed run job Deprecated public List String script Files new Array List String private Map String File aliased Script Files new Linked Hash Map String File record scripting udf file path namespace registered used avoid redundant imports transient public Map String String scripting Fs cache macro file path abstract syntax tree used avoid parsing macros transient public Map String Tree macros table mapping function names function specs private Map String Func Spec defined Functions new Hash Map String Func Spec table mapping names streaming commands private Map String Streaming Command defined Commands new Hash Map String Streaming Command private static Thread Local Array List String package Import List new Thread Local Array List String private static Thread Local Map String Class class Cache new Thread Local Map String Class private Properties log j Properties new Properties private Level default Log Level Level public int default Parallel Says whether processing explain right Explain might skip check logical plan validation file existence checks etc public boolean Explain false processing dump schema right public boolean Dump Schema false whether processing right public boolean Illustrator false private String last alias null List paths skipped automatic shipping List String skipped Ship Paths new Array List String Static Data Cleanup public static void static Data Cleanup package Import List set null extends Class Loader allow adding classpath new jars registered private static class Context Class Loader extends Class Loader public Context Class Loader Class Loader class Loader new class Loader public Context Class Loader urls Class Loader class Loader super urls class Loader Override public void add url super add url static private Context Class Loader classloader new Context Class Loader Context class get Class Loader Parameter related fields params list strings key value command line param Files list paths parameter files preprocessor Context manages parsing params param Files actual map private List String params private List String param Files transient private Preprocessor Context preprocessor Context new Preprocessor Context public List String get Params return params public void set Params List String params params params public List String get Param Files return param Files public void set Param Files List String param Files param Files param Files public Preprocessor Context get Preprocessor Context return preprocessor Context public Map String String get Param Val throws Exception Map String String param Val preprocessor Context get Param Val param Val null try preprocessor Context load Param Val params param Files catch Parse Exception e throw new Exception e get Message return preprocessor Context get Param Val else return param Val public Context Exec Type new Properties public Context Configuration conf throws Exception Configuration Util Properties conf public Context Properties properties throws Exception Exec Type Provider select Exec Type properties properties public Context Exec Type exec Type Configuration conf exec Type Configuration Util Properties conf public Context Exec Type exec Type Properties properties exec Type exec Type properties properties properties set Property exectype exec Type name execution Engine exec Type get Execution Engine Add default paths skipped auto shipping commands skipped Ship Paths add bin skipped Ship Paths add usr bin skipped Ship Paths add usr local bin skipped Ship Paths add sbin skipped Ship Paths add usr sbin skipped Ship Paths add usr local sbin macros new Hash Map String Tree scripting Fs new Hash Map String String init method created aim unifying Grunt Server approaches common initializations go private void init properties get udf import list null Context initialize Import List String properties get udf import list public static void initialize Import List String import List Command Line Properties String Tokenizer tokenizer new String Tokenizer import List Command Line Properties int pos Leave first import Array List String import List get Package Import List tokenizer Tokens String import Item tokenizer next Token import Item ends import Item import List add pos import Item pos public void connect throws Exec Exception execution Engine init dfs execution Engine get Data Storage lfs new Data Storage create file properties public void set Jobtracker Location String new Location execution Engine set Property Configuration new Location calls add Script File path new File path ensuring given path added jar param path public void add Script File String path add Script File path path method adds script files must added shipped jar named differently local fs path param name name jar param path path local fs public void add Script File String name String path path null aliased Script Files put name replace First replace new File path public void add Script Jar String path path null script Jars contains path script Jars add path public void add Jar String path throws Malformed Exception path null resource new File path add Jar resource path public void add Jar resource String original Path throws Malformed Exception resource null extra Jars contains resource extra Jars add resource extra Jar Original Paths put resource original Path classloader add resource Thread current Thread set Context Class Loader Context classloader public boolean Jar String path url extra Jars extra Jar Original Paths get url equals path return true return false Adds specified path predeployed jars list jars never included generated job jar p called jars pre installed Hadoop cluster reduce size job jar public void mark Jar Predeployed String path path null predeployed Jars contains path predeployed Jars add path public String Param Substitution Input Stream List String params List String param Files throws Exception return Param Substitution new Buffered Reader new Input Stream Reader params param Files public String Param Substitution Buffered Reader reader List String params List String param Files throws Exception params params param Files param Files return Param Substitution reader public String Param Substitution Buffered Reader reader throws Exception try preprocessor Context set Context preprocessor Context load Param Val params param Files Parameter Substitution Preprocessor psp new Parameter Substitution Preprocessor preprocessor Context String Writer writer new String Writer psp gen Substituted File reader writer return writer String catch Parse Exception e log error e get Localized Message throw new Exception e public Buffered Reader Param Substitution Output File Buffered Reader reader String output File Path List String params List String param Files throws Exception params params param Files param Files return Param Substitution Output File reader output File Path public Buffered Reader Param Substitution Output File Buffered Reader reader String output File Path throws Exception try preprocessor Context load Param Val params param Files Parameter Substitution Preprocessor psp new Parameter Substitution Preprocessor preprocessor Context Buffered Writer writer new Buffered Writer new File Writer output File Path psp gen Substituted File reader writer return new Buffered Reader new File Reader output File Path catch Parse Exception e log error e get Localized Message throw new Exception e catch File Found Exception e throw new Exception Could find file substitute parameters output File Path script files name file pairs added job jar return name file pairs public Map String File get Script Files return aliased Script Files public void rename String old Name String new Name throws Exception old Name equals new Name return System println Renaming old Name new Name Element Descriptor dst null Element Descriptor src null try dst dfs Element new Name src dfs Element old Name catch Data Storage Exception e byte err Src get Error Source int err Code switch err Src case Exception err Code break case Exception err Code break default err Code break String msg Unable rename old Name new Name throw new Exec Exception msg err Code err Src e dst exists dst delete src rename dst public void copy String src String dst boolean local Dst throws Exception Data Storage dst Storage dfs local Dst dst Storage lfs Element Descriptor src Element null Element Descriptor dst Element null try src Element dfs Element src dst Element dst Storage Element dst catch Data Storage Exception e byte err Src get Error Source int err Code switch err Src case Exception err Code break case Exception err Code break default err Code break String msg Unable copy src dst throw new Exec Exception msg err Code err Src e src Element copy dst Element properties false public Execution Engine get Execution Engine return execution Engine public Data Storage get Dfs return dfs public Data Storage get Lfs return lfs public Data Storage get Fs return dfs Provides configuration information return information configuration used connect execution engine public Properties get Properties return properties deprecated use link get Properties instead Deprecated public Properties get Conf return get Properties public String get Last Alias return last alias public void set Last Alias String value last alias value Defines alias given function spec useful functions require arguments constructor param function new function alias define param function Spec Func Spec object representing name function class arguments constructor public void register Function String function Func Spec function Spec function Spec null defined Functions remove function else defined Functions put function function Spec Defines alias given streaming command useful complicated streaming command specs param alias new command alias define param command command public void register Stream Cmd String alias Streaming Command command command null defined Commands remove alias else defined Commands put alias command Returns type execution currently effect return current execution type public Exec Type get Exec Type return exec Type Creates Classloader based passed jar File extra jar files param jar File jar file part newly created Classloader jar file plus jars extra Jars list constitute classpath return new Classloader throws Malformed Exception public Class Loader create Cl String jar File throws Malformed Exception int len extra Jars size int passed Jar jar File null urls new len passed Jar jar File null urls new file jar File int extra Jars size urls passed Jar extra Jars get return new Class Loader urls Map Reduce class get Class Loader return new Context Class Loader urls Context class get Class Loader private static Map String Class get Class Cache Map String Class c class Cache get c null c new Hash Map String Class class Cache set c return c Suppress Warnings rawtypes public static Class resolve Class Name String name throws Exception Map String Class cache get Class Cache Class c cache get name c null return c String prefix get Package Import List try c Class Name prefix name true Context classloader cache put name c return c catch Class Found Exception e nothing catch Unsupported Class Version Error e int err Code String msg Problem resolving class version numbers class name throw new Exec Exception msg err Code Exception e create Class Found Exception exception attach Exception n need buble interface changes throughout code int err Code String msg Could resolve name using imports package Import List get throw new Exec Exception msg err Code Exception common pattern initializing objects via system properties support passing something like command line code Dpig notification listener Class code code Dpig notification listener arg Constructor String Arg code method properly initialize class args exist param conf param class Param Key property used identify class param arg Param Key property used identify class args param clazz class expected return public static instantiate Object Params Configuration conf String class Param Key String arg Param Key Class clazz throws Exec Exception String class Name conf get class Param Key class Name null Func Spec fs conf get arg Param Key null fs new Func Spec class Name conf get arg Param Key else fs new Func Spec class Name try return clazz cast Context instantiate Func Spec fs catch Class Cast Exception e throw new Exec Exception class defined class Param Key conf type clazz get Name e else return null Suppress Warnings unchecked rawtypes public static Object instantiate Func Spec Func Spec func Spec Object ret String class Name func Spec get Class Name String args func Spec get Ctor Args Class obj Class null try obj Class resolve Class Name class Name catch Exception ioe throw new Runtime Exception instantiate class Name ioe Option Builder thread safe Base Storage elephantbird Sequence File Config etc use constructor leads Method Exception Unrecognized Option Exception etc processor inputs outputs initialized parallel Tez synchronized instantiation Lock try normal instantiation args null args length Class param Types new Class args length int param Types length param Types String class Constructor c obj Class get Constructor param Types ret c new Instance Object args else ret obj Class new Instance catch Method Exception nme Second chance Try var arg constructor try Constructor c obj Class get Constructor String class Object wrapped Args new Object wrapped Args args ret c new Instance wrapped Args catch Throwable e bad luck String Builder sb new String Builder sb append could instantiate sb append class Name sb append arguments sb append Arrays String args sb append throw new Runtime Exception sb String e catch Throwable e bad luck String Builder sb new String Builder sb append could instantiate sb append class Name sb append arguments sb append Arrays String args sb append throw new Runtime Exception sb String e return ret public static Object instantiate Func Spec String func Spec return instantiate Func Spec new Func Spec func Spec Suppress Warnings rawtypes public Class get Class Alias String alias throws Exception String class Name null Func Spec func Spec null defined Functions null func Spec defined Functions get alias func Spec null class Name func Spec get Class Name else class Name Func Spec get Class Name Spec alias return resolve Class Name class Name public Object instantiate Func Alias String alias throws Exception Func Spec func Spec defined Functions null func Spec defined Functions get alias null return instantiate Func Spec func Spec else return instantiate Func Spec alias Get link Streaming Command given alias param alias alias code Streaming Command code return code Streaming Command code alias public Streaming Command get Command Alias String alias return defined Commands get alias public void set Exec Type Exec Type exec Type exec Type exec Type Create new link Executable Manager depending Exec Type return new link Executable Manager depending Exec Type throws Exec Exception public Executable Manager create Executable Manager throws Exec Exception execution Engine null return execution Engine get Executable Manager return null public Func Spec get Func Spec Alias String alias Func Spec func Spec defined Functions null func Spec defined Functions get alias null return func Spec else return null Add path skipped automatically shipping binaries streaming param path path skipped public void add Path Skip String path skipped Ship Paths add path Get paths skipped automatically shipping binaries streaming return paths skipped automatically shipping binaries streaming public List String get Paths Skip return skipped Ship Paths Check execution mode return appropriate error source return error source public byte get Error Source return Exception public static Array List String get Package Import List package Import List get null Array List String importlist new Array List String importlist add importlist add java lang importlist add org apache builtin importlist add org apache impl builtin package Import List set importlist return package Import List get public static void set Package Import List Array List String list package Import List set list public void set Log j Properties Properties p log j Properties p public Properties get Log j Properties return log j Properties public Level get Default Log Level return default Log Level public void set Default Log Level Level l default Log Level l public int get Default Parallel return default Parallel public static Class Loader get Class Loader return classloader public static void set Class Loader Class Loader cl cl instanceof Context Class Loader classloader Context Class Loader cl else classloader new Context Class Loader cl
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Byte Array Output Stream import java io Exception import java util Array List import java util List import java util Properties import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop io Text import org apache hadoop io Writable import org apache hadoop mapreduce Input Split import org apache hadoop mapreduce Mapper import org apache log j Property Configurator import org apache Constants import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer util Plan Helper import org apache backend hadoop executionengine util Map Red Util import org apache data Data Bag import org apache data Schema Tuple Backend import org apache data Tuple import org apache data Tuple Factory import org apache impl Context import org apache impl Impl Constants import org apache impl io Nullable Writable import org apache impl plan Dependency Order Walker import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache impl util Object Serializer import org apache impl util Pair import org apache impl util Spillable Memory Manager import org apache impl util Utils import org apache tools pigstats Status Reporter class base class Map Base slightly difference among different versions hadoop Map Base implementation located shims public abstract class Generic Map Base extends Mapper Text Tuple Nullable Writable Writable private final Log log Log Factory get Log get Class protected byte key Type Map Plan protected Physical Plan mp null Store operators protected List Store stores protected Tuple Factory tf Tuple Factory get Instance boolean Illustrator false Context output Collector Reporter used operators transmit heartbeat Progressable Reporter Reporter protected boolean error Map false Physical Operator roots private Physical Operator leaf private volatile boolean initialized false local map reduce simulation param plan map plan public void set Map Plan Physical Plan plan mp plan called tuples input done reporter thread closed Override public void cleanup Context context throws Exception Interrupted Exception super cleanup context error Map error map returning return Map Reduce Job Conf Internal get get Job Control Compiler false equals true mp Empty stream pipeline map job belongs merge join could potentially process lets set flag stating map input sent already lets run pipeline one time result nothing happening case stream merge join pipeline mp end Input true run Pipeline leaf Illustrator Store store stores initialized Map Reduce Store Impl impl new Map Reduce Store Impl context store set Store Impl impl store set store tear Calling Eval Func finish Finish Visitor finisher new Finish Visitor mp new Dependency Order Walker Physical Operator Physical Plan mp try finisher visit catch Visitor Exception e int err Code String msg Error calling finish method Fs throw new Visitor Exception msg err Code Exception e mp null Physical Operator set Reporter null initialized false Configures mapper map plan reproter thread Suppress Warnings unchecked Override public void setup Context context throws Exception Interrupted Exception super setup context Configuration job context get Configuration Spillable Memory Manager get Instance configure job context get Configuration set Constants Integer String context get Task Attempt get Task get Id Map Reduce Job Context context Map Reduce Job Conf Internal set context get Configuration Map Reduce Job Conf context get Configuration Illustrator Illustrator context Context set Package Import List Array List String Object Serializer deserialize job get udf import list attempts fetch generated code distributed cache resolve Schema Tuple Backend initialize job Properties log j Properties Properties Object Serializer deserialize job get Impl Constants log j Properties null Property Configurator configure log j Properties mp null mp Physical Plan Object Serializer deserialize job get map Plan stores Plan Helper get Physical Operators mp Store class removed mp Empty log debug Map Plan empty else Byte Array Output Stream baos new Byte Array Output Stream mp explain baos log debug baos String key Type byte Object Serializer deserialize job get map keytype till Reporter new Progressable Reporter Get specific context Map Red Util setup Context job mp Empty Split split Split context get Input Split List Operator Key target Op Keys split get Target Ops Array List Physical Operator target Ops List new Array List Physical Operator Operator Key target Key target Op Keys target Ops List add mp get Operator target Key roots target Ops List Array new Physical Operator leaf mp get Leaves get Status Reporter Status Reporter Status Reporter get Instance Status Reporter set Context new Task Context context log info Aliases processed per job phase Alias Name line offset job get alias location Utils set Default Time Zone Map Reduce Job Conf Internal get map function attaches inp Tuple appropriately executes map plan empty Collects result execution oc input directly oc map plan empty collection left abstract map map reduce job implement Map collects tuple whereas map reduce collects extracting key indexed tuple Override protected void map Text key Tuple inp Tuple Context context throws Exception Interrupted Exception initialized initialized true cache collector use run Pipeline called close output Collector context Reporter set Rep context Physical Operator set Reporter Reporter boolean aggregate Warning true equals Ignore Case context get Configuration get aggregate warning Status Reporter Status Reporter Status Reporter get Instance Status Reporter set Context new Task Context context Hadoop Logger Hadoop Logger Hadoop Logger get Instance Hadoop Logger set Reporter Status Reporter Hadoop Logger set Aggregate aggregate Warning Physical Operator set Logger Hadoop Logger Illustrator Store store stores Map Reduce Store Impl impl new Map Reduce Store Impl context store set Store Impl impl store set mp Empty collect context inp Tuple return Physical Operator root roots Illustrator root null root attach Input inp Tuple else root attach Input tf new Tuple Copy inp Tuple get run Pipeline leaf protected void run Pipeline Physical Operator leaf throws Exception Interrupted Exception true Result res leaf get Next Tuple res return Status Status collect output Collector Tuple res result continue res return Status Status return res return Status Status continue res return Status Status remember issue close right thing error Map true errmessage use String err Msg res result null err Msg Received Error processing map plan res result else err Msg Received Error processing map plan int err Code Exec Exception ee new Exec Exception err Msg err Code Exception throw ee abstract public void collect Context oc Tuple tuple throws Interrupted Exception Exception abstract public boolean Illustrator Context context return key Type public byte get Key Type return key Type param key Type key Type set public void set Key Type byte key Type key Type key Type abstract public Context get Illustrator Context Configuration conf Data Bag input List Pair Nullable Writable Writable output Input Split split throws Exception Interrupted Exception
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Byte Array Output Stream import java io Exception import java util Array List import java util Iterator import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop io Writable import org apache hadoop mapred jobcontrol Job import org apache hadoop mapreduce Job Context import org apache hadoop mapreduce Reducer import org apache Constants import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop Data Type import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Join Packager import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer util Plan Helper import org apache backend hadoop executionengine util Map Red Util import org apache data Data Bag import org apache data Data Type import org apache data Schema Tuple Backend import org apache data Tuple import org apache impl Context import org apache impl io Nullable Partition Writable import org apache impl io Nullable Tuple import org apache impl io Nullable Writable import org apache impl plan Dependency Order Walker import org apache impl plan Visitor Exception import org apache impl util Object Serializer import org apache impl util Pair import org apache impl util Spillable Memory Manager import org apache impl util Context import org apache impl util Utils import org apache tools pigstats Status Reporter class static Mapper amp Reducer classes used execute Map Reduce jobs Since reduce phase leaf bound Local Rearrange map phase separate key tuple collect output collector shuffle sort phase sorts keys amp tuples creates key List lt Tuple gt passes key iterator list deserialized Package operator used package key List lt Tuple gt Key Bag lt Tuple gt Key appropriate type result package attached reduce plan executed empty Either result reduce plan package res collected output collector index tuple bag placed package packed key done hadoop sorts keys order index join class base class Map Reduce slightly difference among different versions hadoop Map Reduce implementation located shims public class Generic Map Reduce public static Job Context Job Context null deprecated Use link Context instead following way get job link Configuration pre Udf Context get Udf Context get Job Conf pre Deprecated public static Configuration Job Conf null public static Thread Local Configuration Job Conf Internal new Thread Local Configuration Static Data Cleanup public static void static Data Cleanup Job Context null Job Conf null Job Conf Internal new Thread Local Configuration public static class Map extends Map Base Override public void collect Context oc Tuple tuple throws Interrupted Exception Exception Byte index Byte tuple get Nullable Writable key Data Type get Writable Comparable Types tuple get key Type Nullable Tuple val new Nullable Tuple Tuple tuple get key value need index key needs sorted index addition key value value needs Package properly assign tuple slot projection key set Index index val set Index index oc write key val specialized map class used queries order udf used comparison order expects handed tuples Hence map class ensures key used order wrapped tuple n already tuple public static class Map Comparator extends Map Base Override public void collect Context oc Tuple tuple throws Interrupted Exception Exception Object key Tuple null key Type Data Type Object k tuple get key Tuple tf new Tuple k else key Tuple tuple get Byte index Byte tuple get Nullable Writable key Data Type get Writable Comparable Types key Tuple Data Type Nullable Tuple val new Nullable Tuple Tuple tuple get key value need index key needs sorted index addition key value value needs Package properly assign tuple slot projection key set Index index val set Index index oc write key val Used Skewed Join public static class Map Partition Index extends Map Override public void collect Context oc Tuple tuple throws Interrupted Exception Exception Byte tuple Key Idx Byte tuple Val Idx Byte index Byte tuple get Integer partition Index partitioning table partition index n present tuple size super collect oc tuple return tuple Key Idx tuple Val Idx else partition Index Integer tuple get Nullable Writable key Data Type get Writable Comparable Types tuple get tuple Key Idx key Type Nullable Partition Writable wrapped Key new Nullable Partition Writable key Nullable Tuple val new Nullable Tuple Tuple tuple get tuple Val Idx key value need index key needs sorted index addition key value value needs Package properly assign tuple slot projection wrapped Key set Index index set partition wrapped Key set Partition partition Index val set Index index oc write wrapped Key val Override protected void run Pipeline Physical Operator leaf throws Exception Interrupted Exception true Result res leaf get Next Tuple res return Status Status Partition Rearrange result bag operator used skewed join res result instanceof Data Bag Iterator Tuple Data Bag res result iterator Next collect output Collector next else collect output Collector Tuple res result continue res return Status Status return res return Status Status continue res return Status Status remember issue close right thing error Map true errmessage use String err Msg res result null err Msg Received Error processing map plan res result else err Msg Received Error processing map plan int err Code throw new Exec Exception err Msg err Code Exception abstract public static class Reduce extends Reducer Nullable Writable Nullable Tuple Nullable Writable Writable protected final Log log Log Factory get Log get Class reduce plan protected Physical Plan rp null Store operators protected List Store stores Package operator root every Map Reduce plan obtained job conf portion remaining removal reduce plan protected Package pack Progressable Reporter Reporter protected Context output Collector protected boolean error Reduce false Physical Operator roots private Physical Operator leaf protected volatile boolean initialized false private boolean Illustrator false Set reduce plan used local runner illustrator param plan Reduce plan public void set Reduce Plan Physical Plan plan rp plan Configures Reduce plan Package operator reporter thread Suppress Warnings unchecked Override protected void setup Context context throws Exception Interrupted Exception super setup context Illustrator Illustrator context Illustrator pack get Pack context Configuration j Conf context get Configuration Spillable Memory Manager get Instance configure j Conf context get Configuration set Constants Integer String context get Task Attempt get Task get Id Job Context context Job Conf Internal set context get Configuration Job Conf context get Configuration try Context set Package Import List Array List String Object Serializer deserialize j Conf get udf import list attempts fetch generated code distributed cache resolve Schema Tuple Backend initialize j Conf rp null rp Physical Plan Object Serializer deserialize j Conf get reduce Plan stores Plan Helper get Physical Operators rp Store class Illustrator pack Package Object Serializer deserialize j Conf get reduce package removed rp Empty log debug Reduce Plan empty else Byte Array Output Stream baos new Byte Array Output Stream rp explain baos log debug baos String Reporter new Progressable Reporter rp Empty roots rp get Roots Array new Physical Operator leaf rp get Leaves get Get specific context Map Red Util setup Context j Conf catch Exception ioe String msg Problem configuring reduce plan throw new Runtime Exception msg ioe log info Aliases processed per job phase Alias Name line offset j Conf get alias location Utils set Default Time Zone Map Reduce Job Conf Internal get reduce function packages key List lt Tuple gt key Bag lt Tuple gt converting Hadoop type key type package result either collected reduce plan empty passing reduce plan Override protected void reduce Nullable Writable key Iterable Nullable Tuple tup Iter Context context throws Exception Interrupted Exception initialized initialized true cache collector use run Pipeline could additionally called close output Collector context Reporter set Rep context Physical Operator set Reporter Reporter boolean aggregate Warning true equals Ignore Case context get Configuration get aggregate warning Status Reporter Status Reporter Status Reporter get Instance Status Reporter set Context new Task Context context Hadoop Logger Hadoop Logger Hadoop Logger get Instance Hadoop Logger set Reporter Status Reporter Hadoop Logger set Aggregate aggregate Warning Physical Operator set Logger Hadoop Logger Illustrator Store store stores Map Reduce Store Impl impl new Map Reduce Store Impl context store set Store Impl impl store set case optimize join combine Package Foreach could get many tuples getnext call Join Package case process till see Join Pacakage get Next pack get Pkgr instanceof Join Packager pack attach Input key tup Iter iterator true process One Package Output context break else join optimized package give one tuple key pack attach Input key tup Iter iterator process One Package Output context return false output true end processing public boolean process One Package Output Context oc throws Exception Interrupted Exception Result res pack get Next Tuple res return Status Status Tuple pack Res Tuple res result rp Empty oc write null pack Res return false int roots length roots attach Input pack Res run Pipeline leaf res return Status Status return false res return Status Status int err Code String msg Encountered error package operator processing group throw new Exec Exception msg err Code Exception res return Status Status return true return false param leaf throws Interrupted Exception throws Exception protected void run Pipeline Physical Operator leaf throws Interrupted Exception Exception true Result red Res leaf get Next Tuple red Res return Status Status try output Collector write null Tuple red Res result catch Exception e throw new Exception e continue red Res return Status Status return red Res return Status Status continue red Res return Status Status remember issue close right thing error Reduce true errmessage use String msg red Res result null msg Received Error processing reduce plan red Res result else msg Received Error processing reduce plan int err Code throw new Exec Exception msg err Code Exception called intermediate keys values processed right place stop reporter thread Override protected void cleanup Context context throws Exception Interrupted Exception super cleanup context error Reduce error reduce return return Map Reduce Job Conf Internal get get stream reduce false equals true rp Empty stream pipeline could potentially process lets set flag stating map input sent already lets run pipeline one time result nothing happening case stream pipeline rp end Input true run Pipeline leaf Illustrator Store store stores initialized Map Reduce Store Impl impl new Map Reduce Store Impl context store set Store Impl impl store set store tear Calling Eval Func finish Finish Visitor finisher new Finish Visitor rp new Dependency Order Walker Physical Operator Physical Plan rp try finisher visit catch Visitor Exception e throw new Exception Error trying finish Fs e Physical Operator set Reporter null initialized false Get reducer illustrator context param input Input buffer output maps param pkg package return reducer illustrator context throws Exception throws Interrupted Exception abstract public Context get Illustrator Context Job job List Pair Nullable Writable Writable input Package pkg throws Exception Interrupted Exception abstract public boolean Illustrator Context context abstract public Package get Pack Context context specialized reduce class used queries order udf used comparison order expects handed tuples Hence specialized map class Map Reduce Map Comparator ensures key used order wrapped tuple n already tuple reduce class unwraps tuple case map wrapped tuple handes unwrapped key Package processing public static class Reduce Comparator extends Map Reduce Reduce private byte key Type Configures Reduce plan Package operator reporter thread Override protected void setup Context context throws Exception Interrupted Exception super setup context key Type pack get Pkgr get Key Type reduce function packages key List lt Tuple gt key Bag lt Tuple gt converting Hadoop type key type package result either collected reduce plan empty passing reduce plan Override protected void reduce Nullable Writable key Iterable Nullable Tuple tup Iter Context context throws Exception Interrupted Exception initialized initialized true cache collector use run Pipeline could additionally called close output Collector context Reporter set Rep context Physical Operator set Reporter Reporter boolean aggregate Warning true equals Ignore Case context get Configuration get aggregate warning Status Reporter Status Reporter Status Reporter get Instance Status Reporter set Context new Task Context context Hadoop Logger Hadoop Logger Hadoop Logger get Instance Hadoop Logger set Reporter Status Reporter Hadoop Logger set Aggregate aggregate Warning Physical Operator set Logger Hadoop Logger Store store stores Map Reduce Store Impl impl new Map Reduce Store Impl context store set Store Impl impl store set key Type tuple Map Comparator collect would wrapped key tuple comparison used order process need unwrap key tuple hand Package processing key Type Data Type Tuple Tuple key get Value Type try key Data Type get Writable Comparable Types get key Type catch Exec Exception e throw e pack attach Input key tup Iter iterator Result res pack get Next Tuple res return Status Status Tuple pack Res Tuple res result rp Empty context write null pack Res return rp attach Input pack Res List Physical Operator leaves rp get Leaves Physical Operator leaf leaves get run Pipeline leaf res return Status Status return res return Status Status int err Code String msg Encountered error package operator processing group throw new Exec Exception msg err Code Exception
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl import org apache classification Interface Audience Private internal constants use Please see link org apache Constants looking public constants Interface Audience Private public class Impl Constants private Impl Constants throw new Illegal State Exception value internal properties key serializing set disabled optimizer rules public static final String optimizer rules Used indicate current job running local mode local tez local ie Exec Type Local true public static final String exectype mode local Used indicate current job converted run local mode public static final String job converted local Used indicate current job converted run fetch mode public static final String job converted fetch Indicate split index task Used merge cogroup public static final String split index Parallelism reducer public static final String info reducers default parallel public static final String info reducers requested parallel public static final String info reducers estimated parallel Parallelism used operation Cross public static final String cross parallelism context public static final String Context log j properties public static final String log j properties unique id session used caller Id underlining component public static final String script id Used carry zone list frontend backend generated frontend Job creation public static final String datetime zones list Kill jobs cleaning tmp files public static int public static int public static int
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Exception import java util Array List import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop io Text import org apache hadoop mapred Job Conf import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Input Split import org apache hadoop mapreduce Job import org apache hadoop mapreduce Job Context import org apache hadoop mapreduce Task Attempt Context import org apache Collectable Load Func import org apache Func Spec import org apache Indexable Load Func import org apache Load Func import org apache Ordered Load Func import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop executionengine shims Hadoop Shims import org apache backend hadoop executionengine util Map Red Util import org apache data Tuple import org apache impl Context import org apache impl io File Spec import org apache impl plan Operator Key import org apache impl util Object Serializer import org apache impl util Context import org apache impl util Utils public class Input Format extends Input Format Text Tuple public static final Log log Log Factory get Log Input Format class public static final String inputs public static final String inp Targets public static final String inp Signatures public static final String inp Limits non Javadoc see org apache hadoop mapreduce Input Format create Record Reader org apache hadoop mapreduce Input Split org apache hadoop mapreduce Task Attempt Context Suppress Warnings rawtypes unchecked Override public org apache hadoop mapreduce Record Reader Text Tuple create Record Reader org apache hadoop mapreduce Input Split split Task Attempt Context context throws Exception Interrupted Exception Record Reader Factory factory new Record Reader Factory split context return factory create Record Reader Helper class create record reader protected static class Record Reader Factory protected Input Format input Format protected Split Split protected Load Func load Func protected Task Attempt Context context protected long limit public Record Reader Factory org apache hadoop mapreduce Input Split split Task Attempt Context context throws Exception need create Task Attempt Context based Configuration used get Splits produce split supplied let find input script produced split supplied get corresponding Configuration setup Task Attempt Context based call real Input Format create Record Reader method Split Split Split split hadoop new integration get around hadoop bug passing total splits split retrieved set configuration object number needed Poisson Sample Loader compute number samples int n Split get Total Splits context get Configuration set Int mapsplits count n Configuration conf context get Configuration Context set Package Import List Array List String Object Serializer deserialize conf get udf import list Map Red Util setup Context conf Load Func load Func get Load Func Split get Input Index conf Pass loader signature Load Func Input Format conf pass Load Signature load Func Split get Input Index conf merge entries split specific conf conf got Input Format merge Split Specific Conf load Func Split conf Input Format input Format load Func get Input Format List Long inp Limit Lists Array List Long Object Serializer deserialize conf get input Format input Format Split Split load Func load Func context context limit inp Limit Lists get Split get Input Index public org apache hadoop mapreduce Record Reader Text Tuple create Record Reader throws Exception Interrupted Exception return new Record Reader input Format Split load Func context limit get corresponding configuration input split based merge Conf supplied package level access publicly used elsewhere throws Exception static void merge Split Specific Conf Load Func load Func Split Split Configuration original Conf throws Exception set conf entries input specific conf Job job new Job original Conf load Func set Location get Load Location Split get Input Index original Conf job set Location call could write conf within job merge updated conf original conf Configuration Util merge Conf original Conf job get Configuration param input Index param conf return throws Exception Suppress Warnings unchecked private static Load Func get Load Func int input Index Configuration conf throws Exception Array List File Spec inputs Array List File Spec Object Serializer deserialize conf get Func Spec load Func Spec inputs get input Index get Func Spec return Load Func Context instantiate Func Spec load Func Spec Suppress Warnings unchecked private static String get Load Location int input Index Configuration conf throws Exception Array List File Spec inputs Array List File Spec Object Serializer deserialize conf get return inputs get input Index get File Name Pass loader signature Load Func Input Format conf param load Func Loadfunc set signature param input Index index input corresponding loadfunc param conf Configuration object signature set throws Exception failure Suppress Warnings unchecked static void pass Load Signature Load Func load Func int input Index Configuration conf throws Exception List String inp Signature Lists Array List String Object Serializer deserialize conf get signature null intermediate jobs required passed inp Signature Lists get input Index null load Func set Context Signature inp Signature Lists get input Index conf set loader signature inp Signature Lists get input Index Map Red Util setup Context conf non Javadoc see org apache hadoop mapreduce Input Format get Splits org apache hadoop mapreduce Job Context Suppress Warnings unchecked rawtypes Override public List Input Split get Splits Job Context jobcontext throws Exception Interrupted Exception Configuration conf jobcontext get Configuration Array List File Spec inputs Array List Array List Operator Key inp Targets try inputs Array List File Spec Object Serializer deserialize conf get inp Targets Array List Array List Operator Key Object Serializer deserialize conf get Context set Package Import List Array List String Object Serializer deserialize conf get udf import list Map Red Util setup Context conf catch Exception e int err Code String msg Unable deserialize object throw new Exec Exception msg err Code Exception e Array List Input Split splits new Array List Input Split int inputs size try Path path new Path inputs get get File Name File System fs boolean Fs Path true try fs path get File System conf catch Exception e application specific scheme used e g hbase table fail getting file system ok use dfs case fs new Path get File System conf Fs Path false execution Mapred set working dir user userid Utils Local conf fs set Working Directory jobcontext get Working Directory first pass input location loader send clone configuration loader inputformat loader decide store input location configuration example File Input Format stores mapred input dir conf different inputs loader n end writing conf Func Spec load Func Spec inputs get get Func Spec Load Func load Func Load Func Context instantiate Func Spec load Func Spec boolean combinable load Func instanceof Merge Join Indexer load Func instanceof Indexable Load Func load Func instanceof Collectable Load Func load Func instanceof Ordered Load Func combinable combinable conf get Boolean Split Combination false Job Conf conf Clone new Job Conf conf Job input Specific Job new Job conf Clone Pass loader signature Load Func Input Format conf pass Load Signature load Func input Specific Job get Configuration load Func set Location inputs get get File Name input Specific Job set Location call could write conf within input Specific Job use updated conf get Input Format ask splits Input Format inp Format load Func get Input Format List Input Split one Input Splits inp Format get Splits Hadoop Shims create Job Context input Specific Job get Configuration jobcontext get Job List Input Split one Input Splits get Splits one Input Splits inp Targets get fs get Default Block Size Fs Path path fs get Working Directory combinable conf Clone splits add one Input Splits catch Exec Exception ee throw ee catch Exception e int err Code String msg Unable create input splits inputs get get File Name e get Message null e get Message Empty throw new Exec Exception e get Message err Code Exception e else throw new Exec Exception msg err Code Exception e hadoop new integration get around hadoop bug passing total splits split retrieved Record Reader method called mapreduce framework later int n splits size also passing multi input flag back end multi input record counters created int inputs size boolean disable Counter conf get Boolean disable counter false disable Counter log info Disable custom input counters Input Split split splits Split split set Total Splits n Split split set Multi Inputs true Split split set Disable Counter disable Counter return splits protected List Input Split get Splits List Input Split one Input Splits int input Index Array List Operator Key target Ops long block Size boolean combinable Configuration conf throws Exception Interrupted Exception Array List Input Split Splits new Array List Input Split combinable int split Index Input Split input Split one Input Splits Split Split new Split new Input Split input Split input Index target Ops split Index Split set Conf conf Splits add Split return Splits else long max Combined Split Size conf get Long max Combined Split Size max Combined Split Size default block size max Combined Split Size block Size List List Input Split combined Splits Map Red Util get Combine Splits one Input Splits max Combined Split Size conf int combined Splits size Splits add create Split combined Splits get input Index target Ops conf return Splits private Input Split create Split List Input Split combined Splits int input Index Array List Operator Key target Ops int split Index Configuration conf Split Split new Split combined Splits Array new Input Split input Index target Ops split Index Split set Conf conf return Split
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache parser import java io Buffered Reader import java io Exception import java io Stream Tokenizer import java io String Reader import java io String Writer import java util Arrays import java util Array List import java util Hash Set import java util List import java util Map import java util Set import org antlr runtime Char Stream import org antlr runtime Common Token Stream import org antlr runtime Recognition Exception import org antlr runtime tree Common Tree import org antlr runtime tree Common Tree Node Stream import org antlr runtime tree Tree import org apache commons logging Log import org apache commons logging Log Factory import org apache impl Context import org apache parser Parser Node Invocation Point import org apache tools parameters Parameter Substitution Preprocessor import org apache tools parameters Preprocessor Context class Macro private static final Log Log Factory get Log Macro class private String file Name private String name private String body private List String params private List String rets private Map String Macro seen private Set String macro Stack private Context Context private long idx start line number macro script private int start Line Macro String name String file List String params List String returns String body Map String Macro seen name name params params null new Array List String params rets returns null new Array List String returns file Name file body body seen seen macro Stack new Hash Set String debug Macro name defined String get Name return name void set Stack Set String stack macro Stack stack Set String get Stack return macro Stack void set Start Line int start start Line start int get Start Line return start Line void set Context Context Context Context Context private Common Tree inline String inputs String outputs Common Tree String file throws Parser Exception String substitute Params inputs outputs get Line file Set String masks new Hash Set String inputs null String inputs masks add String outputs masks add return mask Alias masks file private String substitute Params String inputs String outputs int line String file throws Parser Exception inputs null params Empty inputs null inputs length params size String msg get Error Message file line Failed expand macro name Expected number parameters params size actual number inputs inputs null inputs length throw new Parser Exception msg boolean Void Return false rets Empty outputs null outputs length String msg get Error Message file line expand macro name Expected number return aliases actual number return values outputs length throw new Parser Exception msg Void Return true Void Return outputs null rets Empty outputs null outputs length rets size String msg get Error Message file line Failed expand macro name Expected number return aliases rets size actual number return values outputs null outputs length throw new Parser Exception msg String args new String params size int params size inputs starts inputs inputs args params get inputs Void Return String args new String params size rets size System arraycopy args args params size args args int rets size args params size rets get outputs String Writer writer new String Writer Buffered Reader new Buffered Reader new String Reader body try Preprocessor Context pc new Preprocessor Context pc load Param Val Arrays List args null Map String String param Val pc get Param Val Map Entry String String e Context get Param Val entry Set overwrite false since macro parameters precedence commandline parameters keys overlap pc process Ord Line e get Key e get Value false Parameter Substitution Preprocessor psp new Parameter Substitution Preprocessor pc psp gen Substituted File writer catch Exception e catch Parser Exception Runtime Exception String msg get Error Message file line Macro inline failed macro name e get Message n Macro content body throw new Parser Exception msg debug substition n writer String return writer String private Common Tree mask Alias String Set String masks Common Tree tree String file throws Parser Exception node real line number macro name node int line tree get Child get Line Char Stream input null try parse macro body ast input new Query Parser String Stream file catch Exception e String msg get Error Message file line Failed inline macro name e get Message nmacro content throw new Parser Exception msg Query Lexer lex new Query Lexer input Common Token Stream tokens new Common Token Stream lex Query Parser query return result null Query Parser parser Query Parser Utils create Parser tokens start Line try result parser query catch Recognition Exception e e line start Line String msg file Name null parser get Error Header e Query Parser Utils generate Error Header e file Name msg parser get Error Message e parser get Token Names String msg get Error Message file line Failed parse macro name msg nmacro content throw new Parser Exception msg Common Tree ast Common Tree result get Tree debug macro name n ast String Tree List Common Tree macro Def Nodes new Array List Common Tree traverse Macro ast macro Def Nodes macro Def Nodes Empty String fname Parser Node ast get File Name String msg get Error Message fname ast get Line Invalid macro definition macro name contains macro definition nmacro content body throw new Parser Exception msg add macro invocation points expanded macro tree Parser Node pnode Parser Node tree List Invocation Point inv Stack pnode get Invocation Stack List Invocation Point new Inv Stack inv Stack null new Array List Invocation Point new Array List Invocation Point inv Stack Invocation Point pt new Invocation Point line file name new Inv Stack add pt set Invocation Stack ast new Inv Stack recursively expand inline macros List Common Tree inline Nodes new Array List Common Tree traverse Macro ast inline Nodes Common Tree inline Nodes Common Tree new Tree macro Inline new Array List Macro seen values macro Stack Context Query Parser Utils replace Node Node List new Tree null mask aliases inlined macro Common Tree Node Stream nodes new Common Tree Node Stream ast Alias Masker walker new Alias Masker nodes walker set Params masks name idx Alias Masker query return result null Common Tree common Tree null try result walker query catch Recognition Exception e e line start Line String msg walker get Error Header e walker get Error Message e walker get Token Names String msg get Error Message file line Failed mask macro name msg nmacro content throw new Parser Exception msg common Tree result tree debug masked macro name n common Tree String Tree return common Tree private static void set Invocation Stack Tree ast List Invocation Point stack Parser Node node Parser Node ast node set Invocation Stack stack int n node get Child Count int n set Invocation Stack node get Child stack Validates return alias exists macro body void validate throws Exception rets Empty return Hash Set String test Set new Hash Set String Stream Tokenizer st new Stream Tokenizer new String Reader body st word Chars st word Chars st word Chars st word Chars st lower Case Mode false st ordinary Char st slash Star Comments true st next Token Stream Tokenizer match Word st define false match Dollar Alias st true test Set add st sval substring else match Dollar Alias st false String prev Word st sval match Word st true match Word st otherwise true test Set add prev Word substring else match Char st true match Char st true test Set add prev Word substring else match Char st true possible mult alias inlining macro Array List String mlist new Array List String mlist add prev Word Multi Value Return st mlist true String mlist test Set add substring else match Char st false match Char st true skip Single Line Comment st String rets test Set contains throw new Exception Macro name missing return alias check multi value return pattern alias alias alias private static boolean Multi Value Return Stream Tokenizer st List String mlist boolean comma throws Exception int lookahead st next Token comma lookahead Stream Tokenizer comma match Char st false match Dollar Alias st false mlist add st sval return Multi Value Return st mlist comma comma lookahead match Char st true return true return false private static boolean match Dollar Alias Stream Tokenizer st boolean next throws Exception int type next st next Token st ttype type Stream Tokenizer st sval char st sval length return true next st push Back return false private static boolean match Word Stream Tokenizer st String word boolean next throws Exception int type next st next Token st ttype type Stream Tokenizer st sval equals Ignore Case word return true next st push Back return false private static boolean match Char Stream Tokenizer st int c boolean next throws Exception int type next st next Token st ttype type c return true next st push Back return false private static void skip Single Line Comment Stream Tokenizer st throws Exception int line st lineno int lookahead st next Token lookahead Stream Tokenizer lookahead n st lineno line break lookahead st next Token st push Back private static void traverse Macro Tree List Common Tree nodes String node Type get Text equals node Type nodes add Common Tree int n get Child Count int n Tree get Child traverse Macro nodes node Type Macro inline nodes following form name values values Child nodes macro name list return values list parameters static Common Tree macro Inline Common Tree List Macro macro Defs Set String macro Stack Context Context throws Parser Exception get name String mn get Child get Text get macro Def Macro macro null Macro pm macro Defs pm get Name equals mn macro pm break String file Parser Node get File Name macro null String msg get Error Message file get Line expand macro mn Macro must defined expansion throw new Parser Exception msg macro Stack contains macro name String msg get Error Message file get Line expand macro mn Macro ca n defined circularly throw new Parser Exception msg set nested macro call stack Set String new Stack new Hash Set String macro Stack new Stack add macro name macro set Stack new Stack inform macro Context substitute parameters main pigscript macro set Context Context get return values int n get Child get Child Count String rets new String n int n rets get Child get Child get Text get parameters int get Child get Child Count String params new String int params get Child get Child get Text return macro inline params rets file private static String get Error Message String file int line String header String reason String Builder sb new String Builder sb append file null sb append file append file append sb append line append line append append header reason null sb append Reason append reason return sb String
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Exception import java net import java util Iterator import java util List import org apache hadoop conf Configuration import org apache hadoop conf Configuration Integer Ranges import org apache hadoop fs Path import org apache hadoop io Raw Comparator import org apache hadoop io Text import org apache hadoop io Writable import org apache hadoop mapreduce Counter import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Input Split import org apache hadoop mapreduce Job import org apache hadoop mapreduce Mapper import org apache hadoop mapreduce Output Committer import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Partitioner import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce Record Writer import org apache hadoop mapreduce Reducer import org apache hadoop mapreduce Status Reporter import org apache hadoop mapreduce Task Attempt import org apache hadoop mapreduce Reducer Context import org apache hadoop mapreduce lib map Wrapped Mapper import org apache hadoop mapreduce task Map Context Impl import org apache hadoop security Credentials import org apache backend hadoop executionengine map Reduce Layer Generic Map Base import org apache data Data Bag import org apache data Tuple import org apache impl io Nullable Writable import org apache impl util Pair import org apache hadoop mapreduce lib map Wrapped Mapper abstract public class Map Base extends Generic Map Base Get mapper illustrator context param conf Configuration param input Input bag serve data source param output Map output buffer param split split return Illustrator context throws Exception throws Interrupted Exception Override public Context get Illustrator Context Configuration conf Data Bag input List Pair Nullable Writable Writable output Input Split split throws Exception Interrupted Exception org apache hadoop mapreduce Mapper Context mapper Context new Wrapped Mapper Text Tuple Nullable Writable Writable get Map Context new Illustrator Context conf input output split return mapper Context public class Illustrator Context extends Map Context Impl Text Tuple Nullable Writable Writable private Data Bag input List Pair Nullable Writable Writable output private Iterator Tuple null private Tuple value null private boolean init false public Illustrator Context Configuration conf Data Bag input List Pair Nullable Writable Writable output Input Split split throws Exception Interrupted Exception super conf new Task Attempt null null null new Illustrate Dummy Reporter split conf set Illustrator true output null throw new Exception Null output used input input output output Override public boolean next Key Value throws Exception Interrupted Exception input null init init true return true return false null input iterator Next return false value next return true Override public Text get Current Key return null Override public Tuple get Current Value return value Override public void write Nullable Writable key Writable value throws Exception Interrupted Exception output add new Pair Nullable Writable Writable key value Override public void progress Override public boolean Illustrator Context context return Wrapped Mapper Context context get Configuration get Illustrator null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Byte Array Output Stream import java io Data Output Stream import java io Exception import java net import java util Array List import java util Collections import java util Comparator import java util Iterator import java util List import org apache hadoop classification Interface Stability import org apache hadoop conf Configuration import org apache hadoop conf Configuration Integer Ranges import org apache hadoop fs Path import org apache hadoop io Raw Comparator import org apache hadoop io Text import org apache hadoop io Writable import org apache hadoop mapred jobcontrol Job import org apache hadoop mapreduce Counter import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Job import org apache hadoop mapreduce Mapper import org apache hadoop mapreduce Output Committer import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Partitioner import org apache hadoop mapreduce Reduce Context import org apache hadoop mapreduce Reducer import org apache hadoop mapreduce Task Attempt import org apache hadoop mapreduce Reducer Context import org apache hadoop mapreduce lib reduce Wrapped Reducer import org apache hadoop mapreduce task Reduce Context Impl import org apache hadoop security Credentials import org apache backend hadoop executionengine map Reduce Layer Map Base Illustrator Context import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache data Tuple import org apache impl io Nullable Tuple import org apache impl io Nullable Writable import org apache impl util Pair import org apache pen Fake Raw Key Value Iterator public class Map Reduce extends Generic Map Reduce static class Illustrate Reducer Context extends Wrapped Reducer Nullable Writable Nullable Tuple Nullable Writable Writable public Illustrator Context get Reducer Context Reduce Context Nullable Writable Nullable Tuple Nullable Writable Writable reduce Context return new Illustrator Context reduce Context public class Illustrator Context extends Wrapped Reducer Context public Illustrator Context Reduce Context Nullable Writable Nullable Tuple Nullable Writable Writable reduce Context super reduce Context public Package get Pack return Reduce Illustrator Context Impl reduce Context pack public static class Reduce extends Generic Map Reduce Reduce Get reducer illustrator context param input Input buffer output maps param pkg package return reducer illustrator context throws Exception throws Interrupted Exception Override public Context get Illustrator Context Job job List Pair Nullable Writable Writable input Package pkg throws Exception Interrupted Exception org apache hadoop mapreduce Reducer Context reducer Context new Illustrate Reducer Context get Reducer Context new Illustrator Context Impl job input pkg return reducer Context Suppress Warnings unchecked public class Illustrator Context Impl extends Reduce Context Impl Nullable Writable Nullable Tuple Nullable Writable Writable private Nullable Writable current Key null next Key null private Nullable Tuple next Value null private List Nullable Tuple current Values null private Iterator Pair Nullable Writable Writable private final Byte Array Output Stream bos private final Data Output Stream dos private final Raw Comparator sort Comparator grouping Comparator public Package pack null private Illustrator Value Iterable iterable new Illustrator Value Iterable public Illustrator Context Impl Job job List Pair Nullable Writable Writable input Package pkg throws Exception Interrupted Exception super job get Job Conf new Task Attempt new Fake Raw Key Value Iterator input iterator Next null null null null new Illustrate Dummy Reporter null Nullable Writable class Nullable Tuple class bos new Byte Array Output Stream dos new Data Output Stream bos org apache hadoop mapreduce Job nw Job new org apache hadoop mapreduce Job job get Job Conf sort Comparator nw Job get Sort Comparator grouping Comparator nw Job get Grouping Comparator Collections sort input new Comparator Pair Nullable Writable Writable Override public int compare Pair Nullable Writable Writable Pair Nullable Writable Writable try first write dos int l bos size first write dos int l bos size byte bytes bos Byte Array bos reset return sort Comparator compare bytes l bytes l l l catch Exception e throw new Runtime Exception Serialization exception sort e get Message current Values new Array List Nullable Tuple input iterator Next Pair Nullable Writable Writable entry next next Key entry first next Value Nullable Tuple entry second pack pkg public class Illustrator Value Iterator implements Reduce Context Value Iterator Nullable Tuple private int pos private int mark Override public void mark throws Exception mark pos mark mark Override public void reset throws Exception pos mark Override public void clear Mark throws Exception mark Override public boolean Next return pos current Values size Override public Nullable Tuple next pos return current Values get pos Override public void remove throw new Unsupported Operation Exception remove implemented Override public void reset Backup Store throws Exception pos mark protected class Illustrator Value Iterable implements Iterable Nullable Tuple private Illustrator Value Iterator iterator new Illustrator Value Iterator Override public Iterator Nullable Tuple iterator return iterator Override public Nullable Writable get Current Key return current Key Override public boolean next Key next Key null return false current Key next Key current Values clear current Values add next Value next Key null Next Pair Nullable Writable Writable entry next ca n raw comparison used byte bytes int l l try current Key write dos l bos size entry first write dos l bos size bytes bos Byte Array catch Exception e throw new Runtime Exception next Key exception e get Message bos reset grouping Comparator compare bytes l bytes l l l grouping Comparator compare current Key entry first current Values add Nullable Tuple entry second else next Key entry first next Value Nullable Tuple entry second break return true Override public Iterable Nullable Tuple get Values return iterable Override public void write Nullable Writable k Writable Override public void progress Override public boolean Illustrator org apache hadoop mapreduce Reducer Context context return context instanceof Map Reduce Illustrate Reducer Context Illustrator Context Override public Package get Pack org apache hadoop mapreduce Reducer Context context return Map Reduce Illustrate Reducer Context Illustrator Context context get Pack
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Exception import java util Array List import java util List import org apache hadoop conf Configuration import org apache hadoop mapreduce Job import org apache hadoop mapreduce Job Context import org apache hadoop mapreduce Job Status State import org apache hadoop mapreduce Output Committer import org apache hadoop mapreduce Task Attempt Context import org apache Resource Schema import org apache Store Func Interface import org apache Store Metadata import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine shims Hadoop Shims import org apache backend hadoop executionengine util Map Red Util import org apache impl logical Layer schema Schema import org apache impl util Pair import org apache Configuration specialization default File Output Committer allow inturn delegate calls Output Commiter Store Func Output Format public class Output Committer extends Output Committer Output Committer Store map List Pair Output Committer Store map Output Committers Output Committer Store reduce List Pair Output Committer Store reduce Output Committers boolean recovery Supported param context param map Stores param reduce Stores throws Exception public Output Committer Task Attempt Context context List Store map Stores List Store reduce Stores throws Exception create store map reduce output committers map Output Committers get Committers context map Stores reduce Output Committers get Committers context reduce Stores recovery Supported context get Configuration get Boolean Configuration false param conf param map Stores return throws Exception Suppress Warnings unchecked private List Pair Output Committer Store get Committers Task Attempt Context context List Store stores throws Exception List Pair Output Committer Store committers new Array List Pair Output Committer Store Store store stores Store Func Interface Func store get Store Func Task Attempt Context updated Context set Context context store try committers add new Pair Output Committer Store Func get Output Format get Output Committer updated Context store catch Interrupted Exception e throw new Exception e return committers private Task Attempt Context set Context Task Attempt Context context Store store throws Exception Setup Context Store Func make use Map Red Util setup Context context get Configuration make copy context actions call end updating context Task Attempt Context context Copy Hadoop Shims create Task Attempt Context context get Configuration context get Task Attempt call set Location store Func side effects like setting map output dir Configuration Context needed Output Committer actions done committer created Output Format set Location context Copy store return context Copy static public Job Context set Context Job Context context Store store throws Exception make copy context actions call end updating context Job Context context Copy Hadoop Shims create Job Context context get Configuration context get Job Map Red Util setup Context context get Configuration call set Location store Func side effects like setting map output dir Configuration Context needed Output Committer actions done committer created Also String version Store Func specific store need set context case committer needs Output Format set Location context Copy store return context Copy static public void store Cleanup Store store Configuration conf throws Exception Store Func Interface store Func store get Store Func store Func instanceof Store Metadata Schema schema store get Schema schema null Store Metadata store Func store Schema new Resource Schema schema store get Sort Info store get File get File Name new Job conf public boolean Recovery Supported recovery Supported return false boolean Output Committer Support Recovery true call recover Task map reduce committers Pair Output Committer Store map Committer map Output Committers map Committer first null try Output Committer Support Recovery Output Committer Support Recovery map Committer first Recovery Supported catch Exception e throw new Runtime Exception e Output Committer Support Recovery return false Pair Output Committer Store reduce Committer reduce Output Committers reduce Committer first null try Output Committer Support Recovery Output Committer Support Recovery reduce Committer first Recovery Supported catch Exception e throw new Runtime Exception e Output Committer Support Recovery return false return true public void recover Task Task Attempt Context context throws Exception call recover Task map reduce committers Pair Output Committer Store map Committer map Output Committers map Committer first null Task Attempt Context updated Context set Context context map Committer second try Use reflection Hadoop x line method map Committer first recover Task updated Context catch Exception e throw new Exception e Pair Output Committer Store reduce Committer reduce Output Committers reduce Committer first null Task Attempt Context updated Context set Context context reduce Committer second try reduce Committer first recover Task updated Context catch Exception e throw new Exception e Override public void cleanup Job Job Context context throws Exception call clean map reduce committers Pair Output Committer Store map Committer map Output Committers map Committer first null Job Context updated Context set Context context map Committer second store Cleanup map Committer second updated Context get Configuration map Committer first cleanup Job updated Context Pair Output Committer Store reduce Committer reduce Output Committers reduce Committer first null Job Context updated Context set Context context reduce Committer second store Cleanup reduce Committer second updated Context get Configuration reduce Committer first cleanup Job updated Context method called public void commit Job Job Context context throws Exception call commit Job map reduce committers Pair Output Committer Store map Committer map Output Committers map Committer first null Job Context updated Context set Context context map Committer second promote files calling store Cleanup store Schema try map Committer first commit Job updated Context catch Exception e throw new Exception e store Cleanup map Committer second updated Context get Configuration Pair Output Committer Store reduce Committer reduce Output Committers reduce Committer first null Job Context updated Context set Context context reduce Committer second promote files calling store Cleanup store Schema try reduce Committer first commit Job updated Context catch Exception e throw new Exception e store Cleanup reduce Committer second updated Context get Configuration method called public void abort Job Job Context context State state throws Exception call abort Job map reduce committers Pair Output Committer Store map Committer map Output Committers map Committer first null Job Context updated Context set Context context map Committer second try map Committer first abort Job updated Context state catch Exception e throw new Exception e store Cleanup map Committer second updated Context get Configuration Pair Output Committer Store reduce Committer reduce Output Committers reduce Committer first null Job Context updated Context set Context context reduce Committer second try reduce Committer first abort Job updated Context state catch Exception e throw new Exception e store Cleanup reduce Committer second updated Context get Configuration Override public void abort Task Task Attempt Context context throws Exception Hadoop Shims Map context get Task Attempt Pair Output Committer Store map Committer map Output Committers map Committer first null Task Attempt Context updated Context set Context context map Committer second map Committer first abort Task updated Context else Pair Output Committer Store reduce Committer reduce Output Committers reduce Committer first null Task Attempt Context updated Context set Context context reduce Committer second reduce Committer first abort Task updated Context Override public void commit Task Task Attempt Context context throws Exception Hadoop Shims Map context get Task Attempt Pair Output Committer Store map Committer map Output Committers map Committer first null Task Attempt Context updated Context set Context context map Committer second map Committer first commit Task updated Context else Pair Output Committer Store reduce Committer reduce Output Committers reduce Committer first null Task Attempt Context updated Context set Context context reduce Committer second reduce Committer first commit Task updated Context Override public boolean needs Task Commit Task Attempt Context context throws Exception boolean need Commit false Hadoop Shims Map context get Task Attempt Pair Output Committer Store map Committer map Output Committers map Committer first null Task Attempt Context updated Context set Context context map Committer second need Commit need Commit map Committer first needs Task Commit updated Context return need Commit else Pair Output Committer Store reduce Committer reduce Output Committers reduce Committer first null Task Attempt Context updated Context set Context context reduce Committer second need Commit need Commit reduce Committer first needs Task Commit updated Context return need Commit Override public void setup Job Job Context context throws Exception call set map reduce committers Pair Output Committer Store map Committer map Output Committers map Committer first null Job Context updated Context set Context context map Committer second map Committer first setup Job updated Context Pair Output Committer Store reduce Committer reduce Output Committers reduce Committer first null Job Context updated Context set Context context reduce Committer second reduce Committer first setup Job updated Context Override public void setup Task Task Attempt Context context throws Exception Hadoop Shims Map context get Task Attempt Pair Output Committer Store map Committer map Output Committers map Committer first null Task Attempt Context updated Context set Context context map Committer second map Committer first setup Task updated Context else Pair Output Committer Store reduce Committer reduce Output Committers reduce Committer first null Task Attempt Context updated Context set Context context reduce Committer second reduce Committer first setup Task updated Context
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import static org apache Configuration import static org apache Configuration import static org apache Constants import java io Exception import java util Array List import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop io Text import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Input Split import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce Task Attempt Context import org apache Load Func import org apache backend hadoop datastorage Configuration Util import org apache data Tuple import org apache impl io File Spec import org apache impl util Object Serializer import org apache tools pigstats Stats Util import org apache tools pigstats Status Reporter wrapper around actual Record Reader loadfunc needed two reasons intercept initialize call hadoop initialize underlying actual Record Reader right Context object achieved looking Context corresponding input split Reader supposed process need give hadoop consistent key value types text tuple respectively Record Reader call underlying Loader get Next get Tuple value key null text since key used input map public class Record Reader extends Record Reader Text Tuple private static final Log Log Factory get Log Record Reader class transient private String counter Group private long timing Frequency private boolean Timing false current Tuple value returned underlying link Load Func get Next Tuple cur Value null current wrapped Record Reader used loader private Record Reader cur Reader loader object private Load Func loadfunc Hadoop counter name transient private String counter Name null wrapped inputformat private Input Format inputformat wrapped splits private Split Split wrapped split index use private int idx private long progress private Task Attempt Context context private Status Reporter reporter private final long limit private long record Count Configuration object data specific input underlying Record Reader process obtained link Load Func set Location String org apache hadoop mapreduce Job call hence contain specific properties underlying link Input Format might put private Configuration input Specific Conf param context public Record Reader Input Format inputformat Split Split Load Func load Func Task Attempt Context context long limit throws Exception Interrupted Exception inputformat inputformat Split Split loadfunc load Func context context reporter Status Reporter get Instance input Specific Conf context get Configuration cur Reader null progress idx limit limit init Next Record Reader Timing input Specific Conf get Boolean false Timing counter Group load Func String timing Frequency input Specific Conf get Long Override public void close throws Exception cur Reader null cur Reader close cur Reader null Override public Text get Current Key throws Exception Interrupted Exception n really use key input map send null return null Override public Tuple get Current Value throws Exception Interrupted Exception Increment multi input record counter counter Name null cur Value null reporter incr Counter Stats Util counter Name return cur Value Override public float get Progress throws Exception Interrupted Exception long subprogress bytes processed current split null cur Reader idx always one past current subsplit true index subprogress long cur Reader get Progress Split get Length idx return Math min f progress subprogress float Split get Length Override public void initialize Input Split split Task Attempt Context context throws Exception Interrupted Exception initialize underlying actual Record Reader right Context object achieved merging Context corresponding input split Reader supposed process context passed Split Split split context context Configuration Util merge Conf context get Configuration input Specific Conf Pass loader signature Load Func Input Format conf Input Format pass Load Signature loadfunc Split get Input Index context get Configuration invoke initialize underlying Record Reader adjusted conf null cur Reader cur Reader initialize Split get Wrapped Split context loadfunc prepare Read cur Reader Split Split Multi Inputs Split disable Counter counter Name get Multi Inputs Couner Name Split input Specific Conf counter Name null Create counter needed incr Counter may never called case empty file reporter incr Counter Stats Util counter Name Override public boolean next Key Value throws Exception Interrupted Exception limit record Count limit return false boolean time Timing record Count timing Frequency long start Nanos time start Nanos System nano Time cur Reader null cur Value loadfunc get Next null init Next Record Reader return false time reporter incr Counter counter Group Math round System nano Time start Nanos timing Frequency record Count return true Suppress Warnings unchecked private static String get Multi Inputs Couner Name Split Split Configuration conf throws Exception Array List File Spec inputs Array List File Spec Object Serializer deserialize conf get Input Format String fname inputs get Split get Input Index get File Name return Stats Util get Multi Inputs Counter Name fname Split get Input Index Get record reader next chunk Combine File Split protected boolean init Next Record Reader throws Exception Interrupted Exception cur Reader null cur Reader close cur Reader null idx progress Split get Length idx done processing far context progress chunks processed nothing idx Split get Num Paths return false get record reader idx th chunk try Split set Current Idx idx cur Reader inputformat create Record Reader Split get Wrapped Split context info Current split processed Split get Wrapped Split idx initialize first Record Reader called Map Task responsible initializing subsequent Record Readers cur Reader initialize Split get Wrapped Split context loadfunc prepare Read cur Reader Split catch Exception e throw new Runtime Exception e idx return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import java io Buffered Reader import java io File import java io File Input Stream import java io File Found Exception import java io Exception import java io Input Stream import java io Print Stream import java io String Reader import java lang reflect Constructor import java lang reflect Method import java net import java util Array List import java util Collection import java util Deque import java util Enumeration import java util Hash Map import java util Hash Set import java util Iterator import java util Linked List import java util List import java util Map import java util Properties import java util Queue import java util Set import java util concurrent atomic Atomic Integer import org apache commons lang String Utils import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop io compress Zip Codec import org apache log j Level import org apache log j Logger import org apache backend datastorage Container Descriptor import org apache backend datastorage Data Storage import org apache backend datastorage Element Descriptor import org apache backend executionengine Exec Exception import org apache backend executionengine Exec Job import org apache backend executionengine Exec Job import org apache backend hadoop Client import org apache backend hadoop executionengine Job import org apache builtin Storage import org apache classification Interface Audience import org apache classification Interface Stability import org apache data Data Bag import org apache data Tuple import org apache impl Context import org apache impl io File Localizer import org apache impl io File Localizer Fetch File Ret import org apache impl io compress Zip Codec Extension import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl streaming Streaming Command import org apache impl util Log Utils import org apache impl util Properties Util import org apache impl util Context import org apache impl util Uri Util import org apache impl util Utils import org apache newplan Dependency Order Walker import org apache newplan Operator import org apache newplan logical Util import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Logical Expression Visitor import org apache newplan logical expression Scalar Expression import org apache newplan logical optimizer Expression Visitor import org apache newplan logical relational import org apache newplan logical relational Load import org apache newplan logical relational Store import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Plan Data import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache parser Query Parser Driver import org apache parser Query Parser Utils import org apache pen Example Generator import org apache scripting Script Engine import org apache tools grunt Grunt Parser import org apache tools pigstats Empty Stats import org apache tools pigstats Job Stats import org apache tools pigstats Output Stats import org apache tools pigstats Stats import org apache tools pigstats Stats Job Graph import org apache tools pigstats Script State import org apache validator Black Whitelist Filter import org apache validator Command Filter import com google common annotations Visible Testing class Java programs connect Typically program create Server instance programmer registers queries using register Query retrieves results using open Iterator store shutdown method called free resources used current Server instance could result memory leak Interface Audience Public Interface Stability Stable public class Server protected final Log log Log Factory get Log get Class public static final String pretty print schema private static final String location check strict data structure support grunt shell operations grunt shell work one graph time script contained inside another script grunt shell first saves current graph stack works new graph nested script done grunt shell pops saved graph continues working protected final Deque Graph graphs new Linked List Graph current Graph grunt shell working private Graph curr protected final Context Context private String job Name private String job Priority private final static Atomic Integer scope Counter new Atomic Integer protected final String scope construct Scope private boolean validate Statement false private boolean skip Parse Register Batch false private final Black Whitelist Filter filter private String construct Scope scope servers session id String user System get Property user name String date new Date String scope really used system right however make explain statements look lengthy set username date let simplify scope real scope needed might need update operators include scope name return scope Counter increment Get Visible Testing public static void reset Scope scope Counter set param exec Type String mapreduce local Local mode use Hadoop local job runner execute job local machine Mapreduce mode connect cluster execute job exec Type String one two deduce Execution Engine classpath use backend execution throws Exec Exception throws Exception public Server String exec Type String throws Exec Exception Exception add Exec Type Property Properties Util load Default Properties exec Type String public Server String exec Type String Properties properties throws Exec Exception Exception add Exec Type Property properties exec Type String public Server Properties properties throws Exec Exception Exception new Context properties private static Properties add Exec Type Property Properties properties String exec Type properties set Property exectype exec Type return properties param exec Type execution type start engine Local mode use Hadoop local job runner execute job local machine Mapreduce mode connect cluster execute job throws Exec Exception public Server Exec Type exec Type throws Exec Exception exec Type Properties Util load Default Properties public Server Exec Type exec Type Properties properties throws Exec Exception new Context exec Type properties public Server Exec Type exec Type Configuration conf throws Exec Exception new Context exec Type conf public Server Context context throws Exec Exception context true public Server Context context boolean connect throws Exec Exception Context context curr new Graph false job Name Context get Properties get Property Context Context Default Job Name connect Context connect filter new Black Whitelist Filter add Hadoop Properties add Jars Properties mark Predeployed Jars Properties Script State get null started via command line Script State already initialized Main overwrite Script State start Context get Execution Engine instantiate Script State Stats start Context get Execution Engine instantiate Stats log event includes caller context String audit Id Client get Audit Id Context String caller Id String Context get Properties get Configuration log info Script session audit Id caller Id null log info Caller session caller Id Boolean parse Boolean Context get Properties get Property Configuration Boolean parse Boolean Context get Properties get Property yarn timeline service enabled false Client Event event new Client Event audit Id caller Id try Client get Instance log Event event catch Exception e log warn Error posting e else log warn disabled since yarn timeline service enabled set false set hdfs caller context Class caller Context Class null try caller Context Class Class Name org apache hadoop ipc Caller Context catch Class Found Exception e pre Hadoop skip setting Caller Context caller Context Class null try Reflection following code since available since hadoop Caller Context hdfs Context new Caller Context Builder audit Id build Caller Context set Current hdfs Context Class caller Context Builder Class Class Name org apache hadoop ipc Caller Context Builder Constructor caller Context Builder Construct caller Context Builder Class get Constructor String class Object builder caller Context Builder Construct new Instance audit Id Method builder Build Method builder get Class get Method build Object hdfs Context builder Build Method invoke builder Method caller Context Set Current Method caller Context Class get Method set Current hdfs Context get Class caller Context Set Current Method invoke caller Context Class hdfs Context catch Exception e Shall happen unless change future Hadoop commons throw new Exec Exception e private void add Hadoop Properties throws Exec Exception Zip input hadoop turned Text Input Format depends hadoop Text Input Format handling bzip input One problem recognize bz extension bz Adding custom Zip codec returns bz extension backward compatibility String codecs Context get Properties get Property io compression codecs codecs null codecs contains Zip Codec class get Canonical Name Context get Properties set Property io compression codecs codecs Zip Codec Extension class get Canonical Name private void add Jars Properties throws Exec Exception add jars properties extra Jars String jar str Context get Properties get Property additional jars jar str null jar str jar str jar str replace File path Separator jar str Empty jar str String jar str comma Context get Properties get Property additional jars uris jar str comma null jar str comma Empty jar str jar str jar str comma jar str null jar str Empty Use File path Separator Linux Windows correctly handle path aggregates represented Operating System String jar jar str split try register Jar jar catch Exception e int err Code String msg Failed register jar jar Caught exception throw new Exec Exception msg err Code Exception e private void mark Predeployed Jars Properties throws Exec Exception mark jars predeployed properties String jar str Context get Properties get Property predeployed jars jar str null Use File path Separator Linux Windows correctly handle path aggregates represented Operating System String jar jar str split File path Separator jar length Context mark Jar Predeployed jar public Context get Context return Context Current return public Graph get Current return curr Set logging level public void debug Logger get Logger org apache set Level Level Context get Log j Properties set Property log j logger org apache Level String Set logging level default public void debug Logger get Logger org apache set Level Context get Default Log Level Context get Log j Properties set Property log j logger org apache Context get Default Log Level String Set default parallelism job param p default number reducers use job public void set Default Parallel int p Context default Parallel p Starts batch execution mode public void set Batch log debug Create new graph curr null graphs push curr curr new Graph true Retrieve current execution mode return true execution mode batch false otherwise public boolean Batch Batch multiple graphs stack gives right response even multiquery turned return graphs size Returns whether anything process current batch throws Frontend Exception return true stores process current batch false otherwise public boolean Batch Empty throws Frontend Exception curr null int err Code String msg set Batch must called first throw new Frontend Exception msg err Code Exception return curr Batch Empty method parses scripts builds Logical Plan method followed link Server execute Batch boolean argument false use link Server execute Batch calling method parse build script throws Exception public void parse Build throws Exception curr null Batch int err Code String msg set Batch must called first throw new Frontend Exception msg err Code Exception curr parse Query curr build Plan null Submits batch commands execution return list jobs executed throws Exception public List Exec Job execute Batch throws Exception return execute Batch true Submits batch commands execution Parse build script skipped user called link Server parse Build Pass false argument case param parse Build return throws Exception public List Exec Job execute Batch boolean parse Build throws Exception parse Build parse Build Stats stats execute return get Jobs stats Retrieves list Job objects Stats object param stats return list Exec Job objects protected List Exec Job get Jobs Stats stats Linked List Exec Job jobs new Linked List Exec Job stats instanceof Empty Stats Job job new Job Job Context stats result null get Store null jobs add job return jobs Job Graph j Graph stats get Job Graph Iterator Job Stats iter j Graph iterator iter Next Job Stats js iter next Output Stats output js get Outputs js Successful jobs add new Job Job Context output get Store output get Alias stats else Job hjob new Job Job Context output get Store output get Alias stats hjob set Exception js get Exception jobs add hjob return jobs Discards batch commands throws Frontend Exception public void discard Batch throws Frontend Exception curr null Batch int err Code String msg set Batch must called first throw new Frontend Exception msg err Code Exception curr graphs pop Add path skipped automatically shipping binaries streaming param path path skipped public void add Path Skip String path Context add Path Skip path Defines alias given function spec useful functions require arguments constructor param function new function alias define param func Spec Func Spec object representing name function class arguments constructor public void register Function String function Func Spec func Spec Context register Function function func Spec Defines alias given streaming command param command Alias new command alias define param command streaming command executed public void register Streaming Command String command Alias Streaming Command command Context register Stream Cmd command Alias command private locate Jar Resources String jar Name throws Exception Enumeration urls Class Loader get System Resources jar Name resource Location null urls Elements resource Location urls next Element urls Elements String Buffer sb new String Buffer Found multiple resources match sb append jar Name sb append sb append resource Location urls Elements sb append urls next Element sb append log debug sb String return resource Location Registers jar file Name jar file absolute relative path multiple resources found specified name first one registered returned get System Resources warning issued inform user param name jar file register throws Exception public void register Jar String name throws Exception Check operation permitted filter validate Command Filter Command Context Jar name log debug Ignoring duplicate registration jar name return first try locate jar via system resources fails try using name File preserves compatibility case user passes absolute path path relative current working directory name null name Empty log warn Empty string specified jar path return resource locate Jar Resources name resource null Fetch File Ret files File Localizer fetch Files Context get Properties name Fetch File Ret file files File f file file f Read int err Code String msg Ca n read jar file name throw new Frontend Exception msg err Code Exception Context add Jar f name else Context add Jar resource name Universal Scripting Language Support see param path path script file param scripting Lang language keyword scripting Engine used interpret script param namespace namespace defined functions script throws Exception public void register Code String path String scripting Lang String namespace throws Exception Context scripting Fs contains Key path Context scripting Fs get path equals namespace log debug Ignoring duplicate registration scripting udf file path namespace namespace return else Context scripting Fs put path namespace Fetch File Ret ret File Localizer fetch File Context get Properties path File f ret file f Read int err Code String msg Ca n read file path throw new Frontend Exception msg err Code Exception String cwd new File get Canonical Path String file Path f get Canonical Path String name Jar file Path Use relative path jar path specified relative ret Fetch new File path Absolute path index File separator case Oozie localized files different directory symlinked current directory Canonical path point cwd name Jar path else file Path equals cwd File separator path user specified absolute path refers cwd name Jar file Path substring cwd length Context add Script File name Jar file Path scripting Lang null Script Engine se Script Engine get Instance scripting Lang se register Functions name Jar namespace Context Register query runtime query parsed registered executed needed param query Latin expression evaluated param start Line line number query within whole script throws Exception public void register Query String query int start Line throws Exception curr register Query query start Line validate Statement skip Parse Register Batch Register query runtime query parsed registered executed needed Equivalent calling link register Query String int start Line set param query Latin expression evaluated throws Exception public void register Query String query throws Exception register Query query Register script Input Stream source general extensible script local file use File Input Stream script memory build dynamically use Byte Array Input Stream even script remote machine get wrap Socket Input Stream param throws Exception public void register Script Input Stream throws Exception register Script null null Register script Input Stream source general extensible script local file use File Input Stream script memory build dynamically use Byte Array Input Stream even script remote machine get wrap Socket Input Stream parameters script substituted values params param param params key parameter name value parameter value throws Exception public void register Script Input Stream Map String String params throws Exception register Script params null Register script Input Stream source general extensible script local file use File Input Stream script memory build dynamically use Byte Array Input Stream even script remote machine get wrap Socket Input Stream parameters script substituted values parameter files param param params Files files parameter setting throws Exception public void register Script Input Stream List String params Files throws Exception register Script null params Files Register script Input Stream br script local file use File Input Stream script memory build dynamically use Byte Array Input Stream script even remote machine get wrap Socket Input Stream br parameters script substituted values map parameter files values params Map override value parameter file parameter param param params key parameter name value parameter value param params Files files parameter setting throws Exception public void register Script Input Stream Map String String params List String params Files throws Exception try String substituted Context Param Substitution param Map List params params Files Grunt Parser grunt new Grunt Parser new String Reader substituted grunt set Interactive false grunt parse Stop Error true catch org apache tools pigscript parser Parse Exception e log error e get Localized Message throw new Exception e protected List String param Map List Map String String params List String param List new Array List String params null Map Entry String String entry params entry Set param List add entry get Key entry get Value return param List Creates clone current return Graph object clone current throws Exception protected Graph get Cloned Graph throws Exception Graph graph curr duplicate graph null int err Code String msg Cloning plan failed throw new Frontend Exception msg err Code Exception return graph Register query runtime query read indicated file param file Name file read query throws Exception public void register Script String file Name throws Exception register Script file Name null null Register script file parameters file substituted values params param file Name script file param params key parameter name value parameter value throws Exception public void register Script String file Name Map String String params throws Exception register Script file Name params null Register script file parameters file substituted values parameter files param file Name script file param params Files files parameter setting throws Exception public void register Script String file Name List String params Files throws Exception register Script file Name null params Files Register script file parameters file substituted values map parameter files values params Map override value parameter file parameter param file Name script param params key parameter name value parameter value param params Files files parameter setting throws Exception public void register Script String file Name Map String String params List String params Files throws Exception File Input Stream fis null try fis new File Input Stream file Name register Script fis params params Files catch File Found Exception e log error e get Localized Message throw new Exception e finally fis null fis close Intended used unit tests Print list aliases current Latin script Output written System throws Frontend Exception public void print Aliases throws Frontend Exception System println aliases curr get Alias Op key Set Write schema alias System param alias Alias whose schema written return Schema alias dumped throws Exception public Schema dump Schema String alias throws Exception try Context Dump Schema true equals alias alias get Last Rel Logical Relational Operator op get Operator Alias alias Logical Schema schema op get Schema boolean pretty true equals Context get Properties get Property schema null Schema org apache newplan logical Util translate Schema schema System println alias pretty pretty Print String return else System println Schema alias unknown return null catch Frontend Exception fee int err Code String msg Unable describe schema alias alias throw new Frontend Exception msg err Code Exception false null fee finally Context Dump Schema false Write schema nested Alias System Denoted alias nested Alias param alias Alias whose schema nested Alias param nested Alias Alias whose schema written return Schema alias dumped throws Exception public Schema dump Schema Nested String alias String nested Alias throws Exception try Context Dump Schema true equals alias alias get Last Rel Operator op get Operator Alias alias op instanceof Logical Schema nested Sc op dump Nested Schema alias nested Alias nested Sc null Schema org apache newplan logical Util translate Schema nested Sc System println alias nested Alias String return else System println Schema alias nested Alias unknown return null else int err Code String msg Unable describe schema alias nested Alias throw new Frontend Exception msg err Code Exception false null finally Context Dump Schema false Set name job name get translated mapred job name param name job public void set Job Name String name job Name Context name Set Hadoop job priority value get translated mapred job priority param priority valid values found link org apache hadoop mapred Job Priority public void set Job Priority String priority job Priority priority Executes Latin script including indicated alias user pre Server server new Server server register Query load foo server register Query filter gt server register Query order pre pre server open Iterator pre filtered unsorted data returned instead user pre server open Iterator pre filtered sorted data returned param id Alias open iterator return iterator tuples returned script throws Exception public Iterator Tuple open Iterator String id throws Exception try Context get Properties set Property Context job Name job Priority null Context get Properties set Property Context job Priority Exec Job job store id File Localizer get Temporary Path Context String Utils get Tmp File Compressor Name Context invocation execute synchronous job get Status return job get Results else job get Status job get Exception null throw backend exception failed case Exception e job get Exception int err Code String msg Unable open iterator alias id Backend error e get Message throw new Frontend Exception msg err Code Exception e else throw new Exception Job terminated anomalous status job get Status String catch Frontend Exception e throw e catch Exception e int err Code String msg Unable open iterator alias id throw new Frontend Exception msg err Code Exception e Executes Latin script including indicated alias stores resulting records file user pre Server server new Server server register Query load foo server register Query filter gt server register Query order pre pre server store bar pre filtered unsorted data stored file tt bar tt instead user pre server store bar pre filtered sorted data stored file tt bar tt Equivalent calling link store String String String tt org apache Storage tt store function param id alias store param filename file store return link Exec Job containing information job throws Exception public Exec Job store String id String filename throws Exception return store id filename Storage class get Name default store function Executes Latin script including indicated alias stores resulting records file user pre Server server new Server server register Query load foo server register Query filter gt server register Query order pre pre server store bar mystorefunc pre filtered unsorted data stored file tt bar tt using tt mystorefunc tt instead user pre server store bar mystorefunc pre filtered sorted data stored file tt bar tt using tt mystorefunc tt p param id alias store param filename file store param func store function use return link Exec Job containing information job throws Exception public Exec Job store String id String filename String func throws Exception Stats stats store Ex id filename func stats get Output Stats size throw new Exception Could n retrieve job Output Stats output stats get Output Stats get stats Successful return new Job Context output get Store output get Alias stats else Job job new Job Context output get Store output get Alias stats check exception Exception ex null Job Stats js stats get Job Graph js get Exception null ex js get Exception job set Exception ex return job private Stats store Ex String alias String filename String func throws Exception equals alias alias get Last Rel curr parse Query curr skip Stores skip stores already processed curr build Plan alias try Query Parser Utils attach Store Plan scope curr lp filename func curr get Operator alias alias Context curr compile return execute Compiled Logical Plan catch Exception e int err Code String msg Unable store alias alias throw new Exception msg err Code Exception e Provide information query executed information developer focussed probably useful average user param alias Name alias explain param stream Print Stream write explanation throws Exception requested alias found public void explain String alias Print Stream stream throws Exception explain alias text true false stream stream null null Provide information query executed param alias Name alias explain param format Format explain printed text plan printed plain text Otherwise execution plan printed href http en wikipedia org wiki language format param verbose Controls amount information printed param mark Execute set treat explain like call execute respoect pending stores marked complete param lps Stream print logical tree param eps Stream print Execution Engine trees null print files param dir Directory print Execution Engine trees null use eps param suffix Suffix file names throws Exception requested alias found public void explain String alias String format boolean verbose boolean mark Execute Print Stream lps Print Stream eps File dir String suffix throws Exception try Context Explain true build Store Plan alias curr lp optimize Context add root xml node plans written stream format xml lps eps lps println plan curr lp explain lps format verbose curr lp size format xml lps eps lps println plan return Context get Execution Engine explain curr lp Context eps format verbose dir suffix format equals xml lps eps lps println plan mark Execute curr mark Executed catch Exception e int err Code String msg Unable explain alias alias throw new Frontend Exception msg err Code Exception e finally Context Explain false Returns unused byte capacity filesystem value take account replication factor vary file file Thus using determine data set fit need divide result call specific replication setting return unused byte capacity file system throws Exception public long capacity throws Exception Context get Exec Type Local throw new Exception capacity supported non local execution else Data Storage dds Context get Dfs Map String Object stats dds get Statistics String raw Capacity Str String stats get Data Storage String raw Used Str String stats get Data Storage raw Capacity Str null raw Used Str null throw new Exception Failed retrieve capacity stats long raw Capacity Bytes new Long raw Capacity Str long Value long raw Used Bytes new Long raw Used Str long Value return raw Capacity Bytes raw Used Bytes Returns length file bytes exists accounts replication param filename return length file bytes throws Exception public long file Size String filename throws Exception Data Storage dfs Context get Dfs Element Descriptor elem dfs Element filename Map String Object stats elem get Statistics long length Long stats get Element Descriptor int replication Short stats get Element Descriptor return length replication Test whether file exists param filename test return true file exists false otherwise throws Exception public boolean exists File String filename throws Exception Element Descriptor elem Context get Dfs Element filename return elem exists Delete file param filename delete return true throws Exception public boolean delete File String filename throws Exception Check operation permitted filter validate Command Filter Command filter validate Command Filter Command Element Descriptor elem Context get Dfs Element filename elem delete return true Rename file param source file rename param target new file name return true throws Exception public boolean rename File String source String target throws Exception Check operation permitted filter validate Command Filter Command Context rename source target return true Make directory param dirs directory make return true throws Exception public boolean mkdirs String dirs throws Exception Check operation permitted filter validate Command Filter Command Container Descriptor container Context get Dfs Container dirs container create return true List contents directory param dir name directory list return array strings one file name throws Exception public String list Paths String dir throws Exception Check operation permitted filter validate Command Filter Command Collection String Paths new Array List String Container Descriptor container Context get Dfs Container dir Iterator Element Descriptor iter container iterator iter Next Element Descriptor elem iter next Paths add elem String String type new String return Paths Array type Return map containing logical plan associated alias return map public Map String Logical Plan get Aliases Map String Logical Plan alias Plans new Hash Map String Logical Plan Logical Relational Operator op curr get Aliases key Set String alias op get Alias null alias alias Plans put alias curr get Aliases get op return alias Plans Reclaims resources used instance Server method deletes temporary files generated current thread executing commands public void shutdown clean activities reclaim scope free resources Currently implemented throws exception hence wo n call Context get Execution Engine reclaim Scope scope File Localizer delete Temp Files Get set current aliases return set public Set String get Alias Key Set return curr get Alias Op key Set public Map Operator Data Bag get Examples String alias throws Exception try curr Batch alias null curr parse Query curr build Plan null execute curr parse Query curr skip Stores curr build Plan alias curr compile catch Exception e Since original script parsed anyway error parsing reason error files loaded load n exist anymore e print Stack Trace Example Generator exgen new Example Generator curr lp Context try return exgen get Examples catch Exec Exception e e print Stack Trace System throw new Exception Exec Exception e catch Exception e e print Stack Trace System throw new Exception Exception e public void print History boolean Numbers List String sc curr get Script Cache sc Empty int sc size Numbers System print System println sc get private void build Store Plan String alias throws Exception curr parse Query curr build Plan alias Batch alias null Compiler needs store leaf hence add store plan explain Query Parser Utils attach Store Plan scope curr lp fakefile null curr get Operator alias fake Context curr compile Compile execute current plan return throws Exception private Stats execute throws Exception Context get Properties set Property Context job Name job Priority null Context get Properties set Property Context job Priority plan stores plan executed ignored plan reused curr count Executed Stores curr compile curr lp size return Stats get Context get Properties set Property logical plan signature curr lp get Signature Stats stats execute Compiled Logical Plan return stats private Stats execute Compiled Logical Plan throws Exec Exception Frontend Exception discover features used script Script State get set Script Features curr lp curr lp optimize Context return launch Plan curr lp job pigexec common method launching jobs according logical plan param lp logical plan param job Name String containing job name used return Stats object throws Exec Exception throws Frontend Exception protected Stats launch Plan Logical Plan lp String job Name throws Exec Exception Frontend Exception Stats stats null try stats Context get Execution Engine launch lp job Name Context catch Exec Exception e throw e catch Frontend Exception e throw e catch Exception e lot exceptions thrown launcher Exec Exception let Else wrap int err Code String msg Unexpected error execution throw new Exec Exception msg err Code Exception e return stats testing n use throws Exception Suppress Warnings unused private Logical Plan build Lp throws Exception curr build Plan null curr compile return curr lp private Logical Relational Operator get Operator Alias String alias throws Exception build Store Plan alias Logical Relational Operator op Logical Relational Operator curr get Operator alias op null int err Code String msg plan alias describe throw new Frontend Exception msg err Code Exception false null return op Returns data associated Logical Plan makes sense call method query script registered one link register Query String link register Script Input Stream methods return Logical Plan Data public Logical Plan Data get Logical Plan Data return new Logical Plan Data curr lp class holds internal states grunt shell session protected class Graph private final Map Logical Relational Operator Logical Plan aliases new Hash Map Logical Relational Operator Logical Plan private Map String Operator operators new Hash Map String Operator private String last Rel private final List String script Cache new Array List String file Name Map contains filename canonical filename mappings done reparse cached script remember translation current directory might correct first parse private Map String String file Name Map new Hash Map String String private final boolean batch Mode private int processed Stores private Logical Plan lp private int current Line Num public Graph boolean batch Mode batch Mode batch Mode lp new Logical Plan Call back method counting executed stores private void count Executed Stores throws Frontend Exception List Store sinks Util get Logical Relational Operators lp Store class processed Stores sinks size Map Logical Relational Operator Logical Plan get Aliases return aliases Map String Operator get Alias Op return operators boolean Batch return batch Mode boolean Batch Empty Operator op lp get Sinks op instanceof Store return false return true void mark Executed public Logical Plan get Logical Plan return lp Get operator given alias raw plan Null found Operator get Operator String alias throws Frontend Exception return operators get alias public Logical Plan get Plan String alias throws Exception Logical Plan plan lp alias null Logical Relational Operator op Logical Relational Operator operators get alias op null int err Code String msg Unable find operator alias alias throw new Frontend Exception msg err Code Exception plan aliases get op return plan Build plan given alias Extra branches child branch alias ignored Dependent branch e scalar kept throws Exception void build Plan String alias throws Exception alias null skip Stores final Queue Operator queue new Linked List Operator alias null Operator op get Operator alias op null String msg Unable find operator alias alias throw new Frontend Exception msg Exception queue add op else List Store stores Util get Logical Relational Operators lp Store class Store op stores boolean add Sink true add successors loads List Operator succs lp get Successors op succs null succs size Operator succ succs succ instanceof Load add Sink false break add Sink queue add op Logical Plan plan new Logical Plan queue Empty Operator curr Op queue poll plan add curr Op List Operator preds lp get Predecessors curr Op preds null List Operator ops new Array List Operator preds Operator pred ops queue contains pred queue add pred plan connect pred curr Op visit expression associated curr Op refers operator operator also going enqueued curr Op accept new Expression Visitor plan new Dependency Order Walker plan Override protected Logical Expression Visitor get Visitor Logical Expression Plan expr Plan throws Frontend Exception return new Logical Expression Visitor expr Plan new Dependency Order Walker expr Plan Override public void visit Scalar Expression expr throws Frontend Exception Operator ref Op expr get Implicit Referenced Operator queue contains ref Op queue add ref Op curr Op set Plan plan lp plan Remove stores executed previously overall plan private void skip Stores throws Exception Get stores specifically List Store sinks Util get Logical Relational Operators lp Store class List Operator sinks Remove new Array List Operator int skip Count processed Stores skip Count Store sink sinks sinks Remove add sink skip Count skip Count break Operator op sinks Remove fully possible multiquery case store leaf sink therefor successors need removed remove Load op Operator pred lp get Predecessors op get lp disconnect pred op lp remove op private void remove Load Operator Remove throws Exception List Operator successors lp get Successors Remove List Operator succ Remove new Array List Operator successors null successors size succ Remove add successors Operator succ succ Remove lp disconnect Remove succ succ instanceof Load remove Load succ lp remove succ Accumulate given statement previous query statements generate overall raw plan void register Query String query int start Line boolean validate Statement boolean skip Parse Batch throws Exception batch Mode start Line current Line Num String line script Cache remove script Cache size script Cache add line query else start Line current Line Num script Cache add current Line Num Buffered Reader br new Buffered Reader new String Reader query String line br read Line line null script Cache add line current Line Num line br read Line skip Parse Batch return else script Cache add query validate Statement validate Query parse Query batch Mode build Plan null Operator sink lp get Sinks sink instanceof Store try execute catch Exception e int err Code String msg Unable store alias Store sink get Alias throw new Frontend Exception msg err Code Exception e break one store break private void validate Query throws Frontend Exception String query build Query Query Parser Driver parser Driver new Query Parser Driver Context scope file Name Map try Logical Plan plan parser Driver parse query plan validate Context scope true catch Frontend Exception ex script Cache remove script Cache size throw ex public List String get Script Cache return script Cache Parse accumulated statements generate overall plan private void parse Query throws Frontend Exception Context get Context reset Context get Context set Client System Props Context get Properties String query build Query query Empty lp new Logical Plan return try Query Parser Driver parser Driver new Query Parser Driver Context scope file Name Map lp parser Driver parse query operators parser Driver get Operators last Rel parser Driver get Last Rel catch Exception ex script Cache remove script Cache size remove bad script cache Exception pe Log Utils get Exception ex int err Code String msg Error parsing pe null ex get Message pe get Message log error exception parsing msg ex null pe throw new Frontend Exception msg err Code Exception ex else throw new Frontend Exception msg err Code Exception ex pe get Source Location public String get Last Rel return last Rel private String build Query String Builder accu Query new String Builder String line script Cache accu Query append line n return accu Query String private void compile throws Exception lp validate Context scope false curr post Process private void post Process throws Exception following code deals store load combination intermediate files case replace load operator implicit split operator iff load store func reversible safely skip load keep going split output load store func reversible different functions connect store load remember dependency Set Load load Ops new Hash Set Load List Operator sources lp get Sources Operator source sources source instanceof Load load Ops add Load source Set Store store Ops new Hash Set Store List Operator sinks lp get Sinks Operator sink sinks sink instanceof Store store Ops add Store sink true equals Context get Properties get Property log info Output location strick check enabled check Duplicate Store Loc store Ops Load load load Ops Store store store Ops String ifile load get File Spec get File Name String ofile store get File Spec get File Name ofile equals ifile path load store connect store load create dependency store load path load store connect store load create cycle store get Plan path Exists load store store get Plan connect store load method checks whether multiple sinks use file based location yes throws Runtime Exception param store Ops private void check Duplicate Store Loc Set Store store Ops Set String unique Store Loc new Hash Set String Store store store Ops String file Name store get File Spec get File Name unique Store Loc add file Name Uri Util File Local file Name new Configuration true throw new Runtime Exception Script contains statements writing location file Name protected Graph duplicate two choices duplicate logical plan really clone operator connect cloned operators cache away script till point need clone simply parse script latter approach used one open issue Consider following script load file somefile filter store bla rm file somefile load file someotherfile try clone try reparse beginning currently parser checks file existence files load case file local one e file prefix known issue need revisit later parse line cached script int line Number create data structures needed parsing Graph graph new Graph Batch graph processed Stores processed Stores graph file Name Map new Hash Map String String file Name Map try Iterator String script Cache iterator Next line Number always register Query irrespective batch mode Need figure anything different needs happen batch mode n validation set validate Statement param false graph register Query next line Number false false graph post Process catch Exception ioe ioe print Stack Trace graph null return graph called indicate query parsed compiled mode expects statement validated entered instead whole script param validate Statement public void set Validate Statement boolean validate Statement validate Statement validate Statement Set whether skip parsing registering query batch mode param skip Parse Register Batch public void set Skip Parse Register Batch boolean skip Parse Register Batch skip Parse Register Batch skip Parse Register Batch public String get Last Rel return curr get Last Rel public boolean Debug Logger get Logger org apache get Level Level return true else return false public String get Job Name return job Name public String get Job Priority return job Priority
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools pigstats import java util Array List import java util Collections import java util Comparator import java util Iterator import java util List import java util Map import java util Properties import org apache commons collections Iterator Utils import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop fs Path import org apache hadoop mapred Job Client import org apache Exception import org apache Runner Return Code import org apache classification Interface Audience import org apache classification Interface Audience Private import org apache classification Interface Stability import org apache impl Context import org apache impl logical Layer Frontend Exception import org apache impl util Spillable Memory Manager import org apache newplan Base Operator Plan import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache tools pigstats Job Stats Job State import com google common collect Maps Stats encapsulates statistics collected running script includes status execution Hadoop jobs well information outputs inputs script Interface Audience Public Interface Stability Evolving public abstract class Stats private static final Log Log Factory get Log Stats class private static Thread Local Stats tps new Thread Local Stats protected static final String yyyy dd mm ss protected long start Time protected long end Time protected String user Id protected Job Graph job Plan protected Context Context protected Map String Output Stats alias Ouput Map protected int error Code protected String error Message null protected Throwable error Throwable null protected int return Code Return Code public static Stats get return tps get public static Stats start Stats stats tps set stats return tps get Returns code defined link Return Code public int get Return Code return return Code Returns error message string public String get Error Message return error Message Returns error code link Exception public int get Error Code return error Code Returns error code link Exception public Throwable get Error Throwable return error Throwable Deprecated public abstract Job Client get Job Client public abstract boolean Embedded public boolean Successful return get Number Jobs return Code Return Code return Code Return Code public abstract Map String List Stats get Stats public abstract List String get Error Messages Returns properties associated script public Properties get Properties Context null return null return Context get Properties Returns display message grunt public abstract String get Display String Returns jobs spawned script public Job Graph get Job Graph return job Plan Returns list output locations script public List String get Output Locations Array List String locations new Array List String Output Stats output get Output Stats locations add output get Location return Collections unmodifiable List locations Returns list output names script public List String get Output Names Array List String names new Array List String Output Stats output get Output Stats names add output get Name return Collections unmodifiable List names Returns number bytes given output location invalid location name public long get Number Bytes String location location null return String name new Path location get Name long count Output Stats output get Output Stats name equals output get Name count output get Bytes break return count Returns number records given output location invalid location name public long get Number Records String location location null return String name new Path location get Name long count Output Stats output get Output Stats name equals output get Name count output get Number Records break return count Returns alias associated output location public String get Output Alias String location location null return null String name new Path location get Name String alias null Output Stats output get Output Stats name equals output get Name alias output get Alias break return alias Returns total spill counts link Spillable Memory Manager public abstract long get Spill Count Returns total number bags spilled proactively public abstract long get Proactive Spill Count Objects Returns total number records spilled proactively public abstract long get Proactive Spill Count Records Returns total bytes written user specified locations script public long get Bytes Written Iterator Job Stats job Plan iterator long ret Next long n next get Bytes Written n ret n return ret Returns total number records user specified output locations script public long get Record Written Iterator Job Stats job Plan iterator long ret Next long n next get Record Writtern n ret n return ret public String get Hadoop Version return Script State get get Hadoop Version public String get Version return Script State get get Version Returns contents script run public String get Script return Script State get get Script public String get Script Id return Script State get get Id public String get File Name return Script State get get File Name public String get Features return Script State get get Script Features public long get Duration return start Time end Time end Time start Time Returns number jobs script public int get Number Jobs return job Plan size public List Output Stats get Output Stats List Output Stats outputs new Array List Output Stats Iterator Job Stats iter job Plan iterator iter Next Output Stats os iter next get Outputs outputs add os return Collections unmodifiable List outputs public Output Stats result String alias alias Ouput Map null alias Ouput Map Maps new Hash Map Iterator Job Stats iter job Plan iterator iter Next Output Stats os iter next get Outputs String os get Alias null length warn Output alias n avalable os get Location continue alias Ouput Map put os return alias Ouput Map get alias public List Input Stats get Input Stats List Input Stats inputs new Array List Input Stats Iterator Job Stats iter job Plan iterator iter Next Input Stats iter next get Inputs inputs add return Collections unmodifiable List inputs public void set Error Message String error Message error Message error Message public void set Error Code int error Code error Code error Code public void set Error Throwable Throwable error Throwable public void set Return Code int return Code return Code return Code class prints Job Graph public static class Job Graph Printer extends Plan Visitor String Buffer buf protected Job Graph Printer Operator Plan plan super plan new org apache newplan Dependency Order Walker plan buf new String Buffer public void visit Job Stats op throws Frontend Exception buf append op get Job Id List Operator succs plan get Successors op succs null buf append Operator p succs buf append Job Stats p get Job Id append buf append n Override public String String buf append n return buf String Job Graph link Operator Plan whose members link Job Stats public static class Job Graph extends Base Operator Plan implements Iterable Job Stats Override public String String Job Graph Printer jp new Job Graph Printer try jp visit catch Frontend Exception e warn unable print job plan e return jp String Returns List representation Job graph Returned list Array List return List Job Stats Suppress Warnings unchecked public List Job Stats get Job List return Iterator Utils List iterator public Iterator Job Stats iterator return new Iterator Job Stats private Iterator Operator iter get Operators Override public boolean Next return iter Next Override public Job Stats next return Job Stats iter next Override public void remove public boolean Connected Operator Operator List Operator succs null succs get Successors succs null Operator succ succs succ get Name equals get Name Connected succ return true return false public List Job Stats get Successful Jobs Array List Job Stats lst new Array List Job Stats Iterator Job Stats iter iterator iter Next Job Stats js iter next js get State Job State lst add js Collections sort lst new Job Comparator return lst public List Job Stats get Failed Jobs Array List Job Stats lst new Array List Job Stats Iterator Job Stats iter iterator iter Next Job Stats js iter next js get State Job State lst add js return lst private static class Job Comparator implements Comparator Job Stats Override public int compare Job Stats Job Stats return get Job Id compare get Job Id Private public void set Backend Exception String job Id Exception e e instanceof Exception error Exception e get Error Code e get Localized Message else e null error e get Localized Message job Id null e null debug unable set backend exception return Iterator Job Stats iter job Plan iterator iter Next Job Stats js iter next job Id equals js get Job Id js set Backend Exception e break Private public Context get Context return Context public void start start Time System current Time Millis user Id System get Property user name public void stop end Time System current Time Millis int failed get Number Failed Jobs int succeeded get Number Successful Jobs failed succeeded succeeded job Plan size return Code Return Code else succeeded succeeded job Plan size return Code Return Code else return Code Return Code public int get Number Successful Jobs Iterator Job Stats iter job Plan iterator int count iter Next iter next get State Job State count return count public int get Number Failed Jobs Iterator Job Stats iter job Plan iterator int count iter Next iter next get State Job State count return count
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools pigstats import java util List import java util Map import java util regex Matcher import java util regex Pattern import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache tools pigstats mapreduce Stats Util import org apache tools pigstats mapreduce Simple Stats utility class Statistics public class Stats Util public static final String public static final String public static final String public static final String public static final String public static final String public static final String public static final String public static final String Input records public static final String Multi Input Counters public static final String Output records public static final String Multi Store Counters deprecated use link org apache tools pigstats mapreduce Stats Util instead Deprecated public static final String org apache hadoop mapred Task Counter deprecated use link org apache tools pigstats mapreduce Stats Util instead Deprecated public static final String Stats Util Returns empty Stats object Use method advised return execution engine version Stats default necessarily empty depending timing return empty Stats object Deprecated public static Stats get Empty Stats return Stats start new Simple Stats Returns Stats given return code param code return code return Stats given return code public static Stats get Stats int code Stats ps Stats get ps null ps Stats start new Empty Stats ps set Return Code code return ps public static void set Error Message String msg Stats ps Stats get ps null ps Stats start new Empty Stats ps set Error Message msg public static void set Error Code int code Stats ps Stats get ps null ps Stats start new Empty Stats ps set Error Code code public static void set Error Throwable Throwable Stats ps Stats get ps null ps Stats start new Empty Stats ps set Error Throwable private static Pattern pattern Pattern compile tmp public static boolean Temp File String file Name Matcher result pattern matcher file Name return result find public static void set Stats Map Map String List Stats stats Map Stats start new Embedded Stats stats Map Returns counter name given input file name param fname input file name return counter name public static String get Multi Inputs Counter Name String fname int index String short Name get Short Name fname return short Name null null index short Name Returns counter name given link Store param store Store return counter name public static String get Multi Store Counter Name Store store String short Name get Short Name store get File get File Name return short Name null null store get Index short Name Restrict total string size counter name characters Leave characters prefix string private static final int private static final String private static final String public static String get Short Name String uri int scolon uri index int slash scolon slash uri last Index scolon else slash uri last Index String short Name null scolon short Name uri substring slash slash scolon short Name uri substring slash scolon short Name null short Name length short Name short Name substring short Name length return short Name
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools pigstats import org apache hadoop mapreduce Counter import org apache hadoop mapreduce Status Reporter import org apache hadoop util Progressable import org apache backend hadoop executionengine Task Context import org apache classification Interface Audience import org apache classification Interface Stability Interface Audience Public Interface Stability Evolving public class Status Reporter extends Status Reporter implements Progressable Warn Counter private static Status Reporter reporter null private Task Context context null Static Data Cleanup public static void static Data Cleanup reporter null private Status Reporter Get singleton instance context public static Status Reporter get Instance reporter null reporter new Status Reporter return reporter public void set Context Task Context context context context deprecated use link org apache tools pigstats Status Reporter incr Counter instead method returns counter compatible Tez mode Use incr Counter compatible Tez mode Override Deprecated public Counter get Counter Enum name return context null null context get Counter name deprecated use link org apache tools pigstats Status Reporter incr Counter instead method returns counter compatible Tez mode Use incr Counter compatible Tez mode Override Deprecated public Counter get Counter String group String name return context null null context get Counter group name public boolean incr Counter Enum name long incr return context null false context incr Counter name incr public boolean incr Counter String group String name long incr return context null false context incr Counter group name incr Override public boolean incr Warn Counter Enum name Object incr return incr Counter name Long incr Override public boolean incr Warn Counter String group String name Object incr return incr Counter group name Long incr Override public void progress context null context progress Override public void set Status String status context null context set Status status public float get Progress return context null f context get Progress
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Array List import java util Arrays import java util List import java util Properties import org apache commons cli Command Line import org apache commons cli Command Line Parser import org apache commons cli Gnu Parser import org apache commons cli Help Formatter import org apache commons cli Option import org apache commons cli Options import org apache commons cli Parse Exception import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop io Text import org apache hadoop io compress Zip Codec import org apache hadoop io compress Compression Codec import org apache hadoop io compress Gzip Codec import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Job import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce Record Writer import org apache hadoop mapreduce lib input File Input Format import org apache hadoop mapreduce lib input File Split import org apache hadoop mapreduce lib output File Output Format import org apache Expression import org apache File Input Load Func import org apache Load Caster import org apache Load Func import org apache Load Metadata import org apache Load Push import org apache Overwritable Store Func import org apache Configuration import org apache Exception import org apache Resource Schema import org apache Resource Schema Resource Field Schema import org apache Resource Statistics import org apache Store Func import org apache Store Func Interface import org apache Store Metadata import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Configuration import org apache backend hadoop executionengine map Reduce Layer Split import org apache backend hadoop executionengine map Reduce Layer Text Input Format import org apache backend hadoop executionengine map Reduce Layer Text Output Format import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache bzip r Bzip Text Input Format import org apache data Data Byte Array import org apache data Tuple import org apache data Tuple Factory import org apache impl logical Layer Frontend Exception import org apache impl util Cast Utils import org apache impl util Object Serializer import org apache impl util Storage Util import org apache impl util Context import org apache impl util Utils import org apache parser Parser Exception load function parses line input fields using character delimiter default delimiter tab specify character literal known escape character dec hex value u x p optional second constructor argument provided allows one customize advanced behaviors list available options ul li code schema code Reads Stores schema relation using hidden file li code noschema code Ignores stored schema loading li code tag File code Appends input source file name beginning tuple li code tag Path code Appends input source file path beginning tuple ul p h Schemas h code schema code specified hidden schema file created output directory storing data used Storage without schema loading determine field names types data without need user explicitly provide schema code code clause unless code noschema code specified attempt merge conflicting schemas made loading first schema encountered file system scan used schema file present schema option used loading results error p addition using code schema code drops headers file output directory file simply lists delimited aliases intended make export tools read files header lines easier cat header data p h Source tagging h code tag File code specified Storage prepend input split name Tuple row Usage input using Storage tag File foreach generate first field th index Tuple contain input file name code tag Path code specified Storage prepend input split path Tuple row Usage input using Storage tag Path foreach generate first field th index Tuple contain input file path p Note regardless whether store schema b always b need specify correct delimiter read data store reading delimiter load using default delimiter data parsed correctly h Compression h Storing directory whose name ends bz gz lzo installed support compression Hadoop automatically use corresponding compression codec br code output compression enabled code code output compression codec code job properties also work p Loading directories ending bz bz works automatically compression formats auto detected loading Suppress Warnings unchecked public class Storage extends File Input Load Func implements Store Func Interface Load Push Load Metadata Store Metadata Overwritable Store Func protected Record Reader null protected Record Writer writer null protected final Log Log Log Factory get Log get Class protected String signature private byte field Del private Array List Object Proto Tuple null private Tuple Factory Tuple Factory Tuple Factory get Instance private String load Location boolean Schema false boolean dont Load Schema false boolean overwrite Output false protected Resource Schema schema protected Load Caster caster protected boolean Required Columns null private boolean Required Columns Initialized false Indicates whether input file name path read private boolean tag File false private static final String tag File private boolean tag Path false private static final String tag Path private Path source Path null determines whether depend Bzip Text Input Format simply depend hadoop handling bzip inputs private boolean bzipinput usehadoops private Options populate Valid Options Options valid Options new Options valid Options add Option schema false Loads Stores schema relation using hidden file valid Options add Option noschema false Disable attempting load data schema filesystem valid Options add Option false Appends input source file name beginning tuple valid Options add Option false Appends input source file path beginning tuple valid Options add Option tagsource false Appends input source file name beginning tuple Option overwrite new Option overwrite Overwrites destination overwrite set Long Opt overwrite overwrite set Optional Arg true overwrite set Args overwrite set Arg Name overwrite valid Options add Option overwrite return valid Options public Storage Constructs loader uses specified character field delimiter param delimiter single byte character used separate fields default throws Parse Exception public Storage String delimiter delimiter Constructs loader uses specified character field delimiter p Understands following options specified second paramter ul li code schema code Loads Stores schema relation using hidden file li code noschema code Ignores stored schema loading li code tag File code Appends input source file name beginning tuple li code tag Path code Appends input source file path beginning tuple ul param delimiter single byte character used separate fields param options list options used modify Storage behavior throws Parse Exception public Storage String delimiter String options field Del Storage Util parse Field Del delimiter Options valid Options populate Valid Options String opts Arr options split try Command Line Parser parser new Gnu Parser Command Line configured Options parser parse valid Options opts Arr Schema configured Options Option schema configured Options Option overwrite String value configured Options get Option Value overwrite true equals Ignore Case value overwrite Output true dont Load Schema configured Options Option noschema tag File configured Options Option tag Path configured Options Option Remove tagsource backward compatibility need tagsource supported least configured Options Option tagsource Log warn tagsource deprecated Use tag File instead tag File true catch Parse Exception e Help Formatter formatter new Help Formatter formatter print Help Storage options valid Options wrap exception Runtime exception existing loaders extend Storage n break throw new Runtime Exception e Override public Tuple get Next throws Exception Proto Tuple new Array List Object Required Columns Initialized signature null Properties p Context get Context get Properties get Class Required Columns boolean Object Serializer deserialize p get Property signature Required Columns Initialized true Prepend input source path source tagging enabled tag File Proto Tuple add new Data Byte Array source Path get Name else tag Path Proto Tuple add new Data Byte Array source Path String try boolean Done next Key Value Done return null Text value Text get Current Value byte buf value get Bytes int len value get Length int start int field int len buf field Del Required Columns null Required Columns length field Required Columns field add Tuple Value Proto Tuple buf start start field pick last field start len Required Columns null Required Columns length field Required Columns field add Tuple Value Proto Tuple buf start len Tuple Tuple Factory new Tuple Copy Proto Tuple return dont Load Schema apply Schema catch Interrupted Exception e int err Code String err Msg Error reading input throw new Exec Exception err Msg err Code Exception e private Tuple apply Schema Tuple tup throws Exception caster null caster get Load Caster signature null schema null Properties p Context get Context get Properties get Class new String signature String serialized Schema p get Property signature schema serialized Schema null return tup try schema new Resource Schema Utils get Schema String serialized Schema catch Parser Exception e Log error Unable parse serialized schema serialized Schema e bets guarantee return either fields data fields schema user specified required schema null Resource Field Schema field Schemas schema get Fields int tuple Idx fields projected tuple contains required fields walk required Columns array find required fields cast int field Schemas length Required Columns null Required Columns length Required Columns tuple Idx tup size tup append null Object val null tup get tuple Idx null byte bytes Data Byte Array tup get tuple Idx get val Cast Utils convert Type caster bytes field Schemas field Schemas get Type tup set tuple Idx val tuple Idx input record somehow fields provided schema drop extra fields tup size field Schemas length int lastindex tup size List Object list tup get int lastindex field Schemas length list remove Tuple get may return reference interal List creating new Tuple tup Tuple Factory new Tuple Copy list return tup Override public void put Next Tuple f throws Exception try writer write null f catch Interrupted Exception e throw new Exception e private void add Tuple Value Array List Object tuple byte buf int start int end tuple add read Field buf start end Read bytes start end Data Byte Array inclusion return tuple param bytes byte array copy data param start starting point copy param end ending point copy exclusive return protected Data Byte Array read Field byte bytes int start int end start end return null else return new Data Byte Array bytes start end Override public Required Field Response push Projection Required Field List required Field List throws Frontend Exception required Field List null return null required Field List get Fields null int last Column Required Field rf required Field List get Fields rf get Index last Column last Column rf get Index Required Columns new boolean last Column Required Field rf required Field List get Fields rf get Index Required Columns rf get Index true Properties p Context get Context get Properties get Class try p set Property signature Object Serializer serialize Required Columns catch Exception e throw new Runtime Exception serialize Required Columns return new Required Field Response true Override public boolean equals Object obj obj instanceof Storage return equals Storage obj else return false public boolean equals Storage return field Del field Del Override public Input Format get Input Format load Location ends bz load Location ends bz bzipinput usehadoops Log info Using Bzip Text Input Format return new Bzip Text Input Format else Log info Using Text Input Format return new Text Input Format Override public void prepare Read Record Reader reader Split split reader tag File tag Path source Path File Split split get Wrapped Split get Path Override public void set Location String location Job job throws Exception load Location location File Input Format set Input Paths job location bzipinput usehadoops job get Configuration get Boolean Configuration true Override public Output Format get Output Format return new Text Output Format field Del Override public void prepare Write Record Writer writer writer writer Override public void set Store Location String location Job job throws Exception job get Configuration set Configuration File Output Format set Output Path job new Path location true equals job get Configuration get output compression enabled File Output Format set Compress Output job true String codec job get Configuration get output compression codec try File Output Format set Output Compressor Class job Class extends Compression Codec Class Name codec catch Class Found Exception e throw new Runtime Exception Class found codec else makes storing directory ending gz bz works set Compression new Path location job private void set Compression Path path Job job String location path get Name location ends bz location ends bz File Output Format set Compress Output job true File Output Format set Output Compressor Class job Zip Codec class else location ends gz File Output Format set Compress Output job true File Output Format set Output Compressor Class job Gzip Codec class else File Output Format set Compress Output job false Override public void check Schema Resource Schema throws Exception Override public String rel Abs Path Store Location String location Path cur Dir throws Exception return Load Func get Absolute Path location cur Dir Override public int hash Code return field Del Override public void set Context Signature String signature signature signature Override public List Operator Set get Features return Arrays List Load Push Operator Set Override public void set Store Func Context Signature String signature Override public void cleanup Failure String location Job job throws Exception Store Func cleanup Failure Impl location job Override public void cleanup Success String location Job job throws Exception nothing Implementation Load Meta Data interface Override public Resource Schema get Schema String location Job job throws Exception dont Load Schema schema new Json Metadata get Schema location job Schema signature null schema null tag File schema Utils get Schema Input Source Tag schema else tag Path schema Utils get Schema Input Source Tag schema Properties p Context get Context get Properties get Class new String signature p set Property signature schema schema String return schema Override public Resource Statistics get Statistics String location Job job throws Exception return null Override public void set Partition Filter Expression partition Filter throws Exception Override public String get Partition Keys String location Job job throws Exception return null Implementation Store Metadata Override public void store Schema Resource Schema schema String location Job job throws Exception Schema Json Metadata metadata Writer new Json Metadata byte record Del n metadata Writer set Field Del field Del metadata Writer set Record Del record Del metadata Writer store Schema schema location job Override public void store Statistics Resource Statistics stats String location Job job throws Exception Override public boolean Overwrite return overwrite Output Override public void cleanup Output Store store Job job throws Exception Configuration conf job get Configuration String output conf get Configuration Path output Path null output null output Path new Path output File System fs output Path get File System conf try fs delete output Path true catch Exception e Log warn Could delete output output
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache enum enumerate warning types public enum Warning placeholder warnings placeholder warnings placeholder warnings placeholder warnings placeholder warnings placeholder warnings placeholder warnings placeholder warnings placeholder warnings placeholder warnings placeholder warnings placeholder warnings bulk collection warnings Spark exec engine custom warnings see
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer util import java net import java util Linked List import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop fs Path import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Add import org apache backend hadoop executionengine physical Layer expression Operators Constant Expression import org apache backend hadoop executionengine physical Layer expression Operators Divide import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Greater Expr import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators Less Expr import org apache backend hadoop executionengine physical Layer expression Operators Mod import org apache backend hadoop executionengine physical Layer expression Operators Multiply import org apache backend hadoop executionengine physical Layer expression Operators Equal Expr import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators Bin Cond import org apache backend hadoop executionengine physical Layer expression Operators Cast import org apache backend hadoop executionengine physical Layer expression Operators Null import org apache backend hadoop executionengine physical Layer expression Operators Map Look import org apache backend hadoop executionengine physical Layer expression Operators Negative import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators import org apache backend hadoop executionengine physical Layer expression Operators Project import org apache backend hadoop executionengine physical Layer expression Operators Regexp import org apache backend hadoop executionengine physical Layer expression Operators User Comparison Func import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer expression Operators Subtract import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Collected Group import org apache backend hadoop executionengine physical Layer relational Operators Cross import org apache backend hadoop executionengine physical Layer relational Operators Demux import org apache backend hadoop executionengine physical Layer relational Operators Distinct import org apache backend hadoop executionengine physical Layer relational Operators Join import org apache backend hadoop executionengine physical Layer relational Operators Filter import org apache backend hadoop executionengine physical Layer relational Operators import org apache backend hadoop executionengine physical Layer relational Operators Global Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Limit import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Merge Cogroup import org apache backend hadoop executionengine physical Layer relational Operators Merge Join import org apache backend hadoop executionengine physical Layer relational Operators Native import org apache backend hadoop executionengine physical Layer relational Operators Optimized import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Partial Agg import org apache backend hadoop executionengine physical Layer relational Operators Partition Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Poisson Sample import org apache backend hadoop executionengine physical Layer relational Operators Pre Combiner Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Reservoir Sample import org apache backend hadoop executionengine physical Layer relational Operators Skewed Join import org apache backend hadoop executionengine physical Layer relational Operators Sort import org apache backend hadoop executionengine physical Layer relational Operators Split import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer relational Operators Stream import org apache backend hadoop executionengine physical Layer relational Operators Union import org apache impl plan Dependency Order Walker import org apache impl plan Operator Key import org apache impl plan Visitor Exception import com google common collect Lists Utility class helper functions deal physical plans public class Plan Helper private final static Log log Log Factory get Log new Plan Helper get Class private Plan Helper Creates relative path used build temporary place store output number map reduce tasks public static String make Store Tmp Path String orig Path path new Path orig uri path Uri uri normalize String path Str uri get Path path Absolute return new Path abs path Str String else return new Path rel path Str String public static extends Physical Operator boolean contains Physical Operator Physical Plan plan Class op Class throws Visitor Exception Op Finder finder new Op Finder plan op Class finder visit return finder plan Contains Op Returns Linked List operators contained within physical plan implement supplied class dependency order Returns empty Linked List operators exist param plan param op Class return Linked List operators contained within plan implement supplied class empty ops exist throws Visitor Exception public static Linked List get Physical Operators Physical Plan plan Class op Class throws Visitor Exception Op Finder finder new Op Finder plan op Class finder visit return finder get Found Ops Finds Local Rearrange Split sub plan param plan physical plan param rearrange Key operator key Local Rearrange return Local Rearrange specified operator key sub plan Split throws Visitor Exception public static Physical Plan get Local Rearrange Plan Split Physical Plan plan Operator Key rearrange Key throws Visitor Exception List Split splits Plan Helper get Physical Operators plan Split class Split split splits Physical Plan sub Plan split get Plans sub Plan get Operator rearrange Key null return sub Plan return plan private static class Op Finder extends Phy Plan Visitor final Class op Class private Linked List found Ops Lists new Linked List public Op Finder Physical Plan plan Class op Class super plan new Dependency Order Walker Physical Operator Physical Plan plan op Class op Class public Linked List get Found Ops return found Ops public boolean plan Contains Op return found Ops Empty Override Suppress Warnings unchecked public void visit Physical Operator op op Class Assignable op get Class found Ops add op Override public void visit Load Load ld throws Visitor Exception super visit Load ld visit ld Override public void visit Store Store st throws Visitor Exception super visit Store st visit st Override public void visit Native Native nat throws Visitor Exception super visit Native nat visit nat Override public void visit Filter Filter fl throws Visitor Exception super visit Filter fl visit fl Override public void visit Collected Group Collected Group mg throws Visitor Exception super visit Collected Group mg visit mg Override public void visit Local Rearrange Local Rearrange lr throws Visitor Exception super visit Local Rearrange lr visit lr Override public void visit Global Rearrange Global Rearrange gr throws Visitor Exception super visit Global Rearrange gr visit gr Override public void visit Package Package pkg throws Visitor Exception super visit Package pkg visit pkg Override public void visit nfe throws Visitor Exception super visit nfe visit nfe Override public void visit Union Union un throws Visitor Exception super visit Union un visit un Override public void visit Split Split spl throws Visitor Exception super visit Split spl visit spl Override public void visit Demux Demux demux throws Visitor Exception super visit Demux demux visit demux Override public void visit Distinct Distinct distinct throws Visitor Exception super visit Distinct distinct visit distinct Override public void visit Sort Sort sort throws Visitor Exception super visit Sort sort visit sort Override public void visit Constant Constant Expression cnst throws Visitor Exception super visit Constant cnst visit cnst Override public void visit Project Project proj throws Visitor Exception super visit Project proj visit proj Override public void visit Greater Greater Expr grt throws Visitor Exception super visit Greater grt visit grt Override public void visit Less Less Expr lt throws Visitor Exception super visit Less lt visit lt Override public void visit Equal Equal Expr gte throws Visitor Exception super visit Equal gte visit gte Override public void visit Equal Equal Expr lte throws Visitor Exception super visit Equal lte visit lte Override public void visit Equal Equal Expr eq throws Visitor Exception super visit Equal eq visit eq Override public void visit Equal Equal Expr eq throws Visitor Exception super visit Equal eq visit eq Override public void visit Regexp Regexp throws Visitor Exception super visit Regexp visit Override public void visit Null Null Null throws Visitor Exception super visit Null Null visit Null Override public void visit Add Add add throws Visitor Exception super visit Add add visit add Override public void visit Subtract Subtract sub throws Visitor Exception super visit Subtract sub visit sub Override public void visit Multiply Multiply mul throws Visitor Exception super visit Multiply mul visit mul Override public void visit Divide Divide dv throws Visitor Exception super visit Divide dv visit dv Override public void visit Mod Mod mod throws Visitor Exception super visit Mod mod visit mod Override public void visit throws Visitor Exception super visit visit Override public void visit throws Visitor Exception super visit visit Override public void visit throws Visitor Exception super visit visit Override public void visit Bin Cond Bin Cond bin Cond super visit Bin Cond bin Cond visit bin Cond Override public void visit Negative Negative negative super visit Negative negative visit negative Override public void visit User Func User Func user Func throws Visitor Exception super visit User Func user Func visit user Func Override public void visit Comparison Func User Comparison Func comp Func throws Visitor Exception super visit Comparison Func comp Func visit comp Func Override public void visit Map Look Map Look map Look super visit Map Look map Look visit map Look Override public void visit Cast Cast cast super visit Cast cast visit cast Override public void visit Limit Limit lim throws Visitor Exception super visit Limit lim visit lim Override public void visit Cross Cross cross throws Visitor Exception super visit Cross cross visit cross Override public void visit Join Join join throws Visitor Exception super visit Join join visit join Override public void visit Merge Join Merge Join join throws Visitor Exception super visit Merge Join join visit join Override public void visit Merge Co Group Merge Cogroup merge Co Grp throws Visitor Exception super visit Merge Co Group merge Co Grp visit merge Co Grp Override public void visit Stream Stream stream throws Visitor Exception super visit Stream stream visit stream Override public void visit Skewed Join Skewed Join sk throws Visitor Exception super visit Skewed Join sk visit sk Override public void visit Partition Rearrange Partition Rearrange pr throws Visitor Exception super visit Partition Rearrange pr visit pr Override public void visit Optimized Optimized optimized throws Visitor Exception super visit Optimized optimized visit optimized Override public void visit Pre Combiner Local Rearrange Pre Combiner Local Rearrange pre Combiner Local Rearrange throws Visitor Exception super visit Pre Combiner Local Rearrange pre Combiner Local Rearrange visit pre Combiner Local Rearrange Override public void visit Partial Agg Partial Agg po Partial Agg throws Visitor Exception super visit Partial Agg po Partial Agg visit po Partial Agg Override public void visit Reservoir Sample Reservoir Sample reservoir Sample throws Visitor Exception super visit Reservoir Sample reservoir Sample visit reservoir Sample Override public void visit Poisson Sample Poisson Sample poisson Sample throws Visitor Exception super visit Poisson Sample poisson Sample visit poisson Sample
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer plans import java io Byte Array Output Stream import java io Exception import java io Output Stream import java io Print Stream import java util Array List import java util Collection import java util Collections import java util Hash Set import java util List import java util Set import org apache Exception import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer relational Operators Multi Query Packager import org apache backend hadoop executionengine physical Layer relational Operators Collected Group import org apache backend hadoop executionengine physical Layer relational Operators Counter import org apache backend hadoop executionengine physical Layer relational Operators Demux import org apache backend hadoop executionengine physical Layer relational Operators Join import org apache backend hadoop executionengine physical Layer relational Operators Filter import org apache backend hadoop executionengine physical Layer relational Operators import org apache backend hadoop executionengine physical Layer relational Operators Global Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Limit import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Package import org apache backend hadoop executionengine physical Layer relational Operators Partial Agg import org apache backend hadoop executionengine physical Layer relational Operators Rank import org apache backend hadoop executionengine physical Layer relational Operators Skewed Join import org apache backend hadoop executionengine physical Layer relational Operators Sort import org apache backend hadoop executionengine physical Layer relational Operators Split import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache backend hadoop executionengine physical Layer relational Operators Union import org apache backend hadoop executionengine physical Layer relational Operators Packager import org apache impl plan Depth First Walker import org apache impl plan Operator import org apache impl plan Operator Plan import org apache impl plan Plan Visitor import org apache impl plan Visitor Exception import org apache impl util Multi Map public class Plan Printer extends Operator extends Operator Plan extends Plan Visitor String String String Sep n String Sep n int level Cntr Print Stream stream System boolean Verbose true public Plan Printer plan super plan new Depth First Walker plan public Plan Printer plan Print Stream stream super plan new Depth First Walker plan stream stream public void set Verbose boolean verbose Verbose verbose Override public void visit throws Visitor Exception try stream write depth First get Bytes catch Exception ioe int err Code String msg Unexpected error printing physical plan throw new Visitor Exception msg err Code Exception ioe public void print Output Stream printer throws Visitor Exception Exception printer write depth First get Bytes protected void breadth First throws Visitor Exception List leaves Plan get Leaves Set seen new Hash Set breadth First leaves seen Suppress Warnings unchecked private void breadth First Collection predecessors Set seen throws Visitor Exception level Cntr disp Tabs List new Predecessors new Array List pred predecessors seen add pred List pred Lst Plan get Predecessors pred pred Lst null new Predecessors add pred Lst pred visit new Predecessors size stream println breadth First new Predecessors seen Suppress Warnings unchecked protected String depth First throws Visitor Exception String Builder sb new String Builder List leaves Plan get Leaves Collections sort leaves leaf leaves sb append depth First leaf sb append n sb delete sb length n length sb length sb delete sb length n length sb length return sb String private String plan String Physical Plan pp String Builder sb new String Builder Byte Array Output Stream baos new Byte Array Output Stream pp null pp explain baos Verbose else return sb append Sep sb append shift String Tabs baos String return sb String private String plan String List Physical Plan lep String Builder sb new String Builder lep null Physical Plan ep lep sb append plan String ep return sb String Suppress Warnings unchecked private String depth First node throws Visitor Exception String Builder sb new String Builder node name n Verbose node instanceof Filter sb append plan String Filter node get Plan else node instanceof Local Rearrange sb append plan String Local Rearrange node get Plans else node instanceof Partial Agg sb append plan String Partial Agg node get Key Plan sb append plan String Partial Agg node get Value Plans else node instanceof Collected Group sb append plan String Collected Group node get Plans else node instanceof Rank sb append plan String Rank node get Rank Plans else node instanceof Counter sb append plan String Counter node get Counter Plans else node instanceof Sort sb append plan String Sort node get Sort Plans else node instanceof sb append plan String node get Input Plans else node instanceof Package Packager pkgr Package node get Pkgr pkgr instanceof Multi Query Packager List Packager pkgrs Multi Query Packager pkgr get Packagers Packager child pkgrs sb append Sep child name n else node instanceof Join Join frj Join node List List Physical Plan join Plans frj get Join Plans join Plans null List Physical Plan list join Plans sb append plan String list else node instanceof Skewed Join Skewed Join skewed Skewed Join node Multi Map Physical Operator Physical Plan join Plans skewed get Join Plans join Plans null List Physical Plan inner plans new Array List Physical Plan inner plans add join Plans values sb append plan String inner plans else node instanceof Limit Physical Plan limit Plan Limit node get Limit Plan limit Plan null sb append plan String limit Plan node instanceof Split sb append plan String Split node get Plans else node instanceof Demux List Physical Plan plans new Array List Physical Plan Set Physical Plan pl new Hash Set Physical Plan pl add Demux node get Plans plans add pl sb append plan String plans List original Predecessors Plan get Predecessors node original Predecessors null return sb String List predecessors new Array List original Predecessors Collections sort predecessors int pred predecessors String Str depth First pred Str null sb append Sep predecessors size sb append shift String Tabs Str else sb append shift String Tabs Str return sb String private String shift String Tabs String Str int Tab Type String Builder sb new String Builder String spl Str split n String tab Tab Type sb append spl n int spl length sb append tab sb append spl sb append n return sb String private void disp Tabs int level Cntr stream print public void visit Load Load op stream print op name public void visit Store Store op stream print op name public void visit Filter Filter op stream print op name public void visit Local Rearrange Local Rearrange op stream print op name public void visit Global Rearrange Global Rearrange op stream print op name public void visit Package Package op stream print op name public void visit Start Map Union op stream print op name
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception Boolean operator public class extends Binary Comparison Operator private static final long serial Version public Operator Key k k public Operator Key k int rp super k rp result Type Data Type Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Override public String name return Data Type find Type Name result Type Key String Override public Result get Next Boolean throws Exec Exception Result r accum Child null Data Type r null return r Result left left lhs get Next Boolean pass left return Status Status return left truth table true n null f false n f n f n n n f f f f f Short circuit lhs false return false handled boolean return Left false left result null Boolean left result boolean Value illustrator null return left illustrator Markup null left result return Left true Result right rhs get Next Boolean return Left return left pass right return Status Status return right lhs null rhs true return null cases return rhs table left result null right result null Boolean right result boolean Value return left matter get right side return null true false right result null illustrator Markup null right result Boolean right result return right Override public clone throws Clone Supported Exception clone new new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java util Array List import java util List import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache data Tuple import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception public class Bin Cond extends Expression Operator private static final long serial Version Expression Operator cond Expression Operator lhs Expression Operator rhs private transient List Expression Operator child public Bin Cond Operator Key k super k public Bin Cond Operator Key k int rp super k rp public Bin Cond Operator Key k int rp Expression Operator cond Expression Operator lhs Expression Operator rhs super k rp cond cond lhs lhs rhs rhs public Result generic Get Next byte data Type throws Exec Exception List Expression Operator list new Array List Expression Operator list add cond Result r accum Child list Data Type r null r return Status Status return r list clear list add lhs list add rhs r accum Child list data Type return r Result res cond get Next Boolean res result null res return Status Status return res Result result Boolean res result true lhs get Next data Type rhs get Next data Type illustrator Markup null result result Boolean res result return result Override public Result get Next Boolean throws Exec Exception Result r accum Child null Data Type r null return r Result res cond get Next Boolean res result null res return Status Status return res return Boolean res result true lhs get Next Boolean rhs get Next Boolean Override public Result get Next Data Bag throws Exec Exception return generic Get Next Data Type Override public Result get Next Data Byte Array throws Exec Exception return generic Get Next Data Type Override public Result get Next Double throws Exec Exception return generic Get Next Data Type Override public Result get Next Float throws Exec Exception return generic Get Next Data Type Override public Result get Next Integer throws Exec Exception return generic Get Next Data Type Override public Result get Next Long throws Exec Exception return generic Get Next Data Type Override public Result get Next Date Time throws Exec Exception return generic Get Next Data Type Override public Result get Next Map throws Exec Exception return generic Get Next Data Type Override public Result get Next String throws Exec Exception return generic Get Next Data Type Override public Result get Next Tuple throws Exec Exception return generic Get Next Data Type Override public Result get Next Big Integer throws Exec Exception return generic Get Next Data Type Override public Result get Next Big Decimal throws Exec Exception return generic Get Next Data Type Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Bin Cond Override public String name return Bin Cond Data Type find Type Name result Type Key String Override public void attach Input Tuple cond attach Input lhs attach Input rhs attach Input public void set Cond Expression Operator cond Op cond cond Op public void set Rhs Expression Operator rhs rhs rhs public void set Lhs Expression Operator lhs lhs lhs Get condition public Expression Operator get Cond return cond Get right expression public Expression Operator get Rhs return rhs Get left expression public Expression Operator get Lhs return lhs Override public boolean supports Multiple Inputs return true Override public Bin Cond clone throws Clone Supported Exception Bin Cond clone new Bin Cond new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper clone cond cond clone clone lhs lhs clone clone rhs rhs clone return clone Get child expressions expression Override public List Expression Operator get Child Expressions child null child new Array List Expression Operator child add cond child add lhs child add rhs return child Override public Tuple illustrator Markup Object Object int eq Class Index illustrator null return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java io Exception import java io Object Input Stream import java math Big Decimal import java math Big Integer import java util Array List import java util Iterator import java util List import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache Eval Func import org apache Func Spec import org apache Load Caster import org apache Load Func import org apache Exception import org apache Warning import org apache Resource Schema import org apache Resource Schema Resource Field Schema import org apache Stream import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache builtin Date import org apache data Data Bag import org apache data Data Byte Array import org apache data Data Type import org apache data Tuple import org apache impl Context import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache impl util Cast Utils import org apache impl util Log Utils import org joda time Date Time cast converts Data Byte Array either String Integer added testing Union Need full operator implementation public class Cast extends Expression Operator private final static Log log Log Factory get Log Cast class private static final String unknown Byte Array Error Message Received bytearray Union two different Loaders determine convert bytearray private Func Spec func Spec null transient private Load Caster caster private boolean cast Needed false private Byte real Type null private transient List Expression Operator child private Resource Field Schema field Schema null private static final long serial Version public Cast Operator Key k super k public Cast Operator Key k int rp super k rp private void instantiate Func throws Exception caster null return func Spec null Object obj Context instantiate Func Spec func Spec obj instanceof Load Func caster Load Func obj get Load Caster else obj instanceof Stream caster Stream obj get Load Caster else obj instanceof Eval Func caster Eval Func obj get Load Caster else throw new Exception Invalid class type func Spec get Class Name private Result error Result res new Result res return Status Status return res public void set Func Spec Func Spec lf throws Exception func Spec lf instantiate Func Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Cast Override public String name Data Type Schema Type result Type return Cast Data Type find Type Name result Type field Schema calc Cast String Key String else return Cast Data Type find Type Name result Type Key String Override public boolean supports Multiple Inputs return false Override public Result get Next Big Integer throws Exec Exception Physical Operator inputs get Byte result Type get Result Type switch result Type case Data Type case Data Type case Data Type case Data Type return error case Data Type Data Byte Array dba Result res get Next Data Byte Array res return Status Status res result null try dba Data Byte Array res result catch Class Cast Exception e res result type Byte Array one types cast still possible real Type null Find type cache real Type Data Type find Type res result try res result Data Type Big Integer res result real Type catch Class Cast Exception cce Type changed Need find type try casting real Type Data Type find Type res result res result Data Type Big Integer res result real Type return res try null caster res result caster bytes Big Integer dba get else int err Code String msg unknown Byte Array Error Message Big Integer get Original Locations throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee catch Exception e log error Error casting Byte Array Big Integer return res case Data Type Result res get Next Boolean res return Status Status res result null Boolean res result res result Big Integer else res result Big Integer return res case Data Type Result res get Next Integer res return Status Status res result null res result Big Integer value Integer res result long Value return res case Data Type Result res get Next Double res return Status Status res result null res result Big Integer value Double res result long Value return res case Data Type Result res get Next Long res return Status Status res result null res result Big Integer value Long res result long Value return res case Data Type Result res get Next Float res return Status Status res result null res result Big Integer value Float res result long Value return res case Data Type Result res get Next String res return Status Status res result null res result new Big Integer String res result return res case Data Type return get Next Big Integer case Data Type Result res get Next Big Decimal res return Status Status res result null res result Big Decimal res result Big Integer return res return error Override public Result get Next Big Decimal throws Exec Exception Physical Operator inputs get Byte result Type get Result Type switch result Type case Data Type case Data Type case Data Type case Data Type return error case Data Type Data Byte Array dba Result res get Next Data Byte Array res return Status Status res result null try dba Data Byte Array res result catch Class Cast Exception e res result type Byte Array one types cast still possible real Type null Find type cache real Type Data Type find Type res result try res result Data Type Big Decimal res result real Type catch Class Cast Exception cce Type changed Need find type try casting real Type Data Type find Type res result res result Data Type Big Decimal res result real Type return res try null caster res result caster bytes Big Decimal dba get else int err Code String msg unknown Byte Array Error Message Big Decimal get Original Locations throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee catch Exception e log error Error casting Byte Array Big Decimal return res case Data Type Result res get Next Boolean res return Status Status res result null Boolean res result res result Big Decimal else res result Big Decimal return res case Data Type Result res get Next Integer res return Status Status res result null res result Big Decimal value Integer res result long Value return res case Data Type Result res get Next Double res return Status Status res result null res result Big Decimal value Double res result double Value return res case Data Type Result res get Next Long res return Status Status res result null res result Big Decimal value Long res result long Value return res case Data Type Result res get Next Float res return Status Status res result null res result Big Decimal value Float res result double Value return res case Data Type Result res get Next String res return Status Status res result null res result new Big Decimal String res result return res case Data Type Result res get Next Big Integer res return Status Status res result null res result new Big Decimal Big Integer res result return res case Data Type return get Next Big Decimal return error Override public Result get Next Boolean throws Exec Exception Physical Operator inputs get Byte result Type get Result Type switch result Type case Data Type case Data Type case Data Type case Data Type return error case Data Type Data Byte Array dba Result res get Next Data Byte Array res return Status Status res result null try dba Data Byte Array res result catch Class Cast Exception e res result type Byte Array one types cast still possible real Type null Find type cache real Type Data Type find Type res result try res result Data Type Boolean res result real Type catch Class Cast Exception cce Type changed Need find type try casting real Type Data Type find Type res result res result Data Type Boolean res result real Type return res try null caster res result caster bytes Boolean dba get else int err Code String msg unknown Byte Array Error Message boolean get Original Locations throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee catch Exception e log error Error casting Byte Array Boolean return res case Data Type Result res get Next String res return Status Status res result null res result Cast Utils string Boolean String res result return res case Data Type return get Next Boolean case Data Type Integer null Result res get Next Integer res return Status Status res result null res result Boolean value Integer res result int Value return res case Data Type Result res get Next Long res return Status Status res result null res result Boolean value Long res result long Value return res case Data Type Result res get Next Float res return Status Status res result null res result Boolean value Float res result float Value return res case Data Type Result res get Next Double res return Status Status res result null res result Boolean value Double res result double Value return res case Data Type Big Integer bi null Result res get Next Big Integer res return Status Status res result null res result Boolean value Big Integer equals Big Integer res result return res case Data Type Big Decimal bd null Result res get Next Big Decimal res return Status Status res result null res result Boolean value Big Decimal equals Big Decimal res result return res return error Override public Result get Next Integer throws Exec Exception Physical Operator inputs get Byte result Type get Result Type switch result Type case Data Type case Data Type case Data Type return error case Data Type Data Byte Array dba Result res get Next Data Byte Array res return Status Status res result null try dba Data Byte Array res result catch Class Cast Exception e res result type Byte Array one types cast still possible real Type null Find type cache real Type Data Type find Type res result try res result Data Type Integer res result real Type catch Class Cast Exception cce Type changed Need find type try casting real Type Data Type find Type res result res result Data Type Integer res result real Type return res try null caster res result caster bytes Integer dba get else int err Code String msg unknown Byte Array Error Message int get Original Locations throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee catch Exception e log error Error casting Byte Array Integer return res case Data Type Result res get Next Boolean res return Status Status res result null Boolean res result res result Integer value else res result Integer value return res case Data Type Result res get Next Integer return res case Data Type Double null Result res get Next Double res return Status Status res result null res result Data Type Integer res result res result Integer value Double res result int Value return res case Data Type Result res get Next Long res return Status Status res result null res result Integer value Long res result int Value return res case Data Type Result res get Next Float res return Status Status res result null res result Integer value Float res result int Value return res case Data Type Result res get Next Date Time res return Status Status res result null res result Integer value Long value Date Time res result get Millis int Value return res case Data Type Result res get Next String res return Status Status res result null res result Cast Utils string Integer String res result return res case Data Type Result res get Next Big Integer res return Status Status res result null res result Integer value Big Integer res result int Value return res case Data Type Result res get Next Big Decimal res return Status Status res result null res result Integer value Big Decimal res result int Value return res return error Override public Result get Next Long throws Exec Exception Physical Operator inputs get Byte result Type get Result Type switch result Type case Data Type case Data Type case Data Type return error case Data Type Data Byte Array dba Result res get Next Data Byte Array res return Status Status res result null try dba Data Byte Array res result catch Class Cast Exception e res result type Byte Array one types cast still possible real Type null Find type first call cache real Type Data Type find Type res result try res result Data Type Long res result real Type catch Class Cast Exception cce Type changed Need find type try casting real Type Data Type find Type res result res result Data Type Long res result real Type return res try null caster res result caster bytes Long dba get else int err Code String msg unknown Byte Array Error Message long get Original Locations throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee catch Exception e log error Error casting Byte Array Long return res case Data Type Result res get Next Boolean res return Status Status res result null Boolean res result res result Long value else res result Long value return res case Data Type Result res get Next Integer res return Status Status res result null res result Long value Integer res result long Value return res case Data Type Result res get Next Double res return Status Status res result null res result Data Type Integer res result res result Long value Double res result long Value return res case Data Type return get Next Long case Data Type Result res get Next Float res return Status Status res result null res result Long value Float res result long Value return res case Data Type Result res get Next Date Time res return Status Status res result null res result Long value Date Time res result get Millis return res case Data Type Result res get Next String res return Status Status res result null res result Cast Utils string Long String res result return res case Data Type Result res get Next Big Integer res return Status Status res result null res result Long value Big Integer res result long Value return res case Data Type Result res get Next Big Decimal res return Status Status res result null res result Long value Big Decimal res result long Value return res return error Override public Result get Next Double throws Exec Exception Physical Operator inputs get Byte result Type get Result Type switch result Type case Data Type case Data Type case Data Type return error case Data Type Data Byte Array dba Result res get Next Data Byte Array res return Status Status res result null try dba Data Byte Array res result catch Class Cast Exception e res result type Byte Array one types cast still possible real Type null Find type first call cache real Type Data Type find Type res result try res result Data Type Double res result real Type catch Class Cast Exception cce Type changed Need find type try casting real Type Data Type find Type res result res result Data Type Double res result real Type return res try null caster res result caster bytes Double dba get else int err Code String msg unknown Byte Array Error Message double get Original Locations throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee catch Exception e log error Error casting Byte Array Double return res case Data Type Result res get Next Boolean res return Status Status res result null Boolean res result res result new Double else res result new Double return res case Data Type Result res get Next Integer res return Status Status res result null res result new Double Integer res result double Value return res case Data Type return get Next Double case Data Type Result res get Next Long res return Status Status res result null res result new Double Long res result double Value return res case Data Type Result res get Next Float res return Status Status res result null res result new Double Float res result double Value return res case Data Type Result res get Next Date Time res return Status Status res result null res result new Double Long value Date Time res result get Millis double Value return res case Data Type Result res get Next String res return Status Status res result null res result Cast Utils string Double String res result return res case Data Type Result res get Next Big Integer res return Status Status res result null res result Double value Big Integer res result double Value return res case Data Type Result res get Next Big Decimal res return Status Status res result null res result Double value Big Decimal res result double Value return res return error Override public Result get Next Float throws Exec Exception Physical Operator inputs get Byte result Type get Result Type switch result Type case Data Type case Data Type case Data Type return error case Data Type Data Byte Array dba Result res get Next Data Byte Array res return Status Status res result null try dba Data Byte Array res result catch Class Cast Exception e res result type Byte Array one types cast still possible real Type null Find type first call cache real Type Data Type find Type res result try res result Data Type Float res result real Type catch Class Cast Exception cce Type changed Need find type try casting real Type Data Type find Type res result res result Data Type Float res result real Type return res try null caster res result caster bytes Float dba get else int err Code String msg unknown Byte Array Error Message float get Original Locations throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee catch Exception e log error Error casting Byte Array Float return res case Data Type Result res get Next Boolean res return Status Status res result null Boolean res result res result new Float else res result new Float return res case Data Type Result res get Next Integer res return Status Status res result null res result new Float Integer res result float Value return res case Data Type Result res get Next Double res return Status Status res result null res result Data Type Integer res result res result new Float Double res result float Value return res case Data Type Result res get Next Long res return Status Status res result null res result new Float Long res result float Value return res case Data Type return get Next Float case Data Type Date Time dt null Result res get Next Date Time res return Status Status res result null res result new Float Long value Date Time res result get Millis float Value return res case Data Type Result res get Next String res return Status Status res result null res result Cast Utils string Float String res result return res case Data Type Result res get Next Big Integer res return Status Status res result null res result Float value Big Integer res result float Value return res case Data Type Result res get Next Big Decimal res return Status Status res result null res result Float value Big Decimal res result float Value return res return error Override public Result get Next Date Time throws Exec Exception Physical Operator inputs get Byte result Type get Result Type switch result Type case Data Type case Data Type case Data Type return error case Data Type Data Byte Array dba Result res get Next Data Byte Array res return Status Status res result null try dba Data Byte Array res result catch Class Cast Exception e res result type Byte Array one types cast still possible real Type null Find type first call cache real Type Data Type find Type res result try res result Data Type Date Time res result real Type catch Class Cast Exception cce Type changed Need find type try casting real Type Data Type find Type res result res result Data Type Date Time res result real Type return res try null caster res result caster bytes Date Time dba get else int err Code String msg unknown Byte Array Error Message datetime get Original Locations throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee catch Exception e log error Error casting Byte Array Date Time return res case Data Type Result res get Next Integer res return Status Status res result null res result new Date Time Integer res result long Value return res case Data Type Result res get Next Double res return Status Status res result null res result new Date Time Double res result long Value return res case Data Type Result res get Next Long res return Status Status res result null res result new Date Time Long res result long Value return res case Data Type Result res get Next Float res return Status Status res result null res result new Date Time Float res result long Value return res case Data Type Result res get Next Big Integer res return Status Status res result null res result new Date Time Big Integer res result long Value return res case Data Type Result res get Next Big Decimal res return Status Status res result null res result new Date Time Big Decimal res result long Value return res case Data Type return get Next Date Time case Data Type Result res get Next String res return Status Status res result null res result Date extract Date Time String res result return res return error Override public Result get Next String throws Exec Exception Physical Operator inputs get Byte result Type get Result Type switch result Type case Data Type case Data Type case Data Type return error case Data Type Data Byte Array dba Result res get Next Data Byte Array res return Status Status res result null try dba Data Byte Array res result catch Class Cast Exception e res result type Byte Array one types cast still possible real Type null Find type first call cache real Type Data Type find Type res result try res result Data Type String res result real Type catch Class Cast Exception cce Type changed Need find type try casting real Type Data Type find Type res result res result Data Type String res result real Type return res try null caster res result caster bytes Char Array dba get else int err Code String msg unknown Byte Array Error Message string get Original Locations throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee catch Exception e log error Error casting Byte Array Char Array return res case Data Type Result res get Next Boolean res return Status Status res result null Boolean res result res result res result Boolean String else res result res result Boolean String return res case Data Type Result res get Next Integer res return Status Status res result null res result Integer res result String return res case Data Type Result res get Next Double res return Status Status res result null res result Data Type Integer res result res result Double res result String return res case Data Type Result res get Next Long res return Status Status res result null res result Long res result String return res case Data Type Result res get Next Float res return Status Status res result null res result Float res result String return res case Data Type Result res get Next Date Time res return Status Status res result null res result Date Time res result String return res case Data Type return get Next String case Data Type Big Integer bi null Result res get Next Big Integer res return Status Status res result null res result Big Integer res result String return res case Data Type Result res get Next Big Decimal res return Status Status res result null res result Big Decimal res result String return res return error Override public Result get Next Tuple throws Exec Exception Physical Operator inputs get Byte cast Type Data Type Byte result Type get Result Type switch result Type case Data Type Result res get Next Tuple res return Status Status res result null try res result convert Schema res result field Schema catch Exception e Log Utils warn Unable interpret value res result field converted type tuple caught Parse Exception e get Message field discarded Warning log res result null return res case Data Type Data Byte Array dba Result res get Next Data Byte Array res return Status Status res result null res result new String Data Byte Array res result String cast Needed examined data determined input type type casting send input output return res try dba Data Byte Array res result catch Class Cast Exception e check type res result type trying cast Data Type find Type res result cast Type remember future calls cast Needed true return output return res else input differen type rethrow exception int err Code String msg cast tuple Expected bytearray received Data Type find Type Name res result throw new Exec Exception msg err Code Exception e try null caster res result caster bytes Tuple dba get field Schema else int err Code String msg unknown Byte Array Error Message tuple get Original Locations throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee catch Exception e log error Error casting Byte Array Tuple return res case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type return error return error Suppress Warnings unchecked deprecation private Object convert Schema Object obj Resource Field Schema fs throws Exception Object result null fs null return obj obj null handle Data Type return null switch fs get Type case Data Type obj instanceof Data Bag Data Bag db Data Bag obj Get inner schema bag fs get Schema null Resource Field Schema tuple Fs fs get Schema get Fields Iterator Tuple iter db iterator iter Next Tuple iter next convert Schema tuple Fs result db else obj instanceof Data Byte Array null caster result caster bytes Bag Data Byte Array obj get fs else int err Code String msg unknown Byte Array Error Message bag get Original Locations throw new Exec Exception msg err Code Exception else throw new Exec Exception cast obj bag Exception break case Data Type obj instanceof Tuple try Tuple Tuple obj Resource Schema inner Schema fs get Schema inner Schema null return inner Schema get Fields length size return null int Resource Field Schema field Schema inner Schema get Fields Object field convert Schema get field Schema set field result catch Exception e throw new Exec Exception convert obj fs else obj instanceof Data Byte Array null caster result caster bytes Tuple Data Byte Array obj get fs else int err Code String msg unknown Byte Array Error Message tuple get Original Locations throw new Exec Exception msg err Code Exception else throw new Exec Exception cast obj tuple Exception break case Data Type obj instanceof Map fs null fs get Schema null Resource Field Schema inner Field Schema fs get Schema get Fields Map Map obj Object entry entry Set Object new Value convert Schema Map Entry entry get Value inner Field Schema put Map Entry entry get Key new Value result else result obj else obj instanceof Data Byte Array null caster result caster bytes Map Data Byte Array obj get fs else int err Code String msg unknown Byte Array Error Message tuple get Original Locations throw new Exec Exception msg err Code Exception else throw new Exec Exception cast obj map Exception break case Data Type switch Data Type find Type obj case Data Type null caster result caster bytes Boolean Data Byte Array obj get else int err Code String msg unknown Byte Array Error Message int get Original Locations throw new Exec Exception msg err Code Exception break case Data Type result obj break case Data Type result Boolean value Integer obj int Value break case Data Type result Boolean value Double obj double Value break case Data Type result Boolean value Long obj long Value break case Data Type result Boolean value Float obj float Value break case Data Type result Cast Utils string Boolean String obj break case Data Type result Boolean value Big Integer equals Big Integer obj break case Data Type result Boolean value Big Decimal equals Big Decimal obj break default throw new Exec Exception convert obj fs Exception break case Data Type switch Data Type find Type obj case Data Type null caster result caster bytes Integer Data Byte Array obj get else int err Code String msg unknown Byte Array Error Message int get Original Locations throw new Exec Exception msg err Code Exception break case Data Type Boolean obj result Integer value else result Integer value break case Data Type result obj break case Data Type result Integer value Double obj int Value break case Data Type result Integer value Long obj int Value break case Data Type result Integer value Float obj int Value break case Data Type result Integer value Long value Date Time obj get Millis int Value break case Data Type result Cast Utils string Integer String obj break case Data Type result Integer value Big Integer obj int Value break case Data Type result Integer value Big Decimal obj int Value break default throw new Exec Exception convert obj fs Exception break case Data Type switch Data Type find Type obj case Data Type null caster result caster bytes Double Data Byte Array obj get else int err Code String msg unknown Byte Array Error Message double get Original Locations throw new Exec Exception msg err Code Exception break case Data Type Boolean obj result new Double else result new Double break case Data Type result new Double Integer obj double Value break case Data Type result Double obj break case Data Type result new Double Long obj double Value break case Data Type result new Double Float obj double Value break case Data Type result new Double Long value Date Time obj get Millis double Value break case Data Type result Cast Utils string Double String obj break case Data Type result Double value Big Integer obj double Value break case Data Type result Double value Big Decimal obj double Value break default throw new Exec Exception convert obj fs Exception break case Data Type switch Data Type find Type obj case Data Type null caster result caster bytes Long Data Byte Array obj get else int err Code String msg unknown Byte Array Error Message long get Original Locations throw new Exec Exception msg err Code Exception break case Data Type Boolean obj result Long value else result Long value break case Data Type result Long value Integer obj long Value break case Data Type result Long value Double obj long Value break case Data Type result Long obj break case Data Type result Long value Float obj long Value break case Data Type result Long value Date Time obj get Millis break case Data Type result Cast Utils string Long String obj break case Data Type result Long value Big Integer obj long Value break case Data Type result Long value Big Decimal obj long Value break default throw new Exec Exception convert obj fs Exception break case Data Type switch Data Type find Type obj case Data Type null caster result caster bytes Float Data Byte Array obj get else int err Code String msg unknown Byte Array Error Message float get Original Locations throw new Exec Exception msg err Code Exception break case Data Type Boolean obj result new Float else result new Float break case Data Type result new Float Integer obj float Value break case Data Type result new Float Double obj float Value break case Data Type result new Float Long obj float Value break case Data Type result obj break case Data Type result new Float Long value Date Time obj get Millis float Value break case Data Type result Cast Utils string Float String obj break case Data Type result Float value Big Integer obj float Value break case Data Type result Float value Big Decimal obj float Value break default throw new Exec Exception convert obj fs Exception break case Data Type switch Data Type find Type obj case Data Type null caster result caster bytes Date Time Data Byte Array obj get else int err Code String msg unknown Byte Array Error Message datetime get Original Locations throw new Exec Exception msg err Code Exception break case Data Type result new Date Time Integer obj long Value break case Data Type result new Date Time Double obj long Value break case Data Type result new Date Time Long obj long Value break case Data Type result new Date Time Float obj long Value break case Data Type result Date Time obj break case Data Type result Date extract Date Time String obj break case Data Type result new Date Time Big Integer obj long Value break case Data Type result new Date Time Big Decimal obj long Value break default throw new Exec Exception convert obj fs Exception break case Data Type switch Data Type find Type obj case Data Type null caster result caster bytes Char Array Data Byte Array obj get else int err Code String msg unknown Byte Array Error Message float get Original Locations throw new Exec Exception msg err Code Exception break case Data Type Boolean obj result result Boolean String else result result Boolean String break case Data Type result Integer obj String break case Data Type result Double obj String break case Data Type result Long obj String break case Data Type result Float obj String break case Data Type result Date Time obj String break case Data Type result obj break case Data Type result Big Integer obj String break case Data Type result Big Decimal obj String break default throw new Exec Exception convert obj fs Exception break case Data Type switch Data Type find Type obj case Data Type null caster result caster bytes Big Integer Data Byte Array obj get else int err Code String msg unknown Byte Array Error Message Big Integer get Original Locations throw new Exec Exception msg err Code Exception break case Data Type Boolean obj result Big Integer else result Big Integer break case Data Type result Big Integer value Integer obj long Value break case Data Type result Big Integer value Double obj long Value break case Data Type result Big Integer value Long obj long Value break case Data Type result Big Integer value Float obj long Value break case Data Type result new Big Integer String obj break case Data Type result Big Integer obj break case Data Type result Big Decimal obj Big Integer break case Data Type result Big Integer value Date Time obj get Millis break default throw new Exec Exception convert obj fs Exception case Data Type switch Data Type find Type obj case Data Type null caster result caster bytes Big Decimal Data Byte Array obj get else int err Code String msg unknown Byte Array Error Message Big Decimal get Original Locations throw new Exec Exception msg err Code Exception break case Data Type Boolean obj result Big Decimal else result Big Decimal break case Data Type result Big Decimal value Integer obj long Value break case Data Type result Big Decimal value Double obj double Value break case Data Type result Big Decimal value Long obj long Value break case Data Type result Big Decimal value Float obj double Value break case Data Type result new Big Decimal String obj break case Data Type result new Big Decimal Big Integer obj break case Data Type result Big Decimal obj break case Data Type result Big Decimal value Date Time obj get Millis break default throw new Exec Exception convert obj fs Exception case Data Type op result obj break default throw new Exec Exception n know convert obj fs Exception return result Override public Result get Next Data Bag throws Exec Exception Physical Operator inputs get Byte cast Type Data Type Byte result Type get Result Type switch result Type case Data Type res get Next Data Bag res return Status Status res result null try res result convert Schema res result field Schema catch Exception e Log Utils warn Unable interpret value res result field converted type bag caught Parse Exception e get Message field discarded Warning log res result null return res case Data Type Data Byte Array dba Result res get Next Data Byte Array res return Status Status res result null res result new String Data Byte Array res result String cast Needed examined data determined input type type casting send input output return res try dba Data Byte Array res result catch Class Cast Exception e check type res result type trying cast Data Type find Type res result cast Type remember future calls cast Needed true return output return res else input differen type rethrow exception int err Code String msg cast bag Expected bytearray received Data Type find Type Name res result throw new Exec Exception msg err Code Exception e try null caster res result caster bytes Bag dba get field Schema else int err Code String msg unknown Byte Array Error Message bag get Original Locations throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee catch Exception e log error Error casting Byte Array Data Bag return res case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type return error return error Suppress Warnings deprecation Override public Result get Next Map throws Exec Exception Physical Operator inputs get Byte cast Type Data Type Byte result Type get Result Type switch result Type case Data Type Result res get Next Map res return Status Status res result null try res result convert Schema res result field Schema catch Exception e Log Utils warn Unable interpret value res result field converted type map caught Parse Exception e get Message field discarded Warning log res result null return res case Data Type Data Byte Array dba Result res get Next Data Byte Array res return Status Status res result null res result new String Data Byte Array res result String cast Needed examined data determined input type type casting send input output return res try dba Data Byte Array res result catch Class Cast Exception e check type res result type trying cast Data Type find Type res result cast Type remember future calls cast Needed true return output return res else input differen type rethrow exception int err Code String msg cast map Expected bytearray received Data Type find Type Name res result throw new Exec Exception msg err Code Exception e try null caster res result caster bytes Map dba get field Schema else int err Code String msg unknown Byte Array Error Message map get Original Locations throw new Exec Exception msg err Code Exception catch Exec Exception ee throw ee catch Exception e log error Error casting Byte Array Map return res case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type return error return error Override public Result get Next Data Byte Array throws Exec Exception Physical Operator inputs get Byte result Type get Result Type result Type Data Type return error Data Byte Array dba null Result res get Next Data Byte Array res return Status Status res result null try dba Data Byte Array res result catch Class Cast Exception e return error dba null return res return res private void read Object Object Input Stream throws Exception Class Found Exception default Read Object instantiate Func Override public Cast clone throws Clone Supported Exception Cast clone new Cast new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper clone func Spec func Spec clone field Schema field Schema try clone instantiate Func catch Exception e Clone Supported Exception cnse new Clone Supported Exception cnse init Cause e throw cnse return clone Get child expression expression Override public List Expression Operator get Child Expressions child null child new Array List Expression Operator inputs get instanceof Expression Operator child add Expression Operator inputs get return child public void set Field Schema Resource Field Schema field Schema public Func Spec get Func Spec return func Spec Override public Tuple illustrator Markup Object Object int eq Class Index return Tuple
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java util List import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Map Reduce Counter import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache data Data Type import org apache data Tuple import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache pen util Example Tuple operator part operator implementation adds local counter unique task id tuple modes operations regular dense local counter depends mode operation regular rank considered duplicate rows assigning numbers distinct values groups dense rank counts number distinct values without considering duplicate rows Depending considered entire tuple row number set columns rank Physical Operator relies specific class available Map Reduce Counter public class Counter extends Physical Operator private static final long serial Version public static final Long private List Physical Plan counter Plans private List Boolean Asc Cols case could dense dense rank means assign consecutive ranks different values private boolean Dense Rank false case simple namely row number mode consecutive number assigned tuple private boolean Row Number false Local counter tuples task private Long local Count Task label tuple analyzed corresponding task private Integer task Unique identifier links Counter Rank global counter labeled private String operation public Counter Operator Key k k null public Counter Operator Key k int rp k rp null public Counter Operator Key k List Physical Operator inputs k inputs public Counter Operator Key k int rp List Physical Operator inputs super k rp inputs public Counter Counter copy super copy counter Plans copy counter Plans Asc Cols copy Asc Cols Dense Rank copy Dense Rank Row Number copy Row Number operation copy operation Suppress Warnings rawtypes unchecked public Counter Operator Key operator Key int requested Parallelism List inp List Physical Plan counter Plans List Boolean ascending Col super operator Key requested Parallelism inp set Counter Plans counter Plans set Ascending Columns ascending Col Override public Tuple illustrator Markup Object Object int eq Class Index illustrator null return new Example Tuple Tuple return Tuple Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Counter Override public Result get Next Tuple throws Exec Exception Result inp null true inp process Input inp return Status Status inp return Status Status break inp return Status Status continue return add Counter Value inp return inp Add current task id local counter value param input previous output return tuple within two values prepended tuple task identifier local counter value Local counter value could incremented one row number dense rank could incremented size bag previous tuple processed protected Result add Counter Value Result input throws Exec Exception Tuple Tuple input result Tuple Tuple Factory new Tuple get size Long size Bag int position Bag Tuples added two stamps tuple content position counter value position last Current task Id case tuple analyzed independently tuples grouped Row Number Dense Rank Dense Rank attached reduce phase incremented way Otherwise increment done mapper automatically Dense Rank increment Reduce Counter Counter set get Local Counter local incrementer sequentially increased increment Local Counter else Dense Rank Standard rank case important number tuples group position Bag get size get Type position Bag Data Type size Bag org apache data Default Abstract Bag get position Bag size value size tuples bag used increment current global counter increment Reduce Counter size Bag set get Local Counter value next tuple current task add Local Counter size Bag Object set position last Current task Id set get Task Id input result illustrator Markup return input protected void increment Reduce Counter Long increment Map Reduce Counter Reduce Counter increment Counter increment Override public boolean supports Multiple Inputs return false Override public boolean supports Multiple Outputs return false Override public String name return get Alias String Counter Data Type find Type Name result Type Key String public void set Counter Plans List Physical Plan counter Plans counter Plans counter Plans public List Physical Plan get Counter Plans return counter Plans public void set Ascending Columns List Boolean Asc Cols Asc Cols Asc Cols public List Boolean get Ascending Columns return Asc Cols Initialization step Counter set local counter public void reset Local Counter local Count Sequential counter used mode protected Long increment Local Counter return local Count public void set Local Counter Long local Count local Count local Count public Long get Local Counter return local Count protected void add Local Counter Long size Bag local Count size Bag Task identifier task map reducer public void set Task Id int task task task public int get Task Id return task Dense Rank flag public void set Dense Rank boolean Dense Rank Dense Rank Dense Rank public boolean Dense Rank return Dense Rank Row number flag public void set Row Number boolean Row Number Row Number Row Number public boolean Row Number return Row Number Operation identifier shared within corresponding Rank public void set Operation String operation operation operation public String get Operation return operation Override public Counter clone throws Clone Supported Exception Counter clone Counter super clone clone local Count new Long local Count clone task new Integer task counter Plans Asc Cols unused cloning return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java util Iterator import java util List import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache pen util Example Tuple import org apache pen util Lineage Tracer Recover class nested cross operation public class Cross extends Physical Operator private static final long serial Version protected transient Data Bag input Bags protected transient Tuple data protected transient Iterator Tuple protected transient Tuple tuple Last Bag public Cross Operator Key k super k public Cross Operator Key k int rp List Physical Operator inp super k rp inp public Cross Operator Key k int rp super k rp public Cross Operator Key k List Physical Operator inp super k inp Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Cross Override public String name return get Alias String Cross Data Type find Type Name result Type Key String Override public boolean supports Multiple Inputs return true Override public boolean supports Multiple Outputs return false Override public Tuple illustrator Markup Object Object int eq Class Index illustrator null Example Tuple new Example Tuple Tuple illustrator add Data illustrator get Equivalence Classes get eq Class Index add Tuple Lineage Tracer lineage Tracer illustrator get Lineage lineage Tracer insert int data length lineage Tracer union data return else return Tuple Override public Result get Next Tuple throws Exec Exception Result res new Result int Items inputs size input Bags null accumulate Data load Last Bag res return Status Status clear Memory return res null check done processing checking iterators used boolean finished true boolean empty false int length input Bags size empty true break finished Next empty one bag empty n exist non null cross product simply clear input tuples first bag finish int index inputs size Result res Last Bag inputs get index get Next Tuple res Last Bag return Status Status res Last Bag inputs get index get Next Tuple res return Status Status clear Memory return res else finished load Last Bag res return Status Status clear Memory return res data null get Next called first time starting new input data instantiate template array start populating data data new Tuple Items data Items tuple Last Bag int Items data next res result create Tuple data res return Status Status return res else data Items tuple Last Bag int length Items int index index length index index Next data index index next res result create Tuple data res return Status Status return res else reset index iterator cross product achieved would resetting way indexes end first index needs flattened reached last element iterator wo n come instead reset iterators beginning method index input Bags index iterator data index index next res result create Tuple data res return Status Status return res Suppress Warnings unchecked private void accumulate Data throws Exec Exception int count int length inputs size input Bags new Data Bag length new Iterator length int length Physical Operator op inputs get Data Bag bag Bag Factory new Default Bag input Bags count bag Result res op get Next Tuple res return Status Status res op get Next Tuple res return Status Status continue res return Status Status throw new Exec Exception Error accumulating data local Cross operator res return Status Status bag add Tuple res result count bag iterator private Tuple create Tuple Tuple data throws Exec Exception Tuple Tuple Factory get Instance new Tuple int data length Tuple data int size size int j j size j append get j return illustrator Markup private boolean load Last Bag throws Exec Exception Result res Last Bag null int index inputs size res Last Bag inputs get index get Next Tuple res Last Bag return Status Status inputs get index get Next Tuple switch res Last Bag return Status case Status return false case Status time tuple last bag ejected traverse combinations tuples n bags save memory one bag tuple Last Bag Tuple res Last Bag result return true case Status default throw new Exec Exception Error accumulating data local Cross operator private void clear Memory reset input Bags data tuple Last Bag null next round get Next new input data loaded tuple Last Bag null input Bags null null data null Override public void reset clear Memory
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java util Iterator import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache Configuration import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Map Reduce import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Bag import org apache data Data Type import org apache data Internal Distinct Bag import org apache data Tuple import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception Find distinct set tuples bag blocking operator input put hashset implemented Distinct Data Bag also provides Data Bag interfaces public class Distinct extends Physical Operator implements Cloneable private static final Log log Log Factory get Log Distinct class private static final long serial Version private transient boolean inputs Accumulated private transient Data Bag distinct Bag private transient boolean initialized private transient boolean use Default Bag private transient Iterator Tuple Since Global Rearrange used Distinct passing custom partioner protected String custom Partitioner public String get Custom Partitioner return custom Partitioner public void set Custom Partitioner String custom Partitioner custom Partitioner custom Partitioner public Distinct Operator Key k int rp List Physical Operator inp super k rp inp public Distinct Operator Key k int rp super k rp public Distinct Operator Key k List Physical Operator inp super k inp public Distinct Operator Key k super k Override public boolean Blocking return true Override public Result get Next Tuple throws Exec Exception inputs Accumulated default create Internal Distinct Bag unless user configures explicitly use old bag initialized initialized true Map Reduce Job Conf Internal get null String bag Type Map Reduce Job Conf Internal get get Configuration bag Type null bag Type equals Ignore Case default use Default Bag true distinct Bag use Default Bag Bag Factory new Distinct Bag new Internal Distinct Bag Result process Input return Status Status return Status Status log error Error reading inputs return else return Status Status Ignore read next tuple process Input continue else distinct Bag add Tuple result illustrator Markup result result process Input inputs Accumulated true null distinct Bag iterator res result next res result null res return Status Status reset else res return Status Status return res Override public String name return get Alias String Distinct Data Type find Type Name result Type Key String Override public boolean supports Multiple Inputs return false Override public boolean supports Multiple Outputs return false Override public void reset inputs Accumulated false distinct Bag null null Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Distinct non Javadoc see org apache backend hadoop executionengine physical Layer Physical Operator clone Override public Distinct clone throws Clone Supported Exception Auto generated method stub return new Distinct new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope requested Parallelism inputs Override public Tuple illustrator Markup Object Object int eq Class Index illustrator null illustrator get Equivalence Classes get eq Class Index add Tuple illustrator add Data Tuple return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java io Exception import java util Array List import java util Bit Set import java util Iterator import java util List import java util Map import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer End Input Needed Visitor import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer expression Operators Expression Operator import org apache backend hadoop executionengine physical Layer expression Operators Project import org apache backend hadoop executionengine physical Layer expression Operators Relation Expr Project import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache data Accumulative Bag import org apache data Data Bag import org apache data Data Type import org apache data Schema Tuple Class Generator Gen Context import org apache data Schema Tuple Factory import org apache data Tuple import org apache data Tuple Factory import org apache data Tuple Maker import org apache data Unlimited Null Tuple import org apache impl logical Layer schema Schema import org apache impl plan Dependency Order Walker import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache pen util Example Tuple import org apache pen util Lineage Tracer intentionally skip type checking backend performance reasons Suppress Warnings unchecked public class extends Physical Operator private static final long serial Version private static final Result new Result Status new Unlimited Null Tuple protected List Physical Plan input Plans protected List Physical Operator ops Reset protected Physical Operator plan Leaf Ops store result types plan leaves protected byte result Types array version Flattened purely optimization instead calling Flattened get quicker array access Flattened Array Also store boolean values rather Boolean objects also save Boolean boolean Value calls protected boolean Flattened Array protected int Items Since plan generate needs maintained generate potentially return multiple tuples call protected transient boolean processing Plan holds iterators databags given input expressions need flattening protected transient Iterator Tuple null holds outputs given input expressions datatype protected transient Object bags template whcih contains tuples flattened create Tuple generate final output protected transient Object data store whether accumulative terminated early protected transient Bit Set early Termination protected transient Example Tuple protected transient Accumulative Tuple Buffer buffer protected transient Tuple inp Tuple protected transient boolean end Input Processed Indicate foreach statement map side Currently used cross See protected boolean map Side false protected Boolean end Input Processing false private Schema schema public Operator Key k k null null public Operator Key k int rp k rp null null public Operator Key k List inp k inp null public Operator Key k int rp List Physical Plan inp List Boolean Flattened super k rp set Flattens Flattened input Plans inp ops Reset new Array List Physical Operator get Leaves public Operator Key operator Key int requested Parallelism List Physical Plan inner Plans List Boolean flatten List Schema schema operator Key requested Parallelism inner Plans flatten List schema schema Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Override public String name return get Alias String New get Flat Str Data Type find Type Name result Type Key String String get Flat Str Flattened Array null return String Builder sb new String Builder Boolean b Flattened Array sb append b sb append sb length sb delete Char sb length return sb String Override public boolean supports Multiple Inputs return false Override public boolean supports Multiple Outputs return false Override public void set Accumulative super set Accumulative Physical Plan p input Plans Iterator Physical Operator iter p iterator iter Next Physical Operator po iter next po instanceof Expression Operator po instanceof Distinct po set Accumulative Override public void set Accum Start super set Accum Start Physical Plan p input Plans Iterator Physical Operator iter p iterator iter Next Physical Operator po iter next po instanceof Expression Operator po instanceof Distinct po set Accum Start Override public void set Accum End super set Accum End Physical Plan p input Plans Iterator Physical Operator iter p iterator iter Next Physical Operator po iter next po instanceof Expression Operator po instanceof Distinct po set Accum End Calls get Next generate operator inside nested physical plan returns maintaining additional state denote begin end nested plan processing Override public Result get Next Tuple throws Exec Exception try Result res null Result inp null nested plan processing return tuples generate oper returns processing Plan true res process Plan res return Status Status return res res return Status Status processing Plan false Physical Plan plan input Plans plan detach Input break res return Status Status return res res return Status Status continue nested plan processing done yet begin process input start nested plan processing input tuple read true inp process Input inp return Status Status return inp inp return Status Status continue inp return Status Status parent Plan null parent Plan end Input end Input Processed end Input Processing continue pull one output inp else return inp attach Input Plans Tuple inp result inp Tuple Tuple inp result Physical Operator po ops Reset po reset Accumulative int inp Tuple size inp Tuple get Type Data Type need check one bag bags share buffer buffer Accumulative Bag inp Tuple get get Tuplebuffer break set Accum Start true Early Terminated buffer Next Batch try buffer next Batch catch Exception e throw new Exec Exception e else buffer instanceof Package Package Tuple Buffer inp Tuple Package Package Tuple Buffer buffer illustrator Markup null inp Tuple set Accum End res process Plan res return Status Status attach input process next batch attach Input Plans Tuple inp result else res return Status Status bubbled need pass null value pipe User Func properly return values attach Input Plans null early Terminate else break buffer clear else res process Plan processing Plan true return res catch Runtime Exception e throw new Exec Exception Error executing get Original Locations e private boolean Early Terminated false private Tuple Maker extends Tuple tuple Maker private boolean known Size false private boolean Early Terminated return Early Terminated private void early Terminate Early Terminated true protected Result process Plan throws Exec Exception schema null tuple Maker null Note Schema Tuple currently turned chain must follow good practices Namely append Tuple comes iterator practice fairly common recommended tuple Maker Schema Tuple Factory get Instance schema false Gen Context tuple Maker null known Size true tuple Maker null tuple Maker Tuple Factory get Instance Result res new Result check databags exhausted tuples enforce reading new data setting data null null boolean restart true int Items null Flattened Array true restart Next means databags reached last elements need force reading fresh databags restart null data null null end Input Processed return get Next called first time starting set new data inputs new Iterator Items bags new Object Items early Termination new Bit Set Items int Items Getting iterators populate input data Result input Data null switch result Types case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type input Data plan Leaf Ops get Next result Types break default int err Code String msg Foreach currently handle type Data Type find Type Name result Types throw new Exec Exception msg err Code Exception accrue information accumulators early terminated case finish input Data return Status Status early Termination get early Termination set continue input Data return Status Status continue input Data return Status Status done elements Time return null bags null return input Data see error return input Data return Status Status return input Data Object input null bags input Data result input Data result instanceof Data Bag Flattened Array Data Bag bags iterator else input Data result instanceof Map Flattened Array Map bags entry Set iterator else null parent Plan null parent Plan end Input end Input Processing end Input Processed true accumulating n got data yet fields return Accumulative Accum Started early Termination cardinality Items res return Status Status else res return Status Status return res true data null get Next called first time starting new input data instantiate template array start populating data data new Object Items int Items Flattened Array bags instanceof Data Bag bags instanceof Map Next data next else input set null return caught function recalled new inputs null data null res return Status Status return res else data bags get Reporter null get Reporter progress create Tuple data res result create Tuple data res return Status Status return res else try find last expression needs flattening start iterating also try update template array int index Items index index index null Flattened Array index index Next data index index next res result create Tuple data res return Status Status return res else reset index iterator cross product achieved would resetting way indexes end first index needs flattened reached last element iterator wo n come instead reset iterators beginning method bags index instanceof Data Bag index Data Bag bags index iterator else bags instanceof Map index Map bags index entry Set iterator data index index next return null param data array template final flattened tuple return final flattened tuple protected Tuple create Tuple Object data throws Exec Exception Tuple tuple Maker new Tuple int idx int data length Object data Flattened Array instanceof Tuple Tuple Tuple int size size int j j size j known Size set idx get j else append get j else Flattened Array instanceof Map Entry Map Entry entry Map Entry known Size set idx entry get Key set idx entry get Value else append entry get Key append entry get Value else known Size set idx else append inp Tuple null return illustrator Markup inp Tuple else return illustrator Markup data protected void attach Input Plans Tuple super attach Input Physical Plan p input Plans p attach Input public void get Leaves input Plans null int Flattened Array null Flattened Array new boolean input Plans size plan Leaf Ops new Physical Operator input Plans size Physical Plan p input Plans Physical Operator leaf p get Leaves get plan Leaf Ops leaf leaf instanceof Project leaf get Result Type Data Type Project leaf Project End Flattened Array true calculating plan leaves lets reinitialize Initialize private void Initialize plan Leaf Ops null Items plan Leaf Ops length result Types new byte Items int result Types length result Types plan Leaf Ops get Result Type else Items result Types null input Plans null Physical Plan pp input Plans try Reset Finder lf new Reset Finder pp ops Reset lf visit catch Visitor Exception String err Msg Internal Error Unexpected error looking nested operators need reset throw new Runtime Exception err Msg public List Physical Plan get Input Plans return input Plans public void set Input Plans List Physical Plan plans input Plans plans plan Leaf Ops null get Leaves public void add Input Plan Physical Plan plan boolean flatten input Plans add plan add plan Leaf Ops copy existing leaves Physical Operator new Plan Leaf Ops new Physical Operator plan Leaf Ops length int plan Leaf Ops length new Plan Leaf Ops plan Leaf Ops add end new Plan Leaf Ops plan Leaf Ops length plan get Leaves get plan Leaf Ops new Plan Leaf Ops add Flattened Array copy existing values boolean new Flattened Array new boolean Flattened Array length int Flattened Array length new Flattened Array Flattened Array add end new Flattened Array Flattened Array length flatten Flattened Array new Flattened Array added leaf reinitialize Initialize public void set Flattened List Boolean flattens set Flattens flattens public List Boolean get Flattened List Boolean result null Flattened Array null result new Array List Boolean int Flattened Array length result add Flattened Array return result Make deep copy operator throws Clone Supported Exception Override public clone throws Clone Supported Exception List Physical Plan plans new Array List Physical Plan input Plans size Physical Plan plan input Plans plans add plan clone List Boolean flattens null Flattened Array null flattens new Array List Boolean Flattened Array length boolean b Flattened Array flattens add b clone new new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope requested Parallelism plans flattens clone set Result Type get Result Type clone add Original Location alias get Original Locations clone end Input Processing end Input Processing clone map Side map Side return clone public boolean Processing return processing Plan protected void set Flattens List Boolean Flattened Flattened null Flattened Array null else Flattened Array new boolean Flattened size int Iterator Boolean Flattened iterator Next Flattened Array next Visits pipeline calls reset nodes Currently pays attention limit nodes need told reset limit private class Reset Finder extends Phy Plan Visitor Reset Finder Physical Plan plan List Physical Operator Reset super plan new Dependency Order Walker Physical Operator Physical Plan plan Override public void visit Distinct Distinct throws Visitor Exception add limit present ops Reset add Override public void visit Limit Limit limit throws Visitor Exception ops Reset add limit Override public void visit Sort Sort sort throws Visitor Exception add limit present ops Reset add sort Override public void visit Cross Cross c throws Visitor Exception add limit present ops Reset add c Override public void visit Project Project proj throws Visitor Exception proj instanceof Relation Expr Project ops Reset add proj return ops Reset public List Physical Operator get Ops Reset return ops Reset param ops Reset ops Reset set public void set Ops Reset List Physical Operator ops Reset ops Reset ops Reset private Tuple illustrator Markup Object Object illustrator null Example Tuple new Example Tuple Tuple illustrator get Lineage insert boolean synthetic false Object synthetic Example Tuple synthetic illustrator get Lineage union Tuple illustrator add Data int Items Data Bag bags size break Items illustrator get Eq Classes Shared illustrator get Equivalence Classes get add synthetic synthetic return else return Tuple Override public Tuple illustrator Markup Object Object int eq Class Index illustrator null Example Tuple new Example Tuple Tuple illustrator add Data illustrator get Eq Classes Shared illustrator get Equivalence Classes get add Lineage Tracer lineage Tracer illustrator get Lineage lineage Tracer insert synthetic Example Tuple synthetic lineage Tracer union Example Tuple return else return Tuple public Physical Operator get Plan Leaf Ops return plan Leaf Ops public void set Map Side boolean map Side map Side map Side public boolean Map Side return map Side public boolean need End Input Processing throws Exec Exception try Physical Plan inner Plan input Plans End Input Needed Visitor end Input Needed Visitor new End Input Needed Visitor inner Plan end Input Needed Visitor visit end Input Needed Visitor need End Input Processing end Input Processing true return true return false catch Exception e throw new Exec Exception e
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java util List import org apache backend executionengine Exec Exception import org apache data Data Type import org apache data Tuple import org apache impl plan Operator Key import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache impl plan Visitor Exception Dummy operator test Compiler local operator get Next methods implemented intentionally skip type checking backend performance reasons Suppress Warnings unchecked public class Global Rearrange extends Physical Operator private static final long serial Version Global Rearrange decides map reduce boundary add custom partitioner protected String custom Partitioner private boolean cross false public String get Custom Partitioner return custom Partitioner public void set Custom Partitioner String custom Partitioner custom Partitioner custom Partitioner public Global Rearrange Operator Key k k null public Global Rearrange Operator Key k int rp k rp null public Global Rearrange Operator Key k List inp k null public Global Rearrange Operator Key k int rp List inp super k rp inp public Global Rearrange Global Rearrange copy throws Exec Exception super copy cross copy cross custom Partitioner copy custom Partitioner Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Global Rearrange Override public String name return get Alias String Global Rearrange Data Type find Type Name result Type Key String Override public boolean supports Multiple Inputs return true Override public boolean supports Multiple Outputs return false Override public boolean Blocking return true Override public Tuple illustrator Markup Object Object int eq Class Index return null public void set Cross boolean cross cross cross public boolean Cross return cross
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl builtin import java io Exception import org apache hadoop conf Configuration import org apache hadoop mapreduce Record Reader import org apache Configuration import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Split import org apache data Tuple import org apache data Tuple Factory See Skewed Join sampler http wiki apache org Sampler public class Poisson Sample Loader extends Sample Loader marker string mark last sample row total number rows seen map instance string nd last column last sample row used Get Mem Num Rows public static final String u u Te Rnal sp Ecial ro num tuple kt Lehkblah num rows sampled far private int num Rows Sampled average size tuple memory tuples sampled private long avg Tuple Mem Sz current row number private long row Num number tuples skip sample private long skip Interval bytes input skip every sample divide avg Tuple Mem Size get skip Interval private long mem Skip Per Sample special row row number information returned private boolean num Row Spl Tuple Returned false magic number obtained using poisson cumulative distribution function mean set emperically minimum number samples confidence set private static final int private int sample Rate total memory bytes private long total Memory private double heap Perc Partition Skewed Keys new Sample tuple private Tuple new Sample null public Poisson Sample Loader String func Spec String ns super func Spec super set Num Samples Integer value ns overridden Override public Tuple get Next throws Exception num Row Spl Tuple Returned row num special row returned inputs read nothing read return null skip Interval select first tuple sample calculate number tuples skipped Tuple loader get Next null since skip Interval previous sample next sample null data set empty return null long avail Red Mem long total Memory heap Perc avail Red Mem mem Skip Per Sample avail Red Mem sample Rate update Skip Interval row Num new Sample skip tuples long num Skipped num Skipped skip Interval num Skipped skip Next return create Num Row Tuple new Sample row Num skipped enough get new sample Tuple loader get Next null return create Num Row Tuple new Sample update Skip Interval row Num Tuple current Sample new Sample new Sample return current Sample Update average tuple size base newly sampled tuple recalculate skip Interval param tuple private void update Skip Interval Tuple avg Tuple Mem Sz avg Tuple Mem Sz num Rows Sampled get Memory Size num Rows Sampled skip Interval mem Skip Per Sample avg Tuple Mem Sz skipping fewer number rows first times reduce probability first tuples size much smaller rest resulting samples sampled Sampling little extra num Rows Sampled skip Interval skip Interval num Rows Sampled num Rows Sampled param sample sample tuple return Tuple appended special marker string column num rows column throws Exec Exception private Tuple create Num Row Tuple Tuple sample throws Exec Exception int sz sample null sample size Tuple Factory factory Tuple Factory get Instance Tuple factory new Tuple sz sample null int sample size set sample get set sz set sz row Num num Row Spl Tuple Returned true return Suppress Warnings rawtypes Override public void prepare Read Record Reader reader Split split throws Exception super prepare Read reader split num Rows Sampled avg Tuple Mem Sz row Num skip Interval mem Skip Per Sample num Row Spl Tuple Returned false new Sample null Configuration conf split get Conf sample Rate conf get Int Configuration heap Perc conf get Float Configuration Partition Skewed Keys total Memory conf get Long Configuration total Memory total Memory Runtime get Runtime max Memory
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java util List import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache data Data Type import org apache data Tuple import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache pen util Example Tuple public class Limit extends Physical Operator private static final long serial Version Number limited outputs private long Limit expression plan private Physical Plan expression Plan Counts outputs processed private transient long Far public Limit Operator Key k k null public Limit Operator Key k int rp k rp null public Limit Operator Key k List Physical Operator inputs k inputs public Limit Operator Key k int rp List Physical Operator inputs super k rp inputs public void set Limit long limit Limit limit public long get Limit return Limit public Physical Plan get Limit Plan return expression Plan public void set Limit Plan Physical Plan expression Plan expression Plan expression Plan Counts number tuples processed static variable Far number tuples processed reach limit return Otherwise return tuple Override public Result get Next Tuple throws Exec Exception first time evaluate expression Otherwise reuse computed value get Limit expression Plan null Physical Operator expression expression Plan get Leaves get long variable Limit Result return Value switch expression get Result Type case Data Type return Value expression get Next Long return Value return Status Status return Value result null throw new Runtime Exception Unable evaluate Limit expression return Value variable Limit Long return Value result break case Data Type return Value expression get Next Integer return Value return Status Status return Value result null throw new Runtime Exception Unable evaluate Limit expression return Value variable Limit Integer return Value result break default throw new Runtime Exception Limit requires integer parameter variable Limit throw new Runtime Exception Limit requires zero positive integer parameter set Limit variable Limit Result inp null true illustrator ignore post processing illustrator null illustrator get Original Limit Far Limit inp break inp process Input inp return Status Status inp return Status Status break illustrator Markup inp result null Far break return inp Override public String name return get Alias String Limit Key String Override public boolean supports Multiple Inputs return false Override public boolean supports Multiple Outputs return false Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Limit Override public void reset Far Override public Limit clone throws Clone Supported Exception Limit clone Limit super clone expression Plan null clone expression Plan expression Plan clone return clone Override public Tuple illustrator Markup Object Object int eq Class Index illustrator null Example Tuple Example Tuple illustrator get Equivalence Classes get eq Class Index add illustrator add Data Tuple return Tuple
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java io Exception import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache Load Func import org apache Exception import org apache backend executionengine Exec Exception import org apache data Tuple import org apache impl Context import org apache impl io File Spec import org apache impl io Read End Loader import org apache impl plan Operator Key import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache impl plan Visitor Exception import org apache pen util Example Tuple load operator used two ways local operator used load files Map Reduce setting used create jobs Map Reduce operators keep loads stores Map Reduce Plans till job created public class Load extends Physical Operator private static final Log log Log Factory get Log Load class private static final long serial Version user defined load function default load function private transient Load Func loader null filespec operator based File Spec l File Context passed us operator creator Context pc Indicates whether loader setup done boolean set Done false Alias Load private String signature flag distinguish user loads Compiler loads private boolean Tmp Load private long limit private transient List String cache Files null private transient List String ship Files null public Load Operator Key k k null public Load Operator Key k File Spec l File k l File public Load Operator Key k int rp File Spec l File super k rp l File l File public Load Operator Key k Load Func lf k loader lf Set loader Instantiating load func Opening input stream specified file Binding input stream specified offset throws Exception public void set throws Exception loader new Read End Loader Load Func Context instantiate Func Spec l File get Func Spec Configuration Util Configuration pc get Properties l File get File Name signature end processing inputstream closed using method throws Exception public void tear throws Exception set Done false main method used operator successor read tuples specified file using specified load function return Whatever loader returns null loader indicative hence tear connection Override public Result get Next Tuple throws Exec Exception set Done l File null try set catch Exception ioe int err Code String msg Unable setup load function throw new Exec Exception msg err Code Exception ioe set Done true Result res new Result try res result loader get Next res result null res return Status Status tear else res return Status Status res return Status Status res result illustrator Markup res res result catch Exception e log error Received error loader function e return res return res Override public String name return l File null get Alias String Load l File String Key String get Alias String Load Dummy Fil Dummy Ldr Key String Override public boolean supports Multiple Inputs return false Override public boolean supports Multiple Outputs return false Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Load public File Spec get File return l File public void set File File Spec file l File file public void set Tmp Load boolean tmp Tmp Load tmp public boolean Tmp Load return Tmp Load public Context get Pc return pc public void set Pc Context pc pc pc public String get Signature return signature public void set Signature String signature signature signature public Load Func get Load Func loader null loader Load Func Context instantiate Func Spec l File get Func Spec loader set Context Signature signature return loader public Tuple illustrator Markup Object Object int eq Class Index illustrator null illustrator ceiling Check Result return Status Status return null illustrator get Schema null illustrator get Schema size Tuple size boolean Null false int Tuple size try Tuple get null Null true break catch Exec Exception e Null true break Null Example Tuple new Example Tuple Tuple illustrator get Lineage insert illustrator add Data Tuple illustrator get Equivalence Classes get eq Class Index add return else return Tuple else return Tuple else return Tuple public long get Limit return limit public void set Limit long limit limit limit public List String get Cache Files return cache Files public void set Cache Files List String cf cache Files cf public List String get Ship Files return ship Files public void set Ship Files List String sf ship Files sf
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java util Array List import java util Hash Map import java util List import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer expression Operators Expression Operator import org apache backend hadoop executionengine physical Layer expression Operators Project import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache data Data Type import org apache data Tuple import org apache impl io Nullable Writable import org apache impl plan Operator Key import org apache impl plan Plan Exception import org apache impl plan Visitor Exception import org apache pen util Example Tuple local rearrange operator part co group implementation embedded physical plan generates tuples form grp Key indxed inp Tuple public class Local Rearrange extends Physical Operator private static final Log log Log Factory get Log Local Rearrange class protected static final long serial Version private static final Result new Result protected List Physical Plan plans protected List Physical Plan secondary Plans protected List Expression Operator leaf Ops protected List Expression Operator secondary Leaf Ops position package operator protected byte index protected byte key Type protected byte main Key Type protected byte secondary Key Type protected boolean Distinct false protected boolean Cross false map store mapping projected columns position Key projected use information strip columns Value Package stitch right Value tuple back getting columns key goal reduce amount data sent Hadoop map Example load bla b load bla c cogroup b first input map would contain following key value corresponds cogroup corresponds st index key corresponds cogroup corresponds nd index key private final Map Integer Integer Projected Cols Map private final Map Integer Integer Secondary Projected Cols Map place holder Tuple used distinct case really n value pass hadoop gets cranky pass null create one instance empty tuple pass every row get around actually creating Distinct set true protected Tuple Fake Tuple null indicator whether project inner plans project set project thing cogroup private boolean Project Star false private boolean Secondary Project Star false marker note key tuple required Package pick things key correctly stitch together value private boolean Key Tuple false marker note tuple key compound nature example group group key tuple two fields Key Compound group tuple group key tuple one field Key Compound private boolean Key Compound false private boolean Secondary Key Tuple false private int Projected Cols Map Size private int Secondary Projected Cols Map Size private boolean use Secondary Key false default strip keys value private boolean strip Key Value true protected transient Result inp public Local Rearrange Operator Key k k null public Local Rearrange Operator Key k int rp k rp null public Local Rearrange Operator Key k List Physical Operator inp k inp public Local Rearrange Operator Key k int rp List Physical Operator inp super k rp inp index leaf Ops new Array List Expression Operator secondary Leaf Ops new Array List Expression Operator Projected Cols Map new Hash Map Integer Integer Secondary Projected Cols Map new Hash Map Integer Integer public Local Rearrange Local Rearrange copy super copy plans copy plans secondary Plans copy secondary Plans leaf Ops copy leaf Ops secondary Leaf Ops copy secondary Leaf Ops index copy index key Type copy key Type main Key Type copy main Key Type secondary Key Type copy secondary Key Type Distinct copy Distinct Cross copy Cross Projected Cols Map copy Projected Cols Map Secondary Projected Cols Map copy Secondary Projected Cols Map Fake Tuple copy Fake Tuple Project Star copy Project Star Secondary Project Star copy Secondary Project Star Key Tuple copy Key Tuple Key Compound copy Key Compound Secondary Key Tuple copy Secondary Key Tuple Projected Cols Map Size copy Projected Cols Map Size Secondary Projected Cols Map Size copy Secondary Projected Cols Map Size use Secondary Key copy use Secondary Key strip Key Value copy strip Key Value Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Local Rearrange Override public String name return get Alias String Local Rearrange Data Type find Type Name result Type Data Type find Type Name key Type Distinct Key String Override public boolean supports Multiple Inputs return false Override public boolean supports Multiple Outputs return false public byte get Index return index Sets co group index operator param index position operator co group operation throws Exec Exception index value bigger x public void set Index int index throws Exec Exception set Index index false Sets multi query index operator param index position parent plan operator enclosed split operator throws Exec Exception index value bigger x public void set Multi Query Index int index throws Exec Exception set Index index true private void set Index int index boolean multi Query throws Exec Exception index Nullable Writable idx Space indices group cogroup range x x possible inputs int err Code String msg multi Query Merge map reduce jobs supported Cogroups inputs supported throw new Exec Exception msg err Code Exception else could potentially sending key value relating multiple group statements one map reduce job multiquery optimized execution case want two keys content coming different group operations treated differently go different invocations reduce achieve let index outside regular index space x x Ring mq Flag bitmask put index x value Nullable Writable compare index multiquery space also consider index comparing two Nullable Writables contents Keys contents coming different group operations would different indices hence would go different invocation reduce index multi Query byte index Nullable Writable mq Flag byte index public boolean Distinct return Distinct public void set Distinct boolean Distinct Distinct Distinct Distinct Fake Tuple Tuple Factory new Tuple Overridden since attachment new input cause old processing end Override public void attach Input Tuple super attach Input Calls get Next generate operator inside nested physical plan Converts generated tuple proper format e key indexed Tuple value Override public Result get Next Tuple throws Exec Exception inp null Result res true inp process Input inp return Status Status inp return Status Status break inp return Status Status continue Physical Plan ep plans ep attach Input Tuple inp result List Result res Lst new Array List Result secondary Plans null Physical Plan ep secondary Plans ep attach Input Tuple inp result List Result secondary Res Lst null secondary Leaf Ops null secondary Res Lst new Array List Result Expression Operator op leaf Ops switch op get Result Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type res op get Next op get Result Type break default log error Invalid result type Data Type find Type op get Result Type break res return Status Status return res res Lst add res secondary Leaf Ops null Expression Operator op secondary Leaf Ops switch op get Result Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type res op get Next op get Result Type break default log error Invalid result type Data Type find Type op get Result Type break allow null group key res return Status Status res return Status Status return new Result secondary Res Lst add res using secondary sort key new key nullable index key secondary key value res result construct Output res Lst secondary Res Lst Tuple inp result res return Status Status detach Plans plans secondary Plans null detach Plans secondary Plans res result illustrator Markup inp result res result return res return inp private void detach Plans List Physical Plan plans Physical Plan ep plans ep detach Input protected Object get Key Result List Result res Lst byte type throws Exec Exception Object key res Lst size Tuple Tuple Factory new Tuple res Lst size int Result res res Lst set res result key else res Lst size type Data Type get merging multiple jobs different map key types single job multi query optimization key n tuple must wrapped tuple Object obj res Lst get result obj instanceof Tuple key obj else Tuple Tuple Factory new Tuple set res Lst get result key else key res Lst get result return key protected Tuple construct Output List Result res Lst List Result secondary Res Lst Tuple value throws Exec Exception Tuple lr Output Tuple Factory new Tuple lr Output set Byte value index Construct key Object key Object secondary Key null secondary Res Lst null secondary Res Lst size key get Key Result res Lst main Key Type secondary Key get Key Result secondary Res Lst secondary Key Type else key get Key Result res Lst key Type strip Key Value lr Output set key lr Output set value return lr Output Distinct Put key indexed tuple tuple return lr Output set key illustrator null lr Output set key else lr Output set Fake Tuple return lr Output else Cross int plans size value get remove Put index key value tuple return lr Output set key lr Output set value return lr Output else Put index key value tuple return use Secondary Key Tuple compound Key Tuple Factory new Tuple compound Key set key compound Key set secondary Key lr Output set compound Key else lr Output set key strip columns value present key Projected Cols Map Size Project Star true Tuple minimal Value null Project Star minimal Value Tuple Factory new Tuple look individual columns projecting int value size Projected Cols Map get null column found key send value minimal Value append value get minimal Value illustrator Markup value minimal Value else project star case would send empty tuple value since elements key minimal Value Tuple Factory new Tuple lr Output set minimal Value else columns key strip value send value got lr Output set value return lr Output public byte get Key Type return key Type public byte get Main Key Type return main Key Type public void set Key Type byte key Type use Secondary Key main Key Type key Type else key Type key Type main Key Type key Type public List Physical Plan get Plans return plans public void set Use Secondary Key boolean use Secondary Key use Secondary Key use Secondary Key main Key Type key Type public void set Plans List Physical Plan plans throws Plan Exception plans plans leaf Ops clear int key Index zero based index fields key Physical Plan plan plans Expression Operator leaf Expression Operator plan get Leaves get leaf Ops add leaf n optimize Cross Look leaf Ops Project operators get columns Project Operators projecting projecting either column Keep track columns projected position Key projected use information strip columns Value Package stitch right Value tuple back getting columns key goal reduce amount data sent Hadoop map leaf instanceof Project Project project Project leaf project Star note project Project Star true key tuple case Key Tuple true number columns project unkown position remaining colums key ca n determined stop optimizing break else project Project End List Physical Operator preds plan get Predecessors project preds null preds size sanity check never come throw new Assertion Error project range predecessors number columns project end unkown position remaining colums key ca n determined stop optimizing break else try List Physical Operator preds plan get Predecessors leaf preds null preds get instanceof Project Projected Cols Map put project get Column key Index catch Exec Exception e int err Code String msg Problem accessing column project operator throw new Plan Exception msg err Code Exception project get Result Type Data Type Key Tuple true key Index key Index make note key tuple required Package pick things key correctly stitch together value Key Tuple true Key Compound true Projected Cols Map Size Projected Cols Map size public void set Secondary Plans List Physical Plan plans throws Plan Exception secondary Plans plans secondary Leaf Ops clear int key Index zero based index fields key Physical Plan plan plans Expression Operator leaf Expression Operator plan get Leaves get secondary Leaf Ops add leaf n optimize Cross Look leaf Ops Project operators get columns Project Operators projecting projecting either column Keep track columns projected position Key projected use information strip columns Value Package stitch right Value tuple back getting columns key goal reduce amount data sent Hadoop map leaf instanceof Project Project project Project leaf project Star note project Secondary Project Star true key tuple case Secondary Key Tuple true number columns project unknown position remaining columns key ca n determined stop optimizing break else project Project End List Physical Operator preds plan get Predecessors project preds null preds size sanity check never come throw new Assertion Error project range predecessors number columns project end unknown position remaining columns key ca n determined stop optimizing break else try List Physical Operator preds plan get Predecessors leaf preds null preds get instanceof Project Secondary Projected Cols Map put project get Column key Index catch Exec Exception e int err Code String msg Problem accessing column project operator throw new Plan Exception msg err Code Exception project get Result Type Data Type Secondary Key Tuple true key Index key Index make note key tuple required Package pick things key correctly stitch together value Secondary Key Tuple true main Key Type key Type key Type Data Type plans size secondary Key Type Data Type else secondary Key Type plans get get Leaves get get Result Type Secondary Projected Cols Map Size Secondary Projected Cols Map size Make deep copy operator throws Clone Supported Exception Override public Local Rearrange clone throws Clone Supported Exception Local Rearrange clone Local Rearrange super clone Constructor clone leaf Ops new Array List Expression Operator clone secondary Leaf Ops new Array List Expression Operator Needs called set Distinct fake index tuple gets created clone set Distinct Distinct Set key Type main Key Type set Secondary Plans calculate based set key Type final value use Secondary Key clone key Type main Key Type try clone set Plans clone Plans plans secondary Plans null clone set Secondary Plans clone Plans secondary Plans catch Plan Exception pe Clone Supported Exception cnse new Clone Supported Exception Problem setting plans get Class get Simple Name cnse init Cause pe throw cnse return clone public boolean Cross return Cross public void set Cross boolean Cross Cross Cross return Projected Cols Map public Map Integer Integer get Projected Cols Map return Projected Cols Map return Projected Cols Map public Map Integer Integer get Secondary Projected Cols Map return Secondary Projected Cols Map return Project Star public boolean Project Star return Project Star return Project Star public boolean Secondary Project Star return Secondary Project Star return key Tuple public boolean Key Tuple return Key Tuple return Key Compound public boolean Key Compound return Key Compound return key Tuple public boolean Secondary Key Tuple return Secondary Key Tuple param plans throws Exec Exception public void set Plans Combiner List Physical Plan plans throws Plan Exception plans plans leaf Ops clear Projected Cols Map clear int key Index zero based index fields key Physical Plan plan plans Expression Operator leaf Expression Operator plan get Leaves get leaf Ops add leaf n optimize Cross Look leaf Ops Project operators get columns Project Operators projecting Keep track columns projected position Key projected use information strip columns Value Post Combiner Package stitch right Value tuple back getting columns key goal reduce amount data sent Hadoop map leaf instanceof Project Project project Project leaf project Project End int err Code String msg Internal error Unexpected operator project local rearrange inner plan throw new Plan Exception msg err Code Exception else try Projected Cols Map put project get Column key Index catch Exec Exception e int err Code String msg Problem accessing column project operator throw new Plan Exception msg err Code Exception project get Result Type Data Type Key Tuple true key Index key Index make note key tuple required Package pick things key correctly stitch together value Key Tuple true Projected Cols Map Size Projected Cols Map size protected void set Strip Key Value boolean strip Key Value strip Key Value strip Key Value Override public Tuple illustrator Markup Object Object int eq Class Index illustrator null instanceof Example Tuple Example Tuple new Example Tuple Tuple illustrator get Lineage insert illustrator add Data illustrator get Lineage union Tuple synthetic Example Tuple synthetic return return Tuple
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java util List import java util Map import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache data Tuple import org apache impl plan Operator Key import org apache impl plan Node Id Generator import org apache impl plan Visitor Exception public class Map Look extends Expression Operator private static final long serial Version private String key public Map Look Operator Key k super k public Map Look Operator Key k int rp super k rp public Map Look Operator Key k int rp String key super k rp key key public void set Look Key String key key key public String get Look Key return key Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Map Look Override public String name return Map Look Data Type find Type Name result Type Key String Override public boolean supports Multiple Inputs return false Override public Result process Input throws Exec Exception Result res new Result Map String Object inp Value null input null inputs null inputs size log warn inputs found Signaling End Processing res return Status Status return res Input Attached return inputs get get Next Map else res result input res return Status Status detach Input return res Suppress Warnings unchecked private Result get Next throws Exec Exception Result res process Input res result null res return Status Status res result Map String Object res result get key return res Override public Result get Next Boolean throws Exec Exception return get Next Override public Result get Next Data Bag throws Exec Exception return get Next Override public Result get Next Data Byte Array throws Exec Exception return get Next Override public Result get Next Double throws Exec Exception return get Next Override public Result get Next Float throws Exec Exception return get Next Override public Result get Next Integer throws Exec Exception return get Next Override public Result get Next Long throws Exec Exception return get Next Override public Result get Next Date Time throws Exec Exception return get Next Override public Result get Next Map throws Exec Exception return get Next Override public Result get Next String throws Exec Exception return get Next Override public Result get Next Tuple throws Exec Exception return get Next Override public Map Look clone throws Clone Supported Exception Map Look clone new Map Look new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope key clone clone Helper return clone Override public List Expression Operator get Child Expressions return null Override public Tuple illustrator Markup Object Object int eq Class Index return Tuple
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java io Exception import java io Object Input Stream import java util Array List import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop mapreduce Job import org apache Func Spec import org apache Indexable Load Func import org apache Load Func import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Map Reduce import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache data Data Type import org apache data Schema Tuple import org apache data Schema Tuple Backend import org apache data Schema Tuple Class Generator Gen Context import org apache data Schema Tuple Factory import org apache data Tuple import org apache data Tuple Factory import org apache data Tuple Maker import org apache impl Context import org apache impl builtin Default Indexable Loader import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Plan Exception import org apache impl plan Visitor Exception import org apache impl util Multi Map import org apache newplan logical relational Join operator implements merge join algorithm map side joins Currently two way joins supported One input join identified left identified right Left input tuples input records map Right tuples read opening right stream join n support outer join Data assumed sorted ascending order fail data sorted descending order public class Merge Join extends Physical Operator private static final Log log Log Factory get Log Merge Join class private static final long serial Version private static final String key Order Reminder Remember change order keys merge join manipulate join keys way would change sort order Fs allowed long change join key values way would change sort order n flag indicate get Next called first private boolean first Time true Local Rearrange operators modeling join key private Local Rearrange Rs private transient Load Func right Loader private Operator Key op Key private Object prev Left Key private Result prev Left Inp private Object prev Right Key null private Result prev Right Inp boolean denoting whether generating joined tuples get Next call need read data private boolean Join private Func Spec right Loader Func Spec private String right Input File Name private String index File Buffer hold accumulated left tuples private transient Tuples Schema Tuple List left Tuples private Multi Map Physical Operator Physical Plan inp Plans private Physical Operator right Pipeline Leaf private Physical Operator right Pipeline Root private boolean Inner Plan Right Side private Object cur Join Key private Tuple cur Joining Right Tup private int counter tuples left side key private int left Tup Size private int right Tup Size private int array List Size private Join join Type private String signature private byte end Record Mark Status Spark current operator reaches end flag end Input set true old flag parent Plan end Input n work spark mode shared operators plan could set preceding operators even current operator reach end see private transient boolean end Input false public boolean End Input return end Input public void set End Input boolean End Input end Input End Input spark means current operator reaches end last left input added left Tuples ready join private boolean left Input Consumed Spark false serves default Tuple Factory private transient Tuple Factory Tuple Factory Tuple Factories used efficient Tuple generation decrease amount memory needed given map task successfully perform merge join private transient Tuple Maker merged Tuple Maker private transient Tuple Maker left Tuple Maker private Schema left Input Schema private Schema merged Input Schema param k param rp param inp param inp Plans inputs List Physical Plan Ex join public Merge Join Operator Key k int rp List Physical Operator inp Multi Map Physical Operator Physical Plan inp Plans List List Byte key Types Join join Type Schema left Input Schema Schema right Input Schema Schema merged Input Schema throws Plan Exception super k rp inp op Key k Join false inp Plans inp Plans Rs new Local Rearrange create Join Plans inp Plans key Types index File null join Type join Type left Input Schema left Input Schema merged Input Schema merged Input Schema Configures Local Rearrange operators get keys tuple throws Exec Exception private void create Join Plans Multi Map Physical Operator Physical Plan inp Plans List List Byte key Types throws Plan Exception int Physical Operator inp Phy Op inp Plans key Set Local Rearrange lr new Local Rearrange gen Key try lr set Index catch Exec Exception e throw new Plan Exception e get Message e get Error Code e get Error Source e lr set Result Type Data Type lr set Key Type key Types get size Data Type key Types get get lr set Plans inp Plans get inp Phy Op Rs lr helper method sets Tuple Factory members private void prepare Tuple Factories Tuple Factory Tuple Factory get Instance left Input Schema null left Tuple Maker Schema Tuple Backend new Schema Tuple Factory left Input Schema false Gen Context left Tuple Maker null log debug Schema Tuple Factory available combined left merge join schema left Input Schema left Tuple Maker Tuple Factory else log debug Using Schema Tuple Factory left merge join schema left Input Schema merged Input Schema null merged Tuple Maker Schema Tuple Backend new Schema Tuple Factory merged Input Schema false Gen Context merged Tuple Maker null log debug Schema Tuple Factory available combined left right merge join schema merged Input Schema merged Tuple Maker Tuple Factory else log debug Using Schema Tuple Factory left right merge join schema merged Input Schema provides List store Tuples implementation list depends whether Tuple Factory available return list object store Tuples private Tuples Schema Tuple List new Left Tuple Array return new Tuples Schema Tuple List array List Size left Tuple Maker class extends Array List making easy provide fly conversion Tuple Schema Tuple necessary getting Schema Tuples source though future would like public static class Tuples Schema Tuple List extends Array List Tuple private Schema Tuple Factory tf public Tuples Schema Tuple List int ct Tuple Maker tf super ct tf instanceof Schema Tuple Factory tf Schema Tuple Factory tf public static Schema Tuple convert Tuple Schema Tuple Factory tf instanceof Schema Tuple return Schema Tuple Schema Tuple st tf new Tuple try return st set catch Exec Exception e throw new Runtime Exception Unable set Schema Tuple schema st get Schema String given Tuple merge join Override public boolean add Tuple tf null convert tf return super add Override public Tuple get int return super get Override public int size return super size Suppress Warnings unchecked Override public Result get Next Tuple throws Exec Exception Object cur Left Key Result cur Left Inp first Time prepare Tuple Factories left Tuples new Left Tuple Array initial setup cur Left Inp process Input cur Left Inp return Status Status return cur Left Inp Return want fetch next left tuple cur Left Key extract Keys Tuple cur Left Inp null cur Left Key drop tuples null keys return new Result end Record Mark null try seek Right Stream cur Left Key catch Exception e throw Processing Exception true e catch Class Cast Exception e throw Processing Exception true e left Tuples add Tuple cur Left Inp result first Time false prev Left Key cur Left Key return new Result end Record Mark null Join matched keys Time join counter left tuples join current right tuple Tuple joining Left Tup left Tuples get counter left Tup Size joining Left Tup size Tuple joined Tup merged Tuple Maker new Tuple left Tup Size right Tup Size int left Tup Size joined Tup set joining Left Tup get int right Tup Size joined Tup set left Tup Size cur Joining Right Tup get return new Result Status joined Tup Join current right input ended bag left tuples may still join next right tuple Join false true Result right Inp get Next Right Inp right Inp return Status Status prev Right Inp null return right Inp else Object right Key extract Keys Tuple right Inp null right Key see tuple null keys stream drop continue fetch next tuple int cmpval Comparable right Key compare cur Join Key cmpval Matched next right tuple cur Joining Right Tup Tuple right Inp result right Tup Size cur Joining Right Tup size counter left Tuples size Join true return get Next Tuple else cmpval got ahead right side Store currently read right tuple parent Plan end Input left Input Consumed Spark prev Right Key right Key prev Right Inp right Inp cant join key left Tuples new Left Tuple Array left Tuples add Tuple prev Left Inp result return new Result end Record Mark null else end input last join output Right loader case would n get chance close input stream close ourself try Indexable Load Func right Loader close catch Exception e Non fatal error continue log error Received exception trying close right side file e get Message return new Result Status null else point right side ca n behind int err Code String err Msg Data sorted right side n key Order Reminder Last two tuples encountered n cur Joining Right Tup n Tuple right Inp result throw new Exec Exception err Msg err Code cur Left Inp process Input switch cur Left Inp return Status case Status cur Left Key extract Keys Tuple cur Left Inp null cur Left Key drop tuples null keys return new Result end Record Mark null int cmp Val Comparable cur Left Key compare prev Left Key cmp Val Keep accumulating left Tuples add Tuple cur Left Inp result return new Result end Record Mark null else cmp Val Filled left bag Move cur Join Key prev Left Key break else Current key Prev Key int err Code String err Msg Data sorted left side n key Order Reminder Last two tuples encountered n prev Left Key n cur Left Key throw new Exec Exception err Msg err Code case Status parent Plan end Input End Input hit end left input Tuples bag may still possibly join right side cur Join Key prev Left Key cur Left Key null End Input left Input Consumed Spark true break else Fetch next left input return cur Left Inp default encountered left side send return cur Left Inp null prev Right Key parent Plan end Input left Input Consumed Spark Comparable prev Right Key compare cur Left Key happen accumulated inputs left side moved still behind right side case throw away tuples accumulated till add one read function call left Tuples new Left Tuple Array left Tuples add Tuple cur Left Inp result prev Left Inp cur Left Inp prev Left Key cur Left Key return new Result end Record Mark null Accumulated tuples key left side since reading ahead still n checked read ahead right tuple Accumulated left tuples may potentially join lets check first null prev Right Key prev Right Key equals prev Left Key cur Joining Right Tup Tuple prev Right Inp result counter left Tuples size right Tup Size cur Joining Right Tup size Join true prev Left Inp cur Left Inp prev Left Key cur Left Key return get Next Tuple get cur Left Key prev Right Key boolean sliding Next Record false true Start moving right stream find tuple whose key current left bag key Result right Inp sliding Next Record right Inp get Next Right Inp sliding Next Record false else right Inp get Next Right Inp prev Left Key right Inp return Status Status return right Inp Object extracted Right Key extract Keys Tuple right Inp null extracted Right Key see tuple null keys stream drop continue fetch next tuple Comparable right Key Comparable extracted Right Key prev Right Key null right Key compare prev Right Key Sanity check int err Code String err Msg Data sorted right side n key Order Reminder Last two tuples encountered n prev Right Key n right Key throw new Exec Exception err Msg err Code int cmpval right Key compare prev Left Key cmpval still behind left side nothing fetch next right tuple sliding Next Record true continue else cmpval Found matching tuple Time join cur Joining Right Tup Tuple right Inp result counter left Tuples size right Tup Size cur Joining Right Tup size Join true prev Left Inp cur Left Inp prev Left Key cur Left Key return get Next Tuple else got ahead right side Store currently read right tuple prev Right Key right Key prev Right Inp right Inp Since n find matching right tuple throw away buffered left tuples add one read function call left Tuples new Left Tuple Array left Tuples add Tuple cur Left Inp result prev Left Inp cur Left Inp prev Left Key cur Left Key parent Plan end Input left Input Consumed Spark end input last time read right input Right loader case would n get chance close input stream close ourself try Indexable Load Func right Loader close catch Exception e Non fatal error continue log error Received exception trying close right side file e get Message return new Result end Record Mark null private void seek Right Stream Object first Left Key throws Exception right Loader Load Func Context instantiate Func Spec right Loader Func Spec check hadoop distributed cache used index File null right Loader instanceof Default Indexable Loader Default Indexable Loader loader Default Indexable Loader right Loader loader set Index File index File Pass signature loader right Loader make copy conf use calls right Loader right Loader set Context Signature signature Job job new Job new Configuration Map Reduce Job Conf Internal get right Loader set Location right Input File Name job Indexable Load Func right Loader initialize job get Configuration Indexable Load Func right Loader seek Near first Left Key instanceof Tuple Tuple first Left Key Tuple Factory new Tuple first Left Key private Result get Next Right Inp Object left Key throws Exec Exception call seek Near merge join merge sparse Default Indexable Loader support single call seek Near per split n call seek Near join Type Join try Indexable Load Func right Loader seek Near left Key instanceof Tuple Tuple left Key Tuple Factory new Tuple left Key prev Right Key null catch Exception e throw Processing Exception true e return get Next Right Inp private Result get Next Right Inp throws Exec Exception try Inner Plan Right Side Tuple right Loader get Next null data right side return new Result Status null else return new Result Status else Result res right Pipeline Leaf get Next Tuple right Pipeline Leaf detach Input switch res return Status case Status return res case Status Tuple right Loader get Next null data right side return new Result Status null else run tuple pipeline right Pipeline Root attach Input return get Next Right Inp default n deal pass throw Processing Exception false null catch Exception e throw Processing Exception true e never get return new Result Status null public void throw Processing Exception boolean Cause Exception Exception e throws Exec Exception int err Code String err Msg Error processing right input merge join Cause Exception throw new Exec Exception err Msg err Code Exception e else throw new Exec Exception err Msg err Code Exception private Object extract Keys Tuple Result inp int lr Idx throws Exec Exception Separate Key Value input using corresponding operator Local Rearrange lr Rs lr Idx lr attach Input Tuple inp result Result lr lr get Next Tuple lr detach Input lr return Status Status int err Code String err Msg Local Rearrange used extract keys tuple n configured correctly throw new Exec Exception err Msg err Code Exception return Tuple lr result get public void setup Right Pipeline Physical Plan right Pipeline throws Frontend Exception right Pipeline null right Pipeline get Leaves size right Pipeline get Roots size int err Code String err Msg Expected physical plan exactly one root one leaf throw new Frontend Exception err Msg err Code Exception Inner Plan Right Side false right Pipeline Leaf right Pipeline get Leaves get right Pipeline Root right Pipeline get Roots get right Pipeline Root set Inputs null else Inner Plan Right Side true private void read Object Object Input Stream throws Exception Class Found Exception Exec Exception default Read Object Tuple Factory Tuple Factory get Instance private Operator Key gen Key return new Operator Key op Key scope Node Id Generator get Generator get Next Node Id op Key scope public void set Right Loader Func Spec Func Spec right Loader Func Spec right Loader Func Spec right Loader Func Spec public List Physical Plan get Inner Plans int index return inp Plans get inputs get index Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Merge Join Override public String name String name get Alias String Merge Join join Type Join name sparse name Data Type find Type Name result Type Key String return name Override public boolean supports Multiple Inputs return true non Javadoc see org apache impl plan Operator supports Multiple Outputs Override public boolean supports Multiple Outputs return false param right Input File Name right Input File Name set public void set Right Input File Name String right Input File Name right Input File Name right Input File Name public String get Signature return signature public void set Signature String signature signature signature public void set Index File String index File index File index File public String get Index File return index File Override public Tuple illustrator Markup Object Object int eq Class Index return null public Join get Join Type return join Type public Local Rearrange get Rs return Rs
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java math Big Decimal import java math Big Integer import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache data Tuple import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception public class Negative extends Unary Expression Operator private static final long serial Version public Negative Operator Key k int rp super k rp public Negative Operator Key k super k public Negative Operator Key k int rp Expression Operator input super k rp expr input Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Negative Override public String name Auto generated method stub return Negative Data Type find Type Name result Type Key String Override public Result get Next Double throws Exec Exception Result res expr get Next Double res return Status Status res result null res result Double res result return res Override public Result get Next Float throws Exec Exception Result res expr get Next Float res return Status Status res result null res result Float res result return res Override public Result get Next Integer throws Exec Exception Result res expr get Next Integer res return Status Status res result null res result Integer res result return res Override public Result get Next Long throws Exec Exception Result res expr get Next Long res return Status Status res result null res result Long res result return res Override public Result get Next Big Integer throws Exec Exception Result res expr get Next Big Integer res return Status Status res result null res result Big Integer res result negate return res Override public Result get Next Big Decimal throws Exec Exception Result res expr get Next Big Decimal res return Status Status res result null res result Big Decimal res result negate return res Override public Negative clone throws Clone Supported Exception Negative clone new Negative new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone Override public Tuple illustrator Markup Object Object int eq Class Index return Tuple
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception Boolean operator public class extends Binary Comparison Operator private static final long serial Version public Operator Key k k public Operator Key k int rp super k rp result Type Data Type Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Override public String name return Data Type find Type Name result Type Key String Override public Result get Next Boolean throws Exec Exception Result r accum Child null Data Type r null return r Result left left lhs get Next Boolean pass left return Status Status return left truth table true n null f false n f n n n f n f Short circuit lhs true return true handled boolean return Left false left result null Boolean left result boolean Value illustrator null return left illustrator Markup null left result return Left true Result right rhs get Next Boolean return Left return left pass right return Status Status return right lhs null rhs false return null cases return rhs left result null right result null Boolean right result boolean Value return left matter get right side return null true false right result null illustrator Markup null right result Boolean right result return right Override public clone throws Clone Supported Exception clone new new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone clone Helper return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java io Exception import java util Array List import java util Iterator import java util List import org apache Configuration import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Map Reduce import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine util Accumulator Optimizer Util import org apache data Accumulative Bag import org apache data Data Bag import org apache data Data Type import org apache data Internal Cached Bag import org apache data Read Bag import org apache data Tuple import org apache impl io Nullable Tuple import org apache impl io Nullable Writable import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache pen Illustrator package operator packages globally rearranged tuples output format required co group last stage processing co group operator slightly different format operators takes two things input key worked iterator bags contain indexed tuples need packaged appropriate output bags based index public class Package extends Physical Operator private static final long serial Version iterator indexed Tuples typically provided Hadoop transient Iterator Nullable Tuple tup Iter key worked protected Object key number inputs co group indicates distinct means key value protected int num Inputs private boolean last Bag Read true protected Packager pkgr protected Nullable Writable key Writable private transient boolean initialized private transient boolean use Default Bag private transient int accumulative Batch Size public Package Operator Key k k null public Package Operator Key k int rp k rp null public Package Operator Key k List Physical Operator inp k inp public Package Operator Key k int rp List Physical Operator inp k rp inp new Packager public Package Operator Key k int rp List Physical Operator inp Packager pkgr super k rp inp num Inputs pkgr pkgr public Package Package copy super copy num Inputs copy num Inputs pkgr copy pkgr pkgr key Info copy pkgr key Info Override public void set Illustrator Illustrator illustrator super set Illustrator illustrator pkgr set Illustrator illustrator Override public String name return get Alias String Package pkgr name Data Type find Type Name result Type Data Type find Type Name pkgr get Key Type Key String Override public boolean supports Multiple Inputs return false Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Package Override public boolean supports Multiple Outputs return false Attaches required inputs param k key worked param inp iterator indexed tuples typically obtained Hadoop public void attach Input Nullable Writable k Iterator Nullable Tuple inp try tup Iter inp key pkgr get Key k key Writable k input Attached true catch Exception e throw new Runtime Exception Error attaching input key k name location get Original Locations e attach Input better half Override public void detach Input tup Iter null key null input Attached false public int get Num Inps return num Inputs public void set Num Inps int num Inps num Inputs num Inps pkgr set Num Inputs num Inps inputs constructs output tuple co group required format key bag tuples input bag tuples input Override public Result get Next Tuple throws Exec Exception initialized initialized true Map Reduce Job Conf Internal get null String bag Type Map Reduce Job Conf Internal get get Configuration bag Type null bag Type equals Ignore Case default use Default Bag true accumulative Batch Size Accumulator Optimizer Util get Accumulative Batch Size multiquery last bag Internal Cached Bag set Read flag otherwise materialize another Internal Cached Bag pkgr instanceof Multi Query Packager last Bag Read false int num Inputs pkgr get Num Inputs key Writable get Index boolean read new boolean num Inputs int num Inputs read false Input Attached Create num Inputs bags Data Bag dbs null dbs new Data Bag num Inputs Accumulative read num Inputs false create bag wrapper pull tuples many batches bags reference sample tuples buffer contains tuples one batch Package Tuple Buffer buffer new Package Tuple Buffer accumulative Batch Size key tup Iter int num Inputs dbs new Accumulative Bag buffer else last Bag Read read num Inputs true know tuples come sorted index wrap last input Read Bag let Packager decide whether read memory create bag pull tuples iterator int num Inputs dbs use Default Bag Bag Factory new Default Bag rare case Stream Package pipeline also blocking pipeline constructor argument num Inputs one obscure case n want pay penalty time new Internal Cached Bag num Inputs indexed tup inp sort corresponding bags based index tup Iter Next Nullable Tuple ntup tup Iter next int index ntup get Index index num Inputs pkgr get Use Secondary Key dbs index null dbs index use Default Bag Bag Factory new Default Bag new Internal Cached Bag num Inputs else dbs index new Peeked Bag pkgr ntup tup Iter key Writable break Tuple copy pkgr get Value Tuple key Writable ntup index num Inputs multi query merge num Inputs always index position inner plan enclosed operator may dbs add copy else dbs index add copy get Reporter null get Reporter progress Construct output tuple appending key constructed bags return pkgr attach Input key dbs read detach Input return pkgr get Next public Packager get Pkgr return pkgr public void set Pkgr Packager pkgr pkgr pkgr pkgr set Parent pkgr set Illustrator illustrator Make deep copy operator throws Clone Supported Exception Override public Package clone throws Clone Supported Exception Package clone Package super clone clone Key new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope clone requested Parallelism requested Parallelism clone result Type result Type clone num Inputs num Inputs clone pkgr Packager pkgr clone return clone public class Package Tuple Buffer implements Accumulative Tuple Buffer private List Tuple bags private Iterator Nullable Tuple iter private int batch Size private Object curr Key Suppress Warnings unchecked public Package Tuple Buffer int batch Size Object key Iterator Nullable Tuple iter batch Size batch Size curr Key key iter iter bags new List num Inputs int num Inputs bags new Array List Tuple batch Size Override public boolean Next Batch return iter Next Override public void next Batch throws Exception int bags length bags clear key curr Key int batch Size iter Next Nullable Tuple ntup iter next int index ntup get Index Tuple copy pkgr get Value Tuple key Writable ntup index num Inputs multi query merge num Inputs always index position inner plan enclosed operator may bags add copy else bags index add copy else break Override public void clear int bags length bags clear iter null Override public Iterator Tuple get Tuples int index return bags index iterator public Tuple illustrator Markup Object Object int eq Class Index return Package illustrator Markup eq Class Index Override public Tuple illustrator Markup Object Object int eq Class Index return pkgr illustrator Markup eq Class Index public int number Equivalence Classes return pkgr number Equivalence Classes Read Bag already peeked private static class Peeked Bag extends Read Bag private static final long serial Version Nullable Tuple head int index public Peeked Bag Packager pkgr Nullable Tuple head Iterator Nullable Tuple tup Iter Nullable Writable key Writable super pkgr tup Iter key Writable head head index head get Index Override public Iterator Tuple iterator return new Iterator Tuple boolean head Returned false Override public boolean Next head Returned return true return tup Iter Next Override public Tuple next head Returned head Returned true try return pkgr get Value Tuple key Writable head head get Index catch Exec Exception e throw new Runtime Exception Peeked Bag failed get value tuple e String Nullable Tuple ntup tup Iter next Tuple ret null try ret pkgr get Value Tuple key Writable ntup index catch Exec Exception e throw new Runtime Exception Peeked Bag failed get value tuple e String get Reporter null get Reporter progress return ret Override public void remove throw new Unsupported Operation Exception Peeked Bag support removal
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java util Array List import java util Iterator import java util List import org apache Exception import org apache Warning import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Bag import org apache data Data Type import org apache data Single Tuple Bag import org apache data Tuple import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception Implements overloaded form project operator Projects specified column input tuple However asked tuples input bag overloaded form invoked project streams tuples instead bag public class Project extends Expression Operator private static final long serial Version private boolean result Single Tuple Bag false column project protected Array List Integer columns True middle streaming tuples bag private boolean processing Bag Tuples false bag iterator used straeming tuple private transient Iterator Tuple bag Iterator null Represents fact instance Project overloaded stream tuples bag rather passing entire bag responsibility translator set protected boolean overloaded false protected boolean Project End false protected int start Col public Project Operator Key k k public Project Operator Key k int rp k rp public Project Operator Key k int rp int col super k rp columns new Array List Integer columns add col public Project Operator Key k int rp Array List Integer cols super k rp columns cols public void set Project End int start Col Project End true start Col start Col columns new Array List Integer Override public String name String str Project Data Type find Type Name result Type Star str else Project End str start Col else str columns str Key String return str Override public boolean supports Multiple Inputs return false Override public boolean supports Multiple Outputs return false Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Project Overridden since attachment new input cause old processing end Override public void attach Input Tuple super attach Input processing Bag Tuples false Fetches input tuple returns requested column return next value throws Exec Exception public Result get Next throws Exec Exception Result res process Input Tuple inp Value Tuple res result Object ret res return Status Status return res Star illustrator Markup inp Value res result return res else columns size inp Value null tuple null dereference also produce null res return Status Status ret null else inp Value size columns get ret inp Value get columns get else Logger null Logger warn Attempt access field found input Warning res return Status Status ret null else Project End ret get Range Tuple inp Value else Array List Object obj List new Array List Object columns size int col columns add Column obj List inp Value col ret Tuple Factory new Tuple Copy obj List res result ret illustrator Markup inp Value res result return res private boolean Range Invalid int last Col Idx start Col last Col Idx must happening tuple smaller start Col Logger null Logger warn Invalid range projected start Col postition start Col greater tuple size Warning return true return false Add th column inp Value obj List param obj List param inp Value param throws Exec Exception private void add Column Array List Object obj List Tuple inp Value int throws Exec Exception inp Value null tuple null dereference also produce null obj List add null else inp Value size obj List add inp Value get else Logger null Logger warn Attempt access field found input Warning obj List add null Override public Result get Next Data Bag throws Exec Exception Result res process Input Bag res return Status Status return res return consume Input Bag res param input throws Exec Exception protected Result consume Input Bag Result input throws Exec Exception Input Attached Star Result ret Val new Result ret Val result input result ret Val return Status Status detach Input return ret Val input result instanceof Data Bag Data Bag inp Bag Data Bag input result Result ret Val new Result Data Bag Bag result Single Tuple Bag one tuple bag create Single Tuple Bag result fill appropriately input bag Tuple tuple inp Bag iterator next Project End Array List Object obj List new Array List Object columns size int col columns add Column obj List tuple col Bag new Single Tuple Bag Tuple Factory new Tuple Copy obj List else Tuple tmp Tuple get Range Tuple tuple Bag new Single Tuple Bag tmp Tuple else Bag Bag Factory new Default Bag Tuple tuple inp Bag Project End Array List Object obj List new Array List Object columns size int col columns add Column obj List tuple col Bag add Tuple Factory new Tuple Copy obj List else Tuple Tuple get Range Tuple tuple Bag add Tuple ret Val result Bag ret Val return Status Status return ret Val else input result instanceof Tuple input tuple columns one item Result ret Val new Result ret Val result Tuple input result get columns get ret Val return Status Status return ret Val else input result null Result ret Val new Result ret Val result null ret Val return Status Status return ret Val else throw new Exec Exception dereference bag input result get Class get Name private Tuple get Range Tuple Tuple tuple throws Exec Exception int last Col Idx tuple size Tuple Tuple Range Invalid last Col Idx invalid range return empty tuple Tuple Tuple Factory new Tuple else Array List Object obj List new Array List Object last Col Idx start Col int start Col last Col Idx add Column obj List tuple Tuple Tuple Factory new Tuple Copy obj List return Tuple Override public Result get Next Data Byte Array throws Exec Exception return get Next Override public Result get Next Double throws Exec Exception return get Next Override public Result get Next Float throws Exec Exception return get Next Override public Result get Next Integer throws Exec Exception return get Next Override public Result get Next Long throws Exec Exception return get Next Override public Result get Next Boolean throws Exec Exception return get Next Override public Result get Next Date Time throws Exec Exception return get Next Override public Result get Next Map throws Exec Exception return get Next Override public Result get Next String throws Exec Exception return get Next Override public Result get Next Big Integer throws Exec Exception return get Next Override public Result get Next Big Decimal throws Exec Exception return get Next Asked Tuples Check input bag stream tuples bag instead entire bag Override public Result get Next Tuple throws Exec Exception Result res new Result processing Bag Tuples Tuple inp Value null res process Input res return Status Status return res Star return res inp Value Tuple res result res result null Object ret columns size inp Value null tuple null dereference also produce null ret null else inp Value size columns get ret inp Value get columns get else Logger null Logger warn Attempt access field found input Warning ret null else Project End ret get Range Tuple inp Value else Array List Object obj List new Array List Object columns size int col columns inp Value null tuple null dereference also produce null obj List add null else inp Value size col obj List add inp Value get col else Logger null Logger warn Attempt access field found input Warning obj List add null ret Tuple Factory new Tuple obj List res result Tuple ret return res overloaded ret null Data Bag ret Bag Data Bag ret bag Iterator ret Bag iterator bag Iterator Next processing Bag Tuples true res result bag Iterator next bag contains tuple set return Status processing Bag Tuples res return Status Status else res return Status Status else res result Tuple ret return res bag Iterator Next res result bag Iterator next res return Status Status return res else done processing bag tuples processing Bag Tuples false return get Next Tuple public Array List Integer get Columns Project End throw new Assertion Error Internal error Improper use method get Columns Project class get Simple Name return columns public int get Column throws Exec Exception columns size Project End int err Code String msg Internal error Improper use method get Column Project class get Simple Name throw new Exec Exception msg err Code Exception return columns get public int get Start Col return start Col public void set Columns Array List Integer cols Project End throw new Assertion Error Columns set range projection columns cols public void set Column int col Project End false null columns columns new Array List Integer else columns clear columns add col public boolean Overloaded return overloaded public void set Overloaded boolean overloaded overloaded overloaded public boolean Star return Project End start Col public boolean Project End return Project End public void set Star boolean star star Project End true start Col else Project End false Override public Project clone throws Clone Supported Exception Array List Integer cols new Array List Integer columns size resuse Integer objects immutable Integer columns cols add Project clone new Project new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope requested Parallelism cols clone clone Helper clone overloaded overloaded clone start Col start Col clone Project End Project End clone result Type result Type return clone protected Result process Input Bag throws Exec Exception Result res new Result input null inputs null inputs size log warn inputs found Signaling End Processing res return Status Status return res removed model clear get Reporter null get Reporter progress Input Attached inputs get get Result Type Data Type return inputs get get Next Data Bag else return inputs get get Next Tuple else res result Data Bag input get columns get res return Status Status return res public void set Result Single Tuple Bag boolean result Single Tuple Bag result Single Tuple Bag result Single Tuple Bag Override public List Expression Operator get Child Expressions return null Override public Tuple illustrator Markup Object Object int eq Class Index illustrator null return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java util Array List import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Job Control Compiler import org apache backend hadoop executionengine map Reduce Layer Map Reduce import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache data Data Type import org apache data Tuple import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache pen util Example Tuple import org apache pen util Lineage Tracer operator part operator implementation Reads output tuple Counter cumulative sum previously calculated read task identifier order get corresponding cumulative sum local counter tuple values summed prepended tuple public class Rank extends Physical Operator private static final Log log Log Factory get Log Rank class private static final long serial Version private List Physical Plan rank Plans private List Boolean Asc Cols private List Byte Expr Output Types Unique identifier links Counter Rank global counter labeled private String operation Counter used set tuples equivalence classes private int local Count Illustrator public Rank Operator Key k k null public Rank Operator Key k int rp k rp null public Rank Operator Key k List Physical Operator inp k inp public Rank Operator Key k int rp List Physical Operator inp super k rp inp public Rank Rank copy super copy rank Plans copy rank Plans Asc Cols copy Asc Cols Expr Output Types copy Expr Output Types Suppress Warnings rawtypes unchecked public Rank Operator Key operator Key int requested Parallelism List inp List Physical Plan rank Plans List Boolean ascending Col super operator Key requested Parallelism inp set Rank Plans rank Plans set Ascending Cols ascending Col Expr Output Types new Array List Byte rank Plans size Physical Plan plan rank Plans Expr Output Types add plan get Leaves get get Result Type Override public Tuple illustrator Markup Object Object int eq Class Index illustrator null Example Tuple new Example Tuple Tuple illustrator add Data Tuple illustrator get Equivalence Classes get eq Class Index add Tuple Lineage Tracer lineage Tracer illustrator get Lineage lineage Tracer insert return return Tuple Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Rank Override public Result get Next Tuple throws Exec Exception Result inp null true inp process Input inp return Status Status inp return Status Status break inp return Status Status continue return add Rank inp return inp Reads output tuple Counter cumulative sum previously calculated read task identifier order get corresponding cumulative sum local counter tuple values summed prepended tuple param input processed Counter return input Result input result tuple owns prepend rank value public Result add Rank Result input throws Exec Exception Tuple Tuple input result Long local Counter Long get Integer task Id Integer get remove get size Long rank get Rank Counter Offset task Id set rank local Counter local Count Illustrator local Count Illustrator input result illustrator Markup local Count Illustrator local Count Illustrator return input protected Long get Rank Counter Offset Integer task Id String name Counter Job Control Compiler get Operation Job Control Compiler String value task Id Long rank Map Reduce Job Conf Internal get get Long name Counter illustrator null rank rank log error Error reading counter name Counter throw new Runtime Exception Unable read counter name Counter return rank Override public boolean supports Multiple Inputs return false Override public boolean supports Multiple Outputs return false Override public String name return get Alias String Rank Data Type find Type Name result Type Key String public void set Rank Plans List Physical Plan rank Plans rank Plans rank Plans public List Physical Plan get Rank Plans return rank Plans public void set Ascending Cols List Boolean Asc Cols Asc Cols Asc Cols public List Boolean get Ascending Cols return Asc Cols Operation identifier shared within corresponding Counter param operation public void set Operation String operation operation operation public String get Operation return operation Override public Rank clone throws Clone Supported Exception Rank clone Rank super clone rank Plans Asc Cols Expr Output Types unused cloning return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java util Array List import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache data Non Spillable Data Bag import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception Implements specialized form Project used following case project Project introduced relational operator supply bag output expression project either providing bag input successor expression operator leaf inner plan predecessor relational operator sends send empty bag first signal empty output send Project return type whose predecessor outside plan e inner plan project lead us query like load baginp txt b bag tuple b foreach generate dump b go regular project without following flag public class Relation Expr Project extends Project private static final long serial Version boolean send Empty Bag false public Relation Expr Project Operator Key k k public Relation Expr Project Operator Key k int rp k rp public Relation Expr Project Operator Key k int rp int col super k rp col public Relation Expr Project Operator Key k int rp Array List Integer cols super k rp cols Override public String name return Relation Expression Project Data Type find Type Name result Type Star columns Key String Override public void visit Phy Plan Visitor v throws Visitor Exception specialization class affect way visitors visit use visit Project v visit Project non Javadoc see org apache backend hadoop executionengine physical Layer Physical Operator reset Override public void reset foreach operator present starting new set inputs see predecessor first e see input see happen Filter predecessor filters away input send empty bag Set flag checked encountered send Empty Bag true Override public Result get Next Data Bag throws Exec Exception Result input process Input Bag called accumulation ok empty bag need send called Accumulative reset input return Status Status input return Status Status return input else input return Status Status send Empty Bag received predecessor since successor pipeline expecting bag send empty bag input result new Non Spillable Data Bag input return Status Status send next time called foreach operator present calls get Next bag new inputs flag reset reset else since sending result empty bag otherwise sending empty bag processing new inputs see reset send Empty Bag false return input Result r consume Input Bag input since sending result empty bag otherwise sending empty bag processing new inputs see reset send Empty Bag false return r See Override public Relation Expr Project clone throws Clone Supported Exception Array List Integer cols new Array List Integer columns size reuse Integer objects immutable Integer columns cols add Relation Expr Project clone new Relation Expr Project new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope requested Parallelism cols clone clone Helper clone overloaded overloaded clone start Col start Col clone Project End Project End clone result Type result Type clone send Empty Bag send Empty Bag return clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java util Array List import java util List import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache data Data Type import org apache data Tuple import org apache impl logical Layer schema Schema import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache impl util Multi Map Physical Operator represents skewed join must two inputs operator actually work place holder translated plan Skewed Join translated sampling job join job public class Skewed Join extends Physical Operator private static final long serial Version private boolean Inner Flags schema used Compiler support outer join transient private List Schema input Schema new Array List Schema physical plans retrive join keys key code Multi Map code Physical Operator corresponds input value list code Physical Plan code retrieve join key input private Multi Map Physical Operator Physical Plan Join Plans public Skewed Join Operator Key k k null null public Skewed Join Operator Key k int rp k rp null null public Skewed Join Operator Key k List Physical Operator inp boolean flags k inp flags public Skewed Join Operator Key k int rp List Physical Operator inp boolean flags super k rp inp flags null copy inner flags Inner Flags new boolean flags length int flags length Inner Flags flags public boolean get Inner Flags return Inner Flags public Multi Map Physical Operator Physical Plan get Join Plans return Join Plans public void set Join Plans Multi Map Physical Operator Physical Plan join Plans Join Plans join Plans Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Skewed Join Override public String name return get Alias String Skewed Join Data Type find Type Name result Type Key String Override public boolean supports Multiple Inputs return true Override public boolean supports Multiple Outputs return false public void add Schema Schema input Schema add public Schema get Schema int return input Schema get Override public Tuple illustrator Markup Object Object int eq Class Index return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java io Serializable import java util Array List import java util Comparator import java util Iterator import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache Configuration import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Map Reduce import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer expression Operators Expression Operator import org apache backend hadoop executionengine physical Layer expression Operators User Comparison Func import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache data Data Bag import org apache data Data Type import org apache data Internal Sorted Bag import org apache data Tuple import org apache impl plan Operator Key import org apache impl plan Visitor Exception implementation applicable physical plan local backend conversion physical mapreduce would see operator take necessary steps convert quantile sort job blocking operator sorted Data Bag accumulates Tuples sorts iterator started tuples input operator accumulated filled data Bag attach Input method applicable intentionally skip type checking backend performance reasons Suppress Warnings unchecked public class Sort extends Physical Operator private static final Log log Log Factory get Log Sort class private static final long serial Version private List Integer Sort Cols private List Physical Plan sort Plans private List Byte Expr Output Types private List Boolean Asc Cols private User Comparison Func Sort Func private Comparator Tuple Comparator private long limit public boolean Comparator Used false private transient boolean inputs Accumulated false private transient Data Bag sorted Bag private transient Iterator Tuple private transient boolean initialized private transient boolean use Default Bag public Sort Operator Key k int rp List inp List Physical Plan sort Plans List Boolean Asc Cols User Comparison Func Sort Func super k rp inp Sort Cols Sort Cols sort Plans sort Plans Asc Cols Asc Cols limit set Sort Func Sort Func private void set Sort Func User Comparison Func Sort Func Sort Func Sort Func Sort Func null Comparator new Sort Comparator Expr Output Types new Array List Byte sort Plans size Physical Plan plan sort Plans Expr Output Types add plan get Leaves get get Result Type else Comparator new Sort Comparator Comparator Used true public Sort Operator Key k int rp List inp super k rp inp public Sort Operator Key k int rp super k rp public Sort Operator Key k List inp super k inp public Sort Operator Key k super k public class Sort Comparator implements Comparator Tuple Serializable private static final long serial Version Override public int compare Tuple Tuple int count int ret sort Plans null sort Plans size return Physical Plan plan sort Plans try plan attach Input Result res get Result plan Expr Output Types get count plan attach Input Result res get Result plan Expr Output Types get count res return Status Status res return Status Status log error Error processing input expression plan plan String else Asc Cols get count ret Data Type compare res result res result equal return Otherwise keep comparing next one ret return ret else ret Data Type compare res result res result ret return ret catch Exec Exception e log error Invalid result executing expression plan plan String n e get Message return ret private Result get Result Physical Plan plan byte result Type throws Exec Exception Expression Operator Op Expression Operator plan get Leaves get Result res null switch result Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type case Data Type res Op get Next result Type break default int err Code String msg expect result type Data Type find Type Name result Type throw new Exec Exception msg err Code Exception return res public class Sort Comparator implements Comparator Tuple Serializable private static final long serial Version Override public int compare Tuple Tuple Sort Func attach Input Integer null Result res null try res Sort Func get Next Integer catch Exec Exception e log error Input ready Error reading input e get Message res null return Integer res result else return Override public String name return get Alias String Sort Data Type find Type Name result Type Sort Func null Sort Func get Func Spec Key String Override public boolean Blocking return true Override public Result get Next Tuple throws Exec Exception Result inp inputs Accumulated inp process Input initialized initialized true Map Reduce Job Conf Internal get null String bag Type Map Reduce Job Conf Internal get get Configuration bag Type null bag Type equals Ignore Case default use Default Bag true Limited sorted Bag Bag Factory new Limited Sorted Bag Comparator limit else default create Internal Sorted Bag unless user configures explicitly use old bag sorted Bag use Default Bag Bag Factory new Sorted Bag Comparator new Internal Sorted Bag Comparator inp return Status Status inp return Status Status log error Error reading inputs return inp else inp return Status Status Ignore read next tuple inp process Input continue sorted Bag add Tuple inp result inp process Input inputs Accumulated true Result res new Result null sorted Bag iterator Next res result next illustrator Markup res result res result res return Status Status else res return Status Status reset return res Override public boolean supports Multiple Inputs return false Override public boolean supports Multiple Outputs return false Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Sort Override public void reset inputs Accumulated false sorted Bag null null public List Physical Plan get Sort Plans return sort Plans public void set Sort Plans List Physical Plan sort Plans sort Plans sort Plans public User Comparison Func get Sort Func return Sort Func public void set Sort Func User Comparison Func sort Func Sort Func sort Func public Comparator Tuple get Comparator return Comparator public List Boolean get Asc Cols return Asc Cols public void set Limit long l limit l public long get Limit return limit public boolean Limited return limit Override public Sort clone throws Clone Supported Exception Sort clone Sort super clone clone sort Plans clone Plans sort Plans Sort Func null set Sort Func null else set Sort Func Sort Func clone List Boolean clone Asc new Array List Boolean Asc Cols size Boolean b Asc Cols clone Asc add b clone Asc Cols clone Asc return clone Override public Tuple illustrator Markup Object Object int eq Class Index illustrator null illustrator get Equivalence Classes get eq Class Index add Tuple illustrator add Data Tuple return Tuple
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer relational Operators import java io Exception import java util List import org apache Exception import org apache Sort Info import org apache Store Func Interface import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Map Reduce Store Impl import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Tuple import org apache impl Context import org apache impl io File Spec import org apache impl logical Layer schema Schema import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache pen util Example Tuple import org apache pen util Lineage Tracer import org apache tools pigstats Stats Util store operator used two ways local operator used store files Map Reduce setting used create jobs Map Reduce operators keep loads stores Map Reduce Plans till job created public class Store extends Physical Operator private static final long serial Version transient private Store Func Interface storer transient private Store Func Decorator Decorator transient private Store Impl impl transient private String counter Name null private File Spec File private Schema schema flag distinguish user stores Compiler stores private boolean Tmp Store flag distinguish single store multiquery store private boolean Multi Store flag indicate custom counter disabled private boolean disable Counter false index multiquery store track counters private int index know reload store l File File Spec set Server post Process used reload store optimizer need private File Spec l File predecessor store Sort order sort Info information sort column names asc dsc info private Sort Info sort Info private String signature private transient List String cache Files null private transient List String ship Files null public Store Operator Key k k null public Store Operator Key k int rp k rp null public Store Operator Key k int rp List Physical Operator inp super k rp inp public Store Store copy super copy File copy File schema copy schema Tmp Store copy Tmp Store Multi Store copy Multi Store disable Counter copy disable Counter index copy index l File copy l File sort Info copy sort Info signature copy signature Set storer throws Exception public void set throws Exception impl null try storer impl create Store Func Tmp Store disable Counter impl instanceof Map Reduce Store Impl counter Name Stats Util get Multi Store Counter Name counter Name null Create counter needed incr Counter may never called case empty file Map Reduce Store Impl impl incr Record Counter counter Name catch Exception ioe int err Code String msg Unable setup store function throw new Exec Exception msg err Code Exception ioe Called end processing clean throws Exception public void tear throws Exception impl null impl tear perform cleanup error throws Exception public void clean throws Exception impl null impl clean Override public Result get Next Tuple throws Exec Exception Result res process Input try switch res return Status case Status illustrator null Decorator put Next Tuple res result else illustrator Markup res result res result res counter Name null Map Reduce Store Impl impl incr Record Counter counter Name break case Status break case Status case Status default break catch Exception ioe int err Code String msg Received error store function ioe get Message throw new Exec Exception msg err Code ioe return res Override public String name return File null get Alias String Store File String Key String get Alias String Store Dummy Fil Dummy Ldr Key String Override public boolean supports Multiple Inputs return false Override public boolean supports Multiple Outputs return true Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Store public File Spec get File return File public void set File File Spec File File File storer null public void set Input Spec File Spec l File l File l File public File Spec get Input Spec return l File public void set Tmp Store boolean tmp Tmp Store tmp public boolean Tmp Store return Tmp Store public void set Store Impl Store Impl impl impl impl public void set Schema Schema schema schema schema public Schema get Schema return schema public Store Func Interface get Store Func storer null storer Store Func Interface Context instantiate Func Spec File get Func Spec storer set Store Func Context Signature signature Decorator null Init Decorator use writing Tuples set Store Func Decorator new Store Func Decorator storer signature return storer void set Store Func Decorator Store Func Decorator Decorator Decorator Decorator return link Store Func Decorator used write Tuples public Store Func Decorator get Store Func Decorator return Decorator param sort Info sort Info set public void set Sort Info Sort Info sort Info sort Info sort Info return sort Info public Sort Info get Sort Info return sort Info public String get Signature return signature public void set Signature String signature signature signature public void set Multi Store boolean Multi Store Multi Store Multi Store public boolean Multi Store return Multi Store Override public Tuple illustrator Markup Object Object int eq Class Index illustrator null Example Tuple Example Tuple Lineage Tracer lineage illustrator get Lineage lineage insert Tmp Store illustrator get Equivalence Classes get eq Class Index add illustrator add Data Tuple return Tuple public void set Index int index index index public int get Index return index public void set Disable Counter boolean disable Counter disable Counter disable Counter public boolean disable Counter return disable Counter public void set Store Func Store Func Interface store Func storer store Func public List String get Cache Files return cache Files public void set Cache Files List String cf cache Files cf public List String get Ship Files return ship Files public void set Ship Files List String sf ship Files sf
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java io Exception import java io Object Input Stream import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache Comparison Func import org apache Func Spec import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache data Data Type import org apache data Tuple import org apache impl Context import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception intentionally skip type checking backend performance reasons Suppress Warnings unchecked public class User Comparison Func extends Expression Operator private final static Log log Log Factory get Log User Comparison Func class private static final long serial Version Func Spec func Spec Tuple transient Comparison Func func public User Comparison Func Operator Key k int rp List inp Func Spec func Spec Comparison Func func super k rp super set Inputs inp func Spec func Spec func func func null instantiate Func public User Comparison Func Operator Key k int rp List inp Func Spec func Spec k rp inp func Spec null private void instantiate Func func Comparison Func Context instantiate Func Spec func Spec func set Reporter get Reporter public Comparison Func get Comparator return func Override public Result get Next Integer throws Exec Exception Result result new Result result result func compare result return Status null null Status Status two attached tuples used set input Attached flag false input Attached false result return Status Status illustrator Markup null result result Integer result result Integer result result return result private Result get Next Result res null log error get Next called non integer return res Override public Result get Next Boolean throws Exec Exception return get Next Override public Result get Next Data Bag throws Exec Exception return get Next Override public Result get Next Data Byte Array throws Exec Exception return get Next Override public Result get Next Double throws Exec Exception return get Next Override public Result get Next Float throws Exec Exception return get Next Override public Result get Next Long throws Exec Exception return get Next Override public Result get Next Date Time throws Exec Exception return get Next Override public Result get Next Map throws Exec Exception return get Next Override public Result get Next String throws Exec Exception return get Next Override public Result get Next Tuple throws Exec Exception return get Next Override public Result get Next Big Integer throws Exec Exception return get Next Override public Result get Next Big Decimal throws Exec Exception return get Next public void attach Input Tuple Tuple input Attached true private void read Object Object Input Stream throws Exception Class Found Exception default Read Object instantiate Func Override public void visit Phy Plan Visitor v throws Visitor Exception v visit Comparison Func Override public String name return User Comparison Func func get Class get Name Data Type find Type Name result Type Key String Override public boolean supports Multiple Inputs return false public Func Spec get Func Spec return func Spec Override public User Comparison Func clone throws Clone Supported Exception Func Spec clone Fs null func Spec null clone Fs func Spec clone User Comparison Func clone new User Comparison Func new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope requested Parallelism null clone Fs clone clone Helper return clone Get child expressions expression Override public List Expression Operator get Child Expressions return null Override public Tuple illustrator Markup Object Object int eq Class Index illustrator null illustrator get Inputs add illustrator get Equivalence Classes get eq Class Index add illustrator get Inputs add illustrator get Equivalence Classes get eq Class Index add return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import static org apache Configuration import static org apache Configuration import static org apache Constants import static org apache Constants import java io Exception import java io Object Input Stream import java lang reflect Type import java util List import java util Properties import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache Accumulator import org apache Algebraic import org apache Eval Func import org apache Func Spec import org apache Exception import org apache Terminating Accumulator import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer Status import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Result import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer util Monitored Executor import org apache builtin Monitored import org apache data Data Type import org apache data Schema Tuple Class Generator Gen Context import org apache data Schema Tuple Factory import org apache data Tuple import org apache data Tuple Factory import org apache data Tuple Maker import org apache impl Context import org apache impl logical Layer schema Schema import org apache impl plan Node Id Generator import org apache impl plan Operator Key import org apache impl plan Visitor Exception import org apache impl util Context import org apache tools pigstats Status Reporter public class User Func extends Expression Operator private static final long serial Version private static final Log Log Factory get Log User Func class private static final Tuple Factory tf Tuple Factory get Instance private transient String counter Group private transient Eval Func func private transient List String cache Files null private transient List String ship Files null Func Spec func Spec Func Spec orig Spec public static final byte public static final byte public static final byte private boolean initialized false private Monitored Executor executor null private Physical Operator referenced Operator null private boolean Accumulation Done private String signature private boolean Checked Terminating Accumulator private long num Invocations private long timing Frequency private boolean Timing false public Physical Operator get Referenced Operator return referenced Operator public void set Referenced Operator Physical Operator referenced Operator referenced Operator referenced Operator public User Func Operator Key k int rp List Physical Operator inp k rp inp null public User Func Operator Key k int rp List Physical Operator inp Func Spec func Spec k rp inp func Spec null public User Func Operator Key k int rp List Physical Operator inp Func Spec func Spec Eval Func func super k rp super set Inputs inp func Spec func Spec orig Spec func Spec func func instantiate Func func Spec public void set Func Input Schema set Func Input Schema signature private void instantiate Func Func Spec f Spec func Eval Func Context instantiate Func Spec f Spec set Signature signature set Func Input Schema signature func get Class Annotation Present Monitored class executor new Monitored Executor func next couple initializations work intended following reasons reporter Logger member variables Physical Operator instanitate Func invoked deserialization time reporter Logger null set map reduce calls making initializations basically useless Look process Input method variables initialized point Physical Operator set correctly reporter Logger references func set Reporter get Reporter func set Logger Logger private transient Tuple Maker input Tuple Maker private boolean using Schema Tuple Factory Override public Result process Input throws Exec Exception Make sure reporter set n getting carried across serialization n know suspect cheap call set Reporter call everytime check whether hopefully java inline initialized func set Reporter get Reporter func set Logger Logger Configuration job Conf Context get Context get Job Conf job Conf null Timing job Conf get Boolean false Timing counter Group func Spec String timing Frequency job Conf get Long initialize instead instantiate Func called actual processing begun whereas function instantiated frontend potentially mainly optimization Schema tmp func get Input Schema tmp null Currently get Instance Schema returns null class found works fine null default used pass context happens Schema generated elsewhere want override user expectations input Tuple Maker Schema Tuple Factory get Instance tmp false Gen Context input Tuple Maker null debug Schema Tuple Factory found Schema tmp using default Tuple Factory using Schema Tuple Factory false else debug Using Schema Tuple Factory Schema tmp using Schema Tuple Factory true future could optionally use Schema Tuples output well input Tuple Maker null input Tuple Maker Tuple Factory get Instance initialized true Result res new Result input null inputs null inputs size res return Status Status return res removed model clear get Reporter null get Reporter progress Input Attached res result input res return Status Status detach Input return res else decouple may cases size known n schema tuple factory boolean known Size using Schema Tuple Factory int known Index res result input Tuple Maker new Tuple Result temp null Physical Operator op inputs temp op get Next op get Result Type temp return Status Status return temp op instanceof Project op get Result Type Data Type Project proj Op Project op proj Op Project End Tuple trslt Tuple temp result Tuple rslt Tuple res result int trslt size known Size rslt set known Index trslt get else rslt append trslt get continue known Size Tuple res result set known Index temp result else Tuple res result append temp result res return Status temp return Status return res private boolean Early Terminating false private void set Early Terminating Early Terminating true private boolean Early Terminating return Early Terminating private boolean Terminated false private boolean Terminated return Terminated private void early Terminate Terminated true private Result get Next throws Exec Exception Result result process Input long start Nanos boolean time Timing num Invocations timing Frequency time start Nanos System nano Time Status Reporter get Instance incr Counter counter Group timing Frequency try result return Status Status Accumulative Accum Started Checked Terminating Accumulator Checked Terminating Accumulator true func instanceof Terminating Accumulator set Early Terminating Terminated Early Terminating Terminating Accumulator func Finished early Terminate Terminated result return Status Status result result null Accumulation Done false else Accumulator func accumulate Tuple result result result return Status Status result result null Accumulation Done false else Accumulation Done Relation Expr Project return udf gets called Accum Started first true set false even input relation empty sent User Func results sent result result null result return Status Status else result result Accumulator func get Value result return Status Status Accumulator func cleanup Accumulation Done true else parent Plan null parent Plan end Input need End Input Processing func set End Input true executor null result result executor monitor Exec Tuple result result else result result func exec Tuple result result time Status Reporter get Instance incr Counter counter Group Math round System nano Time start Nanos timing Frequency return result catch Exec Exception ee throw ee catch Exception ioe int err Code String msg Caught error func Spec get Class Name String footer ioe get Message ioe instanceof Exception int udf Error Code Exception ioe get Error Code udf Error Code err Code udf Error Code msg Exception ioe get Message else msg Exception ioe get Message else msg footer throw new Exec Exception msg err Code Exception ioe catch Index Bounds Exception ie int err Code String msg Caught error func Spec get Class Name bounds access ie get Message throw new Exec Exception msg err Code Exception ie Override public Result get Next Tuple throws Exec Exception return get Next Override public Result get Next Data Bag throws Exec Exception return get Next Override public Result get Next Integer throws Exec Exception return get Next Override public Result get Next Boolean throws Exec Exception return get Next Override public Result get Next Data Byte Array throws Exec Exception return get Next Override public Result get Next Double throws Exec Exception return get Next Override public Result get Next Big Integer throws Exec Exception return get Next Override public Result get Next Big Decimal throws Exec Exception return get Next Override public Result get Next Float throws Exec Exception return get Next Override public Result get Next Long throws Exec Exception return get Next Override public Result get Next Date Time throws Exec Exception return get Next Override public Result get Next Map throws Exec Exception return get Next Override public Result get Next String throws Exec Exception return get Next public void set Algebraic Function byte Function throws Exec Exception used optimizer putting correct functions mapper combiner reduce helps maintaining physical plan without optimiser replace operators would n able make two calls function algebraic Eval Func func changed switch Function case func Spec new Func Spec get Initial break case func Spec new Func Spec get Intermed break case func Spec new Func Spec get Final break func Spec set Ctor Args orig Spec get Ctor Args instantiate Func func Spec set Result Type Data Type find Type Eval Func func get Return Type public String get Initial throws Exec Exception instantiate Func orig Spec func instanceof Algebraic return Algebraic func get Initial else int err Code String msg Attempt run non algebraic function algebraic function throw new Exec Exception msg err Code Exception public String get Intermed throws Exec Exception instantiate Func orig Spec func instanceof Algebraic return Algebraic func get Intermed else int err Code String msg Attempt run non algebraic function algebraic function throw new Exec Exception msg err Code Exception public String get Final throws Exec Exception instantiate Func orig Spec func instanceof Algebraic return Algebraic func get Final else int err Code String msg Attempt run non algebraic function algebraic function throw new Exec Exception msg err Code Exception public Type get Original Return Type throws Exec Exception instantiate Func orig Spec return func get Return Type public Type get Return Type return func get Return Type public void finish func finish executor null executor terminate public Schema output Schema Schema input return func output Schema input public Boolean Asynchronous return func Asynchronous Override public String name return User Func func get Class get Name Data Type find Type Name result Type Key String Override public boolean supports Multiple Inputs return true Override public boolean supports Multiple Outputs return false Override public void visit Phy Plan Visitor v throws Visitor Exception v visit User Func public Func Spec get Func Spec return func Spec public void set Func Spec Func Spec func Spec func Spec func Spec instantiate Func func Spec public List String get Cache Files return cache Files public void set Cache Files List String cf cache Files cf public List String get Ship Files return ship Files public void set Ship Files List String sf ship Files sf public boolean combinable return func instanceof Algebraic Override public User Func clone throws Clone Supported Exception Inputs patched later Physical Plan clone User Func clone new User Func new Operator Key Key scope Node Id Generator get Generator get Next Node Id Key scope requested Parallelism null func Spec clone clone set Result Type result Type clone signature signature clone cache Files cache Files clone ship Files ship Files return clone private void read Object Object Input Stream throws Exception Class Found Exception default Read Object instantiate Func func Spec Get child expression expression Override public List Expression Operator get Child Expressions return null Suppress Warnings unchecked Override public void set Accum Start Accumulative Accum Started super set Accum Start Accumulator func cleanup Override public void set Result Type byte result Type result Type result Type Override public Tuple illustrator Markup Object Object int eq Class Index return Tuple public Eval Func get Func return func public String get Signature return signature public void set Signature String signature signature signature func null func set Context Signature signature Sets Eval Func inputschema based signature param signature public void set Func Input Schema String signature Properties props Context get Context get Properties func get Class Schema tmp Schema props get evalfunc inputschema signature tmp null func set Input Schema tmp public boolean need End Input Processing return get Func need End Input Processing
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import org apache data Tuple import java io Exception import java util List Base class simple Fs functions primitive types Handles marshalling objects basic error checking etc Extend class implement pre exec input pre method writting operates first input expected type Tuple public abstract class Primitive Eval Func extends Typed Output Eval Func protected Class Type Class null public Class get Input Type Class return Type Class Suppress Warnings unchecked public Primitive Eval Func List type Args get Type Arguments Primitive Eval Func class get Class Type Class Class type Args get Type Class Class type Args get Suppress Warnings unchecked public Primitive Eval Func Class Type Class Class Type Class Type Class Type Class Type Class Type Class Override Suppress Warnings unchecked public exec Tuple tuple throws Exception verify Udf Input get Counter Group tuple input tuple get input null Default behavior null input null output return null return exec input public abstract exec input throws Exception
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import java util List import org apache Exception import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache impl plan Plan Validation Exception import org apache impl util Pair import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema import org apache parser Source Location Projection columns expression public class Project Expression extends Column Expression private int input input relational operator project projecting Count zero based project filter input number always since filter one input join cross cogroup union could greater private int col column input project references Count zero based private String alias alias projected field Foreach inner plan projection made relational operator may get reused However expression needs sticky operator expression projected private Operator projected Operator private Logical Relational Operator attached Relational Op fields range projection private boolean Range Project false start end columns range end Col value represents everything upto end private int start Col private int end Col private String start Alias private String end Alias Adds projection plan param plan Logical Expression Plan projection part param input Num Input number project references param col Num Column number project references param attached Relational Op public Project Expression Operator Plan plan int input Num int col Num Logical Relational Operator attached Relational Op super Project plan input input Num col col Num plan add attached Relational Op attached Relational Op Adds projection plan param plan param input Num param alias param attached Relational Op throws Frontend Exception public Project Expression Operator Plan plan int input Num String alias Operator projected Op Logical Relational Operator attached Relational Op super Project plan input input Num alias alias projected Operator projected Op plan add attached Relational Op attached Relational Op Constructor range projection Adds projection plan start end alias column number set separately param plan param input Num param attached Relational Op public Project Expression Operator Plan plan int input Num Logical Relational Operator attached Relational Op super Project plan input input Num Range Project true plan add attached Relational Op attached Relational Op like copy constructor plan argument param proj Expr param plan public Project Expression Project Expression proj Expr Operator Plan plan super Project plan input proj Expr input col proj Expr col alias proj Expr alias projected Operator proj Expr projected Operator attached Relational Op proj Expr attached Relational Op Range Project proj Expr Range Project start Col proj Expr start Col end Col proj Expr end Col start Alias proj Expr start Alias end Alias proj Expr end Alias plan add alias finds column number throws Frontend Exception alias public void set Column Number Alias throws Frontend Exception Range Project start Alias null start Col find Col Num start Alias start Alias null end Alias null end Col find Col Num end Alias end Alias null start Col String msg Invalid start column position range projection start Col throw new Plan Validation Exception msg Exception end Col start Col end Col String msg start column appears end column range projection Start column position start Col End column position end Col throw new Plan Validation Exception msg Exception else set Col Num find Col Num alias private int find Col Num String alias throws Frontend Exception Logical Plan lp Logical Plan attached Relational Op get Plan List Operator inputs lp get Predecessors attached Relational Op Logical Relational Operator input Logical Relational Operator inputs get get Input Num Logical Schema input Schema input get Schema alias null int col Num input Schema null input Schema get Field Position alias col Num String msg Invalid field projection Projected field alias exist input Schema null msg schema input Schema String false msg throw new Plan Validation Exception msg return col Num else int col get Col Num input Schema null col input Schema size throw new Plan Validation Exception bound access Trying access non existent column col Schema input Schema String false input Schema size column return col link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Input number project references input number relational operator contains expression count zero based return input number public int get Input Num return input public void set Input Num int input Num input input Num Column number project references column number column relational operator contains expression count zero based return column number public int get Col Num Range Project throw new Assertion Error get Col Num called range project return col public String get Col Alias return alias public Operator get Projected Operator return projected Operator Set column number project called Projection Patcher Stupid Java needs friends param col Num new column number projection public void set Col Num int col Num col col Num alias null column number set alias longer needed public boolean Project Star return col public boolean Range Project return Range Project public boolean Range Star Project return Project Star Range Project Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema Logical Relational Operator referent find Referent Logical Schema schema null referent get Schema null schema referent get Schema deep Copy attached Relational Op instanceof Generate plan get Successors null find Referent instanceof Inner Load Inner Load find Referent source Bag String alias find Referent get Alias Pair List Inner Load Boolean inner Loads Pair find Reacheable Inner Load Boundary Project List Inner Load inner Loads inner Loads Pair first boolean need New Uid inner Loads Pair second pull tuple information innerload inner Loads get get Projection get Field Schema schema null inner Loads get get Projection get Field Schema type Data Type Logical Field Schema original Tuple Field Schema inner Loads get get Projection get Field Schema schema get Field Logical Field Schema new Tuple Field Schema new Logical Field Schema original Tuple Field Schema alias schema Data Type need New Uid new Tuple Field Schema uid Logical Expression get Next Uid else new Tuple Field Schema uid original Tuple Field Schema uid Logical Schema new Tuple Schema new Logical Schema new Tuple Schema add Field new Tuple Field Schema field Schema new Logical Schema Logical Field Schema alias new Tuple Schema Data Type else field Schema new Logical Schema Logical Field Schema alias schema Data Type need New Uid field Schema uid Logical Expression get Next Uid else field Schema uid inner Loads get get Projection get Field Schema uid else Inner Load source bag schema null get range star Project otherwise inner Load convert schema non null Range Project end Col Logical Schema inner Schema new Logical Schema int start Col end Col schema null null alias inner Schema add Field new Logical Field Schema null null Data Type field Schema new Logical Schema Logical Field Schema null inner Schema Data Type else field Schema null else field Schema schema get Field field Schema null uid Field Schema field Schema merge Uid uid Field Schema else schema null Range Star Project Range Project end Col Logical Schema inner Schema new Logical Schema int start Col end Col schema null null alias inner Schema add Field new Logical Field Schema null null Data Type field Schema new Logical Schema Logical Field Schema null inner Schema Data Type else field Schema null else field Schema new Logical Schema Logical Field Schema null null Data Type field Schema null uid Field Schema field Schema merge Uid uid Field Schema else int index Range Star Project uid Field Schema null long uid uid Field Schema uid int schema size Logical Field Schema fs schema get Field fs uid uid index index alias null index schema get Field Position alias index index col Range Star Project schema null schema size index field Schema schema get Field index else field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema clone Uid else Logical Schema new Tuple Schema null Project Star new Tuple Schema schema deep Copy else project range new Tuple Schema new Logical Schema int start Col end Col new Tuple Schema add Field schema get Field deep Copy field Schema new Logical Schema Logical Field Schema null new Tuple Schema Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Find Logical Relational Operator projection refers return projection refers throws Frontend Exception public Logical Relational Operator find Referent throws Frontend Exception List Operator preds preds attached Relational Op get Plan get Predecessors attached Relational Op preds null input preds size throw new Frontend Exception Projection nothing reference Logical Relational Operator pred Logical Relational Operator preds get input pred null throw new Frontend Exception find reference return pred Override public boolean Equal Operator throws Frontend Exception null instanceof Project Expression Project Expression po Project Expression po input input po col col return false Operator Succ get Plan get Successors null get Plan get Successors get null Operator Succ get Plan get Successors null get Plan get Successors get null Succ null Succ null return Succ Equal Succ Succ null Succ null return true return false else return false public String String String Builder msg new String Builder field Schema null field Schema alias null msg append field Schema alias msg append Name name Type field Schema null msg append Data Type find Type Name field Schema type else msg append null msg append Uid field Schema null msg append field Schema uid else msg append null msg append Input input Column alias null msg append alias else Project Star msg append else Range Project msg append append start Col append append end Col append else msg append col msg append return msg String public Logical Relational Operator get Attached Relational Op return attached Relational Op public void set Attached Relational Op Logical Relational Operator attached Relational Op attached Relational Op attached Relational Op Override public byte get Type throws Frontend Exception boundary project get Field Schema null attached Relational Op instanceof Generate find Referent instanceof Inner Load Inner Load find Referent get Projection Range Star Project return Data Type return Data Type return super get Type return start Col public int get Start Col return start Col param start Col start Col set public void set Start Col int start Col start Col start Col return end Col public int get End Col return end Col param end Col end Col set public void set End Col int end Col end Col end Col param start Alias throws Frontend Exception public void set Start Alias String start Alias throws Frontend Exception start Alias start Alias param end Alias throws Frontend Exception public void set End Alias String end Alias throws Frontend Exception end Alias end Alias Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Project Expression copy new Project Expression lg Exp Plan get Input Num get Col Num get Attached Relational Op copy set Location new Source Location location copy alias alias copy projected Operator projected Operator copy Range Project Range Project copy start Col start Col copy end Col end Col copy start Alias start Alias copy end Alias end Alias return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical visitor import java util Array List import java util Hash Map import java util List import java util Map import java util Map Entry import org apache Exception import org apache impl logical Layer Frontend Exception import org apache impl plan Visitor Exception import org apache impl util Multi Map import org apache impl util Pair import org apache newplan Dependency Order Walker import org apache newplan Depth First Walker import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Walker import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Logical Expression Visitor import org apache newplan logical expression Project Expression import org apache newplan logical relational Cogroup import org apache newplan logical relational Cube import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Join import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Nodes Visitor import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema import com google common primitives Booleans visitor walk operators contain nested plan translate project operators list projection operators e project project project project n project n input schema null project expanded also expands project range eg wo n expand project range end eg input schema null public class Project Star Expander extends Logical Relational Nodes Visitor public Project Star Expander Operator Plan plan throws Frontend Exception super plan new Dependency Order Walker plan Override public void visit Sort sort throws Frontend Exception List Logical Expression Plan exp Plans sort get Sort Col Plans List Boolean asc Order sort get Ascending Cols new expressionplans sort order list star expansion List Logical Expression Plan new Exp Plans new Array List Logical Expression Plan List Boolean new Asc Order new Array List Boolean exp Plans size asc Order size throw new Assertion Error Size exp Plans ascorder int exp Plans size expand plan Logical Expression Plan ith Exp Plan exp Plans get List Logical Expression Plan expanded Plans expand Plan ith Exp Plan new Exp Plans add expanded Plans add corresponding Asc flags Boolean Asc asc Order get int j j expanded Plans size j new Asc Order add Asc check project star end followed another sort plan expanded plans happen input schema int new Exp Plans size Project Expression proj get Project Star new Exp Plans get proj null proj Range Project proj get End Col new Exp Plans size order sampler logic limitation supported right String msg Project range end eg x supported order last sort column throw new Frontend Exception msg Exception sort set Sort Col Plans new Exp Plans sort set Ascending Cols new Asc Order Override public void visit Rank rank throws Frontend Exception List Logical Expression Plan exp Plans rank get Rank Col Plans List Boolean asc Order rank get Ascending Col List Logical Expression Plan new Exp Plans new Array List Logical Expression Plan List Boolean new Asc Order new Array List Boolean exp Plans size asc Order size throw new Assertion Error Size exp Plans ascorder int exp Plans size expand plan Logical Expression Plan ith Exp Plan exp Plans get List Logical Expression Plan expanded Plans expand Plan ith Exp Plan new Exp Plans add expanded Plans add corresponding Asc flags Boolean Asc asc Order get int j j expanded Plans size j new Asc Order add Asc check project star end followed another sort plan expanded plans happen input schema int new Exp Plans size Project Expression proj get Project Star new Exp Plans get proj null proj Range Project proj get End Col new Exp Plans size String msg Project range end eg x supported rank last rank column throw new Frontend Exception msg Exception rank set Rank Col Plan new Exp Plans rank set Ascending Col new Asc Order Expand plan multiple plans plan contains project star project star returned list contains plan argument param plan return throws Frontend Exception private List Logical Expression Plan expand Plan Logical Expression Plan plan int input Num throws Frontend Exception List Logical Expression Plan expanded Plans Project Expression proj Star get Project Star plan proj Star null expand plan multiple plans return expand Plan plan proj Star input Num else project star expand expanded Plans new Array List Logical Expression Plan expanded Plans add plan return expanded Plans Override public void visit Cogroup cg throws Frontend Exception Multi Map Integer Logical Expression Plan inp Expr Plans cg get Expression Plans modify plans project star expand Plans inp Expr Plans validations List Operator inputs cg get Inputs Logical Plan cg get Plan check translation none group plans cogroup project still input project schema case error since could different number types cogroup keys inputs size cogroups int inputs size Logical Expression Plan lp inp Expr Plans get get Project Star lp null String msg Cogroup Group x range columns end allowed input schema throw new Visitor Exception cg msg Exception check translation group plans arity int arity inp Expr Plans get size int inputs size arity inp Expr Plans get size String msg arity cogroup group columns match throw new Visitor Exception cg msg Exception Override public void visit Cube cu throws Frontend Exception Multi Map Integer Logical Expression Plan inp Expr Plans cu get Expression Plans modify plans project star expand Plans inp Expr Plans Override public void visit Join join throws Frontend Exception expand Plans join get Expression Plans Override public void visit foreach throws Frontend Exception case Foreach expand inner plan single project star input Inner Load also project star Reset input number project expressions Logical Plan inner Plan foreach get Inner Plan visit inner plan first Plan Walker new Walker current Walker spawn Child Walker inner Plan push Walker new Walker current Walker walk pop Walker get Generate List Operator fe Outputs inner Plan get Sinks Generate gen null Operator op fe Outputs op instanceof Generate gen null String msg Expected single Generate output innerplan foreach throw new Visitor Exception foreach msg Exception gen Generate op work generate plan flatten user schema List Logical Expression Plan exp Plans gen get Output Plans List Logical Expression Plan new Exp Plans new Array List Logical Expression Plan List Operator lo Gen Preds inner Plan get Predecessors gen lo Gen Preds null Inner Loads must working constants project star expansion done return List Logical Schema user Schema gen get User Defined Schema List Logical Schema new User Schema null user Schema null new User Schema new Array List Logical Schema boolean flattens gen get Flatten Flags List Boolean new Flattens new Array List Boolean flattens length get mapping Generate predecessor current position object Map Integer Logical Relational Operator old Pos Rel new Hash Map Integer Logical Relational Operator int lo Gen Preds size old Pos Rel put Logical Relational Operator lo Gen Preds get get schema predecessor project star expansion needs schema Logical Relational Operator pred Logical Relational Operator foreach get Plan get Predecessors foreach get Logical Schema inp Sch pred get Schema store mapping projection inner plans Generate input relation object Map Project Expression Logical Relational Operator proj Inp Rel new Hash Map Project Expression Logical Relational Operator int exp Plans size Logical Expression Plan exp Plan exp Plans get Project Expression proj Star get Project Lonely Star exp Plan old Pos Rel boolean found Expandable Project false proj Star null project star expanded Logical Schema user Star Sch null user Schema null user Schema get null user Star Sch user Schema get range values set project Inner Load Project Expression lo Inner Proj Inner Load old Pos Rel get proj Star get Input Num get Projection int first Proj Col int last Proj Col lo Inner Proj Range Project lo Inner Proj set Column Number Alias first Proj Col lo Inner Proj get Start Col last Proj Col lo Inner Proj get End Col boolean Project End lo Inner Proj Project Star lo Inner Proj Range Project last Proj Col ca n expand input schema project star project range end inp Sch null Project End found Expandable Project true Project End last Proj Col inp Sch size replacing existing project star new ones exp Plan remove proj Star remove Inner Load star Inner Load old Inner Load Inner Load old Pos Rel get proj Star get Input Num inner Plan disconnect old Inner Load gen inner Plan remove old Inner Load generate new exp plan inner load field schema int j first Proj Col j last Proj Col j add new Inner Load Inner Load new Load new Inner Load inner Plan foreach j inner Plan add new Load inner Plan connect new Load gen new expression plan proj Logical Expression Plan new Exp Plan new Logical Expression Plan new Exp Plans add new Exp Plan Project Expression new Proj new Project Expression new Exp Plan gen proj Inp Rel put new Proj new Load new Flattens add flattens new User Schema null index user specified schema int sch Idx j first Proj Col user Star Sch null user Star Sch get Fields size sch Idx user Star Sch get Field sch Idx null project star field user specified schema use j th field column Logical Schema sch new Logical Schema sch add Field new Logical Field Schema user Star Sch get Field sch Idx new User Schema add sch else new User Schema add null found Expandable Project project star could expanded get projects Find Projects find Projs new Find Projects exp Plan find Projs visit List Project Expression projs find Projs get Projs create mapping project expression inputs Project Expression proj projs proj Inp Rel put proj old Pos Rel get proj get Input Num new Exp Plans add exp Plan new Flattens add flattens new User Schema null new User Schema add user Schema get get mapping Lo Generate input relation current position Map Logical Relational Operator Integer rel pos new Hash Map Logical Relational Operator Integer List Operator new Gen Preds inner Plan get Predecessors gen int num New Gen Preds new Gen Preds null num New Gen Preds new Gen Preds size int num New Gen Preds rel pos put Logical Relational Operator new Gen Preds get correct input num projects Entry Project Expression Logical Relational Operator proj Inp proj Inp Rel entry Set Project Expression proj proj Inp get Key Logical Relational Operator rel proj Inp get Value proj set Input Num rel pos get rel set new lists gen set Output Plans new Exp Plans gen set Flatten Flags Booleans Array new Flattens gen set User Defined Schema new User Schema gen reset Schema foreach reset Schema static class Find Projects extends Logical Expression Visitor private List Project Expression projs new Array List Project Expression protected Find Projects Logical Expression Plan plan throws Frontend Exception super plan new Depth First Walker plan Override public void visit Project Expression proj projs add proj public List Project Expression get Projs return projs Find project star foreach statement Inner Load corresponding project star also needs project star param exp Plan expression plan param old Pos Rel inner relational plan foreach return Project Expression satisfies conditions throws Frontend Exception private Project Expression get Project Lonely Star Logical Expression Plan exp Plan Map Integer Logical Relational Operator old Pos Rel throws Frontend Exception expression plan single project exp Plan size exp Plan size return null Operator output Op exp Plan get Operators next output Op instanceof Project Expression Project Expression proj Project Expression output Op check Project Expression project Star proj Project Star check input Inner Load project Star range project Logical Relational Operator input Rel old Pos Rel get proj get Input Num input Rel instanceof Inner Load return null Project Expression inner Proj Inner Load input Rel get Projection inner Proj Range Star Project return proj return null private void expand Plans Multi Map Integer Logical Expression Plan inp Expr Plans throws Frontend Exception input relation expand logical plan project star int inp Expr Plans size List Logical Expression Plan plans inp Expr Plans get List Logical Expression Plan new Plans new Array List Logical Expression Plan Logical Expression Plan plan plans new Plans add expand Plan plan inp Expr Plans remove Key inp Expr Plans put new Plans expand plan containing project star multiple plans projecting single column param exp Plan param proj return throws Frontend Exception private List Logical Expression Plan expand Plan Logical Expression Plan exp Plan Project Expression proj int input Num throws Frontend Exception Pair Integer Integer start End Projs Project Star Expander Util get Project Start End Cols exp Plan proj List Logical Expression Plan new Plans new Array List Logical Expression Plan start End Projs null ca n expand project new Plans add exp Plan return new Plans expand first Proj Col last Proj Col int first Proj Col start End Projs first int last Proj Col start End Projs second Logical Relational Operator rel Op proj get Attached Relational Op int first Proj Col last Proj Col new Plans add create Exp Plan Proj rel Op input Num return new Plans Create new logical plan project attached Logical Relation attach Rel projects th column input param attach Rel param input Num param col Num return private Logical Expression Plan create Exp Plan Proj Logical Relational Operator attach Rel int input Num int col Num Logical Expression Plan new Exp Plan new Logical Expression Plan Project Expression new Proj new Project Expression new Exp Plan input Num col Num attach Rel new Exp Plan add new Proj return new Exp Plan Logical Expression Plan argument project star output return otherwise return null param exp Plan return throws Frontend Exception private Project Expression get Project Star Logical Expression Plan exp Plan throws Frontend Exception List Operator outputs exp Plan get Sources Project Expression proj Star null Operator output Op outputs output Op instanceof Project Expression Project Expression proj Project Expression output Op proj Range Star Project outputs size String msg one operator expression plan containing project star project range throw new Visitor Exception proj msg Exception proj Star proj return proj Star
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical rules import java util Array List import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import java util Map Entry import org apache impl logical Layer Frontend Exception import org apache impl util Pair import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Operator Sub Plan import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Project Expression import org apache newplan logical expression User Func Expression import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Native import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Split Output import org apache newplan logical relational Store import org apache newplan logical relational Stream import org apache newplan logical relational Union import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache newplan optimizer Rule import org apache newplan optimizer Transformer public class Push Filter extends Rule public Push Filter String n super n false Override public Transformer get New Transformer return new Push Filter Transformer public class Push Filter Transformer extends Transformer private Operator Sub Plan sub Plan Override public boolean check Operator Plan matched throws Frontend Exception check inner join Operator current matched get Sources get Operator pred find Non Filter Predecessor current pred null return false sort union always okay pred instanceof Sort pred instanceof Union return true predecessor one Load Store Stream Limit Native predecessor optimized rule Filter Foreach return false pred instanceof Load pred instanceof Store pred instanceof Stream pred instanceof Filter pred instanceof Split pred instanceof Split Output pred instanceof Limit pred instanceof Native pred instanceof return false Filter filter Filter current List Operator preds current Plan get Predecessors pred Logical Expression Plan filter Plan filter get Filter Plan Optimizer Utils plan Non Deterministic Udf filter Plan return false nondeterministic udf filter pushed Distinct pred instanceof Distinct return true collect uids used filter plan Set Long uids collect Uid Exp Plan filter Plan pred instanceof Cogroup Cogroup cogrp Cogroup pred preds size Logical Relational Operator preds get uids Order ok Ds found previous operator return true else cogrp get Expression Plans get size contain filter Plan Optimization possible single key regular cogroup use Ds determine filter pushed okay take bag field input return true predecessor multi input operator detailed checks required pred instanceof Cross pred instanceof Join boolean inner Flags null boolean Full Outer true boolean Inner true pred instanceof Join inner Flags Join pred get Inner Flags inner Flag false means full outer join boolean inner inner Flags inner Full Outer false else Inner false Full Outer return false int j j preds size j Logical Relational Operator preds get j uids Join inner Flag true indicate branch outer join side exact opposite semantics pred instanceof Cross pred instanceof Join Inner inner Flags j return true return false private boolean contain Logical Expression Plan filter Plan Iterator Operator filter Plan get Operators Next next instanceof User Func Expression return true return false Set Long collect Uid Exp Plan Logical Expression Plan filter Plan throws Frontend Exception Set Long uids new Hash Set Long Iterator Operator iter filter Plan get Operators iter Next Operator op iter next op instanceof Project Expression long uid Project Expression op get Field Schema uid uids add uid return uids Starting current operator filter search successors locating non filter operator Null returned none found private Operator find Non Filter Predecessor Operator current Operator op current List Operator predecessors current Plan get Predecessors op predecessors return false predecessors null predecessors size return null Operator pred predecessors get pred instanceof Filter op pred continue else return pred true Override public void transform Operator Plan matched throws Frontend Exception sub Plan new Operator Sub Plan current Plan Filter filter Filter matched get Sources get one insert filter btwn input Operator predecessor find Non Filter Predecessor filter sub Plan add predecessor Disconnect filter plan without removing plan Operator predec current Plan get Predecessors filter get Operator succed current Plan get Successors filter null succed current Plan get Successors filter get else succed null Pair Integer Integer p current Plan disconnect predec filter succed null sub Plan add succed Pair Integer Integer p current Plan disconnect filter succed current Plan connect predec p first succed p second predecessor instanceof Sort predecessor instanceof Distinct predecessor instanceof Cogroup current Plan get Predecessors predecessor size sort put filter front Operator prev current Plan get Predecessors predecessor get insert Filter prev predecessor filter return Find predecessor join contains required uids Logical Expression Plan filter Plan filter get Filter Plan List Operator preds current Plan get Predecessors predecessor Map Integer Operator inputs find Inputs Add Filter filter Plan predecessor preds Filter new Filter null Entry Integer Operator entry inputs entry Set int input Index entry get Key Operator pred entry get Value Find projection field offset int column Offset predecessor instanceof Join predecessor instanceof Cross int input Index column Offset Logical Relational Operator preds get get Schema size Reuse filter first match others need make copy filter add input predecessor new Filter new Filter null filter new Filter Logical Plan current Plan current Plan add new Filter sub Plan add new Filter sub Plan add pred Logical Expression Plan f Plan filter Plan deep Copy List Operator sinks f Plan get Sinks List Project Expression proj Exprs new Array List Project Expression Operator sink sinks sink instanceof Project Expression proj Exprs add Project Expression sink predecessor instanceof Cogroup Project Expression proj Expr proj Exprs Need merge filter condition cogroup expression Logical Expression Plan plan Cogroup predecessor get Expression Plans get input Index iterator next Logical Expression Plan copy plan deep Copy Logical Expression root Logical Expression copy get Sinks get List Operator predecessors f Plan get Predecessors proj Expr predecessors null predecessors size f Plan remove proj Expr f Plan add root else f Plan add root Operator pred predecessors get Pair Integer Integer pair f Plan disconnect pred proj Expr f Plan connect pred pair first root pair second f Plan remove proj Expr reset projection expressions new filter plan sinks f Plan get Sinks Operator sink sinks sink instanceof Project Expression Project Expression proj Project Expression sink proj set Attached Relational Op new Filter proj set Input Num proj set Col Num proj get Col Num column Offset new Filter set Filter Plan f Plan insert Filter pred predecessor new Filter check relational operator contains specified uids private boolean Logical Relational Operator op Set Long uids throws Frontend Exception Logical Schema schema op get Schema schema null return false long uid uids schema find Field uid return false return true Override public Operator Plan report Changes return current Plan Insert filter given two operators private void insert Filter Operator prev Operator predecessor Filter filter throws Frontend Exception Pair Integer Integer p current Plan disconnect prev predecessor current Plan connect prev p first filter current Plan connect filter predecessor p second Identify among preds need filter predecessor private Map Integer Operator find Inputs Add Filter Logical Expression Plan filter Plan Operator predecessor List Operator preds throws Frontend Exception Map Integer Operator inputs new Hash Map Integer Operator predecessor instanceof Union predecessor instanceof Cogroup int preds size inputs put preds get return inputs collect uids used filter plan Set Long uids collect Uid Exp Plan filter Plan boolean inner Flags null boolean Inner true predecessor instanceof Join inner Flags Join predecessor get Inner Flags boolean inner inner Flags inner Inner false break Find predecessor join contains required uids int j j preds size j Filter push Join outer branch inner branch Logical Relational Operator preds get j uids predecessor instanceof Cross predecessor instanceof Join Inner inner Flags j Operator input preds get j sub Plan add input inputs put j input return inputs Override protected Operator Plan build Pattern Logical Plan plan new Logical Plan Logical Relational Operator op new Filter plan plan add op return plan
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache parser import java io File import java io Exception import java net import java net Syntax Exception import java util Array List import java util Hash Set import java util List import java util Set import org antlr runtime Common Token Stream import org antlr runtime Recognition Exception import org antlr runtime tree Common Tree import org antlr runtime tree Tree import org apache hadoop conf Configuration import org apache hadoop fs Path import org apache Func Spec import org apache Configuration import org apache Store Func Interface import org apache backend datastorage Container Descriptor import org apache backend datastorage Data Storage import org apache backend datastorage Element Descriptor import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop executionengine map Reduce Layer Configuration import org apache backend hadoop executionengine shims Hadoop Shims import org apache builtin Storage import org apache impl Context import org apache impl io File Spec import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan logical relational Store import org apache newplan logical relational Logical Plan import org apache tools pigstats Script State public class Query Parser Utils public static String remove Quotes String str str starts u c str ends u c return str substring str length else return str public static void attach Store Plan String scope Logical Plan lp String file Name String func Operator input String alias Context Context throws Frontend Exception func func null Context get Properties get Property Configuration Storage class get Name func Func Spec func Spec new Func Spec func Store Func Interface sto Func Store Func Interface Context instantiate Func Spec func Spec file Name remove Quotes file Name File Spec file Spec new File Spec file Name func Spec String sig alias Logical Plan Builder new Operator Key scope boolean disambiguation Enabled Boolean parse Boolean Context get Properties get Property Configuration Configuration sto Func set Store Func Context Signature sig Store store new Store lp file Spec sto Func sig disambiguation Enabled store set Alias alias try sto Func rel Abs Path Store Location file Name get Current Dir Context catch Exception ioe Frontend Exception e new Frontend Exception ioe get Message ioe throw e lp add store lp connect input store static Path get Current Dir Context Context throws Exception Data Storage dfs Context get Dfs Container Descriptor desc dfs get Active Container Element Descriptor el dfs Element desc return new Path el String static void set Hdfs Servers String absolute Path Context Context throws Syntax Exception First check file system via new property String default String Context get Properties get fs default default null check deprecated property must default String Context get Properties get fs default name default new default Configuration conf new Configuration true Configuration Util merge Conf conf Configuration Util Configuration Context get Properties Set String remote Hosts get Remote Hosts absolute Path default conf String hdfs Servers String String Context get Properties get Configuration hdfs Servers String null hdfs Servers String String hdfs Servers hdfs Servers String split String remote Host remote Hosts boolean existing false String hdfs Server hdfs Servers hdfs Server equals remote Host existing true existing hdfs Servers String Empty hdfs Servers String hdfs Servers String hdfs Servers String hdfs Servers String remote Host hdfs Servers String Empty Context get Properties set Property Configuration hdfs Servers String static Set String get Remote Hosts String absolute Path default Configuration conf String default Host default get Host null default get Host Lower Case String default Scheme default get Scheme null default get Scheme Lower Case Set String result new Hash Set String String fnames absolute Path split String fname fnames remove leading trailing whitespace Path path new Path fname trim uri path Uri uri Absolute scheme String Host uri get Host null uri get Host Lower Case String scheme uri get Scheme Lower Case host scheme continue scheme equals default Scheme Host equals default Host Host Empty continue String authority uri get Authority null uri get Authority Lower Case scheme equals har String parts authority split scheme parts parts length authority else authority parts scheme Empty scheme equals default Scheme authority equals default get Authority continue else Hadoop Shims File System Impl path conf continue result add scheme authority return result static String construct File Name Signature String file Name Func Spec func Spec return file Name func Spec String static String generate Error Header Recognition Exception ex String filename return new Source Location filename ex line ex char Position Line String Suppress Warnings unchecked rawtypes static void replace Node Node List Tree old Node Common Tree new Tree String file Name int idx old Node get Child Index Common Tree parent Common Tree old Node get Parent int count parent get Child Count List child List new Array List parent get Children List macro List new Tree get Children parent get Child Count parent delete Child int count idx add something add macro List null parent add Children macro List else parent add Child Tree child List get static File get File Import Search Path String script Path File f new File script Path f exists f Absolute script Path starts script Path starts return f Script State state Script State get state null state get Context null String srch Path state get Context get Properties get Property import search path srch Path null String paths srch Path split String path paths File f new File path File separator script Path f exists return f return null static Query Parser create Parser Common Token Stream tokens return create Parser tokens static Query Parser create Parser Common Token Stream tokens int line Offset Query Parser parser new Query Parser tokens Parser Node Adaptor adaptor new Parser Node Adaptor tokens get Source Name line Offset parser set Tree Adaptor adaptor return parser
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl builtin import java io Exception import java util Random import org apache data Tuple import org apache hadoop mapreduce Record Reader import org apache backend hadoop executionengine map Reduce Layer Split loader samples data randomly samples tuples input number tuples sampled set first call get Next see documentation get Next call public class Random Sample Loader extends Sample Loader array store sample tuples Tuple samples null index samples array next sample returned protected int next Sample Idx Construct class loader use param func Spec func spec loader use param ns Number samples per map collect Arguments passed strings instead actual types Func Spec int Func Spec supports string arguments constructors public Random Sample Loader String func Spec String ns instantiate loader super func Spec set number samples super set Num Samples Integer value ns Allocate buffer num Samples elements populate first num Samples tuples continue scanning rest input every ith next call generate random number r r r num Samples insert new tuple buffer position r gives us random sample tuples partition Override public Tuple get Next throws Exception samples null return get Sample else collect samples samples new Tuple num Samples populate samples array first num Samples tuples Tuple null int num Samples loader get Next null break samples row Num starts int row Num num Samples Random rand Gen new Random null exhaust tuples true collect samples input exhausted int rand rand Gen next Int row Num rand num Samples pick sample Tuple sample Tuple loader get Next sample Tuple null break samples rand sample Tuple else skip tuple skip Next break row Num return get Sample Override public void prepare Read Record Reader reader Split split throws Exception super prepare Read reader split samples null next Sample Idx private Tuple get Sample next Sample Idx samples length return samples next Sample Idx else return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java io Data Input import java io Data Output import java io Exception import java util Iterator import org apache Exception import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine physical Layer relational Operators Packager import org apache impl io Nullable Tuple import org apache impl io Nullable Writable bag store tuples memory access iterator typically provided Hadoop Use already iterator tuples want copy new bag public class Read Bag implements Data Bag Packager created protected Packager pkgr iterator Tuples Marked transient never serialize protected transient Iterator Nullable Tuple tup Iter key worked protected Nullable Writable key Writable private static final long serial Version public Read Bag constructor creates bag existing iterator tuples taking ownership iterator copying elements iterator param pkg Package Lite param tup Iter Iterator Nullable Tuple param key Object public Read Bag Packager pkgr Iterator Nullable Tuple tup Iter Nullable Writable key Writable pkgr pkgr tup Iter tup Iter key Writable key Writable non Javadoc see org apache impl util Spillable get Memory Size Override public long get Memory Size return non Javadoc see org apache impl util Spillable spill Override public long spill throw new Runtime Exception Read Bag support spill operation non Javadoc see org apache data Data Bag add org apache data Tuple Override public void add Tuple throw new Runtime Exception Read Bag support add operation non Javadoc see org apache data Data Bag add org apache data Data Bag Override public void add Data Bag b throw new Runtime Exception Read Bag support add operation non Javadoc see org apache data Data Bag clear Override public void clear throw new Runtime Exception Read Bag support clear operation non Javadoc see org apache data Data Bag Distinct Override public boolean Distinct throw new Runtime Exception Read Bag support Distinct operation non Javadoc see org apache data Data Bag Sorted Override public boolean Sorted throw new Runtime Exception Read Bag support Sorted operation non Javadoc see org apache data Data Bag iterator Override public Iterator Tuple iterator return new Read Bag Iterator non Javadoc see org apache data Data Bag mark Stale boolean Override public void mark Stale boolean stale throw new Runtime Exception Read Bag support mark Stale operation non Javadoc see org apache data Data Bag size Override public long size throw new Runtime Exception Read Bag support size operation non Javadoc see org apache hadoop io Writable read Fields java io Data Input Override public void read Fields Data Input throws Exception throw new Runtime Exception Read Bag support read Fields operation non Javadoc see org apache hadoop io Writable write java io Data Output Override public void write Data Output throws Exception int err Code String msg Read Bag never serialized throw new Exec Exception msg err Code Exception non Javadoc see java lang Comparable compare java lang Object defined since Data Bag implements Comparable although case really compare Override public int compare Object throw new Runtime Exception Read Bags compared Override public boolean equals Object instanceof Read Bag pkgr get Key Tuple tup Iter Read Bag tup Iter pkgr get Key Tuple Read Bag pkgr get Key Tuple pkgr get Key Tuple equals Read Bag pkgr get Key Tuple return true else return false else tup Iter Read Bag tup Iter pkgr get Key equals Read Bag pkgr get Key return true else return false return false Override public int hash Code int hash pkgr get Key Tuple hash hash pkgr get Key Tuple hash Code else hash hash pkgr get Key hash Code return hash protected class Read Bag Iterator implements Iterator Tuple non Javadoc see java util Iterator Next Override public boolean Next return tup Iter Next non Javadoc see java util Iterator next Override public Tuple next Nullable Tuple ntup tup Iter next int index ntup get Index Tuple ret null try ret pkgr get Value Tuple key Writable ntup index catch Exec Exception e throw new Runtime Exception Read Bag failed get value tuple e String return ret non Javadoc see java util Iterator remove Override public void remove throw new Runtime Exception Read Bag iterator remove allowed
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location Regex Operator public class Regex Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Regex Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super Regex plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Regex Expression Regex Expression ao Regex Expression return ao get Lhs Equal get Lhs ao get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null Data Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Regex Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import java io Exception import java io Serializable import java util Arrays import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache classification Interface Audience import org apache classification Interface Stability import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl logical Layer schema Schema Field Schema import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema import org codehaus jackson annotate Json Property Order represenation schema used communicate load store functions separate link Schema internal representation schema since Interface Audience Public Interface Stability Stable Json Property Order fields version sort Keys sort Key Orders public class Resource Schema implements Serializable private static final long serial Version private static Log log Log Factory get Log Resource Schema class Array Getters intentionally return mutable arrays instead copies simplify updates without unnecessary copying Setters make copy arrays order prevent array shared two objects modifications one accidentally changing initializing arrays empty n worry Es setters wo n set null private Resource Field Schema fields new Resource Field Schema public enum Order private int sort Keys new int entry offset fields array private Order sort Key Orders new Order private int version Json Property Order name type description schema public static class Resource Field Schema implements Serializable private static final long serial Version private String name values constants Data Type private byte type private String description nested tuples bags schema private Resource Schema schema Construct empty field schema public Resource Field Schema Construct using link org apache impl logical Layer schema Schema Field Schema template param field Schema field Schema copy public Resource Field Schema Field Schema field Schema type field Schema type name field Schema alias description autogenerated Field Schema Schema inner field Schema schema allow partial schema type Data Type type Data Type type Data Type inner null schema new Resource Schema inner else schema null Construct using link org apache newplan logical relational Logical Schema Logical Field Schema template param field Schema field Schema copy public Resource Field Schema Logical Field Schema field Schema type field Schema type name field Schema alias description autogenerated Field Schema Logical Schema inner field Schema schema allow partial schema Data Type Schema Type type inner null schema new Resource Schema inner else schema null Get name field return name public String get Name return name Set name filed param name new name return public Resource Field Schema set Name String name name name return Get type field return type link Data Type static final byte public byte get Type return type Set type field param type new type return public Resource Field Schema set Type byte type type type return Get free form text description field return description public String get Description return description Set description param description new description return public Resource Field Schema set Description String description description description return Get schema field Type tuple bag map may schema return schema public Resource Schema get Schema return schema Set schema field Type tuple bag map may schema param schema new schema return public Resource Field Schema set Schema Resource Schema schema throws Exception validate Schema schema schema schema return private void validate Schema Resource Schema schema throws Exception type Data Type schema null Resource Field Schema sub Fields schema get Fields sub Fields length sub Fields type Data Type throw Invalid Schema Exception else throw Invalid Schema Exception public static void throw Invalid Schema Exception throws Frontend Exception int err Code throw new Frontend Exception Invalid resource schema bag schema must tuple field err Code Exception Override public String String return get Description true public String calc Cast String return get Description false private String get Description boolean print Alias String Builder sb new String Builder print Alias name null sb append name append Data Type Atomic type sb append Data Type find Type Name type else schema null stringify Resource Schema sb schema type print Alias return sb String Construct empty Resource Schema public Resource Schema Construct Resource Schema link Schema param Schema Schema use public Resource Schema Schema Schema List Field Schema Schema Fields Schema get Fields fields new Resource Field Schema Schema Fields size int fields length fields new Resource Field Schema Schema Fields get Construct Resource Schema link Logical Schema param Schema Schema use public Resource Schema Logical Schema Schema List Logical Field Schema Schema Fields Schema get Fields fields new Resource Field Schema Schema Fields size int fields length fields new Resource Field Schema Schema Fields get use internal code Construct Resource Schema link Schema param Schema Schema use param sort Info information data sorted Interface Audience Private public Resource Schema Schema Schema Sort Info sort Info Schema sort Info null sort Info get Sort Col Info List size sort Keys new int sort Info get Sort Col Info List size sort Key Orders new Order sort Info get Sort Col Info List size int sort Info get Sort Col Info List size Sort Col Info col Info sort Info get Sort Col Info List get int index col Info get Col Index Order order org apache Sort Col Info Order orig Order col Info get Sort Order orig Order org apache Sort Col Info Order order Order else order Order sort Keys index sort Key Orders order use internal code Construct Resource Schema link Logical Schema param Schema Logical Schema use param sort Info information data sorted Interface Audience Private public Resource Schema Logical Schema Schema Sort Info sort Info Schema sort Info null sort Info get Sort Col Info List size sort Keys new int sort Info get Sort Col Info List size sort Key Orders new Order sort Info get Sort Col Info List size int sort Info get Sort Col Info List size Sort Col Info col Info sort Info get Sort Col Info List get int index col Info get Col Index Order order org apache Sort Col Info Order orig Order col Info get Sort Order orig Order org apache Sort Col Info Order order Order else order Order sort Keys index sort Key Orders order Get version schema return version public int get Version return version public Resource Schema set Version int version version version return Get field schema field return array field schemas public Resource Field Schema get Fields return fields Get field names return array field names public String field Names String names new String fields length int fields length names fields get Name return names Set fields fields currently null new fields silently ignored param fields use fields schema return public Resource Schema set Fields Resource Field Schema fields fields null fields Arrays copy fields fields length return Get sort keys data return array ints integer array represents field number schema data b c data sorted c b returned sort keys Field numbers zero based data sorted zero length array returned public int get Sort Keys return sort Keys Set sort keys htis data sort keys currently null new sort keys silently ignored param sort Keys integer array represents field number schema data b c data sorted c b sort keys Field numbers zero based return public Resource Schema set Sort Keys int sort Keys sort Keys null sort Keys Arrays copy sort Keys sort Keys length return Get order sort keys return array Order array length int array returned link get Sort Keys public Order get Sort Key Orders return sort Key Orders Set order sort key order currently null new order silently ignored param sort Key Orders array Order length int passed link set Sort Keys return public Resource Schema set Sort Key Orders Order sort Key Orders sort Key Orders null sort Key Orders Arrays copy sort Key Orders sort Key Orders length return Test whether two Resource Schemas Two schemas said null number fields field name type fields may schemas e tuples schemas equal Field descriptions used testing equality return true equal according definition otherwise false public static boolean equals Resource Schema rs Resource Schema rs rs null return rs null true false rs null return false rs get Version rs get Version Arrays equals rs get Sort Keys rs get Sort Keys Arrays equals rs get Sort Key Orders rs get Sort Key Orders return false Resource Field Schema rfs rs get Fields Resource Field Schema rfs rs get Fields rfs length rfs length return false int rfs length rfs get Name null rfs get Name null rfs get Name null rfs get Name null return false rfs get Name null rfs get Name null rfs get Type rfs get Type return true else return false rfs get Name equals rfs get Name rfs get Type rfs get Type return false equals rfs get Schema rfs get Schema return false return true Override public String String String Builder sb new String Builder stringify Resource Schema sb Data Type true return sb String private static void stringify Resource Schema String Builder sb Resource Schema rs byte type boolean print Alias type Data Type sb append else type Data Type sb append else type Data Type sb append rs null int rs get Fields length sb append rs get Fields get Description print Alias rs get Fields length sb append type Data Type sb append else type Data Type sb append else type Data Type sb append
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import java io Serializable import java util Arrays import org apache classification Interface Audience import org apache classification Interface Stability class represents statistics data loaded stored marked unstable little statistics collection point functionality added expected interface change since Interface Audience Public Interface Stability Unstable public class Resource Statistics implements Cloneable Getters intentionally return mutable arrays instead copies simplify updates without unnecessary copying Setters make copy arrays order prevent array shared two objects modifications one accidentally changing arrays initialized empty n worry Es setters disallow setting null private static final long serial Version private Long num Records number records private Long avg Record Size average record size bytes private Resource Field Statistics fields new Resource Field Statistics private Long bytes Statistics given field data public static class Resource Field Statistics implements Serializable private static final long serial Version private int version private Long num Distinct Values number distinct values represented field need way represent histogram values field useful However ca n count able hold histograms memory figure kept disk represented n create many buckets ca n hold memory ordered array common values descending order frequency private Object Common Values new Object array matches Common Values array lists frequencies values fraction total number records private float Common Values Freq new float ordered array values min val max val number records values value Histogram value Histogram roughly equal values Common Values non empty values array included histogram Adjust accordingly private Object value Histogram new Object public int get Version return version public Resource Field Statistics set Version int version version version return public Long get Num Distinct Values return num Distinct Values public Resource Field Statistics set Num Distinct Values Long num Distinct Values num Distinct Values num Distinct Values return public Object get Common Values return Common Values public Resource Field Statistics set Common Values Object Common Values Common Values null Common Values Arrays copy Common Values Common Values length return public float get Common Values Freq return Common Values Freq public Resource Field Statistics set Common Values Freq float Common Values Freq Common Values Freq null Common Values Freq Arrays copy Common Values Freq Common Values Freq length return public Object get Value Histogram return value Histogram public Resource Field Statistics set Value Histogram Object value Histogram value Histogram null value Histogram Arrays copy value Histogram value Histogram length return equals hash Code overridden mostly ease testing n encounter situation need equals two sets statistics different objects wild Override public boolean equals Object null get Class equals get Class return false Resource Field Statistics Resource Field Statistics setters allow null values worries Es return Arrays equals Common Values Common Values Arrays equals Common Values Freq Common Values Freq Arrays equals value Histogram value Histogram num Distinct Values equals num Distinct Values version version naive hash Code implementation following example developerworks http www ibm com developerworks java library j jtp html Override public int hash Code int hash hash hash Arrays hash Code Common Values hash hash Arrays hash Code Common Values Freq hash hash num Distinct Values hash Code hash hash Arrays hash Code value Histogram hash hash version return Override public String String String Builder sb new String Builder Resource Statistics Version version n sb append n Object Common Values sb append String sb append n Vfreq n Float f Common Values Freq sb append f String sb append n sb append num Dist Vals num Distinct Values sb append val Histogram n Object value Histogram sb append String sb append n return sb String public Long getm Bytes return bytes param Bytes deprecated Use link Resource Statistics set Size Bytes Long instead Deprecated public Resource Statistics setm Bytes Long Bytes bytes Bytes return Sets size bytes param bytes public void set Size Bytes Long bytes bytes bytes return size bytes public Long get Size Bytes return bytes public Long get Num Records return num Records public Resource Statistics set Num Records Long num Records num Records num Records return returns average record size bytes number explicitly specified statistics absent computed using totalbytes totalrecords return null ca n computed public Long get Avg Record Size avg Record Size null bytes null num Records null return bytes num Records else return avg Record Size Set average record size bytes param size Bytes public void set Avg Record Size Long size Bytes avg Record Size size Bytes public Resource Field Statistics get Fields return fields public Resource Statistics set Fields Resource Field Statistics fields fields null fields Arrays copy fields fields length return equals hash Code overridden mostly ease testing n encounter situation need equals two sets statistics different objects wild Override public boolean equals Object null get Class equals get Class return false Resource Statistics Resource Statistics return Arrays equals fields fields bytes null bytes null bytes equals bytes num Records null num Records null num Records equals num Records Override public int hash Code int hash hash hash Arrays hash Code fields hash hash bytes null bytes hash Code hash hash num Records null num Records hash Code return hash Probably Override public String String String Builder sb new String Builder Field Stats n Resource Field Statistics f fields sb append f String sb append bytes bytes sb append num Records num Records return sb String public Object clone throws Clone Supported Exception return super clone
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util List import org apache Eval Func import org apache backend executionengine Exec Exception import org apache data Bag Factory import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl logical Layer schema Schema Field Schema import com google common collect Lists Produces Data Bag hierarchy values detailed level aggregation general level aggregation specified dimensions example b c produce following bag pre b c b null null null null null null pre public class Rollup Dimensions extends Eval Func Data Bag private static Bag Factory bf Bag Factory get Instance private static Tuple Factory tf Tuple Factory get Instance private final String Marker public Rollup Dimensions null public Rollup Dimensions String Marker super Marker Marker Override public Data Bag exec Tuple tuple throws Exception List Tuple result Lists new Array List Capacity tuple size Cube Dimensions convert Null Unknown tuple result add tuple iteratively Rollup result tuple return bf new Default Bag result private void iteratively Rollup List Tuple result Tuple input throws Exec Exception Tuple temp Tup tf new Tuple input get int input size temp Tup set Marker result add tf new Tuple temp Tup get Override public Schema output Schema Schema input dimensions string default namespace assigned output schema overridden specifying user defined schema names foreach operator user defined schema names specified output schema foreach operator using dimensions namespace fields tuple try return new Schema new Field Schema dimensions input Data Type catch Frontend Exception e specifying explicitly happen throw new Runtime Exception e Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan optimizer import java util Array List import java util Deque import java util Hash Set import java util Iterator import java util Linked List import java util List import java util Set import org apache commons logging Log import org apache commons logging Log Factory import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Operator Sub Plan Rules describe pattern operators also reference Transformer pattern operators found one times provided plan optimizer use associated Transformer transform plan Note pattern matching logic implemented limitation assumes leaves pattern siblings See detailed description https issues apache org jira browse new rules use patterns n work limitation pattern match logic need updated public abstract class Rule protected String name null protected Operator Plan pattern transient protected Operator Plan current Plan protected static final Log log Log Factory get Log Rule class private transient Set Operator matched Nodes new Hash Set Operator private boolean mandatory private boolean skip Listener false Create rule using default pattern rule provided param n Name rule param mandatory set false rule disabled user public Rule String n boolean mandatory name n pattern build Pattern mandatory mandatory param n Name rule param p Pattern look public Rule String n Operator Plan p name n pattern p Build pattern rule look return pattern look rule abstract protected Operator Plan build Pattern Get transformer rule Abstract rule may want choose instantiate transformer never return cached transformer always return fresh one state return Transformer use rule abstract public Transformer get New Transformer Return pattern matched rule return pattern matched rule public Operator Plan get Pattern return pattern protected boolean Skip Listener return skip Listener protected void set Skip Listener boolean skip skip Listener skip Search sub plans matches pattern defined rule See class description limitations patterns supported return list matched sub plans returned plans partial views original Operator Plan sub set original plan represents topology pattern operators returned plan objects original plan Therefore call get Plan node return plan would return original plan param plan Operator Plan look matches pattern public List Operator Plan match Operator Plan plan throws Frontend Exception current Plan plan List Operator leaves pattern get Sinks Iterator Operator iter plan get Operators List Operator Plan matched List new Array List Operator Plan matched Nodes clear iter Next Operator op iter next find node matches first leaf pattern match op leaves get List Operator plan Ops new Array List Operator plan Ops add op leaves pattern check leaves match siblings node leaves size boolean matched true List Operator preds null preds plan get Predecessors op node predecessor must root preds null preds new Array List Operator preds add null Operator preds matched true List Operator siblings null null siblings plan get Successors else root get siblings getting roots siblings plan get Sources int index siblings index op siblings size index leaves size continue int j j leaves size j match siblings get index j leaves get j matched false break matched int j j leaves size j plan Ops add siblings get index j move next operator one n siblings match leaves matched continue Pattern Match Operator Plan match new Pattern Match Operator Plan plan match check plan Ops find matched pattern add operators matched Nodes Iterator Operator iter match get Operators iter Next Operator opt iter next matched Nodes add opt add pattern matched List add match return matched List public String get Name return name public boolean Mandatory return mandatory Check two operators match want find matches n share nodes private boolean match Operator plan Node Operator pattern Node return plan Node get Class equals pattern Node get Class matched Nodes contains plan Node private class Pattern Match Operator Plan extends Operator Sub Plan public Pattern Match Operator Plan Operator Plan base Plan super base Plan protected boolean check List Operator plan Ops throws Frontend Exception List Operator pattern Ops pattern get Sinks plan Ops size pattern Ops size return false int plan Ops size Deque Operator new Linked List Operator check plan Ops get pattern Ops get return false Iterator Operator iter iterator iter Next add iter next size pattern size return true return false Check plan operator sub tree match pattern operator sub tree algorithm search return one match n recursively search possible matches example plan looks like join load load looking join load pattern one match returned instead two matched subsets n share nodes private boolean check Operator plan Op Operator pattern Op Deque Operator opers throws Frontend Exception match plan Op pattern Op return false check predecessors match List Operator preds get Base Plan get Predecessors plan Op List Operator preds pattern get Predecessors pattern Op preds null preds null return false preds null preds null preds size preds size return false reached root pattern match found preds null preds size opers push plan Op return true int index look predecessors index preds size boolean match true match preds get index preds get preds size index preds size return false int old Size opers size int preds size check preds get index preds get opers int j opers size j old Size j opers pop match false break match opers push plan Op return true index return false
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl builtin import java io Exception import java util Array List import org apache hadoop fs Path import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Job import org apache hadoop mapreduce Record Reader import org apache Load Caster import org apache Load Func import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Split import org apache impl Context import org apache impl io File Spec import org apache impl util Pair Abstract class specifies interface sample loaders public abstract class Sample Loader extends Load Func number samples sampled protected int num Samples protected Load Func loader Record Reader used underlying loader private Record Reader record Reader null public Sample Loader String func Spec func Spec func Spec replace loader Load Func Context instantiate Func Spec func Spec public void set Num Samples int n num Samples n public int get Num Samples return num Samples Override public Input Format get Input Format throws Exception return loader get Input Format public boolean skip Next throws Exception try return record Reader next Key Value catch Interrupted Exception e throw new Exception Error getting input e public void compute Samples Array List Pair File Spec Boolean inputs Context pc throws Exec Exception Override public Load Caster get Load Caster throws Exception return loader get Load Caster Override public String relative Absolute Path String location Path cur Dir throws Exception return loader relative Absolute Path location cur Dir Override public void prepare Read Record Reader reader Split split throws Exception loader prepare Read reader split record Reader reader Override public void set Location String location Job job throws Exception loader set Location location job Override public void set Context Signature String signature loader set Context Signature signature
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import java io Exception import java util Array List import java util List import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache Func Spec import org apache backend hadoop datastorage Configuration Util import org apache backend hadoop executionengine map Reduce Layer plans Op Plan Visitor import org apache backend hadoop executionengine map Reduce Layer plans Oper Plan import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Constant Expression import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache impl io File Spec import org apache impl plan Depth First Walker import org apache impl plan Plan Exception import org apache impl plan Plan Walker import org apache impl plan Visitor Exception import org apache impl util Utils import org apache impl Context visitor optimize plans sample job immediately follows load store job kinds plans generated order bys soon generated joins need sample data first changed Random Sample Loader subsumes loader used first job removes first job public class Sample Optimizer extends Op Plan Visitor private static final Log log Log Factory get Log Sample Optimizer class private Context Context public Sample Optimizer Oper Plan plan Context Context super plan new Depth First Walker Map Reduce Oper Oper Plan plan Context Context private List Map Reduce Oper ops Remove new Array List Map Reduce Oper Override public void visit throws Visitor Exception super visit remove operators marked removal Map Reduce Oper op ops Remove Plan remove op Override public void visit Op Map Reduce Oper mr throws Visitor Exception See sampling job List Physical Operator pos mr map Plan get Roots pos null pos size log debug Map operator empty return Physical Operator po pos get po instanceof Load log debug Root operator map load return Huh Load load Load po String load Func load get File get Func Name String load File load get File get File Name org apache impl builtin Random Sample Loader equals load Func org apache impl builtin Poisson Sample Loader equals load Func log debug sampling job return load File null log debug load file return Get job predecessor exactly one List Map Reduce Oper preds Plan get Predecessors mr preds size log debug many predecessors sampling job return Map Reduce Oper pred preds get predecessor root List Map Reduce Oper pred Preds Plan get Predecessors pred pred Preds null pred Preds size log debug Predecessor root plan return predecessor load store map nothing combine reduce pred reduce Plan Empty pred combine Plan Empty log debug Predecessor combine reduce plan return job one successor List Map Reduce Oper succs Plan get Successors mr succs size log debug Job one successor return Map Reduce Oper succ succs get pred map Plan null pred map Plan size log debug Predecessor load store map return List Physical Operator loads pred map Plan get Roots loads size log debug Predecessor plan one root return Physical Operator r loads get r instanceof Load Huh log debug Predecessor map plan root load return Load pred Load Load r Find load correlates file sampler loading check using temp file storage format succ map Plan null Huh log debug Successor map plan return loads succ map Plan get Roots Load succ Load null Physical Operator root loads root instanceof Load Huh log debug Successor roots loads return Load sl Load root load File equals sl get File get File Name Utils get Tmp File Compressor Name Context equals sl get File get Func Name succ Load sl break succ Load null log debug Could find load matched file sampling return Okay First replace Random Sample Loader Random Sample Loader uses load function predecessor String rslargs new String File Spec pred Fs pred Load get File First argument Func Spec loader function subsume want set rslargs pred Fs get Func Spec String Add loader funcspec list udf associated mr operator mr Fs add rslargs Second argument number samples per block read original rslargs load get File get Func Spec get Ctor Args File Spec fs new File Spec pred Fs get File Name new Func Spec load Func rslargs Load new Load new Load load get Operator Key load get Requested Parallelism fs new Load set Signature pred Load get Signature new Load set Limit pred Load get Limit try mr map Plan replace load new Load check Partition Skewed Keys List Physical Operator ls mr reduce Plan get Leaves Physical Operator op ls scan mr op fs get File Name catch Plan Exception e throw new Visitor Exception e Second replace loader successor whatever originally used loader fs new File Spec pred Fs get File Name pred Fs get Func Spec new Load new Load succ Load get Operator Key succ Load get Requested Parallelism fs new Load set Signature pred Load get Signature try succ map Plan replace succ Load new Load Add loader funcspec list udf associated mr operator succ Fs add new Load get File get Func Spec String catch Plan Exception e throw new Visitor Exception e delete pred right still traversing graph mark pred remove plan visit optimizer complete ops Remove add pred search Partion Skewed Keys update input file name always operator reduce plan private void scan Map Reduce Oper mr Physical Operator op String file Name op instanceof User Func User Func op get Func Spec get Class Name equals org apache impl builtin Partition Skewed Keys String ctor Args User Func op get Func Spec get Ctor Args ctor Args file Name return else op instanceof List Physical Plan pl op get Input Plans Physical Plan plan pl List Physical Operator list plan get Leaves Physical Operator pp list scan mr pp file Name else List Physical Operator preds mr reduce Plan get Predecessors op preds null return Physical Operator p preds scan mr p file Name
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl logical Layer schema import java io Serializable import java util Array List import java util Collection import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import org apache commons logging Log import org apache commons logging Log Factory import org apache Exception import org apache Resource Schema import org apache Resource Schema Resource Field Schema import org apache data Data Type import org apache impl logical Layer Canonical Namer import org apache impl logical Layer Frontend Exception import org apache impl util Multi Map Schema class encapsulates notion schema relational operator schema list columns describe output relational operator column relation represented Field Schema static class inside Schema column definition alias type possible schema column bag tuple addition column schema unique auto generated name used tracking lineage column sequence statements lineage column tracked using map predecessors columns operators generate predecessor columns predecessor columns columns required order generate column consideration Similarly reverse lookup operators generate predecessor column predecessor column maintained public class Schema implements Serializable Cloneable private static final long serial Version public static class Field Schema implements Serializable Cloneable private static final long serial Version Alias field public String alias Datatype using codes link org apache data Data Type public byte type tuple schema Otherwise field must null public Schema schema Canonical name name uniquely identifies field throughout query Unlike alias changed change field transformed way used arithmetic expression passed udf point new canonical name generated field public String canonical Name null Canonical namer object generate new canonical names request order ensure unique consistent names across field schema objects object made static public static final Canonical Namer canonical Namer new Canonical Namer private static Log log Log Factory get Log Schema Field Schema class Constructor type param Alias known unknown leave null param Type using codes link org apache data Data Type public Field Schema String byte alias type schema null canonical Name Canonical Namer get New Name Constructor tuple fields param Alias known unknown leave null param Schema tuple public Field Schema String Schema alias type Data Type schema canonical Name Canonical Namer get New Name Constructor tuple fields param Alias known unknown leave null param Schema tuple param Type using codes link org apache data Data Type public Field Schema String Schema byte throws Frontend Exception alias schema log debug Bag Data Type tuple Data Type null Data Type Schema Type int err Code throw new Frontend Exception schemas Got Data Type find Type Name err Code Exception type canonical Name Canonical Namer get New Name Copy Constructor param fs Source Field Schema public Field Schema Field Schema fs null fs alias fs alias null fs schema schema new Schema fs schema else schema null type fs type else alias null schema null type Data Type canonical Name Canonical Namer get New Name Two field schemas equal types schemas equal levels order relax alias equivalent requirement instead use equals Field Schema fschema Field Schema fother boolean relax Inner boolean relax Alias Override public boolean equals Object instanceof Field Schema return false Field Schema otherfs Field Schema return Field Schema equals otherfs false false Override public int hash Code return type schema null schema hash Code alias null alias hash Code Recursively compare two schemas check input schema cast cast schema param cast Fs schema cast operator param input Fs schema cast input return true falsew public static boolean castable Schema Field Schema cast Fs Schema Field Schema input Fs cast Fs null input Fs null return false cast Fs null return false input Fs null return false byte input Type input Fs type byte cast Type cast Fs type Data Type Schema Type cast Fs type input Type Data Type good else input Type cast Type n comparison embedded schemas null cause Schema equals return false even though want view true cast Fs schema null input Fs schema null compare recursively using schema Schema castable cast Fs schema input Fs schema return false else return false else input Type cast Type good else input Type Data Type cast Type Data Type cast Type Data Type Data Type Number Type cast Type good else Data Type Number Type input Type cast Type Data Type cast Type Data Type Data Type Number Type cast Type cast Type Data Type cast Type Data Type good else input Type Data Type cast Type Data Type cast Type Data Type Data Type Number Type cast Type good else input Type Data Type cast Type Data Type Data Type Number Type cast Type cast Type Data Type cast Type Data Type good else input Type Data Type good else return false return true Compare two field schema equality param fschema param fother param relax Inner true n check inner tuple schemas param relax Alias true n check aliases return true Field Schemas equal false otherwise public static boolean equals Field Schema fschema Field Schema fother boolean relax Inner boolean relax Alias fschema null return false fother null return false fschema type fother type return false relax Alias fschema alias null fother alias null good else fschema alias null fother alias null return false else fschema alias null fother alias null return false else fschema alias equals fother alias return false relax Inner Data Type Schema Type fschema type n comparison embedded schemas null cause Schema equals return false even though want view true fschema schema null fother schema null compare recursively using schema Schema equals fschema schema fother schema false relax Alias return false return true Override public String String String Builder sb new String Builder alias null sb append alias sb append sb append Data Type find Type Name type schema null sb append sb append schema String sb append canonical Name null sb append cn sb append canonical Name return sb String Make deep copy Field Schema return return clone Field Schema throws Clone Supported Exception Override public Field Schema clone throws Clone Supported Exception Strings immutable n need copy alias Schemas mutable need make copy try Field Schema fs new Field Schema alias schema null null schema clone type fs canonical Name Canonical Namer get New Name return fs catch Frontend Exception fe throw new Runtime Exception never fail clone Field Schema fe Recursively prefix merge two schemas param Fs field schema merged return prefix merged field schema null one schema null allow Incompatible Types true throws Schema Merge Exception merged public Schema Field Schema merge Prefix Field Schema Schema Field Schema Fs throws Schema Merge Exception return merge Prefix Field Schema Fs true false Recursively prefix merge two schemas param Fs field schema merged param Takes Alias Precedence true aliases field schema take precedence return prefix merged field schema null one schema null allow Incompatible Types true throws Schema Merge Exception merged public Schema Field Schema merge Prefix Field Schema Schema Field Schema Fs boolean Takes Alias Precedence throws Schema Merge Exception return merge Prefix Field Schema Fs Takes Alias Precedence false Recursively prefix merge two schemas param Fs field schema merged param Takes Alias Precedence true aliases field schema take precedence param allow Mergeable Types true mergeable types allowed Two types mergeable following conditions true checks either one type null unknown type null unknown result type latter non null unknown type either type bytearray result type possibly non type current type cast type result type type return prefix merged field schema null throws Schema Merge Exception merged public Schema Field Schema merge Prefix Field Schema Schema Field Schema Fs boolean Takes Alias Precedence boolean allow Mergeable Types throws Schema Merge Exception Schema Field Schema Fs Schema Field Schema merged Fs null byte merged Type Data Type null Fs return Fs Null Unknown Type Fs Null Unknown Type Fs int err Code String msg Type mismatch useful type merging Field Schema Fs Field Schema Fs throw new Schema Merge Exception msg err Code Exception else Fs type Fs type merged Type Fs type else Null Unknown Type Fs Null Unknown Type Fs merged Type Fs type else allow Mergeable Types Null Unknown Type Fs Null Unknown Type Fs merged Type Fs type else Fs type Data Type set merge Type Fs type could even merged Type Fs type else castable Fs Fs merged Type Fs type else int err Code String msg Type mismatch merging schema prefix Field Schema Fs Field Schema Fs throw new Schema Merge Exception msg err Code Exception else int err Code String msg Type mismatch merging schema prefix Field Schema Fs Field Schema Fs throw new Schema Merge Exception msg err Code Exception String merged Alias merge Alias Fs alias Fs alias Takes Alias Precedence Data Type Schema Type merged Type normal merge merged Fs new Field Schema merged Alias merged Type else Schema merged Sub Schema null merge inner schemas sides schemas null Fs schema merged Sub Schema Fs schema merge Prefix Schema Fs schema Takes Alias Precedence allow Mergeable Types else merged Sub Schema Fs schema set Schema Default Type merged Sub Schema Data Type create merged field try merged Fs new Field Schema merged Alias merged Sub Schema merged Type catch Frontend Exception fee int err Code String msg Unable create field schema throw new Schema Merge Exception msg err Code Exception fee return merged Fs Recursively set type specifid type param fs field schema whose type set param specified type public static void set Field Schema Default Type Schema Field Schema fs byte null fs return Data Type fs type fs type Data Type Schema Type fs type set Schema Default Type fs schema private boolean Null Unknown Type Field Schema fs return fs type Data Type fs type Data Type Find field schema instance Field Schema hierarchy including matches given canonical name param canonical Name canonical name return Field Schema instance found public Field Schema find Field Schema String canonical Name canonical Name equals canonical Name return schema null return schema find Field Schema canonical Name return null private List Field Schema Fields private Map String Field Schema Aliases private Multi Map String String Field Schemas private static Log log Log Factory get Log Schema class bags schema tuple contains fields present access second field say actually trying access second field tuple bag currently true two cases bag constants schema bag constant tuple internally actual elements bags loaded input data user specifies schema bag type specify bag containing tuple actual elements schema declaration However cases user still say b b bag element bag tuple schema cases access translate lookup tuple schema present bag indicate flag used false default currently use bag type relations However schema relation tuple fieldschema items Instead schema directly field schema items relation b b access would direct single level access b schema treated default case private boolean two Level Access Required false public Schema Fields new Array List Field Schema Aliases new Hash Map String Field Schema Field Schemas new Multi Map String String param fields List field schemas describes fields public Schema List Field Schema fields Fields fields Aliases new Hash Map String Field Schema fields size Field Schemas new Multi Map String String Field Schema fs fields null fs fs alias null Aliases put fs alias fs Field Schemas put fs canonical Name fs alias Create schema one field param field Schema field put schema public Schema Field Schema field Schema Fields new Array List Field Schema Fields add field Schema Aliases new Hash Map String Field Schema Field Schemas new Multi Map String String null field Schema field Schema alias null Aliases put field Schema alias field Schema Field Schemas put field Schema canonical Name field Schema alias Copy Constructor param source schema public Schema Schema null two Level Access Required two Level Access Required Fields new Array List Field Schema size Aliases new Hash Map String Field Schema Field Schemas new Multi Map String String try int size Field Schema fs new Field Schema get Field Fields add fs null fs fs alias null Aliases put fs alias fs Field Schemas put fs canonical Name fs alias catch Frontend Exception pe Fields new Array List Field Schema Aliases new Hash Map String Field Schema Field Schemas new Multi Map String String else Fields new Array List Field Schema Aliases new Hash Map String Field Schema Field Schemas new Multi Map String String Given alias name find associated Field Schema param alias Alias look return Field Schema null alias tuple public Field Schema get Field String alias throws Frontend Exception Field Schema fs Aliases get alias null fs String coco Prefix alias Map String Integer alias Matches new Hash Map String Integer build map aliases coco Prefix suffix String key Aliases key Set key ends coco Prefix Integer count alias Matches get key null count alias Matches put key else alias Matches put key count process map check multiple keys count keys count never occur thers single key count match alias Matches key Set size return null alias Matches key Set size Object keys alias Matches key Set Array String key String keys alias Matches get key int err Code throw new Frontend Exception Found duplicate aliases key err Code Exception return Aliases get key else check multiple aliases obtained actually point field schema return field schema Set Field Schema set new Hash Set Field Schema String key alias Matches key Set set add Aliases get key set size return set iterator next boolean Next false String Builder sb new String Builder Found one match String key alias Matches key Set Next sb append else Next true sb append key int err Code throw new Frontend Exception sb String err Code Exception else return fs Given alias name find associated Field Schema exact name found see field matches part namespaced alias eg given alias nm schema b return Field Schema given alias nm schema nm b return null param alias Alias look return Field Schema null alias tuple public Field Schema get Field Sub Name Match String alias throws Frontend Exception alias null return null Field Schema fs get Field alias fs null return fs fs null final String sep Array List Field Schema matched Field Schemas new Array List Field Schema alias contains sep Field Schema field Fields alias ends sep field alias matched Field Schemas add field matched Field Schemas size boolean Next false String Builder sb new String Builder Found one sub alias name match Field Schema match Fs matched Field Schemas Next sb append else Next true sb append match Fs alias int err Code throw new Frontend Exception sb String err Code Exception else matched Field Schemas size fs matched Field Schemas get return fs Given field number find associated Field Schema param field Num Field number look return Field Schema field throws Parse Exception field number exceeds number fields tuple public Field Schema get Field int field Num throws Frontend Exception field Num Fields size int err Code String detailed Msg Attempt access field field Num schema String msg Attempt fetch field field Num schema size Fields size throw new Frontend Exception msg err Code Exception false detailed Msg return Fields get field Num Find number fields schema return number fields public int size return Fields size Reconcile schema another schema schema reconciled number columns use case schema already exists may alias type information alias exists schema new one given new one used Similarly types though needs used carefully types lightly changed param Schema reconcile throws Parse Exception reconciled public void reconcile Schema throws Frontend Exception null size size int err Code String msg reconcile schemas different sizes schema size size size size String detailed Msg Schema size mismatch schema schema throw new Frontend Exception msg err Code Exception false detailed Msg Iterator Field Schema Fields iterator int j Next j Field Schema Fs next Field Schema Fs Fields get j log debug Fs Fs Fs Fs Fs alias null log debug Fs alias Fs alias Fs alias null log debug Removing Fs alias Fs alias Aliases remove Fs alias Collection String aliases Field Schemas get Fs canonical Name aliases null List String list Aliases new Array List String String alias aliases list Aliases add alias String alias list Aliases log debug Removing alias alias multimap Field Schemas remove Fs canonical Name alias Fs alias Fs alias log debug Setting alias Fs alias Aliases put Fs alias Fs null Fs alias Field Schemas put Fs canonical Name Fs alias Fs type Data Type Fs type Fs type log debug Setting type Data Type find Type Name Fs type Fs schema null Fs schema Fs schema log debug Setting schema Fs schema two schemas equal deeply equal Use Schema equals Schema schema Schema boolean relax Inner boolean relax Alias relaxation aliases requirement Override public boolean equals Object instanceof Schema return false Schema Schema return Schema equals false false Make deep copy schema throws Clone Supported Exception Override public Schema clone throws Clone Supported Exception Schema new Schema Build map old new field schemas properly construct new alias field schema maps Populate field list copies existing field schemas Map Field Schema Field Schema fs Map new Hash Map Field Schema Field Schema size Map String Field Schema fs Canonical Name Map new Hash Map String Field Schema size Field Schema fs Fields Field Schema copy fs clone Fields add copy fs Map put fs copy fs Canonical Name Map put fs canonical Name copy Build aliases map String alias Aliases key Set Field Schema old Fs Aliases get alias assert old Fs null Field Schema new Fs fs Map get old Fs assert new Fs null Aliases put alias new Fs Build field schemas map String old Fs Canonical Name Field Schemas key Set Field Schema new Fs fs Canonical Name Map get old Fs Canonical Name assert new Fs null Field Schemas put new Fs canonical Name Field Schemas get old Fs Canonical Name two Level Access Required two Level Access Required return static int prime List Override public int hash Code int idx int hash Code Field Schema fs Fields hash Code fs hash Code prime List idx prime List length idx return hash Code Override public String String return Indented String Integer public String pretty Print return Indented String private String Indented String int indent Level String Builder sb new String Builder try stringify Schema sb Data Type indent Level catch Frontend Exception fee throw new Runtime Exception return sb String public static void stringify Schema String Builder sb Schema schema byte type throws Frontend Exception stringify Schema sb schema type used building output string type public static void stringify Schema String Builder sb Schema schema byte type int indent Level throws Frontend Exception type Data Type sb append else type Data Type sb append indent Level schema null boolean First true int schema size First sb append else First false indent sb indent Level Field Schema fs schema get Field fs null continue fs alias null sb append fs alias sb append Data Type Atomic fs type sb append Data Type find Type Name fs type else fs type Data Type fs type Data Type safety net schema fs schema stringify Schema sb fs schema fs type indent Level else throw new Assertion Error Schema refers inner schema else fs type Data Type sb append Data Type find Type Name fs type fs schema null stringify Schema sb fs schema fs type indent Level sb append else sb append Data Type find Type Name fs type indent Level indent sb indent Level type Data Type sb append else type Data Type sb append op indent Level negative br otherwise print newline indent Level spaces private static void indent String Builder sb int indent Level indent Level sb append n indent Level sb append spaces public void add Field Schema f Fields add f null f Field Schemas put f canonical Name f alias null f alias Aliases put f alias f Given alias find associated position field schema param alias alias Field Schema return position Field Schema public int get Position String alias throws Frontend Exception return get Position alias false Given alias find associated position field schema uses get Field Sub Name Match look sub Name matches well param alias alias Field Schema return position Field Schema public int get Position Sub Name String alias throws Frontend Exception return get Position alias true private int get Position String alias boolean Sub Name Match throws Frontend Exception Sub Name Match two Level Access Required happen int err Code String msg two Level Access Required true supported Sub Name Match true throw new Frontend Exception msg err Code Exception two Level Access Required case schema bag one tuple fieldschema turn list fieldschemas alias supplied treated alias tuple schema check indeed one field schema tuple Fields size int err Code String msg Expected bag schema single element type Data Type find Type Name Data Type got bag schema multiple elements throw new Frontend Exception msg err Code Exception Schema Field Schema tuple Fields get tuple type Data Type int err Code String msg Expected bag schema single element type Data Type find Type Name Data Type got element type Data Type find Type Name tuple type throw new Frontend Exception msg err Code Exception check alias supplied tuple disallow since allow access tuple allow access fields tuple alias equals tuple alias int err Code String msg Access tuple alias bag disallowed access elements tuple bag allowed throw new Frontend Exception msg err Code Exception good get position tuple schema return tuple schema get Position alias else Field Schema fs Sub Name Match get Field Sub Name Match alias get Field alias null fs return log debug fs fs int index int Fields size log debug Fields Fields get alias Fields get alias fs Fields get index log debug index index return index return Fields index fs public void add Alias String alias Field Schema fs null alias Aliases put alias fs null fs Field Schemas put fs canonical Name alias public Set String get Aliases return Aliases key Set public void print Aliases Set String alias Names Aliases key Set String alias alias Names log debug Schema Alias alias public List Field Schema get Fields return Fields Recursively compare two schemas check input schema cast cast schema param cast schema cast operator param input schema cast input return true falsew public static boolean castable Schema cast Schema input null castable cast null input null return false otherwise cast null return false input null return false cast size input size return false Iterator Field Schema cast Fields iterator Iterator Field Schema j input Fields iterator Next iterate number fields cast Field Schema cast Fs next Field Schema input Fs j next Compare recursively using field schema Field Schema castable cast Fs input Fs return false return true Recursively compare two schemas equality param schema param param relax Inner true inner schemas checked param relax Alias true aliases checked return true schemas equal false otherwise public static boolean equals Schema schema Schema boolean relax Inner boolean relax Alias null equal schema null null return true otherwise schema null return false null return false Need check bags schemas bags tuples turn schemas Retrieve tuple schema bag two Level Access Required Assuming bags exhibit behavior two Level Access Required used right intentions schema Two Level Access Required Two Level Access Required schema Two Level Access Required try schema schema get Field schema catch Frontend Exception fee return false Two Level Access Required try get Field schema catch Frontend Exception fee return false return Schema equals schema relax Inner relax Alias schema size size return false Iterator Field Schema schema Fields iterator Iterator Field Schema j Fields iterator Next Field Schema Fs next Field Schema Fs j next relax Alias Fs alias null Fs alias null good else Fs alias null Fs alias null return false else Fs alias null Fs alias null return false else Fs alias equals Fs alias return false Fs type Fs type return false relax Inner Compare recursively using field schema Field Schema equals Fs Fs false relax Alias return false return true Merge schema schema param schema merged param Takes Alias Precedence true aliases schema take precedence return merged schema null compatible public Schema merge Schema boolean Takes Alias Precedence return merge Schema Takes Alias Precedence Recursively merge two schemas param schema initial schema param schema merged param Takes Alias Precedence true aliases schema take precedence return merged schema null compatible public static Schema merge Schema Schema schema Schema boolean Takes Alias Precedence try Schema new Schema merge Schema schema Takes Alias Precedence false false return new Schema catch Schema Merge Exception sme mean compatible return null Recursively merge two schemas param schema initial schema param schema merged param Takes Alias Precedence true aliases schema take precedence param allow Different Size Merge allow merging schemas different types param allow Incompatible Types types schemas compatible treated Byte Array untyped schemas schemas compatible allow Incompatible Types true inner schemas output null return merged schema null one schema null allow Incompatible Types true throws Schema Merge Exception merged public static Schema merge Schema Schema schema Schema boolean Takes Alias Precedence boolean allow Different Size Merge boolean allow Incompatible Types throws Schema Merge Exception schema null null null incompatible return null schema null allow Incompatible Types return null else int err Code String msg One schemas null merging schemas Schema schema schema throw new Schema Merge Exception msg err Code Exception null allow Incompatible Types return null else int err Code String msg One schemas null merging schemas Schema schema schema throw new Schema Merge Exception msg err Code Exception schema size size allow Different Size Merge int err Code String msg Different schema sizes merging schemas Schema size schema size schema size size throw new Schema Merge Exception msg err Code Exception List Field Schema output List new Array List Field Schema List Field Schema mylist schema Fields List Field Schema otherlist Fields iterate smaller one size int iterate Limit schema Fields size Fields size Fields size schema Fields size int idx idx iterate Limit idx readability Field Schema Fs mylist get idx Field Schema Fs otherlist get idx byte merged Type Data Type merge Type Fs type Fs type types merged merged Type Data Type treat Incompatible Byte Array true treat bytearray allow Incompatible Types merged Type Data Type otherwise schemas merged else int err Code String msg Incompatible types merging schemas Field schema type Data Type find Type Name Fs type field schema type Data Type find Type Name Fs type throw new Schema Merge Exception msg err Code Exception String merged Alias merge Alias Fs alias Fs alias Takes Alias Precedence Field Schema merged Fs null Data Type Schema Type merged Type normal merge merged Fs new Field Schema merged Alias merged Type else merge inner tuple sides tuples inner schema incompatible allow Incompatible Types true exception thrown merge Schema Schema merged Sub Schema merge Schema Fs schema Fs schema Takes Alias Precedence allow Different Size Merge allow Incompatible Types create merged field merged Sub Schema true allow Incompatible Types try merged Fs new Field Schema merged Alias merged Sub Schema merged Type catch Frontend Exception e int err Code String err Msg Internal Error Unexpected error creating field schema throw new Schema Merge Exception err Msg err Code Exception e output List add merged Fs Handle different schema size allow Different Size Merge first schema leftover append rest int idx mylist size Field Schema fs mylist get non schema types Data Type Schema Type fs type output List add new Field Schema fs alias fs type else Field Schema tmp new Field Schema fs alias fs schema tmp type fs type output List add tmp second schema leftover append rest int idx otherlist size Field Schema fs otherlist get non schema types Data Type Schema Type fs type output List add new Field Schema fs alias fs type else Field Schema tmp new Field Schema fs alias fs schema tmp type fs type output List add tmp Schema result new Schema output List schema Two Level Access Required Two Level Access Required int err Code String err Msg merge schema schema One two Lever Access flag n throw new Schema Merge Exception err Msg err Code Exception schema Two Level Access Required result set Two Level Access Required true return result Merge two aliases one aliases null return Otherwise check precedence condition param alias param param Takes Precedence return private static String merge Alias String alias String boolean Takes Precedence alias null return else null return alias else Takes Precedence return else return alias Merges collection schemas using column aliases unlike merge Schema functions merge using positions Schema merged types incompatible per Data Type merge Type Tuples Bags Sub Schemas equal considered compatible param schemas list schemas merged using column alias return merged schema throws Schema Merge Exception public static Schema merge Schemas Alias Collection Schema schemas throws Schema Merge Exception Schema merged Schema null list schemas currently merged used error message Array List Schema merged Schemas new Array List Schema schemas size Schema sch schemas merged Schema null merged Schema new Schema sch merged Schemas add sch continue try merged Schema merge Schema Alias merged Schema sch merged Schemas add sch catch Schema Merge Exception e String msg Error merging schema sch merged schema merged Schema schemas merged Schemas Schema Merge Exception sme new Schema Merge Exception msg e get Error Code e sme set Marked Show User true throw sme return merged Schema Merges two schemas using column aliases unlike merge Schema functions merge using positions Schema merged types incompatible per Data Type merge Type Tuples Bags Sub Schemas equal considered compatible param schema param schema return Merged Schema throws Schema Merge Exception schemas merged public static Schema merge Schema Alias Schema schema Schema schema throws Schema Merge Exception Schema merged Schema new Schema Hash Set Field Schema schema cols Added new Hash Set Field Schema add merge fields present first schema Field Schema fs schema get Fields check Null Alias fs schema Field Schema fs get Field Sub Name Match Throw Schema Merge Exception schema fs alias fs null schema cols Added contains fs alias corresponds multiple fields schema lookup schema throw appropriate error get Field Sub Name Match Throw Schema Merge Exception schema fs alias schema cols Added add fs Field Schema merged Fs merge Field Schema First Level Alias fs fs merged Schema add merged Fs add schemas nd schema already present merged schema Field Schema fs schema get Fields check Null Alias fs schema schema cols Added contains fs try merged Schema add fs clone catch Clone Supported Exception e throw new Schema Merge Exception Error encountered merging schemas e return merged Schema private static void check Null Alias Field Schema fs Schema schema throws Schema Merge Exception fs alias null throw new Schema Merge Exception Schema field null alias merged using alias Schema schema Schema merged types incompatible per Data Type merge Type Tuples Bags Sub Schemas equal considered compatible Aliases assumed param fs param fs return throws Schema Merge Exception private static Field Schema merge Field Schema First Level Alias Field Schema fs Field Schema fs throws Schema Merge Exception fs null return fs fs null return fs Schema inner Schema null String alias merge Name Spaced Alias fs alias fs alias byte merged Type Data Type merge Type fs type fs type types merged merged Type Data Type int err Code String msg Incompatible types merging schemas Field schema fs field schema fs throw new Schema Merge Exception msg err Code Exception Data Type Schema Type merged Type one bytearray pick inner schema one fs type Data Type inner Schema fs schema else fs type Data Type inner Schema fs schema else case types inner schema bags tuples inner schema equals fs schema fs schema false false int err Code String msg Incompatible types merging inner schemas Field schema type fs field schema type fs throw new Schema Merge Exception msg err Code Exception inner Schema fs schema try return new Field Schema alias inner Schema merged Type catch Frontend Exception e exception expected int err Code throw new Schema Merge Exception Error creating field Schema err Code Exception one aliases form nm str form str returns str param alias param alias return merged alias throws Schema Merge Exception private static String merge Name Spaced Alias String alias String alias throws Schema Merge Exception alias equals alias return alias alias ends alias return alias alias ends alias return alias aliases different alias merged return null Utility function calls schema get Filed alias converts link Frontend Exception link Schema Merge Exception param schema param alias return Field Schema throws Schema Merge Exception private static Field Schema get Field Sub Name Match Throw Schema Merge Exception Schema schema String alias throws Schema Merge Exception Field Schema fs null try fs schema get Field Sub Name Match alias catch Frontend Exception e String msg Caught exception finding Field Schema alias alias throw new Schema Merge Exception msg e get Error Code e return fs param top Level Type Data Type type top level element param inner Types Data Type types inner level element return nested schema representing type top level element first level inner schema representing types inner element public static Schema generate Nested Schema byte top Level Type byte inner Types throws Frontend Exception Schema inner Schema new Schema int inner Types length inner Schema add new Schema Field Schema null inner Types Schema Field Schema outer Schema new Schema Field Schema null inner Schema top Level Type return new Schema outer Schema Recursively prefix merge two schemas param schema merged param Takes Alias Precedence true aliases schema take precedence return prefix merged schema null one schema null allow Incompatible Types true throws Schema Merge Exception merged public Schema merge Prefix Schema Schema boolean Takes Alias Precedence throws Schema Merge Exception return merge Prefix Schema Takes Alias Precedence false Recursively prefix merge two schemas param schema merged param Takes Alias Precedence true aliases schema take precedence param allow Mergeable Types true mergeable types allowed Two types mergeable following conditions true checks either one type null unknown type null unknown result type latter non null unknown type either type bytearray result type possibly non type current type cast type result type type return prefix merged schema null one schema null allow Incompatible Types true throws Schema Merge Exception merged public Schema merge Prefix Schema Schema boolean Takes Alias Precedence boolean allow Mergeable Types throws Schema Merge Exception Schema schema null return schema size size int err Code String msg Schema size mismatch merging schemas schema size greater schema size Schema schema throw new Schema Merge Exception msg err Code Exception List Field Schema output List new Array List Field Schema List Field Schema mylist schema Fields List Field Schema otherlist Fields iterate smaller one size int iterate Limit Fields size int idx idx iterate Limit idx readability Field Schema Fs mylist get idx Field Schema Fs otherlist get idx Field Schema merged Fs Fs merge Prefix Field Schema Fs Takes Alias Precedence allow Mergeable Types output List add merged Fs first schema leftover append rest int idx mylist size Field Schema fs mylist get non schema types Data Type Schema Type fs type output List add new Field Schema fs alias fs type else try Field Schema tmp new Field Schema fs alias fs schema fs type output List add tmp catch Frontend Exception fee int err Code String msg Unable create field schema throw new Schema Merge Exception msg err Code Exception fee Schema new Schema output List set Two Level Access Required two Level Access Required return Recursively set type specifid type schema param schema whose type set param specified type public static void set Schema Default Type Schema byte null return Schema Field Schema fs get Fields Field Schema set Field Schema Default Type fs return two Level Access deprecated two Level Access longer needed Deprecated public boolean Two Level Access Required return two Level Access Required param two Level Access two Level Access set deprecated two Level Access longer needed Deprecated public void set Two Level Access Required boolean two Level Access two Level Access Required two Level Access public static Schema get Schema Resource Schema r Schema throws Frontend Exception r Schema null return null List Field Schema fs List new Array List Field Schema Resource Field Schema rfs r Schema get Fields Field Schema fs new Field Schema rfs get Name rfs get Schema null null get Schema rfs get Schema rfs get Type rfs get Type Data Type fs schema null allow partial schema fs schema size Field Schema inner Fs fs schema get Field inner Fs type Data Type Resource Field Schema throw Invalid Schema Exception else Resource Field Schema throw Invalid Schema Exception fs List add fs return new Schema fs List Look Field Schema instance schema hierarchy given canonical name param canonical Name canonical name return Field Schema instance found public Field Schema find Field Schema String canonical Name Field Schema fs Fields fs canonical Name equals canonical Name return fs fs schema null Field Schema result fs schema find Field Schema canonical Name result null return result return null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical visitor import java util Hash Set import java util Set import org apache Exception import org apache impl logical Layer Frontend Exception import org apache impl plan Plan Validation Exception import org apache newplan Dependency Order Walker import org apache newplan Operator Plan import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Native import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Split Output import org apache newplan logical relational Store import org apache newplan logical relational Stream import org apache newplan logical relational Union import org apache newplan logical relational Logical Relational Nodes Visitor import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema public class Schema Alias Visitor extends Logical Relational Nodes Visitor public Schema Alias Visitor Operator Plan plan throws Frontend Exception super plan new Dependency Order Walker plan logic check duplicate alias schema throws Frontend Exception protected void validate Logical Relational Operator op throws Frontend Exception Logical Schema schema op get Schema Set String seen Aliases new Hash Set String schema null int schema size schema get Field null schema get Field alias null String alias schema get Field alias seen Aliases contains alias int err Code String msg Duplicate schema alias schema get Field alias op get Alias null msg msg op get Alias throw new Plan Validation Exception op msg err Code Exception seen Aliases add alias Override public void visit Store store throws Frontend Exception validate store Override public void visit Filter filter throws Frontend Exception validate filter Override public void visit Join join throws Frontend Exception validate join Override public void visit foreach throws Frontend Exception new Schema Alias Visitor foreach get Inner Plan visit Override public void visit Generate gen throws Frontend Exception validate gen Override public void visit Inner Load load throws Frontend Exception validate load Override public void visit Cogroup group throws Frontend Exception validate group Override public void visit Split split throws Frontend Exception validate split Override public void visit Split Output split Output throws Frontend Exception validate split Output Override public void visit Union union throws Frontend Exception validate union Override public void visit Sort sort throws Frontend Exception validate sort Override public void visit Rank rank throws Frontend Exception validate rank Override public void visit Distinct distinct throws Frontend Exception validate distinct Override public void visit Limit limit throws Frontend Exception validate limit Override public void visit Cross cross throws Frontend Exception validate cross Override public void visit Stream stream throws Frontend Exception validate stream Override public void visit Native native throws Frontend Exception validate native
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical optimizer import java util Collection import java util Hash Set import java util List import java util Set import org apache Exception import org apache impl logical Layer Frontend Exception import org apache impl plan Plan Validation Exception import org apache impl util Multi Map import org apache newplan Dependency Order Walker import org apache newplan Operator Plan import org apache newplan Plan Walker import org apache newplan Reverse Dependency Order Walker import org apache newplan logical expression Expression Visitor import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Cube import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Split Output import org apache newplan logical relational Store import org apache newplan logical relational Stream import org apache newplan logical relational Union import org apache newplan logical relational Logical Relational Nodes Visitor import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema public class Schema Resetter extends Logical Relational Nodes Visitor uid duplicates removed optimizer rule Duplicate Column Rewrite run disable calls boolean skip Duplicate Uid Check true private void visit Collection Logical Expression Plan lexp Plans throws Frontend Exception Logical Expression Plan exp Plan lexp Plans Field Schema Resetter fs Resetter new Field Schema Resetter exp Plan fs Resetter visit public Schema Resetter Operator Plan plan throws Frontend Exception plan false public Schema Resetter Operator Plan plan boolean skip Duplicate Uid Check throws Frontend Exception super plan new Dependency Order Walker plan skip Duplicate Uid Check skip Duplicate Uid Check Override public void visit Load load throws Frontend Exception load reset Schema validate load get Schema Override public void visit Filter filter throws Frontend Exception filter reset Schema Field Schema Resetter fs Resetter new Field Schema Resetter filter get Filter Plan fs Resetter visit validate filter get Schema Override public void visit Store store throws Frontend Exception store reset Schema validate store get Schema Override public void visit Join join throws Frontend Exception join reset Schema visit join get Expression Plan Values validate join get Schema Override public void visit foreach throws Frontend Exception foreach reset Schema Operator Plan inner Plan foreach get Inner Plan Plan Walker new Walker current Walker spawn Child Walker inner Plan push Walker new Walker current Walker walk pop Walker validate foreach get Schema Override public void visit Generate gen throws Frontend Exception gen reset Schema visit gen get Output Plans validate gen get Schema Override public void visit Inner Load load throws Frontend Exception load reset Schema load get Projection reset Field Schema load get Schema Override public void visit Cube lo Cube throws Frontend Exception lo Cube reset Schema visit lo Cube get Expression Plans values validate lo Cube get Schema Override public void visit Cogroup lo Cogroup throws Frontend Exception lo Cogroup reset Schema visit lo Cogroup get Expression Plans values validate lo Cogroup get Schema Override public void visit Split lo Split throws Frontend Exception lo Split reset Schema validate lo Split get Schema Override public void visit Split Output lo Split Output throws Frontend Exception lo Split Output reset Schema Field Schema Resetter fs Resetter new Field Schema Resetter lo Split Output get Filter Plan fs Resetter visit validate lo Split Output get Schema Override public void visit Union lo Union throws Frontend Exception lo Union reset Schema validate lo Union get Schema Override public void visit Sort lo Sort throws Frontend Exception lo Sort reset Schema visit lo Sort get Sort Col Plans validate lo Sort get Schema Override public void visit Rank lo Rank throws Frontend Exception lo Rank reset Schema visit lo Rank get Rank Col Plans validate lo Rank get Schema Override public void visit Distinct lo Distinct throws Frontend Exception lo Distinct reset Schema validate lo Distinct get Schema Override public void visit Limit lo Limit throws Frontend Exception lo Limit reset Schema lo Limit get Limit Plan null Field Schema Resetter fs Resetter new Field Schema Resetter lo Limit get Limit Plan fs Resetter visit validate lo Limit get Schema Override public void visit Cross lo Cross throws Frontend Exception lo Cross reset Schema validate lo Cross get Schema Override public void visit Stream lo Stream throws Frontend Exception lo Stream reset Schema validate lo Stream get Schema Check schema valid ready part final logical plan param schema throws Plan Validation Exception field schema uid skip Duplicate Uid Check true duplicate uids schema public void validate Logical Schema schema throws Plan Validation Exception schema null return Set Long uids Seen new Hash Set Long Logical Field Schema fs schema get Fields skip Duplicate Uid Check check duplicate uid uids Seen add fs uid uid already seen String msg Logical plan invalid state duplicate uid schema schema throw new Plan Validation Exception msg Exception fs uid String msg Logical plan invalid state invalid uid fs uid schema schema throw new Plan Validation Exception msg Exception class Field Schema Resetter extends Expression Visitor protected Field Schema Resetter Operator Plan p throws Frontend Exception super p new Reverse Dependency Order Walker p Override protected void execute Logical Expression op throws Frontend Exception op reset Field Schema op get Field Schema
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import static org apache Configuration import static org apache Constants import java io File import java io File Input Stream import java io File Output Stream import java io Exception import java net Malformed Exception import java net import java net Class Loader import java util Map import java util Set import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache Constants import org apache data Schema Tuple Class Generator Gen Context import org apache data utils Structures Helper Schema Key import org apache data utils Structures Helper Triple import org apache impl Context import org apache impl logical Layer schema Schema import org apache impl util Utils import com google common collect Maps import com google common collect Sets import com google common io Files public class Schema Tuple Backend private static final Log Log Factory get Log Schema Tuple Backend class private Set String files Resolve Sets new Hash Set use Class Loader resolve generated classes simply give directory put compiled class files handle dynamic loading private Class Loader class Loader private Map Triple Schema Key Boolean Gen Context Schema Tuple Factory schema Tuple Factories Triple Maps new Hash Map private Map Integer Schema Tuple Factory schema Tuple Factories Id Maps new Hash Map private Configuration j Conf private File code Dir private boolean Local private boolean abort false information class needs directory generated code resolve classes param j Conf param directory generated code private Schema Tuple Backend Configuration j Conf boolean Local Local String local Code Dir j Conf get Constants local Code Dir null debug local code dir set local mode Aborting code gen resolution abort true return code Dir new File j Conf get Constants else code Dir Files create Temp Dir code Dir delete Exit try class Loader new Class Loader new code Dir catch Malformed Exception e throw new Runtime Exception Unable make Class Loader temp Dir code Dir get Absolute Path j Conf j Conf Local Local method fetches Schema Tuple Factory create Tuples given Schema ignoring aliases appendability Schema Tuple Factory available returns null param schema param true appendable param context Schema Tuple Factory requested return generating Schema Tuple Factory null otherwise private Schema Tuple Factory internal New Schema Tuple Factory Schema boolean Appendable Gen Context context return new Schema Tuple Factory Triple make new Schema Key Appendable context method fetches Schema Tuple Factory generates Schema Tuple registered given identifier Schema Tuple Factory available returns null param identifier return generating schema Tuple Factory null otherwise private Schema Tuple Factory internal New Schema Tuple Factory int id Schema Tuple Factory stf schema Tuple Factories Id get id stf null debug Schema Tuple Factory present given identifier id return stf method fetches Schema Tuple Factory create Tuples given Schema appendability Schema Tuple Factory available returns null param Schema Key appendability pair return generating Schema Tuple Factory null otherwise private Schema Tuple Factory new Schema Tuple Factory Triple Schema Key Boolean Gen Context trip Schema Tuple Factory stf schema Tuple Factories Triple get trip stf null debug Schema Tuple Factory present given Schema Key Boolean Context combination trip return stf method copies generated classes distributed cache local directory seeks resolve cache respective Schema Tuple Factories param configuration param true job local throws Exception private void copy Resolve throws Exception abort debug Nothing resolve backend return Step one see classes distributed cache j Conf get Boolean info Key set generate code return Step two copy everything distributed cache distributed mode Local copy Distributed Cache Step three see file needs resolved name know inner class thus n need instantiated directly File f code Dir list Files String name f get Name split name contains files Resolve add name info Added class list class resolve name Step four actually try resolve classes resolve Classes private void copy Distributed Cache throws Exception String Deserialize j Conf get Constants Deserialize null info classes key Constants copy distributed cache return info Copying files key Constants distributed cache Deserialize String Deserialize split info Attempting read file string symlink distributed cache File src new File File Input Stream fin null File Output Stream fos null try fin new File Input Stream src fos new File Output Stream new File code Dir fin get Channel transfer src length fos get Channel info Successfully copied file local directory finally fin null fin close fos null fos close files copied distributed cache local temp directory attempt resolve files add information Suppress Warnings unchecked private void resolve Classes String files Resolve Schema Tuple Factory info Attempting resolve class Step one simply attempt get class object classloader includes generated code Class clazz try clazz class Loader load Class catch Class Found Exception e throw new Runtime Exception Unable find class e Step three check class Schema Tuple n attempt resolve support code anonymous classes Schema Tuple class Assignable clazz return Class Schema Tuple st Class Class Schema Tuple clazz Step four actually try create Schema Tuple instance Schema Tuple st try st st Class new Instance catch Instantiation Exception e throw new Runtime Exception Error instantiating file e catch Illegal Access Exception e throw new Runtime Exception Error accessing file e Step five get information class boolean Appendable st instanceof Appendable Schema Tuple int id st get Schema Tuple Identifier Schema schema st get Schema Schema Tuple Factory stf new Schema Tuple Factory st Class st get Quick Generator Gen Context context Gen Context values context Gen Context context Generate st Class Schema Tuple Factory debug Context context present class skipping continue Schema Key Schema sans alias appendability uniquely identify Schema Tuple Factory Triple Schema Key Boolean Gen Context trip Triple make new Schema Key schema Appendable context schema Tuple Factories Triple put trip stf Schema Tuple Factory info Successfully resolved class schema schema appendability Appendable context context schema Tuple Factories Id put id stf public static void reset stb null private static Schema Tuple Backend stb public static void initialize Configuration j Conf Context Context throws Exception stb null Schema Tuple Frontend lazy Reset Context initialize j Conf Context get Exec Type Local public static void initialize Configuration j Conf throws Exception initialize j Conf Utils Local j Conf public static void initialize Configuration j Conf boolean Local throws Exception stb null warn Schema Tuple Backend already initialized else Schema Tuple Frontend reset Schema Tuple Backend stb Instance new Schema Tuple Backend j Conf Local stb Instance copy Resolve stb stb Instance public static Schema Tuple Factory new Schema Tuple Factory Schema boolean Appendable Gen Context context stb null possible though ideally avoided called frontend Tuple processing path Plan invoked perhaps optimization purposes throw new Runtime Exception initialize called Even Schema Tuple feature set called return stb internal New Schema Tuple Factory Appendable context protected static Schema Tuple Factory new Schema Tuple Factory int id stb null possible though ideally avoided called frontend Tuple processing path Plan invoked perhaps optimization purposes throw new Runtime Exception initialize called Even Schema Tuple feature set called return stb internal New Schema Tuple Factory id
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import static org apache Configuration import static org apache Constants import static org apache Constants import static org apache Constants import java io File import java io Exception import java net import java net Syntax Exception import java util Map import java util Properties import java util Set import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop filecache Distributed Cache import org apache hadoop fs File System import org apache hadoop fs Path import org apache backend hadoop executionengine map Reduce Layer Configuration import org apache data Schema Tuple Class Generator Gen Context import org apache data utils Structures Helper Pair import org apache data utils Structures Helper Schema Key import org apache impl Context import org apache impl io File Localizer import org apache impl logical Layer schema Schema import com google common collect Maps import com google common collect Sets import com google common io Files class used job creation time provides lets code register Schemas generated necessary register Schemas reducers public class Schema Tuple Frontend private static final Log Log Factory get Log Schema Tuple Frontend class private static Schema Tuple Frontend stf Schemas registered generation held private static Map Pair Schema Key Boolean Pair Integer Set Gen Context schemas Generate Maps new Hash Map private int internal Register Generate Possible Schema udf Schema boolean Appendable Gen Context type Pair Schema Key Boolean key Pair make new Schema Key udf Schema Appendable Pair Integer Set Gen Context pr schemas Generate get key pr null pr get Second add type return pr get First Schema Tuple Factory Generatable udf Schema debug Given Schema generatable udf Schema return int id Schema Tuple Class Generator get Next Global Class Identifier Set Gen Context contexts Sets new Hash Set contexts add Gen Context contexts add type schemas Generate put key Pair make Integer value id contexts debug Registering Appendable Appendable Schema generation udf Schema id id context type return id private Map Pair Schema Key Boolean Pair Integer Set Gen Context get Schemas Generate return schemas Generate private static class Schema Tuple Frontend Gen Helper private File code Dir private Context Context private Configuration conf public Schema Tuple Frontend Gen Helper Context Context Configuration conf code Dir Files create Temp Dir code Dir delete Exit debug Temporary directory generated code created code Dir get Absolute Path Context Context conf conf method copies class files present local temp directory distributed cache copied files symlink name files copied current job run local mode param Context param conf private void internal Copy Generated Distributed Cache info Starting process move generated code distributed cacche Context get Exec Type Local String code Path code Dir get Absolute Path info Distributed cache supported needed local mode Setting key code temp directory code Path conf set code Path return else let us avoid non traditional pipelines String code Path code Dir get Absolute Path conf set code Path Distributed Cache create Symlink conf read using symlinks String Builder serialized new String Builder boolean first true attempt copy every file generated code temp directory File f code Dir list Files first first false else serialized append String symlink f get Name class name also symlink serialized append symlink Path src new Path f Path dst try dst File Localizer get Temporary Path Context catch Exception e throw new Runtime Exception Error getting temporary path e File System fs try fs dst get File System conf catch Exception e throw new Runtime Exception Unable get File System e try fs copy Local File src dst fs set Replication dst short conf get Int Configuration catch Exception e throw new Runtime Exception Unable copy local filesystem src src dst dst e String destination dst String symlink try Distributed Cache add Cache File new destination conf catch Syntax Exception e throw new Runtime Exception Unable add file distributed cache destination e info File successfully added distributed cache symlink String Ser serialized String info Setting key classes deserialize Ser must set key job conf individual jobs know resolve shipped classes conf set Ser sets motion generation registered Schemas code generated temporary directory return true false depending files copy distributed cache private boolean generate Map Pair Schema Key Boolean Pair Integer Set Gen Context schemas Generate boolean files Ship false conf get Boolean info Key false generate code return false info Generating registered Schemas Map Entry Pair Schema Key Boolean Pair Integer Set Gen Context entry schemas Generate entry Set Pair Schema Key Boolean key Pair entry get Key Schema key Pair get First get Pair Integer Set Gen Context value Pair entry get Value Set Gen Context contexts Include Sets new Hash Set boolean Shipping false Gen Context context value Pair get Second context Generate conf info Skipping generation Schema key value context key false else Shipping true contexts Include add context Shipping continue int id value Pair get First boolean Appendable key Pair get Second Schema Tuple Class Generator generate Schema Tuple Appendable id code Dir contexts Include Array new Gen Context files Ship true return files Ship allows frontend backend process repeated testing public static void reset stf null schemas Generate clear method registers Schema generated allows portions code register Schema generation without knowing whether code generation enabled unique passed back used internally refer generated Schema Tuples case serialization deserialization context necessary allow client restrict generated code used param udf Schema Schema Tuple potentially generate param Appendable specifies whether want Schema Tuple appendable param context context users able access Schema Tuple return identifier public static int register Generate Possible Schema udf Schema boolean Appendable Gen Context context stf null Context Reset null Properties prop Context Reset get Properties prop remove prop remove Context Reset null Schema Tuple Backend reset Schema Tuple Class Generator reset Global Class Identifier stf new Schema Tuple Frontend udf Schema null return try udf Schema udf Schema clone catch Clone Supported Exception e throw new Runtime Exception Unable clone Schema udf Schema e strip Aliases udf Schema return stf internal Register Generate Possible udf Schema Appendable context private static void strip Aliases Schema Schema Field Schema fs get Fields fs alias null fs schema null strip Aliases fs schema must called code generated generated code needs shipped cluster may used mappers reducers param Context param conf public static void copy Generated Distributed Cache Context Context Configuration conf stf null debug Nothing registered generate return Schema Tuple Frontend Gen Helper stfgh new Schema Tuple Frontend Gen Helper Context conf stfgh generate stf get Schemas Generate stfgh internal Copy Generated Distributed Cache Properties prop Context get Properties String value conf get value null prop set Property value else prop remove value conf get value null prop set Property value else prop remove private static Context Context Reset null method caches Context object relevant key values set Schema Tuple Backend necessary cases multiple cycles jobs might run Context object may shared want make sure undo changes made protected static void lazy Reset Context Context Context Reset Context
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache scripting import java io Buffered Reader import java io File import java io File Input Stream import java io File Found Exception import java io File Reader import java io Exception import java io Input Stream import java net import java util Array List import java util Collections import java util Hash Map import java util Hash Set import java util List import java util Map import java util Set import java util regex Pattern import org apache hadoop util Shell import org apache backend executionengine Exec Exception import org apache impl Context import org apache impl util Context import org apache tools pigstats Stats Base class various scripting implementations public abstract class Script Engine public static enum Supported Script Lang jruby new String ruby jruby new String rb org apache scripting jruby Jruby Script Engine jython new String python jython new String py org apache scripting jython Jython Script Engine javascript new String new String js org apache scripting js Js Script Engine groovy new String new String groovy org apache scripting groovy Groovy Script Engine streaming python new String streaming python new String org apache scripting streaming python Python Script Engine private static Set String supported Script Langs static supported Script Langs new Hash Set String Supported Script Lang value Supported Script Lang values supported Script Langs add value name supported Script Langs Collections unmodifiable Set supported Script Langs public static boolean contains String supported Script Lang return supported Script Langs contains supported Script Lang private String shebangs private String extensions Class implementing engine string dependencies possibly class path private String engine Class Name private Supported Script Lang String shebangs String extensions String engine Class Name shebangs shebangs extensions extensions engine Class Name engine Class Name discovery mechanisms come also override accepts param file path file param first Line first line file possibly containing public boolean accepts String file String first Line first Line null return false String shebang shebangs Pattern p Pattern compile shebang p matcher first Line matches return true String ext extensions file ends ext return true return false public String get Engine Class Name return engine Class Name private static final Pattern shebang Pattern Pattern compile private static boolean declares Shebang String first Line first Line null return false return shebang Pattern matcher first Line matches open stream load script locally classpath param script Path path script return stream responsibility caller close throws Illegal State Exception could open stream public static Input Stream get Script Stream String script Path protected static Input Stream get Script Stream String script Path Input Stream null File file new File script Path frontend give preference local file backend try jar first Context get Context Frontend file exists try new File Input Stream file catch File Found Exception e throw new Illegal State Exception could find existing file script Path e else Shell script Path char script Path script Path char script Path substring Try system current context classloader Script Engine class get Resource Stream script Path null get Resource Using Class Loader script Path Script Engine class get Class Loader null get Resource Using Class Loader script Path Thread current Thread get Context Class Loader null file Absolute String path script Path Script Engine class get Resource Stream path null get Resource Using Class Loader path Script Engine class get Class Loader null get Resource Using Class Loader path Thread current Thread get Context Class Loader null file exists try new File Input Stream file catch File Found Exception e throw new Illegal State Exception could find existing file script Path e discuss want add logic load script null throw new Illegal State Exception Could initialize interpreter file system classpath script Path return private static Input Stream get Resource Using Class Loader String full Filename Class Loader loader loader null return loader get Resource Stream full Filename return null public static final String param file file inspect return Supported Script Lang supported script language throws Exception error reading file file defines explicitly unknown public static Supported Script Lang get Supported Script Lang String file throws Exception Buffered Reader br new Buffered Reader new File Reader file String first Line try first Line br read Line finally br close Supported Script Lang supported Script Lang Supported Script Lang values supported Script Lang accepts file first Line return supported Script Lang declares Shebang first Line throw new Exception Unsupported script type specified first Line return null private Map String List Stats stats Map new Hash Map String List Stats Registers scripting language functions functions given namespace param path path script param namespace namespace functions param Context pigcontext register functions given namespace throws Exception public abstract void register Functions String path String namespace Context Context throws Exception Actually runs script file method implemented individual script engines param context link Script Context run script file param script File file throws Exception protected abstract Map String List Stats main Context context String script File throws Exception needed general abstraction far Loads script interpreter param script protected abstract void load Input Stream script throws Exception Gets Script Engine classname keyword scripting language protected abstract String get Scripting Lang Returns map local variable names values throws Exception protected abstract Map String Object get Params Variables throws Exception Figures jar location class param clazz class jar file return jar file location null class loaded jar throws File Found Exception public static String get Jar Path Class clazz throws File Found Exception resource clazz get Class Loader get Resource clazz get Canonical Name replace class resource get Protocol equals jar return resource get Path substring resource get Path index resource get Path index throw new File Found Exception Jar clazz get Name class found Gets instance script Engine given scripting language param scripting Lang Script Engine classname keyword scripting Lang return scriptengine given scripting language throws Exception public static Script Engine get Instance String scripting Lang throws Exception String scripting Engine scripting Lang try Supported Script Lang contains scripting Lang Supported Script Lang supported Script Lang Supported Script Lang value scripting Lang scripting Engine supported Script Lang get Engine Class Name return Script Engine Class Name scripting Engine new Instance catch Exception e throw new Exception Could load Script Engine scripting Engine scripting Lang Supported langs Supported Script Lang supported Script Langs e e Runs script file param Context link Context run script file param script File file return collection link Stats objects One runtime instance link script named pipelines map key name pipeline unnamed pipeline map key script id associated instance throws Exec Exception throws Exception public Map String List Stats run Context Context String script File throws Exec Exception Exception Script Context set Context return main Context script File Gets collection link Stats script run protected Map String List Stats get Stats Map return stats Map void set Stats String key Stats stats List Stats lst stats Map get key lst null lst new Array List Stats stats Map put key lst lst add stats void set Stats String key List Stats stats stats Map put key stats
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools pigstats import java io Buffered Reader import java io File import java io File Found Exception import java io File Reader import java io Exception import java util Bit Set import java util Hash Set import java util List import java util Map import java util import java util jar Attributes import java util jar Jar File import java util jar Manifest import org apache commons codec binary Base import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop util Version Info import org apache Configuration import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer Physical Operator Original Location import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer relational Operators Collected Group import org apache backend hadoop executionengine physical Layer relational Operators Demux import org apache backend hadoop executionengine physical Layer relational Operators Distinct import org apache backend hadoop executionengine physical Layer relational Operators Join import org apache backend hadoop executionengine physical Layer relational Operators Filter import org apache backend hadoop executionengine physical Layer relational Operators import org apache backend hadoop executionengine physical Layer relational Operators Limit import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Local Rearrange import org apache backend hadoop executionengine physical Layer relational Operators Merge Cogroup import org apache backend hadoop executionengine physical Layer relational Operators Merge Join import org apache backend hadoop executionengine physical Layer relational Operators Partial Agg import org apache backend hadoop executionengine physical Layer relational Operators Skewed Join import org apache backend hadoop executionengine physical Layer relational Operators Sort import org apache backend hadoop executionengine physical Layer relational Operators Split import org apache backend hadoop executionengine physical Layer relational Operators Stream import org apache backend hadoop executionengine physical Layer relational Operators Union import org apache impl Context import org apache impl logical Layer Frontend Exception import org apache impl plan Depth First Walker import org apache impl plan Operator Plan import org apache impl plan Visitor Exception import org apache impl util Jar Manager import org apache impl util Object Serializer import org apache newplan logical relational Cogroup import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Join import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Native import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Stream import org apache newplan logical relational Union import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Nodes Visitor import org apache tools pigstats mapreduce Script State import com google common collect Lists Script States encapsulates settings script runs hadoop cluster settings added jobs spawned script turn persisted hadoop job xml properties already job xml users want know relations script jobs derive job xmls public abstract class Script State Keys settings added Jobs protected enum script id script command line hadoop version version input dirs map output dirs reduce output dirs parent jobid job feature script features alias alias location private String display Str private String display Str Override public String String return display Str Features used script public static enum private static final Log Log Factory get Log Script State class thread copy Script State initialize Script State new threads Script State parent thread using Inheritable Thread Local Used eg running separate thread private static Inheritable Thread Local Script State tss new Inheritable Thread Local Script State protected String id protected String serialized Script protected String truncated Script protected String command Line protected String file Name protected String Version protected String hadoop Version protected long script Features protected Context Context protected List Progress Notification Listener listeners Lists new Array List protected Script State String id id id serialized Script truncated Script public static Script State get return tss get public static Script State start Script State state tss set state return tss get deprecated use link org apache tools pigstats Script State start Script State instead Deprecated public static Script State start String command Line Context Context Script State ss new Script State random String ss set Command Line command Line ss set Context Context tss set ss return ss public void register Listener Progress Notification Listener listener listeners add listener public List Progress Notification Listener get Listeners return listeners public void emit Initial Plan Notification Operator Plan plan Progress Notification Listener listener listeners try listener initial Plan Notification id plan catch Method Error e warn Progress Notification Listener implementation n implement initial Plan Notification method listener get Class get Name e public void emit Launch Started Notification int num Jobs Launch Progress Notification Listener listener listeners listener launch Started Notification id num Jobs Launch public void emit Jobs Submitted Notification int num Jobs Submitted Progress Notification Listener listener listeners listener jobs Submitted Notification id num Jobs Submitted public void emit Job Started Notification String assigned Job Id Progress Notification Listener listener listeners listener job Started Notification id assigned Job Id public void emitjob Finished Notification Job Stats job Stats Progress Notification Listener listener listeners listener job Finished Notification id job Stats public void emit Job Failed Notification Job Stats job Stats Progress Notification Listener listener listeners listener job Failed Notification id job Stats public void emit Output Completed Notification Output Stats output Stats Progress Notification Listener listener listeners listener output Completed Notification id output Stats public void emit Progress Updated Notification int progress Progress Notification Listener listener listeners listener progress Updated Notification id progress public void emit Launch Completed Notification int num Jobs Succeeded Progress Notification Listener listener listeners listener launch Completed Notification id num Jobs Succeeded public void set Script File file throws Exception Buffered Reader reader null try reader new Buffered Reader new File Reader file set Script reader catch File Found Exception e warn unable find file e finally reader null try reader close catch Exception ignored public void set Script String script throws Exception script null return Retain truncated script set Truncated Script script Serialize encode string serialized Script Object Serializer serialize script private void set Truncated Script String script restrict size script stored job conf int max Script Size Context null String prop Context get Properties get Property Configuration prop null max Script Size Integer value prop truncated Script script length max Script Size script substring max Script Size script public void set Script Features Logical Plan plan Bit Set bs new Bit Set try new Logical Plan Feature Visitor plan bs visit catch Frontend Exception e warn unable get script feature e script Features bit Set Long bs info features used script feature Long String script Features public String get Hadoop Version hadoop Version null hadoop Version Version Info get Version return hadoop Version null hadoop Version public String get Version Version null String find Containing Jar Jar Manager find Containing Jar Script State class find Containing Jar null try Jar File jar new Jar File find Containing Jar final Manifest manifest jar get Manifest final Map String Attributes attrs manifest get Entries Attributes attr attrs get org apache Version attr get Value Implementation Version catch Exception e warn unable read pigs manifest file else warn unable read pigs manifest file running jar return Version null Version public String get File Name return file Name null file Name public void set File Name String file Name file Name file Name public String get Id return id public void set Command Line String command Line command Line new String Base encode Base command Line get Bytes public String get Command Line return command Line null command Line public String get Serialized Script return serialized Script null serialized Script public String get Script return truncated Script null truncated Script protected void set Script Buffered Reader reader throws Exception String Builder sb new String Builder try String line reader read Line line null sb append line append n line reader read Line catch Exception e warn unable parse script e set Script sb String protected long bit Set Long Bit Set bs long ret int bs next Set Bit bs next Set Bit ret return ret protected String feature Long String long l l return name String Builder sb new String Builder int values length l x sb length sb append sb append values name return sb String public void set Context Context Context Context Context public Context get Context return Context public String get Script Features return feature Long String script Features static class Logical Plan Feature Visitor extends Logical Relational Nodes Visitor private Bit Set feature protected Logical Plan Feature Visitor Logical Plan plan Bit Set feature throws Frontend Exception super plan new org apache newplan Depth First Walker plan feature feature Override public void visit Cogroup op op get Group Type feature set ordinal else op get Group Type feature set ordinal else op get Group Type op get Expression Plans size feature set ordinal else feature set ordinal Override public void visit Cross op feature set ordinal Override public void visit Distinct op feature set ordinal Override public void visit Filter op feature set ordinal Override public void visit op Override public void visit Join op op get Join Type feature set ordinal else op get Join Type feature set ordinal feature set ordinal feature set ordinal else op get Join Type feature set ordinal else op get Join Type feature set ordinal else op get Join Type feature set ordinal else op get Join Type feature set ordinal Override public void visit Limit op feature set ordinal Override public void visit Rank op feature set ordinal Override public void visit Sort op feature set ordinal Override public void visit Stream op feature set ordinal Override public void visit Split op Override public void visit Union op feature set ordinal Override public void visit Native n feature set ordinal protected static class Feature Visitor extends Phy Plan Visitor private Bit Set feature public Feature Visitor Physical Plan plan Bit Set feature super plan new Depth First Walker Physical Operator Physical Plan plan feature feature Override public void visit Join Join join throws Visitor Exception feature set ordinal Override public void visit Merge Join Merge Join join throws Visitor Exception join get Join Type Join feature set ordinal else feature set ordinal Override public void visit Merge Co Group Merge Cogroup merge Co Grp throws Visitor Exception feature set ordinal Override public void visit Collected Group Collected Group mg throws Visitor Exception feature set ordinal Override public void visit Distinct Distinct distinct throws Visitor Exception feature set ordinal Override public void visit Stream Stream stream throws Visitor Exception feature set ordinal Override public void visit Split Split split throws Visitor Exception feature set ordinal Override public void visit Demux Demux demux throws Visitor Exception feature set ordinal Override public void visit Partial Agg Partial Agg part Agg feature set ordinal protected static class Alias Visitor extends Phy Plan Visitor private Hash Set String alias Set private List String alias private final List String alias Location public Alias Visitor Physical Plan plan List String alias List String alias Location super plan new Depth First Walker Physical Operator Physical Plan plan alias alias alias Location alias Location alias Set new Hash Set String alias Empty String alias alias Set add Override public void visit Load Load load throws Visitor Exception set Alias load super visit Load load Override public void visit Join Join join throws Visitor Exception set Alias join super visit Join join Override public void visit Merge Join Merge Join join throws Visitor Exception set Alias join super visit Merge Join join Override public void visit Merge Co Group Merge Cogroup merge Co Grp throws Visitor Exception set Alias merge Co Grp super visit Merge Co Group merge Co Grp Override public void visit Collected Group Collected Group mg throws Visitor Exception set Alias mg super visit Collected Group mg Override public void visit Distinct Distinct distinct throws Visitor Exception set Alias distinct super visit Distinct distinct Override public void visit Stream Stream stream throws Visitor Exception set Alias stream super visit Stream stream Override public void visit Filter Filter fl throws Visitor Exception set Alias fl super visit Filter fl Override public void visit Local Rearrange Local Rearrange lr throws Visitor Exception set Alias lr super visit Local Rearrange lr Override public void visit nfe throws Visitor Exception set Alias nfe super visit nfe Override public void visit Union Union un throws Visitor Exception set Alias un super visit Union un Override public void visit Sort Sort sort throws Visitor Exception set Alias sort super visit Sort sort Override public void visit Limit Limit lim throws Visitor Exception set Alias lim super visit Limit lim Override public void visit Skewed Join Skewed Join sk throws Visitor Exception set Alias sk super visit Skewed Join sk private void set Alias Physical Operator op String op get Alias null alias Set contains alias add alias Set add List Original Location original Locations op get Original Locations Original Location original Location original Locations alias Location add original Location String
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache tools pigstats mapreduce import java text Simple Date Format import java util Date import java util Hash Map import java util Hash Set import java util Iterator import java util List import java util Map import java util Set import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop mapred Job Client import org apache hadoop mapred Job import org apache hadoop mapred jobcontrol Job import org apache Exec Type import org apache Runner Return Code import org apache backend hadoop executionengine map Reduce Layer Job Control Compiler import org apache backend hadoop executionengine map Reduce Layer Map Reduce Oper import org apache backend hadoop executionengine map Reduce Layer Native Map Reduce Oper import org apache backend hadoop executionengine map Reduce Layer plans Op Plan Visitor import org apache backend hadoop executionengine map Reduce Layer plans Oper Plan import org apache impl Context import org apache impl plan Dependency Order Walker import org apache impl plan Visitor Exception import org apache tools pigstats Input Stats import org apache tools pigstats mapreduce Job Stats import org apache tools pigstats Output Stats import org apache tools pigstats Stats import org apache tools pigstats Job Stats Simple Stats encapsulates statistics collected running script includes status execution jobs well information outputs inputs script public final class Simple Stats extends Stats private static final Log Log Factory get Log Simple Stats class private Job Client job Client private Job Control Compiler jcc private Map Job Map Reduce Oper job Mro Map private Map Map Reduce Oper Job Stats mro Job Map successful jobs far private Set Job job Seen new Hash Set Job class builds job plan private class Job Graph Builder extends Op Plan Visitor public Job Graph Builder Oper Plan plan super plan new Dependency Order Walker Map Reduce Oper Oper Plan plan job Plan new Job Graph mro Job Map new Hash Map Map Reduce Oper Job Stats Override public void visit Op Map Reduce Oper mr throws Visitor Exception Job Stats js new Job Stats mr get Operator Key String job Plan job Plan add js List Map Reduce Oper preds get Plan get Predecessors mr preds null Map Reduce Oper pred preds Job Stats jpred mro Job Map get pred job Plan Connected jpred js job Plan connect jpred js mro Job Map put mr js Override public List String get Error Messages throw new Unsupported Operation Exception Override public Map String List Stats get Stats throw new Unsupported Operation Exception Override public boolean Embedded return false Override public long get Spill Count Iterator Job Stats job Plan iterator long ret Next ret Job Stats next get Spill Count return ret Override public long get Proactive Spill Count Objects Iterator Job Stats job Plan iterator long ret Next ret Job Stats next get Proactive Spill Count Objects return ret Override public long get Proactive Spill Count Records Iterator Job Stats job Plan iterator long ret Next ret Job Stats next get Proactive Spill Count Recs return ret public Simple Stats job Mro Map new Hash Map Job Map Reduce Oper job Plan new Job Graph void initialize Context Context Job Client job Client Job Control Compiler jcc Oper Plan mr Plan super start Context null job Client null jcc null warn invalid params Context job Client jcc return Context Context job Client job Client jcc jcc build job job ids assigned null try new Job Graph Builder mr Plan visit catch Visitor Exception e warn unable build job plan e void finish super stop boolean Initialized return start Time Deprecated Override public Job Client get Job Client return job Client Job Control Compiler get Job Control Compiler return jcc Job Stats add Job Stats Job job Map Reduce Oper mro job Mro Map get job mro null warn unable get oper job job String return null Job Stats js mro Job Map get mro Job job Id job get Assigned Job js set Id job Id js set Alias mro js set Conf job get Job Conf return js Job Stats add Job Stats Native Native Map Reduce Oper mr Job Stats js mro Job Map get mr js set Id new Job mr get Job Id Native Map Reduce Oper get Job Number js set Alias mr return js void display info get Display String Override public String get Display String return Code Return Code warn unknown return code ca n display results return Context null warn unknown exec type n display results return Simple Date Format sdf new Simple Date Format String Builder sb new String Builder sb append n Hadoop Version Version User Id Started Finished Features n sb append get Hadoop Version append append get Version append append user Id append append sdf format new Date start Time append append sdf format new Date end Time append append get Features append n sb append n return Code Return Code sb append Success n else return Code Return Code sb append jobs failed Stop running dependent jobs n else sb append Failed n sb append n return Code Return Code return Code Return Code sb append Job Stats time seconds n sb append Job Stats append n List Job Stats arr job Plan get Successful Jobs Job Stats js arr sb append js get Display String sb append n return Code Return Code return Code Return Code sb append Failed Jobs n sb append Job Stats append n List Job Stats arr job Plan get Failed Jobs Job Stats js arr sb append js get Display String sb append n sb append Input n Input Stats get Input Stats sb append get Display String sb append n sb append Output n Output Stats ds get Output Stats sb append ds get Display String sb append n Counters n sb append Total records written get Record Written append n sb append Total bytes written get Bytes Written append n sb append Spillable Memory Manager spill count get Spill Count append n sb append Total bags proactively spilled get Proactive Spill Count Objects append n sb append Total records proactively spilled get Proactive Spill Count Records append n sb append n Job n append job Plan String return Script Statistics n sb String void map Oper Job Map Reduce Oper mro Job job mro null warn null operator else Job Stats js mro Job Map get mro js null warn null job stats mro mro get Operator Key else job Mro Map put job mro boolean Job Seen Job job return job Seen add job
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Array List import java util List import org apache Eval Func import org apache Func Spec import org apache Exception import org apache backend executionengine Exec Exception import org apache data Data Byte Array import org apache data Data Type import org apache data Tuple import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema Generates size argument passed bytearrays means number bytes charrays number characters bags number tuples tuples number fields maps number keyvalue pairs types value always returned public class extends Eval Func Long Override public Long exec Tuple input throws Exception try Data Byte Array dba Data Byte Array input get return dba null null Long value dba size catch Exec Exception exp throw exp catch Exception e int err Code String msg Error computing size get Class get Simple Name throw new Exec Exception msg err Code Exception e Override public Schema output Schema Schema input return new Schema new Schema Field Schema null Data Type non Javadoc see org apache Eval Func get Arg Func Mapping Override public List Func Spec get Arg Func Mapping throws Frontend Exception List Func Spec func List new Array List Func Spec Schema new Schema add new Schema Field Schema null Data Type func List add new Func Spec get Class get Name new Schema add new Schema Field Schema null Data Type func List add new Func Spec String Size class get Name new Schema add new Schema Field Schema null Data Type func List add new Func Spec Tuple Size class get Name new Schema add new Schema Field Schema null Data Type func List add new Func Spec Bag Size class get Name new Schema add new Schema Field Schema null Data Type func List add new Func Spec Map Size class get Name new Schema add new Schema Field Schema null Data Type func List add new Func Spec Constant Size class get Name new Schema add new Schema Field Schema null Data Type func List add new Func Spec Constant Size class get Name new Schema add new Schema Field Schema null Data Type func List add new Func Spec Constant Size class get Name new Schema add new Schema Field Schema null Data Type func List add new Func Spec Constant Size class get Name return func List Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java io Buffered Input Stream import java io Data Input Stream import java io Data Output Stream import java io Exception import java io File import java io File Input Stream import java io File Found Exception import java io Exception import java util Array List import java util Collections import java util Comparator import java util Iterator import java util Linked List import java util List Iterator import java util Priority Queue import org apache commons logging Log import org apache commons logging Log Factory import org apache Counters import org apache Warning ordered collection Tuples possibly multiples Data stored unsorted comes sorted time dump file first iterator requested Experementation found faster storing sorted begin allow user defined comparator provide default comparator cases user n specify one public class Sorted Data Bag extends Default Abstract Bag private static final long serial Version private static final Inter Sedes Inter Sedes Factory get Inter Sedes Instance private static final Log log Log Factory get Log Sorted Data Bag class transient private Comparator Tuple Comp private boolean Read Started false private static class Default Comparator implements Comparator Tuple Override Suppress Warnings unchecked public int compare Tuple Tuple return compare Override public boolean equals Object return false Override public int hash Code return param comp Comparator use sorting null Default Comparator used public Sorted Data Bag Comparator Tuple comp Comp comp null new Default Comparator comp Contents new Array List Tuple Override public boolean Sorted return true Override public boolean Distinct return false Override public Iterator Tuple iterator return new Sorted Data Bag Iterator Override public long spill Make sure something spill n create empty files make mess Contents size return Lock container spill iterators n trying read mucking container long spilled synchronized Contents Data Output Stream null try get Spill File catch Exception ioe remove last file spilled array added File create Tmp File threw Exception warn Unable create tmp file spill disk Warning ioe return try sort data dump bogus lock way around reads alread started already sorted reason n set Read Started could still add phase case unsorted added later Read Started Collections sort Array List Tuple Contents Comp Iterator Tuple Contents iterator Next write Datum next Data Type spilled spill every records spilled x fff report Progress flush close null Contents clear catch Throwable e Remove last file spilled array since failed write Spill Files remove Spill Files size warn Unable spill contents disk Warning e return finally null try close catch Exception e warn Error closing spill Warning e Increment spill count inc Spill Count Counters return spilled iterator handles getting next tuple bag iterator couple issues deal First data stored combination memory disk Second bag may asked spill iterator reading means pointing someplace memory suddenly need switch disk file private class Sorted Data Bag Iterator implements Iterator Tuple container hold tuples priority queue Stores file number tuple came tuple read queue know file read replacement tuple private class Container implements Comparable Container public Tuple tuple public int file Num Override public int compare Container return Comp compare tuple tuple Override public boolean equals Object instanceof Container return tuple equals Container tuple else return false Override public int hash Code return tuple hash Code buffer tuple easy way next tell whether another tuple available read private Tuple Buf null private int Memory Ptr private Priority Queue Container Merge null private Array List Data Input Stream Streams null private int Cntr Sorted Data Bag Iterator first read need sort data synchronized Contents Read Started pre Merge Collections sort Array List Tuple Contents Comp Read Started true Override public boolean Next See find tuple buffer Buf next return Buf null Override public Tuple next report progress every times next much faster using mod Cntr x ff report Progress one buffer use one Buf null Tuple Buf Buf null return Check see need read memory boolean spilled false synchronized Contents Spill Files null Spill Files size return read Memory Check see reading memory spilled Memory Ptr Contents size spilled true spilled Data Input Stream need open new file fast forward past tuples already read need place first tuple file priority queue Whatever tuples memory already queue fine guaranteed ahead point fast foward guaranteed file want read fast forward last element Spill Files n support calls add calls iterator spill wo n create empty files try new Data Input Stream new Buffered Input Stream new File Input Stream Spill Files get Spill Files size Streams null n files spill Merge new Priority Queue Container Streams new Array List Data Input Stream Streams add catch File Found Exception fnfe ca n find spill file never happen String msg Unable find spill file log fatal msg fnfe throw new Runtime Exception msg fnfe Fast foward past tuples already put queue int Memory Ptr try read Datum catch Exception eof never happen means n dump tuples disk String msg Ran tuples read prematurely log fatal msg eof throw new Runtime Exception msg eof catch Exception ioe String msg Unable find spill file log fatal msg ioe throw new Runtime Exception msg ioe Memory Ptr Add next tuple file queue add Queue null Spill Files size Fall read next entry priority queue spill files need read next tuple one files memory return read Priority implemented Override public void remove private Tuple read Priority Merge null First read need set queue array file streams Add one size list memory Merge new Priority Queue Container Spill Files size Add one size case spill later Streams new Array List Data Input Stream Spill Files size Iterator File Spill Files iterator Next try Data Input Stream new Data Input Stream new Buffered Input Stream new File Input Stream next Streams add Add first tuple file merge queue add Queue null Streams size catch File Found Exception fnfe ca n find spill file never happen String msg Unable find spill file log fatal msg fnfe throw new Runtime Exception msg fnfe Prime one memory Contents size add Queue null Pop top one queue Container c Merge poll c null return null Add next tuple whereever read queue Buffer tuple returning reusing c Tuple c tuple add Queue c c file Num return private void add Queue Container c int file Num c null c new Container c file Num file Num file Num Need read memory may spilled since tuple put queue hence memory might empty n care wo n add memory synchronized Contents c tuple read Memory c tuple null Merge add c return Read next tuple indicated file Data Input Stream Streams get file Num null still data file try c tuple Tuple read Datum Merge add c catch Exception eof tuples file Set slot array null n keep trying read file try close catch Exception e log warn Failed close spill file e Streams set file Num null catch Exception ioe String msg Unable find spill file log fatal msg ioe throw new Runtime Exception msg ioe Function assumes reader lock already held enter function private Tuple read Memory Contents size return null Memory Ptr Contents size return Array List Tuple Contents get Memory Ptr else return null Pre merge many spill files avoids issue large fan merge Experimentation hadoop team shown optimal number spill files function modifies Spill Files array assumes write lock already held unlock Tuples reconstituted tuples evaluated rewritten tuples expensive need order use sort spec provided private void pre Merge Spill Files null Spill Files size return max spill files gather max spill files together merge one file remove others Spill Files new spill files attached end list keep going get small enough number without much concern uneven size merges Convert Spill Files linked list since removing pieces middle want efficiently try Linked List File new Linked List File Spill Files Linked List File files Delete new Linked List File size List Iterator File list Iterator Streams new Array List Data Input Stream Merge new Priority Queue Container int j j j try File f next Data Input Stream new Data Input Stream new Buffered Input Stream new File Input Stream f Streams add add Queue null Streams size remove files Delete add f catch File Found Exception fnfe ca n find spill file neer happen String msg Unable find spill file log fatal msg fnfe throw new Runtime Exception msg fnfe Get new spill file adds one end spill files list need append linked list well still move linked list back spill files Data Output Stream null try get Spill File add Spill Files get Spill Files size Tuple read Priority null write flush catch Exception ioe String msg Unable find spill file log fatal msg ioe throw new Runtime Exception msg ioe finally try close catch Exception e warn Error closing spill Warning e delete files merged new files File f files Delete f delete false log warn Failed delete spill file f get Path clear list finalize delete files Spill Files assigned new value Spill Files clear move new list back spill files array Spill Files new File List finally Reset Streams Merge allocated properly regular merging Streams null Merge null
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import java io Serializable import java util Array List import java util List import org apache classification Interface Audience import org apache classification Interface Stability import org apache impl util Utils Class communicate sort column information based order statment sort columns schema Interface Audience Private Interface Stability Unstable public class Sort Info implements Serializable private static final long serial Version boolean Globally Sorted true default List Sort Col Info sort Col Info List param sort Col Info List list sort Col Info one field data public Sort Info List Sort Col Info sort Col Info List sort Col Info List sort Col Info List return sort Col Info List list sort Col Info data public List Sort Col Info get Sort Col Info List return new Array List Sort Col Info sort Col Info List non Javadoc see java lang Object hash Code Override public int hash Code final int prime int result result prime result sort Col Info List null sort Col Info List hash Code result prime result Globally Sorted return result return Globally Sorted true data globally sorted false sorted within part file public boolean Globally Sorted return Globally Sorted non Javadoc see java lang Object equals java lang Object Override public boolean equals Object obj Utils check Null Class obj return false Sort Info Sort Info obj return Globally Sorted Globally Sorted Utils check Null Equals sort Col Info List sort Col Info List true non Javadoc see java lang Object String Override public String String return Global Sort Globally Sorted sort column info list sort Col Info List
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin mock import static org apache hadoop mapreduce lib output File Output Format get Unique File import java io Data Input import java io Data Output import java io Exception import java io Serializable import java util Array List import java util Arrays import java util Collection import java util Hash Map import java util Iterator import java util List import java util Map import java util Map Entry import java util Properties import java util Set import java util Tree Map import org apache hadoop fs Path import org apache hadoop io Writable import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Input Split import org apache hadoop mapreduce Job import org apache hadoop mapreduce Job Context import org apache hadoop mapreduce Output Committer import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce Record Writer import org apache hadoop mapreduce Task Attempt Context import org apache log j Logger import org apache Expression import org apache Load Caster import org apache Load Func import org apache Load Metadata import org apache Server import org apache Resource Schema import org apache Resource Statistics import org apache Store Func Interface import org apache Store Metadata import org apache backend hadoop executionengine map Reduce Layer Split import org apache data Data Bag import org apache data Non Spillable Data Bag import org apache data Tuple import org apache data Tuple Factory import org apache impl Context import org apache impl logical Layer schema Schema import org apache impl util Utils import org apache parser Parser Exception convenient mock Storage unit tests pre Server Server new Server Exec Type Data data reset Data Server data set foo tuple tuple b tuple c tuple map e f g tuple bag tuple h tuple Server register Query foo mock Storage Server register Query bar mock Storage List Tuple data get bar assert Equals tuple get assert Equals tuple b get assert Equals tuple c get assert Equals tuple map f g e get assert Equals tuple bag tuple h tuple get pre Schema pre Server Server new Server Exec Type Data data reset Data Server data set foo blah chararray tuple tuple b tuple c Server register Query foo mock Storage Server register Query blah blah b Server register Query bar mock Storage assert Equals schema chararray b chararray data get Schema bar List Tuple data get bar assert Equals tuple get assert Equals tuple b b get assert Equals tuple c c get pre public class Storage extends Load Func implements Store Func Interface Load Metadata Store Metadata private static final String mock storage id private static final Logger Logger get Logger Storage class private static Map Integer Data id Data new Hash Map Integer Data private static Tuple Factory Tuple Factory get Instance private static int next Id param objects return tuple containing provided objects public static Tuple tuple Object objects return new Tuple Arrays List objects param tuples return bag containing provided objects public static Data Bag bag Tuple tuples return new Non Spillable Data Bag Arrays List tuples param input params alternating key value number params even Implementation similar map generates map return map containing provided objects public static Map String Object map Object input input null input length return null try Map String Object output new Hash Map String Object int input length String key String input Object val input output put key val return output catch Class Cast Exception e throw new Illegal Argument Exception Map key must String catch Array Index Bounds Exception e throw new Illegal Argument Exception Function input must even number parameters catch Exception e throw new Runtime Exception Error creating map e param schema return schema represented string throws Parser Exception schema invalid public static Schema schema String schema throws Parser Exception return Utils get Schema String schema reset store get Data object access param Server return Data public static Data reset Data Server Server return reset Data Server get Context reset store get Data object access param context return data Data public static Data reset Data Context context Properties properties context get Properties cleaning previous data try properties contains Integer previous Id new Integer properties get Property id Data remove previous Id catch Runtime Exception e warn invalid id context properties e setting new Store int id next Id properties set Property String value id Data data new Data id Data put id data return data private Data get Data Job job throws Exception String string Id job get Configuration get string Id null throw new Exception Data prepared Script need call Storage reset Data Server get Context first Data data id Data get new Integer string Id data null throw new Exception Data anymore Script data reset another Storage reset Data Server get Context return data private static class Parts final String location Tree Map read part files order final Map String Collection Tuple parts new Tree Map String Collection Tuple public Parts String location super location location public void set String part File Collection Tuple data parts put part File data null throw new Runtime Exception part part File location location already exists public List Tuple get List Tuple new Array List Tuple Set Entry String Collection Tuple entry Set parts entry Set Entry String Collection Tuple entry entry Set add entry get Value return isolated data store avoid side effects public static class Data implements Serializable private static final long serial Version private Map String Parts location Data new Hash Map String Parts private Map String Schema location Schema new Hash Map String Schema set data location known schema param location store tuples param schema schema data param data tuples store throws Parser Exception schema invalid public void set String location String schema Collection Tuple data throws Parser Exception set location Utils get Schema String schema data set data location known schema param location store tuples param schema param data tuples store throws Parser Exception schema invalid public void set String location String schema Tuple data throws Parser Exception set location Utils get Schema String schema Arrays List data set data location known schema param location store tuples param schema param data tuples store public void set String location Schema schema Collection Tuple data set location data location Schema put location schema null throw new Runtime Exception schema already set location location set data location known schema param location store tuples param schema param data tuples store public void set String location Schema schema Tuple data set location schema Arrays List data set data location param location store tuples param data tuples store private void set Internal String location String part Collection Tuple data Parts parts location Data get location part null parts null part mock else throw new Runtime Exception set location location twice parts null parts new Parts location location Data put location parts parts set part data set data location param location store tuples param data tuples store public void set String location Collection Tuple data set Internal location null data set data location param location store tuples param data tuples store public void set String location Tuple data set location Arrays List data param location return data location public List Tuple get String location location Data contains Key location throw new Runtime Exception data location location return location Data get location get param location return schema stored location public Schema get Schema String location return location Schema get location set schema given location param location param schema public void set Schema String location Schema schema location Schema put location schema private String location private Data data private Schema schema private Iterator Tuple data Read private Mock Record Writer mock Record Writer private void init String location Job job throws Exception data get Data job location location schema data get Schema location Load Func Override public String relative Absolute Path String location Path cur Dir throws Exception location location return location Override public void set Location String location Job job throws Exception init location job data Read data get location iterator Override public Input Format get Input Format throws Exception return new Mock Input Format location Override public Load Caster get Load Caster throws Exception return super get Load Caster Override public void prepare Read Suppress Warnings rawtypes Record Reader reader Split split throws Exception Override public Tuple get Next throws Exception data Read null throw new Exception data correctly initialized Mock Loader return data Read Next data Read next null Override public void set Context Signature String signature super set Context Signature signature Load Meta Data Override public Resource Schema get Schema String location Job job throws Exception init location job return schema null null new Resource Schema schema Override public Resource Statistics get Statistics String location Job job throws Exception init location job return null Override public String get Partition Keys String location Job job throws Exception init location job return null Override public void set Partition Filter Expression partition Filter throws Exception Store Func Override public String rel Abs Path Store Location String location Path cur Dir throws Exception location location return location Override public Output Format get Output Format throws Exception return new Mock Output Format Override public void set Store Location String location Job job throws Exception init location job Override public void check Schema Resource Schema throws Exception Override public void prepare Write Suppress Warnings rawtypes Record Writer writer throws Exception mock Record Writer Mock Record Writer writer data set Internal location mock Record Writer part mock Record Writer data Written Override public void put Next Tuple throws Exception mock Record Writer data Written add new Tuple get Override public void set Store Func Context Signature String signature Override public void cleanup Failure String location Job job throws Exception init location job Override public void cleanup Success String location Job job throws Exception init location job Store Meta Data Override public void store Statistics Resource Statistics stats String location Job job throws Exception init location job Override public void store Schema Resource Schema schema String location Job job throws Exception init location job data set Schema location Schema get Schema schema Mocks Load Func private static class Mock Record Reader extends Record Reader Object Object Override public void close throws Exception Override public Object get Current Key throws Exception Interrupted Exception return mock Key Override public Object get Current Value throws Exception Interrupted Exception return mock Value Override public float get Progress throws Exception Interrupted Exception return f Override public void initialize Input Split split Task Attempt Context arg throws Exception Interrupted Exception Override public boolean next Key Value throws Exception Interrupted Exception return true private static class Mock Input Split extends Input Split implements Writable private String location used reflection Hadoop Suppress Warnings unused public Mock Input Split public Mock Input Split String location location location Override public String get Locations throws Exception Interrupted Exception return new String location Override public long get Length throws Exception Interrupted Exception return Override public boolean equals Object arg return arg Override public int hash Code return location hash Code Override public void read Fields Data Input arg throws Exception location arg read Override public void write Data Output arg throws Exception arg write location private static class Mock Input Format extends Input Format Object Object private final String location public Mock Input Format String location location location Override public Record Reader Object Object create Record Reader Input Split arg Task Attempt Context arg throws Exception Interrupted Exception return new Mock Record Reader Override public List Input Split get Splits Job Context job Context throws Exception Interrupted Exception return Arrays Input Split List new Mock Input Split location mocks Store Func private static final class Mock Record Writer extends Record Writer Object Object private final List Tuple data Written new Array List Tuple private final String part public Mock Record Writer String part super part part Override public void close Task Attempt Context task Attempt Context throws Exception Interrupted Exception Override public void write Object arg Object arg throws Exception Interrupted Exception private static class Mock Output Committer extends Output Committer Override public void abort Task Task Attempt Context arg throws Exception Override public void commit Task Task Attempt Context arg throws Exception Override public boolean needs Task Commit Task Attempt Context arg throws Exception return true Override public void setup Job Job Context arg throws Exception Override public void setup Task Task Attempt Context arg throws Exception private static final class Mock Output Format extends Output Format Object Object Override public void check Output Specs Job Context arg throws Exception Interrupted Exception Override public Output Committer get Output Committer Task Attempt Context arg throws Exception Interrupted Exception return new Mock Output Committer Override public Record Writer Object Object get Record Writer Task Attempt Context arg throws Exception Interrupted Exception arg get Configuration get mapreduce output basename null return new Mock Record Writer arg get Configuration get mapreduce output basename arg get Task Attempt get Task get Id return new Mock Record Writer get Unique File arg part mock
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import java io Exception import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop mapreduce Job import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Writer import org apache backend hadoop executionengine map Reduce Layer Hadoop Logger import org apache classification Interface Audience import org apache classification Interface Stability import org apache data Tuple import org apache impl util Context Store Funcs take records processing store data store frequently file could also Base instance etc Interface Audience Public Interface Stability Stable public abstract class Store Func implements Store Func Interface method called runtime front end convert output location absolute path location relative Store Func implementation free choose converts relative location absolute location since may depend location string represent hdfs path data source param location location provided store statement script param cur Dir current working direction based cd statements script store statement cd statements script would home directory pre user username pre return absolute location based arguments passed throws Exception conversion possible Override public String rel Abs Path Store Location String location Path cur Dir throws Exception return Load Func get Absolute Path location cur Dir Return Output Format associated Store Func called front end planning backend execution return link Output Format associated Store Func throws Exception exception occurs constructing Output Format Override public abstract Output Format get Output Format throws Exception Communicate storer location data needs stored location string passed link Store Func return value link Store Func rel Abs Path Store Location String Path method called frontend backend multiple times Implementations bear mind method called multiple times ensure inconsistent side effects due multiple calls link check Schema Resource Schema called call link set Store Location String Job param location Location returned link Store Func rel Abs Path Store Location String Path param job link Job object throws Exception location valid Override public abstract void set Store Location String location Job job throws Exception Set schema data stored called front end planning store associated schema Store function implement function check given schema acceptable example check correct partition keys included storage function written directly Output Format make sure schema translate well defined way Default implementation op param checked throws Exception schema acceptable include detailed error message indicating wrong schema Override public void check Schema Resource Schema throws Exception default implementation op Initialize Store Func write data called execution backend call put Next param writer Record Writer use throws Exception exception occurs initialization Override public abstract void prepare Write Record Writer writer throws Exception Write tuple data store param tuple store throws Exception exception occurs write Override public abstract void put Next Tuple throws Exception method called front end back end pass unique signature link Store Func use store information link Context needs store various method invocations front end back end method called methods link Store Func necessary Latin script multiple stores different instances store functions need able find data Context object default implementation op param signature unique signature identify Store Func Override public void set Store Func Context Signature String signature default implementation op method called job contains store fails Implementations clean output locations method ensure incorrect incomplete results left output location default implementation deletes output location link File System location param location Location returned link Store Func rel Abs Path Store Location String Path param job link Job object used obtain cluster properties link Job get Configuration set query runtime job information Override public void cleanup Failure String location Job job throws Exception cleanup Failure Impl location job method called job contains store successful cleanup intermediate resources required Implementations clean output locations method ensure incorrect incomplete results left output location param location Location returned link Store Func rel Abs Path Store Location String Path param job link Job object used obtain cluster properties link Job get Configuration set query runtime job information Override public void cleanup Success String location Job job throws Exception user defined overrides call cleanup Failure Impl location job Default implementation link cleanup Failure String Job link cleanup Success String Job removes file param location file name file remove param job Hadoop job used access appropriate file system throws Exception public static void cleanup Failure Impl String location Job job throws Exception Path path new Path location File System fs path get File System job get Configuration fs exists path fs delete path true dropping support move default method Store Func Interface execution engines like Tez support optimizing union writing output location parallel tasks different vertices Commit called vertices union complete eliminates need separate phase read data output previous phases union write Enabling union optimization requires Output Format Support creation different part file names tasks different vertices Conflicting filenames create data corruption loss eg task vertex vertex create filename part r one files overwritten promoting temporary final location leading data loss File Output Format mapreduce output basename config enables naming files differently different vertices Classes extending File Output Format prefixing file names mapreduce output basename value encounter conflict Cases like Base Storage write key value store produce files also face conflict Support calling commit end takes care promoting temporary files different vertices final location eg File Output Format commit algorithm handles promoting files produced tasks different vertices final output location without issues file name conflict cases like Base Storage Table Output Committer nothing commit custom Output Format used Store Func support two criteria false returned Union optimization disabled Store Func Default implementation returns null case planner falls back link Configuration link Configuration settings determine Store Func supports public Boolean supports Parallel Write Store Location return null Issue warning Warning messages aggregated reported user param msg String message warning param warning Enum type warning public final void warn String msg Enum warning Enum Hadoop Logger get Instance warn msg warning Enum
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import org apache hadoop fs Path import org apache hadoop mapreduce Job import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Writer import org apache data Tuple import org apache impl util Utils import java io Exception Convenience class extend decorating Store Func abstract fail compile new methods get added Store Func Interface Subclasses must call set Store Func instance Store Func Interface methods called result Illegal Argument Exception method called public class Store Func Wrapper implements Store Func Interface private Store Func Interface store Func protected Store Func Wrapper wrapped Store Func Interface object must set method calls made object Typically done via constructor often times wrapped object properly initialized later lifecycle wrapper object param store Func protected void set Store Func Store Func Interface store Func store Func store Func Override public String rel Abs Path Store Location String location Path path throws Exception return store Func rel Abs Path Store Location location path Override public Output Format get Output Format throws Exception return store Func get Output Format Override public void set Store Location String location Job job throws Exception store Func set Store Location location job Override public void check Schema Resource Schema resource Schema throws Exception store Func check Schema resource Schema Override public void prepare Write Record Writer record Writer throws Exception store Func prepare Write record Writer Override public void put Next Tuple tuple throws Exception store Func put Next tuple Override public void set Store Func Context Signature String signature store Func set Store Func Context Signature signature Override public void cleanup Failure String location Job job throws Exception store Func cleanup Failure location job Override public void cleanup Success String location Job job throws Exception store Func cleanup Success location job private Store Func Interface store Func store Func null throw exception stack trace parse phase throw new Illegal Argument Exception Method calls made Store Func Wrapper object wrapped Store Func Interface object set Failed method call get Method Name return store Func Returns method call stack given depth Depth return method called get Method Name depth method called etc param depth return method name String protected String get Method Name final int depth final Stack Trace Element ste Thread current Thread get Stack Trace int index Utils Vendor index depth else index depth return ste index get Method Name
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import org apache Eval Func import org apache Exception import org apache backend executionengine Exec Exception import org apache data Data Type import org apache data Tuple import org apache impl logical Layer schema Schema method never used directly use link public class String Concat extends Eval Func String Override public String exec Tuple input throws Exception try input null input size return null String Builder sb new String Builder int input size input get null return null sb append String value input get return sb String catch Exec Exception exp throw exp catch Exception e int err Code String msg Error computing concat get Class get Simple Name throw new Exec Exception msg err Code Exception e Override public Schema output Schema Schema input return new Schema new Schema Field Schema null Data Type Override public Schema Type get Schema Type return Schema Type Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import static java lang String format import java io Exception import java util Hash Set import java util Iterator import java util Set import org apache Eval Func import org apache backend executionengine Exec Exception import org apache data Bag Factory import org apache data Data Bag import org apache data Tuple takes two bags arguments returns new bag composed tuples first bag second bag br null bag arguments replaced empty bags p implementation assumes bags passed function fit entirely memory simultaneously br case still function strong strong slow public class extends Eval Func Data Bag Compares two bag fields input Tuple returns new bag composed elements first bag second bag param input tuple exactly two bag fields throws Exception exactly two fields tuple link Data Bag Override public Data Bag exec Tuple input throws Exception input size throw new Exec Exception expected two inputs received input size inputs Data Bag bag Data Bag input get Data Bag bag Data Bag input get return subtract bag bag private static String class Name Object return null null get Class get Simple Name private static Data Bag Data Bag Object throws Exec Exception null return Bag Factory get Instance new Default Bag instanceof Data Bag return Data Bag throw new Exec Exception format Expecting input Data Bag class Name private static Data Bag subtract Data Bag bag Data Bag bag Data Bag subtract Bag Bag Bag Factory get Instance new Default Bag convert bag Set make assumption sets fit memory Set Tuple set Set bag remove elements bag set Iterator Tuple bag Iterator bag iterator bag Iterator Next set remove bag Iterator next set contains elements bag bag build resulting Data Bag Tuple tuple set subtract Bag Bag add tuple return subtract Bag Bag private static Set Tuple Set Data Bag bag Set Tuple set new Hash Set Tuple Iterator Tuple iterator bag iterator iterator Next set add iterator next return set Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical relational Logical Schema import org apache parser Source Location Subtract Operator public class Subtract Expression extends Binary Expression add operator plan connect left right hand side operators param plan plan operator part param lhs expression left hand side param rhs expression right hand side public Subtract Expression Operator Plan plan Logical Expression lhs Logical Expression rhs super Subtract plan lhs rhs link org apache newplan Operator accept org apache newplan Plan Visitor Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception null instanceof Subtract Expression Subtract Expression ao Subtract Expression return ao get Lhs Equal get Lhs ao get Rhs Equal get Rhs else return false Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema field Schema new Logical Schema Logical Field Schema null null get Lhs get Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception Logical Expression copy new Subtract Expression lg Exp Plan get Lhs deep Copy lg Exp Plan get Rhs deep Copy lg Exp Plan copy set Location new Source Location location return copy
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java util Array List import java util List import org apache Func Spec import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema Generates sum set values class implements link org apache Algebraic possible execution performed distributed fashion p operate numeric type also operate bytearrays cast doubles expects bag tuples one record knows schema function passed bag integers longs use specially adapted version uses integer arithmetic summing data return type double float double bytearray arguments long int long arguments p implements link org apache Accumulator interface well never preferred method usage available case combiner used given calculation public class extends Algebraic Byte Array Math Base public set Op public static class Intermediate extends Algebraic Byte Array Math Base Intermediate Override public get Op return public static class Final extends Algebraic Byte Array Math Base Final Override public get Op return non Javadoc see org apache Eval Func get Arg Func Mapping Override public List Func Spec get Arg Func Mapping throws Frontend Exception List Func Spec func List new Array List Func Spec func List add new Func Spec get Class get Name Schema generate Nested Schema Data Type Data Type Double Sum works Floats Doubles func List add new Func Spec Double Sum class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Double Sum class get Name Schema generate Nested Schema Data Type Data Type Long Sum works Ints Longs func List add new Func Spec Long Sum class get Name Schema generate Nested Schema Data Type Data Type func List add new Func Spec Long Sum class get Name Schema generate Nested Schema Data Type Data Type Adding Big Decimal func List add new Func Spec Big Decimal Sum class get Name Schema generate Nested Schema Data Type Data Type dding Big Integer func List add new Func Spec Big Integer Sum class get Name Schema generate Nested Schema Data Type Data Type return func List
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java math Big Decimal import java math Big Integer import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop io Text import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Job import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce lib input File Input Format import org apache Load Caster import org apache Load Func import org apache Configuration import org apache Exception import org apache Resource Schema Resource Field Schema import org apache backend executionengine Exec Exception import org apache backend hadoop executionengine map Reduce Layer Split import org apache backend hadoop executionengine map Reduce Layer Text Input Format import org apache bzip r Bzip Text Input Format import org apache data Data Bag import org apache data Data Byte Array import org apache data Tuple import org apache data Tuple Factory import org joda time Date Time load function simply creates tuple line text single chararray field contains line text public class Text Loader extends Load Func implements Load Caster protected Record Reader null private Tuple Factory Tuple Factory Tuple Factory get Instance private String load Location protected final Log Log Log Factory get Log get Class determines whether depend Bzip Text Input Format simply depend hadoop handling bzip inputs private boolean bzipinput usehadoops Override public Tuple get Next throws Exception try boolean Done next Key Value Done return null Text value Text get Current Value byte ba value get Bytes make copy bytes representing input since Text Input Format reuse byte array return Tuple Factory new Tuple new Data Byte Array ba value get Length catch Interrupted Exception e throw new Exception Error getting input Text Loader support conversion Boolean throws Exception value cast Override public Boolean bytes Boolean byte b throws Exception int err Code String msg Text Loader support conversion Boolean throw new Exec Exception msg err Code Exception Text Loader support conversion Integer throws Exception value cast Override public Integer bytes Integer byte b throws Exception int err Code String msg Text Loader support conversion Integer throw new Exec Exception msg err Code Exception Text Loader support conversion Long throws Exception value cast Override public Long bytes Long byte b throws Exception int err Code String msg Text Loader support conversion Long throw new Exec Exception msg err Code Exception Text Loader support conversion Float throws Exception value cast Override public Float bytes Float byte b throws Exception int err Code String msg Text Loader support conversion Float throw new Exec Exception msg err Code Exception Text Loader support conversion Double throws Exception value cast Override public Double bytes Double byte b throws Exception int err Code String msg Text Loader support conversion Double throw new Exec Exception msg err Code Exception Text Loader support conversion Date Time throws Exception value cast Override public Date Time bytes Date Time byte b throws Exception int err Code String msg Text Loader support conversion Date Time throw new Exec Exception msg err Code Exception Cast data bytes chararray value param b byte array cast return String value throws Exception value cast Override public String bytes Char Array byte b throws Exception return new String b Override public Map String Object bytes Map byte b Resource Field Schema schema throws Exception int err Code String msg Text Loader support conversion Map throw new Exec Exception msg err Code Exception Text Loader support conversion Tuple throws Exception value cast Override public Tuple bytes Tuple byte b Resource Field Schema schema throws Exception int err Code String msg Text Loader support conversion Tuple throw new Exec Exception msg err Code Exception Text Loader support conversion Bag throws Exception value cast public Data Bag bytes Bag byte b Resource Field Schema schema throws Exception int err Code String msg Text Loader support conversion Bag throw new Exec Exception msg err Code Exception public byte Bytes Data Bag bag throws Exception int err Code String msg Text Loader support conversion Bag throw new Exec Exception msg err Code Exception public byte Bytes String throws Exception return get Bytes public byte Bytes Double throws Exception int err Code String msg Text Loader support conversion Double throw new Exec Exception msg err Code Exception public byte Bytes Float f throws Exception int err Code String msg Text Loader support conversion Float throw new Exec Exception msg err Code Exception public byte Bytes Boolean b throws Exception int err Code String msg Text Loader support conversion Boolean throw new Exec Exception msg err Code Exception public byte Bytes Integer throws Exception int err Code String msg Text Loader support conversion Integer throw new Exec Exception msg err Code Exception public byte Bytes Long l throws Exception int err Code String msg Text Loader support conversion Long throw new Exec Exception msg err Code Exception public byte Bytes Date Time dt throws Exception int err Code String msg Text Loader support conversion Date Time throw new Exec Exception msg err Code Exception public byte Bytes Map String Object throws Exception int err Code String msg Text Loader support conversion Map throw new Exec Exception msg err Code Exception public byte Bytes Tuple throws Exception int err Code String msg Text Loader support conversion Tuple throw new Exec Exception msg err Code Exception Override public Big Integer bytes Big Integer byte b throws Exception int err Code String msg Text Loader support conversion Big Integer throw new Exec Exception msg err Code Exception Override public Big Decimal bytes Big Decimal byte b throws Exception int err Code String msg Text Loader support conversion Big Decimal throw new Exec Exception msg err Code Exception Override public Input Format get Input Format load Location ends bz load Location ends bz bzipinput usehadoops Log info Using Bzip Text Input Format return new Bzip Text Input Format else Log info Using Text Input Format return new Text Input Format Override public Load Caster get Load Caster return Override public void prepare Read Record Reader reader Split split reader Override public void set Location String location Job job throws Exception load Location location File Input Format set Input Paths job location bzipinput usehadoops job get Configuration get Boolean Configuration true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl io import java io Exception import java util Iterator import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache hadoop fs Path import org apache hadoop io Text import org apache hadoop io Writable Comparable import org apache hadoop mapreduce Input Format import org apache hadoop mapreduce Input Split import org apache hadoop mapreduce Job import org apache hadoop mapreduce Output Format import org apache hadoop mapreduce Record Reader import org apache hadoop mapreduce Record Writer import org apache hadoop mapreduce Task Attempt Context import org apache hadoop mapreduce lib input File Input Format import org apache hadoop mapreduce lib output File Output Format import org apache Expression import org apache File Input Load Func import org apache Load Func import org apache Load Metadata import org apache Configuration import org apache Resource Schema import org apache Resource Statistics import org apache Store Func import org apache Store Func Interface import org apache backend hadoop executionengine map Reduce Layer File Input Format import org apache backend hadoop executionengine map Reduce Layer Split import org apache classification Interface Audience import org apache data Tuple import org apache impl util Utils load function used storing intermediate data jobs query serialization format load function change newer versions used store persistent data Interface Audience Private public class File Storage extends File Input Load Func implements Store Func Interface Load Metadata private static final Log Log Log Factory get Log File Storage class public static final String use Log File storage use private File Record Reader rec Reader null private File Record Writer rec Writer null Simple binary nested reader format public File Storage throws Exception Log debug use Log Override public Tuple get Next throws Exception rec Reader next Key Value return rec Reader get Current Value else return null Override public void put Next Tuple throws Exception try rec Writer write null catch Interrupted Exception e throw new Exception e public static class File Input Format extends File Input Format Text Tuple non Javadoc see org apache hadoop mapreduce Input Format create Record Reader org apache hadoop mapreduce Input Split org apache hadoop mapreduce Task Attempt Context Override public Record Reader Text Tuple create Record Reader Input Split split Task Attempt Context context throws Exception Interrupted Exception return new File Record Reader Override public Input Format get Input Format return new File Input Format Override public int hash Code return Override public void prepare Read Record Reader reader Split split rec Reader File Record Reader reader Override public void set Location String location Job job throws Exception File Input Format set Input Paths job location public static class File Output Format extends File Output Format org apache hadoop io Writable Comparable Tuple non Javadoc see org apache hadoop mapreduce lib output File Output Format get Record Writer org apache hadoop mapreduce Task Attempt Context Override public Record Writer Writable Comparable Tuple get Record Writer Task Attempt Context job throws Exception Interrupted Exception Configuration conf job get Configuration String codec conf get Configuration codec equals lzo codec equals gz codec equals gzip throw new Exception Invalid temporary file compression codec codec Expected compression codecs gz gzip lzo codec equals gzip codec gz Log info codec compression codec use Path file get Default Work File job return new File Record Writer file codec conf Override public Output Format get Output Format return new File Output Format Override public void prepare Write Record Writer writer rec Writer File Record Writer writer Override public void set Store Location String location Job job throws Exception File Output Format set Output Path job new Path location Override public void check Schema Resource Schema throws Exception Override public String rel Abs Path Store Location String location Path cur Dir throws Exception return Load Func get Absolute Path location cur Dir Override public String get Partition Keys String location Job job throws Exception return null Override public Resource Schema get Schema String location Job job throws Exception return Utils get Schema location true job Override public Resource Statistics get Statistics String location Job job throws Exception return null Override public void set Partition Filter Expression plan throws Exception throw new Unsupported Operation Exception Override public void set Store Func Context Signature String signature Override public void cleanup Failure String location Job job throws Exception Store Func cleanup Failure Impl location job Override public void cleanup Success String location Job job throws Exception nothing
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import org apache Eval Func import org apache data Data Bag import org apache data Data Type import org apache data Non Spillable Data Bag import org apache data Tuple import org apache data Tuple Factory import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl logical Layer schema Schema Field Schema class takes list items puts bag foreach generate like saying foreach generate arguments tuple type inserted tuple added bag bag always bag tuples Output schema output schema udf depends schema arguments arguments type inner schema bags tuple columns udf output schema would bag tuples column type inner schema arguments arguments type tuple bag inner schemas match though schema field aliases may differ conditions met output schema bag null inner schema example grunt describe int int grunt b foreach generate grunt describe b b int example grunt describe x int x int grunt b foreach generate grunt describe b b x int example grunt describe x int int note inner schemas matching types different field aliases aliases first argument used output schema grunt b foreach generate grunt describe b b x int example grunt describe x int x chararray inner schemas match output schema well defined grunt b foreach generate grunt describe b b public class extends Eval Func Data Bag Override public Data Bag exec Tuple input throws Exception try assumption bag contents fits input tuple need spilled Data Bag bag new Non Spillable Data Bag input size int input size final Object object input get object instanceof Tuple bag add Tuple object else Tuple tp Tuple Factory get Instance new Tuple tp set object bag add tp return bag catch Exception ee throw new Runtime Exception Error creating bag ee non Javadoc see org apache Eval Func output Schema org apache impl logical Layer schema Schema columns tuple type set bag schema bag tuple column type Override public Schema output Schema Schema input Sch byte type Data Type Schema inner Schema null input Sch null Field Schema fs input Sch get Fields type Data Type type fs type inner Schema fs schema else type fs type null Equals inner Schema fs schema invalidate type type Data Type break try type Data Type return Schema generate Nested Schema Data Type Data Type Field Schema inner Fs new Schema Field Schema null inner Schema type Schema inner Sch new Schema inner Fs Schema bag Schema new Schema new Field Schema null inner Sch Data Type return bag Schema catch Frontend Exception e happen throw new Runtime Exception Bug exception thrown creating output schema udf e private boolean null Equals Schema current Schema Schema new Schema current Schema null new Schema null return false return true return Schema equals current Schema new Schema false true Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Array List import java util List import org apache Eval Func import org apache Func Spec import org apache data Data Type import org apache data Tuple import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org joda time Date Time import org joda time Date Time Zone import org joda time format Date Time Formatter import org joda time format Date Time Format p Date converts customized string Unix timestamp Date Time object p p Date overloaded p dl dt b Syntax b dt dd code Date Time Date Long millis code dd dt b Input b dt dd code milliseconds code dd dt b Output b dt dd code Date Time object code dd dl dl dt b Syntax b dt dd code Date Time Date String dt Str code dd dt b Input b dt dd code format date time string code dd dt b Output b dt dd code Date Time object code dd dl dl dt b Syntax b dt dd code Date Time Date String dt Str String format code dd dt b Input b dt dd code dt Str string represents date time code dd dd code format format string code dd dt b Output b dt dd code Date Time object code dd dl dl dt b Syntax b dt dd code Date Time Date String dt Str String format String timezone code dd dt b Input b dt dd code dt Str string represents date time code dd dd code format format string code dd dd code timezone timezone string code dd dt b Output b dt dd code Date Time object code dd dl public class Date extends Eval Func Date Time private static final Date Time Formatter iso Date Time Formatter Date Time Format date Optional Time Parser Offset Parsed public Date Time exec Tuple input throws Exception input null input size input get null return null return new Date Time Data Type Long input get Override public Schema output Schema Schema input return new Schema new Schema Field Schema get Schema Name get Class get Name Lower Case input Data Type Override public List Func Spec get Arg Func Mapping throws Frontend Exception List Func Spec func List new Array List Func Spec Schema new Schema add new Schema Field Schema null Data Type func List add new Func Spec get Class get Name new Schema add new Schema Field Schema null Data Type func List add new Func Spec Date class get Name new Schema add new Schema Field Schema null Data Type add new Schema Field Schema null Data Type func List add new Func Spec Date class get Name new Schema add new Schema Field Schema null Data Type add new Schema Field Schema null Data Type add new Schema Field Schema null Data Type func List add new Func Spec Date class get Name return func List public static Date Time Zone extract Date Time Zone String dt Str return iso Date Time Formatter parse Date Time allow Iso Space dt Str get Zone public static Date Time extract Date Time String dt Str return iso Date Time Formatter parse Date Time allow Iso Space dt Str format timestamp format similar Strict specifies date portion time portion allows space instead looser variant variant often adopted increases human readability timestamp format uses space variant Hive Impala database oriented generate timestamps space would like accept space formats org joda time format Date Time Formatter requires cleanest way get joda time accept convert space feeding string Date Time Formatter private static String allow Iso Space String dt Str dt Str null dt Str length dt Str char return dt Str return dt Str substring dt Str substring Override public boolean allow Compile Time Calculation return true
Generated Java edit line Token java Version Java Options null true package org apache tools parameters Describes input token stream public class Token implements java io Serializable version identifier Serializable class Increment serialized form class changes private static final long serial Version integer describes kind token numbering system determined Java Parser table numbers stored file Constants java public int kind line number first character Token public int begin Line column number first character Token public int begin Column line number last character Token public int end Line column number last character Token public int end Column string image token public String image reference next regular non special token input stream last token input stream token manager read tokens beyond one field set null true token also regular token Otherwise see description contents field public Token next field used access special tokens occur prior token immediately preceding regular non special token special tokens field set null one special token field refers last special tokens turn refers next previous special token special Token field first special token whose special Token field null next fields special tokens refer special tokens immediately follow without intervening regular token token field null public Token special Token optional attribute value Token Tokens used syntactic sugar often contain meaningful values used later compiler interpreter attribute value often different image subclass Token actually wants return non null value override method appropriate public Object get Value return null argument constructor public Token Constructs new token specified Image public Token int kind kind null Constructs new token specified Image Kind public Token int kind String image kind kind image image Returns image public String String return image Returns new Token object default However want create return subclass objects based value Kind Simply add cases switch special cases example subclass Token called Token want create Kind simply add something like case Parser Constants return new Token Kind image following switch statement cast matched Token variable appropriate type use sit lexical actions public static Token new Token int Kind String image switch Kind default return new Token Kind image public static Token new Token int Kind return new Token Kind null Java Original Checksum f c f ad c f ce edit line
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Array List import java util List import java util String Tokenizer import org apache Eval Func import org apache Exception import org apache backend executionengine Exec Exception import org apache data Bag Factory import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache data Tuple Factory import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache Func Spec Given chararray argument method split chararray return bag tuple chararray results split string split space double quote comma open parend close parend asterisk star public class extends Eval Func Data Bag Tuple Factory Tuple Factory Tuple Factory get Instance Bag Factory Bag Factory Bag Factory get Instance Override public Data Bag exec Tuple input throws Exception try input null return null input size return null Object input get null return null Data Bag output Bag Factory new Default Bag instanceof String int err Code String msg Expected input chararray got get Class get Name throw new Exec Exception msg err Code Exception String delim input size Object input get instanceof String int err Code String msg Expected delim chararray got get Class get Name throw new Exec Exception msg err Code Exception delim String String Tokenizer tok new String Tokenizer String delim false tok Tokens output add Tuple Factory new Tuple tok next Token return output catch Exec Exception ee throw ee Suppress Warnings deprecation Override public Schema output Schema Schema input try Schema Field Schema token Fs new Schema Field Schema token Data Type Schema tuple Schema new Schema token Fs Schema Field Schema tuple Fs tuple Fs new Schema Field Schema tuple tokens tuple Schema Data Type Schema bag Schema new Schema tuple Fs bag Schema set Two Level Access Required true Schema Field Schema bag Fs new Schema Field Schema bag token Tuples input get Field alias bag Schema Data Type return new Schema bag Fs catch Frontend Exception e throwing schema creation expected throw exception also superclass throw exception throw new Runtime Exception Unable compute schema public List Func Spec get Arg Func Mapping throws Frontend Exception List Func Spec func List new Array List Func Spec Schema new Schema add new Schema Field Schema null Data Type func List add new Func Spec get Class get Name new Schema add new Schema Field Schema null Data Type add new Schema Field Schema null Data Type func List add new Func Spec get Class get Name return func List Override public boolean allow Compile Time Calculation return true
Generated Java edit line Token Mgr Error java Version Java Options package org apache tools parameters Token Manager Error public class Token Mgr Error extends Error version identifier Serializable class Increment serialized form class changes private static final long serial Version Ordinals various reasons Error type thrown Lexical error occurred static final int attempt made create second instance static token manager static final int Tried change invalid lexical state static final int Detected bailed infinite loop token manager static final int Indicates reason exception thrown one values int error Code Replaces unprintable characters escaped unicode escaped equivalents given string protected static final String add Escapes String str String Buffer retval new String Buffer char ch int str length switch str char case continue case b retval append b continue case retval append continue case n retval append n continue case f retval append f continue case r retval append r continue case retval append continue case retval append continue case retval append continue default ch str char x ch x e String Integer String ch retval append u substring length length else retval append ch continue return retval String Returns detailed message Error thrown token manager indicate lexical error Parameters Seen indicates caused lexical error cur Lex State lexical state error occurred error Line line number error occurred error Column column number error occurred error prefix seen error occurred curchar offending character Note customize lexical error message modifying method protected static String Lexical Error boolean Seen int lex State int error Line int error Column String error char cur Char return Lexical error line error Line column error Column Encountered Seen add Escapes String value cur Char int cur Char add Escapes error also modify body method customize error messages example cases like end users concern return something like Internal Error Please file bug report method cases release version parser public String get Message return super get Message Constructors various flavors follow arg constructor public Token Mgr Error Constructor message reason public Token Mgr Error String message int reason super message error Code reason Full Constructor public Token Mgr Error boolean Seen int lex State int error Line int error Column String error char cur Char int reason Lexical Error Seen lex State error Line error Column error cur Char reason Java Original Checksum aa b c bba c f b b edit line
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import java util Map import java util Hash Map import org apache Eval Func import org apache data Data Bag import org apache data Data Type import org apache data Tuple import org apache impl logical Layer schema Schema class makes map parameters passed foreach generate generates map also accepts bag pair tuples e tuples key value public class extends Eval Func Map Override public Map exec Tuple input throws Exception input null input size return null Map String Object output new Hash Map String Object try single bag values input size input get instanceof Data Bag Data Bag bag Pairs Data Bag input get bag Pairs size return output Tuple tuple bag Pairs tuple size throw new Runtime Exception input tuples bag exactly fields String key String tuple get Object val tuple get output put key val return output else return null value must bag int input size String key String input get Object val input get output put key val return output catch Class Cast Exception e throw new Runtime Exception Map key must String catch Array Index Bounds Exception e throw new Runtime Exception Function input must even number parameters catch Exception e throw new Runtime Exception Error creating map e Override public Schema output Schema Schema input Byte value Type null input size input bag pair tuples Schema bag Schema input get Fields get schema bag Schema null bag Schema size Schema tuple Schema bag Schema get Fields get schema tuple Schema null value Type tuple Schema get Fields get type else input null input get Fields null int input size value Type null value Type input get Fields get type else value Type input get Fields get type value Type Data Type break Schema new Schema new Schema Field Schema null Data Type value Type null value Type Data Type get Fields get schema new Schema new Schema Field Schema null value Type return return Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Exception import org apache Eval Func import org apache data Data Type import org apache data Tuple import org apache impl logical Layer schema Schema class makes tuple parameter foreach generate generates tuple containing public class extends Eval Func Tuple Override public Tuple exec Tuple input throws Exception return input Override public Schema output Schema Schema input try Schema tuple Schema new Schema int input size tuple Schema add input get Field return new Schema new Schema Field Schema get Schema Name get Class get Name Lower Case input tuple Schema Data Type catch Exception e return null Override public boolean allow Compile Time Calculation return true
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan optimizer import org apache impl logical Layer Frontend Exception import org apache newplan Operator Plan public abstract class Transformer check transform done called pattern matches may criteria must met well param matched sub set plan matches pattern subset graph pattern operators point objects plan matched return true transform done throws Transformer public abstract boolean check Operator Plan matched throws Frontend Exception Transform tree param matched sub set plan matches pattern subset graph pattern operators point objects plan matched throws Transformer public abstract void transform Operator Plan matched throws Frontend Exception Report parts tree transformed listeners know part tree visit modify schemas annotations etc nodes removed need plan nodes added moved return Operator Plan describes changed nodes public abstract Operator Plan report Changes
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java net import java net Class Loader import java util List import org apache backend hadoop executionengine map Reduce Layer Tuple Default Raw Comparator import org apache classification Interface Audience import org apache classification Interface Stability factory construct tuples class abstract users override tuple factory desire provide returns implementation tuple property data tuple factory name set class name data tuple factory jar set pointing jar contains named class link get Instance create instance named class using indicated jar Otherwise create instance link Default Tuple Factory Interface Audience Public Interface Stability Stable public abstract class Tuple Factory implements Tuple Maker Tuple private static Tuple Factory g Self null Get reference singleton factory return Tuple Factory use construct tuples public static Tuple Factory get Instance g Self null String factory Name System get Property data tuple factory name String factory Jar System get Property data tuple factory jar factory Name null factory Jar null try urls new urls new factory Jar Class Loader loader new Class Loader urls Tuple Factory class get Class Loader Class c Class Name factory Name true loader Object c new Instance instanceof Tuple Factory throw new Runtime Exception Provided factory factory Name extend Tuple Factory g Self Tuple Factory catch Exception e e instanceof Runtime Exception threw Runtime Exception Runtime Exception e throw throw new Runtime Exception Unable instantiate tuple factory factory Name e else factory Name null try Class c Class Name factory Name Object c new Instance instanceof Tuple Factory throw new Runtime Exception Provided factory factory Name extend Tuple Factory g Self Tuple Factory catch Exception e e instanceof Runtime Exception threw Runtime Exception Runtime Exception e throw throw new Runtime Exception Unable instantiate tuple factory factory Name e else g Self new Bin Sedes Tuple Factory return g Self Create empty tuple used infrequently possible use new Tuple int instead return Empty new tuple public abstract Tuple new Tuple Create tuple size fields Whenever possible preferred null constructor constructor preallocate size container holding fields called legal call Tuple set x object x lt size param size Number fields tuple return Tuple size fields public abstract Tuple new Tuple int size Create tuple provided list objects underlying list copied param c List objects use fields tuple return tuple list objects fields public abstract Tuple new Tuple List c Create tuple provided list objects keeping provided list new tuple take ownership provided list param list List objects become fields tuple return tuple list objects fields public abstract Tuple new Tuple Copy List list Create tuple single element useful fact bags currently take tuples often end sticking single element tuple order put bag param datum Datum put tuple return tuple one field public abstract Tuple new Tuple Object datum Return actual class representing tuple implementing factory returning needed Hadoop needs know exact class using input output return Class implements tuple public abstract Class extends Tuple tuple Class protected Tuple Factory Provided testing purposes function never called anybody unit tests public static void reset Self g Self null Return actual class implementing raw comparator tuples factory returning Ovverride allow Hadoop speed tuple sorting actual returned class know serialization details tuple default implementation Tuple Default Raw Comparator serialize data comparison return Class implements tuple raw comparator public Class extends Tuple Raw Comparator tuple Raw Comparator Class return Tuple Default Raw Comparator class method used inspect whether Tuples created factory fixed size created practical terms means whether support append return Tuple fixed public abstract boolean Fixed Size
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical rules import java util Array List import java util List import org apache Func Spec import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache impl streaming Streaming Command import org apache impl streaming Streaming Command Handle Spec import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan logical expression Cast Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Project Expression import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Load import org apache newplan logical relational Stream import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache newplan optimizer Rule import org apache newplan optimizer Transformer public abstract class Type Cast Inserter extends Rule public Type Cast Inserter String n super n true protected abstract Logical Schema determine Schema Logical Relational Operator op throws Frontend Exception Override public Transformer get New Transformer return new Type Cast Inserter Transformer public class Type Cast Inserter Transformer extends Transformer Override public boolean check Operator Plan matched throws Frontend Exception Logical Relational Operator op Logical Relational Operator matched get Sources get Logical Schema op get Schema null return false process node Cast Adjusted op return false op instanceof Load Load op get Script Schema null return false else Stream op get Script Schema null return false narrowed operation casts added user specified types might match data let see actually needed Logical Schema determined Schema determine Schema op determined Schema null determined Schema size size n know data looks like user specified want certain number fields loaded return true Least One Cast Needed determined Schema return true return false private boolean Least One Cast Needed Logical Schema determined Schema Logical Schema int size Logical Schema Logical Field Schema fs get Field fs type Data Type fs Equal determined Schema get Field cast field default type whatever user specified clause statement fs type return true return false Override public void transform Operator Plan matched throws Frontend Exception Logical Relational Operator op Logical Relational Operator matched get Sources get Logical Schema op get Schema Logical Schema determined Schema determine Schema op current Plan get Successors op null output going anywhere n need bother tidying output return every field build logical plan field type byte array plan cast project Else project Logical Plan inner Plan new Logical Plan foreach new current Plan foreach set Inner Plan inner Plan foreach set Alias op get Alias Insert foreach plan patch plan Operator next current Plan get Successors op get current Plan insert op foreach next List Logical Expression Plan exps new Array List Logical Expression Plan Generate gen new Generate inner Plan exps new boolean size inner Plan add gen int size Logical Schema Logical Field Schema fs get Field Inner Load inner Load new Inner Load inner Plan foreach inner Plan add inner Load inner Plan connect inner Load gen Logical Expression Plan exp new Logical Expression Plan Project Expression prj new Project Expression exp gen exp add prj fs type Data Type determined Schema null fs Equal determined Schema get Field Either schema determined loader type determined Schema different type specified need cast Cast Expression cast new Cast Expression exp prj new Logical Schema Logical Field Schema fs exp add cast Func Spec load Func Spec null op instanceof Load load Func Spec Load op get File Spec get Func Spec else op instanceof Stream Streaming Command command Stream op get Streaming Command Handle Spec stream Output Spec command get Output Spec load Func Spec new Func Spec stream Output Spec get Spec else String msg Type Cast Inserter invoked invalid operator class name inner Plan get Class get Simple Name throw new Frontend Exception msg cast set Func Spec load Func Spec exps add exp mark Cast Inserted op Override public Operator Plan report Changes return current Plan protected abstract void mark Cast Inserted Logical Relational Operator op protected abstract void mark Cast Need Logical Relational Operator op protected abstract boolean Cast Adjusted Logical Relational Operator op
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical visitor import java util Array List import java util Arrays import java util Collections import java util Comparator import java util Hash Map import java util Iterator import java util List import java util Map import org apache Eval Func import org apache Eval Func Schema Type import org apache Func Spec import org apache Exception import org apache Warning import org apache data Data Type import org apache impl Context import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl logical Layer schema Schema Field Schema import org apache impl logical Layer validators Type Checker Exception import org apache impl plan Compilation Message Collector import org apache impl plan Compilation Message Collector Message Type import org apache impl plan Plan Exception import org apache impl plan Visitor Exception import org apache impl util Pair import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Reverse Dependency Order Walker import org apache newplan logical Util import org apache newplan logical expression Add Expression import org apache newplan logical expression Expression Visitor import org apache newplan logical expression Expression import org apache newplan logical expression Bin Cond Expression import org apache newplan logical expression Binary Expression import org apache newplan logical expression Cast Expression import org apache newplan logical expression Constant Expression import org apache newplan logical expression Dereference Expression import org apache newplan logical expression Divide Expression import org apache newplan logical expression Equal Expression import org apache newplan logical expression Greater Equal Expression import org apache newplan logical expression Greater Expression import org apache newplan logical expression Less Equal Expression import org apache newplan logical expression Less Expression import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Visitor import org apache newplan logical expression Map Lookup Expression import org apache newplan logical expression Mod Expression import org apache newplan logical expression Multiply Expression import org apache newplan logical expression Negative Expression import org apache newplan logical expression Equal Expression import org apache newplan logical expression Expression import org apache newplan logical expression Expression import org apache newplan logical expression Regex Expression import org apache newplan logical expression Subtract Expression import org apache newplan logical expression User Func Expression import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema public class Type Checking Exp Visitor extends Logical Expression Visitor private Compilation Message Collector msg Collector private Logical Relational Operator current Rel Op private static final int public Type Checking Exp Visitor Operator Plan exp Plan Compilation Message Collector msg Collector Logical Relational Operator rel Op throws Frontend Exception super exp Plan new Reverse Dependency Order Walker exp Plan msg Collector msg Collector current Rel Op rel Op reset field schema expression operators needs evaluated correct types set Field Schema Resetter sr new Field Schema Resetter exp Plan sr visit Override public void visit Add Expression bin Op throws Frontend Exception add Casts Numeric Bin Expression bin Op Override public void visit Subtract Expression bin Op throws Frontend Exception add Casts Numeric Bin Expression bin Op Override public void visit Multiply Expression bin Op throws Frontend Exception add Casts Numeric Bin Expression bin Op Override public void visit Divide Expression bin Op throws Frontend Exception add Casts Numeric Bin Expression bin Op Add casts promote numeric type larger two input numeric types link Binary Expression bin Op one inputs numeric bytearray cast bytearray type numeric type inputs bytearray cast double param bin Op throws Frontend Exception private void add Casts Numeric Bin Expression Binary Expression bin Op throws Frontend Exception Logical Expression lhs bin Op get Lhs Logical Expression rhs bin Op get Rhs byte lhs Type lhs get Type byte rhs Type rhs get Type Data Type Number Type lhs Type Data Type Number Type rhs Type return bigger type byte bigger Type lhs Type rhs Type lhs Type rhs Type Cast smaller type bigger type lhs Type bigger Type insert Cast bin Op bigger Type bin Op get Lhs else rhs Type bigger Type insert Cast bin Op bigger Type bin Op get Rhs else lhs Type Data Type Data Type Number Type rhs Type insert Cast bin Op rhs Type bin Op get Lhs else rhs Type Data Type Data Type Number Type lhs Type insert Cast bin Op lhs Type bin Op get Rhs else lhs Type Data Type rhs Type Data Type Cast operands double insert Cast bin Op Data Type bin Op get Lhs insert Cast bin Op Data Type bin Op get Rhs else int err Code String msg generate Incompatible Types Message bin Op msg Collector collect msg Message Type Error throw new Type Checker Exception bin Op msg err Code Exception Override public void visit Mod Expression bin Op throws Frontend Exception Logical Expression lhs bin Op get Lhs Logical Expression rhs bin Op get Rhs byte lhs Type lhs get Type byte rhs Type rhs get Type boolean error false lhs Type Data Type rhs Type Data Type nothing else rhs Type Data Type rhs Type Data Type insert Cast bin Op rhs Type bin Op get Lhs else error true else lhs Type Data Type rhs Type Data Type insert Cast bin Op lhs Type bin Op get Rhs else rhs Type Data Type insert Cast bin Op rhs Type bin Op get Lhs else rhs Type Data Type nothing else error true else lhs Type Data Type rhs Type Data Type rhs Type Data Type insert Cast bin Op lhs Type bin Op get Rhs else rhs Type Data Type nothing else error true else lhs Type Data Type rhs Type Data Type rhs Type Data Type rhs Type Data Type insert Cast bin Op rhs Type bin Op get Lhs else error true else error true error int err Code String msg generate Incompatible Types Message bin Op msg Collector collect msg Message Type Error throw new Type Checker Exception bin Op msg err Code Exception private String generate Incompatible Types Message Binary Expression bin Op throws Frontend Exception String msg bin Op String current Rel Op null current Rel Op get Alias null msg alias current Rel Op get Alias Logical Field Schema lhs Fs bin Op get Lhs get Field Schema Logical Field Schema rhs Fs bin Op get Rhs get Field Schema msg msg incompatible types bin Op get Name Operator left hand side Data Type find Type Name lhs Fs type lhs Fs schema null lhs Fs schema String false right hand side Data Type find Type Name rhs Fs type rhs Fs schema null rhs Fs schema String false return msg Override public void visit Negative Expression neg Exp throws Frontend Exception byte type neg Exp get Expression get Type Data Type Number Type type nothing else type Data Type cast bytearray double insert Cast neg Exp Data Type neg Exp get Expression else int err Code String msg used numbers Bytearray msg Collector collect msg Message Type Error throw new Type Checker Exception neg Exp msg err Code Exception Override public void visit Expression Exp throws Frontend Exception Exp get Expression instanceof Constant Expression Constant Expression Exp get Expression get Value null insert Cast Exp Data Type Exp get Expression byte type Exp get Expression get Type type Data Type int err Code String msg used boolean msg Collector collect msg Message Type Error throw new Type Checker Exception Exp msg err Code Exception Override public void visit Expression Exp throws Frontend Exception visit Boolean Binary Exp Override public void visit Expression Exp throws Frontend Exception visit Boolean Binary Exp private void visit Boolean Binary Binary Expression bool Exp throws Frontend Exception lhs rhs null constant cast boolean insert Casts Null Boolean bool Exp Logical Expression lhs bool Exp get Lhs Logical Expression rhs bool Exp get Rhs byte lhs Type lhs get Type byte rhs Type rhs get Type lhs Type Data Type rhs Type Data Type int err Code String msg Operands boolean msg Collector collect msg Message Type Error throw new Type Checker Exception bool Exp msg err Code Exception Override public void visit Less Expression bin Op throws Frontend Exception add Casts Compare Binary Exp bin Op false equality op Override public void visit Less Equal Expression bin Op throws Frontend Exception add Casts Compare Binary Exp bin Op false equality op Override public void visit Greater Expression bin Op throws Frontend Exception add Casts Compare Binary Exp bin Op false equality op Override public void visit Greater Equal Expression bin Op throws Frontend Exception add Casts Compare Binary Exp bin Op false equality op Override public void visit Equal Expression bin Op throws Frontend Exception add Casts Compare Binary Exp bin Op true equality op Override public void visit Equal Expression bin Op throws Frontend Exception add Casts Compare Binary Exp bin Op true equality op private void add Casts Compare Binary Exp Binary Expression bin Op boolean Equality throws Frontend Exception Logical Expression lhs bin Op get Lhs Logical Expression rhs bin Op get Rhs byte lhs Type lhs get Type byte rhs Type rhs get Type Data Type Number Type lhs Type Data Type Number Type rhs Type type cast byte bigger Type lhs Type rhs Type lhs Type rhs Type Cast smaller type bigger type lhs Type bigger Type insert Cast bin Op bigger Type bin Op get Lhs else rhs Type bigger Type insert Cast bin Op bigger Type bin Op get Rhs else lhs Type Data Type rhs Type Data Type good else lhs Type Data Type rhs Type Data Type good else lhs Type Data Type rhs Type Data Type good else lhs Type Data Type rhs Type Data Type Data Type Number Type rhs Type rhs Type Data Type rhs Type Data Type Cast byte array type rhs insert Cast bin Op rhs Type bin Op get Lhs else rhs Type Data Type lhs Type Data Type Data Type Number Type lhs Type lhs Type Data Type lhs Type Data Type Cast byte array type lhs insert Cast bin Op lhs Type bin Op get Rhs else Equality case equality condition allow boolean tuples maps args lhs Type Data Type rhs Type Data Type good else lhs Type Data Type rhs Type Data Type good else lhs Type Data Type rhs Type Data Type good else lhs Type Data Type rhs Type Data Type rhs Type Data Type Cast byte array type lhs insert Cast bin Op rhs Type bin Op get Lhs else rhs Type Data Type lhs Type Data Type lhs Type Data Type Cast byte array type lhs insert Cast bin Op lhs Type bin Op get Rhs else throw Incompatible Type Error bin Op else throw Incompatible Type Error bin Op private void throw Incompatible Type Error Binary Expression bin Op throws Frontend Exception int err Code String msg generate Incompatible Types Message bin Op msg Collector collect msg Message Type Error throw new Type Checker Exception bin Op msg err Code Exception private void insert Casts Null Boolean Binary Expression bin Op throws Frontend Exception bin Op get Lhs instanceof Constant Expression Constant Expression bin Op get Lhs get Value null insert Cast bin Op Data Type bin Op get Lhs bin Op get Rhs instanceof Constant Expression Constant Expression bin Op get Rhs get Value null insert Cast bin Op Data Type bin Op get Rhs add cast convert input exp link Logical Expression arg type Type param exp param Type param arg throws Frontend Exception private void insert Cast Logical Expression exp byte Type Logical Expression arg throws Frontend Exception Logical Field Schema Fs new Logical Schema Logical Field Schema null null Type insert Cast exp Fs arg private void insert Cast Logical Expression node Logical Field Schema Fs Logical Expression arg throws Frontend Exception collect Cast Warning node arg get Type Fs type msg Collector Cast Expression cast new Cast Expression plan arg Fs cast set Location node get Location try disconnect cast arg connection already added cast constructor insert call going plan disconnect cast arg plan insert node cast arg catch Plan Exception pe int err Code String msg Problem inserting cast operator node plan throw new Type Checker Exception arg msg err Code Exception pe visit cast Basic Types Casting always ok Casting number number always ok Byte Array anything ok number chararray ok Composite Types Recursively traverse schemas till get basic type throws Frontend Exception Override public void visit Cast Expression cast throws Frontend Exception byte Type cast get Expression get Type byte Type cast get Type Type Data Type Type Type int err Code String msg cast Data Type find Type Name Type bytearray msg Collector collect msg Message Type Error throw new Type Checker Exception cast msg err Code Exception Logical Field Schema Fs cast get Expression get Field Schema Logical Field Schema Fs cast get Field Schema Fs null replace null schema bytearray schema Fs new Logical Field Schema null null Data Type check field schemas castable boolean castable Logical Field Schema castable Fs Fs castable int err Code String msg cast Data Type find Type Name Type Data Type Schema Type Type schema Fs String false Data Type find Type Name Type Data Type Schema Type Type schema Fs String false msg Collector collect msg Message Type Error throw new Type Checker Exception cast msg err Code Exception link Regex Expression expects Char Array input always returns Boolean param rg throws Frontend Exception Override public void visit Regex Expression rg throws Frontend Exception allow converted rg get Lhs get Type Data Type insert Cast rg Data Type rg get Lhs rg get Rhs get Type Data Type insert Cast rg Data Type rg get Rhs Char Array say goodbye rg get Lhs get Type Data Type rg get Rhs get Type Data Type int err Code String msg Operands Regex Char Array rg msg Collector collect msg Message Type Error throw new Type Checker Exception rg msg err Code Exception Override public void visit Bin Cond Expression bin Cond throws Frontend Exception high level type checking bin Cond get Condition get Type Data Type int err Code String msg Condition Bin Cond must boolean msg Collector collect msg Message Type Error throw new Type Checker Exception bin Cond msg err Code Exception byte lhs Type bin Cond get Lhs get Type byte rhs Type bin Cond get Rhs get Type sides number convert smaller type bigger type Data Type Number Type lhs Type Data Type Number Type rhs Type byte bigger Type lhs Type rhs Type lhs Type rhs Type bigger Type lhs Type insert Cast bin Cond bigger Type bin Cond get Lhs else bigger Type rhs Type insert Cast bin Cond bigger Type bin Cond get Rhs else lhs Type Data Type rhs Type Data Type Data Type Number Type rhs Type rhs Type Data Type need add boolean well Cast byte array type rhs insert Cast bin Cond rhs Type bin Cond get Lhs else rhs Type Data Type lhs Type Data Type Data Type Number Type lhs Type rhs Type Data Type need add boolean well Cast byte array type lhs insert Cast bin Cond lhs Type bin Cond get Rhs constant null always bytearray cast rhs type else bin Cond get Lhs instanceof Constant Expression Constant Expression bin Cond get Lhs get Value null try insert Cast bin Cond bin Cond get Rhs get Field Schema bin Cond get Lhs catch Frontend Exception e int err Code String msg Problem getting field Schema bin Cond get Rhs throw new Type Checker Exception bin Cond msg err Code Exception e else bin Cond get Rhs instanceof Constant Expression Constant Expression bin Cond get Rhs get Value null try insert Cast bin Cond bin Cond get Lhs get Field Schema bin Cond get Rhs catch Frontend Exception e int err Code String msg Problem getting field Schema bin Cond get Rhs throw new Type Checker Exception bin Cond msg err Code Exception e else lhs Type rhs Type Matching schemas working tuples bags Data Type Schema Type lhs Type try Logical Field Schema Equal Unless Unknown bin Cond get Lhs get Field Schema bin Cond get Rhs get Field Schema int err Code String msg Two inputs Bin Cond must compatible schemas left hand side bin Cond get Lhs get Field Schema right hand side bin Cond get Rhs get Field Schema msg Collector collect msg Message Type Error throw new Type Checker Exception bin Cond msg err Code Exception may merge schema previous check exact match catch Frontend Exception fe int err Code String msg Problem evaluaton Bin Cond output type msg Collector collect msg Message Type Error throw new Type Checker Exception bin Cond msg err Code Exception fe else int err Code String msg Unsupported input type Bin Cond left hand side Data Type find Type Name lhs Type right hand side Data Type find Type Name rhs Type msg Collector collect msg Message Type Error throw new Type Checker Exception bin Cond msg err Code Exception Override public void visit Map Lookup Expression map throws Frontend Exception map get Map get Type Data Type insert cast predecessor return map insert Cast map Data Type map get Map Override public void visit Dereference Expression deref throws Frontend Exception byte input Type deref get Referred Expression get Type switch input Type case Data Type case Data Type case Data Type ideally determine type runtime allowed types break default int err Code String msg Referring column within column type Data Type find Type Name input Type allowed throw new Type Checker Exception deref msg err Code Exception Override public void visit User Func Expression func throws Frontend Exception List Logical Expression list func get Arguments dependency graph right inputs must already know types Schema current Arg Schema new Schema Logical Expression op list Data Type Usable Type op get Type int err Code String msg Problem input op User defined function func msg Collector collect msg Message Type Error throw new Type Checker Exception func msg err Code Exception try current Arg Schema add Util translate Field Schema op get Field Schema catch Frontend Exception e int err Code String msg Unable retrieve field schema throw new Type Checker Exception func msg err Code Exception e Eval Func ef Eval Func Context instantiate Func Spec func get Func Spec ask Eval Func types inputs handle List Func Spec func Specs null try func Specs ef get Arg Func Mapping func Specs null Func Spec func Spec func Specs Schema func Spec get Input Args Schema Logical Schema ls Util translate Schema ls normalize func Spec set Input Args Schema Util translate Schema ls catch Exception e int err Code String msg Unable get list overloaded methods throw new Type Checker Exception func msg err Code Exception e Eval Func schema type Schema Type udf Schema Type ef get Schema Type explanation way matching funcspec chosen based actual types input schema First exact match tried fields input schema corresponding fields candidate funcspecs schemas exact match fails first check made input schema bytearrays bytearrays input schema best fit match attempted different fields Essential permissible cast one type another given score based position cast Lookup table final score candidate funcspec deduced score particular cast Casts Far permissible casts possible score candidate Among non score candidates candidate lowest score chosen bytearrays input schema modified exact match tried matching bytearrays input schema considered result ignoring bytearrays could get multiple candidate funcspecs match exactly columns case notify user ambiguity error Else non byte array fields matched exactly cast bytearray corresponding type matched udf schema modified exact match fails best fit algorithm attempted initially coming scores candidate func Specs bytearray ignored scoring process check made ensure positions bytearrays input schema type given position corresponding positions candidate func Specs case indicates conflict user notified error one choice destination type cast bytearray case candidate lowest score chosen Func Spec matching Spec null boolean Exact Match false func Specs null func Specs size function mappings found Trying see one fits input schema matching Spec exact Match func Specs current Arg Schema func udf Schema Type null Oops exact match found Trying see mappings fit using casts Exact Match true byte Array Found func current Arg Schema try exact matching fields except byte array fields exact match one candidate byte array cast matching one matching Spec exact Match Byte Arrays func Specs current Arg Schema func udf Schema Type null exact match byte arrays work try best fit match matching Spec best Fit Match Byte Arrays func Specs current Arg Schema func udf Schema Type null int err Code String msg Could infer matching function func get Func Spec multiple none fit Please use explicit cast msg Collector collect msg Message Type Error throw new Type Checker Exception func msg err Code Exception else matching Spec best Fit Match func Specs current Arg Schema udf Schema Type null Either byte arrays found byte arrays one mapping exists However could find match either none fitting input schema ambiguous Throw exception ca n infer fit int err Code String msg Could infer matching function func get Func Spec multiple none fit Please use explicit cast msg Collector collect msg Message Type Error throw new Type Checker Exception func msg err Code Exception matching Spec null Voila fitting match Lets insert casts make work notify user match picked exact match Exact Match String msg Function func get Func Spec get Class Name called following argument types matching Spec get Input Args Schema want use different input argument types please use explicit casts msg Collector collect msg Message Type Warning Warning func Via Define matching Spec set Ctor Args func get Func Spec get Ctor Args func set Func Spec matching Spec insert Casts func current Arg Schema matching Spec get Input Args Schema udf Schema Type Tries find schema supported one func Specs obtained inserting set casts input schema param func Specs mappings provided udf param input schema param func udf expression param udf Schema Type schema type udf return func Spec supports schema best suited best suited schema one lowest score returned fit Possible throws Visitor Exception private Func Spec best Fit Match Byte Arrays List Func Spec func Specs Schema User Func Expression func Schema Type udf Schema Type throws Visitor Exception List Pair Long Func Spec score Func Spec List new Array List Pair Long Func Spec Iterator Func Spec iterator func Specs iterator iterator Next Func Spec fs iterator next long score fit Possible fs get Input Args Schema udf Schema Type score score Func Spec List add new Pair Long Func Spec score fs candidates found return null score Func Spec List size return null score Func Spec List size sort candidates based score Collections sort score Func Spec List new Score Func Spec List Comparator two candidates lowest score choose one notify user score Func Spec List get first score Func Spec List get first int err Code String msg Multiple matching functions func get Func Spec input schemas score Func Spec List get second get Input Args Schema score Func Spec List get second get Input Args Schema Please use explicit cast msg Collector collect msg Message Type Error throw new Type Checker Exception func msg err Code Exception consider bytearray fields List Integer byte Array Positions get Byte Array Positions func make sure one type cast byte array positions among candidate func Specs Map Integer Pair Func Spec Byte cast Map new Hash Map Integer Pair Func Spec Byte Iterator Pair Long Func Spec score Func Spec List iterator Next Func Spec func Spec next second Schema sch func Spec get Input Args Schema Iterator Integer iter byte Array Positions iterator iter Next Integer iter next try cast Map contains Key first candidate cast Map put new Pair Func Spec Byte func Spec sch get Field type else make sure existing type earlier candidate matches Pair Func Spec Byte existing Pair cast Map get sch get Field type existing Pair second int err Code String msg Multiple matching functions func get Func Spec input schema existing Pair first get Input Args Schema func Spec get Input Args Schema Please use explicit cast msg Collector collect msg Message Type Error throw new Type Checker Exception func msg err Code Exception catch Frontend Exception fee int err Code String msg Unalbe retrieve field schema throw new Type Checker Exception func msg err Code Exception fee reached means candidates candidates type position bytearray input Also candidates stored sorted score list return first candidate one lowest score return score Func Spec List get second private static class Score Func Spec List Comparator implements Comparator Pair Long Func Spec non Javadoc see java util Comparator compare java lang Object java lang Object Override public int compare Pair Long Func Spec Pair Long Func Spec first first return else first first return else return Finds exact match schema supported one func Specs input schema first exact match non byte array fields first attempted exactly one candidate chosen since bytearray cast corresponding type candidate param func Specs mappings provided udf param input schema param func User Func Expression matching requested param udf Schema Type schema type udf return matching spec found else null throws Frontend Exception private Func Spec exact Match Byte Arrays List Func Spec func Specs Schema User Func Expression func Schema Type udf Schema Type throws Frontend Exception exact match fields except byte array fields ignore byte array fields matching return exact Match Helper func Specs func udf Schema Type true Finds exact match schema supported one func Specs input schema exact match fields attempted param func Specs mappings provided udf param input schema param func User Func Expression matching requested param udf Schema Type schema type user defined function return matching spec found else null throws Frontend Exception private Func Spec exact Match List Func Spec func Specs Schema User Func Expression func Schema Type udf Schema Type throws Frontend Exception exact match fields n ignore byte array fields return exact Match Helper func Specs func udf Schema Type false Tries find schema supported one func Specs obtained inserting set casts input schema param func Specs mappings provided udf param input schema param udf Schema Type schema type udf return func Spec supports schema best suited best suited schema one lowest score returned fit Possible private Func Spec best Fit Match List Func Spec func Specs Schema Schema Type udf Schema Type Func Spec matching Spec null long score long prev Best Score Long long best Score Long Iterator Func Spec iterator func Specs iterator iterator Next Func Spec fs iterator next score fit Possible fs get Input Args Schema udf Schema Type score score best Score matching Spec fs prev Best Score best Score best Score score matching Spec null best Score prev Best Score return matching Spec return null Checks see field input schema byte array param func param input schema return true found else false throws Visitor Exception private boolean byte Array Found User Func Expression func Schema throws Visitor Exception int size try Field Schema fs get Field fs null return false fs type Data Type return true catch Frontend Exception fee int err Code String msg Unable retrieve field schema throw new Type Checker Exception func msg err Code Exception fee return false Gets positions schema byte arrays param func param input schema throws Visitor Exception private List Integer get Byte Array Positions User Func Expression func Schema throws Visitor Exception List Integer result new Array List Integer int size try Field Schema fs get Field fs type Data Type result add catch Frontend Exception fee int err Code String msg Unable retrieve field schema throw new Type Checker Exception func msg err Code Exception fee return result Finds exact match schema supported one func Specs input schema param func Specs mappings provided udf param input schema param func user defined function param udf Schema Type schema type user defined function param ignore Byte Arrays flag whether exact match computed ignoring bytearray true without ignoring bytearray false return matching spec found else null throws Frontend Exception private Func Spec exact Match Helper List Func Spec func Specs Schema User Func Expression func Schema Type udf Schema Type boolean ignore Byte Arrays throws Frontend Exception List Func Spec matching Specs new Array List Func Spec Iterator Func Spec iterator func Specs iterator iterator Next Func Spec fs iterator next schema Equals Matching fs get Input Args Schema udf Schema Type ignore Byte Arrays matching Specs add fs matching Specs size return null matching Specs size int err Code String msg Multiple matching functions func get Func Spec input schema matching Specs get get Input Args Schema matching Specs get get Input Args Schema Please use explicit cast msg Collector collect msg Message Type Error throw new Type Checker Exception func msg err Code Exception exactly one matching spec return return matching Specs get Compare two schemas equality argument matching purposes relaxed form Schema equals wherein first Datatypes field schema checked equality field schema udf schema complex type inner schema null check schema equality inner schemas field schema input field schema param input Schema param udf Schema param ignore Byte Arrays return true Field Schemas equal argument matching false otherwise throws Frontend Exception public static boolean schema Equals Matching Schema input Schema Schema udf Schema Schema Type udf Schema Type boolean ignore Byte Arrays throws Frontend Exception null equal input Schema null udf Schema null return true otherwise input Schema null return false udf Schema null return false old udf schemas might tuple inside bag fix udf Schema Util fix Schema Add Tuple Bag udf Schema udf Schema Type Schema Type input Schema size udf Schema size return false udf Schema Type Schema Type input Schema size udf Schema size return false Iterator Field Schema input Schema get Fields iterator Iterator Field Schema j udf Schema get Fields iterator Field Schema udf Field Schema null Next Field Schema input Field Schema next input Field Schema null return false field take last one vararg field udf Field Schema j Next j next udf Field Schema ignore Byte Arrays input Field Schema type Data Type continue input Field Schema type udf Field Schema type return false field schema udf schema complex type inner schema null check schema equality inner schemas field schema input field schema field schema udf schema complex type inner schema null means udf applicable input type field irrespective inner schema bag empty tuple rely field type Data Type Schema Type udf Field Schema type udf Field Schema schema null Bag Empty Tuple udf Field Schema Compare recursively using field schema Field Schema equals input Field Schema udf Field Schema false true try modifying empty tuple type bytearray see matches Need backward compatibility User might specified tuple bytearray also match empty tuple Field Schema input Bytearrayin Tuple new Field Schema input Field Schema convert Empty Tuple Bytearray Tuple input Bytearrayin Tuple Field Schema equals input Bytearrayin Tuple udf Field Schema false true return false return true Check field Sch bag empty tuple schema param field Sch return throws Frontend Exception private static boolean Bag Empty Tuple Field Schema field Sch throws Frontend Exception boolean Bag Empty Tuple false field Sch type Data Type field Sch schema null field Sch schema get Field null field Sch schema get Field type Data Type field Sch schema get Field schema null Bag Empty Tuple true return Bag Empty Tuple private static void convert Empty Tuple Bytearray Tuple Field Schema fs fs type Data Type fs schema null fs schema size fs schema add new Field Schema null Data Type return fs schema null Field Schema Fs fs schema get Fields convert Empty Tuple Bytearray Tuple Fs static final Hash Map Byte List Byte cast Lookup new Hash Map Byte List Byte static Ordering decides score best fit function change order Conversions smaller type preferred conversion bigger type ordering types small big List Byte bool Types Arrays List Data Type Data Type Data Type Data Type Data Type Data Type maybe bigger types cast Lookup put Data Type bool Types List Byte int Types Arrays List Data Type Data Type Data Type Data Type Data Type cast Lookup put Data Type int Types List Byte long Types Arrays List Data Type Data Type Data Type Data Type cast Lookup put Data Type long Types List Byte float Types Arrays List Data Type Data Type Data Type cast Lookup put Data Type float Types List Byte double Types Arrays List Data Type Data Type cast Lookup put Data Type double Types List Byte big Integer Types Arrays List Data Type cast Lookup put Data Type big Integer Types List Byte byte Array Types Arrays List Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type Data Type cast Lookup put Data Type byte Array Types Computes modified version manhattan distance two schemas value axis preferred values change axis means number casts required lesser axis However function ceases metric triangle inequality hold schema size dimensional vector ordering axis defined cast Lookup Unallowed casts returned dist param param param Type return private long fit Possible Schema Schema Schema Type Type null null return List Field Schema Fields get Fields List Field Schema fs Fields get Fields Type Schema Type Fields size fs Fields size return Type Schema Type Fields size fs Fields size return long score int cast Cnt int Fields size Field Schema Fields get null return byte array include computation score bytearray fields looked separately outside function type Data Type continue get vararg field defined take repeatedly Field Schema fs Type Schema Type size fs Fields get size fs Fields get Data Type Schema Type type Field Schema equals fs false true return Field Schema equals fs true true continue cast Lookup contains Key type return cast Lookup get type contains fs type return score cast Lookup get type index fs type cast Cnt return score cast Cnt private void insert Casts User Func Expression func Schema Sch Schema Sch Schema Type Sch Type throws Frontend Exception List Field Schema fs Lst Sch get Fields List Field Schema ts Lst Sch get Fields List Logical Expression args func get Arguments int Field Schema f Sch fs Lst get vararg field defined take repeatedly Field Schema Sch Sch Type Schema Type ts Lst size ts Lst get ts Lst size ts Lst get f Sch type Sch type continue insert Cast func Util translate Field Schema Sch args get Helper collecting warning casting inserted plan implicit casting param node param original Type param Type static void collect Cast Warning Operator node byte original Type byte Type Compilation Message Collector msg Collector String original Type Name Data Type find Type Name original Type String Type Name Data Type find Type Name Type String op Name node get Class get Simple Name Warning kind null switch Type case Data Type kind Warning break case Data Type kind Warning break case Data Type kind Warning break case Data Type kind Warning break case Data Type kind Warning break case Data Type kind Warning break case Data Type kind Warning break case Data Type kind Warning break case Data Type kind Warning break case Data Type kind Warning break case Data Type kind Warning break case Data Type kind Warning break msg Collector collect original Type Name implicitly cast Type Name op Name Operator Message Type Warning kind static class Field Schema Resetter extends Expression Visitor protected Field Schema Resetter Operator Plan p throws Frontend Exception super p new Reverse Dependency Order Walker p Override protected void execute Logical Expression op throws Frontend Exception op reset Field Schema
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical visitor import java util Array List import java util Collection import java util List import org apache Exception import org apache data Data Type import org apache impl logical Layer Frontend Exception import org apache impl logical Layer validators Type Checker Exception import org apache impl plan Compilation Message Collector import org apache impl plan Visitor Exception import org apache impl plan Compilation Message Collector Message Type import org apache impl util Multi Map import org apache newplan Dependency Order Walker import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan logical expression Cast Expression import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Project Expression import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Split Output import org apache newplan logical relational Store import org apache newplan logical relational Union import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Nodes Visitor import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema get Type operators always return Check types inputs expression plans Compute output schema type information moment parser return Get Schema correct aliases Insert casting necessary public class Type Checking Rel Visitor extends Logical Relational Nodes Visitor private Compilation Message Collector msg Collector public Type Checking Rel Visitor Operator Plan plan Compilation Message Collector msg Collector throws Frontend Exception super plan new Dependency Order Walker plan msg Collector msg Collector Override public void visit Load load nothing Override public void visit Store store throws Frontend Exception store reset Schema store get Schema schema filter output filter input throws Frontend Exception Override public void visit Filter filter throws Frontend Exception filter reset Schema Logical Expression Plan comparison Plan filter get Filter Plan Check inner plan output port comparison Plan get Sources size int err Code String msg Filter cond plan one output msg Collector collect msg Message Type Error throw Type Checker Exception filter msg err Code Exception null visit filter expression visit Expression Plan comparison Plan filter check filter expression type byte inner Cond Type Logical Expression comparison Plan get Sources get get Type inner Cond Type Data Type int err Code String msg Filter condition must evaluate boolean Found Data Type find Type Name inner Cond Type msg Collector collect msg Message Type Error throw Type Checker Exception filter msg err Code Exception null try compute schema filter reset Schema filter get Schema catch Frontend Exception fe int err Code String msg Problem reconciling output schema Filter msg Collector collect msg Message Type Error throw Type Checker Exception filter msg err Code Exception fe private void throw Type Checker Exception Operator op String msg int err Code byte input Frontend Exception fe throws Type Checker Exception fe null throw new Type Checker Exception op msg err Code Exception throw new Type Checker Exception op msg err Code Exception fe Override public void visit Generate gen throws Frontend Exception int gen get Output Plans size Logical Expression Plan exp Plan gen get Output Plans get Check inner plan output port exp Plan get Sources size int err Code String msg Generate expression plan one output msg Collector collect msg Message Type Error throw Type Checker Exception gen msg err Code Exception null visit filter expression visit Expression Plan exp Plan gen gen reset Schema gen get Schema Override public void visit Inner Load inner Load throws Frontend Exception inner Load reset Schema inner Load get Schema Override public void visit throws Frontend Exception try visit inner plan new Type Checking Rel Visitor get Inner Plan msg Collector visit compute schema reset Schema get Schema catch Frontend Exception fe int err Code String msg Problem reconciling output schema msg Collector collect msg Message Type Error throw Type Checker Exception msg err Code Exception fe private void visit Expression Plan Logical Expression Plan expl Plan Logical Relational Operator rel Op throws Frontend Exception Type Checking Exp Visitor exp Type Check new Type Checking Exp Visitor expl Plan msg Collector rel Op exp Type Check visit non Javadoc see org apache newplan logical relational Logical Relational Nodes Visitor visit org apache newplan logical relational Union output schema Union merge input schemas Operands left side always take precedance aliases allow type promotion Override public void visit Union u throws Frontend Exception u reset Schema make copy insert operators list change us List Operator inputs new Array List Operator u get Inputs point union one operand problem parser inputs size throw new Assertion Error Union Count Operand Logical Schema schema null try Compute schema schema u get Schema catch Frontend Exception fee int err Code String msg Problem reading schemas inputs Union msg Collector collect msg Message Type Error throw Type Checker Exception u msg err Code Exception fee cast insertion typed union onschema case union onschema foreach cast added Union Schema Setter schema null u Schema Insert casting inputs necessary int inputs size inserted Op insert Cast Necessary Logical Relational Operator inputs get u may compute schema input inserted inserted Op null inserted Op get Alias null inserted Op set Alias Logical Relational Operator inputs get get Alias try visit inserted Op catch Frontend Exception fee int err Code String msg Problem casting inputs Union msg Collector collect msg Message Type Error throw Type Checker Exception u msg err Code Exception fee u reset Schema u get Schema casting insertion relational operators necessary Currently shallow casting param Op param Op return inserted operator null insertion throws Frontend Exception private insert Cast Necessary Logical Relational Operator Op Logical Relational Operator Op throws Frontend Exception Make sure adjacent direction Op Op List Operator pre List plan get Predecessors Op boolean found false Operator tmp Op pre List compare reference tmp Op Op found true break found int err Code String msg Two operators require cast adjacent throw Type Checker Exception Op msg err Code Exception null retrieve input schema casted used later Logical Schema Schema null Logical Schema Schema null try Schema Op get Schema Schema Op get Schema catch Frontend Exception fe int err Code String msg Problem reading schema input Op get Class get Simple Name throw Type Checker Exception Op msg err Code Exception fe make sure supplied target Schema number members number output fields Op Schema size Schema size int err Code String msg Schema size mismatch casting Input schema size Schema size Target schema size Schema size throw Type Checker Exception Op msg err Code Exception null Plans inside Generate Fields need casting Project Fields need casting Project Cast Array List Logical Expression Plan generate Plans new Array List Logical Expression Plan Logical Plan inner Plan new Logical Plan create Generate foreach Generate lo Gen new Generate inner Plan generate Plans new boolean Schema size inner Plan add lo Gen Create inserted foreach new plan foreach set Inner Plan inner Plan int cast Needed Counter int Schema size Inner Load inner Load new Inner Load inner Plan foreach inner Plan add inner Load inner Plan connect inner Load lo Gen Logical Expression Plan gen Plan new Logical Expression Plan Project Expression project new Project Expression gen Plan lo Gen gen Plan add project add casting necessary comparing target types input schema Logical Field Schema fs null fs Schema get Field shallow checking Logical Field Schema Field Schema Field Schema Schema get Field Field Schema type fs type cast Needed Counter Cast Expression castexp new Cast Expression gen Plan project Field Schema castexp set Location Op get Location generate Plans add gen Plan really need casting cast Needed Counter Flatten List cast insertion n flatten Array List Boolean flatten List new Array List Boolean int Schema size flatten List add Boolean value false Manipulate plan structure plan add foreach plan insert Op foreach Op return foreach else plan remove foreach return null Override public void visit Split Output op throws Frontend Exception op reset Schema Operator Plan lp op get Plan Split Output input List Operator list lp get Predecessors op list size int err Code String msg Split Output one input Found list size input throw Type Checker Exception op msg err Code Exception null Logical Expression Plan cond Plan op get Filter Plan Check inner plan output port cond Plan get Sources size int err Code String msg Split inner plan one output leaf msg Collector collect msg Message Type Error throw Type Checker Exception op msg err Code Exception null visit Expression Plan cond Plan op byte inner Cond Type Logical Expression cond Plan get Sources get get Type inner Cond Type Data Type int err Code String msg Split condition must evaluate boolean Found Data Type find Type Name inner Cond Type msg Collector collect msg Message Type Error throw Type Checker Exception op msg err Code Exception null try Compute schema op get Schema catch Frontend Exception fe int err Code String msg Problem reading schemas inputs Split Output msg Collector collect msg Message Type Error throw Type Checker Exception op msg err Code Exception fe Distinct output schema input param op throws Visitor Exception Override public void visit Distinct op throws Visitor Exception op reset Schema try Compute schema op get Schema catch Frontend Exception fe int err Code String msg Problem reading schemas inputs Distinct msg Collector collect msg Message Type Error throw Type Checker Exception op msg err Code Exception fe Override public void visit Limit limit throws Frontend Exception limit reset Schema Logical Expression Plan expression Plan limit get Limit Plan expression Plan null Check inner plan output port expression Plan get Sources size int err Code String msg Limit expression plan one output msg Collector collect msg Message Type Error throw Type Checker Exception limit msg err Code Exception null visit limit expression visit Expression Plan expression Plan limit check limit expression type byte inner Cond Type Logical Expression expression Plan get Sources get get Type cast long bytearray inner Cond Type Data Type insert Atomic Cast Inner Plan expression Plan limit Data Type else must int long else inner Cond Type Data Type inner Cond Type Data Type int err Code String msg Limit expression must evaluate Long Integer Found Data Type find Type Name inner Cond Type msg Collector collect msg Message Type Error throw Type Checker Exception limit msg err Code Exception null try Compute schema limit get Schema catch Frontend Exception fe int err Code String msg Problem reading schemas inputs Limit msg Collector collect msg Message Type Error throw Type Checker Exception limit msg err Code Exception fe Return concatenated fields input operators one inputs schema construct output schema param cs throws Visitor Exception public void visit Cross cs throws Visitor Exception cs reset Schema try Compute schema cs get Schema catch Frontend Exception fe int err Code String msg Problem reading schemas inputs Cross msg Collector collect msg Message Type Error throw Type Checker Exception cs msg err Code Exception fe schema sort output sort input throws Frontend Exception public void visit Sort sort throws Frontend Exception sort reset Schema Type checking internal plans int sort get Sort Col Plans size Logical Expression Plan sort Col Plan sort get Sort Col Plans get Check inner plan output port sort Col Plan get Sources size int err Code String msg Sort inner plan one output leaf msg Collector collect msg Message Type Error throw Type Checker Exception sort msg err Code Exception null visit Expression Plan sort Col Plan sort try Compute schema sort get Schema catch Frontend Exception fee int err Code String msg Problem reconciling output schema Sort msg Collector collect msg Message Type Error throw Type Checker Exception sort msg err Code Exception fee schema rank output input plus rank field throws Frontend Exception public void visit Rank rank throws Frontend Exception rank reset Schema Type checking internal plans List Logical Expression Plan rank Col Plans rank get Rank Col Plans int rank Col Plans size Logical Expression Plan rank Col Plan rank Col Plans get Check inner plan output port rank Col Plan get Sources size int err Code String msg Rank inner plan one output leaf msg Collector collect msg Message Type Error throw Type Checker Exception rank msg err Code Exception null visit Expression Plan rank Col Plan rank try Compute schema rank get Schema catch Frontend Exception fee int err Code String msg Problem reconciling output schema Rank msg Collector collect msg Message Type Error throw Type Checker Exception rank msg err Code Exception fee schema split output split input public void visit Split split throws Visitor Exception Operator Plan lp split get Plan List Operator input List lp get Predecessors split input List size int err Code String msg Split one input Found input List size input throw Type Checker Exception split msg err Code Exception null split reset Schema try Compute schema split get Schema catch Frontend Exception fe int err Code String msg Problem reconciling output schema Split msg Collector collect msg Message Type Error throw Type Checker Exception split msg err Code Exception fe Join visitor throws Frontend Exception public void visit Join join throws Frontend Exception try join reset Schema join get Schema catch Frontend Exception fe int err Code String msg resolve Join output schema msg Collector collect msg Message Type Error throw Type Checker Exception join msg err Code Exception fe Multi Map Integer Logical Expression Plan join Col Plans join get Expression Plans List Operator inputs join get Inputs Logical Plan plan Type checking internal plans int inputs size Array List Logical Expression Plan inner Plans new Array List Logical Expression Plan join Col Plans get int j j inner Plans size j Logical Expression Plan inner Plan inner Plans get j Check inner plan output port inner Plan get Sources size int err Code String msg Join inner plans one output leaf msg Collector collect msg Message Type Error throw Type Checker Exception join msg err Code Exception null visit Expression Plan inner Plan join try Join Multi Cols join merge inner plan outputs know type group column byte group Type get Atomic Join Col Type join go inputs add cast necessary int inputs size Collection Logical Expression Plan expr Plans join get Join Plan one expression plan gets checked get Atomic Join Col Type Logical Expression Plan expr Plan expr Plans iterator next Checking inner Plan size already done byte inner Type Logical Expression expr Plan get Sources get get Type inner Type group Type insert Atomic Cast Inner Plan expr Plan join group Type else schema group key Logical Schema group Schema get Schema Inner Plans join get Expression Plans join go inputs add cast necessary int inputs size List Logical Expression Plan inner Plans new Array List Logical Expression Plan join get Join Plan int j j inner Plans size j Logical Expression Plan inner Plan inner Plans get j Logical Expression output Exp Logical Expression inner Plan get Sources get byte inner Type output Exp get Type byte expected Type group Schema get Field j type Data Type Atomic inner Type Data Type inner Type int err Code String msg Join inner plans one output leaf msg Collector collect msg Message Type Error throw Type Checker Exception join msg err Code Exception null inner Type expected Type insert Atomic Cast Inner Plan inner Plan join expected Type catch Frontend Exception fe int err Code String msg resolve Join output schema msg Collector collect msg Message Type Error throw Type Checker Exception join msg err Code Exception fe try join reset Schema join get Schema catch Frontend Exception fe int err Code String msg resolve Join output schema msg Collector collect msg Message Type Error throw Type Checker Exception join msg err Code Exception fe param join return true one join column input private boolean Join Multi Cols Join join Multi Map Integer Logical Expression Plan expr Plans join get Expression Plans expr Plans null expr Plans size throw new Assertion Error Join Join Multi Cols called join expression plans return expr Plans get size used get merged type output join col join col atomic type return type join col throws Frontend Exception private byte get Atomic Join Col Type Join join throws Frontend Exception Join Multi Cols join int err Code String msg get Atomic Join Col Type used dealing atomic group col throw new Frontend Exception msg err Code Exception false null byte group Type Data Type merge inner plan outputs know type group column int plan get Predecessors join size List Logical Expression Plan inner Plans new Array List Logical Expression Plan join get Join Plan inner Plans size int err Code String msg Group input number inner plans throw new Frontend Exception msg err Code Exception false null byte inner Type Logical Expression inner Plans get get Sources get get Type byte new Group Type Data Type merge Type group Type inner Type new Group Type int err Code String msg merge join keys incompatible types Outer Data Type find Type Name group Type inner Data Type find Type Name inner Type throw new Frontend Exception msg err Code Exception else group Type new Group Type return group Type used get merged type output join col join cogroup col atomic type return type join col throws Frontend Exception private byte get Atomic Col Type Multi Map Integer Logical Expression Plan Expr Plans throws Frontend Exception Multi Expr Plan Per Input Expr Plans int err Code String msg get Atomic Join Col Type used dealing atomic group col throw new Frontend Exception msg err Code Exception false null byte group Type Data Type merge inner plan outputs know type group column int Expr Plans size List Logical Expression Plan inner Plans new Array List Logical Expression Plan Expr Plans get inner Plans size int err Code String msg Group input number inner plans throw new Frontend Exception msg err Code Exception false null byte inner Type Logical Expression inner Plans get get Sources get get Type byte new Group Type Data Type merge Type group Type inner Type new Group Type int err Code String msg merge join keys incompatible types Outer Data Type find Type Name group Type inner Data Type find Type Name inner Type throw new Frontend Exception msg err Code Exception else group Type new Group Type return group Type private boolean Multi Expr Plan Per Input Multi Map Integer Logical Expression Plan expr Plans expr Plans null expr Plans size throw new Assertion Error Join Join Multi Cols called join expression plans return expr Plans get size Cast single output operator inner Plan Type param inner Plan param rel Op join cogroup param Type throws Frontend Exception private void insert Atomic Cast Inner Plan Logical Expression Plan inner Plan Logical Relational Operator rel Op byte Type throws Frontend Exception Data Type Usable Type Type int err Code String msg cast Data Type find Type Name Type throw Type Checker Exception rel Op msg err Code Exception null List Operator outputs inner Plan get Sources outputs size int err Code String msg Expected one output Found outputs size outputs throw Type Checker Exception rel Op msg err Code Exception null Logical Expression current Output Logical Expression outputs get Type Checking Exp Visitor collect Cast Warning rel Op current Output get Type Type msg Collector Logical Field Schema new new Logical Field Schema current Output get Field Schema alias null Type add cast new Cast Expression inner Plan current Output new visit modified inner plan visit Expression Plan inner Plan rel Op Create combined group join column schema based join cogroup expression plans inputs implementation based assumption inputs join col tuple arity param expr Plans return throws Frontend Exception private Logical Schema get Schema Inner Plans Multi Map Integer Logical Expression Plan expr Plans Logical Relational Operator op throws Frontend Exception fs List represents columns group tuple List Logical Field Schema fs List new Array List Logical Field Schema int output Schema Size expr Plans get size default bytearray type checking n care aliases int output Schema Size fs List add new Logical Field Schema null null Data Type merge inner plan outputs know type group column int expr Plans size List Logical Expression Plan inner Plans new Array List Logical Expression Plan expr Plans get int j j inner Plans size j Logical Expression e Op Logical Expression inner Plans get j get Sources get byte inner Type e Op get Type e Op instanceof Project Expression Project Expression e Op Project Star project star one expression plan int err Code String msg Grouping attributes either star list expressions msg Collector collect msg Message Type Error throw new Frontend Exception msg err Code Exception false null merge type Logical Field Schema group Fs fs List get j group Fs type Data Type merge Type group Fs type inner Type group Fs type Data Type String col Type join op instanceof Cogroup col Type group String msg col Type column j relation col Type statement datatype Data Type find Type Name inner Type incompatible type corresponding column earlier relation statement msg Collector collect msg Message Type Error Type Checker Exception ex new Type Checker Exception op msg Exception ex set Marked Show User true throw ex create schema field schemas Logical Schema tuple Schema new Logical Schema Logical Field Schema fs fs List tuple Schema add Field fs return tuple Schema Group group cols inputs type throws Frontend Exception Override public void visit Cogroup cg throws Frontend Exception try cg reset Schema cg get Schema catch Frontend Exception fe int err Code String msg resolve Group output schema msg Collector collect msg Message Type Error throw Type Checker Exception cg msg err Code Exception fe Multi Map Integer Logical Expression Plan group Plans cg get Expression Plans List Operator inputs cg get Inputs Logical Plan plan Type checking internal plans int inputs size List Logical Expression Plan inner Plans new Array List Logical Expression Plan cg get Expression Plans get int j j inner Plans size j Logical Expression Plan inner Plan inner Plans get j Check inner plan output port inner Plan get Sources size int err Code String msg Group inner plans one output leaf msg Collector collect msg Message Type Error throw Type Checker Exception cg msg err Code Exception null visit Expression Plan inner Plan cg try Co Group Multi Cols cg merge inner plan outputs know type group column byte group Type get Atomic Col Type cg get Expression Plans go inputs add cast necessary int inputs size List Logical Expression Plan inner Plans new Array List Logical Expression Plan cg get Expression Plans get Checking inner Plan size already done byte inner Type Logical Expression inner Plans get get Sources get get Type inner Type group Type insert Atomic Cast Inner Plan inner Plans get cg group Type else Logical Schema group Schema get Schema Inner Plans cg get Expression Plans cg go inputs add cast necessary int inputs size List Logical Expression Plan inner Plans new Array List Logical Expression Plan group Plans get int j j inner Plans size j Logical Expression Plan inner Plan inner Plans get j byte inner Type Logical Expression inner Plan get Sources get get Type byte expected Type Data Type Data Type Atomic inner Type Data Type inner Type int err Code String msg Sorry group complex types supported soon msg Collector collect msg Message Type Error throw Type Checker Exception cg msg err Code Exception null expected Type group Schema get Field j type inner Type expected Type insert Atomic Cast Inner Plan inner Plan cg expected Type catch Frontend Exception fe int err Code String msg resolve Group output schema msg Collector collect msg Message Type Error throw Type Checker Exception cg msg err Code Exception fe try cg reset Schema cg get Schema catch Frontend Exception fe int err Code String msg resolve Group output schema msg Collector collect msg Message Type Error throw Type Checker Exception cg msg err Code Exception fe param co Group return true one join column input private boolean Co Group Multi Cols Cogroup co Group Multi Map Integer Logical Expression Plan expr Plans co Group get Expression Plans expr Plans null expr Plans size throw new Assertion Error Co Group Join Multi Cols becalled join expression plans return expr Plans get size
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache import com google common collect Maps import org apache data Tuple import org apache tools pigstats Status Reporter import java io Exception import java lang reflect import java util Array List import java util List import java util Map Base class Fs functions Tuples generic type Handles marshalling objects basic error checking etc Also infers output Schema provides function verify input Tuple Extend class implement pre exec Tuple input pre method writting operates multiple inputs Tuple public abstract class Typed Output Eval Func extends Eval Func Used implement output Schema protected Class Type Class null public Class get Output Type Class return Type Class Suppress Warnings unchecked public Typed Output Eval Func Type Class Class get Type Arguments Typed Output Eval Func class get Class get Increment Hadoop counters bad inputs either null small protected void verify Input Tuple input int minimum Size throws Exception verify Udf Input get Counter Group input minimum Size Incremented counters use counter group Typically works fine since subclass name enough identify cases though e wrapper facade number different transformation functions specific group name needed protected String get Counter Group return get Class get Name Get actual type arguments child class used extend generic base class param base Class base class param child Class child class return list raw classes actual type arguments Suppress Warnings unchecked protected static List Class get Type Arguments Class base Class Class extends child Class Map Type Type resolved Types Maps new Hash Map Type type child Class start walking inheritance hierarchy hit base Class get Class type equals base Class type instanceof Class useful information us raw types keep going type Class type get Generic Superclass else Parameterized Type parameterized Type Parameterized Type type Class raw Type Class parameterized Type get Raw Type Type actual Type Arguments parameterized Type get Actual Type Arguments Type Variable type Parameters raw Type get Type Parameters int actual Type Arguments length resolved Types put type Parameters actual Type Arguments raw Type equals base Class type raw Type get Generic Superclass finally actual type argument provided base Class determine possible raw class type argument Type actual Type Arguments type instanceof Class actual Type Arguments Class type get Type Parameters else actual Type Arguments Parameterized Type type get Actual Type Arguments List Class type Arguments Classes new Array List Class resolve types chasing type variables Type base Type actual Type Arguments resolved Types contains Key base Type base Type resolved Types get base Type type Arguments Classes add get Class base Type return type Arguments Classes Get underlying class type null type variable type param type type return underlying class Suppress Warnings unchecked private static Class get Class Type type type instanceof Class return Class type else type instanceof Parameterized Type return get Class Parameterized Type type get Raw Type else type instanceof Generic Array Type Type component Type Generic Array Type type get Generic Component Type Class component Class get Class component Type component Class null return Array new Instance component Class get Class else return null else return null Increment Hadoop counters bad inputs either null small param klass name calling class recording purposes param input tuple passed param minimum Size minimum size required tuple protected static void verify Udf Input String klass Tuple input int minimum Size throws Exception input null safe Incr Counter klass Null Input throw new Exception Null input klass else input size minimum Size String reason Arguments Got input size Needed Least minimum Size safe Incr Counter klass reason throw new Exception enough arguments klass got input size expected least minimum Size else safe Incr Counter klass Valid Input protected static void safe Incr Counter String group String name Long increment Status Reporter get Instance incr Counter group name increment
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer plans import java util Hash Set import java util Set import org apache Load Func import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators Cast import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer relational Operators Load import org apache backend hadoop executionengine physical Layer relational Operators Store import org apache impl Context import org apache impl plan Depth First Walker import org apache impl plan Visitor Exception public class Udf Cache Ship Files Visitor extends Phy Plan Visitor private Set String cache Files new Hash Set String private Set String ship Files new Hash Set String public Udf Cache Ship Files Visitor Physical Plan plan super plan new Depth First Walker Physical Operator Physical Plan plan Override public void visit Load Load ld throws Visitor Exception ld get Cache Files null cache Files add ld get Cache Files ld get Ship Files null ship Files add ld get Ship Files Override public void visit Store Store st throws Visitor Exception st get Cache Files null cache Files add st get Cache Files st get Ship Files null ship Files add st get Ship Files public void visit User Func User Func udf throws Visitor Exception udf get Cache Files null cache Files add udf get Cache Files udf get Ship Files null ship Files add udf get Ship Files Override public void visit Cast Cast cast cast get Func Spec null Object obj Context instantiate Func Spec cast get Func Spec obj instanceof Load Func Load Func load Func Load Func obj load Func get Cache Files null cache Files add load Func get Cache Files load Func get Ship Files null ship Files add load Func get Ship Files public Set String get Cache Files return cache Files public Set String get Ship Files return ship Files
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache impl util import java io Exception import java io Serializable import java util Arrays import java util Hash Map import java util Properties import org apache commons logging Log import org apache commons logging Log Factory import org apache hadoop conf Configuration import org apache backend hadoop executionengine map Reduce Layer Configuration public class Context private static final Log Log Factory get Log Context class private Configuration jconf null private Hash Map Context Key Properties udf Confs private Properties client Sys Props static final String client sys props static final String udf context private static Thread Local Context tss new Thread Local Context Override public Context initial Value return new Context private Context udf Confs new Hash Map Context Key Properties return Thread Local link Context public static Context get Context return tss get internal use called user code public static void set Udf Context Context udf Context tss set udf Context internal use called user code Static Data Cleanup public static void static Data Cleanup tss new Thread Local Context Override public Context initial Value return new Context internal use called user code public Hash Map Context Key Properties get Udf Confs return udf Confs internal use called user code public void set Client System Props Properties properties client Sys Props properties Get System Properties Read client machine launched include command line properties passed launch time return client side System Properties including command line properties public Properties get Client System Props return client Sys Props Adds Job Conf singleton called backend Map Reduce functions Fs obtain Job Conf backend public void add Job Conf Configuration conf jconf conf Get Job Conf called backend return null frontend return Job Conf job copy Job Conf Nothing written kept system get Conf used recording specific information public Configuration get Job Conf jconf null return new Configuration jconf else return null Get properties object specific Note given called multiple times script instance passes different arguments provided different configuration object used loaders pass input object path separate instances loader Constructor arguments could also used available front back end Note used share information across instantiations function front end front end back end used share information instantiations map reduce instances back end runtime param c obtaining properties object param args String arguments make instance unique return reference properties object specific calling reference copy changes object automatically propogated instances calling function Suppress Warnings rawtypes public Properties get Properties Class c String args Context Key k generate Key c args Properties p udf Confs get k p null p new Properties udf Confs put k p return p Get properties object specific Note given called multiple times script provided configuration object make sure multiple instances stomp guaranteed properties object separate provided Note used share information across instantiations function front end front end back end used share information instantiations map reduce instances back end runtime param c obtaining properties object return reference properties object specific calling reference copy changes object automatically propogated instances calling function Suppress Warnings rawtypes public Properties get Properties Class c Context Key k generate Key c null Properties p udf Confs get k p null p new Properties udf Confs put k p return p Serialize specific information instance Job Conf function intended called front end preparation sending data backend param conf Job Conf serialize throws Exception underlying serialization throws public void serialize Configuration conf throws Exception conf set Object Serializer serialize udf Confs conf set Object Serializer serialize client Sys Props Internal use public String serialize try return Object Serializer serialize udf Confs catch Exception e error Context serialize throws error e return null Populate udf Confs field function intended called Map configure Reduce configure backend assumes add Job Conf already called throws Exception underlying deseralization throws Suppress Warnings unchecked public void deserialize throws Exception udf Confs Hash Map Context Key Properties Object Serializer deserialize jconf get client Sys Props Properties Object Serializer deserialize jconf get public void deserialize Spark String udf Confs Str String client Sys Props Str throws Exception udf Confs Str null client Sys Props Str null udf Confs Hash Map Context Key Properties Object Serializer deserialize udf Confs Str client Sys Props Properties Object Serializer deserialize client Sys Props Str private Context Key generate Key Class c String args return new Context Key c get Name args public void reset udf Confs clear public boolean Conf Empty return udf Confs Empty Convenience method code check runs see return boolean type value public boolean Frontend mapred task id mapreduce job application attempt id return jconf null jconf get Configuration null jconf get Configuration null Make shallow copy context Override public Context clone Context new Context client Sys Props client Sys Props jconf jconf udf Confs udf Confs return Class acts key hashmap Context holds class args udf implements equals hash Code static class Context Key implements Serializable private static final long serial Version private String class Name private String args Context Key String class Name String args class Name class Name args args String get Class Name return class Name String get Args return args Override public String String return Context Key class Name class Name args Arrays String args Override public int hash Code final int prime int result result prime result Arrays hash Code args result prime result class Name null class Name hash Code return result Override public boolean equals Object obj obj return true obj null return false get Class obj get Class return false Context Key Context Key obj Arrays equals args args return false class Name null class Name null return false else class Name equals class Name return false return true public Properties get Client Sys Props return client Sys Props
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine map Reduce Layer import org apache backend hadoop executionengine physical Layer Physical Operator import org apache backend hadoop executionengine physical Layer expression Operators User Func import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache impl plan Dependency Order Walker import org apache impl plan Visitor Exception public class End Input Needed Visitor extends Phy Plan Visitor private boolean needed false public End Input Needed Visitor Physical Plan plan super plan new Dependency Order Walker Physical Operator Physical Plan plan Override public void visit User Func User Func user Func throws Visitor Exception super visit User Func user Func user Func need End Input Processing needed true public boolean need End Input Processing return needed
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical optimizer import java util Collection import java util List import org apache impl logical Layer Frontend Exception import org apache impl util Multi Map import org apache newplan Dependency Order Walker import org apache newplan Operator Plan import org apache newplan Plan Walker import org apache newplan Reverse Dependency Order Walker import org apache newplan logical expression Expression Visitor import org apache newplan logical expression Logical Expression import org apache newplan logical expression Logical Expression Plan import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Split Output import org apache newplan logical relational Store import org apache newplan logical relational Stream import org apache newplan logical relational Union import org apache newplan logical relational Logical Relational Nodes Visitor public class Uid Resetter extends Logical Relational Nodes Visitor public Uid Resetter Operator Plan plan throws Frontend Exception super plan new Dependency Order Walker plan Override public void visit Load load throws Frontend Exception load reset Uid Override public void visit Filter filter throws Frontend Exception filter reset Uid Expression Uid Resetter uid Resetter new Expression Uid Resetter filter get Filter Plan uid Resetter visit Override public void visit Store store throws Frontend Exception store reset Uid Override public void visit Join join throws Frontend Exception join reset Uid Collection Logical Expression Plan join Plans join get Expression Plan Values Logical Expression Plan join Plan join Plans Expression Uid Resetter fs Resetter new Expression Uid Resetter join Plan fs Resetter visit Override public void visit foreach throws Frontend Exception foreach reset Uid Operator Plan inner Plan foreach get Inner Plan Plan Walker new Walker current Walker spawn Child Walker inner Plan push Walker new Walker current Walker walk pop Walker Override public void visit Generate gen throws Frontend Exception gen reset Uid List Logical Expression Plan gen Plans gen get Output Plans Logical Expression Plan gen Plan gen Plans Expression Uid Resetter fs Resetter new Expression Uid Resetter gen Plan fs Resetter visit Override public void visit Inner Load load throws Frontend Exception load reset Uid load get Projection reset Uid Override public void visit Cogroup lo Cogroup throws Frontend Exception lo Cogroup reset Uid Multi Map Integer Logical Expression Plan exp Plans lo Cogroup get Expression Plans Logical Expression Plan exp Plan exp Plans values Expression Uid Resetter uid Resetter new Expression Uid Resetter exp Plan uid Resetter visit Override public void visit Split lo Split throws Frontend Exception lo Split reset Uid Override public void visit Split Output lo Split Output throws Frontend Exception lo Split Output reset Uid Expression Uid Resetter uid Resetter new Expression Uid Resetter lo Split Output get Filter Plan uid Resetter visit Override public void visit Union lo Union throws Frontend Exception lo Union reset Uid Override public void visit Sort lo Sort throws Frontend Exception lo Sort reset Uid List Logical Expression Plan sort Plans lo Sort get Sort Col Plans Logical Expression Plan sort Plan sort Plans Expression Uid Resetter uid Resetter new Expression Uid Resetter sort Plan uid Resetter visit Override public void visit Rank lo Rank throws Frontend Exception lo Rank reset Uid List Logical Expression Plan rank Plans lo Rank get Rank Col Plans Logical Expression Plan rank Plan rank Plans Expression Uid Resetter uid Resetter new Expression Uid Resetter rank Plan uid Resetter visit Override public void visit Distinct lo Distinct throws Frontend Exception lo Distinct reset Uid Override public void visit Limit lo Limit throws Frontend Exception lo Limit reset Uid lo Limit get Limit Plan null Expression Uid Resetter uid Resetter new Expression Uid Resetter lo Limit get Limit Plan uid Resetter visit Override public void visit Cross lo Cross throws Frontend Exception lo Cross reset Uid Override public void visit Stream lo Stream throws Frontend Exception lo Stream reset Uid class Expression Uid Resetter extends Expression Visitor protected Expression Uid Resetter Operator Plan p throws Frontend Exception super p new Reverse Dependency Order Walker p Override protected void execute Logical Expression op throws Frontend Exception op reset Uid
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import java util List import org apache impl logical Layer Frontend Exception import org apache newplan Operator import org apache newplan Operator Plan Superclass unary expressions public abstract class Unary Expression extends Logical Expression add operator plan connect left right hand side operators param name operator param plan plan operator part param exp expression expression operators public Unary Expression String name Operator Plan plan Logical Expression exp super name plan plan add plan connect exp Get expression unary expression operators return expression left hand side throws Frontend Exception public Logical Expression get Expression throws Frontend Exception List Operator preds plan get Successors preds null return null return Logical Expression preds get
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop executionengine physical Layer expression Operators import java util Array List import java util List import org apache impl plan Operator Key import org apache backend hadoop executionengine physical Layer plans Phy Plan Visitor import org apache backend hadoop executionengine physical Layer plans Physical Plan import org apache backend hadoop executionengine physical Layer expression Operators Expression Operator import org apache impl plan Visitor Exception public abstract class Unary Expression Operator extends Expression Operator Expression Operator expr private transient List Expression Operator child public Unary Expression Operator Operator Key k int rp super k rp public Unary Expression Operator Operator Key k super k Override public boolean supports Multiple Inputs Auto generated method stub return false Set contained expression input value public void set Input Expr Physical Plan plan expr Expression Operator plan get Predecessors get Set contained expression explicitly mostly testing param e Expression contain public void set Expr Expression Operator e expr e Get contained expression return contained expression public Expression Operator get Expr return expr protected void clone Helper Unary Expression Operator op n clone reference something already plan expr op expr result Type op get Result Type Get child expression expression Override public List Expression Operator get Child Expressions child null child new Array List Expression Operator child add expr return child
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache data import java io Data Input import java io Data Output import java io Exception import java util List import org apache backend executionengine Exec Exception public class Unlimited Null Tuple extends Abstract Tuple Override public int size return Integer Override public Object get int field Num throws Exec Exception return null Override public List Object get throw new Runtime Exception Unimplemented Override public void set int field Num Object val throws Exec Exception throw new Exec Exception Unimplemented Override public void append Object val throw new Runtime Exception Unimplemented Override public long get Memory Size throw new Runtime Exception Unimplemented Override public void read Fields Data Input arg throws Exception throw new Exception Unimplemented Override public void write Data Output arg throws Exception throw new Exception Unimplemented Override public int compare Object throw new Runtime Exception Unimplemented
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical expression import java io Exception import java lang reflect Method import java util Array List import java util List import java util Properties import java util regex Matcher import java util regex Pattern import org apache Algebraic import org apache Eval Func import org apache Func Spec import org apache builtin Invoker Generator import org apache builtin Nondeterministic import org apache data Data Type import org apache data Schema Tuple Class Generator Gen Context import org apache data Schema Tuple Frontend import org apache impl Context import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache impl util Context import org apache newplan Operator import org apache newplan Operator Plan import org apache newplan Plan Visitor import org apache newplan logical Util import org apache newplan logical relational Logical Schema import org apache newplan logical relational Logical Schema Logical Field Schema import org apache parser Logical Plan Builder import org apache parser Source Location import com google common base Joiner import com google common collect Lists public class User Func Expression extends Logical Expression private Func Spec Func Spec private Eval Func ef null private String signature private static int sig Seq private boolean via Define false represents whether function instantiate via statement public User Func Expression Operator Plan plan Func Spec func Spec super User Func plan Func Spec func Spec plan add signature null signature Integer String sig Seq public User Func Expression Operator Plan plan Func Spec func Spec List Logical Expression args plan func Spec Logical Expression arg args plan connect arg public User Func Expression Operator Plan plan Func Spec func Spec boolean via Define plan func Spec via Define via Define public User Func Expression Operator Plan plan Func Spec func Spec List Logical Expression args boolean via Define plan func Spec args via Define via Define private boolean lazily Initialize Invoker Function false private List Logical Expression save Args Later null private boolean invoker Static false private String func Name null private String package Name null public User Func Expression Operator Plan plan Func Spec func Spec List Logical Expression args boolean via Define boolean lazily Initialize Invoker Function boolean invoker Static String package Name String func Name plan func Spec args via Define save Args Later args lazily Initialize Invoker Function lazily Initialize Invoker Function package Name package Name func Name func Name invoker Static invoker Static public Func Spec get Func Spec return Func Spec Override public void accept Plan Visitor v throws Frontend Exception v instanceof Logical Expression Visitor throw new Frontend Exception Expected Logical Expression Visitor Logical Expression Visitor v visit Override public boolean Equal Operator throws Frontend Exception purpose optimization rules specially Logical Expression Simplifier non deterministic udf equal another returning false cases Note function also invoked implementations Operator Plan Equal function called test cases compare logical plans return false even plans clones Deterministic return false instanceof User Func Expression User Func Expression exp User Func Expression Func Spec equals exp Func Spec return false List Operator Succs get Plan get Successors List Operator Succs get Plan get Successors Succs null Succs null Succs null Succs null return true else one udfs null successors return false Succs size Succs size return false int Succs size Succs get Equal Succs get return false return true else return false public boolean Deterministic throws Frontend Exception Class udf Class try udf Class Context resolve Class Name get Func Spec get Class Name catch Exception ioe throw new Frontend Exception instantiate get Func Spec ioe udf Class get Annotation Nondeterministic class null return true return false public List Logical Expression get Arguments throws Frontend Exception List Operator successors null List Logical Expression args new Array List Logical Expression try successors plan get Successors successors null return args Operator lo successors args add Logical Expression lo catch Frontend Exception e return args return args param func Spec Func Spec set public void set Func Spec Func Spec func Spec Func Spec func Spec ef Eval Func Context instantiate Func Spec Func Spec Override public Logical Schema Logical Field Schema get Field Schema throws Frontend Exception field Schema null return field Schema Logical Schema input Schema new Logical Schema List Operator succs plan get Successors succs null Operator lo succs Logical Expression lo get Field Schema null input Schema null break input Schema add Field Logical Expression lo get Field Schema lazily Initialize Invoker Function initialize Invoker Function Since ef set one time never change value optimize instantiate significantly optimize performance frontend ef null ef Eval Func Context instantiate Func Spec Func Spec ef set Context Signature signature Schema translated Input Schema Util translate Schema input Schema translated Input Schema null Properties props Context get Context get Properties ef get Class props put evalfunc inputschema signature translated Input Schema ef instanceof Algebraic case Algebraic func set original input Schema Initial Intermed Final String func new String Algebraic ef get Initial Algebraic ef get Intermed Algebraic ef get Final Class c Context instantiate Func Spec new Func Spec func get Class props Context get Context get Properties c props put evalfunc inputschema signature translated Input Schema Store input Schema context ef set Input Schema translated Input Schema Schema udf Schema ef output Schema translated Input Schema udf Schema null udf Schema size throw new Frontend Exception Given returns improper Schema Schema contain one field Tuple Bag single type Returns udf Schema appendability come setting Schema Tuple Frontend register Generate Possible translated Input Schema false Gen Context Schema Tuple Frontend register Generate Possible udf Schema false Gen Context udf Schema null Schema Field Schema fs udf Schema size fs new Schema Field Schema null null Data Type find Type ef get Return Type else udf Schema size fs new Schema Field Schema udf Schema get Field else fs new Schema Field Schema null udf Schema Data Type field Schema Util translate Field Schema fs field Schema normalize else field Schema new Logical Schema Logical Field Schema null null Data Type find Type ef get Return Type uid Field Schema field Schema merge Uid uid Field Schema return field Schema private void initialize Invoker Function List Logical Field Schema field Schemas Lists new Array List Logical Expression le save Args Later try field Schemas add le get Field Schema catch Frontend Exception e throw new Runtime Exception e Class func Class invoker Static try func Class Context resolve Class Name package Name catch Exception e throw new Runtime Exception Invoker function name found package Name e else func Class Data Type find Type Class field Schemas get type func Class Primitive func Class Logical Plan Builder type Class func Class Class parameter Types new Class field Schemas size invoker Static int idx int invoker Static field Schemas size parameter Types idx Data Type find Type Class field Schemas get type List Integer primitive Parameters Lists new Array List int parameter Types length parameter Types Primitive primitive Parameters add int tries primitive Parameters size Method null int tries Class tmp Parameter Types new Class parameter Types length int j j parameter Types length j tmp Parameter Types j parameter Types j int tmp int idx tmp tmp int Flip primitive Parameters get idx tmp Parameter Types Flip Logical Plan Builder type Class tmp Parameter Types Flip tmp idx try func Class get Method func Name parameter Types null parameter Types tmp Parameter Types break catch Security Exception e throw new Runtime Exception allowed access method func Name class func Class e catch Method Exception e continue searching match post boxing null throw new Runtime Exception Given method func Name exist class func Class String ctor Args new String ctor Args func Class get Name ctor Args func Name ctor Args List String params Lists new Array List Class param parameter Types params add param get Name ctor Args Joiner join params need allow define function cached etc esp reuse Func Spec new Func Spec Invoker Generator class get Name ctor Args lazily Initialize Invoker Function false need fix use updated code currently wo n copy properly called done maybe ok Override public Logical Expression deep Copy Logical Expression Plan lg Exp Plan throws Frontend Exception User Func Expression copy null try copy new User Func Expression lg Exp Plan get Func Spec clone via Define copy signature signature Deep copy input expressions List Operator inputs plan get Successors inputs null Operator op inputs Logical Expression input Logical Expression op Logical Expression input Copy input deep Copy lg Exp Plan lg Exp Plan add input Copy lg Exp Plan connect copy input Copy catch Clone Supported Exception e e print Stack Trace copy set Location new Source Location location return copy public String String String Builder msg new String Builder msg append Name name get Func Spec Type field Schema null msg append Data Type find Type Name field Schema type else msg append null msg append Uid field Schema null msg append field Schema uid else msg append null msg append return msg String public String get Signature return signature public boolean Via Define return via Define public Eval Func get Eval Func ef null ef Eval Func Context instantiate Func Spec Func Spec return ef
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache builtin import java io Byte Array Input Stream import java io Byte Array Output Stream import java io Exception import java io Pushback Input Stream import java math Big Decimal import java math Big Integer import java util Arrays import java util Deque import java util Hash Map import java util Linked List import java util Map import org apache commons logging Log import org apache commons logging Log Factory import org apache Load Store Caster import org apache Warning import org apache Resource Schema Resource Field Schema import org apache data Bag Factory import org apache data Data Bag import org apache data Data Byte Array import org apache data Data Type import org apache data Default Bag Factory import org apache data Tuple import org apache data Tuple Factory import org apache impl util Log Utils import org joda time Date Time abstract class provides standard conversions utf encoded data data types intended extended load store functions link Storage public class Utf Storage Converter implements Load Store Caster protected Bag Factory Bag Factory Bag Factory get Instance protected Tuple Factory Tuple Factory Tuple Factory get Instance protected final Log Log Log Factory get Log get Class private static final Integer Max Int Integer value Integer private static final Integer Min Int Integer value Integer private static final Long Max Long Long value Long private static final Long Min Long Long value Long private static final int public Utf Storage Converter private char find Start Char char start throws Exception switch start case return case return case return default throw new Exception Unknown start character private Data Bag consume Bag Pushback Input Stream Resource Field Schema field Schema throws Exception field Schema null throw new Exception Schema null Resource Field Schema fss field Schema get Schema get Fields Tuple int buf buf read buf throw new Exception Unexpect end bag fss length throw new Exception tuple allowed inside bag schema Resource Field Schema fs fss Data Bag db Default Bag Factory get Instance new Default Bag true consume Tuple fs null db add buf read buf buf throw new Exception Unexpect end bag buf break return db private Tuple consume Tuple Pushback Input Stream Resource Field Schema field Schema throws Exception field Schema null throw new Exception Schema null int buf Byte Array Output Stream buf read buf buf throw new Exception Unexpect end tuple buf unread buf return null Tuple Tuple Factory get Instance new Tuple field Schema get Schema null field Schema get Schema get Fields length Resource Field Schema fss field Schema get Schema get Fields Interpret item inside tuple one one based inner schema int fss length Object field Resource Field Schema fs fss int delimit fss length delimit Data Type Complex fs get Type field consume Complex Type fs buf read delimit buf throw new Exception Unexpect end tuple else new Byte Array Output Stream buf read delimit buf throw new Exception Unexpect end tuple buf delimit break write buf field parse Simple Type Byte Array fs append field else inner schema treat everything inside tuple bytearray Deque Character level new Linked List Character keep track nested tuple bag map interpret save bytearray new Byte Array Output Stream true buf read buf throw new Exception Unexpect end tuple buf buf buf level push char buf write buf else buf level Empty End tuple Data Byte Array value new Data Byte Array Byte Array append value break else buf level Empty Data Byte Array value new Data Byte Array Byte Array append value reset else buf buf buf level peek find Start Char char buf level pop else throw new Exception Malformed tuple write buf else write buf return private Map String Object consume Map Pushback Input Stream Resource Field Schema field Schema throws Exception int buf boolean empty Map true buf read buf throw new Exception Unexpect end map Hash Map String Object new Hash Map String Object Byte Array Output Stream new Byte Array Output Stream true Read key assume key contains special character buf read end map empty Map buf return buf throw new Exception Unexpect end map empty Map false write buf String key bytes Char Array Byte Array key length throw new Exception Map key null Read value reset Deque Character level new Linked List Character keep track nested tuple bag map interpret save bytearray true buf read buf throw new Exception Unexpect end map buf buf buf level push char buf else buf level Empty End map break else buf buf buf level Empty throw new Exception Malformed map level peek find Start Char char buf level pop else buf level Empty Current map item complete break write buf Object value null field Schema null field Schema get Schema null size value bytes Object Byte Array field Schema get Schema get Fields else size untyped map value new Data Byte Array Byte Array put key value reset buf break return private Object bytes Object byte b Resource Field Schema fs throws Exception Object field Data Type Complex fs get Type Byte Array Input Stream bis new Byte Array Input Stream b Pushback Input Stream new Pushback Input Stream bis field consume Complex Type fs else field parse Simple Type b fs return field private Object consume Complex Type Pushback Input Stream Resource Field Schema complex Field Schema throws Exception Object field switch complex Field Schema get Type case Data Type field consume Bag complex Field Schema break case Data Type field consume Tuple complex Field Schema break case Data Type field consume Map complex Field Schema break default throw new Exception Unknown complex data type return field private Object parse Simple Type byte b Resource Field Schema simple Field Schema throws Exception Object field switch simple Field Schema get Type case Data Type field bytes Integer b break case Data Type field bytes Long b break case Data Type field bytes Float b break case Data Type field bytes Double b break case Data Type field bytes Char Array b break case Data Type field new Data Byte Array b break case Data Type field bytes Boolean b break case Data Type field bytes Big Integer b break case Data Type field bytes Big Decimal b break case Data Type field bytes Date Time b break default throw new Exception Unknown simple data type return field Override public Data Bag bytes Bag byte b Resource Field Schema schema throws Exception b null return null Data Bag db try Byte Array Input Stream bis new Byte Array Input Stream b Pushback Input Stream new Pushback Input Stream bis db consume Bag schema catch Exception e Log Utils warn Unable interpret value Arrays String b field converted type bag caught Parse Exception e get Message field discarded Warning Log return null return db Override public String bytes Char Array byte b throws Exception b null return null return new String b Override public Double bytes Double byte b b null b length return null try return Double value new String b catch Number Format Exception nfe Log Utils warn Unable interpret value Arrays String b field converted double caught Number Format Exception nfe get Message field discarded Warning Log return null Override public Float bytes Float byte b throws Exception b null b length return null String b length b b length b b length f new String b b length else new String b try return Float value catch Number Format Exception nfe Log Utils warn Unable interpret value Arrays String b field converted float caught Number Format Exception nfe get Message field discarded Warning Log return null Override public Boolean bytes Boolean byte b throws Exception b null return null String new String b equals Ignore Case true return Boolean else equals Ignore Case false return Boolean else return null Sanity check whether number valid integer long param number number check return true n contain invalid characters e contains digits private static boolean sanity Check Integer Long String number int number length number char number char number char valid one else contains invalid characters must integer long return false return true Override public Integer bytes Integer byte b throws Exception b null b length return null String new String b trim Integer ret null See Using exception handling check double expensive write sanity check sanity Check Integer Long try ret Integer value catch Number Format Exception nfe ret null possible field interpreted double Unfortunately Java n handle Integer value need try convert double works go int try Double Double value Need check overflow error Double compare double Value Max Int double Value Double compare double Value Min Int double Value Log Utils warn Value large integer Warning Log return null return Integer value int Value catch Number Format Exception nfe Log Utils warn Unable interpret value Arrays String b field converted int caught Number Format Exception nfe get Message field discarded Warning Log return null return ret Override public Long bytes Long byte b throws Exception b null b length return null String new String b trim ends l ends substring length See Using exception handling check double expensive write sanity check Long ret null sanity Check Integer Long try ret Long value catch Number Format Exception nfe ret null possible field interpreted double Unfortunately Java n handle Long value need try convert double works go long try Double Double value Need check overflow error Double compare double Value Max Long double Value Double compare double Value Min Long double Value Log Utils warn Value large long Warning Log return null return Long value long Value catch Number Format Exception nfe Log Utils warn Unable interpret value Arrays String b field converted long caught Number Format Exception nfe get Message field discarded Warning Log return null return ret Override public Date Time bytes Date Time byte b throws Exception b null return null try String dt Str new String b return Date extract Date Time dt Str catch Illegal Argument Exception e Log Utils warn Unable interpret value Arrays String b field converted datetime caught Illegal Argument Exception e get Message field discarded Warning Log return null Override public Map String Object bytes Map byte b Resource Field Schema field Schema throws Exception b null return null Map String Object map try Byte Array Input Stream bis new Byte Array Input Stream b Pushback Input Stream new Pushback Input Stream bis map consume Map field Schema catch Exception e Log Utils warn Unable interpret value Arrays String b field converted type map caught Parse Exception e get Message field discarded Warning Log return null return map Override public Tuple bytes Tuple byte b Resource Field Schema field Schema throws Exception b null return null Tuple try Byte Array Input Stream bis new Byte Array Input Stream b Pushback Input Stream new Pushback Input Stream bis consume Tuple field Schema catch Exception e Log Utils warn Unable interpret value Arrays String b field converted type tuple caught Parse Exception e get Message field discarded Warning Log return null return Override public Big Integer bytes Big Integer byte b throws Exception b null b length return null return new Big Integer new String b Override public Big Decimal bytes Big Decimal byte b throws Exception b null b length return null return new Big Decimal new String b Override public byte Bytes Data Bag bag throws Exception return bag String get Bytes Override public byte Bytes String throws Exception return get Bytes Override public byte Bytes Double throws Exception return String get Bytes Override public byte Bytes Float f throws Exception return f String get Bytes Override public byte Bytes Integer throws Exception return String get Bytes Override public byte Bytes Long l throws Exception return l String get Bytes Override public byte Bytes Boolean b throws Exception return b String get Bytes Override public byte Bytes Date Time dt throws Exception return dt String get Bytes Override public byte Bytes Map String Object throws Exception return Data Type map String get Bytes Override public byte Bytes Tuple throws Exception return String get Bytes Override public byte Bytes Data Byte Array throws Exception return get Override public byte Bytes Big Integer bi throws Exception return bi String get Bytes Override public byte Bytes Big Decimal bd throws Exception return bd String get Bytes
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache newplan logical import java util Array List import java util Linked List import java util List import java util Set import org apache impl logical Layer Frontend Exception import org apache impl logical Layer schema Schema import org apache newplan Dependency Order Walker import org apache newplan Operator import org apache newplan logical expression Logical Expression Plan import org apache newplan logical expression Project Expression import org apache newplan logical relational Cogroup import org apache newplan logical relational Cross import org apache newplan logical relational Cube import org apache newplan logical relational Distinct import org apache newplan logical relational Filter import org apache newplan logical relational import org apache newplan logical relational Generate import org apache newplan logical relational Inner Load import org apache newplan logical relational Join import org apache newplan logical relational Limit import org apache newplan logical relational Load import org apache newplan logical relational Native import org apache newplan logical relational Rank import org apache newplan logical relational Sort import org apache newplan logical relational Split import org apache newplan logical relational Split Output import org apache newplan logical relational Store import org apache newplan logical relational Stream import org apache newplan logical relational Union import org apache newplan logical relational Logical Plan import org apache newplan logical relational Logical Relational Nodes Visitor import org apache newplan logical relational Logical Relational Operator import org apache newplan logical relational Logical Schema import com google common collect Lists public class Util public static Logical Schema translate Schema Schema schema schema null return null Logical Schema new Logical Schema List Schema Field Schema schema get Fields Schema Field Schema f Logical Schema Logical Field Schema f new Logical Schema Logical Field Schema f alias translate Schema f schema f type add Field f return public static Logical Schema Logical Field Schema translate Field Schema Schema Field Schema fs Logical Schema new Schema null fs schema null new Schema translate Schema fs schema Logical Schema Logical Field Schema new Fs new Logical Schema Logical Field Schema fs alias new Schema fs type return new Fs function translates new Logical Schema old Schema format required Physical Operators param schema Logical Schema converted Schema return Schema converted Logical Schema throws Frontend Exception public static Schema translate Schema Logical Schema schema schema null return null Schema new Schema List Logical Schema Logical Field Schema schema get Fields Logical Schema Logical Field Schema f Schema Field Schema f null try f new Schema Field Schema f alias translate Schema f schema f type f canonical Name Long f uid String add f catch Frontend Exception e return schema argument fields bag contain tuple schema inserts tuple schema inner levels eg bag int bag int param sch return modified schema throws Frontend Exception public static Schema fix Schema Add Tuple Bag Schema sch throws Frontend Exception Logical Schema log Sch translate Schema sch log Sch normalize return translate Schema log Sch public static Schema Field Schema translate Field Schema Logical Schema Logical Field Schema fs fs null return null Schema new Schema null fs schema null new Schema translate Schema fs schema Schema Field Schema new Fs null try new Fs new Schema Field Schema null new Schema fs type catch Frontend Exception e return new Fs public static add Logical Plan plan Logical Relational Operator op int branch Set Integer columns Drop throws Frontend Exception foreach new plan plan add foreach List Operator next plan get Successors op next null Logical Relational Operator next Op Logical Relational Operator next get branch plan insert op foreach next Op foreach set Alias op get Alias else plan connect op foreach Logical Plan inner Plan new Logical Plan foreach set Inner Plan inner Plan Logical Schema schema op get Schema build foreach inner plan List Logical Expression Plan exps new Array List Logical Expression Plan Generate gen new Generate inner Plan exps new boolean schema size columns Drop size inner Plan add gen int j schema size columns Drop contains continue Inner Load inner Load new Inner Load inner Plan foreach inner Plan add inner Load inner Plan connect inner Load gen Logical Expression Plan exp new Logical Expression Plan Project Expression prj new Project Expression exp j gen exp add prj exps add exp return foreach Returns Linked List operators contained within physical plan implement supplied class dependency order Returns empty Linked List operators exist param plan param op Class return Linked List operators contained within plan implement supplied class empty ops exist throws Frontend Exception public static extends Logical Relational Operator Linked List get Logical Relational Operators Logical Plan plan Class op Class throws Frontend Exception Op Finder finder new Op Finder plan op Class finder visit return finder get Found Ops private static class Op Finder extends Logical Relational Operator extends Logical Relational Nodes Visitor final Class op Class private Linked List found Ops Lists new Linked List public Op Finder Logical Plan plan Class op Class throws Frontend Exception super plan new Dependency Order Walker plan op Class op Class public Linked List get Found Ops return found Ops Suppress Warnings unchecked private void visit Op Logical Relational Operator op op Class Assignable op get Class found Ops add op public void visit Load load throws Frontend Exception visit Op load Override public void visit Filter filter throws Frontend Exception visit Op filter Override public void visit Store store throws Frontend Exception visit Op store Override public void visit Join join throws Frontend Exception visit Op join Override public void visit foreach throws Frontend Exception visit Op foreach Override public void visit Generate gen throws Frontend Exception visit Op gen Override public void visit Inner Load load throws Frontend Exception visit Op load Override public void visit Cube cube throws Frontend Exception visit Op cube Override public void visit Cogroup lo Cogroup throws Frontend Exception visit Op lo Cogroup Override public void visit Split lo Split throws Frontend Exception visit Op lo Split Override public void visit Split Output lo Split Output throws Frontend Exception visit Op lo Split Output Override public void visit Union lo Union throws Frontend Exception visit Op lo Union Override public void visit Sort lo Sort throws Frontend Exception visit Op lo Sort Override public void visit Rank lo Rank throws Frontend Exception visit Op lo Rank Override public void visit Distinct lo Distinct throws Frontend Exception visit Op lo Distinct Override public void visit Limit lo Limit throws Frontend Exception visit Op lo Limit Override public void visit Cross lo Cross throws Frontend Exception visit Op lo Cross Override public void visit Stream lo Stream throws Frontend Exception visit Op lo Stream Override public void visit Native native throws Frontend Exception visit Op native
Licensed Apache Software Foundation one contributor license agreements See file distributed work additional information regarding copyright ownership licenses file Apache License Version License may use file except compliance License may obtain copy License http www apache org licenses Unless required applicable law agreed writing software distributed License distributed either express implied See License specific language governing permissions limitations License package org apache backend hadoop accumulo import java io Buffered Output Stream import java io File import java io File Input Stream import java io File Output Stream import java io Exception import java io Input Stream import java net import java net Decoder import java text Message Format import java util Enumeration import java util Hash Map import java util Hash Set import java util Map import java util Set import java util jar Jar File import java util jar Jar Output Stream import java util jar Manifest import java util zip Zip Entry import java util zip Zip File import java util zip Zip Output Stream import org apache hadoop conf Configuration import org apache hadoop fs File System import org apache hadoop fs Path import org apache hadoop util Jar Finder import org apache hadoop util String Utils import org apache log j Logger import com google common base Preconditions public class Utils private static final Logger log Logger get Logger Utils class Thanks Base public static void add Dependency Jars Configuration conf Class classes throws Exception File System local Fs File System get Local conf Set String jars new Hash Set String Add jars already tmpjars variable jars add conf get String Collection tmpjars add jars find map contents jar name avoid creating new jars classes already packaged Map String String packaged Classes new Hash Map String String Add jars containing specified classes Class clazz classes clazz null continue Path path find Create Jar clazz local Fs packaged Classes path null log warn Could find jar class clazz order ship cluster continue local Fs exists path log warn Could validate jar file path class clazz continue jars add path String jars Empty return conf set tmpjars String Utils array String jars Array new String jars size org apache hadoop util Jar Finder available hadoop finds Jar class creates n exist class directory classpath creates Jar fly contents directory returns path Jar Jar created created system temporary directory Otherwise returns existing jar contains class name Maintains mapping jar contents tmp jar created param class class find param fs File System qualify returned path param packaged Classes map class name path return jar file contains class throws Exception private static Path find Create Jar Class class File System fs Map String String packaged Classes throws Exception attempt locate existing jar class String jar find Containing Jar class packaged Classes null jar jar Empty jar Jar Finder get Jar class update Map jar packaged Classes null jar jar Empty return null log debug String format class using jar class get Name jar return new Path jar make Qualified fs Add entries code packaged Classes code corresponding class files contained code jar code param jar jar content list param packaged Classes map class jar private static void update Map String jar Map String String packaged Classes throws Exception null jar jar Empty return Zip File zip null try zip new Zip File jar Enumeration extends Zip Entry iter zip entries iter Elements Zip Entry entry iter next Element entry get Name ends class packaged Classes put entry get Name jar finally null zip zip close Find jar contains class name return jar file even first thing class path class name Looks first classpath code packaged Classes code map param class class find return jar file contains class null throws Exception private static String find Containing Jar Class class Map String String packaged Classes throws Exception Class Loader loader class get Class Loader String class file class get Name replace class first search classpath Enumeration itr loader get Resources class file itr Elements url itr next Element jar equals url get Protocol String Return url get Path Return starts file Return Return substring file length Decoder misnamed class since actually decodes x www form urlencoded type rather actual encoding file path Therefore would decode incorrect spaces actually either unencoded encoded Replace first kept sacred decoding process Return Return replace Return Decoder decode Return return Return replace look jars packaged using Jar Finder Returns null jar found return packaged Classes get class file Returns full path Jar containing class always return param klass class return path Jar containing class Suppress Warnings rawtypes public static String jar Finder Get Jar Class klass Preconditions check Null klass klass Class Loader loader klass get Class Loader loader null String class file klass get Name replace class try Enumeration itr loader get Resources class file itr Elements url itr next Element String path url get Path path starts file path path substring file length path Decoder decode path jar equals url get Protocol path Decoder decode path return path replace else file equals url get Protocol String klass Name klass get Name klass Name klass Name replace class path path substring path length klass Name length File base Dir new File path File test Dir new File System get Property test build dir target test dir test Dir test Dir get Absolute File test Dir exists test Dir mkdirs File temp Jar File create Temp File hadoop test Dir temp Jar new File temp Jar get Absolute Path jar create Jar base Dir temp Jar return temp Jar get Absolute Path catch Exception e throw new Runtime Exception e return null private static void copy Zip Stream Input Stream Zip Entry entry Zip Output Stream zos throws Exception zos put Next Entry entry byte arr new byte int read read arr read zos write arr read read read arr public static void jar Dir File dir String relative Path Zip Output Stream zos throws Exception Preconditions check Null relative Path relative Path Preconditions check Null zos zos spec manifest must first entry File manifest File new File dir Jar File Zip Entry manifest Entry new Zip Entry Jar File manifest File exists zos put Next Entry manifest Entry new Manifest write new Buffered Output Stream zos zos close Entry else Input Stream new File Input Stream manifest File try copy Zip Stream manifest Entry zos finally null close zos null zos close Entry zos close Entry zip Dir dir relative Path zos true zos close private static void zip Dir File dir String relative Path Zip Output Stream zos boolean start throws Exception String dir List dir list String Dir List dir List File f new File dir Dir List f Hidden f Directory start Zip Entry dir Entry new Zip Entry relative Path f get Name zos put Next Entry dir Entry zos close Entry String file Path f get Path File file new File file Path zip Dir file relative Path f get Name zos false else String path relative Path f get Name path equals Jar File Zip Entry Entry new Zip Entry path Input Stream new File Input Stream f try copy Zip Stream Entry zos finally null close zos null zos close Entry private static void create Jar File dir File jar File throws Exception Preconditions check Null dir dir Preconditions check Null jar File jar File File jar Dir jar File get Parent File jar Dir exists jar Dir mkdirs throw new Exception Message Format format could create dir jar Dir Jar Output Stream zos new Jar Output Stream new File Output Stream jar File jar Dir dir zos
