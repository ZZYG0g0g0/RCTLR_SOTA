package smos bean import java io Serializable import java util Date public class Absence implements Serializable Class that models the absence of a student author Nicola Pisanti version private static final long serial Version private int id Absence private int id User private Date date Absence private Integer id Justify private int academic Year public Absence Method that returns the id of absence return an integer representing the id of the absence public int get Id Absence return id Absence Method setting the id of absence param an integer representing the id to be set public void set Id Absence int p Id Absence this id Absence p Id Absence Method that returns the student id relative to the absence return an integer representing the id of the absent student public int get Id User return id User Method setting student id relative to absence param an integer representing the id to be set public void set Id User int p Id User this id User p Id User Method that returns the date of absence return a string representing the date of absence public Date get Date Absence return date Absence Method setting the date of absence param a string with the date to set public void set Date Absence Date p Date Absence this date Absence p Date Absence Method that returns the id of the justification relative to the absence return an integer representing the id of the justification relative to the absence or null if the absence was not justified public Integer get Id Justify return id Justify Method setting the id of the justification relative to the absence param an integer representing the id of the justify to be set public void set Id Justify Integer p Id Justify this id Justify p Id Justify Method that returns the academic year relative to absence return an integer representing the year in which the academic year began public int get Academic Year return academic Year Method setting the academic year relative to absence param an integer representing the academic year to be set public void set Academic Year int p Academic Year this academic Year p Academic Year 
Adaptor Exception package smos storage connection Management exception import java rmi Remote Exception Thrown when a problem occurs running code in ensj public class Adaptor Exception extends Remote Exception private static final long serial Version public Adaptor Exception super param p Message public Adaptor Exception String p Message super p Message build Label param p Message param p Parent Exception public Adaptor Exception String p Message Exception p Parent Exception super p Message build Label p Parent Exception param p Parent Exception public Adaptor Exception Exception p Parent Exception super build Label p Parent Exception private static String build Label return 
package smos bean import java io Serializable Class used to model an address public class Address implements Serializable private static final long serial Version private int id Address private String name The class builder public Address this id Address return address id public int get Id Address return id Address Set the address id param p Id Address the id to set public void set Id Address int p Id Address this id Address p Id Address return the address name public String get Name return name Set address name param p Name Name to set public void set Name String p Name this name p Name 
package smos bean import java io Serializable public class Classroom implements Serializable Class used to model a class author Nicola Pisanti version private static final long serial Version private int id Classroom Class Id private int id Address Address private String name Class name private int academic Year Academic year of the class to include the year of the first semester public Classroom this id Address this id Classroom Method returning the academic year return whole representing the school year of the first semester of the class public int get Academic Year return academic Year Method that sets the academic year param The new academic year to be set public void set Academic Year int p Academic Year this academic Year p Academic Year Method to get the class address return an integer representing the class address public int get Id Address return id Address Method setting class address param The new to set public void set Id Address int p Id Address this id Address p Id Address Method that returns the class return an integer representing the class public int get Id Classroom return id Classroom Method setting class param The new to set public void set Id Classroom int p Id Classroom this id Classroom p Id Classroom Method that returns the class name return a string representing the class name public String get Name return name Method setting class name param The new name to set public void set Name String p Name this name p Name public String to String return name academic Year id Classroom 
package smos exception import java lang Exception This class represents the exception generated when it is not possible get a connection to the database public class Connection Exception extends Exception private static final long serial Version Generate the exception without an associated error message public Connection Exception super Unable to Connect to the Data Base Generate the exception with an associated error message param p Message The error message to be associated with the exception public Connection Exception String p Message super p Message 
Connection Pool Data Source package smos storage connection Management import smos storage connection Management exception Not Implemented Yet Exception import java io Print Writer import java sql Connection import java sql Driver import java sql Driver Manager import java sql Exception import java util List import java util Properties import java util Vector import javax sql Data Source Realization of the connection pool through the implementation of the java interface sql Data Source The pool periodically monitors the active connections and those that are pools i e those released but still usable present i e in memory The release time of the active connections and those pools are represented by two parameters present within the class and which are connection Pool Close Timeout and inactive Max Timeout such values as well as all the others relating to the pool have their default value parameterizable via the file of properties connection properties public class Connection Pool Data Source implements Data Source Thread inside of the Connection Pool Data Source class that establishes each connection Pool Close Timeout milliseconds the release of connections pool private class Connection Closer extends Thread private long connection Action Timestamp private int connection Pool Close Timeout private long time Stamp Builder setting the release time of pool connections author Di Giorgio Domenico Cris Malinconico param p Time time interval within which the pool empties the list pool connections private Connection Closer int p Time set Daemon true set Name Connection Pool Closer if p Time this connection Pool Close Timeout p Time Each time a connection generates an event with an invocation of get Connection or release timestamp is set to value current time using this method public void connection Event this connection Action Timestamp System current Time Millis Check every connection Pool Close Timeout milliseconds if the pool connections can be closed thus freeing up memory public void run boolean working true while working try this time Stamp System current Time Millis Thread sleep this connection Pool Close Timeout if this connection Action Timestamp this time Stamp close All Connections Connection Pool Data Source this pool catch Interrupted Exception e working false e print Stack Trace catch Exception e working false e print Stack Trace private List Connection active new Vector Connection private Properties config new Properties private Connection Closer connection Closer private Driver driver private String full Connection String private long inactive Max Timeout private int max Pool Size private List Connection pool new Vector Connection Creates a new instance of the connection pool param p Jdbc Driver Name nome del driver jdbc param p Full Connection String database connection string param p User username database administrator param p Password password amministratore param p Max Pool Size administrator maximum number of active connections in the pool must be greater than param p Pool Time time interval within which the pool will be emptied each time of its pool connections in ms throws Class Not Found Exception if jdbc driver can not be found throws Exception if there is a problem connecting to the database throws Illegal Argument Exception if input parameters are invalid public Connection Pool Data Source String p Jdbc Driver Name String p Full Connection String String p User String p Password int p Max Pool Size int p Pool Time throws Class Not Found Exception Exception if p Max Pool Size throw new Illegal Argument Exception max Pool Size must be but it is p Max Pool Size if p Full Connection String null throw new Illegal Argument Exception full Connection String has Null value if p User null throw new Illegal Argument Exception Username is Null this max Pool Size p Max Pool Size this full Connection String p Full Connection String this config put user p User if p Password null this config put password p Password Class for Name p Jdbc Driver Name this driver Driver Manager get Driver p Full Connection String this connection Closer new Connection Closer p Pool Time this connection Closer start Returns the size of the list of active connections return the size of the list of currently active connections public int active Size return this active size Empty the pool of connections from active ones that have no longer run operations for inactive Max Timeout milliseconds protected void clear Active long temp long System current Time Millis Connection adc null for int count count this active size count adc Connection this active get count temp adc get Last Time if temp this inactive Max Timeout this release adc get Connection Closes all connections in the pool both active and They re pools author Di Giorgio Domenico Cris Malinconico throws Exception public synchronized void close All Connections throws Exception close All Connections this pool close All Connections this active Closes all connections indicated in the connection list author Di Giorgio Domenico Cris Malinconico param p Connections the list of connections to be closed throws Exception when it is impossible to close a connection private synchronized void close All Connections List p Connections throws Exception while p Connections size Connection Wrapper conn Connection Wrapper p Connections remove conn close Wrapped Connection Closes all pool connections that are in the pool list throws Exception when it is impossible to close a connection public synchronized void close All Pooled Connections throws Exception close All Connections this pool Method used by get Connection to create a new connection if they are not in the pool list return a new connection to the Data Base private synchronized Connection create New Connection Connection raw Conn null try raw Conn this driver connect this full Connection String this config Connection conn new Connection Wrapper raw Conn this Connection ac new Connection ac set Connection conn ac set Last Time System current Time Millis this active add ac return conn catch Exception e System out println Connection creation failed in Connection Pool Data Source e return null Returns a connection if the pool is not full the check is done first in the list of pool connections to avoid creations useless otherwise a new connection will be created return the connection to the database if possible otherwise an exception is generated see javax sql Data Source get Connection throws Exception If a problem occurs while connecting to the database including the fact that the maximum limit of connections active is reached public synchronized Connection get Connection throws Exception Connection connection get Pooled Connection if connection null if this active size this max Pool Size throw new Exception Connection pool limit of this max Pool Size exceeded else connection create New Connection this connection Closer connection Event System out println active size pool size return connection Method not implemented param p Arg param p Arg return Connection throws Exception throws Not Implemented Yet Exception public Connection get Connection String p Arg String p Arg throws Exception throw new Not Implemented Yet Exception Method not implemented return int throws Exception throws Not Implemented Yet Exception public int get Login Timeout throws Exception throw new Not Implemented Yet Exception Method not implemented return Print Writer throws Exception throws Not Implemented Yet Exception public Print Writer get Log Writer throws Exception throw new Not Implemented Yet Exception Returns the maximum number of active connections return the maximum number of active connections public int get Max Pool Size return this max Pool Size Method used by get Connection to determine whether in the list of pool connections there are some that you can reuse param p Pool Index index of the pool connection list always return a connection from the list of those pools if any one private synchronized Connection get Pooled Connection int p Pool Index Connection ac new Connection Connection connection null if this pool size connection Connection this pool remove p Pool Index ac set Connection connection ac set Last Time System current Time Millis this active add ac return ac get Connection Returns the size of the pool connection list return the size of the pool connection list public int pool Size return this pool size Release a connection deleting it from active ones and inserting it into those pools to be reused later param p Connection The connection that must be returned to the pool public synchronized void release Connection p Connection boolean exists false int active Index if p Connection null Connection adc null while active Index this active size exists adc Connection this active get active Index if adc equals p Connection this active remove adc this pool add adc get Connection exists true active Index this connection Closer connection Event System out println active size pool size Sets the lifetime of active connections in milliseconds param p Time Out connection life time public void set Actived Timeout long p Time Out if p Time Out this inactive Max Timeout p Time Out Rearrange the lifetime of the connection due to run an operation From now on the connection can be active without perform any operation for other inactive Max Timeout milliseconds param p Connection the connection that performed an operation and therefore can Stay active void set Last Time Connection p Connection boolean exists false int count Connection adc null while count this active size exists adc Connection this active get count count if adc equals p Connection adc set Last Time System current Time Millis exists true Method not implemented param p Arg throws Exception throws Not Implemented Yet Exception public void set Login Timeout int p Arg throws Exception throw new Not Implemented Yet Exception Method not implemented param p Arg throws Exception throws Not Implemented Yet Exception public void set Log Writer Print Writer p Arg throws Exception throw new Not Implemented Yet Exception Converts an object of the Connection Pool Data Source class to String return the String representation of the connection pool public String to String String Buffer buf new String Buffer buf append buf append max Pool Size append this max Pool Size buf append active Size append active Size buf append pool Size append pool Size buf append full Connection String append this full Connection String buf append return buf to String 
Connection Wrapper package smos storage connection Management import java io Serializable import java sql Callable Statement import java sql Connection import java sql Database Meta Data import java sql Prepared Statement import java sql Exception import java sql Warning import java sql Savepoint import java sql Statement import java util Array List import java util Map import java util logging Logger Connection Wrapper is a class that adds to all methods of the class Connection the setting of the time in which the operation on the particular connection was made informing the pool of what happened public class Connection Wrapper implements Connection Serializable private static final long serial Version private static final Logger Logger get Logger Connection Wrapper class get Name private Connection connection private Connection Pool Data Source manager private Array List Statement statements new Array List Statement param p Connection param p Pool Manager public Connection Wrapper Connection p Connection Connection Pool Data Source p Pool Manager this connection p Connection this manager p Pool Manager fine Creating Connection Wrapper private Prepared Statement cache Prepared Statement Prepared Statement p Prep St this manager set Last Time this this statements add p Prep St return p Prep St private Statement cache Statement Statement p Statement this manager set Last Time this this statements add p Statement return p Statement see java sql Connection clear Warnings public void clear Warnings throws Exception this connection clear Warnings see java sql Connection close public void close throws Exception close And Release Statements this manager release this private synchronized void close And Release Statements throws Exception final int n this statements size for int i i n i Statement this statements get i close this statements clear Close the wrapped connection throws Exception void close Wrapped Connection throws Exception close And Release Statements if this connection is Closed fine Closing db connection this get Class get Name this this connection close see java sql Connection commit public void commit throws Exception this manager set Last Time this this connection commit see java sql Connection create Statement public Statement create Statement throws Exception this manager set Last Time this return cache Statement this connection create Statement see java sql Connection create Statement int int public Statement create Statement int p Result Set Type int p Result Set Concurrency throws Exception this manager set Last Time this return cache Statement this connection create Statement p Result Set Type p Result Set Concurrency see java sql Connection create Statement int int int public Statement create Statement int p Result Set Type int p Result Set Concurrency int p Result Set Holdability throws Exception this manager set Last Time this return cache Statement this connection create Statement p Result Set Type p Result Set Concurrency p Result Set Holdability Closes the wrapped connection protected void finalize throws Throwable close Wrapped Connection see java sql Connection get Auto Commit public boolean get Auto Commit throws Exception this manager set Last Time this return this connection get Auto Commit see java sql Connection get Catalog public String get Catalog throws Exception this manager set Last Time this return this connection get Catalog see java sql Connection get Holdability public int get Holdability throws Exception this manager set Last Time this return this connection get Holdability see java sql Connection get Meta Data public Database Meta Data get Meta Data throws Exception this manager set Last Time this return this connection get Meta Data see java sql Connection get Transaction Isolation public int get Transaction Isolation throws Exception this manager set Last Time this return this connection get Transaction Isolation see java sql Connection get Type Map Suppress Warnings unchecked public Map get Type Map throws Exception this manager set Last Time this return this connection get Type Map see java sql Connection get Warnings public Warning get Warnings throws Exception this manager set Last Time this return this connection get Warnings see java sql Connection is Closed public boolean is Closed throws Exception this manager set Last Time this return this connection is Closed see java sql Connection is Read Only public boolean is Read Only throws Exception this manager set Last Time this return this connection is Read Only see java sql Connection native java lang String public String native String sql throws Exception this manager set Last Time this return this connection native sql see java sql Connection prepare Call java lang String public Callable Statement prepare Call String sql throws Exception this manager set Last Time this return this connection prepare Call sql see java sql Connection prepare Call java lang String int int public Callable Statement prepare Call String p Statement Sql int p Result Set Type int p Result Set Concurrency throws Exception this manager set Last Time this return this connection prepare Call p Statement Sql p Result Set Type p Result Set Concurrency see java sql Connection prepare Call java lang String int int int public Callable Statement prepare Call String p Statement Sql int p Result Set Type int p Result Set Concurrency int p Result Set Holdability throws Exception this manager set Last Time this return this connection prepare Call p Statement Sql p Result Set Type p Result Set Concurrency p Result Set Holdability see java sql Connection prepare Statement java lang String public Prepared Statement prepare Statement String p Statement Sql throws Exception this manager set Last Time this return cache Prepared Statement this connection prepare Statement p Statement Sql see java sql Connection prepare Statement java lang String int public Prepared Statement prepare Statement String p Statement Sql int p Auto Generated Keys throws Exception this manager set Last Time this return cache Prepared Statement this connection prepare Statement p Statement Sql p Auto Generated Keys see java sql Connection prepare Statement java lang String int int public Prepared Statement prepare Statement String p Statement Sql int p Result Set Type int p Result Set Concurrency throws Exception this manager set Last Time this return cache Prepared Statement this connection prepare Statement p Statement Sql p Result Set Type p Result Set Concurrency see java sql Connection prepare Statement java lang String int int int public Prepared Statement prepare Statement String p Statement Sql int p Result Set Type int p Result Set Concurrency int p Result Set Holdability throws Exception this manager set Last Time this return cache Prepared Statement this connection prepare Statement p Statement Sql p Result Set Type p Result Set Concurrency p Result Set Holdability see java sql Connection prepare Statement java lang String int public Prepared Statement prepare Statement String p Statement Sql int column Indexes throws Exception this manager set Last Time this return cache Prepared Statement this connection prepare Statement p Statement Sql column Indexes see java sql Connection prepare Statement java lang String java lang String public Prepared Statement prepare Statement String p Statement Sql String p Column Names throws Exception this manager set Last Time this return cache Prepared Statement this connection prepare Statement p Statement Sql p Column Names see java sql Connection release Savepoint java sql Savepoint public void release Savepoint Savepoint p Savepoint throws Exception this manager set Last Time this this connection release Savepoint p Savepoint see java sql Connection rollback public void rollback throws Exception this manager set Last Time this this connection rollback see java sql Connection rollback java sql Savepoint public void rollback Savepoint p Savepoint throws Exception this manager set Last Time this this connection rollback p Savepoint see java sql Connection set Auto Commit boolean public void set Auto Commit boolean p Auto Commit throws Exception this manager set Last Time this if this connection get Auto Commit p Auto Commit this connection set Auto Commit p Auto Commit see java sql Connection set Catalog java lang String public void set Catalog String p Catalog throws Exception this manager set Last Time this this connection set Catalog p Catalog see java sql Connection set Holdability int public void set Holdability int p Holdability throws Exception this manager set Last Time this this connection set Holdability p Holdability see java sql Connection set Read Only boolean public void set Read Only boolean p Read Only throws Exception this manager set Last Time this this connection set Read Only p Read Only see java sql Connection set Savepoint public Savepoint set Savepoint throws Exception this manager set Last Time this return this connection set Savepoint see java sql Connection set Savepoint java lang String public Savepoint set Savepoint String p Name throws Exception this manager set Last Time this return this connection set Savepoint p Name see java sql Connection set Transaction Isolation int public void set Transaction Isolation int p Level throws Exception this manager set Last Time this this connection set Transaction Isolation p Level see java sql Connection set Type Map java util Map see java lang Object to String public String to String return this connection to String public void set Type Map Map String Class arg throws Exception Auto generated method stub 
package smos storage connection Management import java sql Implementation of the thread able to maintain the connection to the database Mysql if there are no more active connections troubleshooting Mysql autoreconnect This class is also responsible for recalling the method of releasing active connections that have not performed operations in a certain interval of time public class Control Connection extends Thread private static Connection Pool Data Source manager null private static int wait Timeout Creates a new instance of the Thread author Di Giorgio Domenico Cris Malinconico param p Manager the pool of currently running connections public Control Connection Connection Pool Data Source p Manager Control Connection manager p Manager Creates a new instance of the Thread param p Manager the pool of currently running connections param p Time The time within which to re establish the connection with mysql before che scada This value must necessarily be less than value of the global wait timeout variable of Mysql public Control Connection Connection Pool Data Source p Manager int p Time Control Connection wait Timeout p Time Control Connection manager p Manager The thread does nothing but sleep when there are active users and keep the connection with My open otherwise public void run try while true if manager active Size this set Priority Thread manager clear Active this set Priority Thread if manager active Size while true try manager close All Pooled Connections Connection con null con manager get Connection Statement st con create Statement st execute Query show tables manager release con break catch Exception e System out println Generated exception in Thread Control Connection e Thread sleep wait Timeout else Thread sleep wait Timeout catch Interrupted Exception ex System out println Thread Control Connection aborted ex 
Connection package smos storage connection Management import smos Environment import smos utility Utility import java sql import java util import java io Class that interfaces with the connection pool In particular it creates a single Connection Pool Data Source object the pool of connections and gets the its configuration parameters from the properties file connection properties public class Connection private static int private static String private static String private static Control Connection linker null private static Connection Pool Data Source manager null private static int private static String private static int private static Properties properties null private static String private static int Static initialization block that deals with generating the pool in when there will be a first invocation of the get Connection method static try properties new Properties File file Prop new File Environment get Pool Properties Path if file Prop exists properties load new File Input Stream file Prop properties get Property connection jdbc name if equals Utility get Driver My Sql properties get Property connection jdbc full Path if equals Utility get Full Path Database properties get Property connection username if equals Utility get User Name properties get Property connection password if equals Utility get Password try Integer parse Int properties get Property connection max Pool Size catch Exception ex Utility get Max Pool Size try Integer parse Int properties get Property connection wait Timeout catch Exception ex Utility get Wait Timeout try Integer parse Int properties get Property connection active Timeout catch Exception ex Utility get Active Timeout try Integer parse Int properties get Property connection pool Timeout catch Exception ex Utility get Pool Timeout else If the properties file does not exist load default values Utility get Driver My Sql Utility get Full Path Database Utility get User Name Utility get Password Utility get Max Pool Size Utility get Wait Timeout Utility get Active Timeout Utility get Pool Timeout load Pool Create the manager and prepare the connection pool catch Exception e Se un eccezione viene generata in precedenza Utility get Driver My Sql Utility get Full Path Database Utility get User Name Utility get Password load Pool Create the manager and prepare the connection pool Returns a connection from the pool return the connection if possible null otherwise public static Connection get Connection try return manager get Connection catch Exception e System out println Exception generated in Connection get Connection e return null Actual creation of the connection pool private static void load Pool try manager new Connection Pool Data Source manager set Actived Timeout linker new Control Connection manager linker start catch Exception e System out println Can not create pool of connections in Connection e Returns a connection to the pool that will be included in the list of pool connections i e those that can be reused later param p Connection the connection is no longer active public static void release Connection Connection p Connection manager release p Connection 
package smos exception import java lang Exception This class is the default exception generated by the system public class Default Exception extends Exception private static final long serial Version Generate the exception without an associated error message public Default Exception super Generate the exception with an associated error message param p Message The error message to be associated to the exception public Default Exception String p Message super p Message 
package smos bean import java io Serializable import java util Date public class Delay implements Serializable Class modeling a late entry of a student author Nicola Pisanti version private static final long serial Version private int id Delay private int id User private Date date Delay private String time Delay private int academic Year Method that returns the Delay id return an integer representing the delay id public int get Id Delay return id Delay Method setting the Delay id integer param representing the id to be set public void set Id Delay int p Id Delay this id Delay p Id Delay Method that returns the id of the late student return an integer representing the student id public int get Id User return id User Method setting the student id relative to the delay param an integer representing the id to be set public void set Id User int p Id User this id User p Id User Method that returns the date of delay return a string representing the date of the delay public Date get Date Delay return date Delay Method setting the date of delay param a string representing the date of delay public void set Date Delay Date p Date Delay this date Delay p Date Delay Method that returns the student s time of entry return a string representing the time of entry of the late student public String get Time Delay if this time Delay length return time Delay substring else return this time Delay Method setting the time of entry of the student param a string representing the input time to set public void set Time Delay String p Time Delay this time Delay p Time Delay Method that returns the academic year relative to absence return an integer representing the year in which the academic year began public int get Academic Year return academic Year Method setting the academic year relative to absence param an integer representing the academic year to be set public void set Academic Year int p Academic Year this academic Year p Academic Year 
package smos exception This class represents the exception generated when a user attempts to delete the only Admin user in the database public class Delete Administrator Exception extends Exception private static final long serial Version Generate the exception without an associated error message public Delete Administrator Exception super Unable to delete the user the selected user is the only Admin present in the database Create a new Manager and try again Generate the exception with an associated error message param p Message The error message to be associated to the exception public Delete Administrator Exception String p Message super p Message 
package smos exception import java lang Exception This class represents the exception generated when a user attempts to delete the only Manager user in the database public class Delete Manager Exception extends Exception private static final long serial Version Generate the exception without an associated error message public Delete Manager Exception super Unable to delete the user the selected user is the only Manager present in the database Create a new Manager and try again Generate the exception with an associated error message param p Message The error message to be associated to the exception public Delete Manager Exception String p Message super p Message 
package smos exception import java lang Exception This class represents the exception generated when you attempts to insert an entity already present in the database public class Duplicated Entity Exception extends Exception private static final long serial Version Generate the exception without an associated error message public Duplicated Entity Exception super Duplicate Key into the Repository Generate the exception with an associated error message param p Message The error message to be associated to the exception public Duplicated Entity Exception String p Message super p Message 
package smos exception import java lang Exception This class represents the exception generated when an entity is not found in the database public class Entity Not Found Exception extends Exception private static final long serial Version Generate the exception without an associated error message public Entity Not Found Exception super Object Not Found in Repository Generate the exception with an associated error message param p Message The error message to be associated to the exception public Entity Not Found Exception String p Message super p Message 
package smos Class used to contain the environment variables of public class Environment Default error message public static String An error occurred while processing the request br br private static String pool Properties Path return get Pool Properties Path public static String get Pool Properties Path return pool Properties Path param pool Properties Path public static void set Pool Properties Path String pool Properties Path Environment pool Properties Path pool Properties Path 
package smos bean import java io Serializable import java util Date public class Justify implements Serializable Class modeling a justifies for an absence author Nicola Pisanti version private static final long serial Version private int id Justify private int id User private Date date Justify private int academic Year Method that returns the id of the justify return an integer representing the id of the justify public int get Id Justify return id Justify Method setting the id of the justify param an integer representing the id to be set public void set Id Justify int p Id Justify this id Justify p Id Justify Method returns the student id relative to justify return an integer representing the student id public int get Id User return id User Method setting student id relative to justify param an integer representing the id to be set public void set Id User int p Id User this id User p Id User Method returning the date on which absence was justified return a string representing the justified date public Date get Date Justify return date Justify Method setting the date on which absence was justified param a string representing the date to set public void set Date Justify Date p Date Justify this date Justify p Date Justify Method that returns the academic year relative to the justifies return an integer representing the year in which the academic year began public int get Academic Year return academic Year Method setting the academic year relating to the justification param an integer representing the academic year to be set public void set Academic Year int p Academic Year this academic Year p Academic Year 
package smos exception import java lang Exception This class represents the exception generated when a user enter an incorrect password during authentication public class Login Exception extends Exception private static final long serial Version Generate the exception without an associated error message public Login Exception super Login or Password Incorrect or Invalid Session Generate the exception with an associated error message param p Message The error message to be associated to the exception public Login Exception String p Message super p Message 
package smos utility import java io Unsupported Encoding Exception import java util Properties import javax mail import javax mail internet public class Mail Utility public static void send Mail String p Sender String p Receiver String p Subject String p Text throws Messaging Exception Unsupported Encoding Exception Creating an email session Properties props new Properties props put mail smtp host Utility get Server Smtp Session session Session get Default Instance props Creating the message to send Mime Message message new Mime Message session message set Subject p Subject message set Text p Text Adding sender and recipient addresses Internet Address from Address new Internet Address p Sender Internet Address to Address new Internet Address p Receiver message set From from Address message set Recipient Message Recipient Type to Address Sending Message Transport send message 
package smos storage import smos bean Address import smos bean Teaching import smos exception Duplicated Entity Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage connection Management Connection import smos storage connection Management exception Connection Exception import smos utility Utility import java sql Result Set import java sql Exception import java util Collection import java util Vector import java sql Connection Address Manager Class public class Manager Address private static Manager Address instance The name of the address table public static final String address public static final String address has teaching private Manager Address super Returns the only instance of the existing class return Returns the instance of the class public static synchronized Manager Address get Instance if instance null instance new Manager Address return instance Verify the existence of an address in the database param p Address Address to check return true if the address passed as a parameter already exists otherwise false throws Mandatory Field Exception throws Exception throws Mandatory Field Exception throws Connection Exception throws Connection Exception throws Exception public synchronized boolean has Teaching Teaching p Teaching Address p Address throws Exception Entity Not Found Exception Connection Exception Invalid Value Exception Connection connect null boolean result false if p Teaching get Id throw new Entity Not Found Exception Specify teaching try connect Connection get Connection if connect null throw new Connection Exception Prepare sql string String sql Manager Teaching id teaching Utility is Null p Teaching get Id id address Utility is Null p Address get Id Address Send the Query to the database Result Set p Rs Utility query Operation connect sql if p Rs next result true return result finally we release resources Connection release Connection connect public synchronized boolean exists Address p Address throws Mandatory Field Exception Connection Exception Exception boolean result false Connection connect null if p Address get Name null throw new Mandatory Field Exception Specificare il nome try We get the connection to the database connect Connection get Connection if connect null throw new Connection Exception String sql Manager Address name Utility is Null p Address get Name Result Set t Rs Utility query Operation connect sql if t Rs next result true return result finally Connection release Connection connect Inserts a new address in the address table param p Address The address to enter throws Exception throws Connection Exception throws Mandatory Field Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized void insert Address p Address throws Mandatory Field Exception Connection Exception Exception Entity Not Found Exception Invalid Value Exception Connection connect null try control of mandatory fields if p Address get Name null throw new Mandatory Field Exception Specify the name field connect Connection get Connection if connect null throw new Connection Exception Prepare Sql string String sql Manager Address name Utility is Null p Address get Name Utility execute Operation connect sql p Address set Id Address Utility get Max Value id address Manager Address finally releases resources Connection release Connection connect Delete an address from the address table param p Address The address to delete throws Mandatory Field Exception throws Entity Not Found Exception throws Exception throws Connection Exception throws Invalid Value Exception public synchronized void delete Address p Address throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Invalid Value Exception Connection connect null try Manager Address get Instance Address On Delete Cascade p Address connect Connection get Connection Prepare string String sql Manager Address id address Utility is Null p Address get Id Address Utility execute Operation connect sql finally releases resources Connection release Connection connect public synchronized void assign Teaching As Address Address p Address Teaching p Teaching throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Invalid Value Exception Duplicated Entity Exception Connection connect null Manager Address manager Address Manager Address get Instance if manager Address has Teaching p Teaching p Address throw new Duplicated Entity Exception This address already has this associated teaching try Manager Address get Instance Address On Delete Cascade p Address connect Connection get Connection Prepare string String sql Manager Address id address id teaching Utility is Null p Address get Id Address Utility is Null p Teaching get Id Utility execute Operation connect sql finally releases resources Connection release Connection connect public synchronized void remove Teaching As Address Address p Address Teaching p Teaching throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Invalid Value Exception Connection connect null Manager Address manager Address Manager Address get Instance if manager Address has Teaching p Teaching p Address throw new Entity Not Found Exception This address does not contain the teaching to remove try Manager Address get Instance Address On Delete Cascade p Address connect Connection get Connection Prepare string String sql Manager Address id address Utility is Null p Address get Id Address id teaching Utility is Null p Teaching get Id Utility execute Operation connect sql finally releases resources Connection release Connection connect Returns the id of the address passed as a parameter param p Address The address whose id is requested return the id of the address passed as a parameter throws Entity Not Found Exception throws Connection Exception throws Exception public synchronized int get Address Id Address p Address throws Entity Not Found Exception Connection Exception Exception int result Connection connect null try if p Address null throw new Entity Not Found Exception Ca n t find the address Preparing string to retrieve information corresponding to the id of the address passed as a parameter String t Sql id address Manager Address name Utility is Null p Address get Name We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result t Rs get Int id address return result finally Connection release Connection connect Returns the address corresponding to the id passed as a parameter param p Id Address The address id return the address associated with the past id as a parameter throws Connection Exception throws Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized Address get Address By Id int p Id Address throws Connection Exception Exception Entity Not Found Exception Invalid Value Exception Address result null Connection connect null try if p Id Address throw new Entity Not Found Exception Could not find address We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Prepare string String sql Manager Address id address Utility is Null p Id Address Send Query to Data Base Result Set p Rs Utility query Operation connect sql if p Rs next result this load Record From Rs p Rs else throw new Entity Not Found Exception Unable to find user return result finally releases resources Connection release Connection connect Returns the set of all addresses in the database return a collection of addresses throws Connection Exception throws Entity Not Found Exception throws Exception throws Invalid Value Exception public synchronized Collection Address get Address List throws Connection Exception Entity Not Found Exception Exception Invalid Value Exception Connection connect null Collection Address result new Vector Address try connect Connection get Connection if connect null throw new Connection Exception Prepare sql string String sql Manager Address id address Send Query to Data Base Result Set t Rs Utility query Operation connect sql if t Rs next result this load Records From Rs t Rs return result finally releases resources Connection release Connection connect Return the name of the address corresponding to the id passed as parameter param p Id Address The address id return Returns a string containing the address name throws Entity Not Found Exception throws Connection Exception throws Exception public synchronized String get Address Name By Id int p Id Address throws Entity Not Found Exception Connection Exception Exception String result Connection connect null try If the id has not been provided we return an error code if p Id Address throw new Entity Not Found Exception Could not find address Preparing string to retrieve information corresponding to the user id passed as parameter String t Sql name Manager Address id address Utility is Null p Id Address We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result t Rs get String name else throw new Entity Not Found Exception Could not find address return result finally Connection release Connection connect Return a collection with the id of the teachings associated with the id passed as parameter param p Id Address The address id return a collection with int throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Collection Integer get Address Techings int p Id Address throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Collection Integer result Connection connect null try If the id has not been provided we return an error code if p Id Address throw new Entity Not Found Exception Could not find address Preparing string to retrieve information corresponding to the user id passed as parameter String t Sql id teaching Manager Address id address Utility is Null p Id Address We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql result this load Integers From Rs t Rs return result finally Connection release Connection connect Lets you read a record from the Result Set private Address load Record From Rs Result Set p Rs throws Exception Invalid Value Exception Address address new Address address set Name p Rs get String name address set Id Address p Rs get Int id address return address Allows you to read records from the Result Set private Collection Address load Records From Rs Result Set p Rs throws Exception Invalid Value Exception Collection Address result new Vector Address do result add load Record From Rs p Rs while p Rs next return result private Collection Integer load Integers From Rs Result Set p Rs throws Exception Invalid Value Exception Collection Integer result new Vector Integer while p Rs next result add p Rs get Int id teaching return result 
package smos storage import java sql Connection import java sql Result Set import java sql Exception import java util Collection import java util Iterator import java util Vector import smos bean Classroom import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage connection Management Connection import smos storage connection Management exception Connection Exception import smos utility Utility public class Manager Classroom Class that manages the classes of the institution author Nicola Pisanti version private static Manager Classroom instance public static final String classroom public static final String address public static final String teacher has classroom public static final String student has classroom private Manager Classroom super Returns the only instance of the existing class return the class instance public static synchronized Manager Classroom get Instance if instance null instance new Manager Classroom return instance Check if the input given class is in the database param The class whose existence must be verified return true if the class is in the database otherwise false throws Mandatory Field Exception throws Connection Exception throws Exception public synchronized boolean exists Classroom p Classroom throws Mandatory Field Exception Connection Exception Exception boolean result false Connection connect null if p Classroom get Name null throw new Mandatory Field Exception Specify the class name if p Classroom get Academic Year throw new Mandatory Field Exception Specify the academic year if p Classroom get Id Address throw new Mandatory Field Exception Specify address the user enters the address is converted to id Address try We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception String sql Manager Classroom name Utility is Null p Classroom get Name accademic year Utility is Null p Classroom get Academic Year id address Utility is Null p Classroom get Id Address Send Query to Data Base Result Set t Rs Utility query Operation connect sql if t Rs next result true return result finally Connection release Connection connect Inserts the class object in the database param the class to enter in the database throws Mandatory Field Exception throws Connection Exception throws Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized void insert Classroom p Classroom throws Mandatory Field Exception Connection Exception Exception Entity Not Found Exception Invalid Value Exception Connection connect null try control of mandatory fields if p Classroom get Name null throw new Mandatory Field Exception Specify the class name if p Classroom get Academic Year throw new Mandatory Field Exception Specify the academic year if p Classroom get Id Address throw new Mandatory Field Exception Specify address the user enters the address is converted to id Address connect Connection get Connection if connect null throw new Connection Exception Prepare Sql string String sql Manager Classroom id address name accademic year Utility is Null p Classroom get Id Address Utility is Null p Classroom get Name Utility is Null p Classroom get Academic Year Utility execute Operation connect sql p Classroom set Id Classroom Utility get Max Value id classroom Manager Classroom finally releases resources Connection release Connection connect Update the statistics of a class param Class with updated statistics but identical throws Connection Exception throws Exception throws Entity Not Found Exception throws Mandatory Field Exception public synchronized void update Classroom p Classroom throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Connection connect null try if p Classroom get Id Classroom throw new Entity Not Found Exception Could n t find the class if p Classroom get Name null throw new Mandatory Field Exception Specify the class name if p Classroom get Academic Year throw new Mandatory Field Exception Specify the academic year if p Classroom get Id Address throw new Mandatory Field Exception Specify address the user enters the address is converted to id Address Prepare string String sql Manager Classroom id address Utility is Null p Classroom get Id Address name Utility is Null p Classroom get Name accademic year Utility is Null p Classroom get Academic Year id classroom Utility is Null p Classroom get Id Classroom make a new connection and send the query connect Connection get Connection if connect null throw new Connection Exception Utility execute Operation connect sql finally releases resources Connection release Connection connect Delete a class from database param Class to delete throws Connection Exception throws Exception throws Entity Not Found Exception throws Mandatory Field Exception throws Invalid Value Exception public synchronized void delete Classroom p Classroom throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Invalid Value Exception Connection connect null try Manager User get Instance user On Delete Cascade p User connect Connection get Connection Prepare string String sql Manager Classroom id classroom Utility is Null p Classroom get Id Classroom Utility execute Operation connect sql finally releases resources Connection release Connection connect public synchronized Collection Classroom get Classrooms By Student User p User throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Mandatory Field Exception Collection Classroom result null Connection connect null Manager User manager User Manager User get Instance try If no user exists if manager User exists p User throw new Entity Not Found Exception The user does not exist if manager User is Student p User throw new Invalid Value Exception The user is not a student Preparing string to retrieve information corresponding to the class of the past id int iduser manager User get User Id p User String t Sql Manager Classroom Manager Classroom Manager Classroom Manager Classroom id user Utility is Null iduser Manager Classroom id classroom Manager Classroom id classroom We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql result this load Records From Rs t Rs if result is Empty throw new Entity Not Found Exception Unable to find Classes for the entered user return result finally Connection release Connection connect Returns the class that has the past param The of the searched class return a string representing the class with the supplied throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Classroom get Classroom By int p Id throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Classroom result null Connection connect null try If the id has not been provided we return an error code if p Id throw new Entity Not Found Exception Unable to find class Preparing string to retrieve information corresponding to the class of the past id String t Sql Manager Classroom id classroom Utility is Null p Id We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result this load Record From Rs t Rs else throw new Entity Not Found Exception Unable to find user return result finally Connection release Connection connect Returns a collection of classes from the same academic year public synchronized Collection Classroom get Classrooms By Academic Year int p Academic Year throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Collection Classroom result null Connection connect null try If the id has not been provided we return an error code if p Academic Year throw new Entity Not Found Exception Data troppo vecchia Preparing string to retrieve information corresponding to the class of the past id String t Sql Manager Classroom accademic year Utility is Null p Academic Year We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql result this load Records From Rs t Rs if result is Empty throw new Entity Not Found Exception Unable to find Classes for date entered return result finally Connection release Connection connect public synchronized Collection Integer get Academic Year List throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Collection Integer result null Connection connect null try Preparing string to retrieve information corresponding to the class of the past id String t Sql accademic year Manager Classroom order by accademic year We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql result this load Integers From Rs t Rs if result is Empty throw new Entity Not Found Exception Unable to find Classes for date entered return result finally Connection release Connection connect public synchronized Classroom get Classroom By User Academic Year User p User int p Academic Year throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Mandatory Field Exception Classroom result null Classroom temp null Manager Classroom manager Classroom Manager Classroom get Instance Collection Classroom list null list manager Classroom get Classrooms By Student p User Iterator Classroom it list iterator while it has Next temp it next if temp get Academic Year p Academic Year result temp break return result public synchronized Collection Classroom get Classrooms By Teacher Academic Year User p User int p Academic Year throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Mandatory Field Exception Collection Classroom result null Connection connect null int id User p User get Id try If the id has not been provided we return an error code if p Academic Year throw new Entity Not Found Exception Data troppo vecchia Preparing string to retrieve information String t Sql Manager Classroom Manager Classroom Manager Classroom Manager Classroom id classroom Manager Classroom id classroom Manager Classroom accademic year Utility is Null p Academic Year Manager Classroom id user Utility is Null id User We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql result this load Records From Rs t Rs if result is Empty throw new Entity Not Found Exception Unable to find Classes for user and year entered return result finally Connection release Connection connect public synchronized Collection Classroom get Classrooms By Teacher User p User throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Mandatory Field Exception Collection Classroom result null Connection connect null Manager User manager User Manager User get Instance try If no user exists if manager User exists p User throw new Entity Not Found Exception The user does not exist if manager User is Teacher p User throw new Invalid Value Exception The user is not a student Preparing string to retrieve information corresponding to the class of the past id int iduser manager User get User Id p User String t Sql Manager Classroom Manager Classroom Manager Classroom Manager Classroom id user Utility is Null iduser Manager Classroom id classroom Manager Classroom id classroom We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql result this load Records From Rs t Rs if result is Empty throw new Entity Not Found Exception Unable to find Classes for the entered user return result finally Connection release Connection connect Consistent reading an integer from recod result Set param p Rs result Set return collection Integer throws Exception throws Invalid Value Exception private Collection Integer load Integers From Rs Result Set p Rs throws Exception Invalid Value Exception Collection Integer result new Vector Integer while p Rs next result add p Rs get Int accademic year return result Allows you to read only one record from the Result Set param The result set from which to extract the Classroom object throws Exception throws Invalid Value Exception private Classroom load Record From Rs Result Set p Rs throws Exception Invalid Value Exception Classroom classroom new Classroom classroom set Name p Rs get String name classroom set Academic Year p Rs get Int accademic year classroom set Id Classroom p Rs get Int id classroom classroom set Id Address p Rs get Int id address return classroom Lets you read multiple records from the Result Set param The result set from which to extract the Classroom object throws Exception throws Invalid Value Exception private Collection Classroom load Records From Rs Result Set p Rs throws Exception Invalid Value Exception Collection Classroom result new Vector Classroom while p Rs next result add load Record From Rs p Rs return result 
package smos storage import java sql Connection import java sql Result Set import java sql Exception import java util Collection import java util Date import java util Vector import smos bean Absence import smos bean Delay import smos bean Justify import smos bean Note import smos bean Register Line import smos bean User List Item import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage connection Management Connection import smos storage connection Management exception Connection Exception import smos utility Utility public class Manager Register Class that manages the Digital Registry author Nicola Pisanti version private static Manager Register instance public final static String absence public final static String delay public final static String justify public final static String note private Manager Register super Returns the only instance of the existing class return Returns the instance of the class public static synchronized Manager Register get Instance if instance null instance new Manager Register return instance Check if the input given class is in the database param p Absence The class whose existence must be verified return true if the class is in the database otherwise false throws Connection Exception throws Exception public synchronized boolean exists Absence p Absence throws Connection Exception Exception boolean result false Connection connect null try We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception String sql Manager Register id absence Utility is Null p Absence get Id Absence Send Query to Data Base Result Set t Rs Utility query Operation connect sql if t Rs next result true return result finally Connection release Connection connect Check if the input given class is in the database param p Delay The class whose existence must be verified return true if the class is in the database otherwise false throws Connection Exception throws Exception public synchronized boolean exists Delay p Delay throws Connection Exception Exception boolean result false Connection connect null try We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception String sql Manager Register id delay Utility is Null p Delay get Id Delay Send Query to Data Base Result Set t Rs Utility query Operation connect sql if t Rs next result true return result finally Connection release Connection connect Check if the input given class is in the database param p Delay The class whose existence must be verified return true if the class is in the database otherwise false throws Connection Exception throws Exception public synchronized boolean exists Justify p Justify throws Connection Exception Exception boolean result false Connection connect null try We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception String sql Manager Register id justify Utility is Null p Justify get Id Justify Send Query to Data Base Result Set t Rs Utility query Operation connect sql if t Rs next result true return result finally Connection release Connection connect Inserts an absence in the database param p Absence an object of type Absence to enter in the database throws Connection Exception throws Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized void insert Absence Absence p Absence throws Connection Exception Exception Entity Not Found Exception Invalid Value Exception Connection connect null try connect Connection get Connection if connect null throw new Connection Exception Prepare Sql string String sql Manager Register id user date absence id justify accademic year Utility is Null p Absence get Id User Utility is Null p Absence get Date Absence Utility is Null p Absence get Id Justify Utility is Null p Absence get Academic Year Utility execute Operation connect sql p Absence set Id Absence Utility get Max Value id absence Manager Register finally releases resources Connection release Connection connect Inserts a delay in the database param p Delay a Delay object to enter in the database throws Connection Exception throws Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized void insert Delay Delay p Delay throws Connection Exception Exception Entity Not Found Exception Invalid Value Exception Connection connect null try connect Connection get Connection if connect null throw new Connection Exception Prepare Sql string String sql Manager Register id user date delay time delay accademic year Utility is Null p Delay get Id User Utility is Null p Delay get Date Delay Utility is Null p Delay get Time Delay Utility is Null p Delay get Academic Year Utility execute Operation connect sql p Delay set Id Delay Utility get Max Value id delay Manager Register finally Prepare Sql string Connection release Connection connect Prepare Sql string param p Note an object of type Notes to insert in the database throws Connection Exception throws Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized void insert Note Note p Note throws Mandatory Field Exception Connection Exception Exception Entity Not Found Exception Invalid Value Exception Connection connect null try if p Note get Description null p Note get Description equals throw new Mandatory Field Exception an object of type Notes to insert in the database if p Note get Teacher null p Note get Teacher equals throw new Mandatory Field Exception Insert the teacher connect Connection get Connection if connect null throw new Connection Exception Prepare Sql string String sql Manager Register id user date note description teacher accademic year Utility is Null p Note get Id User Utility is Null p Note get Date Note Utility is Null p Note get Description Utility is Null p Note get Teacher Utility is Null p Note get Academic Year Utility execute Operation connect sql p Note set Id Note Utility get Max Value id note Manager Register finally releases resources Connection release Connection connect Inserts a justification in the database param p Justify an object of type Justify to enter in the database param p Absence an object of type Absence representing the justified absence throws Connection Exception throws Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized void insert Justify Justify p Justify Absence p Absence throws Connection Exception Exception Entity Not Found Exception Invalid Value Exception Connection connect null try connect Connection get Connection if connect null throw new Connection Exception Prepare Sql string String sql Manager Register id user date justify accademic year Utility is Null p Justify get Id User Utility is Null p Justify get Date Justify Utility is Null p Justify get Academic Year Utility execute Operation connect sql p Justify set Id Justify Utility get Max Value id justify Manager Register p Absence set Id Justify p Justify get Id Justify this update Absence p Absence finally Prepare Sql string Connection release Connection connect Delete an absence from database param p Absence the absence to be deleted throws Connection Exception throws Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized void delete Absence Absence p Absence throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Invalid Value Exception Connection connect null try connect Connection get Connection Prepare string String sql Manager Register id absence Utility is Null p Absence get Id Absence Utility execute Operation connect sql if p Absence get Id Justify null delete Justify p Absence get Id Justify finally releases resources Connection release Connection connect Delete a delay from database param p Delay the delay to be cancelled throws Connection Exception throws Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized void delete Delay Delay p Delay throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Invalid Value Exception Connection connect null try connect Connection get Connection Prepare string String sql Manager Register id delay Utility is Null p Delay get Id Delay Utility execute Operation connect sql finally releases resources Connection release Connection connect Delete a note from database param p Note the note to be deleted throws Connection Exception throws Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized void delete Note Note p Note throws Connection Exception Exception Entity Not Found Exception Invalid Value Exception Connection connect null try connect Connection get Connection Prepare string String sql Manager Register id note Utility is Null p Note get Id Note Utility execute Operation connect sql finally releases resources Connection release Connection connect Delete a note from database param p Dustify the of the note to be deleted throws Connection Exception throws Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized void delete Justify int p Justify throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Invalid Value Exception Connection connect null try connect Connection get Connection Prepare string String sql Manager Register id justify Utility is Null p Justify Utility execute Operation connect sql try Absence temp get Absence By Id Justify p Justify temp set Id Justify update Absence temp catch Exception e Normal if an exception is generated Since we may be deleting a justification whose absence we just cancelled finally releases resources Connection release Connection connect Update the statistics of an absence param p Absence Absence with updated statistics but identical throws Connection Exception throws Exception throws Entity Not Found Exception throws Mandatory Field Exception public synchronized void update Absence Absence p Absence throws Connection Exception Exception Entity Not Found Exception Connection connect null try Prepare string String sql Manager Register id user Utility is Null p Absence get Id User date absence Utility is Null p Absence get Date Absence id justify Utility is Null p Absence get Id Justify accademic year Utility is Null p Absence get Academic Year id absence Utility is Null p Absence get Id Absence make a new connection and send the query connect Connection get Connection if connect null throw new Connection Exception Utility execute Operation connect sql finally releases resources Connection release Connection connect Update the statistics of a delay param p Delay The delay with updated statistics but identical throws Connection Exception throws Exception throws Entity Not Found Exception throws Mandatory Field Exception public synchronized void update Delay Delay p Delay throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Connection connect null try Prepare string String sql Manager Register id user Utility is Null p Delay get Id User date delay Utility is Null p Delay get Date Delay time delay Utility is Null p Delay get Time Delay accademic year Utility is Null p Delay get Academic Year id delay Utility is Null p Delay get Id Delay make a new connection and send the query connect Connection get Connection if connect null throw new Connection Exception Utility execute Operation connect sql finally releases resources Connection release Connection connect Method that updates the statistics of a Note param p Note an object of type Notes with updated statistics but identical id throws Connection Exception throws Exception throws Entity Not Found Exception throws Mandatory Field Exception public synchronized void update Note Note p Note throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Connection connect null try if p Note get Description null p Note get Description equals throw new Mandatory Field Exception Insert note text if p Note get Teacher null p Note get Teacher equals throw new Mandatory Field Exception Insert the teacher Prepare string String sql Manager Register id user Utility is Null p Note get Id User date note Utility is Null p Note get Date Note description Utility is Null p Note get Description teacher Utility is Null p Note get Teacher accademic year Utility is Null p Note get Academic Year id note Utility is Null p Note get Id Note make a new connection and send the query connect Connection get Connection if connect null throw new Connection Exception Utility execute Operation connect sql finally releases resources Connection release Connection connect Update statistics of a justifier param p Justify justify it with updated statistics but identical throws Connection Exception throws Exception throws Entity Not Found Exception throws Mandatory Field Exception public synchronized void update Justify Justify p Justify throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Connection connect null try Prepare string String sql Manager Register id user Utility is Null p Justify get Id User date justify Utility is Null p Justify get Date Justify accademic year Utility is Null p Justify get Academic Year id justify Utility is Null p Justify get Id Justify make a new connection and send the query connect Connection get Connection if connect null throw new Connection Exception Utility execute Operation connect sql finally releases resources Connection release Connection connect Method that returns a note given the id of the note itself param p Justify an integer representing the id of the note return a Notes object representing the note throws Invalid Value Exception throws Entity Not Found Exception throws Connection Exception throws Exception public synchronized Note get Note By Id int p Note throws Invalid Value Exception Entity Not Found Exception Connection Exception Exception Note result null Connection connect null try If the id has not been provided we return an error code if p Note throw new Entity Not Found Exception Unable to find note Preparing string to retrieve information corresponding to the class of the past id String t Sql Manager Register id note Utility is Null p Note We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result this load Note From Rs t Rs else throw new Entity Not Found Exception Unable to find the note return result finally Connection release Connection connect Method that returns an absence given the id of justifca associated with that absence param p Justify an integer representing the id of the justify return an object of type Absence representing the justified absence throws Invalid Value Exception throws Entity Not Found Exception throws Connection Exception throws Exception public synchronized Absence get Absence By Id Justify int p Justify throws Invalid Value Exception Entity Not Found Exception Connection Exception Exception Absence result null Connection connect null try If the id has not been provided we return an error code if p Justify throw new Entity Not Found Exception Unable to find absence Preparing string to retrieve information corresponding to the class of the past id String t Sql Manager Register id justify Utility is Null p Justify We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result this load Absence From Rs t Rs else throw new Entity Not Found Exception Unable to find absence return result finally Connection release Connection connect Method that returns an absence given the id of this param p Absence an integer representing the id of the absence return an object of type Absence representing the absence throws Invalid Value Exception throws Entity Not Found Exception throws Connection Exception throws Exception public synchronized Absence get Absence By Id Absence int p Absence throws Invalid Value Exception Entity Not Found Exception Connection Exception Exception Absence result null Connection connect null try If the id has not been provided we return an error code if p Absence throw new Entity Not Found Exception Unable to find absence Preparing string to retrieve information corresponding to the class of the past id String t Sql Manager Register id absence Utility is Null p Absence We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result this load Absence From Rs t Rs else throw new Entity Not Found Exception Unable to find absence return result finally Connection release Connection connect Method that returns a delay given the id of this param p Delay an integer representing the delay id return a Delay object representing the delay throws Invalid Value Exception throws Entity Not Found Exception throws Connection Exception throws Exception public synchronized Delay get Delay By Id int p Delay throws Invalid Value Exception Entity Not Found Exception Connection Exception Exception Delay result null Connection connect null try If the id has not been provided we return an error code if p Delay throw new Entity Not Found Exception Unable to find ritardo Preparing string to retrieve information corresponding to the class of the past id String t Sql Manager Register id delay Utility is Null p Delay We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result this load Delay From Rs t Rs else throw new Entity Not Found Exception Unable to find absence return result finally Connection release Connection connect Method that returns an absence given the id of this param p Absence an integer representing the id of the absence return an object of type Absence representing the absence throws Invalid Value Exception throws Entity Not Found Exception throws Connection Exception throws Exception public synchronized Justify get Justify By Id Justify int p Justify throws Invalid Value Exception Entity Not Found Exception Connection Exception Exception Justify result null Connection connect null try If the id has not been provided we return an error code if p Justify throw new Entity Not Found Exception Unable to find justification Preparing string to retrieve information corresponding to the class of the past id String t Sql Manager Register id justify Utility is Null p Justify We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result this load Justify From Rs t Rs else throw new Entity Not Found Exception Impossible to find justification return result finally Connection release Connection connect Method that returns true if the absence given in input has an assigned justification param p Absence an Absence value object of which you have to check if it justifies return true if absence is justified false otherwise throws Entity Not Found Exception throws Connection Exception throws Exception public synchronized boolean has Justify Absence p Absence throws Entity Not Found Exception Connection Exception Exception if exists p Absence throw new Entity Not Found Exception Absence not present in database if p Absence get Id Justify null return false return true Method that returns the justification linked to a given absence param p Absence an object of type Absence representing the absence return an object of type Justify or null if the absence does not justify throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Justify get Justify By Absence Absence p Absence throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception if exists p Absence throw new Entity Not Found Exception Absence not present in database if p Absence get Id Justify null return null Justify result null Connection connect null try Preparing string to retrieve information corresponding to the class of the past id String t Sql Manager Register id justify Utility is Null p Absence get Id Justify We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result this load Justify From Rs t Rs else throw new Entity Not Found Exception Impossible to find justification return result finally Connection release Connection connect Method that returns absences taken a given school year and user input param p Id User an integer representing the user id param p Academic Year a whole representing the academic year return a collection of absences empty if the user did not have absences throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Collection Absence get Absence By User And Academic Year int p Id User int p Academic Year throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Collection Absence result new Vector Absence Connection connect null try If the id has not been provided we return an error code if p Academic Year throw new Entity Not Found Exception Date too old idem per l id user if p Id User throw new Entity Not Found Exception User not found Preparing string to retrieve information corresponding to the class of the past id String t Sql Manager Register accademic year Utility is Null p Academic Year id user Utility is Null p Id User We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql while t Rs next result add load Absence From Rs t Rs return result finally Connection release Connection connect Method that returns a collection of notes for a given user and a given school year param p Id User an integer representing the user id param p Academic Year a whole representing the academic year return a collection of notes empty if the user has not received any throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Collection Note get Note By User And Academic Year int p Id User int p Academic Year throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Collection Note result new Vector Note Connection connect null try If the id has not been provided we return an error code if p Academic Year throw new Entity Not Found Exception Too old date idem for user id if p Id User throw new Entity Not Found Exception User not found Preparing string to retrieve information corresponding to the class of the past id String t Sql Manager Register accademic year Utility is Null p Academic Year id user Utility is Null p Id User We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql while t Rs next result add load Note From Rs t Rs return result finally Connection release Connection connect Method that returns the absence of a given student on a given day param p Id User an integer representing the student id param p Date a string representing the formatted date for the database return un oggetto di tipo Absence oppure null se lo studente era presente throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Absence get Absence By User And Date int p Id User Date p Date throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Absence result new Absence Connection connect null try String Formatting Controls idem for user id if p Id User throw new Entity Not Found Exception User not found Preparing string to retrieve information corresponding to the class of the past id String t Sql Manager Register date absence Utility is Null p Date id user Utility is Null p Id User We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result load Absence From Rs t Rs else result null return result finally Connection release Connection connect Method that returns the delay of a given student on a given day param p Id User an integer representing the student id param p Date a string representing the formatted date for the database return a Delay object or null if the student was on time or absent throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Delay get Delay By User And Date int p Id User Date p Date throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Delay result new Delay Connection connect null try String Formatting Controls idem for user id if p Id User throw new Entity Not Found Exception User not found Preparing string to retrieve information corresponding to the class of the past id String t Sql Manager Register date delay Utility is Null p Date id user Utility is Null p Id User We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result load Delay From Rs t Rs else result null return result finally Connection release Connection connect public synchronized Collection Register Line get Register By Class And Date int p Class Date p Date throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Collection Register Line result new Vector Register Line Manager User mg Manager User get Instance Collection User List Item students mg get Students By Classroom Id p Class for User List Item x students Register Line temp new Register Line temp set Student x temp set Absence this get Absence By User And Date x get Id p Date temp set Delay this get Delay By User And Date x get Id p Date result add temp return result Method to check if there is an absence in a registry line param p Register Line an object of type Register Line return true if there is an absence in the past log line otherwise false public boolean has Absence Register Line p Register Line if p Register Line get Absence null return false return true Method to check if there is a delay in a log line param p Register Line an object of type Register Line return true if there is a delay in the past log line otherwise false public boolean has Delay Register Line p Register Line if p Register Line get Delay null return false return true Allows you to read only one record from the Result Set param p Rs The result set from which to extract the Absence object throws Exception throws Invalid Value Exception private Absence load Absence From Rs Result Set p Rs throws Exception Invalid Value Exception Absence absence new Absence absence set Id Absence p Rs get Int id absence absence set Id User p Rs get Int id user absence set Date Absence Date p Rs get Date date absence absence set Id Justify p Rs get Int id justify absence set Academic Year p Rs get Int accademic year return absence Allows you to read only one record from the Result Set param p Rs The result set from which to extract the Justify object throws Exception throws Invalid Value Exception private Justify load Justify From Rs Result Set p Rs throws Exception Invalid Value Exception Justify justify new Justify justify set Id Justify p Rs get Int id justify justify set Id User p Rs get Int id user justify set Date Justify Date p Rs get Date date justify justify set Academic Year p Rs get Int accademic year return justify Allows you to read only one record from the Result Set param p Rs The result set from which to extract the Notes object throws Exception throws Invalid Value Exception private Note load Note From Rs Result Set p Rs throws Exception Invalid Value Exception Note note new Note note set Id Note p Rs get Int id note note set Id User p Rs get Int id user note set Date Note Date p Rs get Date date note note set Description p Rs get String description note set Teacher p Rs get String teacher note set Academic Year p Rs get Int accademic year return note Allows you to read only one record from the Result Set param p Rs The result set from which to extract the Delay object throws Exception throws Invalid Value Exception private Delay load Delay From Rs Result Set p Rs throws Exception Invalid Value Exception Delay delay new Delay delay set Id Delay p Rs get Int id delay delay set Id User p Rs get Int id user delay set Date Delay Date p Rs get Date date delay delay set Time Delay p Rs get String time delay delay set Academic Year p Rs get Int accademic year return delay 
package smos storage import smos bean Teaching import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage connection Management Connection import smos storage connection Management exception Connection Exception import smos utility Utility import java sql Result Set import java sql Exception import java util Collection import java util Vector import java sql Connection Teaching manager class author Giulio Amora version Copyright by public class Manager Teaching private static Manager Teaching instance The name of the teaching table public static final String teaching The name of the table that shapes the association many to many between addresses and teachings public static final String address has teaching The name of the table that models the association many to many among users and teachings public static final String teacher has classroom The class builder private Manager Teaching super The only instance of existing teaching returns return Returns the instance of the class public static synchronized Manager Teaching get Instance if instance null instance new Manager Teaching return instance Verify the existence of a teaching in the database param p Teaching The teaching to control return Returns true if there is past teaching as a parameter otherwise false throws Mandatory Field Exception throws Exception throws Connection Exception public synchronized boolean exists Teaching p Teaching throws Mandatory Field Exception Connection Exception Exception boolean result false Connection connect null if p Teaching get Name null throw new Mandatory Field Exception Specify the name try We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception String sql Manager Teaching name Utility is Null p Teaching get Name Send Query to Data Base Result Set t Rs Utility query Operation connect sql if t Rs next result true return result finally Connection release Connection connect Inserts a new teaching in the teaching table param p Teaching The teaching to be included throws Exception throws Connection Exception throws Mandatory Field Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized void insert Teaching p Teaching throws Mandatory Field Exception Connection Exception Exception Entity Not Found Exception Invalid Value Exception Connection connect null try control of mandatory fields if p Teaching get Name null throw new Mandatory Field Exception Specify the name field connect Connection get Connection if connect null throw new Connection Exception Prepare Sql string String sql Manager Teaching name Utility is Null p Teaching get Name Utility execute Operation connect sql p Teaching set Id Utility get Max Value id teaching Manager Teaching finally releases resources Connection release Connection connect Update a teaching in the teaching table param p Teaching Teaching to be modified throws Connection Exception throws Exception throws Entity Not Found Exception throws Mandatory Field Exception public synchronized void update Teaching p Teaching throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Connection connect null try if p Teaching get Id throw new Entity Not Found Exception Ca n t find the teaching if p Teaching get Name null throw new Mandatory Field Exception Specify the name field Prepare string String sql Manager Teaching name Utility is Null p Teaching get Name id teaching Utility is Null p Teaching get Id make a new connection and send the query connect Connection get Connection if connect null throw new Connection Exception Utility execute Operation connect sql finally releases resources Connection release Connection connect Delete a teaching from the teaching table param p Teaching The teaching to be eliminated throws Mandatory Field Exception throws Entity Not Found Exception throws Exception throws Connection Exception throws Invalid Value Exception public synchronized void delete Teaching p Teaching throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Invalid Value Exception Connection connect null try Manager Teaching get Instance teaching On Delete Cascade p Teaching connect Connection get Connection Prepare string String sql Manager Teaching id teaching Utility is Null p Teaching get Id Utility execute Operation connect sql finally releases resources Connection release Connection connect Returns the id of the past teaching as a parameter param p Teaching The teaching of which the id is required return Returns the id of the past teaching as a parameter throws Entity Not Found Exception throws Connection Exception throws Exception public synchronized int get Teaching Id Teaching p Teaching throws Entity Not Found Exception Connection Exception Exception int result Connection connect null try if p Teaching null throw new Entity Not Found Exception Unable to find teaching Preparing string to retrieve information corresponding to the id of the teaching passed as a parameter String t Sql id teaching Manager Teaching name Utility is Null p Teaching get Name We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result t Rs get Int id teaching return result finally Connection release Connection connect Returns the name of the teaching corresponding to the past id as parameter param p Id The teaching id return Returns a string containing the name of the teaching throws Entity Not Found Exception throws Connection Exception throws Exception public synchronized String get Teaching Name By Id int p Id throws Entity Not Found Exception Connection Exception Exception String result Connection connect null try If the id has not been provided we return an error code if p Id throw new Entity Not Found Exception Ca n t find the teaching Preparing string to retrieve information corresponding to the id of the past teaching as a parameter String t Sql name Manager Teaching id teaching Utility is Null p Id We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result t Rs get String name else throw new Entity Not Found Exception Ca n t find the teaching return result finally Connection release Connection connect Returns the instruction corresponding to the past id as a parameter param p Id The teaching id return Returns the teaching associated with the past id as a parameter throws Connection Exception throws Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized Teaching get Teaching By Id int p Id throws Connection Exception Exception Entity Not Found Exception Invalid Value Exception Teaching result null Connection connect null try if p Id throw new Entity Not Found Exception Unable to find teaching We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Prepare string String sql Manager Teaching id teaching Utility is Null p Id Send Query to Data Base Result Set p Rs Utility query Operation connect sql if p Rs next result this load Record From Rs p Rs else throw new Entity Not Found Exception Unable to find teaching return result finally releases resources Connection release Connection connect Return the set of all the teachings in the database return collection of teachings returns throws Connection Exception throws Exception throws Invalid Value Exception throws Entity Not Found Exception public synchronized Collection Teaching get Teachings throws Connection Exception Exception Invalid Value Exception Entity Not Found Exception Collection Teaching result null Connection connect null try Prepare string String sql Manager Teaching name We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set p Rs Utility query Operation connect sql if p Rs next result this load Records From Rs p Rs return result finally releases resources Connection release Connection connect Return the set of lessons associated with the corresponding user to the past id as a parameter param p Id User return collection of teachings returns throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Collection Teaching get Teachings By User Id int p Id throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Collection Teaching result null Connection connect null if p Id throw new Entity Not Found Exception specify user try Prepare string String sql Manager Teaching Manager Teaching Manager Teaching Manager Teaching id teaching Manager Teaching id teaching Manager Teaching id user Utility is Null p Id name We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set p Rs Utility query Operation connect sql if p Rs next result this load Records From Rs p Rs return result finally releases resources Connection release Connection connect Return to the set of teachings that the teacher teaches in the class param p Id Teacher User param p Id Class class id return collection of teachings returns throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Collection Teaching get Teachings By User Id Class int p Id Teacher int p Id Class throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Collection Teaching result null Connection connect null if p Id Teacher throw new Entity Not Found Exception specify user if p Id Class throw new Entity Not Found Exception specify the class try Prepare string String sql Manager Teaching Manager Teaching Manager Teaching Manager Teaching id user Utility is Null p Id Teacher Manager Teaching id teaching Utility is Null p Id Class Manager Teaching id teaching Manager Teaching id teaching name We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set p Rs Utility query Operation connect sql if p Rs next result this load Records From Rs p Rs return result finally releases resources Connection release Connection connect Check if a teaching has an assigned professor param p Teaching The teaching to control return Returns true if teaching has a teacher assigned false otherwise throws Exception throws Entity Not Found Exception throws Connection Exception throws Invalid Value Exception public synchronized boolean has Teacher Teaching p Teaching throws Exception Entity Not Found Exception Connection Exception Invalid Value Exception Connection connect null boolean result false if p Teaching get Id throw new Entity Not Found Exception Specify teaching try connect Connection get Connection if connect null throw new Connection Exception Prepare sql string String sql Manager Teaching id teaching Utility is Null p Teaching get Id Send the Query to the database Result Set p Rs Utility query Operation connect sql if p Rs next result true return result finally we release resources Connection release Connection connect Return the set of teachings associated with the specified class param p Id Class return collection of teachings returns throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Collection Teaching get Teachings By Classroom Id int p Id throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Collection Teaching result null Connection connect null if p Id throw new Entity Not Found Exception specify the Class id try Prepare string String sql Manager Teaching Manager Classroom Manager Teaching Manager Teaching Manager Classroom id classroom Utility is Null p Id Manager Classroom id address Manager Teaching id address Manager Teaching id teaching Manager Teaching id teaching We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set p Rs Utility query Operation connect sql if p Rs next result this load Records From Rs p Rs return result finally releases resources Connection release Connection connect Return the set of teachings associated with the specified class param name Class name return collection of teachings returns throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Collection Teaching get Teachings By Classroom Name String name throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Collection Teaching result null Connection connect null if name null name throw new Entity Not Found Exception specify the name of the Class try Prepare string String sql Manager Teaching Manager Classroom Manager Teaching Manager Teaching Manager Classroom name Utility is Null name Manager Classroom id address Manager Teaching id address Manager Teaching id teaching Manager Teaching id teaching We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set p Rs Utility query Operation connect sql if p Rs next result this load Records From Rs p Rs return result finally releases resources Connection release Connection connect public synchronized Collection Teaching get Teachings By Id User Id Classroom int p User int p Class throws Exception Entity Not Found Exception Connection Exception Invalid Value Exception Collection Teaching result null Connection connect null try connect Connection get Connection if connect null throw new Connection Exception Prepare sql string select teaching from teacher has classroom teaching where thc id user thc id classroom thc id teaching teaching id teaching String sql Manager Teaching Manager User Manager Teaching Manager User id user Utility is Null p User Manager User id classroom Utility is Null p Class Manager User id teaching Manager Teaching id teaching Send the Query to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set p Rs Utility query Operation connect sql if p Rs next result this load Records From Rs p Rs return result finally releases resources Connection release Connection connect Lets you read a record from the Result Set param p Rs The result of the query return Return the teaching read throws Exception throws Invalid Value Exception private Teaching load Record From Rs Result Set p Rs throws Exception Invalid Value Exception Teaching teaching new Teaching teaching set Name p Rs get String name teaching set Id p Rs get Int id teaching return teaching Allows you to read records from the Result Set param p Rs The result of the query return The collection of teachings read returns throws Exception throws Invalid Value Exception private Collection Teaching load Records From Rs Result Set p Rs throws Exception Invalid Value Exception Collection Teaching result new Vector Teaching do result add load Record From Rs p Rs while p Rs next return result 
Transitional page import smos bean page import smos storage Manager User taglib prefix c uri http java sun com jsp jstl core taglib prefix display uri http displaytag sf net page import smos utility Utility User logged User User session get Attribute logged User if logged User null Manager User get Instance is Administrator logged User response send Redirect index htm return html head title School Onitoring System title meta http equiv Content Type content text html charset iso link rel stylesheet href stylesheets generic css type text css link rel stylesheet href stylesheets display css type text css head body div id container div id header div div id content center style overflow y scroll div id navigation a class generic Link href if Manager User get Instance is Administrator logged User home Page home Admin jsp Home a font style color font size pt Gestione Utenti font div div id userspace User b logged User get First Name logged User get Last Name b br a style font size px class generic Link href logout Esci a a style font size px class generic Link href user Management alter Personal Date jsp Modifica Password a div h align left h table id transparent align center tr id transparent td id transparent if Manager User get Instance is Administrator logged User p class button a class menu Link href user Management insert User jsp Nuovo Utente a p td tr table br display table name session Scope user List pagesize sort list id user defaultsort class datatable export true display set Property name basic msg empty list caption p Non ci sono utenti da visualizzare p caption display set Property display set Property name export pdf value true display column property name title Nome style width px sortable true header Class td Header Column display column property Mail style width px title e mail sortable true header Class td Header Column display column style width px title Visualizza sortable false header Class td Header Column if User List Item user get Id a href show User Details user Id User List Item user get Id img src images details jpg border none a display column display table div div id footer p Utility get Text Footer p div div body html 
package smos storage import smos bean Teaching import smos bean User List Item import smos bean Votes import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage connection Management Connection import smos storage connection Management exception Connection Exception import smos utility Utility import java sql Result Set import java sql Exception import java util Collection import java util Vector import java sql Connection Class vote manager author Luigi Colangelo version Copyright by public class Manager Votes private static Manager Votes instance The name of the rating table public static final String votes The class builder public Manager Votes super The only instance of the existing vote returns return Return the class instance public static synchronized Manager Votes get Instance if instance null instance new Manager Votes return instance Check for voting in the database param p Votes the vote to be checked return Returns true if the passed grade exists as a parameter otherwise false throws Mandatory Field Exception throws Exception throws Connection Exception public synchronized boolean exists Votes p Votes throws Mandatory Field Exception Connection Exception Exception boolean result false Connection connect null if p Votes get Id votes throw new Mandatory Field Exception Specify the id try We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception String sql Manager Votes id votes Utility is Null p Votes get Id votes Send Query to Data Base Result Set t Rs Utility query Operation connect sql if t Rs next result true return result finally Connection release Connection connect Inserts a new vote in the Votes table param p Votes the vote to be inserted throws Exception throws Connection Exception throws Mandatory Field Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized void insert Votes p Votes throws Mandatory Field Exception Connection Exception Exception Entity Not Found Exception Invalid Value Exception Connection connect null try connect Connection get Connection if connect null throw new Connection Exception Prepare Sql string String sql Manager Votes id user id teaching written oral laboratory Accademic Year turn Utility is Null p Votes get Id user Utility is Null p Votes get Teaching Utility is Null p Votes get Written Utility is Null p Votes get Oral Utility is Null p Votes get Laboratory Utility is Null p Votes get Accademic Year Utility is Null p Votes get Turn Utility execute Operation connect sql p Votes set Id votes Utility get Max Value id votes Manager Votes finally releases resources Connection release Connection connect Update a vote in the votes table param p Votes vote to be changed throws Connection Exception throws Exception throws Entity Not Found Exception throws Mandatory Field Exception public synchronized void update Votes p Votes throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Connection connect null try if p Votes get Id votes throw new Entity Not Found Exception Unable to find the vote if p Votes get Id user throw new Mandatory Field Exception Specify the vote user if p Votes get Teaching throw new Mandatory Field Exception Specify the teaching of voting if p Votes get Accademic Year throw new Mandatory Field Exception Specify the academic year if p Votes get Turn throw new Mandatory Field Exception Specify semester Prepare string String sql Manager Votes id user Utility is Null p Votes get Id user id teaching Utility is Null p Votes get Teaching written Utility is Null p Votes get Written oral Utility is Null p Votes get Oral laboratory Utility is Null p Votes get Laboratory accademic Year Utility is Null p Votes get Accademic Year turn Utility is Null p Votes get Turn id votes Utility is Null p Votes get Id votes make a new connection and send the query connect Connection get Connection if connect null throw new Connection Exception Utility execute Operation connect sql finally releases resources Connection release Connection connect Check if a student passed as a parameter has a grade assigned in the past teaching as a parameter in the past year as a parameter and in the past quarter as a parameter param p Teaching The teaching to be controlled param p User List Item The student to check return Return the id of the vote otherwise throws Exception throws Entity Not Found Exception throws Connection Exception throws Invalid Value Exception public synchronized int get Id Votes Teaching p Teaching int academic Year int turn User List Item p User throws Exception Entity Not Found Exception Connection Exception Invalid Value Exception Connection connect null int result Votes v null if p Teaching get Id throw new Entity Not Found Exception Specify teaching if p User get Id throw new Entity Not Found Exception Specify user try connect Connection get Connection if connect null throw new Connection Exception Prepare sql string String sql Manager Votes id teaching Utility is Null p Teaching get Id Manager Votes Accademic Year Utility is Null academic Year Manager Votes turn Utility is Null turn Manager Votes id user Utility is Null p User get Id Send the Query to the database Result Set p Rs Utility query Operation connect sql if p Rs next v this load Record From Rs p Rs result v get Id votes return result finally we release resources Connection release Connection connect Delete a vote from the votes table param p Votes The vote to be eliminated throws Mandatory Field Exception throws Entity Not Found Exception throws Exception throws Connection Exception throws Invalid Value Exception public synchronized void delete Votes p Votes throws Connection Exception Exception Entity Not Found Exception Mandatory Field Exception Invalid Value Exception Connection connect null try Manager Teaching get Instance teaching On Delete Cascade p Teaching connect Connection get Connection Prepare string String sql Manager Votes id votes Utility is Null p Votes get Id votes Utility execute Operation connect sql finally Connection release Connection connect Returns the teaching id corresponding to the id of the past grade as parameter param p Id The id of the vote return Returns the teaching id throws Entity Not Found Exception throws Connection Exception throws Exception Returns the instruction corresponding to the past id as a parameter param p Id The teaching id return Returns the teaching associated with the past id as a parameter throws Connection Exception throws Exception throws Entity Not Found Exception throws Invalid Value Exception public synchronized Votes get Votes By Id int p Id throws Connection Exception Exception Entity Not Found Exception Invalid Value Exception Votes result null Connection connect null try if p Id throw new Entity Not Found Exception Unable to find the vote We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Prepare string String sql Manager Votes id votes Utility is Null p Id Send Query to Data Base Result Set p Rs Utility query Operation connect sql if p Rs next result this load Record From Rs p Rs else throw new Entity Not Found Exception Ca n t find the teaching return result finally releases resources Connection release Connection connect public synchronized String get Teaching Id By Votes Id int p Id throws Entity Not Found Exception Connection Exception Exception String result Connection connect null try If the id has not been provided we return an error code if p Id throw new Entity Not Found Exception Unable to find the vote Preparing string to retrieve information corresponding to the id of the past teaching as a parameter String t Sql id teaching Manager Votes id votes Utility is Null p Id We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next result t Rs get String id teaching else throw new Entity Not Found Exception Unable to find the vote return result finally Connection release Connection connect Returns the set of all votes in the database return Returns a collection of votes throws Connection Exception throws Exception throws Invalid Value Exception throws Entity Not Found Exception public synchronized Collection Votes get Votes throws Connection Exception Exception Invalid Value Exception Entity Not Found Exception Collection Votes result null Connection connect null try Prepare string String sql Manager Votes id votes We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set p Rs Utility query Operation connect sql if p Rs next result this load Records From Rs p Rs return result finally releases resources Connection release Connection connect Returns the set of votes associated with the corresponding user to the id passed as a parameter param p Id The user id return Returns a collection of votes throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Collection Votes get Votes By User Id int p Id throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Collection Votes result null Connection connect null if p Id throw new Entity Not Found Exception specify user try Prepare string String sql Manager Votes Manager Votes Manager Votes id user Utility is Null p Id id user We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set p Rs Utility query Operation connect sql if p Rs next result this load Records From Rs p Rs return result finally releases resources Connection release Connection connect Returns the set of votes associated with the corresponding user to the id passed as a parameter param p Id The user id return Returns a collection of votes throws Entity Not Found Exception throws Connection Exception throws Exception throws Invalid Value Exception public synchronized Collection Votes get Votes By User Id Year Turn int p Id int p Year int p Turn throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Collection Votes result null Connection connect null if p Id throw new Entity Not Found Exception specify user try Prepare string String sql Manager Votes Manager Votes Manager Votes id user Utility is Null p Id Manager Votes accademic Year Utility is Null p Year Manager Votes turn Utility is Null p Turn id user We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Result Set p Rs Utility query Operation connect sql if p Rs next result this load Records From Rs p Rs return result finally releases resources Connection release Connection connect public synchronized void delete Votes By User Id Year Turn int p Id int p Year int p Turn throws Entity Not Found Exception Connection Exception Exception Invalid Value Exception Connection connect null if p Id throw new Entity Not Found Exception specificare l utente try Prepare string String sql Manager Votes Manager Votes Manager Votes id user Utility is Null p Id Manager Votes Accademic Year Utility is Null p Year Manager Votes turn Utility is Null p Turn We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception Send Query to Data Base Utility execute Operation connect sql finally releases resources Connection release Connection connect Lets you read a record from the Result Set param p Rs The result of the query return Return the read vote throws Exception throws Invalid Value Exception private Votes load Record From Rs Result Set p Rs throws Exception Invalid Value Exception Votes votes new Votes votes set Id votes p Rs get Int id votes votes set Id user p Rs get Int id user votes set Teaching p Rs get Int id teaching votes set Written p Rs get Int written votes set Oral p Rs get Int oral votes set Laboratory p Rs get Int laboratory votes set Accademic Year p Rs get Int Accademic Year votes set Turn p Rs get Int turn return votes Allows you to read records from the Result Set param p Rs The result of the query return Returns the collection of read teachings throws Exception throws Invalid Value Exception private Collection Votes load Records From Rs Result Set p Rs throws Exception Invalid Value Exception Collection Votes result new Vector Votes do result add load Record From Rs p Rs while p Rs next return result 
package smos exception import java lang Exception This class represents the exception generated when attempting to enter an entity without specifying a mandatory field public class Mandatory Field Exception extends Exception private static final long serial Version Generate the exception without an associated error message public Mandatory Field Exception super Mandatory Field Missing Generate the exception with an associated error message param p Message The error message to be associated to the exception public Mandatory Field Exception String p Message super p Message 
package smos bean import java io Serializable import java util Date Class modelling a note on the log author Nicola Pisanti version public class Note implements Serializable private static final long serial Version private int id Note private int id User private Date date Note private String description private String teacher private int academic Year public Note Method that returns the note id return an integer representing the note id public int get Id Note return id Note Method to set the note id param an integer representing the new id value public void set Id Note int p Id Note this id Note p Id Note Method that returns the id of the student who received the note return the id of the user who received the note public int get Id User return id User Method to set the id of the student who received the note param an integer representing the new id value public void set Id User int p Id User this id User p Id User Method that returns a string representing the date the note was given return a string representing the date of the note public Date get Date Note return date Note Method that sets a string representing the date the note was given param the string representing the new date public void set Date Note Date p Date Note this date Note p Date Note Method that returns note text return a string representing the note text public String get Description return description Method setting the description of the note param a string containing the description of the note public void set Description String p Description this description p Description Method that returns the id of the teacher who gave the note return an integer representing the teacher id public String get Teacher return teacher Method setting the id of the teacher who gave the note param teacher the teacher to set public void set Teacher String p Teacher this teacher p Teacher Method that returns the current academic year return an integer indicating the year the lessons start public int get Academic Year return academic Year Medoto setting the current academic year during the assignment of the note param an integer indicating the start year of the lessons to be entered public void set Academic Year int academic Year this academic Year academic Year 
Not Yet Implemented Exception package smos storage connection Management exception This exception is thrown as a warning from a part of the code which has not been implemented yet but will be in future public class Not Implemented Yet Exception extends Runtime Exception private static final long serial Version public Not Implemented Yet Exception super param p Message public Not Implemented Yet Exception String p Message super p Message 
package smos exception import java lang Exception This class represents the exception generated when a user tries to perform an operation for which you do not have permission public class Permission Exception extends Exception private static final long serial Version Generate the exception without an associated error message public Permission Exception super Permission Denied Generate the exception with an associated error message param p Message The error message to be associated to the exception public Permission Exception String p Message super p Message 
package smos bean import java io Serializable public class Register Line implements Serializable Class modelling a log line author Nicola Pisanti version private static final long serial Version private User List Item student private Absence absence private Delay delay public Register Line absence null delay null Method that returns the student of this log line return a User object representing the student public User List Item get Student return student Method that sets the student to this log line param a User object representing the student to enter public void set Student User List Item student this student student Method that returns the student s absence from this log line return an Absence object representing absence or null if the student was present public Absence get Absence return absence Method that sets the student s absence from this log line param an object of type Absence to set public void set Absence Absence absence this absence absence Method that returns the student s delay in this log line return a Delay object representing the delay or null if the student arrived on time or was absent public Delay get Delay return delay Method setting the student s delay in this log line param a Delay object to set public void set Delay Delay delay this delay delay 
package smos bean import java util Array List import smos exception Invalid Value Exception Class used to model a report card author Luigi Colangelo version Copyright by public class Report public Array List Votes pagella The class manufacturer public Report pagella new Array List Votes Method that returns the vote from the index in the input array param p Ind rating in array return the rating of the given index throws Invalid Value Exception public Votes get Votes int p Ind throws Invalid Value Exception if p Ind p Ind pagella size throw new Invalid Value Exception indice non valido return pagella get p Ind Method that adds a vote to the array param p Votes the vote to add throws Invalid Value Exception public void add Votes Votes p Votes throws Invalid Value Exception if p Votes null throw new Invalid Value Exception invalid vote else pagella add p Votes Method to delete a vote from the array param p Id is the index of the vote to be deleted from the array throws Invalid Value Exception public void remove int p Id throws Invalid Value Exception if p Id p Id pagella size throw new Invalid Value Exception invalid index pagella remove p Id public String To String String pag for Votes e pagella pag pag n e to String return pag 
package smos bean import java io Serializable Class used to model a user s role author Bavota Gabriele Carnival Filomena public class Role implements Serializable private static final long serial Version The id of the administrator role public static final int The id of the teacher role public static final int Student role id public static final int The id of the parent role public static final int The id of the role ata public static final int The id of the direction role public static final int 
package smos application address Management import smos Environment import smos bean Address import smos bean User import smos exception Duplicated Entity Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Address import smos storage Manager Teaching import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to assign Teachings to a teacher author Giulio Amora version Copyright by public class Servlet Add Remove Teachings As Address extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page show Address List String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance Manager Teaching manager Teaching Manager Teaching get Instance Manager Address manager Address Manager Address get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp need the address id and the two lesson lists Address address Address session get Attribute address String id Selected List p Request get Parameter Values selected Teachings String id Unselected List p Request get Parameter Values unselected Teachings int n Selected id Selected List length int n Unselected id Unselected List length int temp We add selected teachings for int i i n Selected i temp Integer value Of id Selected List i if manager Address has Teaching manager Teaching get Teaching By Id temp address manager Address assign Teaching As Address address manager Teaching get Teaching By Id temp Remove unselected teachings for int i i n Unselected i temp Integer value Of id Unselected List i if manager Address has Teaching manager Teaching get Teaching By Id temp address manager Address remove Teaching As Address address manager Teaching get Teaching By Id temp session set Attribute teaching List Teacher list Selcected catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception e Auto generated catch block e print Stack Trace catch Mandatory Field Exception e Auto generated catch block e print Stack Trace catch Duplicated Entity Exception e Auto generated catch block e print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application address Management import java io Exception import java sql Exception import java util import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Teaching import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage import smos storage connection Management exception Connection Exception public class Servlet Address Teachings extends Http Servlet Servlet used to display teachings associated with an address author Vecchione Giuseppe private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management address Management address Teachings jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance Manager Teaching manager Teaching Manager Teaching get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp Collection Teaching teaching List manager Teaching get Teachings session set Attribute teaching List teaching List catch Number Format Exception number Format Exception error Message Environment number Format Exception get Message goto Page error jsp number Format Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception e Auto generated catch block e print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager Teaching import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to assign Teachings to a teacher author Giulio Amora version Copyright by public class Servlet Add Teaching As Teacher extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management user Management teacher Teachings jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance Manager Teaching manager Teaching Manager Teaching get Instance Manager Classroom manager Class Manager Classroom get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp need the Id user class teachings do n t know how many there are int id Teacher int User session get Attribute user get Id User teacher manager User get User By Id id Teacher int id Class Integer value Of p Request get Parameter class Id String id Teaching List p Request get Parameter Values selected Teachings int n Teaching id Teaching List length int temp Collection Teaching list Selcected new Vector Teaching if id Teaching List null goto Page error jsp else for int i i n Teaching i temp Integer value Of id Teaching List i if manager User has Teaching teacher manager Teaching get Teaching By Id temp manager Class get Classroom By id Class manager User assign Teacher At Classroom Teaching teacher id Class temp list Selcected add manager Teaching get Teaching By Id temp session set Attribute teaching List Teacher list Selcected catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception e Auto generated catch block e print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean User import smos exception Duplicated Entity Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager User import smos storage connection Management exception Connection Exception Change server Password of the logged in user author Napolitano Vincenzo public class Servlet Alter Personal Date extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page show User List String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User user User session get Attribute logged User User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp verify that the login is unique if manager User exists Login user throw new Invalid Value Exception La login inserita esiste gia Inserire una nuova login user set Password p Request get Parameter pass We update if manager User exists user manager User update user else int user Id manager User get User Id user if user get Id user Id manager User update user else throw new Duplicated Entity Exception Existing user catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Duplicated Entity Exception duplicated Entity Exception error Message Environment duplicated Entity Exception get Message goto Page error jsp duplicated Entity Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import java io Exception import java sql Exception import java util Collection import java util Iterator import java util Vector import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean User import smos bean User List Item import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager User import smos storage connection Management exception Connection Exception Servlet modifying the student record with the id of the father author Napolitano Vincenzo public class Servlet Assign Parent Student extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page show User List String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User Verify that the user is logged in try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp User user User session get Attribute user int id Parent user get Id Collection User List Item students new Vector User List Item Iterator User List Item it Stu null students manager User get Students String selected Student p Request get Parameter Values selected Student String unselected Student p Request get Parameter Values unselected Student if selected Student null int selectedlength selected Student length User List Item tmp null User stu null int id Student for int i i selectedlength i it Stu students iterator String dd selected Student i id Student Integer parse Int dd while it Stu has Next tmp User List Item it Stu next if tmp get Id id Student stu manager User get User By Id tmp get Id recupero user Studente manager User assign Parent stu id Parent else goto Page error jsp if unselected Student null it Stu null int unselectedlength unselected Student length User List Item tmp null User stu null int id Student for int i i unselectedlength i it Stu students iterator String dd unselected Student i id Student Integer parse Int dd while it Stu has Next tmp User List Item it Stu next if tmp get Id id Student stu manager User get User By Id tmp get Id recupero user Studente manager User remove Parent stu session set Attribute user user catch Number Format Exception number Format Exception error Message Environment number Format Exception get Message goto Page error jsp number Format Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean Role import smos bean User import smos bean User List Item import smos exception Delete Manager Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import java util Iterator import java util Vector import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to assign one or more roles to a user author Napolitano Vincenzo public class Servlet Assign Role extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page show User List String error Message Http Session session p Request get Session Collection User List Item administrators new Vector User List Item Iterator User List Item it Admin null Manager User manager User Manager User get Instance User logged User User session get Attribute logged User Verify that the user is logged in try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp User user User session get Attribute user administrators manager User get Administrators it Admin administrators iterator it Admin next String selected Roles p Request get Parameter Values selected Roles String unselected Roles p Request get Parameter Values unselected Roles if selected Roles null int selectedlength selected Roles length for int i i selectedlength i int role Integer value Of selected Roles i Let s see if the role we re assigning is that of teacher if role Role manager User is Teacher user goto Page load Year For Teachings we check if the role we are assigning and student if role Role manager User is Student user goto Page show User List we check if the role we are assigning and parent if role Role manager User is Parent user goto Page persistent Data Management user Management show Student Parent Form jsp manager User assign Role user role if unselected Roles null int unselectedlength unselected Roles length for int i i unselectedlength i int role Integer value Of unselected Roles i if manager User is Administrator user it Admin has Next role Role throw new Delete Manager Exception Unable to change user role it is the only Administrator of the system Create a new Administrator and try again manager User remove Role user role session set Attribute user user catch Number Format Exception number Format Exception error Message Environment number Format Exception get Message goto Page error jsp number Format Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Delete Manager Exception delete Manager Exception error Message Environment delete Manager Exception get Message goto Page error jsp delete Manager Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import java io Exception import java sql Exception import java util Collection import java util Iterator import java util Vector import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean Role import smos bean User import smos bean User List Item import smos exception Delete Manager Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Classroom import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Assign Student Classroom extends Http Servlet protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page show User List String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance Manager Classroom manager Classroom Manager Classroom get Instance User logged User User session get Attribute logged User Verify that the user is logged in try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp Selected student User user User session get Attribute user selected academic year int academic Year Integer value Of p Request get Parameter accademic Year id selected class which is zero if we want to delete The association int id Classroom Integer value Of p Request get Parameter class Id Classroom p null p manager Classroom get Classroom By User Academic Year user academic Year if p null manager User remove Student Classroom user p get Id Classroom if id Classroom manager User assign Student Classroom user id Classroom catch Number Format Exception number Format Exception error Message Environment number Format Exception get Message goto Page error jsp number Format Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception e Auto generated catch block e print Stack Trace catch Mandatory Field Exception e Auto generated catch block e print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application register Management import java io Exception import java sql Exception import java util Collection import java util Date import java util Vector import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Computate Statistics extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response Suppress Warnings deprecation protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page statistics Management show Statisticts By Academic Year jsp String error Message Http Session session p Request get Session Integer academic Year Integer value Of p Request get Parameter academic Year Integer absence Limit Integer value Of p Request get Parameter absence Limit Integer note Limit Integer value Of p Request get Parameter note Limit Manager User manager User Manager User get Instance User logged User User session get Attribute logged User Collection User alert Student Absence new Vector User Date today new Date int unjustified Absence null Collection User alert Student Note new Vector User int note null User tmp User null try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User manager User is Director logged User error Message The logged in User does not have access to functionality goto Page error jsp if academic Year academic Year today get Year Collection Integer academic Year List Manager Classroom get Instance get Academic Year List unjustified Absence manager User get Highlights Student Absence academic Year if unjustified Absence null for int i i unjustified Absence length i if unjustified Absence i absence Limit tmp User manager User get User By Id unjustified Absence i alert Student Absence add tmp User note manager User get Highlights Student Note academic Year if note null for int i i note length i if note i note Limit tmp User manager User get User By Id note i alert Student Note add tmp User session set Attribute alert Student Absence alert Student Absence session set Attribute alert Student Note alert Student Note session set Attribute academic Year List academic Year List session set Attribute absence Limit absence Limit session set Attribute note Limit note Limit session set Attribute year Selected academic Year catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application address Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Address import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Address import smos storage Manager User import smos storage connection Management exception Connection Exception Servlet used to delete an address from the database author Vecchione Giuseppe public class Servlet Delete Address extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String error Message String goto Page show Address List Manager User manager User Manager User get Instance Manager Address manager Address Manager Address get Instance Http Session session p Request get Session User logged User User session get Attribute logged User Address address null try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in user does not have access to the feature goto Page error jsp address Address session get Attribute address manager Address delete address catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application classroom Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Classroom import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Delete Classroom extends Http Servlet Servlet to delete a class author Nicola Pisanti version private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response int a String goto Page show Classroom List academic Year a String error Message Http Session session p Request get Session User logged User User session get Attribute logged User Manager User manager User Manager User get Instance Manager Classroom manager Classroom Manager Classroom get Instance Verify that the user is logged in try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp Classroom classroom Classroom session get Attribute classroom a Integer value Of classroom get Academic Year manager Classroom delete classroom goto Page show Classroom List academic Year a catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Delete Manager Exception delete Manager Exception error Message Environment delete Manager Exception get Message goto Page error jsp delete Manager Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application register Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Justify import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Register import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Delete Justify extends Http Servlet private static final long serial Version protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page register Management show Register jsp String error Message Http Session session p Request get Session User logged User User session get Attribute logged User String id Classroom String session get Attribute id Classroom int id Integer parse Int id Classroom goto Page id Classroom id Manager User manager User Manager User get Instance Manager Register m Manager Register get Instance Verify that the user is logged in try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp Justify justify Justify session get Attribute justify if m exists justify m delete Justify justify get Id Justify else error Message impossible to delete justifies this does not exist goto Page error jsp catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application register Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Note import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Register import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Delete Note extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User instantiate objects here Manager Register manager Register Manager Register get Instance try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp set things to pass to the session use session set Attribute String attribute goto Page show Note List student session get Attribute id Student Note to Delete Note session get Attribute note manager Register delete Note to Delete p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application report Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean User import smos bean User List Item import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager User import smos storage Manager Votes import smos storage connection Management exception Connection Exception public class Servlet Delete Report extends Http Servlet Servlet used to display pupils associated with a Class author Giulio Amora private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page reports Management show Students By Class jsp String error Message Http Session session p Request get Session Manager Votes manager Votes Manager Votes get Instance Manager User manager User Manager User get Instance User logged User User session get Attribute logged User int year int turn int student Id try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp User List Item student User List Item session get Attribute student student Id student get Id year Integer session get Attribute selected Year turn Integer session get Attribute q manager Votes delete Votes By User Id Year Turn student Id year turn p Response send Redirect goto Page catch Number Format Exception number Format Exception error Message Environment number Format Exception get Message goto Page error jsp Year year turn turn id Student student Id number Format Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Year year turn turn id Student student Id Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception e Auto generated catch block e print Stack Trace session set Attribute error Message error Message Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application teaching Management import smos Environment import smos bean import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Teaching import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to delete a teaching author Giulio Amora version Copyright by public class Servlet Delete Teaching extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page teaching List String error Message Http Session session p Request get Session User logged User User session get Attribute logged User Manager User manager User Manager User get Instance Teaching teaching Teaching session get Attribute teaching Manager Teaching manager Teaching Manager Teaching get Instance Verify that the user is logged in try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp else manager Teaching delete teaching catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean User import smos bean User List Item import smos exception Delete Administrator Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import java util Iterator import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to delete a user author Napolitano Vincenzo public class Servlet Delete User extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page show User List String error Message Http Session session p Request get Session Collection User List Item manager null Iterator User List Item it null User logged User User session get Attribute logged User Manager User manager User Manager User get Instance Verify that the user is logged in try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User manager User is Administrator logged User error Message The logged in User does not have access to functionality goto Page error jsp User user User session get Attribute user delete user if not administrator if manager User is Administrator user manager User delete user check if the user is an administrator and if there are others else manager manager User get Administrators it manager iterator it next if it has Next manager User delete user else throw new Delete Administrator Exception catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Delete Administrator Exception delete Administrator Exception error Message Environment delete Administrator Exception get Message goto Page error jsp delete Administrator Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application import javax servlet Servlet Config import javax servlet Servlet Exception import javax servlet http Http Servlet import smos utility Utility Servlet used to initialize system parameters author Bavota Gabriele Carnevale Filomena public class Servlet Initialize extends Http Servlet private static final long serial Version Suppress Warnings unused private Servlet Config config Initialize the parameters public void init Servlet Config config throws Servlet Exception this config config Set the smtp server specified in the xml configuration file Utility set Server Smtp config get Init Parameter server Smtp Set the parameters needed to connect to the Database Utility set Driver My Sql config get Init Parameter driver My Sql Utility set Full Path Database config get Init Parameter full Path Database Utility set User Name config get Init Parameter user Name Utility set Password config get Init Parameter password Utility set Max Pool Size Integer value Of config get Init Parameter max Pool Size Utility set Wait Timeout Integer value Of config get Init Parameter wait Timeout Utility set Active Timeout Integer value Of config get Init Parameter active Timeout Utility set Pool Timeout Integer value Of config get Init Parameter pool Timeout Utility set Text Footer config get Init Parameter text Footer 
package smos application address Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Session import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import smos Environment import smos bean User import smos bean Address import smos exception Duplicated Entity Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Address import smos storage Manager User import smos storage connection Management exception Connection Exception Servlet used to enter an address in the database author Vecchione Giuseppe public class Servlet Insert Address extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response public void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page show Address List String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance Manager Address manager Address Manager Address get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in user does not have access to the feature goto Page error jsp Address address new Address address set Name p Request get Parameter name Verify that the address is not present in the database and we insert it if manager Address exists address manager Address insert address else throw new Duplicated Entity Exception Existing address catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Duplicated Entity Exception duplicated Entity Exception error Message Environment duplicated Entity Exception get Message goto Page error jsp duplicated Entity Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application classroom Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean User import smos exception Duplicated Entity Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Classroom import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Insert Classroom extends Http Servlet Servlet to insert a class author Nicola Pisanti version private static final long serial Version Definition of the do Get method param p Request param p Response public void do Get Http Servlet Request p Request Http Servlet Response p Response int a Integer value Of p Request get Parameter academic Year String goto Page show Classroom List academic Year a String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance Manager Classroom manager Classroom Manager Classroom get Instance User logged User User session get Attribute logged User String is Wizard yes try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp int id Add int Integer value Of p Request get Parameter address Classroom classroom new Classroom classroom set Name p Request get Parameter name classroom set Academic Year a classroom set Id Address id Add if classroom get Academic Year throw new Invalid Value Exception the year entered is too old if manager Classroom exists classroom manager Classroom insert classroom session set Attribute is Wizard is Wizard else throw new Duplicated Entity Exception the class already exists in the database catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Duplicated Entity Exception duplicated Entity Exception error Message Environment duplicated Entity Exception get Message goto Page error jsp duplicated Entity Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application register Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Absence import smos bean Justify import smos bean User import smos exception Duplicated Entity Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Register import smos storage Manager User import smos storage connection Management exception Connection Exception import smos utility Utility public class Servlet Insert Justify extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response public void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page register Management show Classroom List jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp Manager Register m Manager Register get Instance Justify justify new Justify justify set Academic Year Integer parse Int p Request get Parameter academic Year justify set Date Justify Utility String Date p Request get Parameter date justify set Id User Integer parse Int p Request get Parameter id User String id p Request get Parameter id Absence int id Absence Integer parse Int id String id p Request get Parameter id Classroom int id Classroom Integer parse Int id goto Page id Classroom Absence absence m get Absence By Id Absence id Absence if m exists absence error Message assenza non prensente nel db goto Page error jsp insertion justifies if m exists justify m insert Justify justify absence session set Attribute justify justify else throw new Duplicated Entity Exception Justifies already existing catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Duplicated Entity Exception duplicated Entity Exception error Message Environment duplicated Entity Exception get Message goto Page error jsp duplicated Entity Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application register Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean Note import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Register import smos storage Manager User import smos storage connection Management exception Connection Exception import smos utility Utility public class Servlet Insert New Note extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User instantiate the objects here Manager Register manager Register Manager Register get Instance try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp set things to pass to the session use session set Attribute String attribute if p Request get Parameter insert null User student User session get Attribute student manager User get User By Id Integer value Of String p Request get Attribute student session set Attribute student student session set Attribute id Student student get Id goto Page register Management insert New Note jsp else Note n Note new Note n Note set Academic Year Classroom session get Attribute classroom get Academic Year n Note set Date Note Utility String Date p Request get Parameter date Note n Note set Id User Integer session get Attribute id Student n Note set Teacher p Request get Parameter note Teacher n Note set Description p Request get Parameter note Description try manager Register insert Note n Note goto Page show Note List student session get Attribute id Student catch Mandatory Field Exception e session set Attribute error e get Message goto Page register Management insert New Note jsp p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application report Management import smos Environment import smos bean Classroom import smos bean Teaching import smos bean User import smos bean User List Item import smos bean Votes import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Teaching import smos storage Manager User import smos storage Manager Votes import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import java util Iterator import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to insert a student report card author Giulio Amora version Copyright by public class Servlet Insert Report extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page show Reports String error Message Http Session session p Request get Session Collection Teaching teaching List null Manager Votes manager Votes Manager Votes get Instance Manager User manager User Manager User get Instance Manager Teaching manager Teaching Manager Teaching get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The connected User does not have access to the functionality goto Page error jsp Classroom classroom Classroom session get Attribute classroom Teaching list teaching List manager Teaching get Teachings By Classroom Id classroom get Id Address Iterator Teaching it Teaching teaching List iterator Integer year Integer session get Attribute selected Year User List Item student User List Item session get Attribute student Four months int turn Integer session get Attribute q Teaching teaching Temp null int id Temp String write oral lab goto Page student student get Id q turn while it Teaching has Next teaching Temp it Teaching next id Temp teaching Temp get Id write scritto id Temp oral orale id Temp lab laboratorio id Temp write p Request get Parameter write oral p Request get Parameter oral lab p Request get Parameter lab Votes new Votes new Votes int write Int oral Int lab Int if write write Int Integer value Of write if oral oral Int Integer value Of oral if lab lab Int Integer value Of lab if write Int oral Int lab Int new Votes set Accademic Year year new Votes set Id user student get Id new Votes set Laboratory lab Int new Votes set Oral oral Int new Votes set Teaching id Temp new Votes set Turn turn new Votes set Written write Int manager Votes insert new Votes p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Mandatory Field Exception e Auto generated catch block e print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application teaching Management import smos Environment import smos bean import smos exception Duplicated Entity Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Teaching import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to insert a course in the Data Base author Giulio Amora version Copyright by public class Servlet Insert Teaching extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response public void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page teaching List String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance Manager Teaching manager Teaching Manager Teaching get Instance User logged User User session get Attribute logged User String is Wizard yes try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp Teaching teaching new Teaching teaching set Name p Request get Parameter name if manager Teaching exists teaching manager Teaching insert teaching session set Attribute teaching teaching session set Attribute is Wizard is Wizard else throw new Duplicated Entity Exception Already existing teaching catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Duplicated Entity Exception duplicated Entity Exception error Message Environment duplicated Entity Exception get Message goto Page error jsp duplicated Entity Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean User import smos exception Duplicated Entity Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Login Exception import smos exception Mandatory Field Exception import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to insert a user into the Data Base author napolitano Vincenzo public class Servlet Insert User extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response public void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page show User List String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp User user new User user set First Name p Request get Parameter first Name user set Last Name p Request get Parameter last Name user set Cell p Request get Parameter cell user set Mail p Request get Parameter e Mail we verify that the login is unique String login p Request get Parameter login user set Login login if manager User exists Login user throw new Invalid Value Exception The login entered already exists Enter a new login if p Request get Parameter password equals p Request get Parameter password user set Password p Request get Parameter password else throw new Login Exception The values entered for the password do not match user input if manager User exists user manager User insert user session set Attribute user user else throw new Duplicated Entity Exception User already exists catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Duplicated Entity Exception duplicated Entity Exception error Message Environment duplicated Entity Exception get Message goto Page error jsp duplicated Entity Exception print Stack Trace catch Login Exception login Exception error Message Environment login Exception get Message goto Page error jsp login Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean Classroom import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to view all academic years present in the db author Giulio Amora version Copyright by public class Servlet Load Class By Accademic Year extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management String error Message Http Session session p Request get Session Collection Classroom classroom List null Manager User manager User Manager User get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User manager User is Director logged User error Message The logged in User does not have access to the functionality goto Page error jsp Date oggi new Date we recover the selected academic year int selected Accademic Year Integer value Of p Request get Parameter accademic Year Manager Classroom manager Classroom Manager Classroom get Instance We calculate the list of classes of the selected academic year classroom List manager Classroom get Classrooms By Academic Year selected Accademic Year session set Attribute classroom List classroom List session set Attribute selected Year selected Accademic Year session remove Attribute selected Class goto Page String session get Attribute go To p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application report Management import smos Environment import smos bean Classroom import smos bean Teaching import smos bean User import smos bean User List Item import smos bean Votes import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Teaching import smos storage Manager User import smos storage Manager Votes import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to upload a student report card author Giulio Amora version Copyright by public class Servlet Load Report extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page reports Management update Report jsp String error Message Http Session session p Request get Session Collection Votes votes List null Collection Teaching teaching List null Manager Votes manager Votes Manager Votes get Instance Manager User manager User Manager User get Instance Manager Teaching manager Teaching Manager Teaching get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The connected User does not have access to the functionality goto Page error jsp Classroom classroom Classroom session get Attribute classroom Teaching list teaching List manager Teaching get Teachings By Classroom Id classroom get Id Address Integer year Integer session get Attribute selected Year Four months int turn Integer session get Attribute q User List Item student User List Item session get Attribute student Votes List votes List manager Votes get Votes By User Id Year Turn student get Id year turn session set Attribute teaching List teaching List session set Attribute votes List votes List test the data p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application report Management import smos Environment import smos bean Classroom import smos bean Teaching import smos bean User import smos bean User List Item import smos bean Votes import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Teaching import smos storage Manager User import smos storage Manager Votes import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to load the list of courses associated with the student s class author Giulio Amora version Copyright by public class Servlet Load Teaching List extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page reports Management insert Report jsp String error Message Http Session session p Request get Session Collection Teaching teaching List null Manager User manager User Manager User get Instance Manager Teaching manager Teaching Manager Teaching get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The connected User does not have access to the functionality goto Page error jsp Classroom classroom Classroom session get Attribute classroom Teaching list teaching List manager Teaching get Teachings By Classroom Id classroom get Id Address Integer year Integer session get Attribute selected Year Four months int turn Integer session get Attribute q User List Item student User List Item session get Attribute student session set Attribute teaching List teaching List p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to view all academic years present in the db author Giulio Amora version Copyright by public class Servlet Load Year extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management String error Message Http Session session p Request get Session Collection Integer year List null Manager User manager User Manager User get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User manager User is Director logged User error Message The logged in User does not have access to the functionality goto Page error jsp Manager Classroom manager Classroom Manager Classroom get Instance year List manager Classroom get Academic Year List goto Page String p Request get Parameter go To session set Attribute accademic Year List year List p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Login Exception import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to login the user author Napolitano Vincenzo public class Servlet Login extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page String error Message Http Session session p Request get Session get the data from the request String login p Request get Parameter user String password p Request get Parameter password User login try Manager User manager User Manager User get Instance if manager User get User By Login login null User logged User manager User login login password if logged User null session set Attribute logged User logged User else throw new Login Exception Nome Utente e o Password errati if manager User is Administrator logged User goto Page home Page home Admin jsp else if manager User is Teacher logged User goto Page home Page home Professor jsp else if manager User is Student logged User goto Page home Page home Student jsp else if manager User is Parent logged User goto Page home Page home Parent jsp else if manager User is Ata People logged User goto Page home Page home Ata People jsp else if manager User is Director logged User goto Page home Page home Director jsp catch Login Exception login Exception error Message Environment login Exception get Message goto Page error jsp login Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import java io Exception import javax servlet Servlet Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response Servlet used to log out the user author napolitano Vincenzo public class Servlet Logout extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response throws Servlet Exception Exception p Request get Session invalidate p Response send Redirect index htm Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response throws Servlet Exception Exception this do Get p Request p Response 
package smos application teaching Management import javax servlet http Http Servlet public class Servlet Prova extends Http Servlet private static final long serial Version 
package smos application user Management import java io Exception import java sql Exception import java util Collection import java util Iterator import java util Vector import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean Role import smos bean User import smos bean User List Item import smos exception Delete Manager Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Remove Student Classroom extends Http Servlet protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance Manager Classroom manager Classroom Manager Classroom get Instance User logged User User session get Attribute logged User Verify that the user is logged in try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp User user User session get Attribute user Classroom classroom Classroom session get Attribute classroom int id Classroom classroom get Id Classroom Collection User List Item student Class Collection User List Item manager User get Students By Classroom Id id Classroom Iterator User List Item it Student null if student Class null it Student student Class iterator while it Student null it Student has Next User List Item stud User List Item it Student next if stud get Id user get Id manager User remove Student Classroom user id Classroom catch Number Format Exception number Format Exception error Message Environment number Format Exception get Message goto Page error jsp number Format Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean Teaching import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager Teaching import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import java util Vector import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to remove Teachings to a teacher author Giulio Amora version Copyright by public class Servlet Remove Teaching As Teacher extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management user Management teacher Teachings jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance Manager Teaching manager Teaching Manager Teaching get Instance Manager Classroom manager Class Manager Classroom get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp need the Id user class teachings do n t know how many there are int id Teacher int User session get Attribute user get Id User teacher manager User get User By Id id Teacher int id Class Integer value Of p Request get Parameter class Id String id Teaching List p Request get Parameter Values unselected Teachings int n Teaching id Teaching List length int temp Collection Teaching list Selcected new Vector Teaching if id Teaching List null goto Page error jsp else for int i i n Teaching i temp Integer value Of id Teaching List i if manager User has Teaching teacher manager Teaching get Teaching By Id temp manager Class get Classroom By id Class manager User remove Teacher At Classroom Teaching teacher id Class temp list Selcected add manager Teaching get Teaching By Id temp session set Attribute teaching List Teacher list Selcected catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception e Auto generated catch block e print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean Classroom import smos bean Teaching import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Classroom import smos storage Manager Teaching import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to view a report of the teachings of a teacher author Giulio Amora version Copyright by public class Servlet Report Teachings extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management user Management show Teacher Details jsp String error Message Http Session session p Request get Session Collection Teaching teaching List null Manager User manager User Manager User get Instance User logged User User session get Attribute logged User User teacher User session get Attribute user try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp we recover the selected academic year int academic Year Integer value Of p Request get Parameter accademic Year Manager Teaching manager Teaching Manager Teaching get Instance Manager Classroom manager Classroom Manager Classroom get Instance We calculate the list of classes in which the teacher teaches based on the selected year Collection Classroom classroom List null classroom List manager Classroom get Classrooms By Teacher Academic Year teacher academic Year session set Attribute classroom List classroom List session set Attribute selected Year academic Year p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Mandatory Field Exception e Auto generated catch block e print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application address Management import smos Environment import smos bean Address import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Address import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to change an address author Vecchione Giuseppe public class Servlet Show Address Details extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management address Management show Address Details jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User int address Id Address address null Manager Address manager Address Manager Address get Instance try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp address Id Integer value Of p Request get Parameter id Address address manager Address get Address By Id address Id session set Attribute address address catch Number Format Exception number Format Exception error Message Environment number Format Exception get Message goto Page error jsp number Format Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception e Auto generated catch block e print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application address Management import java io Exception import java sql Exception import java util Collection import smos Environment import smos bean Address import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Address import smos storage Manager User import smos storage connection Management exception Connection Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to view all addresses author Vecchione Giuseppe public class Servlet Show Address List extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String error Message String goto Page persistent Data Management address Management show Address List jsp Http Session session p Request get Session Collection Address address List null Manager User manager User Manager User get Instance Manager Address manager Address Manager Address get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in user does not have access to the feature goto Page error jsp address List manager Address get Address List session set Attribute address List address List p Response send Redirect goto Page return catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application report Management import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Show Classroom By Academic Year extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page reports Management show Classroom By Academic Year jsp String error Message Http Session session p Request get Session Collection Classroom classroom List null Manager User manager User Manager User get Instance Manager Classroom manager Classroom Manager Classroom get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User manager User is Director logged User error Message The logged in User does not have access to the functionality goto Page error jsp take the academic year from the session int anno Integer value Of p Request get Parameter academic Year if anno classroom List manager Classroom get Classrooms By Academic Year anno session set Attribute classroom List classroom List session set Attribute selected Year anno p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application classroom Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager User import smos storage connection Management exception Connection Exception Servlet to show the details of a class author Vecchione Giuseppe public class Servlet Show Classroom Details extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management classroom Management show Classroom Details jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User int classroom Id Classroom classroom null Manager Classroom manager Classroom Manager Classroom get Instance try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp classroom Id Integer value Of p Request get Parameter id Classroom classroom manager Classroom get Classroom By classroom Id session set Attribute classroom classroom catch Number Format Exception number Format Exception error Message Environment number Format Exception get Message goto Page error jsp number Format Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception e Auto generated catch block e print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application classroom Management import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Show Classroom List extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management classroom Management show Classroom List jsp String error Message Http Session session p Request get Session Collection Classroom classroom List null Manager User manager User Manager User get Instance Manager Classroom manager Classroom Manager Classroom get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp take the academic year from the session classroom List manager Classroom get Classrooms By Academic Year Integer value Of p Request get Parameter academic Year session set Attribute classroom List classroom List p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application register Management import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Show Classroom Management extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page register Management show Classroom List jsp String error Message Http Session session p Request get Session Collection Classroom classroom List null Manager User manager User Manager User get Instance Manager Classroom manager Classroom Manager Classroom get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp take the academic year from the session classroom List manager Classroom get Classrooms By Academic Year Integer value Of p Request get Parameter academic Year session set Attribute classroom List classroom List p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application register Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Justify import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Register import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Show Justify Details extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page register Management show Justify Details jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp Manager Register m Manager Register get Instance int id Justify Integer value Of p Request get Parameter id Justify String id Classroom p Request get Parameter id Classroom goto Page id Classroom id Classroom Justify justify m get Justify By Id Justify id Justify session set Attribute justify justify session set Attribute id Classroom id Classroom catch Number Format Exception number Format Exception error Message Environment number Format Exception get Message goto Page error jsp number Format Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application register Management import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Absence import smos bean Classroom import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Register import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Show Justify List extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page register Management show Justify List jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance Manager Register manager Register Manager Register get Instance User logged User User session get Attribute logged User String student p Request get Parameter student int st Integer parse Int student Classroom classroom Classroom session get Attribute classroom try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User manager User is Director logged User error Message The logged in User does not have access to the functionality goto Page error jsp User user Student manager User get User By Id st Collection Absence absence List Collection Absence manager Register get Absence By User And Academic Year st classroom get Academic Year session set Attribute absence List absence List session set Attribute utente user Student catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application register Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean Note import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Register import smos storage Manager User import smos storage connection Management exception Connection Exception import smos utility Utility public class Servlet Show Note Details extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User instantiate the objects here Manager Register manager Register Manager Register get Instance try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp set things to pass to the session use session set Attribute String attribute if p Request get Parameter update null User student User session get Attribute student manager User get User By Id Integer value Of String p Request get Attribute student session set Attribute student student session set Attribute id Student student get Id session set Attribute note Manager Register manager Register get Note By Id Integer value Of p Request get Parameter note Id goto Page register Management show Note Details jsp else Note n Note new Note n Note set Academic Year Classroom session get Attribute classroom get Academic Year n Note set Date Note Utility String Date p Request get Parameter date Note n Note set Id User Integer session get Attribute id Student n Note set Teacher p Request get Parameter note Teacher n Note set Description p Request get Parameter note Description n Note set Id Note Note session get Attribute note get Id Note try manager Register update Note n Note goto Page show Note List student session get Attribute id Student catch Mandatory Field Exception e session set Attribute error e get Message goto Page register Management show Note Details jsp p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application register Management import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean Note import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Register import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Show Note List extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page register Management show Note List jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User instantiate the objects here Collection Note notes null Manager Register manager Register Manager Register get Instance try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User manager User is Director logged User error Message The logged in User does not have access to the functionality goto Page error jsp set things to pass to the session use session set Attribute String attribute int id User Integer value Of p Request get Parameter student User student manager User get User By Id id User int year Classroom session get Attribute classroom get Academic Year notes manager Register get Note By User And Academic Year id User year session set Attribute note List notes session set Attribute student student p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application register Management import java io Exception import java sql Exception import java util Collection import java util Date import java util Gregorian Calendar import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean Register Line import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager Register import smos storage Manager User import smos storage connection Management exception Connection Exception import smos utility Utility public class Servlet Show Register extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page register Management show Register jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User Manager Classroom manager Classroom Manager Classroom get Instance Manager Register manager Register Manager Register get Instance Collection Register Line register null int year int month int day String date p Request get Parameter date int id Class Integer value Of p Request get Parameter id Classroom String datevalues datevalues date split year Integer value Of datevalues month Integer value Of datevalues day Integer value Of datevalues try register manager Register get Register By Class And Date id Class Utility String Date date if logged User null p Response send Redirect index htm return if manager User is Administrator logged User manager User is Director logged User error Message The logged in User does not have access to the functionality goto Page error jsp set things to pass to the session use session set Attribute String attribute Classroom classroom manager Classroom get Classroom By id Class session set Attribute register register session set Attribute year year session set Attribute month month session set Attribute day day session set Attribute classroom classroom take the academic year from the session p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application report Management import smos Environment import smos bean User import smos bean User List Item import smos bean Votes import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager User import smos storage Manager Votes import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to view all teachings author Giulio Amora version Copyright by public class Servlet Show Reports extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page reports Management show Reports jsp String error Message Http Session session p Request get Session Collection Votes votes List null Manager Votes manager Votes Manager Votes get Instance Manager User manager User Manager User get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User manager User is Director logged User error Message The connected user does not have access to the functionality goto Page error jsp int student Id Integer value Of p Request get Parameter student Integer year Integer session get Attribute selected Year Integer turn Integer value Of p Request get Parameter q session set Attribute q turn votes List manager Votes get Votes By User Id Year Turn student Id year turn User u User manager User get User By Id student Id User List Item st new User List Item st set Name u get Name st set Mail u get Mail st set Id u get Id session set Attribute std st session set Attribute votes List votes List p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application report Management import java io Exception import java sql Exception import java util import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean User import smos bean User List Item import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager User import smos storage connection Management exception Connection Exception public class Servlet Show Students By Class extends Http Servlet Servlet used to view the students associated with a Class author Giulio Amora private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page reports Management show Students By Class jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User manager User is Director logged User error Message The logged in User does not have access to the functionality goto Page error jsp int id Classroom Integer value Of p Request get Parameter id Classroom Classroom classroom Manager Classroom get Instance get Classroom By id Classroom Collection User List Item students Collection User List Item manager User get Students By Classroom Id id Classroom session set Attribute Student List students session set Attribute classroom classroom catch Number Format Exception number Format Exception error Message Environment number Format Exception get Message goto Page error jsp number Format Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception e Auto generated catch block e print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean Classroom import smos bean Teaching import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Classroom import smos storage Manager Teaching import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to view all academic years present in the db author Giulio Amora version Copyright by public class Servlet Show Teacher Teaching Form By Class extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management user Management teacher Teachings jsp String error Message Http Session session p Request get Session Collection Teaching teaching List null Manager User manager User Manager User get Instance User logged User User session get Attribute logged User User teacher User session get Attribute user try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp we retrieve the id of the selected class int selected Class Id Integer value Of p Request get Parameter class Id Manager Teaching manager Teaching Manager Teaching get Instance We calculate the list of courses associated with the selected class teaching List manager Teaching get Teachings By Classroom Id selected Class Id session set Attribute teaching List teaching List Classroom selected Class Manager Classroom get Instance get Classroom By selected Class Id session set Attribute selected Class selected Class p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application teaching Management import smos Environment import smos bean Teaching import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Teaching import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to modify a teaching author Giulio Amora version Copyright by public class Servlet Show Teaching Details extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management teaching Management show Teaching Details jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User int teaching Id Teaching teaching null Manager Teaching manager Teaching Manager Teaching get Instance try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp teaching Id Integer value Of p Request get Parameter id Teaching teaching manager Teaching get Teaching By Id teaching Id session set Attribute teaching teaching catch Number Format Exception number Format Exception error Message Environment number Format Exception get Message goto Page error jsp number Format Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception e Auto generated catch block e print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application teaching Management import smos Environment import smos bean Teaching import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Teaching import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to view all teachings author Giulio Amora version Copyright by public class Servlet Show Teaching List extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management teaching Management show Teaching List jsp String error Message Http Session session p Request get Session Collection Teaching teaching List null Manager Teaching manager Teaching Manager Teaching get Instance Manager User manager User Manager User get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The connected User does not have access to the functionality goto Page error jsp teaching List manager Teaching get Teachings session set Attribute teaching List teaching List p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import javax servlet http Http Servlet public class Servlet Show User Classroom Form extends Http Servlet private static final long serial Version 
package smos application user Management import smos Environment import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to retrieve user details author Napolitano Vincenzo public class Servlet Show User Details extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management user Management show User Details jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp int user Id Integer value Of p Request get Parameter user Id User user manager User get User By Id user Id session set Attribute user user catch Number Format Exception number Format Exception error Message Environment number Format Exception get Message goto Page error jsp number Format Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean User import smos bean User List Item import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to view all users author Napolitano Vincenzo public class Servlet Show User List extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management user Management manager User jsp String error Message Http Session session p Request get Session Collection User List Item user List null Manager User manager User Manager User get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp user List manager User get User List session set Attribute user List user List p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager User import smos storage connection Management exception Connection Exception import smos utility Utility import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to display the management form of user roles author Napolitano Vincenzo public class Servlet Show User Role Form extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management user Management user Rolez jsp String error Message Http Session session p Request get Session boolean is Teacher Boolean false boolean is Administrator Boolean false boolean is Parent Boolean false boolean is Student Boolean false boolean is Ata Boolean false boolean is Director Boolean false int is Teacher int is Administrator int is Director int is Parent int is Student int is Ata User user null Manager User manager User Manager User get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp user User session get Attribute user we prepare the values to pass to the jsp is Teacher Boolean manager User is Teacher user is Administrator Boolean manager User is Administrator user is Ata Boolean manager User is Ata People user is Director Boolean manager User is Director user is Student Boolean manager User is Student user is Parent Boolean manager User is Parent user is Teacher Utility Boolean To Int is Teacher Boolean is Director Utility Boolean To Int is Director Boolean is Administrator Utility Boolean To Int is Administrator Boolean is Ata Utility Boolean To Int is Ata Boolean is Student Utility Boolean To Int is Student Boolean is Parent Utility Boolean To Int is Parent Boolean goto Page persistent Data Management user Management user Rolez jsp is Teacher is Teacher is Admin is Administrator is Ata is Ata is Student is Student is Parent is Parent is Director is Director p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import java io Exception import java sql Exception import java util Collection import java util Iterator import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Classroom import smos bean Teaching import smos bean User import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Classroom import smos storage Manager Teaching import smos storage Manager User import smos storage connection Management exception Connection Exception import smos utility Utility public class Servlet Show User Teaching Form extends Http Servlet private static final long serial Version protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page persistent Data Management user Management show Teacher Details jsp String error Message Http Session session p Request get Session User user null Manager User manager User Manager User get Instance Manager Classroom manager Classroom Manager Classroom get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp user User session get Attribute user if manager User is Teacher user error Message Utente non un docente goto Page error jsp int id Teacher user get Id Collection Classroom class List manager Classroom get Classrooms By Teacher user Iterator Classroom ite Class class List iterator Classroom tmp null while ite Class has Next tmp ite Class next if tmp get Academic Year an class List remove tmp Suppress Warnings unused Collection Teaching teaching List By Classroom null Collection Classroom Teaching list new Vector Classroom Teaching session set Attribute classroom List class List p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import javax servlet http Http Servlet public class Servlet Show User Teaching Form By Course extends Http Servlet private static final long serial Version 
package smos application register Management import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Justify import smos bean User import smos exception Entity Not Found Exception import smos exception Mandatory Field Exception import smos storage Manager Register import smos storage Manager User import smos storage connection Management exception Connection Exception import smos utility Utility public class Servlet Update Justify extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page register Management show Register jsp String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance Manager Register m Manager Register get Instance Justify justify Justify session get Attribute justify User logged User User session get Attribute logged User String id Classroom String session get Attribute id Classroom int id Integer parse Int id Classroom goto Page id Classroom id try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp justify set Academic Year Integer parse Int p Request get Parameter academic Year justify set Date Justify Utility String Date p Request get Parameter date we verify that it justifies it exists if m exists justify error Message la giustifica non esiste goto Page error jsp else we update m update Justify justify catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application register Management import java io Exception import java sql Exception import java util Collection import java util Date import java util Iterator import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session import smos Environment import smos bean Absence import smos bean Classroom import smos bean Delay import smos bean Register Line import smos bean User import smos bean User List Item import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Register import smos storage Manager User import smos storage connection Management exception Connection Exception import smos utility Utility public class Servlet Update Register extends Http Servlet private static final long serial Version protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page register Management show Classroom List jsp String error Message Http Session session p Request get Session Boolean variable used to check whether the student has an absence or not boolean flag false Collection used for log storage of a particular date Collection Register Line register null Iterator needed to scroll through the collection Iterator it Register null Temporary variable needed to read information from the collection Register Line tmp Register Line null Temporary variable needed to read information from the collection User List Item student null Temporary variable needed to insert new absences Absence tmp Absence null Temporary variable needed to insert new delays Delay tmp Delay null Manager classes required for processing Manager User manager User Manager User get Instance Manager Register manager Register Manager Register get Instance Variables necessary for storing the data coming from the request String absences null Memorize absent pupils String delays null Memorize laggards Retrieve the user logged in from the session User logged User User session get Attribute logged User verify that the logged in user has the necessary permissions try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp return Retrieving the parameters from p Request Date date Utility String Date p Request get Parameter date absences p Request get Parameter Values absences delays p Request get Parameter Values delays Retrieve the classroom object from the session Classroom classroom Classroom session get Attribute classroom call the manager Register method to retrieve the information from the db concerning the register of a class on a particular date Absences Delays register manager Register get Register By Class And Date classroom get Id Classroom date if register null it Register register iterator if it Register null while it Register has Next tmp Register Line Register Line it Register next pick up the student to whom the register line refers student tmp Register Line get Student check if an absence has been entered for the student or not if absences null for int i i absences length i if Integer value Of absences i student get Id flag true if manager Register has Absence tmp Register Line tmp Absence new Absence tmp Absence set Academic Year classroom get Academic Year tmp Absence set Date Absence date tmp Absence set Id Justify tmp Absence set Id User student get Id manager Register insert Absence tmp Absence if flag if manager Register has Absence tmp Register Line manager Register delete Absence tmp Register Line get Absence else if manager Register has Absence tmp Register Line manager Register delete Absence tmp Register Line get Absence flag false check if a delay has been entered for the student or not if delays null for int i i delays length i if Integer value Of delays i student get Id flag true if manager Register has Delay tmp Register Line tmp Delay new Delay tmp Delay set Academic Year classroom get Academic Year tmp Delay set Date Delay date tmp Delay set Id User student get Id tmp Delay set Time Delay p Request get Parameter hour student get Id manager Register insert Delay tmp Delay else tmp Delay tmp Register Line get Delay tmp Delay set Time Delay p Request get Parameter hour student get Id manager Register update Delay tmp Delay if flag if manager Register has Delay tmp Register Line manager Register delete Delay tmp Register Line get Delay else if manager Register has Delay tmp Register Line manager Register delete Delay tmp Register Line get Delay flag false catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Invalid Value Exception e error Message Environment e get Message goto Page error jsp e print Stack Trace catch Mandatory Field Exception e error Message Environment e get Message goto Page error jsp e print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application report Management import smos Environment import smos bean Classroom import smos bean Teaching import smos bean User import smos bean User List Item import smos bean Votes import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Teaching import smos storage Manager User import smos storage Manager Votes import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import java util Collection import java util Iterator import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to update a student s report card author Giulio Amora version Copyright by public class Servlet Update Report extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page show Reports String error Message Http Session session p Request get Session Collection Teaching teaching List null Manager Votes manager Votes Manager Votes get Instance Manager User manager User Manager User get Instance Manager Teaching manager Teaching Manager Teaching get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The connected User does not have access to the functionality goto Page error jsp Classroom classroom Classroom session get Attribute classroom Teaching list teaching List manager Teaching get Teachings By Classroom Id classroom get Id Address Iterator Teaching it Teaching teaching List iterator Integer year Integer session get Attribute selected Year User List Item student User List Item session get Attribute student Four months int turn Integer session get Attribute q Teaching teaching Temp null int id Temp String write oral lab goto Page student student get Id q turn while it Teaching has Next teaching Temp it Teaching next id Temp teaching Temp get Id write scritto id Temp oral orale id Temp lab laboratorio id Temp write p Request get Parameter write oral p Request get Parameter oral lab p Request get Parameter lab Votes new Votes new Votes the vote does not exist we must create it int id Voto manager Votes get Id Votes teaching Temp year turn student int write Int oral Int lab Int if write write Int Integer value Of write if oral oral Int Integer value Of oral if lab lab Int Integer value Of lab if id Voto if write Int oral Int lab Int new Votes set Accademic Year year new Votes set Id user student get Id new Votes set Laboratory lab Int new Votes set Oral oral Int new Votes set Teaching id Temp new Votes set Turn turn new Votes set Written write Int manager Votes insert new Votes If the vote exists we must update it else if write Int oral Int lab Int new Votes manager Votes get Votes By Id id Voto new Votes set Laboratory lab Int new Votes set Oral oral Int new Votes set Written write Int manager Votes update new Votes else manager Votes delete manager Votes get Votes By Id id Voto p Response send Redirect goto Page return catch Exception sql Exception error Message Environment sql Exception get Message goto Page error jsp sql Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Mandatory Field Exception e Auto generated catch block e print Stack Trace p Request get Session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application teaching Management import smos Environment import smos bean Teaching import smos bean User import smos exception Duplicated Entity Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager Teaching import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to modify a teaching author Giulio Amora version Copyright by public class Servlet Update Teaching extends Http Servlet private static final long serial Version Definizione del metodo do Get param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page teaching List String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance Teaching teaching Teaching session get Attribute teaching Manager Teaching manager Teaching Manager Teaching get Instance User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp teaching set Name p Request get Parameter name teaching set Id teaching get Id if manager Teaching exists teaching manager Teaching update teaching else if teaching get Id manager Teaching get Teaching Id teaching manager Teaching update teaching else throw new Duplicated Entity Exception Already existing teaching catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Duplicated Entity Exception duplicated Entity Exception error Message Environment duplicated Entity Exception get Message goto Page error jsp duplicated Entity Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos application user Management import smos Environment import smos bean User import smos exception Duplicated Entity Exception import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage Manager User import smos storage connection Management exception Connection Exception import java io Exception import java sql Exception import javax servlet http Http Servlet import javax servlet http Http Servlet Request import javax servlet http Http Servlet Response import javax servlet http Http Session Servlet used to modify a user author Napolitano Vincenzo public class Servlet Update User extends Http Servlet private static final long serial Version Definition of the do Get method param p Request param p Response protected void do Get Http Servlet Request p Request Http Servlet Response p Response String goto Page show User List String error Message Http Session session p Request get Session Manager User manager User Manager User get Instance User user User session get Attribute user User logged User User session get Attribute logged User try if logged User null p Response send Redirect index htm return if manager User is Administrator logged User error Message The logged in User does not have access to the functionality goto Page error jsp user set First Name p Request get Parameter first Name user set Last Name p Request get Parameter last Name user set Cell p Request get Parameter cell we verify that the login is unique String login p Request get Parameter login user set Login login if manager User exists Login user throw new Invalid Value Exception The login entered already exists Enter a new login user set Password p Request get Parameter password user set Mail p Request get Parameter e Mail we update if manager User exists user manager User update user else int user Id manager User get User Id user if user get Id user Id manager User update user else throw new Duplicated Entity Exception Already existing user catch Exception Exception error Message Environment Exception get Message goto Page error jsp Exception print Stack Trace catch Connection Exception connection Exception error Message Environment connection Exception get Message goto Page error jsp connection Exception print Stack Trace catch Entity Not Found Exception entity Not Found Exception error Message Environment entity Not Found Exception get Message goto Page error jsp entity Not Found Exception print Stack Trace catch Mandatory Field Exception mandatory Field Exception error Message Environment mandatory Field Exception get Message goto Page error jsp mandatory Field Exception print Stack Trace catch Invalid Value Exception invalid Value Exception error Message Environment invalid Value Exception get Message goto Page error jsp invalid Value Exception print Stack Trace catch Duplicated Entity Exception duplicated Entity Exception error Message Environment duplicated Entity Exception get Message goto Page error jsp duplicated Entity Exception print Stack Trace catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace session set Attribute error Message error Message try p Response send Redirect goto Page catch Exception io Exception error Message Environment io Exception get Message goto Page error jsp io Exception print Stack Trace Definition of the do Post method param p Request param p Response protected void do Post Http Servlet Request p Request Http Servlet Response p Response this do Get p Request p Response 
package smos bean import smos exception Invalid Value Exception import java io Serializable Class used to model a teaching author Giulio Amora version Copyright by public class Teaching implements Serializable private static final long serial Version private int id teaching private String name The constructor of the class public Teaching this id teaching The name of the course returns return The name of the course returns public String get Name return this name Set the name of the course param p Name Il nome da settare throws Invalid Value Exception public void set Name String p Name throws Invalid Value Exception if p Name length to verify the test throw new Invalid Value Exception else this name p Name Return the teaching id return l id dell insegnamento public int get Id return this id teaching Set the teaching id param p Id The id to be set public void set Id int p Id this id teaching p Id 
package smos storage import java sql Exception import java util Collection import java util Date import java util Gregorian Calendar import smos bean Absence import smos bean Delay import smos bean Justify import smos bean Note import smos bean Register Line import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos storage Manager Register import smos storage connection Management exception Connection Exception import smos utility Utility public class Test Register Wrong database unable to insert null in the id justify field of absence public static void main String args Manager Register mr Manager Register get Instance Date datenow new Date Absence absence new Absence absence set Id User absence set Date Absence datenow absence set Id Justify absence set Academic Year absence set Id Absence try absence mr get Absence By Id Absence catch Invalid Value Exception e Auto generated catch block e print Stack Trace catch Entity Not Found Exception e Auto generated catch block e print Stack Trace catch Connection Exception e Auto generated catch block e print Stack Trace catch Exception e Auto generated catch block e print Stack Trace Justify justifynew new Justify justifynew set Id User justifynew set Date Justify datenow justifynew set Academic Year justifynew set Id Justify Delay delay new Delay delay set Id Delay delay set Id User delay set Date Delay datenow delay set Time Delay delay set Academic Year Note notenew new Note notenew set Id User notenew set Teacher boh notenew set Academic Year notenew set Date Note datenow notenew set Description the student sleeps in the classroom notenew set Id Note try mr insert Absence absence if mr exists absence System out println exists mr delete Absence absence mr update Absence absence mr insert Delay delay if mr exists delay System out println exists mr update Delay delay mr delete Delay delay mr insert Note notenew mr delete Note notenew mr insert Justify justifynew absence mr delete Justify justifynew get Id Justify if mr has Justify absence System out println justified absence mr get Absence By User And Date absence mr get Absence By Id Justify System out println absence get Date Absence Collection Absence ac mr get Absence By User And Academic Year for Absence x ac System out println x get Date Absence justifynew mr get Justify By Absence absence System out println justifynew get Date Justify Collection Note nc mr get Note By User And Academic Year for Note x nc System out println x get Description delay mr get Delay By User And Date datenow System out println delay get Date Delay System out println delay get Time Delay Collection Register Line crl mr get Register By Class And Date datenow for Register Line x crl System out println x get Student get Name if mr has Absence x System out println absent System out println mr has Absence x if mr has Delay x System out println delay Gregorian Calendar gc new Gregorian Calendar String date int year gc get Gregorian Calendar int month gc get Gregorian Calendar String months if month months month else months months month int day gc get Gregorian Calendar String days if day days day else days days day date date year months days System out println date catch Exception e System out println errore System out println e get Message System out println datenow to String System out println Utility is Null datenow System out println 
package smos bean import smos exception Invalid Value Exception import java io Serializable Class used to model a user public class User implements Serializable private static final long serial Version private int id private String login private String password private String first Name private String last Name private int id Parent private String cell private String e Mail The constructor of the class public User this id return Returns the user s login public String get Login return this login Set the user login param p Login The login to be set throws Invalid Value Exception public void set Login String p Login throws Invalid Value Exception if p Login length throw new Invalid Value Exception else this login p Login return Returns the user s name public String get Name return this last Name this first Name return Returns the user s name public String get First Name return this first Name Set the user s name param p First Name The name to set public void set First Name String p First Name this first Name p First Name return Returns the user s password public String get Password return this password Set the user s password param p Password The password to be set throws Invalid Value Exception public void set Password String p Password throws Invalid Value Exception if p Password length throw new Invalid Value Exception else this password p Password return Returns the user s surname public String get Last Name return this last Name Set the user s last name param p Last Name The surname to be set public void set Last Name String p Last Name this last Name p Last Name return Returns the user s id public int get Id return this id Set the user id param p Id The id to be set public void set Id int p Id this id p Id Returns a string containing the user s first and last name see java lang Object to String public String to String return this get First Name this get Last Name return the e Mail public String get Mail return this e Mail param p Mail the e Mail to set public void set Mail String p Mail this e Mail p Mail return the cell public String get Cell return this cell param cell the cell to set public void set Cell String p Cell this cell p Cell return the id Parent public int get Id Parent return this id Parent param id Parent the id Parent to set public void set Id Parent int p Id Parent this id Parent p Id Parent 
package smos bean import java io Serializable Class used to model core information of a user public class User List Item implements Serializable private static final long serial Version private String name private String e Mail private int id return Returns the user s id public int get Id return this id Set the user id param p Id The id to be set public void set Id int p Id this id p Id return Returns the user s name public String get Name return this name Set the user s name param p Name The name to set public void set Name String p Name this name p Name return the e Mail public String get Mail return this e Mail param mail the e Mail to set public void set Mail String p Mail this e Mail p Mail 
package smos storage import java sql Exception import java util Collection import smos bean Address import smos bean Teaching import smos bean User List Item import smos bean Votes import smos exception Entity Not Found Exception import smos exception Invalid Value Exception import smos exception Mandatory Field Exception import smos storage connection Management exception Connection Exception public class User Test param args throws Invalid Value Exception throws Connection Exception throws Entity Not Found Exception throws Exception throws Mandatory Field Exception public static void main String args throws Exception Entity Not Found Exception Connection Exception Invalid Value Exception Mandatory Field Exception User List Item temp new User List Item temp set Id Teaching teaching new Teaching teaching set Id Manager Votes mv Manager Votes get Instance Votes ghh new Votes ghh set Accademic Year ghh set Id user ghh set Laboratory ghh set Oral ghh set Teaching ghh set Turn ghh set Written mv insert ghh 
package smos utility import smos exception Entity Not Found Exception import smos storage connection Management Connection import smos storage connection Management exception Connection Exception import java util Calendar import java util Date import java util Gregorian Calendar import java util Time Zone import java sql import java text Date Format This class contains a set of system management utilities public class Utility Constants public static final char char character in ascii public static final char char character in ascii public static final String day Monday Tuesday Wednesday Thursday Friday Saturday public static final String valid Hour public static final String month Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec public static final String request State carried out rejected accepted eliminated Variables to set when Tomcat starts Variables for the graphic aspect of the program private static String image Header Path private static String image Header Logo Path private static String image Left Column private static String text Footer smtp server for sending e mails private static String server Smtp smtp tele it Minimum days away from the exam to subscribe or cancel a reservation private static int need Day Before Exam Maximum days away from the exam to sign up for a reservation private static int max Day Before Exam pdf path for the storage path of the pdf files private static String pdf Path upload path for the file storage path for importing data private static String upload Path Variables for connecting to the database private static String driver My Sql com mysql jdbc Driver private static String full Path Database jdbc mysql localhost smos private static String user Name root private static String password private static int max Pool Size private static int wait Timeout private static int active Timeout private static int pool Timeout Returns given a field and a table the maximum value of the field in the table param p Field The field of which we want to retrieve the maximum value param p Table The table in which to search for the required information return Returns the maximum value of the p Field field passed as parameter present in the p Table table passed as a parameter throws Entity Not Found Exception throws Connection Exception throws Exception synchronized static public int get Max Value String p Field String p Table throws Entity Not Found Exception Connection Exception Exception int value Connection connect null try If the field and table have not been provided we return a error code if p Field equals throw new Entity Not Found Exception if p Table equals throw new Entity Not Found Exception We prepare the string to retrieve the information requests String t Sql max p Field as new field p Table We get a connection to the database connect Connection get Connection if connect null throw new Connection Exception We send the Query to the Data Base Result Set t Rs Utility query Operation connect t Sql if t Rs next value t Rs get Int new field else throw new Entity Not Found Exception return value finally Connection release Connection connect Converts a date to a formatted string for the database param p Date The date to be converted return Returns the formatted date for the database static public String date String java util Date p Date boolean p Hour Time Zone tz Time Zone get Default Calendar calendar Calendar get Instance tz calendar set Time p Date int year calendar get Calendar int month calendar get Calendar int day calendar get Calendar String result year month day int hour calendar get Calendar int min calendar get Calendar int sec calendar get Calendar if p Hour result result hour min sec return result Check if the string passed as a parameter is null param p Str The string to check return code null code if the string is null Otherwise the string is passed to the code Replace code method see Replace static public String is Null String p Str String t Tmp if p Str null t Tmp null else p Str Replace All Strings p Str p Str Replace All Strings p Str t Tmp p Str return t Tmp Checks if a given integer is null param p Int The whole data to be checked return Returns the data in string format if the data is different from zero otherwise the null string static public String is Null Integer p Int String t Int String if p Int null t Int String null else t Int String p Int to String return t Int String Check if a date is null param p Date the date to be checked return Returns the string representing the date passed as input formatted for the database static public String is Null java util Date p Date return date String p Date false static public String clear String p String int start int start int end int end String result String result while end end p String index Of start if end result result p String substring start end result result start end else result result p String substring start while end end result index Of n start if end result result result substring start end result result start end else result result result substring start return result Convert a String to Integer param p Str The String to convert return The integer contained in the String code code if it is not conversion possible static public Integer String Integer String p Str Integer t Integer if p Str null p Str compare To t Integer new Integer else try t Integer Integer decode p Str catch Exception e t Integer new Integer return t Integer Replace the characters and with in the string passed as parameter param p Str The string to transform return The transformed string static public String Replace String p Str String t Ris t Ris p Str replace All t Ris t Ris replace All return t Ris Replaces the character with the string in the string passed as parameter param p Str The string to transform return The transformed string static public String Replace Quote String p Str String t Ris t Ris p Str replace All return t Ris Performs a database operation using an string param p Connect The connection to the database param p Sql The string return The number of records involved in the operation throws Exception static public int execute Operation Connection p Connect String p Sql throws Exception Statement stmt p Connect create Statement int t Result stmt execute Update p Sql stmt close return t Result Executes an Query on the database param p Connect The connection to the database param p Sql The string return The number of records involved in the operation throws Exception static public Result Set query Operation Connection p Connect String p Sql throws Exception Statement stmt p Connect create Statement return stmt execute Query p Sql Converts Boolean data to integer param p Bol The Boolean value to convert to an integer return The integer value corresponding to the Boolean value passed as parameter static public int Boolean To Int boolean p Bol if p Bol true return else return Converts a given integer to Boolean param p Int The integer value to convert to Boolean return The boolean value corresponding to the integer value passed as parameter static public boolean Int To Boolean int p Int if p Int return true else return false Returns the current date return The current date static public java util Date today Calendar calendar Calendar get Instance java util Date creation Date calendar get Time return creation Date java util Date creation Date new java util Date Timestamp time Stamp new Timestamp creation Date get Time return java util Date time Stamp Returns the date contained in the input string param p Date The string to parse on a date return The converted date static public java util Date String Date String p Date try Date Format df Date Date Format get Date Instance java util Date t Date df Date parse p Date new java text Parse Position java sql Timestamp time Stamp new java sql Timestamp t Date get Time return java util Date time Stamp catch Exception e try Date Format df Date Date Format get Date Instance Date Format java util Locale java util Date t Date df Date parse p Date new java text Parse Position java sql Timestamp time Stamp new java sql Timestamp t Date get Time return java util Date time Stamp catch Exception e return null Returns the input date in String format param p Date The Date to be converted param p Hour return The converted date static public String Date String java util Date p Date boolean p Hour try Date Format df Date Date Format get Date Instance Date Format Date Format df Time Date Format get Time Instance Date Format if p Hour return df Date format p Date df Time format p Date else return df Date format p Date catch Exception e return param source Str param search For param replace With return the string corresponding to search Buffer public static String Replace All String source Str String search For String replace With String Buffer search Buffer new String Buffer source Str int hits while search Buffer to String to Upper Case index Of search For to Upper Case hits int new Index search Buffer to String to Upper Case index Of search For to Upper Case hits search Buffer replace new Index new Index search For length replace With hits return search Buffer to String The previous function loops if replace with then we use two variables the first is consumed at each occurrence of the pattern param source Str param search For param replace With return new String Buffer public static String Replace All Strings String source Str String search For String replace With String Buffer search Buffer new String Buffer source Str String Buffer new String Buffer new String Buffer while search Buffer to String to Upper Case index Of search For to Upper Case int new Index search Buffer to String to Upper Case index Of search For to Upper Case new String Buffer append search Buffer substring new Index new String Buffer append replace With search Buffer new String Buffer search Buffer substring new Index search For length search Buffer length new String Buffer append search Buffer return new String Buffer to String param source Str param remove Str public static void Remove All String source Str String remove Str int next Occurence while source Str to String to Upper Case index Of remove Str to Upper Case next Occurence source Str to String to Upper Case index Of remove Str to Upper Case source Str source Str substring next Occurence source Str substring next Occurence remove Str length source Str length Calculate the distance in days between past dates Suppress Warnings deprecation public static int days Between Date today Date reservation Date int days Between long millisec Between final int millisec In Day Gregorian Calendar first Date new Gregorian Calendar Gregorian Calendar second Date new Gregorian Calendar first Date set today get Year today get Month today get Date second Date set reservation Date get Year reservation Date get Month reservation Date get Date millisec Between second Date get Time In Millis first Date get Time In Millis days Between int millisec Between millisec In Day return days Between return The path set for the pdf Suppress Warnings static access public static String get Pdf Path return Utility pdf Path param p Pdf Path The path to be set for the pdf public static void set Pdf Path String p Pdf Path Utility pdf Path p Pdf Path return The path set for the files used when importing data Suppress Warnings static access public static String get Upload Path return Utility upload Path param p Upload Path The path to set for the files used when importing data public static void set Upload Path String p Upload Path Utility upload Path p Upload Path return The smtp server to use for sending automated e mails Suppress Warnings static access public static String get Server Smtp return Utility server Smtp param p Server Smtp the smtp server to be set public static void set Server Smtp String p Server Smtp Utility server Smtp p Server Smtp return the active Timeout public static int get Active Timeout return Utility active Timeout param active Timeout the active Timeout to set public static void set Active Timeout int p Active Timeout Utility active Timeout p Active Timeout return the driver My Sql public static String get Driver My Sql return Utility driver My Sql param driver My Sql the driver My Sql to set public static void set Driver My Sql String p Driver My Sql Utility driver My Sql p Driver My Sql return the full Path Database public static String get Full Path Database return Utility full Path Database param full Path Database the full Path Database to set public static void set Full Path Database String p Full Path Database Utility full Path Database p Full Path Database return the max Pool Size public static int get Max Pool Size return Utility max Pool Size param max Pool Size the max Pool Size to set public static void set Max Pool Size int p Max Pool Size Utility max Pool Size p Max Pool Size return the password public static String get Password return Utility password param password the password to set public static void set Password String p Password Utility password p Password return the pool Timeout public static int get Pool Timeout return Utility pool Timeout param pool Timeout the pool Timeout to set public static void set Pool Timeout int p Pool Timeout Utility pool Timeout p Pool Timeout return the user Name public static String get User Name return Utility user Name param user Name the user Name to set public static void set User Name String p User Name Utility user Name p User Name return the wait Timeout public static int get Wait Timeout return Utility wait Timeout param wait Timeout the wait Timeout to set public static void set Wait Timeout int p Wait Timeout Utility wait Timeout p Wait Timeout return the image Header Path public static String get Image Header Path return Utility image Header Path param image Header Path the image Header Path to set public static void set Image Header Path String p Image Header Path Utility image Header Path p Image Header Path return the text Footer public static String get Text Footer return Utility text Footer param text Footer the text Footer to set public static void set Text Footer String p Text Footer Utility text Footer p Text Footer return the image Left Column public static String get Image Left Column return Utility image Left Column param image Left Column the image Left Column to set public static void set Image Left Column String p Image Left Column Utility image Left Column p Image Left Column public static String get Image Logo Header Path return Utility image Header Logo Path public static void set Image Logo Header Path String p Image Header Logo Path Utility image Header Logo Path p Image Header Logo Path return the need Day Before Exam public static int get Need Day Before Exam return Utility need Day Before Exam param need Day Before Exam the need Day Before Exam to set public static void set Need Day Before Exam int p Need Day Before Exam Utility need Day Before Exam p Need Day Before Exam return the max Day Before Exam public static int get Max Day Before Exam return Utility max Day Before Exam param max Day Before Exam the max Day Before Exam to set public static void set Max Day Before Exam int p Max Day Before Exam Utility max Day Before Exam p Max Day Before Exam public static String get Actual Date Gregorian Calendar gc new Gregorian Calendar String date int year gc get Gregorian Calendar int month gc get Gregorian Calendar String months if month months month else months months month int day gc get Gregorian Calendar String days if day days day else days days day date date days months year return date 
package smos bean import java io Serializable import smos exception Invalid Value Exception Class used to model a grade author Luigi Colangelo version Copyright by public class Votes implements Serializable Class used to model a grade private static final long serial Version private int id votes private int id user private int teaching private int written private int oral private int laboratory private int accademic Year private int turn The constructor of the class public Votes id votes Method that returns the id of the vote return the id of the vote public int get Id votes return id votes Method that sets the id of the vote param p Id votes the id to set public void set Id votes int p Id votes this id votes p Id votes Method that returns the id of the user connected to the vote return the user s id public int get Id user return id user Method that sets the user s id related to the vote param p Id user the id to set public void set Id user int p Id user this id user p Id user method that returns the code of teaching the vote return the teaching method public int get Teaching return teaching Method that sets the teaching code relating to the grade param p Teaching the teaching code public void set Teaching int p Teaching this teaching p Teaching Method that returns the grade of the writing return the vote in the writing public int get Written return written Method that sets the grade of the writing checking that it is between and param p Written public void set Written int p Written throws Invalid Value Exception if p Written p Written throw new Invalid Value Exception else this written p Written method that returns the grade of the oral return the oral vote public int get Oral return oral Method that sets the grade of the oral checking that it is between and param p Oral the oral vote to be set public void set Oral int p Oral throws Invalid Value Exception if p Oral p Oral throw new Invalid Value Exception else this oral p Oral Method that returns the laboratory grade return the lab grade public int get Laboratory return laboratory method that sets the laboratory grade checking that it is between and param p Laboratory the vote of the laboratory to be set public void set Laboratory int p Laboratory throws Invalid Value Exception if p Laboratory p Laboratory throw new Invalid Value Exception else this laboratory p Laboratory Method that returns the academic year of the grade return the academic year public int get Accademic Year return accademic Year method that sets the academic year of the grade param p Accademic Year public void set Accademic Year int p Accademic Year this accademic Year p Accademic Year Method that returns the quarter of the vote return the semester of the vote or public int get Turn return turn Method that sets the quarter of the vote param p Turn the semester of the vote to be set public void set Turn int p Turn this turn p Turn public String to String return id voto id votes id user id user id insegnamento teaching scritto written orale oral laboratorio laboratory anno accademico accademic Year quadrimestre turn 
