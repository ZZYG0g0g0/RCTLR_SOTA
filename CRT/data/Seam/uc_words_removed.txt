think team consider building version upgrade old project hibernate beanvalidation glassfish3 jboss6 get rid validation richfaces3 dependcy upgraded old project months ago use hibernate beanvalidation tomcat used production test glassfish jboss6 test ejb considered provide patch team reference push full source code github team permission Please consider heyoulin
flexible mapping URLs view ids example want able use URL like get request parameter 200306 really request parameter could try abstract used RequestParameter sure possible without changing JSF implementation
Drools API changed since Please see Corresponding changes codebase reference made Drools GA used future
Users want operation kill conversations want happen action beginning new conversation
parsing XML files control like possible parser make network connections resolve DTDs Rather trying maintain local cache adding safe parsing mode completely ignore external references external DTD critical parsing default attributes example DTD still cached document parsed normally
allow 1 switching user locale using 2 templated resource bundles messages text expression
EL support templating messages except Hibernate Validator need
Currently special processing qualified names way alias name shorter name via lt factory gt provide global import qualifier import component Java package via Import import page ie view id via
support eager loading associations
would nice page actions called beginning render response phase
need way dynamically load pageflow runtime gives lot power letting users customize navigation rules fit needs Refer details
Create configuration option disable default interceptors never used improving application performance systems necessity interceptors example transactional ones RollbackInterceptor TransactionInterceptor ManagedEntityIdentityInterceptor degrade performance
Would possible get i18n features scan multiple resource bundles common resources shared across mutliple applications ways could accomplished 1 Rename default bundle scan multiple EAR 2 Add new property name change property handle delimited list resourceBundles default implementation uses single bundle adding configuration property get scan multiple resource bundles order specified 3 Implement cascading scheme similar sample posted forum
Mail sessions currently work smtp servers without SSL enabled Please add mechanism disable TLS
Currently possible use EL string page exception handler makes awkward redirect different pages depending cause given exception See forum reference use case workaround
Currently integration test mail provide mocked mail Session
Seamgen generates classes derived EntityHome often must customized end user developer Currently documentation even javadocs various functions inherited Home EntityHome contract wire functions new instance needs initialized default values done createInstance wire somewhere else getDefinedInstance intended used circumstances setId called Seamgen well good getting CRUD application running generated files invariably need edited adapted customized without documentation intended used end user developer must guess seamgen framework intends
execution one JSF request noticed lot calls method information cached somewhere know reflection API quite fast particular context metadata component stored class members Component class know already found something could added class following method seems called hundreds times per request Code private boolean isPerNestedConversation String name Component component name return component null amp amp Could perNestedConversation class member added class initialized initializing component instead looking annotation every time one example looked everywhere called perhaps similar optimizations could done elsewhere
done annotations within pageflow XML
Currently instrumentation done custom classloader done build time classes could deployed
see reason Query defined Query lt E gt rather Query lt gt general design Query operates static base query conditions dynamic Therefore item type result list anticipated case always define using generic type Object cite example start public class EntityQuery lt E gt extends Query lt EntityManager E gt use public class CategoryQuery extends EntityQuery lt Category gt CategoryQuery q new CategoryQuery Category c need cast hand query component defined without type still work type treated public class CategoryQuery extends EntityQuery
Page actions currently one severe quirk multiple page actions configured pattern execute without checking whether navigation occurred navigation match found even strange even navigation match found JSF NavigationHandler processed navigation actions keep executing imagine invoking navigation handler multiple times anticipated behavior Even developer still going massively confused navigation event going actually stick current logic Action action getActions String outcome String fromAction outcome fromAction result true outcome facesContext outcome fromAction else facesContext outcome fromAction think needs take place response marked complete indicates redirect navigation UIViewRoot changed indicates navigation actions stop executing definitely include test case make change important screw desire maintain previous behavior believe flag added page element like lt page false gt
Currently possible assign value Enum property using component configuration mechanism Enums easy support since Java mechanism translating strings Enums support added registering EnumConverter Conversions works much way JSF enum converter
provide notification date schema DTD used file transparently downloaded jboss website every time page viewed resulting major performance degradation provide indication developer happening probably throw exception think use case would want behavior
like maybe observe need redirect user single server
use dot qualified component names EL use page instead However Factory variables presumably kinds context variables like
Extend behaviour automatically authenticate user selected Remember service rather password time
Conversation id generation managed component overridden specific deployments might even consider providing interesting default optional strategy like GUID
component template class configured EntityHome EntityQuery etc class attribute considered prior deriving class name namespace info XML element name first consulting class attribute prevent case two components configured name developer intends use XML declaration component configuration Case point Let say create class extends EntityHome provide extra behavior Name myEntityHome public class MyEntityHome extends EntityHome want configure properties class lt framework myEntityHome gt lt framework gt created Yeah lt gt lt framework gt updated Yeah lt gt lt framework gt deleted Yeah lt gt lt gt class attribute consulted look Name annotation rather find one class tries create new component definition would want use XML namespace tags case Simple Tag completion property recognition support Note works class resolved XML namespace element name component class case component class extends class get problem
lt page gt lt navigation gt lt rule gt lt event1 gt lt event2 gt lt gt lt gt lt gt even lt page gt lt event1 gt lt event2 gt lt gt
political problems getting Tomahawk living java world work tested think would good addition considering done much stuff came intend document please advise protocol Also looked around code base find register
may desirable nullify injected dependencies invocation ends
Make LocalDispatcher dependent attempting create port Asynchronous annotation Spring would appear correct way would create Spring Dispatcher component would override core Dispatcher component However LocalDispatcher Interface dependent probably wrap spring dispatch implementation would nice version created would required users wish use Asynchronous web container
Identity raise events successful login failed login code Identity refactored separate component SecurityMessage based new event types
using JBoss Identity server delegated security authentication using attribute security identity XML element inside JBoss SEAM file deploying BEA WebLogic Server authentication always failing default WebLogic JAAS module used Follows WebLogic server JAAS configuration file content myrealm required true false problem WebLogic server passes JAAS callback throws UnsupportedCallbackException class exception make functionality work either 1 create custom JAAS module WebLogic server 2 Extend classes override protected CallbackHandler getDefaultCallbackHandler method include new else branch default throws UnsupportedCallbackException else callbacks 91 93 deliberately ignored 3 Include code 2 inside JBoss Identity class User debug working create new class extend order make workable opinion performing 3 easier User point view allow use WebLogic JAAS server authentication without coding JBoss User point view Note proposed code depend BEA WebLogic specific classes
would useful Observer annotation specify multiple events watch Observer somethingChanged somethingElseChanged
Use EL
Instead lt rule redirectToDocument gt lt redirect gt lt param nodeId gt lt gt lt gt like able lt rule redirectToDocument gt lt redirect wiki renderURL gt lt gt would give nice URL without rewriting acrobatics
project would like use JBoss Scanner class browse EJB classes search custom Config annotations see Unfortunately handleItem method Scanner class package visible prevents generic reusability really powerful Scanner class Could guys make handleItem method public Thanks Frank
MockServletContext look resources well root
recently run requirement would nice descriptions applied wildcard example following Code lt page true gt lt description gt Section 1 lt gt lt gt Section 1 would description pages unless specified otherwise higher precedence page definition
someone took Tomcat Pattern matching code adapted Tomcat method checks see specified path matches specified pattern param request ServletRequest request containing path return boolean True path matches pattern false otherwise public boolean isMappedToCurrentRequestPath ServletRequest request really need regex Drop Tomcat pattern nonsense wildcards use regex Probably needs backwards compatible additional regex property Usecase Filter
need enhance JSF navigation rules facility support following lt gt lt gt lt gt lt gt lt gt lt redirect gt lt param searchPattern gt lt gt lt gt lt gt propose introduce file reproduce functionality JSF navigation rules yuck
would nice provide way globally configure flushmode setting Say way configure begins use default Maybe could configured would save lot generally boilerplate configuration since common usage Perhaps could specify lt core manager MANUAL gt
need new functionality jBPM allow us navigate process entity related process
possible add another addFromResourceBundle method class FacesMessages would accept JSF component id parameter enhancement would make easy session bean display localized message resource bundle specific JSF input field
Introduce method constraining object graph returned remote request Currently remoting API recursively walks object graph return value packages everything referenced either directly indirectly result potentially bad thing quite possible unintentionally return mountain unwanted data issue addressed annotating WebRemote methods additional annotation Constrain including list paths within object graph excluded result example remotable method returns Customer entity contains references entity Customer id firstName lastName rep gt Staff firstName lastName userName password example undesirable return Staff instance contains sensitive information password prevent method would annotated like WebMethod Constrain rep public Customer getCustomer int customerId Constrain annotation would accept String array parameter allows multiple specified Dot notation would used exclude fields object tree Constrain would include Customer rep field exclude rep username password field result
private void createProcess String processDefinitionName made public
Equivalent Startup depends Specify several component names
Support common use case wanting handle classes custom annotation
Create example two WAR applications inside EAR quite bit forum traffic subject would good nail example document may also errors issue need worked admin console type application standard booking application may good way go would real example
Currently required referring custom components However align convention configuration philosophy file optional making assumptions 1 absence XML namespace custom components mapping Java package 2 mapping defined XML namespace must parsable otherwise automatic mapping aborted Protocol scheme subdomain port query parameters anchors references userInfo ignored present b domain becomes root Java package Subdomains become Java packages root package applied order specified URI path returned mapped Java packages path element becomes another Java package appended order Examples gt gt gt abc gt gt JIRA displaying last example correctly See last example
ContextListener objects would receive notifications events like destroyContext getValue setValue etc
things doable via 2 10 seconds 1 1 second true
useful
need following allow users optimize application HTTP communication new method called selectOutputStream AbstractResource able GZIP content supported browser transparently actual AbstractResource implementation Although job Tomcat sometimes unknown reasons compress resource representation new CacheControlFilter provides headers configurable lt web resourcesCacheControlFilter gt lt 1 day gt new alternative AbstractResource called ConditionalAbstractResource provides sendConditional method using entity tags last modified timestamps return 304 Modified instead actual resource representation used browsers item local cache expires users subclass ConditionalAbstractResource define entity tag last modified validation conditions
Add property type Principal another property maybe type Group Script Principal used MockHttpServletRequest represent authenticated user Group property used MockHttpServletRequest support isUserInRole implementation properties ideally settable overriding setup method Script
Make possible replace conversationId something else cId help keep URLs tidy good looking
MultipartRequest easily mocked unit testing could solved 1 making type interface 2 changing constructor wrapped HttpServletRequest body parsed constructor invoked See forum link details
Right difficult create UrlRewrite rules order parameters jumps around happens parameters appended plain HashMap link button etc giving guarantee order feeling parameters maintain insertion order accomplished using LinkedHashMap first thought parameters sorted alphabetically However takes control away developer order links see fit long document order appends parameters developer predict order parameters appear URL
persistence context name assumed default Hibernate hibernateSession rather session Java Servlet API name session overloaded
setting still need configure collection supported locales Application class JSF API exposes public method setSupportedLocales Collection configure collection support feature request new component need created international package LocaleSelector used since per user session
would really cool tie EL expressions directly remoting example take method call helloAction nameValue sayHelloCallback instead could rewritten tied page context like name nameValue name sayHelloCallback perfect example however demonstrates potential feature Plus makes remoting consistent rest
Imagine scenario like client calls someMethod component called Foo BijectionInterceptor tries inject Foo attributes one requires calling factory method Bar Bar factory method turn calls Foo state support method calls process injecting dependencies sort cyclic dependency allowed throw exception case BijectionInterceptor used coded someOtherMethod would run without complaints attributes may may null depending fields injected first Recent changes BijectionInterceptor changed behavior finite loop results Neither behaviors desirable
Currently descendent supported type fields containing date values Objects type also commonly used case legacy code objects directly used Remoting would improvement objects Calendar fields could used client side
Add Excel tests uses Render component work documents JExcelAPI inspect result
Support lt e cell gt lt cell gt addition value attribute
think implement interface could possible replace one use guess could say used 100 free Hibernate way really like Hibernate sometimes really simple projects projects full interactions stored procedures might overkill innapropiate would nice able use without Hibernate dependencies
Spring Security uses security context integration filter wraps HttpServletRequest security framework respond getUserPrincipal getRemoteUser isUserInRole support style integration Identity component especially since prides making standard Java EE stuff work fact ridiculously easy
need would like el expression pageflow looked bit themes might able want replacing dynamically least initial like indirection believe patch functionality reletively trivial Altough well could missed something Basically modified method evaulate value returned replace el expressions also modified Number Guess example use feature attached initial patch proof concept interest developers 8211 JC
Might convenient relax lifecycle callbacks forget EJB3 callbacks PostActivate
USAGE Action Params feature allows specify parameters using EL call action something like lt commandButton hotel user button Book Hotel gt parameters hotel user evaluated ValueExpressions passed bookHotel method managed bean gives alternative forces injection happen every action method called also pass literal Strings using single double quotes lt commandLink message Click gt lt commandLink message Click gt might want use notation action methods even params pass improves readability making clear expression MethodExpression ValueExpression lt link Cancel button button gt handy passing JSF implicit objects lt page facesContext view gt desire still use operator method defined EL spec put method params inside lt commandLink foo bar facesContext Click gt NEW TAGS seen examples two new tags lt commandButton gt lt commandLink gt replacements lt h commandButton gt lt h commandLink gt Facelets class attribute added Facelets implementation corresponding tag Note JSF style tags always work properly lt c forEach gt Fixing requires tags written JSF style fixed assume JSF present OLD TAGS lt link gt supports action params Actions defined support action params well FACELETS SUPPORT enable action params Facelets need use new SeamFaceletViewHandler instead FaceletViewHandler lt application gt lt gt lt gt lt gt ISSUES Normally MethodExpression MethodBinding created parameter types passed hand case action JSF assumes params pass action params expression know param types parameters evaluated Evaluation params happen MethodExpression invoked two minor consequences 1 call invoke MethodExpression hand params pass may ignored Params defined expression take precedence 2 Since Facelets uses MethodExpression instead MethodBinding would normally able call time expression containing action params able method invoked least cases exceedingly rare apply want invoke MethodExpression hand Unlike MethodExpressions MethodBindings action params method invoke must determined expression determines right method based criteria 1 method name must match method name expression 2 number parameters must match number params expression possible though unlikely one method match criteria case exception thrown explaining criteria probably fix point gets little hairy
People often report authentication method called many different conditions lead problem common developers using conditional rendering UI Contrary popular understanding alternatively written simple accessor method attempt perform login user currently authenticated thus making method unsuitable used UI conditional rendering nothing troublesome happens successful login login fails guest user browsing page calls method triggers authentication method arbitrary points time simple workaround use either false simply create new method identity component merely checks user principal null public boolean isAuthenticated return getPrincipal null UI use preferred way check user security principal Note see double message add FacesMessage authenticate method use built authentication messages get double message quietLogin method called isLoggedIn skips adding messages privy information whether authentication method called quietLogin message registration purposes
Add attribute map set properties would allow ordering preserved
Jpa Permission Store used configured order looking permissions 1 DroolsFile 2 3 implments interface would nice possible change order looking permissions
Create project using Jboss Tools Create new Form name SeamDateForm Open file change value Integer click Run gt Run Server Write something form like example random string dfasdf get error Conversion Error setting value dfasdf null Converter create Date Converter one included attached test case project BTW inherits Stop application 100 sure everything gets loaded correctly click Run gt Run Server Write something form like example random string dfasdf get right error value must date eg course fails write random string even write correct date like get error says Conversion Error setting value null Converter write converter example inheriting everything works fine think use default need create converter
Folks often request restrictions combined rather much depends use case makes sense give developer option Obviously limits restrictions Query used think least opens couple use cases extension necessary
really use case become part workspace switching enabled Obviously affects development since debug page even present production Right visit debug page inspect conversation becomes last viewed page conversation really annoying
absolutely critical HotDeployFilter applied JSF requests else scanning occurs every related requested page However currently none XML schemas component descriptor recognize filter configurable element configured lt component gt lt property urlPattern gt lt gt lt gt would like one two things 1 Change component name still keep add element would get lt web gt could even consider moving filter honestly lightweight really everything core already controlled debug mode flag 2 Keep component name introduce new namespace corresponding add would get lt debug gt really hate solution 2 redeeming quality break applications might rely component name would affect debug mode production apps
possibility kill conversation stack conversationPropagation missing possible via annotation End API conversationPropagation tag may use etc conversation Maybe adding another enum type like endAll lt conversationPropagation endAll gt
Currently JpaIdentityStore uses username salt hashing user password want use different property salt need override JpaIdentityStore Since salt usually stored together user principal would easier select property used salt annotating without override IdentityStore component Using randomly generated salt generally accepted practice also possible generate salt value automatically creating user via IdentityManager API Suggestion new annotation UserPasswordSalt annotate property used salt Attributes 8211 whether generate random value length bits used Example usage class User UserPasswordSalt String getSalt UserPassword sha1 String getPasswordHash
Especially pageflow component need able specify component instance per nested conversation could addressed new scope could tweak CONVERSATION scoped components
hate seeing EntityManager em everywhere Perhaps need kind Startup component conversation scope
Currently using fix proposed allows manage pass additional files Pages component problem exception definition Exceptions component looks propose either refactoring processing exception nodes Pages component processed define exception handlers alternate implementation would Pages component notify Exceptions component processes way specific still encapsulated Exceptions compoent fed files use
currently allows combinations Stateless Name NoConversationHere Scope make sense cause problems possible Web Beans check things deployment
would like create implementation interface like done class goal enrich log message adding information String boolean method default access mode callable class package case LogImpl feature request please make String boolean method public workaround call method introspection Method getLogProvider new Class true LogProvider log LogProvider null new Object category wrapped
Hibernate XML mapping file load XML entity declaration classpath resolver used
CSV export take user defined separation character tab wrapping optional probably even allow fixed length column export
Component class Interceptors separated interceptors mean Interceptor InterceptorType type property see Interceptor Interceptor around within properties allows define sort order see also List Problem Since Interceptors stored two different lists since interceptors prioritary Interceptors programmer may write clause ignored example may want put Interceptor around Interceptor current Component code cases simply ignored Solution case bad mix Interceptor annotation definition newSort List method raise warning Proposition insert line 1020 amp amp Interceptor Interceptor around Interceptor since Interceptors always prioritary insert line 1025 amp amp Interceptor Interceptor within Interceptor since Interceptors always prioritary Pros programmer friendly Cons sorting takes bit time
Currently jBPM uses forked EL problem begin means see functions need fix problem ASAP
Currently possible specify page parameter wilcard
Similar RoR offering Allow developers declaratively map entities CRUD RESTful requests customizable resource URI generation strategy
allow level safety using interceptor better plain ol synchronization though
Currently major pain point since methods marked private static know example selectDataModelRow private got line index lt think really necessary caused lot pain us trying integrate RichFaces ExtendedDataModel DataScroller Basically getting ranges database RowCount would query database avoid using DataModel DataModelSelection completely know override installing Pages component pretty much everything Pages CustomPages change line talk give details want addition cool method public static String getRequestScheme FacesContext facesContext determines request secure looking URL scenarios would want override method Consider case SSL accelerator accelerator terminate SSL connection create new HTTP connection app server option pass HTTP header accelerator decrypts HTTPS packets app server knows request originally secure need redirect anything class designed well extension think improved
Page actions incredibly useful sometimes get way postback would like see postback attribute added lt action gt tag used disable action postback possible using conditional ugly lot typing logic would go private boolean isPostBack FacesContext facesContext return containsKey conditional alternative would lt action empty param gt
Currently assume EMF using JPA Tomcat J2EE case different solution
optimize replication stuff immutable objects readonly methods class level mark bean needing replication method level mark method changing state
component would like ability specify jbpmConfiguration jndi
Hi really know JIRA way hopefully nobody upset post first mailed Gavin told put JIRA currently work project uses Remoting directly find neat way handling errors client side Exceptions propagated Therefore changed transmit exceptions handled javascript part via another callback userManager function user alert user user function ex alert exception occured exception handler optional change would brake client code interested change reach heinzbeinz
conversation scope problematic scope FacesMessages Often developer may wish end conversation communitcate message next page However work since default FacesMessages conversation scoped component FacesMessages allowed Session scoped component project issue expense less correct concurrency situation multiple pages rendered time session may mix messages said would nice give project choice scope FacesMessages overridden Session scoped however static instance method currently looks conversation scope scope essentially overridden feature request change force lookup conversation scope allowing projects wish override FacesMessages scope wish plan committing change unless someone objects
Query extension
able define actions parameters view file important
amazing EL solve ELResolver
get rid list classes addComponents move debug components debug jar get rid special casing Scanner add Name foo
Let file specify JndiName
release review logging change infos debugs
lt gt options Begin furthermore lt gt options End
support EE6 features include support EJB features views singletons
SynchronizationInterceptor currently contains public boolean isInterceptorEnabled return getComponent amp amp getComponent logic moved method warning generated telling developer annotation ignored Synchronized annotation present component SFSB
fix updates allow namespaces used simplify component configuration ultimate goal able configure components like lt core init gt lt core debug gt true lt debug gt lt core jndiPattern gt jndiPattern lt jndiPattern gt lt init gt
Today must packaged root file ackward tools like NetBeans need write custom Ant target package Ideally could exist directory possibility
Currently possible evaluate EL refers current SFSB since would result call interceptor sets ref current bean object local interface request context introduce method context Put request variable named
map page context variable name
support stuff JavaBean components easy anyway
jPDL allows us make navigation decisions EL instead Java code allows lot loose coupling transparency also support stateless navigation ie lt page gt lt gt lt true gt lt render gt lt gt lt false gt lt render gt lt gt lt gt lt gt reduce lt page gt lt gt lt success gt lt render gt lt gt lt gt lt render gt lt gt lt gt lt gt emulate normal JSF navigation rule
following ideas need followed Multiple page actions per view id lt page gt lt action gt lt action gt lt gt suggestion first outcome stack lt gt lt gt lt gt lt gt lt gt
better declaratively ugly programmatic way
Currently boostrap SF using file way multiple SFs started automagically
save LOC could let extend Controller gives methods like getEntityManager logError addMessage
component uses Unwrap Observer time attempts invoke observer method unwrapped object usually causes NoSuchMethodException exception
pageflow
Norman pointed would nice could support OpenID eliminates need multiple usernames across different websites simplifying online experience Java implementations available download following page
option throwing exception instead returning boolean value
performance Identity extend AbstractMutable dirty checking
temporarily change principal
config option Identity use JAAS default configuration ie instead SeamLoginModule
Find way support awful things Probably parse headers copy paste code Tomcat Acegi whatever whichever least obfuscated
limit number required jars cases role based security used 91 without permissions 93 drools jars could excluded required dependecies
build support asynchronicity layering top EJB timers
would allow use configurable name unit testability
Something like would work lt page disabled gt lt navigation gt lt rule gt lt true gt lt redirect gt lt gt lt gt lt gt lt exception gt lt true gt lt redirect gt lt gt
Would useful debugging could add information target method object type IllegalStateException thrown Begin encountered LRC progress set true
would nice redirect directives would allow message severities defined happens lot scenarios exceptions cause redirect Instead user seeing INFO message want see ERROR WARN FacesMessage instance severity flag added message could using following lt exception gt lt gt lt redirect gt lt message error gt Login failed Please try lt gt lt gt lt gt
important inheritance
average application may use following filters may grow even time SeamRedirectFilter SeamExceptionFilter SeamMultipartFilter SeamServletFilter would nice able configure single master filter SeamFilter wraps filters could possibly even make filters components meaning could configured via instead
developing JSF converters validators noticed way add FacesMessage throwing Exception ConverterException ValidatorException respectively validator exception constructor ValidatorException Currently method returns FacesMessage method work wan na get message resource bundle key working i18n apps please add new method allows us get FacesMessage using resource bundle key something like public static FacesMessage createFacesMessageFromResourceBundle Severity severity String key Objec params
Create resource servlet serving resources javascript images css etc replace SeamRemotingServlet CaptchaServlet accept requests something like depending path delegate control various resource providers delegate Remoting delegate Captcha image provider delegate JSF Control javascript provider JS resources selectDate etc
simpler alternative lt restrict gt lt gt lt exception gt allow use lt pages gt lt page true gt lt gt lt pages gt like today would use special code instead exception handling work would also add message FacesContext like today
sure actually right booking example empty drl file required work even specify rule base leat rule file th rule base
AuthorizationException thrown would useful event raised way NotLoggedInException suitable event name might
CVS
order able send mails via gmail service required set 465 would good possible set additional options component
DataModeSelection names use scope owning component DataModel
suggested Gavin forum post able suppress logging specific exception types way people decide whether want NotLoggedInException etc errors cluttering log file lt exception MyException false gt lt gt
Currently start pageflow would good able able create process task well
allow users change passwords usernames logged change credentials need replace principal identity component currently done logout login manually user want automatically want destroy session
moment achieved Extracting parent conversation id Manager Calling endBeforeRedirect manually Would handy able true Either method set destroyBeforeRedirect flag true
least option performance semantic improvement
user uses XML makes mistake kind component
think good idea let users avoid editing creating validators converters Converter public class FooConverter implements Converter Converter public class FooConverter implements Converter Validator public class FooValidator implements Validator would scan guys startup register JSF
JSF component take value display image Also allows image manipulated scaled
Let navigation rules use redirect rules backed value expressions example lt navigation gt lt redirect gt lt gt
situations would like able destroy entire conversation stack particular action occurs say user cancels everything nested conversation exception occurs nested conversation etc currently accomplishing following private void endRootConversation Conversation conversation would prefer say something like End specifying endRoot Similar discussions forum
use transaction failed event rather message FacesMessage added SeamPhaseListener transaction fails Instead raise event would observed component named FacesTransactionEvents observer would add FacesMessage response allows developers override behavior perhaps add JSF log message see FacesSecurityEvents Implementation StatusMessages Wicket
Make ajax4jsf filter component filter Startup existence ajax4jsf classpath ajax4jsf filter params available set forceparser must also execute RedirectFilter
like test presence FacesMessage particular component verify password SeamTest subclass assert getFacesContext Msg component component tree Script add method assign message component way test getMessages instead accurate getMessage component
moved app JBoss page level stopped work correctly analyzing issue traced problem ResourceLoader loadBundle method uses getContextClassloader load bundles app files located WAR root along faceltes use work fine understanding classloader changed one retrieved via getContextClassloader access ServletContext anymore hence properties file found suggest two things 1 documentation makes explicit file localed explanation page level instead bit open interpretation could good reiterate also page level files need go 2 modify ResourceLoader scan also ServletContext bundle files would make compatible apps used work JBoss Notice ResourceLoader methods already use files nicely placed along file context root Thanks Riccardo
lt download 10 gt going create new general component allows user download file resource Excel file Document whatever plan create new UI component named UIDownload attributes like value contentType 1 UIDownload backing bean value still valid word world generate data allow byte OutputStreams 2 UIDownload creates DownloadResource stored DownloadStore 3 UIDownload generates HTML redirects browser ResourceServlet 4 ResourceServlet uses DownloadResource get hold data pushes browser reason building portlets impossible download files portal environment without additional servlet think good idea reuse existing stuff Patch coming soon make work
need put proper thought handling concurrent requests conversation also duplicate form submission second probably issue cos conversations mainly solve problem least catch standard exception EJB3 throws concurrent access SFSB
need allow easy redirection urls parameters redirect component following operations String Object String Redirect component stack example easily redirect login page page action redirect back requested page
model validation page param optional page parameters used capture input queries may appropriate run model validator possible disable model validator However default would model validator enabled
Request dev list improve performance One suggestion provide way interceptor still partial using annotations mark entities need processed disabling interceptor would probably less disruptive approach
Currently way define exception rollback rules ApplicationException dependency EJB3 reason closed without better solution really needs two things 1 API call set current tx rollback 2 kind Exception annotation allows control rollback potentially ending conversation possibly even deprecate end member HttpError Redirect new thing
would nice web filters could ordered Although pressing need right think would something needed eventually
putting config EntitySecurityListener lt gt lt gt lt gt lt gt lt gt lt gt lt gt trying run unit tests following exception thrown Caused active session context Without EntitySecurityListener config tests runs fine
know probably loaded issue please hear would nice replaced Component like everything else would allow pluggable Transaction Management providers pave way support Spring Managed Transactions JPA Local Transactions true Hibernate Local Transactions allow applications run without dependency microcontainer tomcat allow tighter Framework integration spring others would personally willing work making initial JTATransaction component replacement would also create SpringTransaction component proof concept extending Transaction component One problem see hand may interact transaction places ApplicationContext available However wonder confining transactions call might help simplify matters anyway example transaction cleanup could take place Destroy transaction component instead ExceptionFilter Also looked JTA replacement rather service abstraction like java webapp using enterprise services EJBs JCA JTA would required running tomcat simple web container resource local transaction manager Spring abstraction JPA Hibernate used sure tons problems looking worst case scenario issue would great place document refer rejected feature requests example think Mike
Currently way plug strategy decoding encoding conversationId need really properly support invocations
Support compiled groovy entities Support compiled groovy actions Support deployed actions debug mode Support hot redeployment actions debug mode hot filter used
already ArrayDataModel let let used DataModel also allow use DataModel Map Essentially would result ListDataModel lt gt DataModelSelectionIndex would know inject map key instead row index DataModelSelection would know inject map value instead probably even allow use Set case DataModelSelectionIndex defined
Support entities actions WAR Support dynamic Groovy files dev mode actions Support Groovy file compilation entities actions prod mode
SeamInterceptor detect contexts set set least EVENT context practice really want way also set CONVERSATION PROCESS contexts bit problematic since good way pass conversation id ids Need think one
java always correct
Expose addHandler method Exceptions component programatically add handlers Optionally expose protected method someone extend Exceptions component exceptions handlers defined alternate locations added component
would nice able match DataModelSelection DataModel provided deployment error thrown Use Case data table driven way currently select row passing var using Extended EL provides extended EL compatible component libraries Trinidad ugly go component bindings get current value selected row would nice hook DataModelSelection Something like lt framework allUsers select u User u gt facelets page 91 code 93 lt tr table allUsers user gt lt tr column gt lt f facet header gt lt tr outputText Customer gt lt facet gt lt tr commandLink useruserName gt lt column gt lt table gt Bean DataModelSelection allUsers List lt User gt userList
using generated class SubcategoriesList derived EntityQuery modified accept query passed calling object public class SubCategoriesList extends EntityQuery private SubCategories subCategories new SubCategories private String query private Integer maxResults public SubCategoriesList query select subCategories SubCategories subCategories 25 Override public String getEjbql return query Override public Integer getMaxResults return public SubCategories getSubCategories return subCategories Override public List lt String gt getRestrictions return RESTRICTIONS public List lt SubCategories gt forCategory String categoryId query select subCategories SubCategories subCategories categoryId return getResultList calling object instantiate class use method forCategory get list subcategories given category id reuse object calling refresh pass different category id gives resultlist looking EntityQuery Query classes see refresh nullify parsedEjbql therefore createQuery uses query everytime get resultlist
logic determining location hot deployable directory Java classes currently relies location name jar file may work jar file placed relative directory named breaks loaded application server different means different name instance running application using Jetty within Maven 2 location jar file local repository find particularly scary string offsets String hotDeployDirectory 9 dev get better understanding problem added logging messages capture path resolver logic jetty builds classpath maven repository detected jar Hot deploy directory place file directory things get little bit better still quite right detected jar Hot deploy directory propose directory loaded using servlet context way always directory likely located project developer Since feature intended strictly development seams make sense provided patch trunk
Class scan extended
noticed sessionId cookie sent client authentication remains even login succedeed could lead attack sessionId could easily sniffed would nice possible session switching server side forcing session invalidation new session creation true soon client authenticates Old session data copied new session case new sessionId cookie sent client client use ticket next requests mechanism collides actual implementations called think automatically execute task authentication phase
trying bind Map entry h inputText code successfully extracts value key page loaded submit page reloads error alongside field model validation failed String index range appears validateAll wraps h inputText work properly used way Gavin suggested submit JIRA see forum thread reference Code lt h form dataEntryForm gt lt h inputText asdf true biomarkers gt lt form gt session bean Code Map lt String String gt biomarkers new HashMap lt String String gt method code preps Map prior used waist
want inject request parameter bean like bellow using expression private Long id However gives error param value type String match field type Long think injections basic conversions String primitives primitive wrappers
would like extend class order integrate 3rd party libraries Acegi work need overload Identity subject Since subject attribute private Identity class access always directly use getter public protected setter override Could Identity class modified subject attribute made protected adding protected setter attribute 3 91 better solution think 93 always acceeding subject attribut via getter issue related post Thanks
Users ask
choices remembered specific section site whole site
jBPM currently support pluggable EL engine plug
enable ManagedEntityInterceptor needed MEI needed JavaBeans cluster conversation scoped EJBs conversation scoped Add configuration lt core init gt allow user enable clustering mode autodetect upgrade isInterceptorEnabled method take account
jBPM mechanism process composition work pageflow Need figure different mechanism AFAICT needs solved jBPM
Drools supports pulling globals
Currently resourceBundle component uses wierd locale use one Http request
Need add
