1.生成候选列表
①分词（1.还要根据驼峰命名法将标识符切割成单独的单词 2.对源代码文件中的所有单词全部进行分词，不区分代码和注释）finish
②去除停用词、标点符号和特定的词（如EasyClinic） finish
③使用CoreNLP提取词干并恢复词形 finish
④使用VSM计算源制品和目标制品的相似度（文中用了RETRO工具，但是配置不成功，所以直接用自己的代码）finish

2.排序并剔除链接并利用词嵌入模型计算目标制品的关系
①选候选列表中前k1%的链接（剔除后1-%k1的链接）finish
②利用Google Negative News text corpus训练word2vec模型 finish
③通过训练完后的word2vec模型计算目标制品之间的相似度 finish
④选择③中前k2%的链接 finish

3.重排序
①对2.①中的链接直接放到结果链接中 finish
②对2.④中的链接开始遍历，若目标制品{ti,tj}至少有一个存在于2.①中（假设为sk对ti），若tj对sk不在2.①中，则对sim(tj,sk)加上一个奖励δ*sim(tj,sk)(δ={vi,vi+1,...,vn}
的中位数，其中vi为第i个源制品对目标制品（在2.①中的）的最大相似度与最小相似度之差/2(即(maxi-mini)/2))
③将②中的新连接加到结果连接中
④排序
⑤从候选连接中按照阈值选取对应链接

实验说明k1为5%，k2为10%是最好的配置

requirements-code的dataset为iTrust
