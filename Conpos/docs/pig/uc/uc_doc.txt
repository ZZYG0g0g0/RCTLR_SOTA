pi pluggabl execut engin effort adapt pig work use apach tez tez nofollow te make chang allow clean execut engin abstract exist chang major pig alreadi rel abstract frontend backend chang attach commit essenti barebon chang tri chang structur pig differ compon much think interest see futur refactor area pig realli honor abstract frontend backend chang reinstat execut engin interfac tie togeth front end backend make chang pig deleg ee necessari creat mr execut engin implement interfac work includ chang exec type cycl execut engin classpath select appropri one do use java servic loader exactli map reduc choos framework use local distribut mode also tri make script state job stat pig stat abstract possibl current state think futur work need do perhap usag script state respons differ statist class touch ppn think abstract need perhap separ patch
pi add copi logic express would use way copi express copi creat new object chang make one object reflect copi reason overrid may well use copi sinc copi semant explicit sinc copi may second import reason defin copi separ routin pass plan argument updat express copi plan add usag would look like follow div preformat panel div content content logic express plan plan new logic express plan logic express express express copi plan immedi motiv would construct express constitut cnf form express
pi merg join support replic join predecessor sinc replic join trigger reduc chang output order merg join work
pi support ud fs foreach merg join right map side merg valid outright reject foreach udf div code panel div content content pre span privat span boolean accept op oper lo span throw logic physic translat except span lo span instanceof lo oper plan plan lo inner plan map side merg plan sink plan return ud fs lo lo span els span return span todo later class insid ud fs code panel div content content pre span todo dvryaboy span futur could relax span rule trace field span pass ud refus span udf work span join key transform field todo relax requir remov altogeth
pi allow avro storag use class schema manag avro schema sourc code java class avro would easi someth like blockquot p store use avro storag user rather pass first agur entir avro schema json pig script keep potenti outdat set avro schema file hdf classpath alreadi awar avro datum would good leverag fulli qualifi classnam
pi build udf replac multi give string search replac occurr search key replac valu let say string object replac b c deriv string use exist replac method replac replac replac replac b c propos udf replac multi gener syntax replac multi string replac multi b c advantag p function call reduc eas code well let know input udf piggi bank take base
pi authent kerbero use keytab file run kerbero secur environ user face limit job run long remain ticket lifetim kerbero ticket environ work ticket expir hour thu limit maximum job durat hour hadoop tool featur authent use kerbero keytab file essenti file contain encrypt form kerbero princip password use run applic request new ticket kerbero server initi ticket java hadoop applic commonli includ two line div code panel div content content pre span system properti java secur conf span conf user group inform user keytab xxxxx net span keytab way run apach flink base applic hour week kerbero secur yarn propos featur set relev kerbero valu pig script abl run pig job mani day secur propos look pig script div code panel div content content pre set java secur conf set job secur princip xxxxx netset job secur keytab iff set least last two aforement user group inform user keytab method call submit job cluster
pi pig need nativ keyword assum user job break easili three piec assum piec one three easili express pig piec two need write map reduc whatev reason perform someth pig could easili express legaci job import chang etc today user would either use map reduc entir job manual handl stitch togeth pig map reduc job instead pig provid nativ keyword would allow script pass datum stream underli system case map reduc semant nativ would vari underli system map reduc case would assum indic collect one fulli contain map reduc job pig would store datum invok map reduc job read result datum continu might look someth like div code panel div content content pre load myfil x load myotherfil b group c foreach b gener group span nativ jar e join x differ stream allow user insert arbitrari amount nativ process wherea stream allow insert one binari also differ stream datum pipe directli binari part pig pipelin pipelin would break datum write disk nativ block invok datum read back anoth altern say unnecessari user coordin java use p ig server interfac run pig call map reduc job explicitli advantag nativ keyword user need worri coordin job pig take care also user make use exist java applic without java programm
pi support flatten map p come across user ask quit time see support flatten instead user write udf
pi statist record read mapper reduc use counter framework hadoop initi interest find number record read particularli last job script sampl code access statist last string plan pig stat last job pi stat reduc plan plan null system record write pig stat last job pi stat outpu record p els system record write pig stat last job pi stat reduc outpu record patch contain test case includ test pig storag bin storag along one multipl mr job case
pi autocomplet complet alia autocomplet know keyword differ context would nice complet alia alia expect
pi logic optim push project continu work pi nofollow pi need add anoth rule logic optim push project ie prune column earli possibl
pi add limit statement work nest foreach like comput top result natur way express pig would div code panel div content content pre load use pig storag date span int count span int url b group date c foreach b order count e limit flatt yeah could write udf piggi bank function take top n result sinc limit alreadi exist statement seem like also work nest foreach exampl workaround code div code panel div content content pre c foreach b order count e flatt c
pi serial schema pig storag storag type find pig storag realli conveni storag datum interchang compress well import excel analysi environ howev pain come mainten column fix locat like add column would great load pig storag could read default schema schema file store datum store pig storag could store schema file test hadoop hdf pig local mode ignor file call schema directori part exampl chain pig script execut load use pig storag int b int p store use pig storag b load use pig storag b p describ b output someth like int b int
pi support cast chararray simpl type pig support cast chararray integ long float doubl bytearray convers fail reason overflow cast return null log warn
pi default parallel pig hadoop user specifi number reduc hadoop use reduc default valu differ previou hadoop default reduc number usual good reduc user want sure although user use parallel keyword specifi number reduc statement wordi need conveni way user express desir number reduc propos p add one properti default parallel pig user set default parallel script eg default parallel p default parallel hint pig pig free optim number reduc unlik parallel keyword current sinc mechan determin optim number reduc default parallel alway grant unless overrid parallel keyword p user put multipl default parallel insid script last entri take
pi ud fs script languag possibl write ud fs script languag python rubi etc free user need compil java gener jar etc also open pig programm prefer script languag java
pi acummul interfac ud fs add accumul interfac ud fs would allow take set number record time instead entir bag
pi performanc implement group oper speed process order datum gener group oper pig need mapper reduc aggreg do reduc incur disk mapper howev case input datum follow properti p record key group togeth datum sort key record key mapper input p group oper perform mapper thu remov overhead disk alan propos add hint group claus like one div code panel div content content pre load input use loader b group use span mapsid c foreach b gener propos addit use mapsid group mapsid group oper collect record give key buffer see key chang emit key bag record buffer assum key give record collect togeth thu need buffer across key expect loader implement datum system zebra ensur datum emit loader satisfi properti respons user loader guarante properti amp invok mapsid hint group claus pig runtim check error input group claus mapsid hint pig latin support group column includ group express group
pi provid much easi use accumul interfac pi accumul abl introduc new interfac iter accumul eval func name final cool thing patch build pure top exist accumul code well use pi accumul abl pi pi could easili work without say easi way write accumul without fork pig downsid way abl provid clean interfac use second thread need explor potenti perform implic give easi use pig stuff perform implic think long measur document worth much usabl interfac plu think bad one thread heavi lift anoth ferri valu sum could write div code panel div content content pre span public class sum span extend iter accumul eval func long span public span long iter tupl span throw io except span long sum span next sum span long return besid perform test need figur properli test sort thing particularli welcom advic front accumul current forc process whole bag valu call earli termin handi featur abl use empti add new interfac extend accumul
pi zebra sort tabl support zebra new featur zebra support sort datum storag storag librari zebra sort datum support creation use sort datum either pig task use zebra storag sort tabl keep datum total sort manner across file creat potenti mapper sort datum creation pig store oper input datum sort order new zebra tabl mark sort sort sort datum creation though map reduc task three new static method basic tabl output class provid allow help user achiev goal sort info allow user specifi sort column input tupl store sort key gener sort key help user gener key accept zebra sort key base upon schema sort column input sort datum read pig load oper pass string sort extra argument tabl loader constructor ask sort tabl sort datum read map reduc task new static method tabl input format class sort tabl call ask sort tabl read addit overload version new method call ask sort tabl specifi sort column releas sort tabl support sort ascend order descend order addit sort key must simpl type complex type recor collect multipl sort support order multipl sort key signific first sort column primari sort key second secondari sort key releas sort key store along sort column key origin creat result datum storag redund
pi nest cross use cross insid foreach nest statement one typic use case nest foreach cogroup two relat want flatten record key process natur achiev cross eg code panel div content content pre c cogroup user uid session foreach c cross cross user session flatten two input bagsfilt filter cross user session result foreach cross gener session user session nest foreach jira pi cross user write udf process bag user session much hard udf process flatten tupl especi true nest foreach statement pi support level nest foreach pi pi candid project googl summer code inform program find g soc nofollow g soc
pi custom partition add custom partition give control output partit key go add keyword languag e g partit ud similar syntax udf return number n number output partit
pi make pig work hadoop next need make pig work hadoop nex svn branch current nofollow
pi abl set job prioriti pig latin current user set job name pig latin say p set job name job name abil set prioriti would also nice patch small goal abl say p set job prioriti high p throw job creation except job control compil prioriti one allow string valu job prioriti enum low low normal high high case insensit make littl nice
pi support skew outer join similarli skew inner join skew outer join help scale presens join key fit memori
pi zebra order preserv sort tabl union output schema adopt schema union semant name output column appear one compon tabl result row valu column row compon tabl null otherwis hand output column appear multipl compon tabl type column compon tabl must ident otherwis except throw result row valu column row compon tabl column null otherwis order preserv result could index compon tabl project contain column name sourc tabl specifi compon tabl index output posit specifi project list underli tabl union sort tabl use special column name project caus except throw attempt make creat tabl column name sourc tabl excpet throw name reserv zebra virtual name
pi zebra support record row file split zebra tabl input format file current support split record sequenc number see jira hadoo split file record sequenc number hadoo hadoo want util provid record row input split support zebra one promin benefit case larg datum file creat much input split creat one big split one big detail new split work default user specifi split gener follow select big column group term datum size split file accord hdf block size mb get list physic byte offset output per file exampl let we assum file get invok file record num near offset get record num pair near byte offset exampl say get num num num stitch span error num span error num num span error num num span error num record num split column group respect form input split file input split need creat file scanner file scanner record num rec num long rec num note convers byte offset record number do mapper rather done job initi phase due perform concern sinc convers incur file read overhead
pi rank function like sql implement function give sort bag add tupl uniqu increas identifi without gap like rank sq candid project googl summer code inform program find pi g soc nofollow pi g soc function implement far avail http apach index header nofollow http apach index header
pi pass job conf udf specif configur inform ud fs user long ask way get job conf structur ud fs would also nice way pass properti front end back end ud fs store state pars time use patch part propos pi pass global configur udf pi pi provid way give user specifi configur file ud f mark depend bug duplic
pi ud f dynam invoc simpl java method need creat wrapper ud fs simpl java function creat unnecessari work pig user slow develop process produc lot trivial class use java reflect allow invok number method fli dynam creat gener udf accomplish
pi zebra zebra column group access control access control process tri read column group zebra abl handl allow vs disallow access secur eventuallt grant correspond hdf secur datum expect behavior column group permiss set p user select column permiss access zebra return error messag error permiss deni access column lt column name name gt access control appli entir column group column column group permiss
pi pig unit pig script test simplifi goal provid simpl unit framework enabl pig script easili ul altern squar li unit test li regress test li quickli cluster set test case code panel div content content pre test public void top queri span string arg span test span new pig test top queri pig arg span string input span span span span span span string output span span span output datum input span queri limit output p top queri pig div code panel div content content pre datum load chararra foreach generat egroup su count queri limit limit queri order store queri limit output local pigunit exectyp local properti mapreduc use cluster specifi classpath hadoo con di mini cluster default hadoo con dir class path li point exist cluster pigunit exectyp cluster properti would nice see idea could integr piggybank pig parser pig server could improv interfac order make pig unit compon base pig unit could build later ul altern squar li standalon mini cluster workspac test li standalon util read test configur gener test first prototyp open suggest definit take advantag test pig trunk div code panel div content content pre appli patch pig trunk ant pig trunk ant pig ant test dtest take min mapreduc miniclust test need split futur unit integr mani exampl div code panel div content content pre test pig test use standalon forget jar hadoo con dir cluster classpat
pi monitor kill runaway ud fs safeti measur sometim use monitor ud fs execut often prefer return null default valu instead time runaway evalu kill job past see complex regular express lead job failur due half dozen million particularli obnoxi would great give pig user lightweight way enabl udf monitor
pi add boolean datum type pig pig need boolean datum type pig depend volunt anyth beyond work plu unit test make work candid project googl summer code inform program find g soc nofollow g soc
pi support union oper merg base column name datum schema often make sens union column name schema rather posit column behavior exist union oper remain backward compat featur support use either new oper extend union support use claus think new oper call either unionschema merg anybodi suggest syntax p exampl p load x b load u unionschema p describ u u bytearray b byetarray c bytearray
pi emb pig script languag possibl emb pig call script languag let function defin script avail ud f spin pi nofollow pi let user defin ud fs script languag
pi support level nest foreach would like gener certain metric everi list impress context page like click page etc first group get click impress togeth would want iter one per comput metric sinc nest foreach within foreach support end write udf take bag comput metric would eleg keep logic iter record outsid pig script pseudocod would like write div code panel div content content pre let we say page context click rank span load page id rank click load page id rank b cogroup page id page id let we say b contain follow schema group record would b would page id page id page id page id page id c foreach b gener flatt flatt wont work current pig well basic would like repres entir foreach generat epag someud udf return valu like depend output page id page id page id dump c p p understand could altern flatten field b do group page id iter record call someudf appropri would oper afai candid project googl summer code inform program find g soc nofollow g soc
pi support pass bloom filter bloom udf p current bloom filter build bloom store hdf abl use bloom ud time bloom filter reus delet end script also forc multipl da gs pass scalar would simpl effici
pi support express need way foreach indic rest field common use case see pig person mani column datum want oper consid exampl store datum ten column user want perform cast one column div code panel div content content pre z foreach gener span int firstcol secondcol thridcol forthcol fifthcol sixthcol seventhcol eigthcol ninethcol tenthcol store z output obvious get bad user column ideal could transform someth like div code panel div content content pre z foreach gener span int firstcol span span rest store z output
pi ud fs abl indic file load distribut cach current way udf load file distribut cach
pi deep cast complex type pig handl deep cast bag gt bag tupl gt tupl eg follow script produc desir result div code panel div content content pre load txt bag tupl span doubl b foreach gener bag tupl span int dump result tupl still contain int insid tupl bag p pi cast complex type take effect pi pi fix case cast bytearray del gt take complex type includ inner type bag gt bag gt tupl still effect
pi add abil load datum column famili h base storag would nice load column column famili use short hand syntax like div preformat panel div content content cpu metric load system metric use h base storag cpu key assum column cpu sy cpu sy cpu user cpu user cpu column cpu metric would contain someth like div preformat panel div content content key cpu sy cpu sy cpu user cpu user
pi add macro expans pig latin product pig script grow longer long pig latin need integr standard program techniqu separ code share offer function modul propos add macro expans pig latin post ture complet pig nofollow ture complet pig brief summari propos syntax macro definit exist defin keyword expand allow definit pig macro syntax code panel div content content pre defin lt name gt lt param gt return lt alia gt pig latin exampl code panel div content content pre defin macro sortkey return c b filter c order b macro expans syntax code panel div content content pre lt alias gt lt macro name gt exampl use macro pig script div code panel div content content pre x load foo user address macro x user store bar script expand follow pig latin statement div code panel div content content pre x load foo user address phone macro macro b filter x order macro macro b user store bar note alia macro visibl outsid prefix macro name suffix instanc id avoid namespac collis macro expans complet replac function call recurs expans support macro import new import keyword use add macro defin anoth pig latin syntax code panel div content content pre span import pig latin file exampl code panel div content content pre span import note macro name global namespac
pi javascript support pig emb ud fs script languag attach patch propos javascript implement pig emb ud fs script similar jython implement use rhino provid jd differ ul altern squar li output schema provid name schema lt schema gt javascript annot decor function first class object li tupl convert object use input schema way around use output attach patch final yet particular lack unit see j transit closur see follow jir context pi nofollow pi pi nofollow pi
pi type map pig current pig map type untyp mean map valu alway bytearray ie unknown type pi pig give error messag cogroup tupl key differ inner type pi pi allow unknown type shuffl key somewhat reliev problem howev type map still benefici p user make semant use map valu type current user need explicitli cast map valu ugli though pi pig give error messag cogroup tupl key differ inner type pi pi allow unknown type shuffl key perform suffer raw compar unknown type instead need instanti valu object invok propos syntax type map map span error type map use place untyp map could occur exampl load txt map span error int b foreach gener map span error int map valu tupl b stream cat map int j chararray p map valu map lookup type map result datatyp map valu load txt map span error int b foreach gener key schema b b behavior untyp map remain
pi need special interfac penni inspector gadget propos penni tool need access pig new logic plan order inject code dataflow modifi plan need abl hand back modifi plan pig execut want open function gener user propos subclass pig server new class mark limit privat penni class provid call pars pig latin script return logic plan one take logic plan execut
pi enabl store func make intellig decis base job success failur process use pig variou datum process compon integr feel pig storag func awar job succeed creat problem storag func need upload result anoth ft anoth file system look db storag piggybank db storag nofollow db storag see essenti mechan task follow p creat recordwrit case open connect db open transact write record batch execut commit rollback depend task aproach work great task level work job level certain task succeed job fail partial record go get upload idea workaround current workaround fairli ugli creat java wrapper launch pig job upload db pig job success approach work realli integr pig
pi storag access layer layer need provid high level datum access abstract tabular view datum hadoop could free pig user implement datum code layer also includ columnar storag format order provid fast datum project cp datum serial schema languag manag physic storag metadata eventu could also support predic pushdown perform improv initi layer could contrib project pig becom hadoop subproject later
pi penni framework workflow instrument penni framework instrument pig workflow rewrit script insert monitor point aka agent provid commun framework trigger collect event agent
pi pig support effici merg join datum sourc nativ support point lookup join larg spars tabl exist pig merg join follow limit assum right side tabl must access sequenti record record perform well larg spars current implement merg join introduc interfac index load func load func support abil near give key read next record merg join physic oper call near first key split effect elimin split first subsequ key find subsequ join find read sequenti record right tabl look match leav method work well dens join tabl perform poorli larg spars tabl datum sourc support point lookup nativ h base propos enhanc add new join type pig latin specifi pig script join type caus merg join oper call near everi key rather first split
pi add builtin ud fs build use bloom filter bloom filter common way select limit set record move datum join heavi weight oper pig add ud fs support build use bloom filter
pi json loader json storag json loader json storag implement pig base alan implement book http oreilli store func html nofollow http oreilli store func html make minor chang drop jackson featur requir sinc hadoop bundl jackson new featur fail run hadoop use json format schema borrow dmitri schema implememt pig storag bug fix
pi need signatur eval func load func store func gener uniqu signatur load func store func user use key retriev properti udf context need similar mechan eval func
pi support effici tupl schema know pig tupl signific overhead due fact field object tupl contain primit field int long etc possibl avoid overhead would result signific memori save
pi pig pigrc specifi default script cach way specifi default statement pig help multipl user use pig interact mode
pi integr h cat ddl command pig would like run hcat ddl command insid pig script grunt use similar approach f sh grunt hcat creat tabl similar f sh plan add java api pig server
pi rubi jrubi ud f possibl write ud fs rubi ud fs regist way python javascript ud fs
pi support pluggabl pig progress notifc listen command line would conveni abl implement pig process notifc listen wire pig script jira support set listen constructor arg command perhap like p tt noformat pig listen j foo bar bat script pig tt noformat p listen take singl string constructor get pass tt foo bar bat
pi easi ud fs conveni eval func get abstract extens eval func make life easi person interest push say class pig class extend next class name tb type output eval func ou implement tt public schema schema schema input base gener type subclass provid common helper valid function increment counter good bad tupl datum pass use input work tupl size n primit eval func ou helper valid allow abil subclass implement tt public input primit use input singl primit posit function wrapper eval func wrap guava function implement function nofollow function allow ud fs use pig script like function class implement function preformat panel div content content defin udf function wrapper eval func function
pi support provid paramet python script emb pig script python way get user pass paramet python though pi need way deal param param file emb pig python pi pi add capabl read param pig script python still would nice featur sort post process happen python scrip base param
pi support multipl input schema avro storag barebon patch avro storag enabl support multipl input schema assumpt input consist avro file differ schema union e g flat record simpl illustr exampl attach avro storag union schema test tar gz run creat pig follow creat pig follow read avro pig
pi conveni mock loader storer simplifi unit test pig script test would look follow div code panel div content content pre pig server server span new pig server exec type loca tupl factori tf tupl factori instanc datum datum storag datum server pig context foo array list tupl tupl b tupl c server queri load foo use storag span complex script server queri store bar use storag iter tupl datum get span bar equal equal b equal c next get
pi ppnl get notifi plan get execut pig progress notif listner get notifi plan mr oper plan get execut allow listen inspect plan idea expect execut flow propos add follow method ppnl interfac mark evolv div code panel div content content pre span public void plan notif mr oper plan plan
pi allow set arbitrari jobconf pair insid pig program would use abl set arbitrari job conf pair insid pig program e g front cogroup wonder whether simpl way add featur expand set command function
pi provid method measur time spend ud fs debug slow job often use know whether time spend ud fs ud fs easi measur within framework let user option track metric
pi add path option pig storag recent add sourc option pig storag allow we add filenam record come return often user want whole path sourc file propos add path option
pi stream provid conf set environ hadoop stream convert jobconf properti environ variabl pig stream use featur pig stream provid
pi grunt shortcut featur aim provid shortcut frequent use command like illustr dump explain describ quit help etc featur inspir postgr psql shortcut tri implement simpl shortcut quit grunt shell use minim chang think featur help save mani keystrok user featur look use submit current patch review go ahead implement follow shortcut p lt alia gt illustr lt alia gt explain lt alia gt describ lt alia gt dump also use view inform store h catalog similar way psql lt alia gt display tabl display metadata etc p except delimit abl use charact shortcut pleas let know thought
pi pig output support recoveri hadoop hadoop output committ option support recoveri handl applic master get restart fail attempt possibl pig support recoveri
pi allow avro storag store oper use schema specifi uri attach patch make avro storag accept schema uri flag store alia schema use store content alia content file uri refer must exist fit somewher schema flag specifi schema inlin string flag specifi schema appear datum file
pi allow prefix add ur pig unit test run pig unit test use local file system use absolut path pig script test jail datum test use know folder
pi introduc syntax abl easili refer previous defin relat sometim feel like swim antl rs particular featur hard add support syntax like div code panel div content content pre load thing x span int b foreach gener x c foreach gener x foreach gener patch though need make sure chang anyth need add test
pi h base storag support set timestamp field current timestamp alway set current time millisecond option overrid propos configur set use second field timestamp column
pi allow default load store func configur pig storag use default load store func specifi would use make configur
pi piggybank function mimic claus sql order test hive write ud f mimic behavior sql claus thought would use share
pi allow pig use hive ud fs would nice pig provid interoper hive wrap hive udf pig use hive udf pig candid project googl summer code inform program find pi g soc nofollow pi g soc
pi add assert keyword oper pig assert oper use datum valid assert write script div code panel div content content pre load someth span int span int span assert gt cant neg span reason script fail assert violat
pi make pig work h base h base chang api incompat way follow ap h base storag pig use long mutat write wa boolean scan datum output also addit h base long avail one monolith archiv entir function break small piec tt tt
pi add xml format explain map reduc plan mortar need easi way script map reduc plan add xml output format map reduc plan make easi also add flag keep track store load origin script associ alia temporari gener pig
pi default split destin p split statement well default destin eg div code panel div content content pre split x lt z lt gt otherwis other tupl gt amp amp amp amp candid project googl summer code inform program find g soc nofollow g soc
pi pig use hadoop local mode small job pig use hadoop local mode small job mapper reduc mb datum
pi provid store func load func accumulo accumulo code allow read write pig work make robust would like tri get includ pig avoid necess bundl addit info current exist http apach nofollow http apach current code http apach git nofollow http apach git p need translat maven build ant ivi need figur support accumulo build differ depend ap
pi abil disabl pig command oper admin featur provid abil blacklist whitelist certain command oper pig expos could safe multiten environ exampl sh invok shell command set allow user chang config tremend use gener abil disabl would make pig safe platform goal allow administr abl control user script default behaviour would still filter appli command oper
pi new logic optim rule constant calcul pig use logic express simplifi simplifi express also calcul constant express optim rule buggi disabl default pi incorrect result filter filter logic express simplifi optim turn pi pi howev need featur especi push sinc deal complex constant express like replac express constant actual push ye user may manual calcul rewrit queri even rewrit sometim possibl consid case user want push datetim predic user write date udf sinc pig datetim jira provid new rule constant calcul much simpl much less error prone replac logic express simplifi
pi ship ud load func store func depend jar automat user use avro storag json storag orc storag need regist depend jar manual would much conveni provid mechan ud load func store func claim depend ship jar automat
pi h base storag support delet marker case write delet h base would use pig preced delet oper cassandr nofollow cassandr think valid use case pig especi consid h base delet realli write tombston marker
